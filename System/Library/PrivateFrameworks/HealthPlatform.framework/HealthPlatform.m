ValueMetadata *type metadata accessor for GeneratorDomain()
{
  return &type metadata for GeneratorDomain;
}

ValueMetadata *type metadata accessor for ContentKind()
{
  return &type metadata for ContentKind;
}

uint64_t sub_1C26031C0(unsigned __int8 *a1)
{
  return *a1;
}

unint64_t sub_1C26031CC(unint64_t *a1, uint64_t *a2)
{
  return sub_1C26073E8(*a1, *a2);
}

uint64_t sub_1C26031DC()
{
  return sub_1C277AED0();
}

uint64_t dispatch thunk of PluginInfo.bundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void destroy for SourceProfile(id *a1)
{
}

uint64_t static Logger.generation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB85FE8, (uint64_t)qword_1EBB85FD0, a1);
}

unsigned char *storeEnumTagSinglePayload for ContentKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 23;
        break;
    }
  }
  return result;
}

void sub_1C2603308(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      a2 = a1;
    }
    else {
      a2 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (v2 < 0) {
        a1 = v2;
      }
      else {
        a1 = v2 & 0xFFFFFFFFFFFFFF8;
      }
      goto LABEL_52;
    }
    uint64_t v5 = a2;
    uint64_t v6 = v2;
    goto LABEL_18;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v5 = a2;
    }
    else {
      uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v6 = v3;
LABEL_18:
    sub_1C267951C(v5, v6);
    return;
  }
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_44;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v15 >= v12) {
      return;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v12) {
        return;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v12) {
          return;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v7);
        if (!v16)
        {
          int64_t v7 = v15 + 3;
          if (v15 + 3 >= v12) {
            return;
          }
          unint64_t v16 = *(void *)(v8 + 8 * v7);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_43:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_44:
    uint64_t v18 = 8 * v14;
    v19 = *(void **)(*(void *)(v3 + 56) + v18);
    id v20 = *(id *)(*(void *)(v3 + 48) + v18);
    id v21 = v19;
    unint64_t v22 = sub_1C26731B4((uint64_t)v20);
    char v24 = v23;

    if ((v24 & 1) == 0)
    {

      return;
    }
    sub_1C2644ED8(0, &qword_1EBB842E0);
    id v25 = *(id *)(*(void *)(v2 + 56) + 8 * v22);
    char v26 = sub_1C277C030();

    if ((v26 & 1) == 0) {
      return;
    }
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v12) {
    return;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_43;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      return;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_43;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:
  MEMORY[0x1F4184BB8](a1, a2);
}

void sub_1C2603598(uint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_1C26035A8()
{
  return sub_1C277AED0();
}

uint64_t FeedItemContextEnvironment.description.getter(char a1)
{
  if (a1) {
    return 0x65746E4972657375;
  }
  else {
    return 0x756F72676B636162;
  }
}

void sub_1C260360C()
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)v0 + 16));
}

uint64_t dispatch thunk of FeedItemContext.pinnedContentManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

BOOL static FeedItemContextEnvironment.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1C2603640(uint64_t a1, uint64_t a2)
{
  return sub_1C2649F18(a1, a2, (uint64_t (*)(void))ContentKind.rawValue.getter);
}

uint64_t sub_1C2603658(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C2603640(*a1, *a2);
}

ValueMetadata *type metadata accessor for GeneratorDomain.Complexity()
{
  return &type metadata for GeneratorDomain.Complexity;
}

uint64_t GeneratorDomain.hkTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GeneratorDomain.contentKinds.getter()
{
  return swift_bridgeObjectRetain();
}

void GeneratorDomain.complexity.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

ValueMetadata *type metadata accessor for ProfileDisplayName()
{
  return &type metadata for ProfileDisplayName;
}

unint64_t sub_1C26036A0()
{
  return SourceProfile.debugDescription.getter(*v0);
}

ValueMetadata *type metadata accessor for SourceProfile()
{
  return &type metadata for SourceProfile;
}

uint64_t getEnumTagSinglePayload for SourceProfile(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for CountryRetrievalError()
{
  return &type metadata for CountryRetrievalError;
}

void type metadata accessor for HKOnboardingCompletionCountryCodeProvenance(uint64_t a1)
{
}

uint64_t dispatch thunk of GeneratorPipeline.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of GeneratorPipeline.domain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t getEnumTagSinglePayload for PluginFeedItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C268FF6C);
}

ValueMetadata *type metadata accessor for PluginFeedItemStorage()
{
  return &type metadata for PluginFeedItemStorage;
}

uint64_t sub_1C2603790@<X0>(uint64_t a1@<X8>)
{
  return sub_1C261A938(v1, a1);
}

uint64_t dispatch thunk of FeedItemContext.healthStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HealthExperienceStore.sharedBackgroundContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

id HealthAppPluginInfo.bundle.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t storeEnumTagSinglePayload for HealthAppPluginInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HealthAppPluginInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t dispatch thunk of PluginInfo.init(bundle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t static Logger.view.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB85990, (uint64_t)qword_1EBB85970, a1);
}

uint64_t sub_1C2603894()
{
  return sub_1C261AC1C(*(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t dispatch thunk of HealthPluginDelegate.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HealthPluginDelegate.makeGeneratorPipelines(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void sub_1C26038D0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x656D6F726863;
  if (*v1) {
    uint64_t v2 = 0x656D6F7268436F6ELL;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

ValueMetadata *type metadata accessor for SharableModelVersion()
{
  return &type metadata for SharableModelVersion;
}

uint64_t sub_1C260391C()
{
  return sub_1C26168A0(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t static Logger.medications.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(qword_1EBB854F0, (uint64_t)qword_1EBB854D8, a1);
}

uint64_t dispatch thunk of UnfairLock.unlock()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

void sub_1C2603970()
{
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
}

uint64_t dispatch thunk of UnfairLock.lock()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

void sub_1C260399C()
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 16));
}

uint64_t sub_1C26039A4()
{
  uint64_t result = sub_1C277A750();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C277BF20();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t CancellableProgressList.init()()
{
  type metadata accessor for UnfairLock();
  uint64_t v1 = swift_allocObject();
  unint64_t v2 = (_DWORD *)swift_slowAlloc();
  *(void *)(v1 + 16) = v2;
  *unint64_t v2 = 0;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v3;
  return v0;
}

uint64_t sub_1C2603ADC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v15 = v3 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v3 + 64);
  int64_t v16 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    sub_1C263FED0(*(void *)(v3 + 56) + 32 * i, (uint64_t)v20);
    sub_1C262FD34(v20, &v19);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1C26BBC4C();
      swift_allocError();
      swift_willThrow();
      return swift_release();
    }
    sub_1C26BB928();
    sub_1C263D360(v17, v18);
    sub_1C263D360(v17, v18);
    sub_1C26BBCA0(&qword_1EA3048B8, (void (*)(void))sub_1C26BBD0C);
    sub_1C277A480();
    sub_1C263CC84(v17, v18);
    if (v2)
    {
      swift_bridgeObjectRelease();
      sub_1C263CC84(v17, v18);
      swift_willThrow();
      sub_1C263CC84(v17, v18);
      return swift_release();
    }
    sub_1C263CC84(v17, v18);
    sub_1C2768950(v19);
    uint64_t result = sub_1C263CC84(v17, v18);
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v8 >= v16) {
      goto LABEL_29;
    }
    unint64_t v12 = *(void *)(v15 + 8 * v8);
    if (!v12) {
      break;
    }
LABEL_17:
    unint64_t v6 = (v12 - 1) & v12;
  }
  int64_t v13 = v8 + 1;
  if (v8 + 1 >= v16) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v15 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v8 + 2;
  if (v8 + 2 >= v16) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v15 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v8 + 3;
  if (v8 + 3 >= v16) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v15 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v8 + 4;
  if (v8 + 4 >= v16)
  {
LABEL_29:
    uint64_t result = swift_release();
    *a2 = v21;
    return result;
  }
  unint64_t v12 = *(void *)(v15 + 8 * v13);
  if (v12)
  {
LABEL_16:
    int64_t v8 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v16) {
      goto LABEL_29;
    }
    unint64_t v12 = *(void *)(v15 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_17;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C2603E00(void *a1)
{
  *(void *)(*a1
            + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_mergeChangesCancellable) = v1;
  swift_release();
  return swift_retain();
}

uint64_t static HealthAppPluginSource.shared.getter()
{
  if (qword_1EBB84FB8 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t Publishers.Proxy.init(delegate:)()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

void *sub_1C2603EE8(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1C2641054(0, a5, a6, MEMORY[0x1E4FBBE00]);
      unint64_t v12 = (void *)swift_allocObject();
      int64_t v13 = _swift_stdlib_malloc_size(v12);
      uint64_t v14 = v13 - 32;
      if (v13 < 32) {
        uint64_t v14 = v13 - 17;
      }
      v12[2] = v10;
      v12[3] = 2 * (v14 >> 4);
      uint64_t v15 = v12 + 4;
      if (v7) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v12 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[2 * v10 + 4]) {
          memmove(v15, a4 + 4, 16 * v10);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C264E500(0, v10, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t PluginFeedItem.actionHandlerClassName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

void sub_1C2604048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v4 = sub_1C277A610();
  }
  else {
    uint64_t v4 = 0;
  }
  swift_beginAccess();
  uint64_t v5 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = v4;
}

uint64_t sub_1C26040A8()
{
  uint64_t result = sub_1C277A750();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t PluginContentStateManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C260418C()
{
  sub_1C261B224();
  sub_1C277B8D0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EBB848A0 = 0xD00000000000001ELL;
  unk_1EBB848A8 = 0x80000001C278C220;
  return result;
}

uint64_t sub_1C26041F4()
{
  uint64_t result = sub_1C277A520();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C2604290()
{
  sub_1C26248B8(0, (unint64_t *)&qword_1EBB84F30, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - v1;
  uint64_t v3 = sub_1C277A750();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  type metadata accessor for DiskHealthExperienceStore();
  uint64_t v4 = swift_allocObject();
  uint64_t result = DiskHealthExperienceStore.init(overrideStoreLocation:observeExternalChanges:)((uint64_t)v2, 1);
  qword_1EBB84FA0 = v4;
  return result;
}

uint64_t PluginFeedItem.baseAutomationIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t sub_1C26043C0(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1C277B8C0();
    return sub_1C277B960();
  }
  return result;
}

uint64_t sub_1C260445C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C277B630();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C277B660();
  uint64_t result = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    uint64_t v48 = *(void *)(a1 + 16);
    v49 = v12;
    uint64_t v50 = v10;
    v51 = v7;
    uint64_t v52 = result;
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v47 = *(void *)(a1 + 24);
    swift_retain();
    if (v13)
    {
      uint64_t v14 = sub_1C26131DC();
      unint64_t v16 = v15;
    }
    else
    {
      unint64_t v16 = 0xE300000000000000;
      uint64_t v14 = 7104878;
    }
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C277B130();
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EBB86280);
    swift_retain_n();
    swift_bridgeObjectRetain();
    long long v19 = sub_1C277B100();
    os_log_type_t v20 = sub_1C277BD40();
    LODWORD(v46) = v20;
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v53 = v5;
    if (v21)
    {
      uint64_t v22 = swift_slowAlloc();
      v44 = (uint8_t *)v18;
      uint64_t v42 = v14;
      uint64_t v23 = v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v43 = v24;
      *(_DWORD *)uint64_t v23 = 136446466;
      v41[1] = v23 + 4;
      uint64_t v54 = v24;
      uint64_t aBlock = 91;
      unint64_t v56 = 0xE100000000000000;
      sub_1C277C9E0();
      id v45 = v3;
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
      swift_bridgeObjectRetain();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
      uint64_t aBlock = sub_1C263FDFC(aBlock, v56, &v54);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t aBlock = sub_1C263FDFC(v42, v16, &v54);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2601000, v19, (os_log_type_t)v46, "%{public}s Cancelling legacy generation for progress %s", (uint8_t *)v23, 0x16u);
      uint64_t v25 = v43;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v25, -1, -1);
      MEMORY[0x1C875D230](v23, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    sub_1C261AE94(*(void *)(a1 + 16));
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;

    *(void *)(a1 + 32) = 0;
    char v26 = *(void **)(a1 + 40);
    if (v26)
    {
      swift_retain_n();
      id v27 = v26;
      v28 = sub_1C277B100();
      os_log_type_t v29 = sub_1C277BD40();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        id v45 = v27;
        v31 = (uint8_t *)v30;
        uint64_t v32 = swift_slowAlloc();
        uint64_t v46 = v4;
        *(_DWORD *)v31 = 136446210;
        v44 = v31 + 4;
        uint64_t v54 = v32;
        uint64_t aBlock = 91;
        unint64_t v56 = 0xE100000000000000;
        sub_1C277C9E0();
        sub_1C277B8D0();
        swift_bridgeObjectRelease();
        sub_1C277B8D0();
        swift_bridgeObjectRetain();
        sub_1C277B8D0();
        swift_bridgeObjectRelease();
        sub_1C277B8D0();
        uint64_t aBlock = sub_1C263FDFC(aBlock, v56, &v54);
        uint64_t v4 = v46;
        sub_1C277C0D0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v28, v29, "%{public}s Cancelling original legacy generation progress", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v32, -1, -1);
        v33 = v31;
        id v27 = v45;
        MEMORY[0x1C875D230](v33, -1, -1);
      }
      else
      {

        swift_release_n();
      }

      *(void *)(a1 + 40) = 0;
      objc_msgSend(v27, sel_cancel);
    }
    uint64_t v34 = swift_allocObject();
    uint64_t v36 = v47;
    uint64_t v35 = v48;
    *(void *)(v34 + 16) = v48;
    *(void *)(v34 + 24) = v36;
    v59 = sub_1C26FB5F8;
    uint64_t v60 = v34;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v56 = 1107296256;
    v57 = sub_1C26254FC;
    v58 = &block_descriptor_18;
    v37 = _Block_copy(&aBlock);
    swift_retain();
    v38 = v49;
    sub_1C277B650();
    uint64_t v54 = MEMORY[0x1E4FBC860];
    sub_1C2633B78((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
    v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C2633D88(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C264C2D8((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v39);
    v40 = v51;
    sub_1C277C120();
    MEMORY[0x1C875BDD0](0, v38, v40, v37);
    _Block_release(v37);
    sub_1C261AE94(v35);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v4);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v52);
    return swift_release();
  }
  return result;
}

void HealthAppForegroundWorkManager.foregroundWithFireOnceBarrier(_:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1C2650E60(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t initializeBufferWithCopyOfBuffer for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t type metadata accessor for HealthAppOrchestrationServer()
{
  return self;
}

void sub_1C2604CD0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277C0B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t _s14HealthPlatform22BasicGeneratorPipelineVwxx_0(uint64_t a1)
{
  swift_release();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2604D70(uint64_t result, char a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 40;
    do
    {
      uint64_t v5 = *(void (**)(char *))(v4 - 8);
      char v6 = a2;
      swift_retain();
      v5(&v6);
      swift_release();
      v4 += 16;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t HealthAppForegroundWorkManager.foregroundWithLegacyGeneration(completion:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1C2650E40(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1C2604E88(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  *(void *)(*(void *)a1 + 24) = v2;
  id v4 = v2;
}

uint64_t PluginFeedItem.actionHandlerUserData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C2641B58(*(void *)(v2 + 56), *(void *)(v2 + 64));
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t PluginFeedItem.sortHint.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for PluginFeedItem();
  *(void *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*PluginFeedItem.keywords.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C2604F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return DatabaseAccessibilityDispatchTarget.run(_:for:context:completion:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C2604F98()
{
  return sub_1C2604FBC();
}

uint64_t sub_1C2604FBC()
{
  return sub_1C277B2E0();
}

id static NSUserDefaults.healthAppShared.getter()
{
  if (qword_1EBB84910 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB84900;

  return v0;
}

uint64_t sub_1C2605080(void **a1)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = *a1;
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_1C2690D44(0, v3[2] + 1, 1, v3);
  }
  unint64_t v5 = v3[2];
  unint64_t v4 = v3[3];
  if (v5 >= v4 >> 1) {
    uint64_t v3 = sub_1C2690D44((void *)(v4 > 1), v5 + 1, 1, v3);
  }
  v3[2] = v5 + 1;
  char v6 = &v3[2 * v5];
  v6[4] = sub_1C273AE48;
  v6[5] = v2;
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t type metadata accessor for RecursiveUnfairLock()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for PluginSharableModelChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1C26051DC(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1C26051DC(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 4u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C26051F0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C26488D8(0, &qword_1EBB84A78, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t OrchestrationWorkQueueStatusObserver.finishedWorkPlans.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 14;
  os_unfair_lock_lock(v1 + 14);
  sub_1C26053E4(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1C26053E4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 8);
  return result;
}

id _s14HealthPlatform0A15AppPluginSourceC24allowedBundleIdentifiersShySSGSgyFZ_0()
{
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v1 = result;
    unsigned int v2 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v2)
    {
      sub_1C277B850();
      id v3 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
      unsigned __int8 v4 = (void *)sub_1C277B820();
      swift_bridgeObjectRelease();
      id v5 = objc_msgSend(v3, sel_initWithSuiteName_, v4);

      if (!v5) {
        return v5;
      }
      unint64_t v6 = (void *)sub_1C277B820();
      id v7 = objc_msgSend(v5, sel_arrayForKey_, v6);

      if (v7)
      {
        uint64_t v8 = sub_1C277BA40();

        uint64_t v9 = sub_1C26A11D8(v8);
        swift_bridgeObjectRelease();
        if (v9)
        {
          id v5 = (id)sub_1C2648348(v9);
          swift_bridgeObjectRelease();
          return v5;
        }
      }
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t static StorageLocations.clientDirectory.getter()
{
  uint64_t v0 = sub_1C277A750();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  unsigned __int8 v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v9 - v5;
  static StorageLocations.homeMobileDirectory.getter();
  sub_1C277A6B0();
  id v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  sub_1C277A6B0();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

void sub_1C26056A4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

unint64_t sub_1C2605730(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C264DF5C();
  uint64_t v2 = sub_1C277C5F0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C264E670(v6, (uint64_t)&v13);
    uint64_t v7 = v13;
    unint64_t result = sub_1C261333C(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1C262FD34(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1C2605848(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C263C13C(0, (unint64_t *)&qword_1EBB84A70, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C26059B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C277AA10();
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v54 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)&v46 - v7;
  sub_1C2605F28(0, &qword_1EBB84298, (uint64_t (*)(uint64_t))sub_1C267C1E4, MEMORY[0x1E4FBB718]);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v10);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v53 = (void **)((char *)&v46 - v14);
  uint64_t v49 = a1;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v16 = a1 + 64;
  uint64_t v15 = v17;
  uint64_t v18 = 1 << *(unsigned char *)(v16 - 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v15;
  int64_t v55 = 0;
  uint64_t v56 = v57 + 16;
  uint64_t v50 = (void (**)(char *, char *, uint64_t))(v57 + 32);
  v51 = (void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v47 = v16;
  int64_t v48 = (unint64_t)(v18 + 63) >> 6;
  int64_t v46 = v48 - 1;
  uint64_t v52 = a2;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v22 = v21 | (v55 << 6);
      uint64_t v23 = v53;
LABEL_8:
      uint64_t v24 = *(void **)(*(void *)(v49 + 48) + 8 * v22);
      uint64_t v25 = v57;
      unint64_t v26 = *(void *)(v49 + 56) + *(void *)(v57 + 72) * v22;
      sub_1C267C1E4();
      uint64_t v28 = v27;
      (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(&v12[*(int *)(v27 + 48)], v26, v4);
      *(void *)uint64_t v12 = v24;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v12, 0, 1, v28);
      id v29 = v24;
      goto LABEL_27;
    }
    int64_t v30 = v55 + 1;
    uint64_t v23 = v53;
    if (__OFADD__(v55, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v30 < v48)
    {
      unint64_t v31 = *(void *)(v47 + 8 * v30);
      if (v31) {
        goto LABEL_12;
      }
      int64_t v32 = v55 + 2;
      ++v55;
      if (v30 + 1 < v48)
      {
        unint64_t v31 = *(void *)(v47 + 8 * v32);
        if (v31) {
          goto LABEL_15;
        }
        int64_t v55 = v30 + 1;
        if (v30 + 2 < v48)
        {
          unint64_t v31 = *(void *)(v47 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_12;
          }
          int64_t v32 = v30 + 3;
          int64_t v55 = v30 + 2;
          if (v30 + 3 < v48) {
            break;
          }
        }
      }
    }
LABEL_26:
    sub_1C267C1E4();
    uint64_t v28 = v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v12, 1, 1, v33);
    unint64_t v20 = 0;
LABEL_27:
    sub_1C267C258((uint64_t)v12, (uint64_t)v23, &qword_1EBB84298, (uint64_t (*)(uint64_t))sub_1C267C1E4);
    sub_1C267C1E4();
    int v34 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v23, 1, v28);
    BOOL v35 = v34 == 1;
    if (v34 == 1) {
      return v35;
    }
    uint64_t v36 = *v23;
    (*v50)(v8, (char *)v23 + *(int *)(v28 + 48), v4);
    uint64_t v37 = v52;
    v38 = v8;
    unint64_t v39 = sub_1C26732F4((uint64_t)v36);
    char v41 = v40;

    if ((v41 & 1) == 0)
    {
      (*v51)(v38, v4);
      return 0;
    }
    uint64_t v42 = v57;
    uint64_t v43 = v54;
    (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v54, *(void *)(v37 + 56) + *(void *)(v57 + 72) * v39, v4);
    sub_1C267B0A8(&qword_1EBB83920, 255, MEMORY[0x1E4F66798]);
    char v44 = sub_1C277B810();
    id v45 = *(void (**)(char *, uint64_t))(v42 + 8);
    v45(v43, v4);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v45)(v38, v4);
    int64_t v8 = v38;
    if ((v44 & 1) == 0) {
      return v35;
    }
  }
  unint64_t v31 = *(void *)(v47 + 8 * v32);
  if (v31)
  {
LABEL_15:
    int64_t v30 = v32;
LABEL_12:
    unint64_t v20 = (v31 - 1) & v31;
    unint64_t v22 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v55 = v30;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v30 >= v48)
    {
      int64_t v55 = v46;
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v47 + 8 * v30);
    ++v32;
    if (v31) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

void sub_1C2605F28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for Plugin()
{
  return self;
}

uint64_t type metadata accessor for FeedSection()
{
  return self;
}

uint64_t RecursiveUnfairLock.init()()
{
  uint64_t v1 = (void *)swift_slowAlloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = 0;
  return v0;
}

id static Feed.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1C277B820();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t initializeBufferWithCopyOfBuffer for PluginFeedItem(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[3];
    unsigned __int8 v10 = *((unsigned char *)a2 + 32);
    swift_bridgeObjectRetain();
    sub_1C263D4D4(v8, v9, v10);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v10;
    *(unsigned char *)(a1 + 33) = *((unsigned char *)a2 + 33);
    uint64_t v11 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v11;
    uint64_t v12 = a2 + 7;
    unint64_t v13 = a2[8];
    swift_bridgeObjectRetain();
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 56) = *v12;
    }
    else
    {
      uint64_t v15 = *(void *)v12;
      sub_1C263D360(v15, v13);
      *(void *)(a1 + 56) = v15;
      *(void *)(a1 + 64) = v13;
    }
    uint64_t v16 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v16;
    uint64_t v17 = a2 + 11;
    unint64_t v18 = a2[12];
    swift_bridgeObjectRetain();
    if (v18 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 88) = *v17;
    }
    else
    {
      uint64_t v19 = *(void *)v17;
      sub_1C263D360(v19, v18);
      *(void *)(a1 + 88) = v19;
      *(void *)(a1 + 96) = v18;
    }
    uint64_t v20 = a3[11];
    unint64_t v21 = (char *)(a1 + v20);
    unint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = type metadata accessor for RelevantDateInterval();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      sub_1C263D4EC(0);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v26 = sub_1C277A520();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v21, v22, v26);
      *(void *)&v21[*(int *)(v23 + 20)] = *(void *)&v22[*(int *)(v23 + 20)];
      *(void *)&v21[*(int *)(v23 + 24)] = *(void *)&v22[*(int *)(v23 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v27 = a3[13];
    *(unsigned char *)(a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *(void *)(a1 + v27) = *(uint64_t *)((char *)a2 + v27);
    uint64_t v28 = a3[15];
    *(void *)(a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    id v29 = (void *)(a1 + v28);
    int64_t v30 = (uint64_t *)((char *)a2 + v28);
    uint64_t v58 = v30[1];
    *id v29 = *v30;
    v29[1] = v58;
    uint64_t v31 = a3[17];
    *(void *)(a1 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    *(void *)(a1 + v31) = *(uint64_t *)((char *)a2 + v31);
    uint64_t v32 = a3[18];
    uint64_t v33 = a3[19];
    v59 = *(void **)((char *)a2 + v32);
    *(void *)(a1 + v32) = v59;
    int v34 = (void *)(a1 + v33);
    BOOL v35 = (uint64_t *)((char *)a2 + v33);
    uint64_t v57 = v35[1];
    *int v34 = *v35;
    v34[1] = v57;
    uint64_t v36 = a3[20];
    uint64_t v37 = a3[21];
    v38 = (void *)(a1 + v36);
    unint64_t v39 = (uint64_t *)((char *)a2 + v36);
    uint64_t v40 = v39[1];
    void *v38 = *v39;
    v38[1] = v40;
    char v41 = (void *)(a1 + v37);
    uint64_t v42 = (uint64_t *)((char *)a2 + v37);
    uint64_t v43 = v42[1];
    *char v41 = *v42;
    v41[1] = v43;
    uint64_t v44 = a3[23];
    *(void *)(a1 + a3[22]) = *(uint64_t *)((char *)a2 + a3[22]);
    *(unsigned char *)(a1 + v44) = *((unsigned char *)a2 + v44);
    uint64_t v45 = a3[25];
    *(unsigned char *)(a1 + a3[24]) = *((unsigned char *)a2 + a3[24]);
    *(unsigned char *)(a1 + v45) = *((unsigned char *)a2 + v45);
    uint64_t v46 = a3[26];
    uint64_t v47 = a3[27];
    int64_t v48 = (void *)(a1 + v46);
    uint64_t v49 = (uint64_t *)((char *)a2 + v46);
    uint64_t v50 = v49[1];
    *int64_t v48 = *v49;
    v48[1] = v50;
    v51 = (void *)(a1 + v47);
    uint64_t v52 = (uint64_t)a2 + v47;
    uint64_t v53 = *(uint64_t *)((char *)a2 + v47);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v54 = v59;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v53)
    {
      uint64_t v55 = *(void *)(v52 + 8);
      void *v51 = v53;
      v51[1] = v55;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v51 = *(_OWORD *)v52;
    }
    *(unsigned char *)(a1 + a3[28]) = *((unsigned char *)a2 + a3[28]);
  }
  return a1;
}

uint64_t sub_1C26064E0()
{
  return sub_1C277B9F0();
}

unint64_t sub_1C2606530()
{
  unint64_t result = qword_1EBB85CF8;
  if (!qword_1EBB85CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85CF8);
  }
  return result;
}

uint64_t sub_1C2606584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C277B630();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C277B660();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 3) == 1)
  {
    uint64_t v40 = v14;
    char v41 = v11;
    uint64_t v42 = v13;
    uint64_t v44 = v8;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v43 = v9;
    uint64_t v17 = sub_1C277B130();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EBB86280);
    swift_retain_n();
    unint64_t v18 = sub_1C277B100();
    os_log_type_t v19 = sub_1C277BD40();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v37 = a3;
      uint64_t v22 = v21;
      aBlock[0] = v21;
      uint64_t v38 = a4;
      uint64_t v39 = v4;
      *(_DWORD *)uint64_t v20 = 136446210;
      uint64_t v23 = sub_1C260C35C();
      uint64_t v46 = sub_1C263FDFC(v23, v24, aBlock);
      a4 = v38;
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v18, v19, "%{public}s Fire once already completed before, calling barrier immediately", v20, 0xCu);
      swift_arrayDestroy();
      uint64_t v25 = v22;
      a3 = v37;
      MEMORY[0x1C875D230](v25, -1, -1);
      MEMORY[0x1C875D230](v20, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = a3;
    *(void *)(v32 + 24) = a4;
    aBlock[4] = (uint64_t)sub_1C26FB7BC;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C26254FC;
    aBlock[3] = (uint64_t)&block_descriptor_68;
    uint64_t v33 = _Block_copy(aBlock);
    swift_retain();
    sub_1C277B650();
    uint64_t v46 = MEMORY[0x1E4FBC860];
    sub_1C2633B78((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
    int v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C2633D88(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C264C2D8((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v34);
    BOOL v35 = v41;
    uint64_t v36 = v44;
    sub_1C277C120();
    MEMORY[0x1C875BDD0](0, v16, v35, v33);
    _Block_release(v33);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v36);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v42);
    return swift_release();
  }
  else
  {
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a3;
    *(void *)(v26 + 24) = a4;
    uint64_t v27 = *(void **)(a1 + 8);
    swift_retain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C264E498(0, v27[2] + 1, 1, v27);
      uint64_t v27 = (void *)result;
    }
    unint64_t v30 = v27[2];
    unint64_t v29 = v27[3];
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C264E498((void *)(v29 > 1), v30 + 1, 1, v27);
      uint64_t v27 = (void *)result;
    }
    v27[2] = v30 + 1;
    uint64_t v31 = &v27[2 * v30];
    v31[4] = sub_1C264E920;
    v31[5] = v26;
    *(void *)(a1 + 8) = v27;
  }
  return result;
}

void SourceProfile.hash(into:)(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1C277C8D0();
    id v3 = a2;
    sub_1C277C040();
  }
  else
  {
    sub_1C277C8D0();
  }
}

void sub_1C2606B40()
{
  uint64_t v1 = sub_1C277B6C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v5 = *(void **)(v0 + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCBF0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1C277B6F0();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    uint64_t v7 = *(os_unfair_lock_s **)(v0
                              + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
    uint64_t v8 = (uint64_t)&v7[4];
    uint64_t v9 = v7 + 16;
    os_unfair_lock_lock(v7 + 16);
    sub_1C2650B90(v8);
    os_unfair_lock_unlock(v9);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C2606C84(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);

  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t type metadata accessor for PinnedContentManager()
{
  return self;
}

uint64_t objectdestroy_17Tm()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t type metadata accessor for CancellableProgressList()
{
  return self;
}

uint64_t initializeWithCopy for FeedItemGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  int v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v6 = *(void **)(a2 + 48);
  uint64_t v7 = *(void **)(a2 + 56);
  char v8 = *(unsigned char *)(a2 + 64);
  id v9 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C2646704(v5, v6, v7, v8);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v8;
  return a1;
}

void sub_1C2606E24(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v11 = sub_1C277B620();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 8))
  {
    uint64_t v15 = *(void *)(a1 + 8);
  }
  else
  {
    sub_1C26482E4(a2 + 16, (uint64_t)v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval, v11);
    type metadata accessor for ForegroundTask(0);
    swift_allocObject();
    uint64_t v15 = sub_1C260A69C(v21, (uint64_t)v14);
    *(void *)(a1 + 8) = v15;
    swift_retain();
  }
  swift_retain();
  id v16 = sub_1C2614500(a3, a4);
  if (*(unsigned char *)a1 != 1) {
    goto LABEL_7;
  }
  uint64_t v17 = *(os_unfair_lock_s **)(v15
                             + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
  unint64_t v18 = v17 + 4;
  os_log_type_t v19 = v17 + 16;
  os_unfair_lock_lock(v17 + 16);
  sub_1C2650B2C(v18);
  if (!v5)
  {
    os_unfair_lock_unlock(v19);
LABEL_7:
    swift_release();
    *a5 = v16;
    return;
  }
  os_unfair_lock_unlock(v19);
  __break(1u);
}

void sub_1C2606FE4()
{
  uint64_t v1 = sub_1C277B6C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCBF0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1C277B6F0();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    uint64_t v7 = *(os_unfair_lock_s **)(v0
                              + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
    uint64_t v8 = (uint64_t)&v7[4];
    id v9 = v7 + 16;
    os_unfair_lock_lock(v7 + 16);
    sub_1C2650BCC(v8);
    os_unfair_lock_unlock(v9);
  }
  else
  {
    __break(1u);
  }
}

id sub_1C2607128(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = *a2;

  return v3;
}

uint64_t sub_1C2607190()
{
  return sub_1C2630FCC();
}

uint64_t sub_1C26071B4()
{
  return sub_1C2630C44();
}

uint64_t PluginFeedItem.associatedHKTypes.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PluginFeedItem() + 52);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t PluginFeedItem.keywords.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PluginFeedItem() + 68);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t PluginFeedItem.indexForSearch.setter(char a1)
{
  uint64_t result = type metadata accessor for PluginFeedItem();
  *(unsigned char *)(v1 + *(int *)(result + 96)) = a1;
  return result;
}

uint64_t Subscribers.SubscriptionStatus.upstream.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C2630D78(v1, (uint64_t)v4);
  if (v5 == 1 || !v5) {
    return sub_1C261F308(v4, a1);
  }
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return sub_1C2630BCC((uint64_t)v4);
}

void sub_1C26072F0(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState);
  uint64_t v4 = (uint64_t)&v3[4];
  char v5 = v3 + 16;
  os_unfair_lock_lock(v3 + 16);
  sub_1C26157DC(v4, a1);

  os_unfair_lock_unlock(v5);
}

uint64_t type metadata accessor for DiskHealthExperienceStore()
{
  return self;
}

unint64_t sub_1C2607388(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if ((sub_1C26073E8(a1[1], a2[1]) & 1) == 0) {
    return 0;
  }
  unint64_t result = (v2 | v3) == 0;
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    return (unint64_t)objc_msgSend((id)v2, sel_isEqual_, v3);
  }
  return result;
}

unint64_t sub_1C26073E8(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  unint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  unint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = 8 * v11;
    uint64_t v16 = *(void *)(*(void *)(v3 + 56) + v15);
    unint64_t result = sub_1C2673248(*(void *)(*(void *)(v3 + 48) + v15));
    if ((v17 & 1) == 0 || *(void *)(*(void *)(a2 + 56) + 8 * result) != v16) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PluginData()
{
  return self;
}

uint64_t sub_1C26075D4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C264E000(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x1C875C230](i, a1);
        sub_1C2644ED8(0, &qword_1EBB84920);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C264E000(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1C264E000(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_1C262FD34(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      unint64_t v8 = (id *)(a1 + 32);
      sub_1C2644ED8(0, &qword_1EBB84920);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C264E000(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1C264E000(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_1C262FD34(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t destroy for FeatureStatusInputSignal.State()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2607874()
{
  sub_1C277B850();
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v1 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2) {
    return (uint64_t)v2;
  }
  sub_1C277C2D0();
  swift_bridgeObjectRelease();
  sub_1C277B850();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C277C560();
  __break(1u);
  return result;
}

uint64_t sub_1C260799C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C264E068(v4, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = MEMORY[0x1E4FBC868];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = (void *)(v5 + 80);
    do
    {
      uint64_t v8 = *(v7 - 1);
      uint64_t v9 = *v7;
      uint64_t v10 = *(v7 - 3);
      uint64_t v11 = *(v7 - 2);
      uint64_t v12 = *(v7 - 4);
      long long v17 = *((_OWORD *)v7 - 3);
      uint64_t v18 = v12;
      uint64_t v19 = v10;
      uint64_t v20 = v11;
      uint64_t v21 = v8;
      uint64_t v22 = v9;
      id v13 = (id)v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C26D9378(&v23, &v17);
      v7 += 7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease_n();
    uint64_t v14 = v23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC868];
  }
  uint64_t v15 = sub_1C2629BC0(v14, 1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v15;
  return result;
}

void sub_1C2607B30(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C277B620();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 8))
  {
    uint64_t v9 = *(void *)(a1 + 8);
  }
  else
  {
    sub_1C26482E4(a2 + 16, (uint64_t)v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval, v5);
    type metadata accessor for ForegroundTask(0);
    swift_allocObject();
    uint64_t v9 = sub_1C260A69C(v14, (uint64_t)v8);
    *(void *)(a1 + 8) = v9;
    swift_retain();
  }
  swift_retain();
  sub_1C260F3C8();
  if (*(unsigned char *)a1 != 1) {
    goto LABEL_7;
  }
  uint64_t v10 = *(os_unfair_lock_s **)(v9
                             + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
  uint64_t v11 = v10 + 4;
  uint64_t v12 = v10 + 16;
  os_unfair_lock_lock(v10 + 16);
  sub_1C2650B14(v11);
  if (!v2)
  {
    os_unfair_lock_unlock(v12);
LABEL_7:
    swift_release();
    return;
  }
  os_unfair_lock_unlock(v12);
  __break(1u);
}

id static NSOperationQueue.makeSerial(name:qos:)(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  objc_msgSend(v5, sel_setMaxConcurrentOperationCount_, 1);
  if (a2) {
    a2 = (void *)sub_1C277B820();
  }
  objc_msgSend(v5, sel_setName_, a2);

  objc_msgSend(v5, sel_setQualityOfService_, a3);
  return v5;
}

uint64_t sub_1C2607D7C()
{
  id v1 = *(id *)(v0 + 32);
  uint64_t v2 = sub_1C277BD50();

  return v2;
}

uint64_t sub_1C2607DCC()
{
  return sub_1C277C910();
}

uint64_t sub_1C2607E10()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C2607F10(uint64_t a1, uint64_t a2)
{
  sub_1C264C860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t HealthAppPluginSource.loadedPlugins()()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 7;
  os_unfair_lock_lock(v1 + 7);
  sub_1C2607FD4(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1C2607FD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PluginContentStateManager()
{
  return self;
}

void destroy for FeedItemGenerator(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v3 = *(void **)(a1 + 48);
  uint64_t v4 = *(void **)(a1 + 56);
  char v5 = *(unsigned char *)(a1 + 64);

  sub_1C2645714(v2, v3, v4, v5);
}

uint64_t UnfairLock.__deallocating_deinit()
{
  MEMORY[0x1C875D230](*(void *)(v0 + 16), -1, -1);

  return swift_deallocClassInstance();
}

uint64_t GeneratorContext.country.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GeneratorContext() + 20);

  return sub_1C2607F10(v3, a1);
}

uint64_t Publisher.receive(on:domain:)(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a2;
  char v9 = *((unsigned char *)a2 + 24);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  uint64_t v13 = v8;
  long long v14 = *(_OWORD *)(a2 + 1);
  char v15 = v9;
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(v4, &v13, a3, a4, v10, v11);
}

uint64_t initializeWithCopy for FeedItemPredicate(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C2646704(*(id *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t destroy for PluginStorage(uint64_t a1)
{
  swift_bridgeObjectRelease();

  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >> 60 != 15) {
    sub_1C263CC84(*(void *)(a1 + 24), v2);
  }

  return swift_bridgeObjectRelease();
}

void sub_1C260836C(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1C26083D4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 + 16))(a1, 0);
}

uint64_t sub_1C2608400()
{
  sub_1C260846C();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C277E590;
  type metadata accessor for LegacyGenerationExecutor.Planner.WorkPlan();
  *(void *)(v0 + 32) = swift_allocObject();
  sub_1C277BA60();
  return v0;
}

void sub_1C260846C()
{
  if (!qword_1EBB85220)
  {
    unint64_t v0 = sub_1C277C7C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB85220);
    }
  }
}

uint64_t type metadata accessor for LegacyGenerationExecutor.Planner.WorkPlan()
{
  return self;
}

uint64_t static BasicGenerator.empty.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C26086AC(0, &qword_1EBB85910, (void (*)(uint64_t))sub_1C2608654);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v6 = (char *)v12 - v5;
  unint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v8 = sub_1C2649760(MEMORY[0x1E4FBC860]);
  uint64_t v9 = sub_1C2649500(v7);
  v12[1] = v7;
  sub_1C2608654();
  sub_1C277B440();
  sub_1C2608700(&qword_1EBB85908, &qword_1EBB85910, (void (*)(uint64_t))sub_1C2608654);
  uint64_t v10 = sub_1C277B4E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = 0;
  return result;
}

void sub_1C2608654()
{
  if (!qword_1EBB85930)
  {
    unint64_t v0 = sub_1C277BB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB85930);
    }
  }
}

void sub_1C26086AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277B430();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2608700(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26086AC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for HealthAppPluginSource()
{
  return self;
}

uint64_t CountryRetrievalRecord.isoCountryCode.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for Feed()
{
  return self;
}

uint64_t objectdestroy_16Tm()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t objectdestroy_16Tm_0(uint64_t a1)
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t PluginFeedItem.setCategoryIdentifier(displayCategory:)(void *a1)
{
  id v3 = objc_msgSend(a1, sel_categoryName);
  uint64_t v4 = sub_1C277B850();
  uint64_t v6 = v5;

  uint64_t v7 = type metadata accessor for PluginFeedItem();
  uint64_t v8 = (uint64_t *)(v1 + *(int *)(v7 + 60));
  swift_bridgeObjectRelease();
  *uint64_t v8 = v4;
  v8[1] = v6;
  id v9 = objc_msgSend(a1, sel_displayName);
  uint64_t v10 = sub_1C277B850();
  uint64_t v12 = v11;

  uint64_t v13 = (uint64_t *)(v1 + *(int *)(v7 + 76));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v13 = v10;
  v13[1] = v12;
  return result;
}

uint64_t type metadata accessor for CachingSharedSummaryTransactionBuilder()
{
  return self;
}

uint64_t sub_1C2608930()
{
  sub_1C277C2D0();
  sub_1C277B8D0();
  sub_1C277C450();
  sub_1C277B8D0();
  swift_beginAccess();
  unint64_t v0 = sub_1C2610F84();
  uint64_t v1 = swift_bridgeObjectRetain();
  MEMORY[0x1C875B960](v1, v0);
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  return 0;
}

uint64_t LogCategory.logHandle.getter()
{
  return sub_1C277C080();
}

unint64_t sub_1C2608AA0()
{
  unint64_t result = qword_1EBB85F38;
  if (!qword_1EBB85F38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85F38);
  }
  return result;
}

unint64_t LogCategory.rawValue.getter()
{
  unint64_t result = 0xD000000000000014;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x636974796C616E61;
      break;
    case 2:
      unint64_t result = 0x6E6F6D656164;
      break;
    case 3:
      unint64_t result = 0x72756F5361746164;
      break;
    case 4:
      unint64_t result = 0x7375636F66;
      break;
    case 5:
      unint64_t result = 0x6C6172656E6567;
      break;
    case 6:
      unint64_t result = 0x69746172656E6567;
      break;
    case 7:
      unint64_t result = 0x727473656863726FLL;
      break;
    case 8:
      unint64_t result = 0x6C616E6F73726570;
      break;
    case 9:
      unint64_t result = 0x6E6967756C70;
      break;
    case 0xA:
      unint64_t result = 0x686372616573;
      break;
    case 0xB:
      unint64_t result = 2003134838;
      break;
    case 0xC:
      unint64_t result = 6516856;
      break;
    case 0xD:
      unint64_t result = 0x79735F64756F6C63;
      break;
    case 0xE:
      unint64_t result = 0x725F68746C616568;
      break;
    case 0xF:
      unint64_t result = 0x676E6972616568;
      break;
    case 0x10:
      unint64_t result = 0x7472616568;
      break;
    case 0x11:
      unint64_t result = 0x6E6F6D616E6E6963;
      break;
    case 0x12:
      unint64_t result = 0x697461636964656DLL;
      break;
    case 0x13:
      unint64_t result = 0x6172656D6163;
      break;
    case 0x14:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x15:
      unint64_t result = 0x685F6C61746E656DLL;
      break;
    case 0x16:
      unint64_t result = 0x656C69666F7270;
      break;
    case 0x17:
      unint64_t result = 0x7461726970736572;
      break;
    case 0x18:
      unint64_t result = 0x7065656C73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2608D90(uint64_t a1)
{
  type metadata accessor for Profile();
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_msgSend(v3, sel_setPredicate_, a1);
  objc_msgSend(v3, sel_setIncludesPropertyValues_, 0);
  unint64_t v4 = sub_1C277C000();
  unint64_t v5 = v4;
  if (!(v4 >> 62))
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:

    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C277C5A0();
  if (!v6) {
    goto LABEL_10;
  }
LABEL_3:
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1C875C230](i, v5);
      }
      else {
        id v8 = *(id *)(v5 + 8 * i + 32);
      }
      id v9 = v8;
      objc_msgSend(v1, sel_deleteObject_, v8);
    }
    goto LABEL_10;
  }
  __break(1u);
  sub_1C277C2D0();
  sub_1C277B8D0();
  sub_1C277B8D0();
  sub_1C277B8D0();
  sub_1C2621120(0, (unint64_t *)&qword_1EBB831D0);
  sub_1C277C450();
  uint64_t result = sub_1C277C560();
  __break(1u);
  return result;
}

uint64_t sub_1C2608FC4()
{
  sub_1C277B850();
  sub_1C277C8C0();
  sub_1C277B8B0();
  uint64_t v0 = sub_1C277C910();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C2609038(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)(a1 + 72);
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C26091A4(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v8 = v7[3];
      uint64_t v9 = v7[4];
      __swift_project_boxed_opaque_existential_1(v7, v8);
      uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
      if (v10)
      {
        uint64_t v11 = v10;
        UNUserNotificationCenter.scheduleNotification(_:)(v10);
        uint64_t v12 = swift_retain();
        MEMORY[0x1C875B930](v12);
        if (*(void *)(*(void *)a2 + 16) >= *(void *)(*(void *)a2 + 24) >> 1) {
          sub_1C277BA90();
        }
        sub_1C277BAE0();
        sub_1C277BA60();

        swift_release();
      }
      v7 += 5;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  *id v3 = MEMORY[0x1E4FBC868];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26091A4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v33 = MEMORY[0x1E4FBC860];
  sub_1C265A010(0, v1, 0);
  uint64_t result = sub_1C2751C28(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int v23 = v5;
  int64_t v22 = v1;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_26;
    }
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    sub_1C26482E4(*(void *)(a1 + 56) + 40 * v6, (uint64_t)v31);
    v30[0] = v14;
    v30[1] = v13;
    *(void *)&long long v27 = v14;
    *((void *)&v27 + 1) = v13;
    sub_1C26482E4((uint64_t)v31, (uint64_t)v28);
    long long v24 = v27;
    v25[0] = v28[0];
    v25[1] = v28[1];
    uint64_t v26 = v29;
    swift_bridgeObjectRetain_n();
    sub_1C26D97B0((uint64_t)v30, (uint64_t (*)(void))sub_1C26D96CC);
    sub_1C26482E4((uint64_t)v25, (uint64_t)v32);
    sub_1C26D97B0((uint64_t)&v24, (uint64_t (*)(void))sub_1C26D96CC);
    uint64_t v2 = v33;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C265A010(0, *(void *)(v2 + 16) + 1, 1);
      uint64_t v2 = v33;
    }
    unint64_t v16 = *(void *)(v2 + 16);
    unint64_t v15 = *(void *)(v2 + 24);
    if (v16 >= v15 >> 1)
    {
      sub_1C265A010(v15 > 1, v16 + 1, 1);
      uint64_t v2 = v33;
    }
    *(void *)(v2 + 16) = v16 + 1;
    uint64_t result = sub_1C261F308(v32, v2 + 40 * v16 + 32);
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_27;
    }
    uint64_t v17 = *(void *)(v8 + 8 * v11);
    if ((v17 & (1 << v6)) == 0) {
      goto LABEL_28;
    }
    int v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23) {
      goto LABEL_29;
    }
    unint64_t v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      int64_t v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v22;
    }
    else
    {
      unint64_t v19 = v11 + 1;
      unint64_t v20 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v22;
      if (v11 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v8 + 8 * v19);
        if (v21)
        {
LABEL_22:
          int64_t v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            unint64_t v21 = *(void *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              unint64_t v19 = v11 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

id _s14HealthPlatform0A15AppPluginSourceC25disabledBundleIdentifiersShySSGyFZ_0()
{
  uint64_t v0 = self;
  id result = objc_msgSend(v0, sel_sharedBehavior);
  if (!result)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v2 = result;
  unsigned int v3 = objc_msgSend(result, sel_isiPad);

  if (v3) {
    uint64_t v4 = &unk_1F1DC4EA8;
  }
  else {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  }
  id result = objc_msgSend(v0, sel_sharedBehavior);
  if (!result) {
    goto LABEL_14;
  }
  int v5 = result;
  unsigned int v6 = objc_msgSend(result, sel_isAppleInternalInstall);

  if (v6)
  {
    sub_1C277B850();
    id v7 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
    uint64_t v8 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v7, sel_initWithSuiteName_, v8);

    if (!v9) {
      goto LABEL_10;
    }
    int64_t v10 = (void *)sub_1C277B820();
    id v11 = objc_msgSend(v9, sel_arrayForKey_, v10);

    if (!v11 || (uint64_t v12 = sub_1C277BA40(), v11, v13 = sub_1C26A11D8(v12), swift_bridgeObjectRelease(), !v13))
    {
LABEL_10:
      swift_bridgeObjectRelease();
      uint64_t v13 = MEMORY[0x1E4FBC860];
    }
    sub_1C27686A0(v13);
  }
  uint64_t v14 = sub_1C2648348((uint64_t)v4);
  swift_bridgeObjectRelease();
  return (id)v14;
}

void HealthAppForegroundWorkManager.forceStart(within:)()
{
  int64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState);
  uint64_t v2 = v1 + 4;
  unsigned int v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1C26096E0(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1C26096E0(unsigned char *a1)
{
  return sub_1C2609700(a1, *(void (**)(char *, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C2609700(unsigned char *a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a4;
  uint64_t v60 = a2;
  uint64_t v54 = a3;
  uint64_t v6 = sub_1C277B630();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v58 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C277B660();
  uint64_t v57 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v56 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1C277B680();
  uint64_t v55 = *(void *)(v62 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v62);
  uint64_t v53 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  v61 = (char *)v45 - v13;
  uint64_t v14 = sub_1C277B620();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v16);
  unint64_t v21 = (char *)v45 - v20;
  if ((*a1 & 1) == 0)
  {
    uint64_t v50 = v7;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v49 = v9;
    uint64_t v51 = v6;
    uint64_t v52 = v4;
    uint64_t v22 = sub_1C277B130();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EBB86280);
    int v23 = *(void (**)(char *, void (*)(void, void), uint64_t))(v15 + 16);
    v23(v21, (void (*)(void, void))v60, v14);
    long long v24 = sub_1C277B100();
    os_log_type_t v25 = sub_1C277BD40();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v27 = swift_slowAlloc();
      int v47 = v26;
      uint64_t v28 = v27;
      uint64_t v48 = swift_slowAlloc();
      aBlock[0] = v48;
      *(_DWORD *)uint64_t v28 = 136446466;
      os_log_t v46 = v24;
      v45[1] = v28 + 4;
      uint64_t v29 = sub_1C277C9E0();
      uint64_t v64 = sub_1C263FDFC(v29, v30, aBlock);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      v23(v18, (void (*)(void, void))v21, v14);
      uint64_t v31 = sub_1C277B860();
      uint64_t v64 = sub_1C263FDFC(v31, v32, aBlock);
      uint64_t v33 = v59;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
      os_log_t v34 = v46;
      _os_log_impl(&dword_1C2601000, v46, (os_log_type_t)v47, "[%{public}s] Not yet started, enqueueing a start deadline within %{public}s", (uint8_t *)v28, 0x16u);
      uint64_t v35 = v48;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v35, -1, -1);
      MEMORY[0x1C875D230](v28, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);

      uint64_t v33 = v59;
    }
    uint64_t v36 = v53;
    uint64_t v59 = *(void *)(v54 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_queue);
    sub_1C277B670();
    MEMORY[0x1C875B5E0](v36, v60);
    uint64_t v60 = *(void (**)(char *, uint64_t))(v55 + 8);
    v60(v36, v62);
    uint64_t v37 = swift_allocObject();
    swift_weakInit();
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v37;
    *(void *)(v38 + 24) = v33;
    aBlock[4] = (uint64_t)sub_1C26FB858;
    aBlock[5] = v38;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C26254FC;
    aBlock[3] = (uint64_t)&block_descriptor_77;
    uint64_t v39 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v40 = v56;
    sub_1C277B650();
    uint64_t v64 = MEMORY[0x1E4FBC860];
    sub_1C2633B78((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
    char v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C2633D88(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C264C2D8((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v41);
    uint64_t v42 = v58;
    uint64_t v43 = v51;
    sub_1C277C120();
    uint64_t v44 = v61;
    MEMORY[0x1C875BD60](v61, v40, v42, v39);
    _Block_release(v39);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v43);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v40, v49);
    v60(v44, v62);
    swift_release();
    return swift_release();
  }
  return result;
}

id sub_1C2609E10()
{
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for FileMonitorPublisher();
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)(*(uint64_t (**)(uint64_t))(v2 + 240))(v4);
  if (!v1)
  {
    uint64_t v8 = (void *)v0[5];
    v0[5] = (uint64_t)result;

    id v9 = objc_msgSend(self, sel_defaultCenter);
    uint64_t v16 = v2;
    id v10 = v9;
    uint64_t v11 = *MEMORY[0x1E4F1BEE8];
    id v12 = sub_1C262E4A8();
    id v13 = objc_msgSend(v12, sel_persistentStoreCoordinator);

    objc_msgSend(v10, sel_addObserver_selector_name_object_, v0, sel_mergeExternalChanges, v11, v13);
    uint64_t v14 = v16;
    id result = objc_msgSend(self, sel_isAppleInternalInstall);
    if (result)
    {
      sub_1C2624980();
      sub_1C277BF00();
      *(_DWORD *)uint64_t v6 = -1;
      *((void *)v6 + 1) = 0;
      *(void *)(swift_allocObject() + 16) = v14;
      sub_1C2625030((unint64_t *)&unk_1EBB85068, (void (*)(uint64_t))type metadata accessor for FileMonitorPublisher);
      sub_1C277B4C0();
      swift_release();
      swift_release();
      return (id)sub_1C270B3A0((uint64_t)v6);
    }
  }
  return result;
}

uint64_t objectdestroy_77Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C260A0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  objc_msgSend(v7, sel_setQualityOfService_, a2);
  uint64_t v8 = (void *)sub_1C277B820();
  objc_msgSend(v7, sel_setName_, v8);

  *a5 = v7;
}

uint64_t GeneratorContext.sharableModelContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for GeneratorContext();
  return sub_1C26482E4(v1 + *(int *)(v3 + 32), a1);
}

uint64_t _s14HealthPlatform25PregnancyStateInputSignalC10identifier0A13Orchestration0eF10IdentifierVvgZ_0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBB83B60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277AEE0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBB83B40);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1C260A214()
{
  sub_1C260A268();

  return swift_deallocClassInstance();
}

uint64_t sub_1C260A268()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 88) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));

  swift_release();
  swift_release();
  swift_release();
  sub_1C2630BCC(v0 + *(void *)(*(void *)v0 + 160));
  swift_release();
  return v0;
}

uint64_t FeatureStatusFeedItemGeneratorPipeline.init(context:featureIdentifier:feedItemProviders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for GeneratorContext();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v8 - 8);
  id v12 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (void **)((char *)&v18 - v13);
  sub_1C2647B18(a1, (uint64_t)&v18 - v13, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  sub_1C2647B18(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = swift_allocObject();
  sub_1C2647BE8((uint64_t)v12, v16 + v15, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  *(void *)(v16 + ((v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  sub_1C2647CB8(v14, a3, (uint64_t)sub_1C2647514, v16, a4);
  return sub_1C2648074(a1, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
}

void sub_1C260A534(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v4 + 128) + 16));
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = v4;
  v9[5] = a1;
  v9[6] = a2;
  v14[4] = sub_1C2708B2C;
  v14[5] = v9;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  long long v14[2] = sub_1C26254FC;
  v14[3] = &block_descriptor_19;
  uint64_t v10 = _Block_copy(v14);
  uint64_t v11 = self;
  swift_retain();
  swift_retain();
  id v12 = a1;
  id v13 = objc_msgSend(v11, sel_blockOperationWithBlock_, v10);
  _Block_release(v10);
  swift_release();
  objc_msgSend(v13, sel_addDependency_, v12);
  objc_msgSend(*(id *)(v4 + 24), sel_addOperation_, v13);
  objc_msgSend(*(id *)(v4 + 16), sel_addOperation_, v12);
}

uint64_t sub_1C260A69C(long long *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v4 = sub_1C277A8A0();
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v33 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1C277BEA0();
  uint64_t v6 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C277BE40();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = sub_1C277B660();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v11 = OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState;
  sub_1C264E310(0, &qword_1EBB83A00);
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 64) = 0;
  *(_DWORD *)(v12 + 16) = 0;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)(v12 + 24) = MEMORY[0x1E4FBC860];
  *(_OWORD *)(v12 + 32) = 0u;
  *(_OWORD *)(v12 + 48) = 0u;
  *(void *)(v2 + v11) = v12;
  uint64_t v31 = OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue;
  v30[1] = sub_1C264E740();
  sub_1C277B650();
  uint64_t v38 = v13;
  sub_1C2633B78((unint64_t *)&unk_1EBB85160, MEMORY[0x1E4FBCC10]);
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C2633D88(0, (unint64_t *)&qword_1EBB850C0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C264C2D8(qword_1EBB850D0, (unint64_t *)&qword_1EBB850C0, v14);
  sub_1C277C120();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCC58], v32);
  *(void *)(v2 + v31) = sub_1C277BED0();
  unint64_t v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_identifier);
  uint64_t v16 = v33;
  sub_1C277A890();
  sub_1C277A850();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v35);
  uint64_t v17 = sub_1C26043C0(6);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = MEMORY[0x1C875B7A0](v17, v19, v21, v23);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  *unint64_t v15 = v24;
  v15[1] = v26;
  sub_1C261F308(v36, v3 + 16);
  uint64_t v27 = v3
      + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_urgentWorkTimeoutInterval;
  uint64_t v28 = sub_1C277B620();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v27, v37, v28);
  return v3;
}

void sub_1C260AAC8(void *a1)
{
  uint64_t v3 = sub_1C277B630();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C277B660();
  uint64_t v8 = *(void (***)(char *, uint64_t))(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*(void *)v1 + 112))(v9) & 1) == 0) {
    return;
  }
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_currentQueue);
  id v14 = objc_msgSend(v12, sel_mainQueue);
  unint64_t v15 = v14;
  uint64_t v25 = v8;
  if (v13)
  {
    if (v14)
    {
      sub_1C2644ED8(0, &qword_1EBB80F18);
      id v16 = v13;
      char v17 = sub_1C277C030();

      if ((v17 & 1) == 0) {
        goto LABEL_12;
      }
      goto LABEL_7;
    }
    unint64_t v15 = v13;
LABEL_11:

LABEL_12:
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
    uint64_t v24 = sub_1C277BEB0();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a1;
    aBlock[4] = sub_1C270C374;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C26254FC;
    aBlock[3] = &block_descriptor_72;
    uint64_t v20 = _Block_copy(aBlock);
    id v21 = a1;
    swift_release();
    sub_1C277B650();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1C2625030((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
    uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C26248B8(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C2634104((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v22);
    sub_1C277C120();
    uint64_t v23 = (void *)v24;
    MEMORY[0x1C875BDD0](0, v11, v6, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v25[1](v11, v7);
    return;
  }
  if (v14) {
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v25 = (void (**)(char *, uint64_t))objc_msgSend(a1, sel_viewContext);
  objc_msgSend(v25, sel_setAutomaticallyMergesChangesFromParent_, 1);
  uint64_t v18 = v25;
}

uint64_t PluginFeedItem.description.getter()
{
  uint64_t v1 = sub_1C277C960();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1C2648348((uint64_t)&unk_1F1DC4980);
  swift_arrayDestroy();
  uint64_t v6 = type metadata accessor for PluginFeedItem();
  v15[3] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  sub_1C26447BC(v0, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C277C920();
  uint64_t v8 = sub_1C277C950();
  uint64_t v13 = v5;
  uint64_t v9 = sub_1C263FA84(v8, (uint64_t (*)(void, void, _OWORD *))sub_1C263FD44);
  swift_bridgeObjectRelease();
  swift_release();
  v15[0] = (uint64_t)v9;
  sub_1C264E94C();
  sub_1C265146C((unint64_t *)&qword_1EBB85E78, (void (*)(uint64_t))sub_1C264E94C);
  sub_1C277B7D0();
  swift_bridgeObjectRelease();
  v15[0] = 60;
  v15[1] = 0xE100000000000000;
  uint64_t v14 = v6;
  sub_1C2650A5C();
  sub_1C277B860();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  uint64_t v10 = v15[0];
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

uint64_t UserInterface.init(viewControllerClass:)()
{
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v1 = NSStringFromClass(ObjCClassFromMetadata);
  uint64_t v2 = sub_1C277B850();

  return v2;
}

uint64_t sub_1C260B1A0(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C277B630();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C277B660();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v21 = *(void *)(result + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a3;
    *(double *)(v15 + 24) = a1;
    *(void *)(v15 + 32) = v14;
    aBlock[4] = sub_1C2650BE8;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C26254FC;
    aBlock[3] = &block_descriptor_23;
    uint64_t v20 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_1C277B650();
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1C2633B78((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
    id v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C2633D88(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    uint64_t v19 = v9;
    sub_1C264C2D8((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v16);
    sub_1C277C120();
    char v17 = v20;
    MEMORY[0x1C875BDD0](0, v12, v8, v20);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t FeedItem.relevantDateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C277A520();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v49 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26513A4(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v13 = sub_1C277A840();
  uint64_t v14 = *(void **)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  int v47 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v48 = (char *)&v43 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v43 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v52 = (char *)&v43 - v22;
  id v23 = objc_msgSend(v1, sel_relevantStartDate);
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v45 = v4;
    id v46 = v2;
    uint64_t v44 = v5;
    uint64_t v51 = a1;
    sub_1C277A810();

    uint64_t v50 = (void (*)(char *, char *, uint64_t))v14[4];
    v50(v12, v21, v13);
    uint64_t v25 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v14[7];
    v25(v12, 0, 1, v13);
    uint64_t v26 = (unsigned int (*)(char *, uint64_t, uint64_t))v14[6];
    if (v26(v12, 1, v13) == 1)
    {
      uint64_t v10 = v12;
    }
    else
    {
      v50(v52, v12, v13);
      id v27 = objc_msgSend(v46, sel_relevantEndDate);
      if (v27)
      {
        uint64_t v28 = v27;
        sub_1C277A810();

        v50(v10, v21, v13);
        v25(v10, 0, 1, v13);
        if (v26(v10, 1, v13) != 1)
        {
          uint64_t v29 = v48;
          v50(v48, v10, v13);
          unint64_t v30 = (void (*)(char *, char *, uint64_t))v14[2];
          uint64_t v31 = v52;
          v30(v21, v52, v13);
          v30(v47, v29, v13);
          uint64_t v32 = v49;
          sub_1C277A500();
          id v33 = v46;
          objc_msgSend(v46, sel_relevantRampUpTime);
          uint64_t v35 = v34;
          objc_msgSend(v33, sel_relevantRampDownTime);
          uint64_t v37 = v36;
          uint64_t v38 = (void (*)(char *, uint64_t))v14[1];
          v38(v29, v13);
          v38(v31, v13);
          uint64_t v39 = v51;
          (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v51, v32, v45);
          uint64_t v40 = type metadata accessor for RelevantDateInterval();
          *(void *)(v39 + *(int *)(v40 + 20)) = v35;
          *(void *)(v39 + *(int *)(v40 + 24)) = v37;
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
        }
      }
      else
      {
        v25(v10, 1, 1, v13);
      }
      ((void (*)(char *, uint64_t))v14[1])(v52, v13);
    }
    a1 = v51;
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v14[7])(v12, 1, 1, v13);
    uint64_t v10 = v12;
  }
  sub_1C263FBF4((uint64_t)v10, (uint64_t (*)(void))sub_1C26513A4);
  uint64_t v42 = type metadata accessor for RelevantDateInterval();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(a1, 1, 1, v42);
}

Swift::Void __swiftcall OrchestrationRetryManager.didUpdate(environmentalState:)(Swift::OpaquePointer environmentalState)
{
  sub_1C264FD38();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1C277B130();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v9 = sub_1C277B020();
  uint64_t v10 = *(os_unfair_lock_s **)(v1 + 24);
  v17[16] = v9 & 1;
  uint64_t v11 = v10 + 4;
  uint64_t v12 = v10 + 5;
  os_unfair_lock_lock(v10 + 5);
  sub_1C26500F4(v11, &v18);
  os_unfair_lock_unlock(v12);
  if (v18 == 1)
  {
    sub_1C277ABD0();
    uint64_t v13 = sub_1C277B100();
    os_log_type_t v14 = sub_1C277BD40();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_1C2601000, v13, v14, "Health app has become foreground; retrying failed work criteria.",
        v15,
        2u);
      MEMORY[0x1C875D230](v15, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v16 = sub_1C277ACF0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
    sub_1C277ABC0();
    sub_1C264FCDC((uint64_t)v4);
  }
}

uint64_t HealthAppNotificationManager.__deallocating_deinit()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

char *initializeBufferWithCopyOfBuffer for FeatureStatusFeedItemGeneratorPipeline(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v7;
    a1[24] = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[5];
    char v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = *(char **)((char *)a2 + v8);
    *(void *)&a1[v8] = v11;
    uint64_t v42 = (int *)type metadata accessor for GeneratorContext();
    uint64_t v12 = v42[5];
    char v41 = v9;
    uint64_t v13 = &v9[v12];
    uint64_t v14 = v10 + v12;
    sub_1C264C860();
    uint64_t v15 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = *(void **)v14;
      *(void *)uint64_t v13 = *(void *)v14;
      id v18 = v17;
    }
    else
    {
      uint64_t v19 = *(void *)(v14 + 8);
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = v19;
      *((void *)v13 + 2) = *(void *)(v14 + 16);
      uint64_t v20 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
      uint64_t v21 = &v13[v20];
      uint64_t v22 = v14 + v20;
      uint64_t v23 = sub_1C277A840();
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
    }
    swift_storeEnumTagMultiPayload();
    v41[v42[6]] = *(unsigned char *)(v10 + v42[6]);
    uint64_t v25 = v42[7];
    long long v26 = *(_OWORD *)(v10 + v25 + 24);
    *(_OWORD *)&v41[v25 + 24] = v26;
    (**(void (***)(void))(v26 - 8))();
    uint64_t v27 = v42[8];
    long long v28 = *(_OWORD *)(v10 + v27 + 24);
    *(_OWORD *)&v41[v27 + 24] = v28;
    (**(void (***)(void))(v28 - 8))();
    uint64_t v29 = a3[6];
    unint64_t v30 = &v6[v29];
    uint64_t v31 = (uint64_t)a2 + v29;
    id v32 = *(id *)v31;
    id v33 = *(void **)(v31 + 8);
    uint64_t v34 = *(void **)(v31 + 16);
    char v35 = *(unsigned char *)(v31 + 24);
    sub_1C2646704(*(id *)v31, v33, v34, v35);
    *(void *)unint64_t v30 = v32;
    *((void *)v30 + 1) = v33;
    *((void *)v30 + 2) = v34;
    v30[24] = v35;
    uint64_t v36 = a3[8];
    *(void *)&v6[a3[7]] = *(char **)((char *)a2 + a3[7]);
    uint64_t v37 = &v6[v36];
    uint64_t v38 = (char **)((char *)a2 + v36);
    uint64_t v39 = v38[1];
    *(void *)uint64_t v37 = *v38;
    *((void *)v37 + 1) = v39;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v6;
}

uint64_t destroy for GenerationWorkRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

Swift::Void __swiftcall LegacyGenerationProvider.didUpdate(environmentalState:)(Swift::OpaquePointer environmentalState)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v3 - 8);
  sub_1C264FD90();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1C277B040();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C277B850();
  sub_1C277B000();
  swift_bridgeObjectRelease();
  char v13 = sub_1C277B020();
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v14 = *(os_unfair_lock_s **)(*(void *)(v2 + 16) + 16);
  v21[16] = v13 & 1;
  uint64_t v15 = v14 + 4;
  id v16 = v14 + 26;
  os_unfair_lock_lock(v14 + 26);
  sub_1C2650180(v15, v22);
  os_unfair_lock_unlock(v16);
  if (v22[0] == 1)
  {
    uint64_t v17 = *(os_unfair_lock_s **)(v2 + 24);
    id v18 = v17 + 4;
    uint64_t v19 = v17 + 6;
    os_unfair_lock_lock(v17 + 6);
    sub_1C2650164(v18, v22);
    os_unfair_lock_unlock(v19);
    uint64_t v20 = *(void *)v22;
    if (*(void *)v22)
    {
      swift_getObjectType();
      sub_1C277AED0();
      *(void *)uint64_t v22 = CFAbsoluteTimeGetCurrent();
      sub_1C277AC10();
      *(void *)uint64_t v22 = v20;
      type metadata accessor for LegacyGenerationInputSignal();
      sub_1C265011C(&qword_1EBB82918, 255, (void (*)(uint64_t))type metadata accessor for LegacyGenerationInputSignal);
      sub_1C277AE40();
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
      swift_release();
    }
  }
}

uint64_t sub_1C260C35C()
{
  return 91;
}

uint64_t sub_1C260C430@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC14HealthPlatform29HealthPlatformContextProvider7Context_logger;
  uint64_t v4 = sub_1C277B130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1C260C4A4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t GeneratorContext.scheduler.getter()
{
  unint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for GeneratorContext() + 28));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 72))(v2, v3);
}

uint64_t _s14HealthPlatform13UserInterfaceOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C263D4D4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t Publisher<>.catchModelGenerationError()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1C2635A54();
  sub_1C2635AD8(&qword_1EBB82D08, (void (*)(uint64_t))sub_1C2635A54);
  sub_1C277B530();

  return swift_release();
}

uint64_t Publisher.handleStartAndIdleEvents(idleTimeInterval:queue:startBlock:idleBlock:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v16 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  id v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v20, v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a7, v18, a6);
  uint64_t v21 = (int *)type metadata accessor for Publishers.HandleStartAndIdleEvents();
  *(double *)(a7 + v21[9]) = a8;
  *(void *)(a7 + v21[10]) = a1;
  uint64_t v22 = (void *)(a7 + v21[11]);
  *uint64_t v22 = a2;
  v22[1] = a3;
  uint64_t v23 = (void *)(a7 + v21[12]);
  *uint64_t v23 = a4;
  v23[1] = a5;
  id v24 = a1;
  swift_retain();
  return swift_retain();
}

uint64_t type metadata accessor for Publishers.HandleStartAndIdleEvents()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C260C85C()
{
}

void sub_1C260C880()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + *(void *)(*(void *)v0 + 152));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  uint64_t v4 = 1;
  long long v5 = 0u;
  long long v6 = 0u;
  char v7 = 2;
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 160);
  swift_beginAccess();
  sub_1C26305D4((uint64_t)&v4, v3);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  sub_1C277B2C0();
  sub_1C260C994();
}

void sub_1C260C994()
{
  uint64_t v1 = *(void *)(v0 + *(void *)(*(void *)v0 + 152));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  uint64_t v2 = *(void *)(*(void *)v0 + 176);
  int v3 = *(unsigned __int8 *)(v0 + v2);
  *(unsigned char *)(v0 + v2) = 0;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  if (v3 == 1) {
    (*(void (**)(void))(v0 + *(void *)(*(void *)v0 + 144)))();
  }
}

void sub_1C260CA28(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    id v2 = v1;
    if (qword_1EBB82A50 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1C277B130();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EBB82A38);
    id v4 = v1;
    id v5 = v1;
    oslog = sub_1C277B100();
    os_log_type_t v6 = sub_1C277BD20();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v21 = v8;
      *(_DWORD *)uint64_t v7 = 136315650;
      uint64_t v9 = sub_1C277C9E0();
      sub_1C263FDFC(v9, v10, &v21);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2080;
      sub_1C263FDFC(0xD000000000000028, 0x80000001C278F500, &v21);
      sub_1C277C0D0();
      *(_WORD *)(v7 + 22) = 2080;
      id v11 = v1;
      sub_1C2621120(0, (unint64_t *)&qword_1EBB831D0);
      uint64_t v12 = sub_1C277B870();
      sub_1C263FDFC(v12, v13, &v21);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2601000, oslog, v6, "[%s] %s finished with error: %s", (uint8_t *)v7, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v8, -1, -1);
      MEMORY[0x1C875D230](v7, -1, -1);

      return;
    }
  }
  else
  {
    if (qword_1EBB82A50 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1C277B130();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBB82A38);
    oslog = sub_1C277B100();
    os_log_type_t v15 = sub_1C277BD40();
    if (os_log_type_enabled(oslog, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v21 = v17;
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v18 = sub_1C277C9E0();
      sub_1C263FDFC(v18, v19, &v21);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      sub_1C263FDFC(0xD000000000000028, 0x80000001C278F500, &v21);
      sub_1C277C0D0();
      _os_log_impl(&dword_1C2601000, oslog, v15, "[%s] %s completed successfully", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v17, -1, -1);
      MEMORY[0x1C875D230](v16, -1, -1);

      return;
    }
  }
}

uint64_t sub_1C260CE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1C2625618;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = *(void **)(a3 + 16);
  v11[4] = sub_1C26083D4;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1C260836C;
  v11[3] = &block_descriptor_114;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_getNotificationSettingsWithCompletionHandler_, v9);
  _Block_release(v9);
  return swift_release();
}

uint64_t sub_1C260CF90()
{
  sub_1C2629308();
  MEMORY[0x1F4188790](v0 - 8);
  id v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C277A750();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v21 - v8;
  type metadata accessor for HealthExperienceStoreModel();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v11 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v12 = (void *)sub_1C277B820();
  unint64_t v13 = (void *)sub_1C277B820();
  id v14 = objc_msgSend(v11, sel_URLForResource_withExtension_, v12, v13);

  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    goto LABEL_6;
  }
  sub_1C277A6F0();

  os_log_type_t v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v15(v2, v7, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_6:
    sub_1C2685A3C((uint64_t)v2);
    unint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_1C277C2D0();
    sub_1C277B8D0();
    id v20 = objc_msgSend(v11, sel_description);
    sub_1C277B850();

    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15(v9, v2, v3);
  id v16 = objc_allocWithZone(MEMORY[0x1E4F1C120]);
  uint64_t v17 = (void *)sub_1C277A6A0();
  id v18 = objc_msgSend(v16, sel_initWithContentsOfURL_, v17);

  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);

    return (uint64_t)v18;
  }
  unint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  sub_1C277C2D0();
  swift_bridgeObjectRelease();
  unint64_t v21 = 0xD00000000000002FLL;
  unint64_t v22 = 0x80000001C278F5E0;
  sub_1C27324F4();
  sub_1C277C7B0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t result = sub_1C277C560();
  __break(1u);
  return result;
}

uint64_t _s14HealthPlatform17ForYouSectionKindO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1C277C650();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

void *HealthAppNotificationManager.__allocating_init()()
{
  sub_1C277B850();
  id v0 = objc_allocWithZone(MEMORY[0x1E4F44680]);
  uint64_t v1 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithBundleIdentifier_, v1);

  return _s14HealthPlatform0A22AppNotificationManagerC18notificationCenterACSo06UNUserdG0C_tcfC_0((uint64_t)v2);
}

void FeedItem.contentKind.getter(char *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_contentKindRawValue);
  uint64_t v4 = sub_1C277B850();
  uint64_t v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  ContentKind.init(rawValue:)(v7);
  char v8 = v25;
  if (v25 == 24)
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1C277B130();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EBB86280);
    id v10 = v1;
    id v11 = sub_1C277B100();
    os_log_type_t v12 = sub_1C277BD30();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      id v24 = a1;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v25 = v14;
      *(_DWORD *)uint64_t v13 = 136315394;
      id v15 = objc_msgSend(v10, sel_contentKindRawValue);
      uint64_t v16 = sub_1C277B850();
      unint64_t v18 = v17;

      sub_1C263FDFC(v16, v18, &v25);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      id v19 = objc_msgSend(v10, sel_uniqueIdentifier);
      uint64_t v20 = sub_1C277B850();
      unint64_t v22 = v21;

      sub_1C263FDFC(v20, v22, &v25);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v11, v12, "Somehow a content kind got stored that we do not know about: %s, identifier: %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      uint64_t v23 = v14;
      a1 = v24;
      MEMORY[0x1C875D230](v23, -1, -1);
      MEMORY[0x1C875D230](v13, -1, -1);
    }
    else
    {
    }
    char v8 = 15;
  }
  *a1 = v8;
}

HealthPlatform::ContentKind_optional __swiftcall ContentKind.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  uint64_t v3 = sub_1C277C810();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 6;
  switch(v3)
  {
    case 0:
      goto LABEL_7;
    case 1:
      char v5 = 1;
      goto LABEL_7;
    case 2:
      char v5 = 2;
      goto LABEL_7;
    case 3:
      char v5 = 3;
      goto LABEL_7;
    case 4:
      char v5 = 4;
      goto LABEL_7;
    case 5:
      char v5 = 5;
LABEL_7:
      char v6 = v5;
      break;
    case 6:
      break;
    case 7:
      char v6 = 7;
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    default:
      char v6 = 24;
      break;
  }
  *id v2 = v6;
  return result;
}

uint64_t initializeWithCopy for GenerationWorkRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void sub_1C260D8FC(uint64_t a1, const char *a2, double a3)
{
  if (qword_1EBB82A50 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C277B130();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBB82A38);
  Swift::String v7 = sub_1C277B100();
  os_log_type_t v8 = sub_1C277BD00();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134218240;
    sub_1C277C0D0();
    *(_WORD *)(v9 + 12) = 2048;
    sub_1C277C0D0();
    _os_log_impl(&dword_1C2601000, v7, v8, a2, (uint8_t *)v9, 0x16u);
    MEMORY[0x1C875D230](v9, -1, -1);
  }

  id v10 = (void *)sub_1C277B820();
  sub_1C2621170();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C277E470;
  *(void *)(inited + 32) = 0x736E616C70;
  *(void *)(inited + 40) = 0xE500000000000000;
  *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1);
  *(void *)(inited + 56) = 0x6E6F697461727564;
  *(void *)(inited + 64) = 0xE800000000000000;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a3);
  sub_1C2629360(inited);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
  os_log_type_t v12 = (void *)sub_1C277B750();
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();
}

uint64_t sub_1C260DB44()
{
  id v1 = *(id *)(v0 + 32);
  uint64_t v2 = sub_1C277BDB0();

  return v2;
}

Swift::Void __swiftcall DebuggingResponder.registerForDebuggingRequests()()
{
  uint64_t v1 = v0;
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277B130();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB86280);
  uint64_t v3 = sub_1C277B100();
  os_log_type_t v4 = sub_1C277BD00();
  if (os_log_type_enabled(v3, v4))
  {
    char v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = v6;
    *(_DWORD *)char v5 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v7 = sub_1C277B860();
    uint64_t v10 = sub_1C263FDFC(v7, v8, &v11);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v3, v4, "[%s] registerForDebuggingRequests()", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v6, -1, -1);
    MEMORY[0x1C875D230](v5, -1, -1);
  }

  id v9 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EBB82F50 != -1) {
    swift_once();
  }
  objc_msgSend(v9, sel_addObserver_selector_name_object_, v1, sel_debuggingInfoRequestedWithNote_, qword_1EBB82F48, 0, v10, v11);
}

uint64_t PluginSharableModel.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1C260DDDC()
{
  uint64_t v2 = v0;
  sub_1C2621794((char *)&v19);
  if (!v1)
  {
    int v3 = v19;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C277B130();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBB86280);
    char v5 = sub_1C277B100();
    os_log_type_t v6 = sub_1C277BD40();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v19 = v8;
      *(_DWORD *)uint64_t v7 = 136446210;
      uint64_t v9 = sub_1C277B860();
      sub_1C263FDFC(v9, v10, &v19);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v5, v6, "destroyStoreIfNeededAndMakePersistentContainer - storeState: %{public}s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v8, -1, -1);
      MEMORY[0x1C875D230](v7, -1, -1);
    }

    uint64_t v11 = sub_1C277B100();
    os_log_type_t v12 = sub_1C277BD40();
    BOOL v13 = os_log_type_enabled(v11, v12);
    if ((v3 - 1) > 1)
    {
      if (v13)
      {
        unint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v18 = 0;
        _os_log_impl(&dword_1C2601000, v11, v12, "destroyStoreIfNeededAndMakePersistentContainer - fast path", v18, 2u);
        MEMORY[0x1C875D230](v18, -1, -1);
      }

      LOBYTE(v19) = v3;
      sub_1C26178F4((unsigned __int8 *)&v19, 1);
    }
    else
    {
      if (v13)
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_1C2601000, v11, v12, "destroyStoreIfNeededAndMakePersistentContainer - safe path", v14, 2u);
        MEMORY[0x1C875D230](v14, -1, -1);
      }

      id v15 = sub_1C277B100();
      os_log_type_t v16 = sub_1C277BD40();
      if (os_log_type_enabled(v15, v16))
      {
        unint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v17 = 0;
        _os_log_impl(&dword_1C2601000, v15, v16, "destroyStoreIfNeededAndMakePersistentContainer - removeAllFeedItemNotifications", v17, 2u);
        MEMORY[0x1C875D230](v17, -1, -1);
      }

      sub_1C2709858();
      LOBYTE(v19) = v3;
      (*(void (**)(uint64_t *, uint64_t))(*(void *)v2 + 288))(&v19, 1);
    }
  }
}

void sub_1C260E13C(char *a1@<X0>, char *a2@<X8>)
{
  int v3 = v2;
  char v4 = *a1;
  uint64_t v149 = *((void *)a1 + 1);
  uint64_t v151 = *((void *)a1 + 2);
  uint64_t v145 = a1[24];
  uint64_t v5 = *((void *)a1 + 6);
  long long v147 = *((_OWORD *)a1 + 2);
  uint64_t v6 = *((void *)a1 + 7);
  uint64_t v7 = (void (*)(void))*((void *)a1 + 8);
  uint64_t v8 = *((void *)a1 + 9);
  uint64_t v9 = v2[16];
  uint64_t v10 = *v2;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 16));
  id v11 = objc_msgSend(self, sel_sharedBehavior);
  if (v11)
  {
    os_log_type_t v12 = v11;
    unsigned __int8 v13 = objc_msgSend(v11, sel_healthAppHiddenOrNotInstalled);

    if (v13)
    {
      if (qword_1EBB85EA8 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1C277B130();
      __swift_project_value_buffer(v14, (uint64_t)qword_1EBB85ED8);
      id v15 = sub_1C277B100();
      os_log_type_t v16 = sub_1C277BD40();
      if (os_log_type_enabled(v15, v16))
      {
        unint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        v162[0] = v18;
        *(_DWORD *)unint64_t v17 = 136315138;
        uint64_t v170 = v10;
        swift_getMetatypeMetadata();
        uint64_t v19 = sub_1C277B860();
        uint64_t v170 = sub_1C263FDFC(v19, v20, v162);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v15, v16, "[%s] health is not installed or is hidden, exiting generation immediately", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v18, -1, -1);
        MEMORY[0x1C875D230](v17, -1, -1);
      }

      unint64_t v21 = a2;
      v7();
      char v22 = 1;
      goto LABEL_57;
    }
    *((void *)&v140 + 1) = v8;
    id v24 = v3 + 6;
    uint64_t v23 = v3[6];
    unint64_t v25 = v3[5];
    if (v25 >> 62)
    {
      uint64_t v138 = v9;
      uint64_t v139 = v6;
      uint64_t v144 = v5;
      if (v25 >> 62 == 1)
      {
        *(void *)&long long v140 = v7;
        uint64_t v26 = (void *)v3[4];
        uint64_t v27 = v3[7];
        uint64_t v28 = v3[10];
        uint64_t v29 = v3[11];
        uint64_t v30 = v3[12];
        uint64_t v31 = v3[13];
        if ((v4 & 1) == 0)
        {
          uint64_t v132 = v3[15];
          uint64_t v133 = v3[14];
          uint64_t v68 = v3[7];
          uint64_t v69 = v3[9];
          uint64_t v129 = v25 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v130 = v3[4];
          if (v3[8])
          {
            uint64_t v70 = v3[8];
            id v71 = v26;
            uint64_t v128 = v31;
            char v135 = v69;
            uint64_t v72 = v29;
            sub_1C270710C(v23, v68, v70);
            if (qword_1EBB85EA8 != -1) {
              swift_once();
            }
            uint64_t v73 = sub_1C277B130();
            __swift_project_value_buffer(v73, (uint64_t)qword_1EBB85ED8);
            v74 = sub_1C277B100();
            os_log_type_t v75 = sub_1C277BD40();
            if (os_log_type_enabled(v74, v75))
            {
              os_log_type_t type = v75;
              v76 = (uint8_t *)swift_slowAlloc();
              uint64_t v77 = swift_slowAlloc();
              uint64_t v170 = v77;
              v78 = v76;
              *(_DWORD *)v76 = 136446210;
              uint64_t v79 = v30;
              v80 = v78;
              uint64_t v81 = sub_1C277C9E0();
              v162[0] = sub_1C263FDFC(v81, v82, &v170);
              sub_1C277C0D0();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1C2601000, v74, type, "[%{public}s] Queue is running background generation, coalescing background generation request with existing enqueued generation request", v80, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1C875D230](v77, -1, -1);
              MEMORY[0x1C875D230](v80, -1, -1);

              uint64_t v83 = *((void *)&v147 + 1);
              uint64_t v84 = v147;
              uint64_t v85 = v151;
              char v86 = v145;
            }
            else
            {

              uint64_t v83 = *((void *)&v147 + 1);
              uint64_t v84 = v147;
              uint64_t v85 = v151;
              char v86 = v145;
              uint64_t v79 = v30;
            }
            LOBYTE(v162[0]) = v23 & 1;
            v162[1] = v68;
            v162[2] = v70;
            char v163 = v135 & 1;
            uint64_t v164 = v28;
            uint64_t v165 = v72;
            uint64_t v166 = v79;
            uint64_t v167 = v128;
            uint64_t v168 = v133;
            uint64_t v169 = v132;
            LOBYTE(v154) = 0;
            *((void *)&v154 + 1) = v149;
            uint64_t v155 = v85;
            char v156 = v86;
            uint64_t v157 = v84;
            uint64_t v158 = v83;
            uint64_t v159 = v144;
            uint64_t v160 = v139;
            long long v161 = v140;
            sub_1C2703E98(&v154, (uint64_t)&v170);
            uint64_t v115 = v170;
            uint64_t v116 = v171;
            uint64_t v117 = v172;
            uint64_t v118 = v173;
            long long v119 = v174;
            long long v120 = v175;
            long long v121 = v176;
            v122 = (void *)v3[4];
            unint64_t v123 = v3[5];
            uint64_t v124 = v3[6];
            uint64_t v125 = v3[7];
            uint64_t v126 = v3[8];
            v3[4] = v130;
            v3[5] = v129 | 0x4000000000000000;
            v3[6] = v115;
            v3[7] = v116;
            v3[8] = v117;
            v3[9] = v118;
            *((_OWORD *)v3 + 5) = v119;
            *((_OWORD *)v3 + 6) = v120;
            *((_OWORD *)v3 + 7) = v121;
            sub_1C2650914(v122, v123, v124, v125, v126);
            sub_1C265F0D0(v23, v68, v70);
          }
          else
          {
            id v105 = v26;
            sub_1C270710C(v23, v27, 0);
            if (qword_1EBB85EA8 != -1) {
              swift_once();
            }
            uint64_t v106 = sub_1C277B130();
            __swift_project_value_buffer(v106, (uint64_t)qword_1EBB85ED8);
            v107 = sub_1C277B100();
            os_log_type_t v108 = sub_1C277BD40();
            if (os_log_type_enabled(v107, v108))
            {
              v109 = (uint8_t *)swift_slowAlloc();
              uint64_t v110 = swift_slowAlloc();
              uint64_t v170 = v110;
              *(_DWORD *)v109 = 136446210;
              uint64_t v111 = sub_1C277C9E0();
              v162[0] = sub_1C263FDFC(v111, v112, &v170);
              sub_1C277C0D0();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1C2601000, v107, v108, "[%{public}s] Queue is running background generation, enqueuing background generation request", v109, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1C875D230](v110, -1, -1);
              MEMORY[0x1C875D230](v109, -1, -1);
            }

            uint64_t v113 = v147;
            uint64_t v114 = v145;
            *(void *)&long long v147 = v3[4];
            unint64_t v146 = v3[5];
            uint64_t v137 = v3[6];
            uint64_t v136 = v3[7];
            uint64_t v134 = v3[8];
            v3[4] = v130;
            v3[5] = v129 | 0x4000000000000000;
            v3[6] = 0;
            v3[7] = v149;
            v3[8] = v151;
            v3[9] = v114;
            v3[10] = v113;
            v3[11] = *((void *)&v147 + 1);
            v3[12] = v144;
            v3[13] = v139;
            *((_OWORD *)v3 + 7) = v140;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1C2650914((void *)v147, v146, v137, v136, v134);
          }
          char v22 = 3;
          goto LABEL_56;
        }
        uint64_t v32 = v3[8];
        id v131 = v26;
        sub_1C270710C(v23, v27, v32);
        sub_1C265F0D0(v23, v27, v32);

        if (qword_1EBB85EA8 != -1) {
          swift_once();
        }
        uint64_t v33 = sub_1C277B130();
        __swift_project_value_buffer(v33, (uint64_t)qword_1EBB85ED8);
        uint64_t v34 = sub_1C277B100();
        os_log_type_t v35 = sub_1C277BD40();
        id v24 = v3 + 6;
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v36 = (uint8_t *)swift_slowAlloc();
          uint64_t v37 = swift_slowAlloc();
          uint64_t v170 = v37;
          *(_DWORD *)uint64_t v36 = 136446210;
          uint64_t v38 = sub_1C277C9E0();
          v162[0] = sub_1C263FDFC(v38, v39, &v170);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2601000, v34, v35, "[%{public}s] Queue is running background generation, cancelling and starting foreground generation", v36, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v37, -1, -1);
          MEMORY[0x1C875D230](v36, -1, -1);
        }

        __n128 v40 = sub_1C270621C();
        LOBYTE(v170) = 1;
        uint64_t v171 = v149;
        uint64_t v172 = v151;
        unsigned __int8 v173 = v145;
        long long v174 = v147;
        *(void *)&long long v175 = v144;
        *((void *)&v175 + 1) = v139;
        long long v176 = v140;
        uint64_t v41 = ((uint64_t (*)(uint64_t *, __n128))v147)(&v170, v40);
      }
      else
      {
        if ((v4 & 1) == 0)
        {
          if (qword_1EBB85EA8 != -1) {
            swift_once();
          }
          uint64_t v95 = sub_1C277B130();
          __swift_project_value_buffer(v95, (uint64_t)qword_1EBB85ED8);
          v96 = sub_1C277B100();
          os_log_type_t v97 = sub_1C277BD40();
          if (os_log_type_enabled(v96, v97))
          {
            v98 = (uint8_t *)swift_slowAlloc();
            v143 = v7;
            uint64_t v99 = swift_slowAlloc();
            uint64_t v170 = v99;
            *(_DWORD *)v98 = 136446210;
            uint64_t v100 = sub_1C277C9E0();
            v162[0] = sub_1C263FDFC(v100, v101, &v170);
            sub_1C277C0D0();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2601000, v96, v97, "[%{public}s] Queue is idle, starting background generation", v98, 0xCu);
            swift_arrayDestroy();
            uint64_t v102 = v99;
            uint64_t v7 = v143;
            MEMORY[0x1C875D230](v102, -1, -1);
            MEMORY[0x1C875D230](v98, -1, -1);
          }

          LOBYTE(v170) = 0;
          uint64_t v171 = v149;
          uint64_t v172 = v151;
          unsigned __int8 v173 = v145;
          long long v174 = v147;
          *(void *)&long long v175 = v144;
          *((void *)&v175 + 1) = v6;
          *(void *)&long long v176 = v7;
          *((void *)&v176 + 1) = *((void *)&v140 + 1);
          uint64_t v64 = (void *)((uint64_t (*)(uint64_t *))v147)(&v170);
          uint64_t v65 = v103;
          sub_1C2650248((uint64_t)v64, v103, 0);
          unint64_t v150 = v3[5];
          v152 = (void *)v3[4];
          uint64_t v66 = v3[7];
          uint64_t v67 = v3[8];
          uint64_t v148 = v3[6];
          v3[4] = v64;
          v3[5] = v65 | 0x4000000000000000;
          goto LABEL_45;
        }
        if (qword_1EBB85EA8 != -1) {
          swift_once();
        }
        uint64_t v52 = sub_1C277B130();
        __swift_project_value_buffer(v52, (uint64_t)qword_1EBB85ED8);
        uint64_t v53 = sub_1C277B100();
        os_log_type_t v54 = sub_1C277BD40();
        if (os_log_type_enabled(v53, v54))
        {
          uint64_t v55 = (uint8_t *)swift_slowAlloc();
          v142 = v7;
          uint64_t v56 = swift_slowAlloc();
          uint64_t v170 = v56;
          *(_DWORD *)uint64_t v55 = 136446210;
          uint64_t v57 = sub_1C277C9E0();
          v162[0] = sub_1C263FDFC(v57, v58, &v170);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2601000, v53, v54, "[%{public}s] Queue is idle, starting foreground generation", v55, 0xCu);
          swift_arrayDestroy();
          uint64_t v59 = v56;
          uint64_t v7 = v142;
          MEMORY[0x1C875D230](v59, -1, -1);
          MEMORY[0x1C875D230](v55, -1, -1);
        }

        if (qword_1EBB826E0 != -1) {
          swift_once();
        }
        uint64_t v60 = (os_unfair_lock_s *)*((void *)off_1EBB826D0 + 2);
        v61 = v60 + 4;
        uint64_t v62 = v60 + 6;
        os_unfair_lock_lock(v60 + 6);
        sub_1C2650DE8(v61);
        os_unfair_lock_unlock(v62);
        LOBYTE(v170) = 1;
        uint64_t v171 = v149;
        uint64_t v172 = v151;
        unsigned __int8 v173 = v145;
        long long v174 = v147;
        *(void *)&long long v175 = v144;
        *((void *)&v175 + 1) = v6;
        *(void *)&long long v176 = v7;
        *((void *)&v176 + 1) = *((void *)&v140 + 1);
        uint64_t v41 = ((uint64_t (*)(uint64_t *, __n128))v147)(&v170, v63);
      }
    }
    else
    {
      if ((v4 & 1) == 0)
      {
        if (qword_1EBB85EA8 != -1) {
          swift_once();
        }
        uint64_t v87 = sub_1C277B130();
        __swift_project_value_buffer(v87, (uint64_t)qword_1EBB85ED8);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        v88 = sub_1C277B100();
        os_log_type_t v89 = sub_1C277BD40();
        if (os_log_type_enabled(v88, v89))
        {
          uint64_t v90 = swift_slowAlloc();
          uint64_t v91 = swift_slowAlloc();
          uint64_t v170 = v91;
          *(_DWORD *)uint64_t v90 = 136446466;
          uint64_t v92 = sub_1C277C9E0();
          sub_1C263FDFC(v92, v93, &v170);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v90 + 12) = 2082;
          v162[0] = sub_1C263FDFC(0x756F72676B636162, 0xEA0000000000646ELL, &v170);
          sub_1C277C0D0();
          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C2601000, v88, v89, "[%{public}s] Queue is running foreground generation, dropping generation request with environment %{public}s", (uint8_t *)v90, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v91, -1, -1);
          MEMORY[0x1C875D230](v90, -1, -1);
        }
        else
        {

          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          uint64_t v94 = swift_bridgeObjectRelease_n();
        }
        unint64_t v21 = a2;
        ((void (*)(uint64_t))v7)(v94);
        char v22 = 0;
        goto LABEL_57;
      }
      uint64_t v144 = v5;
      if (qword_1EBB85EA8 != -1) {
        swift_once();
      }
      uint64_t v138 = v9;
      uint64_t v43 = sub_1C277B130();
      __swift_project_value_buffer(v43, (uint64_t)qword_1EBB85ED8);
      uint64_t v44 = sub_1C277B100();
      os_log_type_t v45 = sub_1C277BD40();
      if (os_log_type_enabled(v44, v45))
      {
        id v46 = (uint8_t *)swift_slowAlloc();
        v141 = v7;
        uint64_t v47 = swift_slowAlloc();
        uint64_t v170 = v47;
        *(_DWORD *)id v46 = 136446210;
        uint64_t v48 = sub_1C277C9E0();
        v162[0] = sub_1C263FDFC(v48, v49, &v170);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v44, v45, "[%{public}s] Queue is running foreground generation, cancelling and restarting foreground generation", v46, 0xCu);
        swift_arrayDestroy();
        uint64_t v50 = v47;
        uint64_t v7 = v141;
        MEMORY[0x1C875D230](v50, -1, -1);
        MEMORY[0x1C875D230](v46, -1, -1);
      }

      uint64_t v139 = v6;
      __n128 v51 = sub_1C270621C();
      LOBYTE(v170) = 1;
      uint64_t v171 = v149;
      uint64_t v172 = v151;
      unsigned __int8 v173 = v145;
      long long v174 = v147;
      *(void *)&long long v175 = v144;
      *((void *)&v175 + 1) = v6;
      *(void *)&long long v176 = v7;
      *((void *)&v176 + 1) = *((void *)&v140 + 1);
      uint64_t v41 = ((uint64_t (*)(uint64_t *, __n128))v147)(&v170, v51);
    }
    uint64_t v64 = (void *)v41;
    uint64_t v65 = v42;
    sub_1C2650248(v41, v42, 1);
    unint64_t v150 = v3[5];
    v152 = (void *)v3[4];
    uint64_t v66 = v3[7];
    uint64_t v67 = v3[8];
    uint64_t v148 = v3[6];
    v3[4] = v64;
    v3[5] = v65;
LABEL_45:
    *id v24 = 0u;
    v24[1] = 0u;
    v24[2] = 0u;
    v24[3] = 0u;
    v24[4] = 0u;
    id v104 = v64;
    sub_1C2650914(v152, v150, v148, v66, v67);
    sub_1C260A534(v104, v65, v144, v139);

    char v22 = 2;
LABEL_56:
    unint64_t v21 = a2;
    uint64_t v9 = v138;
LABEL_57:
    *unint64_t v21 = v22;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
    return;
  }
  __break(1u);
}

void sub_1C260F3C8()
{
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C277B130();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB86280);
  swift_retain_n();
  uint64_t v1 = sub_1C277B100();
  os_log_type_t v2 = sub_1C277BD40();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)int v3 = 136446210;
    uint64_t v9 = v4;
    sub_1C277C9E0();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    swift_bridgeObjectRetain();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    sub_1C263FDFC(91, 0xE100000000000000, &v9);
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v1, v2, "%{public}s Requesting fire once barrier", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v4, -1, -1);
    MEMORY[0x1C875D230](v3, -1, -1);
  }
  else
  {

    uint64_t v5 = swift_release_n();
  }
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t)&v6[4];
  uint64_t v8 = v6 + 16;
  os_unfair_lock_lock(v6 + 16);
  sub_1C2650B64(v7);
  os_unfair_lock_unlock(v8);
}

void sub_1C260F67C(double a1)
{
  sub_1C277B6A0();
  double Current = CFAbsoluteTimeGetCurrent();
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C277B130();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBB86280);
  swift_retain_n();
  uint64_t v4 = sub_1C277B100();
  os_log_type_t v5 = sub_1C277BD40();
  if (!os_log_type_enabled(v4, v5))
  {

    swift_release_n();
    goto LABEL_9;
  }
  uint64_t v6 = swift_slowAlloc();
  uint64_t v7 = swift_slowAlloc();
  *(_DWORD *)uint64_t v6 = 136446466;
  uint64_t v9 = v7;
  sub_1C277C9E0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  swift_bridgeObjectRetain();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C263FDFC(91, 0xE100000000000000, &v9);
  sub_1C277C0D0();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v6 + 12) = 2048;
  double v8 = (Current - a1) * 1000.0;
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v8 < 9.22337204e18)
  {
    sub_1C277C0D0();
    _os_log_impl(&dword_1C2601000, v4, v5, "%{public}s Urgent work completed after %ldms", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v7, -1, -1);
    MEMORY[0x1C875D230](v6, -1, -1);

LABEL_9:
    sub_1C2606B40();
    return;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_1C260F964()
{
  uint64_t v0 = sub_1C277B630();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C277B660();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v22 = v5;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v23 = v4;
    uint64_t v24 = v1;
    uint64_t v10 = sub_1C277B130();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EBB86280);
    swift_retain_n();
    id v11 = sub_1C277B100();
    os_log_type_t v12 = sub_1C277BD40();
    if (os_log_type_enabled(v11, v12))
    {
      unsigned __int8 v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v21 = v0;
      uint64_t v15 = v14;
      aBlock[0] = v14;
      *(_DWORD *)unsigned __int8 v13 = 136446210;
      uint64_t v16 = sub_1C260C35C();
      uint64_t v25 = sub_1C263FDFC(v16, v17, aBlock);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v11, v12, "%{public}s Fire once completed", v13, 0xCu);
      swift_arrayDestroy();
      uint64_t v18 = v15;
      uint64_t v0 = v21;
      MEMORY[0x1C875D230](v18, -1, -1);
      MEMORY[0x1C875D230](v13, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    aBlock[4] = (uint64_t)sub_1C2650B84;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C26254FC;
    aBlock[3] = (uint64_t)&block_descriptor_28;
    uint64_t v19 = _Block_copy(aBlock);
    swift_retain();
    sub_1C277B650();
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C2633B78((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
    unint64_t v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C2633D88(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C264C2D8((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v20);
    sub_1C277C120();
    MEMORY[0x1C875BDD0](0, v7, v3, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C260FDDC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1C277A8A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB85EA8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1C277B130();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBB85ED8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  swift_retain_n();
  id v11 = sub_1C277B100();
  os_log_type_t v12 = sub_1C277BD40();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v25[0] = v22;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v14 = sub_1C2608930();
    uint64_t v16 = sub_1C263FDFC(v14, v15, v25);
    uint64_t v23 = a3;
    uint64_t v24 = v16;
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    sub_1C262AFB4(&qword_1EBB82658, MEMORY[0x1E4F27990]);
    uint64_t v17 = sub_1C277C7B0();
    uint64_t v24 = sub_1C263FDFC(v17, v18, v25);
    a3 = v23;
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_1C2601000, v11, v12, "%s: add(uuid:) %s", (uint8_t *)v13, 0x16u);
    uint64_t v19 = v22;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v19, -1, -1);
    MEMORY[0x1C875D230](v13, -1, -1);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  swift_beginAccess();
  id v20 = a3;
  MEMORY[0x1C875B930]();
  if (*(void *)((*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1C277BA90();
  sub_1C277BAE0();
  sub_1C277BA60();
  return swift_endAccess();
}

uint64_t sub_1C2610144(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();

  swift_release();

  return swift_release();
}

uint64_t UnfairLock.init()()
{
  uint64_t v1 = (_DWORD *)swift_slowAlloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = 0;
  return v0;
}

uint64_t GeneratorContext.queue(for:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 24);
  uint64_t v5 = (void *)(v1 + *(int *)(type metadata accessor for GeneratorContext() + 28));
  uint64_t v6 = v5[3];
  uint64_t v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  uint64_t v9 = v3;
  long long v10 = *(_OWORD *)(a1 + 1);
  char v11 = v4;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 64))(&v9, v6, v7);
}

uint64_t sub_1C2610294(void *a1, uint64_t a2)
{
  return ValueJSONWrapper.encode(to:)(a1, a2);
}

uint64_t ValueJSONWrapper.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v8 = *(void *)(a2 + 16);
  type metadata accessor for ValueJSONWrapper.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_1C277C780();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C277C9B0();
  sub_1C277C760();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for ValueJSONWrapper.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C2610438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a5(a1, a2, 1, a3, a4);
}

void sub_1C2610524(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  int v30 = a3;
  sub_1C2644ED8(0, &qword_1EBB85108);
  (*(void (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
  id v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v13 = sub_1C26108D8();
  uint64_t v14 = a1;
  objc_msgSend(v13, sel_setPredicate_, a2);
  uint64_t v15 = sub_1C277C000();
  if (v6)
  {
LABEL_2:

    return;
  }
  uint64_t v16 = a5;
  char v17 = v30;
  if (MEMORY[0x1C875BA00](v15, a4) > 1)
  {
    uint64_t v28 = v14;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v29 = v7;
    uint64_t v18 = sub_1C277B130();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EBB86280);
    uint64_t v19 = sub_1C277B100();
    os_log_type_t v20 = sub_1C277BD20();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1C2601000, v19, v20, "Error: duplicate feed item created...", v21, 2u);
      MEMORY[0x1C875D230](v21, -1, -1);
    }

    uint64_t v22 = sub_1C277BB20();
    uint64_t WitnessTable = swift_getWitnessTable();
    MEMORY[0x1C875B890](&v32, v22, WitnessTable);
    uint64_t v24 = swift_bridgeObjectRelease();
    v27[1] = v27;
    uint64_t v31 = v32;
    uint64_t v25 = MEMORY[0x1F4188790](v24);
    v27[0] = v26;
    v26[2] = a4;
    v26[3] = v16;
    MEMORY[0x1F4188790](v25);
    sub_1C277C590();
    swift_getWitnessTable();
    sub_1C277B9C0();
    swift_bridgeObjectRelease();
    sub_1C270CA44(v28, v17 & 1);
    sub_1C266B94C();
    swift_allocError();
    swift_willThrow();
    goto LABEL_2;
  }
  sub_1C277BB20();
  swift_getWitnessTable();
  sub_1C277BC60();
  swift_bridgeObjectRelease();
}

id sub_1C26108D8()
{
  uint64_t v1 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1C2610930()
{
  return 0x61446E6967756C50;
}

uint64_t sub_1C261094C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v10 = (void **)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  char v11 = *v10;
  *uint64_t v9 = *v10;
  id v12 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v13 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  *id v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = (void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  id v18 = v11;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1C2610A14(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppOrchestrationListener_coordinator;
  uint64_t result = MEMORY[0x1C875D340](v2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppOrchestrationListener_coordinator);
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(v4 + 8);
    uint64_t v8 = (void *)sub_1C277B820();
    id v9 = objc_msgSend(a1, sel_valueForEntitlement_, v8);

    if (v9)
    {
      sub_1C277C110();
      swift_unknownObjectRelease();
      sub_1C262F2E4((uint64_t)v30);
      if (qword_1EBB85EA8 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1C277B130();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EBB85ED8);
      char v11 = a1;
      id v12 = sub_1C277B100();
      os_log_type_t v13 = sub_1C277BD40();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v29 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 138412290;
        *(void *)&v30[0] = v11;
        uint64_t v15 = v11;
        sub_1C277C0D0();
        *uint64_t v29 = v11;

        _os_log_impl(&dword_1C2601000, v12, v13, "Accepting orchestration connection %@", v14, 0xCu);
        sub_1C264E608();
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v29, -1, -1);
        MEMORY[0x1C875D230](v14, -1, -1);
      }
      else
      {

        id v12 = v11;
      }

      id v23 = objc_allocWithZone((Class)type metadata accessor for HealthAppOrchestrationServer());
      uint64_t v24 = v11;
      swift_unknownObjectRetain();
      id v25 = HealthAppOrchestrationServer.init(connection:coordinator:)(v24, v6, v7);
      MEMORY[0x1F4188790](v25);
      uint64_t v27 = v26 + 4;
      uint64_t v28 = v26 + 6;
      os_unfair_lock_lock(v26 + 6);
      sub_1C2650E24(v27);
      os_unfair_lock_unlock(v28);

      swift_unknownObjectRelease();
      return 1;
    }
    else
    {
      memset(v30, 0, sizeof(v30));
      sub_1C262F2E4((uint64_t)v30);
      if (qword_1EBB85EA8 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1C277B130();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EBB85ED8);
      id v17 = a1;
      id v18 = sub_1C277B100();
      os_log_type_t v19 = sub_1C277BD20();
      if (os_log_type_enabled(v18, v19))
      {
        os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = (void *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v20 = 138412290;
        *(void *)&v30[0] = v17;
        id v22 = v17;
        sub_1C277C0D0();
        *uint64_t v21 = v17;

        _os_log_impl(&dword_1C2601000, v18, v19, "Rejecting connection %@ due to missing entitlement", v20, 0xCu);
        sub_1C264E608();
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v21, -1, -1);
        MEMORY[0x1C875D230](v20, -1, -1);
        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C2610E74@<X0>(void *a1@<X8>)
{
  sub_1C277C2D0();
  sub_1C277B8D0();
  sub_1C277C450();
  sub_1C277B8D0();
  swift_beginAccess();
  unint64_t v2 = sub_1C2610F84();
  uint64_t v3 = swift_bridgeObjectRetain();
  MEMORY[0x1C875B960](v3, v2);
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C277B8D0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

unint64_t sub_1C2610F84()
{
  unint64_t result = qword_1EBB80D78;
  if (!qword_1EBB80D78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB80D78);
  }
  return result;
}

id HealthAppOrchestrationServer.init(connection:coordinator:)(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1C264E370();
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  *(void *)&v3[OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_protectedState] = v7;
  *(void *)(v7 + 16) = a1;
  uint64_t v8 = &v3[OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator];
  *(void *)uint64_t v8 = a2;
  *((void *)v8 + 1) = a3;
  v26.receiver = v3;
  v26.super_class = (Class)type metadata accessor for HealthAppOrchestrationServer();
  id v9 = a1;
  swift_unknownObjectRetain();
  id v10 = objc_msgSendSuper2(&v26, sel_init);
  char v11 = self;
  id v12 = v10;
  id v13 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_1F1DD9C50);
  objc_msgSend(v9, sel_setExportedInterface_, v13);

  id v14 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_1F1DDCE80);
  objc_msgSend(v9, sel_setRemoteObjectInterface_, v14);

  objc_msgSend(v9, sel_setExportedObject_, v12);
  objc_msgSend(v9, sel_resume);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v24 = sub_1C2725204;
  uint64_t v25 = v15;
  uint64_t v20 = MEMORY[0x1E4F143A8];
  uint64_t v21 = 1107296256;
  id v22 = sub_1C26254FC;
  id v23 = &block_descriptor_24;
  uint64_t v16 = _Block_copy(&v20);
  swift_release();
  objc_msgSend(v9, sel_setInterruptionHandler_, v16);
  _Block_release(v16);
  id v17 = objc_msgSend(v9, sel_interruptionHandler);
  if (v17)
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    uint64_t v24 = sub_1C2718884;
    uint64_t v25 = v18;
    uint64_t v20 = MEMORY[0x1E4F143A8];
    uint64_t v21 = 1107296256;
    id v22 = sub_1C26254FC;
    id v23 = &block_descriptor_6_0;
    id v17 = _Block_copy(&v20);
    swift_release();
  }
  objc_msgSend(v9, sel_setInvalidationHandler_, v17);

  swift_unknownObjectRelease();
  _Block_release(v17);
  return v12;
}

uint64_t sub_1C2611298@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  id v6 = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = (int *)type metadata accessor for GeneratorContext();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;

  id v6 = (id *)(v0 + v3 + v1[5]);
  sub_1C264C860();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = (char *)v6 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    uint64_t v8 = sub_1C277A840();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  unint64_t v9 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v5 + v1[7]);
  __swift_destroy_boxed_opaque_existential_0(v5 + v1[8]);

  return MEMORY[0x1F4186498](v0, v9 + 8, v2 | 7);
}

uint64_t objectdestroyTm_1()
{
  sub_1C26AB0E8();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  sub_1C26AB140();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t objectdestroyTm_2(uint64_t a1)
{
  swift_release();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t objectdestroyTm_3()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 128, 7);
}

uint64_t objectdestroyTm_4()
{
  uint64_t v1 = (int *)type metadata accessor for GeneratorContext();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;

  uint64_t v6 = (id *)(v0 + v3 + v1[5]);
  sub_1C264C860();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = (char *)v6 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    uint64_t v8 = sub_1C277A840();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  unint64_t v9 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v5 + v1[7]);
  __swift_destroy_boxed_opaque_existential_0(v5 + v1[8]);
  sub_1C2645714(*(void **)(v0 + v9), *(void **)(v0 + v9 + 8), *(void **)(v0 + v9 + 16), *(unsigned char *)(v0 + v9 + 24));

  return MEMORY[0x1F4186498](v0, v9 + 25, v2 | 7);
}

uint64_t objectdestroyTm_5()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t UserInterface.identifier.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3 = 0;
  if (a3 != 6) {
    uint64_t v3 = a1;
  }
  sub_1C263D4D4(a1, a2, a3);
  return v3;
}

uint64_t sub_1C26118F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C277B630();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C277B660();
  uint64_t result = MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(a1 + 1) & 1) == 0 && (*(unsigned char *)(a1 + 3) & 1) == 0)
  {
    uint64_t v34 = v11;
    uint64_t v35 = v6;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v36 = v2;
    uint64_t v14 = sub_1C277B130();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBB86280);
    swift_retain_n();
    uint64_t v15 = sub_1C277B100();
    os_log_type_t v16 = sub_1C277BD40();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      LODWORD(v33) = v17;
      os_log_type_t v19 = (uint8_t *)v18;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v32 = v20;
      int v30 = v19;
      os_log_t v31 = v15;
      *(_DWORD *)os_log_type_t v19 = 136446210;
      uint64_t v43 = v20;
      uint64_t v29 = v19 + 4;
      uint64_t aBlock = 91;
      unint64_t v38 = 0xE100000000000000;
      sub_1C277C9E0();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
      swift_bridgeObjectRetain();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
      uint64_t aBlock = sub_1C263FDFC(aBlock, v38, &v43);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      id v22 = v30;
      os_log_t v21 = v31;
      _os_log_impl(&dword_1C2601000, v31, (os_log_type_t)v33, "%{public}s Calling all fire once barriers", v30, 0xCu);
      uint64_t v23 = v32;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v23, -1, -1);
      MEMORY[0x1C875D230](v22, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    *(unsigned char *)(a1 + 3) = 1;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    uint64_t v25 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = MEMORY[0x1E4FBC860];
    uint64_t v33 = *(void *)(a2 + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v25;
    uint64_t v41 = sub_1C2650BAC;
    uint64_t v42 = v26;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v38 = 1107296256;
    unint64_t v39 = sub_1C26254FC;
    __n128 v40 = &block_descriptor_34;
    uint64_t v27 = _Block_copy(&aBlock);
    sub_1C277B650();
    uint64_t v43 = v24;
    sub_1C2633B78((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
    uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C2633D88(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C264C2D8((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v28);
    sub_1C277C120();
    MEMORY[0x1C875BDD0](0, v13, v8, v27);
    _Block_release(v27);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v9);
    return swift_release();
  }
  return result;
}

id sub_1C2611E28(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1C277A8A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t aBlock[6] = *(void *)(v2 + 16);
  uint64_t v20 = v2;
  uint64_t v21 = a2;
  id v22 = a1;
  type metadata accessor for UnfairLock();
  sub_1C262AFB4((unint64_t *)&qword_1EBB85390, (void (*)(uint64_t))type metadata accessor for UnfairLock);
  swift_retain();
  sub_1C277AA60();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  uint64_t v9 = (void *)sub_1C277A860();
  id v10 = (void *)sub_1C277B820();
  objc_msgSend(a1, sel_setUserInfoObject_forKey_, v9, v10);

  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = (uint64_t (*)())objc_msgSend(a1, sel_cancellationHandler);
  if (v11)
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    uint64_t v11 = sub_1C2718884;
  }
  else
  {
    uint64_t v12 = 0;
  }
  sub_1C26121B4((uint64_t)v11);
  sub_1C261AE94((uint64_t)v11);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v13;
  v15[3] = v14;
  uint64_t v15[4] = v11;
  v15[5] = v12;
  aBlock[4] = sub_1C2718878;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C26254FC;
  aBlock[3] = &block_descriptor_22;
  os_log_type_t v16 = _Block_copy(aBlock);
  sub_1C26121B4((uint64_t)v11);
  swift_retain();
  swift_retain();
  sub_1C26121B4((uint64_t)sub_1C2718878);
  swift_release();
  objc_msgSend(a1, sel_setCancellationHandler_, v16);
  _Block_release(v16);
  swift_release();
  swift_release();
  swift_release();
  id v17 = a1;
  sub_1C261AE94((uint64_t)v11);
  return v17;
}

uint64_t sub_1C26121B4(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

void *HealthAppPluginSource.init(bundleProvider:knownBundles:disabledBundleIdentifiers:allowedBundleIdentifiers:)(id (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v63 = sub_1C277A640();
  uint64_t v61 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v60 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C277A750();
  uint64_t v65 = *(void *)(v13 - 8);
  uint64_t v66 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v64 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v59 = (char *)v56 - v16;
  sub_1C264E3D0();
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 28) = 0;
  *(void *)(v17 + 16) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v17 + 24) = 0;
  v6[2] = v17;
  v6[5] = a3;
  v6[6] = a4;
  v6[7] = a5;
  uint64_t v18 = qword_1EBB85F90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C277B130();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EBB85FF0);
  uint64_t v21 = sub_1C277B100();
  os_log_type_t v22 = sub_1C277BD40();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_1C2601000, v21, v22, "Setting up for bundle loading...", v23, 2u);
    MEMORY[0x1C875D230](v23, -1, -1);
  }

  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1C277B100();
  os_log_type_t v25 = sub_1C277BD40();
  if (os_log_type_enabled(v24, v25))
  {
    unint64_t v58 = (uint8_t *)v20;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v67 = a1;
    uint64_t v27 = (uint8_t *)v26;
    uint64_t v57 = swift_slowAlloc();
    v71[0] = v57;
    uint64_t v68 = a2;
    *(_DWORD *)uint64_t v27 = 136315138;
    v56[1] = v27 + 4;
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v29 = sub_1C261C11C(v28);
    swift_bridgeObjectRelease();
    uint64_t v69 = v6;
    uint64_t v70 = (uint64_t)v29;
    sub_1C2648924(0, (unint64_t *)&qword_1EBB85E70);
    sub_1C264EA48((unint64_t *)&qword_1EBB85E78, (unint64_t *)&qword_1EBB85E70);
    uint64_t v30 = sub_1C277B7D0();
    unint64_t v32 = v31;
    swift_release();
    uint64_t v70 = sub_1C263FDFC(v30, v32, v71);
    a2 = v68;
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    uint64_t v6 = v69;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v24, v25, "Disabled identifiers: %s", v27, 0xCu);
    uint64_t v33 = v57;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v33, -1, -1);
    uint64_t v34 = v27;
    a1 = v67;
    MEMORY[0x1C875D230](v34, -1, -1);

    if (!a5) {
      goto LABEL_11;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!a5) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1C277B100();
  os_log_type_t v36 = sub_1C277BD40();
  if (!os_log_type_enabled(v35, v36))
  {

    swift_bridgeObjectRelease_n();
    if (a1) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v37 = swift_slowAlloc();
  uint64_t v68 = a2;
  unint64_t v38 = (uint8_t *)v37;
  uint64_t v39 = swift_slowAlloc();
  v71[0] = v39;
  uint64_t v67 = a1;
  *(_DWORD *)unint64_t v38 = 136315138;
  unint64_t v58 = v38 + 4;
  uint64_t v40 = swift_bridgeObjectRetain();
  uint64_t v41 = sub_1C261C11C(v40);
  swift_bridgeObjectRelease();
  uint64_t v69 = v6;
  uint64_t v70 = (uint64_t)v41;
  sub_1C2648924(0, (unint64_t *)&qword_1EBB85E70);
  sub_1C264EA48((unint64_t *)&qword_1EBB85E78, (unint64_t *)&qword_1EBB85E70);
  uint64_t v42 = sub_1C277B7D0();
  unint64_t v44 = v43;
  swift_release();
  uint64_t v70 = sub_1C263FDFC(v42, v44, v71);
  a1 = v67;
  sub_1C277C0D0();
  swift_bridgeObjectRelease_n();
  uint64_t v6 = v69;
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1C2601000, v35, v36, "PLUGIN ALLOW LIST ENABLED; limiting plugins to: %s", v38, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1C875D230](v39, -1, -1);
  os_log_type_t v45 = v38;
  a2 = v68;
  MEMORY[0x1C875D230](v45, -1, -1);

LABEL_11:
  if (!a1)
  {
LABEL_12:
    type metadata accessor for StorageLocations();
    id v46 = v64;
    static StorageLocations.rootDirectory.getter();
    v71[0] = 0xD000000000000026;
    v71[1] = 0x80000001C278AE90;
    uint64_t v48 = v60;
    uint64_t v47 = v61;
    uint64_t v49 = v63;
    (*(void (**)(char *, void, uint64_t))(v61 + 104))(v60, *MEMORY[0x1E4F276A8], v63);
    sub_1C26366A8();
    uint64_t v50 = v59;
    sub_1C277A740();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
    swift_bridgeObjectRelease();
    uint64_t v52 = v65;
    uint64_t v51 = v66;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v46, v66);
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
    v53(v46, v50, v51);
    unint64_t v54 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    a2 = swift_allocObject();
    v53((char *)(a2 + v54), v46, v51);
    a1 = sub_1C2637F7C;
  }
LABEL_13:
  v6[3] = a1;
  v6[4] = a2;
  return v6;
}

NSOperationQueue __swiftcall NSOperationQueue.init(name:maxConcurrentOperationCount:)(Swift::String name, Swift::Int_optional maxConcurrentOperationCount)
{
  Swift::Bool is_nil = maxConcurrentOperationCount.is_nil;
  Swift::Int value = maxConcurrentOperationCount.value;
  id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v5 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setName_, v5);

  if (!is_nil) {
    objc_msgSend(v4, sel_setMaxConcurrentOperationCount_, value);
  }

  return (NSOperationQueue)v4;
}

uint64_t sub_1C26129C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C26129E0(a1);
}

uint64_t sub_1C26129E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v12 = a1;
  uint64_t v11 = sub_1C277ACF0();
  uint64_t v9 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2612CDC(0, &qword_1EBB83178, MEMORY[0x1E4F66E30]);
  uint64_t v8 = *(void *)(*(void *)(sub_1C277AD10() - 8) + 72);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C277E470;
  sub_1C2612CDC(0, &qword_1EBB83190, MEMORY[0x1E4F66EC0]);
  sub_1C277B040();
  uint64_t v3 = swift_allocObject();
  long long v7 = xmmword_1C277E480;
  *(_OWORD *)(v3 + 16) = xmmword_1C277E480;
  sub_1C277B850();
  sub_1C277B000();
  swift_bridgeObjectRelease();
  id v4 = *(void (**)(char *, void, uint64_t))(v9 + 104);
  uint64_t v5 = v11;
  v4(v2, *MEMORY[0x1E4F66E20], v11);
  sub_1C277AD00();
  *(_OWORD *)(swift_allocObject() + 16) = v7;
  sub_1C277B010();
  v4(v2, *MEMORY[0x1E4F66E18], v5);
  sub_1C277AD00();
  v4(v2, *MEMORY[0x1E4F66E28], v5);
  return sub_1C277AD00();
}

void sub_1C2612CDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277C7C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2612D30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2612D94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1C260445C(a1);
  uint64_t v10 = *(void *)(a1 + 16);
  swift_retain();
  sub_1C261AE94(v10);
  *(void *)(a1 + 16) = a3;
  *(void *)(a1 + 24) = a4;
  uint64_t v11 = *(void **)(a1 + 32);
  id v12 = a5;

  *(void *)(a1 + 32) = a5;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_1C26FB6F4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C26254FC;
  aBlock[3] = (uint64_t)&block_descriptor_44_0;
  uint64_t v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v12, sel_setCancellationHandler_, v16);
  _Block_release(v16);
  if (*(unsigned char *)a1 == 1 && *(unsigned char *)(a1 + 2) == 1)
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C277B130();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EBB86280);
    id v18 = v12;
    swift_retain_n();
    id v19 = v18;
    uint64_t v20 = sub_1C277B100();
    os_log_type_t v21 = sub_1C277BD40();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136446466;
      aBlock[0] = v32;
      uint64_t v23 = sub_1C260C35C();
      uint64_t v34 = sub_1C263FDFC(v23, v24, aBlock);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v25 = sub_1C26131DC();
      uint64_t v34 = sub_1C263FDFC(v25, v26, aBlock);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v20, v21, "%{public}s Ready, and urgent work already completed, starting legacy generation with progress %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v32, -1, -1);
      MEMORY[0x1C875D230](v22, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v27 = a2[5];
    uint64_t v28 = a2[6];
    __swift_project_boxed_opaque_existential_1(a2 + 2, v27);
    uint64_t v29 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = *(uint64_t (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v28 + 24);
    swift_retain();
    uint64_t v31 = v30(sub_1C26FB674, v29, v27, v28);
    swift_release_n();

    *(void *)(a1 + 40) = v31;
  }
}

uint64_t objectdestroy_115Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C26131DC()
{
  id v1 = objc_msgSend(v0, sel_userInfo);
  type metadata accessor for ProgressUserInfoKey(0);
  sub_1C2633B78((unint64_t *)&unk_1EBB82FA0, type metadata accessor for ProgressUserInfoKey);
  uint64_t v2 = sub_1C277B760();

  uint64_t v3 = sub_1C277B820();
  unint64_t v4 = (void *)v3;
  if (!*(void *)(v2 + 16) || (unint64_t v5 = sub_1C261333C(v3), (v6 & 1) == 0))
  {
    long long v9 = 0u;
    long long v10 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1C263FED0(*(void *)(v2 + 56) + 32 * v5, (uint64_t)&v9);

  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1))
  {
LABEL_7:
    sub_1C262F2E4((uint64_t)&v9);
    return 0x6E776F6E6B6E753CLL;
  }
  if (swift_dynamicCast()) {
    return v8;
  }
  return 0x6E776F6E6B6E753CLL;
}

unint64_t sub_1C261333C(uint64_t a1)
{
  sub_1C277B850();
  sub_1C277C8C0();
  sub_1C277B8B0();
  uint64_t v2 = sub_1C277C910();
  swift_bridgeObjectRelease();

  return sub_1C26133D0(a1, v2);
}

unint64_t sub_1C26133D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1C277B850();
    uint64_t v8 = v7;
    if (v6 == sub_1C277B850() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1C277B850();
          uint64_t v15 = v14;
          if (v13 == sub_1C277B850() && v15 == v16) {
            break;
          }
          char v18 = sub_1C277C7E0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

void type metadata accessor for ProgressUserInfoKey(uint64_t a1)
{
}

uint64_t Publishers.CombineLatest3.bufferForCombineLatestForGeneratorPipeline(size:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v0 = sub_1C277B1D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = sub_1C277B1C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F1A900], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F1A918], v0);
  swift_getWitnessTable();
  sub_1C277B560();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t destroy for DatabaseChangesQueryInputSignal.State(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26137F0()
{
  uint64_t v1 = sub_1C277B680();
  uint64_t v28 = *(void *)(v1 - 8);
  uint64_t v29 = v1;
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  unint64_t v26 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v27 = (char *)&v25 - v4;
  uint64_t v5 = sub_1C277B630();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v35 = sub_1C26FB624;
  uint64_t v36 = v6;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v32 = 1107296256;
  uint64_t v33 = sub_1C26254FC;
  uint64_t v34 = &block_descriptor_13_0;
  _Block_copy(&aBlock);
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1C2633B78((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C2633D88(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C264C2D8((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v7);
  swift_retain();
  sub_1C277C120();
  sub_1C277B6B0();
  swift_allocObject();
  uint64_t v8 = sub_1C277B690();
  swift_release();
  swift_release();
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1C277B130();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBB86280);
  swift_retain_n();
  long long v10 = sub_1C277B100();
  os_log_type_t v11 = sub_1C277BD40();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    uint64_t v25 = v12 + 4;
    uint64_t v30 = v13;
    uint64_t aBlock = 91;
    unint64_t v32 = 0xE100000000000000;
    sub_1C277C9E0();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    swift_bridgeObjectRetain();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    uint64_t aBlock = sub_1C263FDFC(aBlock, v32, &v30);
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v10, v11, "%{public}s Starting urgent work", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v13, -1, -1);
    MEMORY[0x1C875D230](v12, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  uint64_t v15 = v0[5];
  uint64_t v16 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v15);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  char v18 = (CFAbsoluteTime *)swift_allocObject();
  *((void *)v18 + 2) = v17;
  *((void *)v18 + 3) = v8;
  v18[4] = Current;
  id v19 = *(void (**)(uint64_t (*)(), CFAbsoluteTime *, uint64_t, uint64_t))(v16 + 8);
  swift_retain();
  swift_retain();
  v19(sub_1C2650BF8, v18, v15, v16);
  swift_release();
  swift_release();
  uint64_t v20 = v26;
  sub_1C277B670();
  os_log_type_t v21 = v27;
  MEMORY[0x1C875B5E0](v20, (char *)v0+ OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_urgentWorkTimeoutInterval);
  uint64_t v22 = v29;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v28 + 8);
  v23(v20, v29);
  sub_1C277BE60();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v23)(v21, v22);
}

Swift::Void __swiftcall NSManagedObjectContext.queue_deleteDataForInvalidProfiles(existingProfiles:)(Swift::OpaquePointer existingProfiles)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1C2641054(0, &qword_1EBB82660, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v43 - v4;
  uint64_t v6 = sub_1C277A8A0();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v47 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  os_log_type_t v11 = (char *)&v43 - v10;
  MEMORY[0x1F4188790](v9);
  id v46 = (char *)&v43 - v13;
  uint64_t v49 = *((void *)existingProfiles._rawValue + 2);
  if (v49)
  {
    uint64_t v43 = ObjectType;
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(v12 + 32);
    uint64_t v15 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    uint64_t v44 = v12;
    uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    uint64_t v17 = 0;
    unint64_t v48 = MEMORY[0x1E4FBC860];
    rawValue = existingProfiles._rawValue;
    while (1)
    {
      char v18 = (void *)*((void *)existingProfiles._rawValue + v17 + 4);
      if (v18)
      {
        id v19 = v18;
        id v20 = objc_msgSend(v19, sel_identifier);
        sub_1C277A880();

        os_log_type_t v21 = *v14;
        (*v14)(v5, v11, v6);
        (*v15)(v5, 0, 1, v6);

        if ((*v16)(v5, 1, v6) != 1)
        {
          uint64_t v22 = v46;
          v21(v46, v5, v6);
          v21(v47, v22, v6);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v23 = v48;
          }
          else {
            unint64_t v23 = sub_1C2640DB8(0, *(void *)(v48 + 16) + 1, 1, v48, &qword_1EBB83118, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
          }
          unint64_t v25 = *(void *)(v23 + 16);
          unint64_t v24 = *(void *)(v23 + 24);
          if (v25 >= v24 >> 1) {
            unint64_t v23 = sub_1C2640DB8(v24 > 1, v25 + 1, 1, v23, &qword_1EBB83118, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
          }
          *(void *)(v23 + 16) = v25 + 1;
          unint64_t v26 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
          unint64_t v48 = v23;
          v21((char *)(v23 + v26 + *(void *)(v44 + 72) * v25), v47, v6);
          existingProfiles._rawValue = rawValue;
          goto LABEL_5;
        }
      }
      else
      {
        (*v15)(v5, 1, 1, v6);
      }
      sub_1C2651318((uint64_t)v5);
LABEL_5:
      if (v49 == ++v17)
      {
        swift_bridgeObjectRelease();
        uint64_t ObjectType = v43;
        goto LABEL_16;
      }
    }
  }
  unint64_t v48 = MEMORY[0x1E4FBC860];
LABEL_16:
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1C277B130();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EBB86280);
  unint64_t v28 = v48;
  swift_bridgeObjectRetain_n();
  uint64_t v29 = sub_1C277B100();
  os_log_type_t v30 = sub_1C277BD40();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v50 = v32;
    uint64_t v51 = ObjectType;
    *(_DWORD *)uint64_t v31 = 136446466;
    swift_getMetatypeMetadata();
    uint64_t v33 = sub_1C277B860();
    uint64_t v51 = sub_1C263FDFC(v33, v34, &v50);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    uint64_t v35 = swift_bridgeObjectRetain();
    uint64_t v36 = MEMORY[0x1C875B960](v35, v6);
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v51 = sub_1C263FDFC(v36, v38, &v50);
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v29, v30, "[%{public}s]: Deleting feedItems not associated with these sourceProfiles: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v32, -1, -1);
    MEMORY[0x1C875D230](v31, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  type metadata accessor for Profile();
  id v39 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  sub_1C2643254(0, (unint64_t *)&qword_1EBB854B8, (unint64_t *)&qword_1EBB85F40);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1C277E470;
  sub_1C2641054(0, &qword_1EBB82DE8, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB320]);
  *(void *)(v40 + 56) = v41;
  *(void *)(v40 + 64) = sub_1C264EA8C();
  *(void *)(v40 + 32) = v28;
  *(void *)(v40 + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(v40 + 104) = sub_1C263226C();
  *(void *)(v40 + 72) = 0xD000000000000010;
  *(void *)(v40 + 80) = 0x80000001C2789760;
  uint64_t v42 = (void *)sub_1C277BCC0();
  objc_msgSend(v39, sel_setPredicate_, v42);
  sub_1C2608D90((uint64_t)v42);
}

id sub_1C2614500(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = a1;
  uint64_t v5 = sub_1C277A8A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C277A890();
  sub_1C277A850();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v9 = sub_1C26043C0(6);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  sub_1C2633D88(0, &qword_1EBB83A10, (uint64_t (*)(uint64_t))sub_1C264E6D4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C277E480;
  *(void *)(inited + 32) = sub_1C277B820();
  uint64_t v17 = MEMORY[0x1C875B7A0](v9, v11, v13, v15);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  *(void *)(inited + 64) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 40) = v17;
  *(void *)(inited + 48) = v19;
  sub_1C2605730(inited);
  id v20 = objc_allocWithZone(MEMORY[0x1E4F28F90]);
  type metadata accessor for ProgressUserInfoKey(0);
  sub_1C2633B78((unint64_t *)&unk_1EBB82FA0, type metadata accessor for ProgressUserInfoKey);
  os_log_type_t v21 = (void *)sub_1C277B750();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v20, sel_initWithParent_userInfo_, 0, v21);

  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1C277B130();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EBB86280);
  swift_retain_n();
  id v24 = v22;
  unint64_t v25 = sub_1C277B100();
  os_log_type_t v26 = sub_1C277BD40();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v40 = a2;
    uint64_t v29 = v28;
    *(_DWORD *)uint64_t v27 = 136446466;
    uint64_t v42 = 91;
    unint64_t v43 = 0xE100000000000000;
    v44[0] = v28;
    sub_1C277C9E0();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    swift_bridgeObjectRetain();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    uint64_t v42 = sub_1C263FDFC(v42, v43, v44);
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v30 = sub_1C26131DC();
    uint64_t v42 = sub_1C263FDFC(v30, v31, v44);
    sub_1C277C0D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v25, v26, "%{public}s Requesting legacy generation with created progress %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    uint64_t v32 = v29;
    a2 = v40;
    MEMORY[0x1C875D230](v32, -1, -1);
    MEMORY[0x1C875D230](v27, -1, -1);
  }
  else
  {

    uint64_t v33 = swift_release_n();
  }
  MEMORY[0x1F4188790](v33);
  uint64_t v34 = v41;
  *(&v39 - 4) = v3;
  *(&v39 - 3) = v34;
  uint64_t v36 = (uint64_t)&v35[4];
  unint64_t v37 = v35 + 16;
  *(&v39 - 2) = a2;
  *(&v39 - 1) = (uint64_t)v24;
  os_unfair_lock_lock(v35 + 16);
  sub_1C2650C04(v36);
  os_unfair_lock_unlock(v37);
  return v24;
}

uint64_t HealthAppPluginSource.launchGenerationPlugins()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = v0[5];
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v23 = v11;
  if (v11)
  {
    id v20 = v1;
    unint64_t v13 = 0;
    uint64_t v21 = v2;
    uint64_t v22 = v3;
    while (v13 < *(void *)(v9 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v15 = *(void *)(v3 + 72);
      sub_1C2635178(v9 + v14 + v15 * v13, (uint64_t)v8, type metadata accessor for HealthAppPluginSource.KnownBundle);
      if (v8[*(int *)(v2 + 28)] == 1)
      {
        sub_1C2635B20((uint64_t)v8, (uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C264E020(0, *(void *)(v10 + 16) + 1, 1);
        }
        uint64_t v10 = v24;
        unint64_t v17 = *(void *)(v24 + 16);
        unint64_t v16 = *(void *)(v24 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1C264E020(v16 > 1, v17 + 1, 1);
          uint64_t v10 = v24;
        }
        *(void *)(v10 + 16) = v17 + 1;
        uint64_t result = sub_1C2635B20((uint64_t)v6, v10 + v14 + v17 * v15);
        uint64_t v2 = v21;
        uint64_t v3 = v22;
      }
      else
      {
        uint64_t result = sub_1C2635098((uint64_t)v8, type metadata accessor for HealthAppPluginSource.KnownBundle);
      }
      if (v23 == ++v13)
      {
        uint64_t v10 = v24;
        uint64_t v1 = v20;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v18 = sub_1C2615910(v10, v1);
    swift_release();
    swift_release();
    return (uint64_t)v18;
  }
  return result;
}

uint64_t Publishers.CombineLatest4.bufferForCombineLatestForGeneratorPipeline(size:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v0 = sub_1C277B1D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = sub_1C277B1C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F1A900], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F1A918], v0);
  swift_getWitnessTable();
  sub_1C277B560();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C2614ED8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1C277B130();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1C277B110();
}

void sub_1C2614F50(uint64_t a1, void *a2)
{
  if ((*(unsigned char *)(a1 + 1) & 1) == 0 && (*(unsigned char *)(a1 + 2) & 1) == 0)
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C277B130();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBB86280);
    swift_retain_n();
    uint64_t v5 = sub_1C277B100();
    os_log_type_t v6 = sub_1C277BD40();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446210;
      uint64_t v26 = v8;
      sub_1C277C9E0();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
      swift_bridgeObjectRetain();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
      sub_1C263FDFC(91, 0xE100000000000000, &v26);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v5, v6, "%{public}s Starting fire once", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v8, -1, -1);
      MEMORY[0x1C875D230](v7, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    *(unsigned char *)(a1 + 2) = 1;
    uint64_t v9 = a2[5];
    uint64_t v10 = a2[6];
    __swift_project_boxed_opaque_existential_1(a2 + 2, v9);
    uint64_t v11 = swift_allocObject();
    swift_weakInit();
    uint64_t v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 16);
    swift_retain();
    v12(sub_1C2650B88, v11, v9, v10);
    swift_release_n();
    uint64_t v13 = *(void *)(a1 + 16);
    swift_retain_n();
    unint64_t v14 = sub_1C277B100();
    os_log_type_t v15 = sub_1C277BD40();
    BOOL v16 = os_log_type_enabled(v14, v15);
    if (v13)
    {
      if (v16)
      {
        unint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        *(_DWORD *)unint64_t v17 = 136446210;
        uint64_t v26 = v25;
        sub_1C277C9E0();
        sub_1C277B8D0();
        swift_bridgeObjectRelease();
        sub_1C277B8D0();
        swift_bridgeObjectRetain();
        sub_1C277B8D0();
        swift_bridgeObjectRelease();
        sub_1C277B8D0();
        sub_1C263FDFC(91, 0xE100000000000000, &v26);
        sub_1C277C0D0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v14, v15, "%{public}s Starting legacy generation", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v25, -1, -1);
        MEMORY[0x1C875D230](v17, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      uint64_t v20 = a2[5];
      uint64_t v21 = a2[6];
      __swift_project_boxed_opaque_existential_1(a2 + 2, v20);
      uint64_t v22 = swift_allocObject();
      swift_weakInit();
      uint64_t v23 = *(uint64_t (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v21 + 24);
      swift_retain();
      uint64_t v24 = v23(sub_1C26FB674, v22, v20, v21);
      swift_release_n();

      *(void *)(a1 + 40) = v24;
    }
    else if (v16)
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446210;
      uint64_t v26 = v19;
      sub_1C277C9E0();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
      swift_bridgeObjectRetain();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
      sub_1C263FDFC(91, 0xE100000000000000, &v26);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v14, v15, "%{public}s No requests for legacy generation", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v19, -1, -1);
      MEMORY[0x1C875D230](v18, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t HealthExperienceStoreOracle.description.getter()
{
  v5[1] = 0xE000000000000000;
  sub_1C277C2D0();
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  sub_1C277B8D0();
  swift_getObjectType();
  sub_1C26158D8();
  sub_1C277B860();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  v5[0] = v0;
  sub_1C277C450();
  sub_1C277B8D0();
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 16;
  os_unfair_lock_lock(v1 + 16);
  sub_1C26157DC(v2, (uint64_t)v5);
  os_unfair_lock_unlock(v3);
  sub_1C2615870();
  sub_1C277B860();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  return v6;
}

uint64_t sub_1C26157DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C261580C(a1 + 8, a2);
}

uint64_t sub_1C261580C(uint64_t a1, uint64_t a2)
{
  sub_1C2615870();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C2615870()
{
  if (!qword_1EBB80DE0)
  {
    sub_1C262B07C(255, &qword_1EBB82698);
    unint64_t v0 = sub_1C277C0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB80DE0);
    }
  }
}

unint64_t sub_1C26158D8()
{
  unint64_t result = qword_1EBB826A0;
  if (!qword_1EBB826A0)
  {
    type metadata accessor for HealthExperienceStoreOracle();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB826A0);
  }
  return result;
}

void *sub_1C2615910(uint64_t a1, void *a2)
{
  uint64_t v46 = *a2;
  uint64_t v45 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  uint64_t v5 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  unint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C263F5FC(0, &qword_1EBB84FA8, type metadata accessor for HealthAppPluginSource.KnownBundle, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v36 - v9;
  uint64_t v44 = *(void *)(a1 + 16);
  if (!v44) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v49 = v2;
  unint64_t v38 = v10;
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v42 = a1 + v11;
  unint64_t v43 = a2;
  uint64_t v12 = a2[5];
  uint64_t v13 = a2[2];
  uint64_t v40 = (void (*)(char *, uint64_t))(v13 + 16);
  os_unfair_lock_t v41 = (os_unfair_lock_t)(v13 + 28);
  uint64_t v14 = *(void *)(v5 + 72);
  uint64_t v54 = v12;
  uint64_t v37 = v12 + v11;
  uint64_t v39 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v36[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  BOOL v16 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v17 = v42 + v14 * v15;
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = *(void *)(v17 + 24);
    uint64_t v20 = *(void *)(v54 + 16);
    swift_bridgeObjectRetain();
    if (v20)
    {
      uint64_t v21 = v37;
      while (1)
      {
        sub_1C2635178(v21, (uint64_t)v7, type metadata accessor for HealthAppPluginSource.KnownBundle);
        BOOL v22 = *((void *)v7 + 2) == v18 && *((void *)v7 + 3) == v19;
        if (v22 || (sub_1C277C7E0() & 1) != 0) {
          break;
        }
        sub_1C2635098((uint64_t)v7, type metadata accessor for HealthAppPluginSource.KnownBundle);
        v21 += v14;
        if (!--v20) {
          goto LABEL_11;
        }
      }
      uint64_t v24 = (uint64_t)v38;
      sub_1C2635B20((uint64_t)v7, (uint64_t)v38);
      uint64_t v23 = 0;
    }
    else
    {
LABEL_11:
      uint64_t v23 = 1;
      uint64_t v24 = (uint64_t)v38;
    }
    (*v39)(v24, v23, 1, v45);
    uint64_t v25 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v25);
    v36[-6] = v18;
    v36[-5] = v19;
    uint64_t v26 = v43;
    v36[-4] = v24;
    v36[-3] = v26;
    LOBYTE(v36[-2]) = 1;
    v36[-1] = v46;
    uint64_t v27 = v41;
    os_unfair_lock_lock(v41);
    uint64_t v28 = v49;
    sub_1C2635B98(v40, &v50);
    if (v28) {
      break;
    }
    os_unfair_lock_unlock(v27);
    sub_1C263F58C(v24, &qword_1EBB84FA8, type metadata accessor for HealthAppPluginSource.KnownBundle);
    uint64_t v29 = v50;
    uint64_t v30 = v52;
    long long v47 = v53;
    long long v48 = v51;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v49 = 0;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      BOOL v16 = sub_1C2637E48(0, v16[2] + 1, 1, v16);
    }
    unint64_t v33 = v16[2];
    unint64_t v32 = v16[3];
    if (v33 >= v32 >> 1) {
      BOOL v16 = sub_1C2637E48((void *)(v32 > 1), v33 + 1, 1, v16);
    }
    v16[2] = v33 + 1;
    uint64_t v34 = &v16[6 * v33];
    v34[4] = v29;
    ++v15;
    *(_OWORD *)(v34 + 5) = v48;
    v34[7] = v30;
    *((_OWORD *)v34 + 4) = v47;
    if (v15 == v44)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
  }
  os_unfair_lock_unlock(v27);
  sub_1C263F58C(v24, &qword_1EBB84FA8, type metadata accessor for HealthAppPluginSource.KnownBundle);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

void *PluginContentStateManager.init(domain:healthStore:category:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  long long v4[2] = a1;
  v4[3] = a2;
  id v7 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithCategory_domainName_healthStore_, a4, v8, a3);

  v4[4] = v9;
  return v4;
}

void sub_1C2615DFC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(v10, a3, a4);
  swift_release();
}

void sub_1C2615E9C(uint64_t a1, void *a2, void *a3)
{
  sub_1C2615EA4(a1, a2, a3, v3);
}

void sub_1C2615EA4(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v6 = a4 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C875D340](v6);
  if (v7)
  {
    id v8 = (void *)v7;
    if (a2)
    {
      id v9 = a2;
      sub_1C2616180(v9);
    }
    else
    {
      if (qword_1EBB85ED0 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1C277B130();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EBB85EB8);
      id v11 = v8;
      id v12 = a3;
      id v13 = v11;
      id v14 = a3;
      uint64_t v15 = sub_1C277B100();
      os_log_type_t v16 = sub_1C277BD20();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v18 = (void *)swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v25 = v24;
        *(_DWORD *)uint64_t v17 = 138412546;
        id v19 = v13;
        sub_1C277C0D0();
        *uint64_t v18 = v8;

        *(_WORD *)(v17 + 12) = 2080;
        if (a3)
        {
          id v20 = a3;
          sub_1C26532A4();
          uint64_t v21 = sub_1C277B860();
          unint64_t v23 = v22;
        }
        else
        {
          unint64_t v23 = 0xE300000000000000;
          uint64_t v21 = 7104878;
        }
        sub_1C263FDFC(v21, v23, &v25);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C2601000, v15, v16, "[%@] Error when trying to get model from query: %s", (uint8_t *)v17, 0x16u);
        sub_1C26A1EFC(0, (unint64_t *)&qword_1EBB854A0, (unint64_t *)&qword_1EBB85F30);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v18, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v24, -1, -1);
        MEMORY[0x1C875D230](v17, -1, -1);
      }
      else
      {
      }
    }
  }
}

uint64_t sub_1C2616180(void *a1)
{
  swift_getObjectType();
  uint64_t v3 = sub_1C277AEE0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26167E4();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB83B60 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBB83B40);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v12, v3);
  sub_1C2644ED8(0, (unint64_t *)&unk_1EBB80D98);
  sub_1C261677C();
  id v13 = a1;
  sub_1C277AF10();
  swift_getObjectType();
  id v46 = v1;
  sub_1C2616858(&qword_1EBB82860, v14, (void (*)(uint64_t))type metadata accessor for PregnancyStateInputSignal);
  sub_1C277AE40();
  if (HKShowSensitiveLogItems())
  {
    if (qword_1EBB85ED0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1C277B130();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EBB85EB8);
    id v16 = v13;
    id v17 = v1;
    id v18 = v16;
    id v19 = v17;
    id v20 = sub_1C277B100();
    os_log_type_t v21 = sub_1C277BD40();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      int v43 = v22;
      uint64_t v24 = v23;
      uint64_t v41 = swift_slowAlloc();
      os_log_t v42 = v20;
      uint64_t v25 = (void *)v41;
      uint64_t v44 = swift_slowAlloc();
      uint64_t v47 = v44;
      *(_DWORD *)uint64_t v24 = 138412802;
      uint64_t v45 = v8;
      id v46 = v19;
      id v26 = v19;
      sub_1C277C0D0();
      *uint64_t v25 = v19;

      *(_WORD *)(v24 + 12) = 2080;
      v40[1] = v24 + 14;
      id v27 = objc_msgSend(v18, sel_sample);
      id v46 = v27;
      sub_1C26A1EFC(0, &qword_1EBB82F18, &qword_1EBB80D90);
      id v28 = v27;
      sub_1C277C830();
      id v29 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C277C110();
      swift_unknownObjectRelease();
      uint64_t v30 = sub_1C277B860();
      unint64_t v32 = v31;

      id v46 = (id)sub_1C263FDFC(v30, v32, &v47);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2080;
      id v46 = objc_msgSend(v18, sel_state);
      type metadata accessor for HKMCPregnancyState(0);
      sub_1C277C830();
      id v33 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C277C110();
      swift_unknownObjectRelease();
      uint64_t v34 = sub_1C277B860();
      id v46 = (id)sub_1C263FDFC(v34, v35, &v47);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      os_log_t v36 = v42;
      _os_log_impl(&dword_1C2601000, v42, (os_log_type_t)v43, "[%@] Received model update with sample: %s and state: %s", (uint8_t *)v24, 0x20u);
      sub_1C26A1EFC(0, (unint64_t *)&qword_1EBB854A0, (unint64_t *)&qword_1EBB85F30);
      uint64_t v37 = v41;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v37, -1, -1);
      uint64_t v38 = v44;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v38, -1, -1);
      MEMORY[0x1C875D230](v24, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v45);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_1C261677C()
{
  unint64_t result = qword_1EBB82F20;
  if (!qword_1EBB82F20)
  {
    sub_1C2644ED8(255, (unint64_t *)&unk_1EBB80D98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82F20);
  }
  return result;
}

void sub_1C26167E4()
{
  if (!qword_1EBB829F8)
  {
    sub_1C2644ED8(255, (unint64_t *)&unk_1EBB80D98);
    sub_1C261677C();
    unint64_t v0 = sub_1C277AF20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB829F8);
    }
  }
}

uint64_t sub_1C2616858(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26168A0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + *(void *)(*(void *)a3 + 88);
  swift_beginAccess();
  a1(v4);
  return swift_endAccess();
}

uint64_t HealthAppPluginInfo.bundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for HealthAppPluginNotificationManager()
{
  return self;
}

uint64_t GeneratorContext.isLaunchGeneration.setter(char a1)
{
  uint64_t result = type metadata accessor for GeneratorContext();
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t sub_1C2616998@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v91 = a3;
  uint64_t v92 = a2;
  unint64_t v93 = a4;
  uint64_t v5 = MEMORY[0x1E4FBC848] + 8;
  sub_1C2617598(0, &qword_1EBB84210, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AC18]);
  uint64_t v89 = *(void *)(v6 - 8);
  uint64_t v90 = v6;
  MEMORY[0x1F4188790](v6);
  v88 = (char *)&v78 - v7;
  uint64_t v8 = sub_1C277A8A0();
  uint64_t v84 = *(void *)(v8 - 8);
  uint64_t v85 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v83 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C264F950();
  uint64_t v81 = *(void *)(v10 - 8);
  uint64_t v82 = v10;
  MEMORY[0x1F4188790](v10);
  v80 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C264ED88();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2617598(0, (unint64_t *)&unk_1EBB831E0, v5, MEMORY[0x1E4F1ACE0]);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  os_log_type_t v21 = (char *)&v78 - v20;
  unint64_t v22 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1C277B440();
    sub_1C2621120(0, (unint64_t *)&qword_1EBB831D0);
    sub_1C277B410();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    sub_1C272FAFC();
    uint64_t v50 = sub_1C277B4E0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    uint64_t v52 = v93;
    goto LABEL_31;
  }
  uint64_t v86 = Strong;
  unint64_t v87 = v22 >> 62;
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v24)
  {
    uint64_t v95 = MEMORY[0x1E4FBC860];
    sub_1C264872C(0, v24 & ~(v24 >> 63), 0);
    if (v24 < 0)
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v25 = 0;
    uint64_t v26 = v95;
    unint64_t v27 = v22;
    unint64_t v28 = v22 & 0xC000000000000001;
    uint64_t v29 = v24;
    do
    {
      if (v28) {
        id v30 = (id)MEMORY[0x1C875C230](v25, v27);
      }
      else {
        id v30 = *(id *)(v27 + 8 * v25 + 32);
      }
      unint64_t v31 = v30;
      id v32 = objc_msgSend(v30, sel_identifier);
      uint64_t v33 = sub_1C277B850();
      uint64_t v35 = v34;

      uint64_t v95 = v26;
      unint64_t v37 = *(void *)(v26 + 16);
      unint64_t v36 = *(void *)(v26 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_1C264872C(v36 > 1, v37 + 1, 1);
        uint64_t v26 = v95;
      }
      ++v25;
      *(void *)(v26 + 16) = v37 + 1;
      uint64_t v38 = v26 + 16 * v37;
      *(void *)(v38 + 32) = v33;
      *(void *)(v38 + 40) = v35;
    }
    while (v29 != v25);
    uint64_t v24 = v29;
    unint64_t v22 = v27;
  }
  if (qword_1EBB85FE8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C277B130();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBB85FD0);
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1C277B100();
  os_log_type_t v40 = sub_1C277BD40();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc();
    uint64_t v78 = swift_slowAlloc();
    uint64_t v95 = v78;
    *(_DWORD *)uint64_t v41 = 136315394;
    uint64_t v42 = sub_1C277C9E0();
    uint64_t v79 = v19;
    uint64_t v94 = sub_1C263FDFC(v42, v43, &v95);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2080;
    uint64_t v44 = swift_bridgeObjectRetain();
    uint64_t v45 = MEMORY[0x1C875B960](v44, MEMORY[0x1E4FBB1A0]);
    unint64_t v47 = v46;
    swift_bridgeObjectRelease();
    uint64_t v48 = v45;
    uint64_t v19 = v79;
    uint64_t v94 = sub_1C263FDFC(v48, v47, &v95);
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v39, v40, "[%s] Successfully scheduled all coalesced notifications: %s", (uint8_t *)v41, 0x16u);
    uint64_t v49 = v78;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v49, -1, -1);
    MEMORY[0x1C875D230](v41, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  a1 = *(unint64_t **)(v92 + 16);
  if (v87)
  {
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (!v53) {
      goto LABEL_26;
    }
  }
  else if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_26;
  }
  id v54 = objc_msgSend(a1, sel_profileIdentifier);
  id v55 = objc_msgSend(self, sel_primaryProfile);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
  id v56 = v54;
  id v57 = v55;
  LOBYTE(v55) = sub_1C277C030();

  if (v55)
  {
    uint64_t v95 = sub_1C272F060(a1);
    uint64_t v58 = MEMORY[0x1E4FBB390];
    sub_1C2617598(0, &qword_1EBB82CB0, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AAE0]);
    sub_1C264EFA0(&qword_1EBB82CA8, &qword_1EBB82CB0, v58);
    uint64_t v59 = v80;
    sub_1C277B500();
    swift_release();
    sub_1C2621074(&qword_1EA3053C0, (void (*)(uint64_t))sub_1C264F950);
    uint64_t v60 = v82;
    uint64_t v50 = sub_1C277B4E0();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v59, v60);
    uint64_t v52 = v93;
    goto LABEL_31;
  }
LABEL_26:
  if (qword_1EBB82A50 != -1) {
LABEL_34:
  }
    swift_once();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBB82A38);
  swift_bridgeObjectRetain_n();
  uint64_t v61 = a1;
  uint64_t v62 = sub_1C277B100();
  os_log_type_t v63 = sub_1C277BD40();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = swift_slowAlloc();
    uint64_t v92 = swift_slowAlloc();
    uint64_t v95 = v92;
    *(_DWORD *)uint64_t v64 = 136315651;
    uint64_t v65 = sub_1C277C9E0();
    uint64_t v94 = sub_1C263FDFC(v65, v66, &v95);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v64 + 12) = 2081;
    uint64_t v91 = v64 + 14;
    id v67 = objc_msgSend(v61, sel_profileIdentifier);
    id v68 = objc_msgSend(v67, sel_identifier);

    uint64_t v69 = v24;
    uint64_t v70 = v83;
    sub_1C277A880();

    uint64_t v71 = sub_1C277A850();
    unint64_t v73 = v72;
    (*(void (**)(char *, uint64_t))(v84 + 8))(v70, v85);
    uint64_t v94 = sub_1C263FDFC(v71, v73, &v95);
    sub_1C277C0D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v64 + 22) = 2049;
    swift_bridgeObjectRelease();
    uint64_t v94 = v69;
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v62, v63, "[%s] No content to push for health store %{private}s where number of requests is %{private}ld", (uint8_t *)v64, 0x20u);
    uint64_t v74 = v92;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v74, -1, -1);
    MEMORY[0x1C875D230](v64, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v52 = v93;
  uint64_t v76 = v89;
  uint64_t v75 = v90;
  uint64_t v77 = v88;
  sub_1C2621120(0, (unint64_t *)&qword_1EBB831D0);
  sub_1C277B450();
  sub_1C264ED08();
  uint64_t v50 = sub_1C277B4E0();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v77, v75);
LABEL_31:
  *uint64_t v52 = v50;
  return result;
}

void sub_1C2617528(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    unint64_t v8 = sub_1C26532A4();
    unint64_t v9 = a4(a1, a3, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C2617598(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2621120(255, (unint64_t *)&qword_1EBB831D0);
    unint64_t v9 = a4(a1, a3, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C261761C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C26532A4();
    unint64_t v7 = a3(a1, MEMORY[0x1E4FBC848] + 8, v6, MEMORY[0x1E4FBC0F0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C2617690@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1C2617808(0, &qword_1EBB82D40, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_retain();
  id v7 = a2;
  uint64_t result = sub_1C277B480();
  *a3 = result;
  return result;
}

uint64_t OpenTransactionBuilderManager.makeTransactionBuilderPublisher(for:)(void *a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = a1;
  sub_1C2617808(0, &qword_1EBB82D40, MEMORY[0x1E4F1AC28]);
  sub_1C2617880();
  swift_retain();
  id v4 = a1;

  return sub_1C277B4A0();
}

void sub_1C2617808(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for CachingSharedSummaryTransactionBuilder();
    unint64_t v7 = sub_1C26532A4();
    unint64_t v8 = a3(a1, v6, v7, MEMORY[0x1E4FBC0F0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C2617880()
{
  unint64_t result = qword_1EBB82D38;
  if (!qword_1EBB82D38)
  {
    sub_1C2617808(255, &qword_1EBB82D40, MEMORY[0x1E4F1AC28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82D38);
  }
  return result;
}

uint64_t sub_1C26178F4(unsigned __int8 *a1, char a2)
{
  uint64_t v4 = v3;
  id v5 = v2;
  uint64_t v160 = *v2;
  int v6 = *a1;
  if (v6 == 2)
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C277B130();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBB86280);
    unint64_t v8 = sub_1C277B100();
    os_log_type_t v9 = sub_1C277BD40();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1C2601000, v8, v9, "The store version does not exist or does not match the current version. Deleting Database.", v10, 2u);
      MEMORY[0x1C875D230](v10, -1, -1);
    }

    sub_1C2709698();
  }
  uint64_t v11 = qword_1EBB848D8;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EBB8CE18;
  swift_release();
  id v13 = objc_allocWithZone(MEMORY[0x1E4F1C150]);
  uint64_t v14 = (void *)sub_1C277B820();
  id v15 = objc_msgSend(v13, sel_initWithName_managedObjectModel_, v14, v12);

  sub_1C262F0B0(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C277E590;
  id v17 = v15;
  *(void *)(v16 + 32) = sub_1C26215A8();
  sub_1C277BA60();
  sub_1C2644ED8(0, &qword_1EBB85198);
  uint64_t v18 = (void *)sub_1C277BA30();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setPersistentStoreDescriptions_, v18);

  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = 0;
  aBlock[4] = sub_1C26511A4;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C26056A4;
  aBlock[3] = &block_descriptor_56;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_loadPersistentStoresWithCompletionHandler_, v20);
  _Block_release(v20);

  swift_beginAccess();
  os_log_type_t v21 = (void *)v19[2];
  id v161 = v5;
  if (!v21)
  {
    uint64_t v19 = v17;
    goto LABEL_19;
  }
  uint64_t v155 = v17;
  uint64_t v156 = v4;
  id v22 = v21;
  uint64_t v23 = (uint64_t)objc_msgSend(v22, sel_code);
  if (v23 <= 134109)
  {
    if (v23 == 11)
    {
      if ((sub_1C270AB54() & 0x1FFFFFFFFLL) == 0xB)
      {
        if ((a2 & 1) == 0)
        {
          uint64_t v163 = 0;
          unint64_t v164 = 0xE000000000000000;
          sub_1C277C2D0();
          id v166 = v5;
          type metadata accessor for DiskHealthExperienceStore();
          sub_1C277C450();
          sub_1C277B8D0();
          goto LABEL_98;
        }
        if (qword_1EBB86260 != -1) {
          swift_once();
        }
        uint64_t v97 = sub_1C277B130();
        __swift_project_value_buffer(v97, (uint64_t)qword_1EBB86280);
        v98 = sub_1C277B100();
        os_log_type_t v99 = sub_1C277BD20();
        if (os_log_type_enabled(v98, v99))
        {
          uint64_t v100 = (uint8_t *)swift_slowAlloc();
          id v101 = (id)swift_slowAlloc();
          id v166 = v101;
          *(_DWORD *)uint64_t v100 = 136315138;
          swift_getMetatypeMetadata();
          uint64_t v102 = sub_1C277B860();
          uint64_t v19 = (void *)v103;
          uint64_t v163 = sub_1C263FDFC(v102, v103, (uint64_t *)&v166);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2601000, v98, v99, "[%s] SQLITE_CORRUPT: CORRUPTION DETECTED", v100, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v101, -1, -1);
          MEMORY[0x1C875D230](v100, -1, -1);
        }

        id v104 = sub_1C277B100();
        os_log_type_t v105 = sub_1C277BD20();
        if (os_log_type_enabled(v104, v105))
        {
          uint64_t v106 = (uint8_t *)swift_slowAlloc();
          id v107 = (id)swift_slowAlloc();
          id v166 = v107;
          *(_DWORD *)uint64_t v106 = 136315138;
          swift_getMetatypeMetadata();
          uint64_t v108 = sub_1C277B860();
          uint64_t v19 = (void *)v109;
          uint64_t v163 = sub_1C263FDFC(v108, v109, (uint64_t *)&v166);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2601000, v104, v105, "[%s] Attempting to recover by destroying persistent store and regenerating", v106, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v107, -1, -1);
          MEMORY[0x1C875D230](v106, -1, -1);
        }

        sub_1C2709698();
        LOBYTE(v163) = v6;
        uint64_t v110 = sub_1C26178F4(&v163, 0);
        if (v156)
        {

          swift_release();
          return (uint64_t)v19;
        }
        uint64_t v157 = (void *)v110;

        uint64_t v137 = sub_1C277B100();
        os_log_type_t v138 = sub_1C277BD20();
        if (os_log_type_enabled(v137, v138))
        {
          uint64_t v139 = (uint8_t *)swift_slowAlloc();
          uint64_t v140 = swift_slowAlloc();
          uint64_t v163 = v140;
          *(_DWORD *)uint64_t v139 = 136315138;
          uint64_t v141 = sub_1C269BF1C();
          id v166 = (id)sub_1C263FDFC(v141, v142, &v163);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2601000, v137, v138, "[%s] Successfully recreated Core Data persistent store", v139, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v140, -1, -1);
          MEMORY[0x1C875D230](v139, -1, -1);
        }
        else
        {
        }
        uint64_t v4 = 0;
        uint64_t v19 = v157;
LABEL_19:
        if ((v6 - 1) >= 2)
        {
          if (v6 != 3)
          {
LABEL_33:
            id v62 = objc_msgSend(v19, sel_persistentStoreCoordinator);
            id v63 = objc_msgSend(v62, sel_persistentStores);

            sub_1C2644ED8(0, &qword_1EBB84920);
            unint64_t v64 = sub_1C277BA40();

            id v65 = objc_msgSend(v19, sel_persistentStoreCoordinator);
            sub_1C26075D4(v64);
            swift_bridgeObjectRelease();
            unint64_t v66 = (void *)sub_1C277BA30();
            swift_bridgeObjectRelease();
            id v67 = objc_msgSend(v65, sel_currentPersistentHistoryTokenFromStores_, v66);

            MEMORY[0x1F4188790](v68);
            uint64_t v70 = (uint64_t)&v69[4];
            uint64_t v71 = v69 + 6;
            os_unfair_lock_lock(v69 + 6);
            sub_1C2604E88(v70);
            if (!v4)
            {
              os_unfair_lock_unlock(v71);
              if (qword_1EBB86260 != -1) {
                swift_once();
              }
              uint64_t v72 = sub_1C277B130();
              __swift_project_value_buffer(v72, (uint64_t)qword_1EBB86280);
              unint64_t v73 = sub_1C277B100();
              os_log_type_t v74 = sub_1C277BD40();
              if (os_log_type_enabled(v73, v74))
              {
                uint64_t v75 = swift_slowAlloc();
                id v76 = (id)swift_slowAlloc();
                id v166 = v76;
                *(_DWORD *)uint64_t v75 = 136315394;
                uint64_t v163 = v160;
                swift_getMetatypeMetadata();
                uint64_t v77 = sub_1C277B860();
                uint64_t v163 = sub_1C263FDFC(v77, v78, (uint64_t *)&v166);
                sub_1C277C0D0();
                swift_bridgeObjectRelease();
                *(_WORD *)(v75 + 12) = 2080;
                if (a2) {
                  uint64_t v79 = 0x7972746572;
                }
                else {
                  uint64_t v79 = 0x7972746572206F6ELL;
                }
                if (a2) {
                  unint64_t v80 = 0xE500000000000000;
                }
                else {
                  unint64_t v80 = 0xE800000000000000;
                }
                uint64_t v163 = sub_1C263FDFC(v79, v80, (uint64_t *)&v166);
                sub_1C277C0D0();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1C2601000, v73, v74, "[%s] unsafeMakePersistentContainer(retryOnFailure: %s)", (uint8_t *)v75, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x1C875D230](v76, -1, -1);
                MEMORY[0x1C875D230](v75, -1, -1);
              }

              sub_1C260AAC8(v19);
              swift_release();
              return (uint64_t)v19;
            }
            os_unfair_lock_unlock(v71);
            __break(1u);
            goto LABEL_93;
          }
          if (qword_1EBB86260 != -1) {
            swift_once();
          }
          uint64_t v36 = sub_1C277B130();
          __swift_project_value_buffer(v36, (uint64_t)qword_1EBB86280);
          unint64_t v37 = sub_1C277B100();
          os_log_type_t v38 = sub_1C277BD40();
          if (os_log_type_enabled(v37, v38))
          {
            uint64_t v39 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v39 = 0;
            _os_log_impl(&dword_1C2601000, v37, v38, "destroyStoreIfNeededAndMakePersistentContainer - removeAllFeedItemNotifications", v39, 2u);
            MEMORY[0x1C875D230](v39, -1, -1);
          }

          sub_1C2709858();
          os_log_type_t v40 = sub_1C277B100();
          os_log_type_t v41 = sub_1C277BD40();
          if (os_log_type_enabled(v40, v41))
          {
            uint64_t v42 = (uint8_t *)swift_slowAlloc();
            uint64_t v43 = swift_slowAlloc();
            uint64_t v163 = v43;
            *(_DWORD *)uint64_t v42 = 136315138;
            LOBYTE(v166) = 3;
            uint64_t v44 = sub_1C277B860();
            id v166 = (id)sub_1C263FDFC(v44, v45, &v163);
            LOBYTE(v6) = 3;
            sub_1C277C0D0();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2601000, v40, v41, "destroyStoreIfNeededAndMakePersistentContainer - wiping data due to storeState %s", v42, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C875D230](v43, -1, -1);
            MEMORY[0x1C875D230](v42, -1, -1);
          }

          id v46 = objc_msgSend(v19, sel_newBackgroundContext);
          objc_msgSend(v46, sel_setAutomaticallyMergesChangesFromParent_, 1);
          id v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C130]), sel_initWithMergeType_, 1);
          objc_msgSend(v46, sel_setMergePolicy_, v47);

          id v48 = objc_msgSend(v19, sel_managedObjectModel);
          id v49 = objc_msgSend(v48, sel_entities);

          sub_1C2644ED8(0, &qword_1EA304FA8);
          unint64_t v50 = sub_1C277BA40();

          sub_1C2709248(v50, v46);
          swift_bridgeObjectRelease();
        }
        if (qword_1EBB86260 != -1) {
          swift_once();
        }
        uint64_t v51 = sub_1C277B130();
        __swift_project_value_buffer(v51, (uint64_t)qword_1EBB86280);
        uint64_t v52 = sub_1C277B100();
        os_log_type_t v53 = sub_1C277BD40();
        if (os_log_type_enabled(v52, v53))
        {
          id v54 = (uint8_t *)swift_slowAlloc();
          uint64_t v55 = swift_slowAlloc();
          uint64_t v163 = v55;
          *(_DWORD *)id v54 = 136315138;
          LOBYTE(v166) = v6;
          uint64_t v56 = v4;
          id v57 = v19;
          uint64_t v58 = v56;
          uint64_t v59 = sub_1C277B860();
          id v166 = (id)sub_1C263FDFC(v59, v60, &v163);
          uint64_t v61 = v58;
          uint64_t v19 = v57;
          uint64_t v4 = v61;
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2601000, v52, v53, "destroyStoreIfNeededAndMakePersistentContainer - updating metadata due to storeState %s", v54, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v55, -1, -1);
          MEMORY[0x1C875D230](v54, -1, -1);
        }

        sub_1C270B9F8(v19);
        goto LABEL_33;
      }
    }
    else
    {
      if (v23 != 256)
      {
LABEL_67:
        if ((a2 & 1) == 0)
        {
          uint64_t v163 = 0;
          unint64_t v164 = 0xE000000000000000;
          sub_1C277C2D0();
          id v166 = v5;
          type metadata accessor for DiskHealthExperienceStore();
          sub_1C277C450();
          sub_1C277B8D0();
          id v145 = objc_msgSend(v22, sel_description);
          sub_1C277B850();

          sub_1C277B8D0();
          swift_bridgeObjectRelease();
          sub_1C277B8D0();
          id v146 = objc_msgSend(v22, sel_userInfo);
          sub_1C277B760();

          sub_1C277B770();
          sub_1C277B8D0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_98;
        }
        if (qword_1EBB86260 != -1) {
          swift_once();
        }
        uint64_t v111 = sub_1C277B130();
        __swift_project_value_buffer(v111, (uint64_t)qword_1EBB86280);
        id v112 = v22;
        uint64_t v113 = sub_1C277B100();
        os_log_type_t v114 = sub_1C277BD20();
        int v154 = v6;
        uint64_t v151 = v112;
        if (os_log_type_enabled(v113, v114))
        {
          uint64_t v115 = swift_slowAlloc();
          id v149 = (id)swift_slowAlloc();
          id v166 = v149;
          *(_DWORD *)uint64_t v115 = 136315394;
          swift_getMetatypeMetadata();
          uint64_t v116 = sub_1C277B860();
          sub_1C263FDFC(v116, v117, (uint64_t *)&v166);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v115 + 12) = 2082;
          id v118 = v112;
          id v119 = objc_msgSend(v118, sel_description);
          uint64_t v120 = sub_1C277B850();
          unint64_t v122 = v121;

          uint64_t v163 = sub_1C263FDFC(v120, v122, (uint64_t *)&v166);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1C2601000, v113, v114, "[%s] UNKNOWN CORE DATA ERROR DETECTED: %{public}s", (uint8_t *)v115, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v149, -1, -1);
          MEMORY[0x1C875D230](v115, -1, -1);
        }
        else
        {
        }
        uint64_t v4 = v156;
        id v131 = sub_1C277B100();
        os_log_type_t v132 = sub_1C277BD20();
        if (os_log_type_enabled(v131, v132))
        {
          uint64_t v133 = (uint8_t *)swift_slowAlloc();
          id v134 = (id)swift_slowAlloc();
          id v166 = v134;
          *(_DWORD *)uint64_t v133 = 136315138;
          swift_getMetatypeMetadata();
          uint64_t v135 = sub_1C277B860();
          uint64_t v163 = sub_1C263FDFC(v135, v136, (uint64_t *)&v166);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2601000, v131, v132, "[%s] Attempting to recover by destroying persistent store and regenerating", v133, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v134, -1, -1);
          MEMORY[0x1C875D230](v133, -1, -1);
        }

        int v6 = v154;
        sub_1C2709698();
        LOBYTE(v163) = v154;
        uint64_t v19 = (void *)sub_1C26178F4(&v163, 0);

        if (v156) {
          goto LABEL_88;
        }
        goto LABEL_19;
      }
      if ((sub_1C270AB54() & 0x1FFFFFFFFLL) == 0x17)
      {
        sub_1C270B454();
        swift_allocError();
        *uint64_t v81 = 1;
        swift_willThrow();

LABEL_88:
        swift_release();
        return (uint64_t)v19;
      }
      if ((sub_1C270AB54() & 0x1FFFFFFFFLL) == 0x120A || (sub_1C270AB54() & 0x1FFFFFFFFLL) == 0xD)
      {
        if (qword_1EBB86260 != -1) {
          swift_once();
        }
        uint64_t v123 = sub_1C277B130();
        __swift_project_value_buffer(v123, (uint64_t)qword_1EBB86280);
        id v124 = v22;
        uint64_t v125 = sub_1C277B100();
        os_log_type_t v126 = sub_1C277BD20();
        if (os_log_type_enabled(v125, v126))
        {
          uint64_t v127 = swift_slowAlloc();
          uint64_t v159 = (void *)swift_slowAlloc();
          id v162 = (id)swift_slowAlloc();
          id v166 = v162;
          *(_DWORD *)uint64_t v127 = 136315394;
          swift_getMetatypeMetadata();
          uint64_t v128 = sub_1C277B860();
          sub_1C263FDFC(v128, v129, (uint64_t *)&v166);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v127 + 12) = 2112;
          uint64_t v163 = (uint64_t)v124;
          id v130 = v124;
          sub_1C277C0D0();
          *uint64_t v159 = v21;

          _os_log_impl(&dword_1C2601000, v125, v126, "[%s] Received a CoreData error %@", (uint8_t *)v127, 0x16u);
          sub_1C262DB44(0, (unint64_t *)&qword_1EBB854A0, (unint64_t *)&qword_1EBB85F30, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v159, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v162, -1, -1);
          MEMORY[0x1C875D230](v127, -1, -1);
        }
        else
        {
        }
        sub_1C270B454();
        swift_allocError();
        unsigned char *v143 = 2;
        swift_willThrow();

        goto LABEL_88;
      }
    }
    uint64_t v163 = 0;
    unint64_t v164 = 0xE000000000000000;
    sub_1C277C2D0();
    id v166 = v5;
    type metadata accessor for DiskHealthExperienceStore();
    sub_1C277C450();
    sub_1C277B8D0();
    id v147 = objc_msgSend(v22, sel_description);
    sub_1C277B850();

    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    id v166 = objc_msgSend(v22, sel_code);
    sub_1C277C7B0();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    id v148 = objc_msgSend(v22, sel_userInfo);
    sub_1C277B760();

    sub_1C277B770();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_98;
  }
  if (v23 != 134110 && v23 != 134190 && v23 != 134170) {
    goto LABEL_67;
  }
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1C277B130();
  __swift_project_value_buffer(v24, (uint64_t)qword_1EBB86280);
  id v25 = v22;
  uint64_t v26 = sub_1C277B100();
  os_log_type_t v27 = sub_1C277BD20();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    id v150 = (id)swift_slowAlloc();
    id v166 = v150;
    *(_DWORD *)uint64_t v28 = 136315394;
    swift_getMetatypeMetadata();
    uint64_t v29 = sub_1C277B860();
    sub_1C263FDFC(v29, v30, (uint64_t *)&v166);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    id v31 = objc_msgSend(v25, sel_userInfo);
    id v32 = v25;
    sub_1C277B760();

    uint64_t v33 = sub_1C277B770();
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t v163 = sub_1C263FDFC(v33, v35, (uint64_t *)&v166);
    sub_1C277C0D0();
    id v25 = v32;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2601000, v26, v27, "[%s] Migration error when loading Core Data persistent store: %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v150, -1, -1);
    MEMORY[0x1C875D230](v28, -1, -1);
  }
  else
  {
  }
  uint64_t v82 = v156;
  if (a2)
  {
    uint64_t v83 = sub_1C277B100();
    os_log_type_t v84 = sub_1C277BD00();
    if (os_log_type_enabled(v83, v84))
    {
      id v152 = v25;
      uint64_t v85 = (uint8_t *)swift_slowAlloc();
      id v86 = (id)swift_slowAlloc();
      id v166 = v86;
      *(_DWORD *)uint64_t v85 = 136315138;
      swift_getMetatypeMetadata();
      uint64_t v87 = sub_1C277B860();
      uint64_t v163 = sub_1C263FDFC(v87, v88, (uint64_t *)&v166);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v83, v84, "[%s] Attempting to recover by destroying persistent store and regenerating", v85, 0xCu);
      swift_arrayDestroy();
      id v89 = v86;
      uint64_t v82 = v156;
      MEMORY[0x1C875D230](v89, -1, -1);
      uint64_t v90 = v85;
      id v25 = v152;
      MEMORY[0x1C875D230](v90, -1, -1);
    }

    sub_1C2709698();
    LOBYTE(v163) = v6;
    uint64_t v19 = (void *)sub_1C26178F4(&v163, 0);
    uint64_t v4 = v82;

    if (v82)
    {

      goto LABEL_88;
    }
    uint64_t v91 = sub_1C277B100();
    os_log_type_t v92 = sub_1C277BD00();
    if (os_log_type_enabled(v91, v92))
    {
      v153 = v25;
      unint64_t v93 = (uint8_t *)swift_slowAlloc();
      id v94 = (id)swift_slowAlloc();
      id v166 = v94;
      *(_DWORD *)unint64_t v93 = 136315138;
      uint64_t v163 = v160;
      swift_getMetatypeMetadata();
      uint64_t v95 = sub_1C277B860();
      uint64_t v163 = sub_1C263FDFC(v95, v96, (uint64_t *)&v166);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v91, v92, "[%s] Successfully recreated Core Data persistent store", v93, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v94, -1, -1);
      MEMORY[0x1C875D230](v93, -1, -1);
    }
    else
    {
    }
    goto LABEL_19;
  }
LABEL_93:
  uint64_t v163 = 0;
  unint64_t v164 = 0xE000000000000000;
  sub_1C277C2D0();
  id v166 = v161;
  type metadata accessor for DiskHealthExperienceStore();
  sub_1C277C450();
  sub_1C277B8D0();
LABEL_98:
  uint64_t result = sub_1C277C560();
  __break(1u);
  return result;
}

id HKHealthStore.sourceProfile.getter()
{
  id v1 = objc_msgSend(v0, sel_profileIdentifier);

  return v1;
}

void sub_1C261992C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_1C2619A18((uint64_t)v3, v7);
    unint64_t v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
    v8(v4, v5);
  }
  else
  {
    sub_1C2619A18((*a1)[5], v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t sub_1C2619A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = sub_1C277C0B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v11 - v7, a1, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v4);
  sub_1C2619B64((uint64_t)v8, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C2619B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = sub_1C277C0B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = sub_1C277C0A0();
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
  swift_unknownObjectRelease();

  uint64_t v11 = *(void **)(v2 + 16);
  if ((id)v9 == v10)
  {
    uint64_t v17 = sub_1C277B820();
    objc_msgSend(v11, sel_setURL_forKey_, 0, v17);
    uint64_t v14 = (void *)v17;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    uint64_t v12 = *(void *)(v4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v4) == 1)
    {
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = sub_1C277C7D0();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v4);
    }
    id v15 = (void *)sub_1C277B820();
    objc_msgSend(v11, sel_setObject_forKey_, v13, v15);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1C2619D94(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t))
{
  sub_1C277C7D0();
  id v6 = (id)HKSensitiveLogItem();
  swift_unknownObjectRelease();
  sub_1C277C110();
  swift_unknownObjectRelease();
  uint64_t v7 = a3(&v9, MEMORY[0x1E4FBC840] + 8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v7;
}

void *_s14HealthPlatform0A22AppNotificationManagerC18notificationCenterACSo06UNUserdG0C_tcfC_0(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  sub_1C277A4D0();
  swift_allocObject();
  uint64_t v3 = sub_1C277A4C0();
  sub_1C277A4A0();
  swift_allocObject();
  uint64_t v4 = sub_1C277A490();
  type metadata accessor for UnfairLock();
  uint64_t v5 = swift_allocObject();
  id v6 = (_DWORD *)swift_slowAlloc();
  *(void *)(v5 + 16) = v6;
  *id v6 = 0;
  id v7 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  id v8 = v2;
  uint64_t v9 = (void *)sub_1C277B820();
  id v10 = objc_msgSend(v7, sel_initWithCategory_domainName_healthStore_, 1, v9, v8);

  type metadata accessor for HealthAppNotificationManager();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = (_DWORD *)swift_slowAlloc();
  *(void *)(v12 + 16) = v13;
  *uint64_t v13 = 0;
  v11[8] = v12;
  v11[9] = sub_1C2619FE4(MEMORY[0x1E4FBC860]);
  v11[2] = a1;
  v11[3] = v3;
  v11[4] = v4;
  v11[5] = v5;
  void v11[6] = v8;
  v11[7] = v10;
  return v11;
}

unint64_t sub_1C2619FE4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2681A30(0, (unint64_t *)&unk_1EA304400, (uint64_t (*)(uint64_t))sub_1C267BF28, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = sub_1C277C5F0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C262DD30(v6, (uint64_t)&v15, (uint64_t)&unk_1EA3044D0, (uint64_t)sub_1C267BF28, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C2681AA4);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1C2629588(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_1C261F308(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for HealthAppNotificationManager()
{
  return self;
}

uint64_t sub_1C261A1A0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
  id v4 = objc_msgSend(*(id *)(v2 + 16), sel_profileIdentifier);
  id v5 = objc_msgSend(*(id *)(v3 + 16), sel_profileIdentifier);
  char v6 = sub_1C277C030();

  return v6 & 1;
}

uint64_t Publishers.Signpost.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v32 = sub_1C277B0D0();
  uint64_t v10 = *(void *)(v32 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v32);
  BOOL v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a2 + 24);
  uint64_t v33 = *(uint64_t **)(a2 + 16);
  uint64_t v34 = v17;
  unint64_t v35 = v33;
  uint64_t v36 = a3;
  uint64_t v37 = v17;
  uint64_t v38 = a4;
  _s8SignpostV5InnerCMa();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a3);
  uint64_t v18 = *(void *)(v5 + *(int *)(a2 + 36));
  uint64_t v19 = *(void **)(v5 + *(int *)(a2 + 40));
  uint64_t v20 = *(int *)(a2 + 48);
  uint64_t v21 = v5 + *(int *)(a2 + 44);
  uint64_t v22 = *(void *)v21;
  uint64_t v30 = *(void *)(v21 + 8);
  uint64_t v31 = v18;
  char v23 = *(unsigned char *)(v21 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v5 + v20, v32);
  uint64_t v24 = (uint64_t *)(v5 + *(int *)(a2 + 52));
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  swift_allocObject();
  unint64_t v35 = sub_1C261A488((uint64_t)v16, v31, (uint64_t)v19, v22, v30, v23, (uint64_t)v13, v25, v26);
  id v27 = v19;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C277B5E0();
  return swift_release();
}

uint64_t *sub_1C261A488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = *v9;
  uint64_t v18 = *(void *)(*v9 + 160);
  sub_1C261A678();
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(uint64_t *)((char *)v9 + v18) = v19;
  uint64_t v20 = (uint64_t)v9 + *(void *)(*v9 + 168);
  *(void *)(v20 + 32) = 0;
  *(_OWORD *)uint64_t v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  *(unsigned char *)(v20 + 40) = 2;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v17 + 88) - 8) + 32))((uint64_t)v9 + *(void *)(*v9 + 112), a1);
  *(uint64_t *)((char *)v9 + *(void *)(*v9 + 120)) = a2;
  *(uint64_t *)((char *)v9 + *(void *)(*v9 + 128)) = a3;
  uint64_t v21 = (uint64_t)v9 + *(void *)(*v9 + 136);
  *(void *)uint64_t v21 = a4;
  *(void *)(v21 + 8) = a5;
  *(unsigned char *)(v21 + 16) = a6;
  uint64_t v22 = (uint64_t)v9 + *(void *)(*v9 + 144);
  uint64_t v23 = sub_1C277B0D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v22, a7, v23);
  uint64_t v24 = (uint64_t *)((char *)v9 + *(void *)(*v9 + 152));
  *uint64_t v24 = a8;
  v24[1] = a9;
  return v9;
}

void sub_1C261A678()
{
  if (!qword_1EBB854A8)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB854A8);
    }
  }
}

uint64_t _s8SignpostV5InnerCMa()
{
  return swift_getGenericMetadata();
}

uint64_t Publishers.CombineLatest.bufferForCombineLatestForGeneratorPipeline(size:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v0 = sub_1C277B1D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = sub_1C277B1C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F1A900], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F1A918], v0);
  swift_getWitnessTable();
  sub_1C277B560();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C261A938@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (uint64_t)a1 + *(void *)(*a1 + 88);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a2, v4);
}

id _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1C277B820();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  id v3 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v4 = (void *)sub_1C277B820();
  unsigned int v5 = objc_msgSend(v3, sel_BOOLForKey_, v4);

  if (v5) {
    objc_msgSend(v2, sel_setReturnsObjectsAsFaults_, 0);
  }
  return v2;
}

void *initializeBufferWithCopyOfBuffer for DatabaseChangesQueryInputSignal.State(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t Publisher.catchAndReplaceErrorWithEmpty(debugDescription:completesImmediately:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a2;
  *(unsigned char *)(v10 + 48) = a3;
  swift_getAssociatedTypeWitness();
  sub_1C277B460();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C277B530();

  return swift_release();
}

uint64_t sub_1C261AC1C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + *(void *)(*(void *)a3 + 88);
  swift_beginAccess();
  a1(v4);
  return swift_endAccess();
}

uint64_t sub_1C261AC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a4;
  v9[3] = a3;
  v9[4] = sub_1C2625618;
  v9[5] = v8;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = sub_1C264AD64;
  v10[5] = v9;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1C264AD64;
  *(void *)(v11 + 24) = v9;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_1C261ADFC();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_1C261ADFC()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v2 = (uint64_t)&v1[4];
  id v3 = v1 + 16;
  os_unfair_lock_lock(v1 + 16);
  sub_1C261AED8(v2, &v6);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v6;
  if (v6)
  {
    uint64_t v5 = swift_retain();
    ((void (*)(uint64_t))v4)(v5);
    sub_1C261AE94((uint64_t)v4);
    sub_1C261AE94((uint64_t)v4);
  }
}

uint64_t sub_1C261AE94(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C261AEA4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C261AECC()
{
  return sub_1C262BB1C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1C261AED8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  return sub_1C261AEF8(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1C261AEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)()@<X8>)
{
  uint64_t v11 = *(void **)(a1 + 16);
  if ((unint64_t)v11 >= 2)
  {
    uint64_t v18 = (uint64_t (*)())swift_allocObject();
    if (v11 == (void *)2)
    {
      *((void *)v18 + 2) = a4;
      *((void *)v18 + 3) = a5;
      *a6 = sub_1C261AED4;
      a6[1] = v18;
    }
    else
    {
      *((void *)v18 + 2) = a2;
      *((void *)v18 + 3) = a3;
      *((void *)v18 + 4) = v11;
      *a6 = sub_1C2664214;
      a6[1] = v18;
      sub_1C2664244(v11);
    }
    return swift_retain();
  }
  else
  {
    BOOL v13 = *(void **)(a1 + 32);
    swift_retain();
    swift_retain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C2690528(0, v13[2] + 1, 1, v13);
      BOOL v13 = (void *)result;
    }
    unint64_t v16 = v13[2];
    unint64_t v15 = v13[3];
    if (v16 >= v15 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C2690528((void *)(v15 > 1), v16 + 1, 1, v13);
      BOOL v13 = (void *)result;
    }
    v13[2] = v16 + 1;
    uint64_t v17 = &v13[4 * v16];
    v17[4] = a4;
    v17[5] = a5;
    v17[6] = a2;
    v17[7] = a3;
    *(void *)(a1 + 32) = v13;
    *a6 = 0;
    a6[1] = 0;
  }
  return result;
}

void sub_1C261B06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v13 = *(void **)(a1 + 16);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB82EE8);
  uint64_t v14 = (void *)sub_1C277BA30();
  unint64_t v15 = (void *)swift_allocObject();
  v15[2] = a3;
  v15[3] = a4;
  uint64_t v15[4] = a1;
  v15[5] = a2;
  v17[4] = a6;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = sub_1C264ABF4;
  v17[3] = a7;
  unint64_t v16 = _Block_copy(v17);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v13, sel_addSummaries_completion_, v14, v16);
  _Block_release(v16);
}

void sub_1C261B1A4()
{
  sub_1C261B06C(v0[2], v0[3], v0[4], v0[5], (uint64_t)&unk_1F1DC66A8, (uint64_t)sub_1C264AC6C, (uint64_t)&block_descriptor_124);
}

void sub_1C261B1E8()
{
  sub_1C261B1F4(v0[2], v0[3], v0[4], v0[5]);
}

void sub_1C261B1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1C261B21C()
{
  return sub_1C262DE9C();
}

void sub_1C261B224()
{
  HKFeatureFlagBloodOxygenSaturationEnabled();
  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1C26404F8(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v2 = v0[2];
  unint64_t v1 = v0[3];
  if (v2 >= v1 >> 1) {
    uint64_t v0 = sub_1C26404F8((void *)(v1 > 1), v2 + 1, 1, v0);
  }
  v0[2] = v2 + 1;
  id v3 = &v0[2 * v2];
  v3[4] = 0x6D7569646E616353;
  v3[5] = 0xE800000000000000;
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_sharedBehavior);
  if (!v5)
  {
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v6 = v5;
  id v7 = objc_msgSend(v5, sel_features);

  if (!v7)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  objc_msgSend(v7, sel_orchestrationProfiles);

  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  unint64_t v9 = v0[2];
  unint64_t v8 = v0[3];
  if (v9 >= v8 >> 1) {
    uint64_t v0 = sub_1C26404F8((void *)(v8 > 1), v9 + 1, 1, v0);
  }
  v0[2] = v9 + 1;
  uint64_t v10 = &v0[2 * v9];
  v10[4] = 0xD000000000000016;
  v10[5] = 0x80000001C278C240;
  id v11 = objc_msgSend(v4, sel_sharedBehavior, 0xD000000000000016);
  if (!v11) {
    goto LABEL_50;
  }
  uint64_t v12 = v11;
  id v13 = objc_msgSend(v11, sel_features);

  if (!v13)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  objc_msgSend(v13, sel_orchestrationCategories);

  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  unint64_t v15 = v0[2];
  unint64_t v14 = v0[3];
  if (v15 >= v14 >> 1) {
    uint64_t v0 = sub_1C26404F8((void *)(v14 > 1), v15 + 1, 1, v0);
  }
  v0[2] = v15 + 1;
  unint64_t v16 = &v0[2 * v15];
  v16[4] = 0xD000000000000018;
  v16[5] = 0x80000001C278C260;
  id v17 = objc_msgSend(v4, sel_sharedBehavior, 0xD000000000000018);
  if (!v17) {
    goto LABEL_52;
  }
  uint64_t v18 = v17;
  id v19 = objc_msgSend(v17, sel_features);

  if (!v19)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  objc_msgSend(v19, sel_nebula);

  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  unint64_t v21 = v0[2];
  unint64_t v20 = v0[3];
  if (v21 >= v20 >> 1) {
    uint64_t v0 = sub_1C26404F8((void *)(v20 > 1), v21 + 1, 1, v0);
  }
  v0[2] = v21 + 1;
  uint64_t v22 = &v0[2 * v21];
  v22[4] = 0x616C7562654ELL;
  v22[5] = 0xE600000000000000;
  id v23 = objc_msgSend(v4, sel_sharedBehavior, 0x616C7562654ELL);
  if (!v23) {
    goto LABEL_54;
  }
  uint64_t v24 = v23;
  id v25 = objc_msgSend(v23, sel_features);

  if (!v25)
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  objc_msgSend(v25, sel_vrx);

  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  unint64_t v27 = v0[2];
  unint64_t v26 = v0[3];
  if (v27 >= v26 >> 1) {
    uint64_t v0 = sub_1C26404F8((void *)(v26 > 1), v27 + 1, 1, v0);
  }
  v0[2] = v27 + 1;
  uint64_t v28 = &v0[2 * v27];
  v28[4] = 5788246;
  v28[5] = 0xE300000000000000;
  id v29 = objc_msgSend(v4, sel_sharedBehavior, 5788246);
  if (!v29) {
    goto LABEL_56;
  }
  uint64_t v30 = v29;
  id v31 = objc_msgSend(v29, sel_features);

  if (!v31)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  objc_msgSend(v31, sel_stanley);

  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  unint64_t v33 = v0[2];
  unint64_t v32 = v0[3];
  if (v33 >= v32 >> 1) {
    uint64_t v0 = sub_1C26404F8((void *)(v32 > 1), v33 + 1, 1, v0);
  }
  v0[2] = v33 + 1;
  uint64_t v34 = &v0[2 * v33];
  v34[4] = 0x79656C6E617453;
  v34[5] = 0xE700000000000000;
  id v35 = objc_msgSend(v4, sel_sharedBehavior, 0x79656C6E617453);
  if (!v35) {
    goto LABEL_58;
  }
  uint64_t v36 = v35;
  id v37 = objc_msgSend(v35, sel_features);

  if (!v37)
  {
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  objc_msgSend(v37, sel_snidgets);

  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  unint64_t v39 = v0[2];
  unint64_t v38 = v0[3];
  if (v39 >= v38 >> 1) {
    uint64_t v0 = sub_1C26404F8((void *)(v38 > 1), v39 + 1, 1, v0);
  }
  v0[2] = v39 + 1;
  os_log_type_t v40 = &v0[2 * v39];
  v40[4] = 0x7374656764696E53;
  v40[5] = 0xE800000000000000;
  id v41 = objc_msgSend(v4, sel_sharedBehavior, 0x7374656764696E53);
  if (!v41) {
    goto LABEL_60;
  }
  uint64_t v42 = v41;
  id v43 = objc_msgSend(v41, sel_features);

  if (!v43)
  {
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  objc_msgSend(v43, sel_summaryOrchestration);

  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  unint64_t v45 = v0[2];
  unint64_t v44 = v0[3];
  if (v45 >= v44 >> 1) {
    uint64_t v0 = sub_1C26404F8((void *)(v44 > 1), v45 + 1, 1, v0);
  }
  v0[2] = v45 + 1;
  id v46 = &v0[2 * v45];
  v46[4] = 0xD000000000000014;
  v46[5] = 0x80000001C278C280;
  id v47 = objc_msgSend(v4, sel_sharedBehavior, 0xD000000000000014);
  if (!v47) {
    goto LABEL_62;
  }
  id v48 = v47;
  id v49 = objc_msgSend(v47, sel_features);

  if (!v49)
  {
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  objc_msgSend(v49, sel_chamomile);

  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  unint64_t v51 = v0[2];
  unint64_t v50 = v0[3];
  if (v51 >= v50 >> 1) {
    uint64_t v0 = sub_1C26404F8((void *)(v50 > 1), v51 + 1, 1, v0);
  }
  v0[2] = v51 + 1;
  uint64_t v52 = &v0[2 * v51];
  v52[4] = 0x6C696D6F6D616843;
  v52[5] = 0xE900000000000065;
  id v53 = objc_msgSend(v4, sel_sharedBehavior, 0x6C696D6F6D616843);
  if (!v53) {
    goto LABEL_64;
  }
  id v54 = v53;
  id v55 = objc_msgSend(v53, sel_features);

  if (!v55)
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  objc_msgSend(v55, sel_yodel);

  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  unint64_t v57 = v0[2];
  unint64_t v56 = v0[3];
  if (v57 >= v56 >> 1) {
    uint64_t v0 = sub_1C26404F8((void *)(v56 > 1), v57 + 1, 1, v0);
  }
  v0[2] = v57 + 1;
  uint64_t v58 = &v0[2 * v57];
  v58[4] = 0x6C65646F59;
  v58[5] = 0xE500000000000000;
  id v59 = objc_msgSend(v4, sel_sharedBehavior, 0x6C65646F59);
  if (!v59) {
    goto LABEL_66;
  }
  unint64_t v60 = v59;
  id v61 = objc_msgSend(v59, sel_features);

  if (!v61)
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  objc_msgSend(v61, sel_harmonia);

  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  unint64_t v63 = v0[2];
  unint64_t v62 = v0[3];
  if (v63 >= v62 >> 1) {
    uint64_t v0 = sub_1C26404F8((void *)(v62 > 1), v63 + 1, 1, v0);
  }
  v0[2] = v63 + 1;
  unint64_t v64 = &v0[2 * v63];
  v64[4] = 0x61696E6F6D726148;
  v64[5] = 0xE800000000000000;
  id v65 = objc_msgSend(v4, sel_sharedBehavior, 0x61696E6F6D726148);
  if (!v65) {
    goto LABEL_68;
  }
  unint64_t v66 = v65;
  id v67 = objc_msgSend(v65, sel_features);

  if (!v67)
  {
LABEL_69:
    __break(1u);
    return;
  }
  objc_msgSend(v67, sel_lavender);

  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  unint64_t v69 = v0[2];
  unint64_t v68 = v0[3];
  if (v69 >= v68 >> 1) {
    uint64_t v0 = sub_1C26404F8((void *)(v68 > 1), v69 + 1, 1, v0);
  }
  v0[2] = v69 + 1;
  uint64_t v70 = &v0[2 * v69];
  v70[4] = 0x7265646E6576614CLL;
  v70[5] = 0xE800000000000000;
  sub_1C264E94C();
  sub_1C261C738();
  sub_1C277B7D0();
  swift_bridgeObjectRelease();
}

uint64_t sub_1C261BD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  swift_retain();
  if (a3)
  {
    uint64_t v15 = swift_bridgeObjectRetain();
    unint64_t v16 = sub_1C261C11C(v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v16 = 0;
  }
  id v17 = (void *)swift_allocObject();
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a3;
  void v17[6] = sub_1C2625618;
  v17[7] = v14;
  v17[8] = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C261BEB8(a5, a6, (uint64_t)v16, (uint64_t)sub_1C262697C, (uint64_t)v17);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C261BEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = v6;
  v12[6] = a4;
  v12[7] = a5;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a4;
  *(void *)(v13 + 24) = a5;
  uint64_t v14 = *(os_unfair_lock_s **)(v6 + 40);
  uint64_t v15 = (uint64_t)&v14[4];
  unint64_t v16 = v14 + 16;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v16);
  sub_1C261BFD4(v15);
  os_unfair_lock_unlock(v16);
  swift_release();
  return swift_release();
}

void sub_1C261BFD4(uint64_t a1)
{
  sub_1C261BFF4(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40));
}

void sub_1C261BFF4(uint64_t a1, void (*a2)(void *), uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10 = *(void **)(a1 + 16);
  if ((unint64_t)v10 >= 2)
  {
    if (v10 == (void *)2)
    {
      a4(a1);
    }
    else
    {
      a2(v10);
      sub_1C2663F20(v10);
    }
  }
  else
  {
    id v11 = *(void **)(a1 + 24);
    swift_retain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v11 = sub_1C2690514(0, v11[2] + 1, 1, v11);
    }
    unint64_t v13 = v11[2];
    unint64_t v12 = v11[3];
    if (v13 >= v12 >> 1) {
      id v11 = sub_1C2690514((void *)(v12 > 1), v13 + 1, 1, v11);
    }
    v11[2] = v13 + 1;
    uint64_t v14 = &v11[4 * v13];
    v14[4] = a4;
    v14[5] = a5;
    void v14[6] = a2;
    v14[7] = a3;
    *(void *)(a1 + 24) = v11;
  }
}

uint64_t sub_1C261C10C(uint64_t *a1)
{
  return sub_1C264B054(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

void *sub_1C261C11C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C263E704(0, (unint64_t *)&qword_1EBB85EA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  id v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1C261C224((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1C2648F6C();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1C261C224(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  id v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *id v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t FeedItem.description.getter()
{
  uint64_t v1 = sub_1C277C960();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  int64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1C2648348((uint64_t)&unk_1F1DC4E68);
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  swift_arrayDestroy();
  uint64_t v17 = type metadata accessor for FeedItem();
  uint64_t v15 = (uint64_t)v0;
  id v7 = v0;
  sub_1C277C920();
  uint64_t v8 = sub_1C277C950();
  uint64_t v13 = v5;
  unint64_t v9 = sub_1C263FA84(v8, (uint64_t (*)(void, void, _OWORD *))sub_1C263FD44);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v15 = (uint64_t)v9;
  sub_1C26488D8(0, (unint64_t *)&qword_1EBB85E70, v6, MEMORY[0x1E4FBB320]);
  sub_1C261C738();
  sub_1C277B7D0();
  swift_bridgeObjectRelease();
  uint64_t v15 = 60;
  unint64_t v16 = 0xE100000000000000;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C261C7B4();
  sub_1C277B860();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  uint64_t v10 = v15;
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

uint64_t type metadata accessor for FeedItem()
{
  return self;
}

unint64_t sub_1C261C738()
{
  unint64_t result = qword_1EBB85E78;
  if (!qword_1EBB85E78)
  {
    sub_1C26488D8(255, (unint64_t *)&qword_1EBB85E70, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85E78);
  }
  return result;
}

unint64_t sub_1C261C7B4()
{
  unint64_t result = qword_1EBB80F10;
  if (!qword_1EBB80F10)
  {
    type metadata accessor for FeedItem();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB80F10);
  }
  return result;
}

uint64_t sub_1C261C7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  int64_t v4 = (id *)((((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);

  uint64_t v5 = sub_1C277B0D0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(((((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80), v5);

  return swift_bridgeObjectRelease();
}

uint64_t destroy for PluginFeedItemStorage(id *a1)
{
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(a1 + 1));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t SourceProfile.identifier.getter(void *a1)
{
  uint64_t v2 = sub_1C277A8A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0x636974736F6E6761;
  }
  id v6 = a1;
  id v7 = objc_msgSend(v6, sel_identifier);
  sub_1C277A880();

  uint64_t v8 = sub_1C277A850();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8;
}

uint64_t HealthAppPluginNotificationManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t sub_1C261CA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  id v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *id v7 = *v8;
  unint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void **)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v11 = *v10;
  *unint64_t v9 = *v10;
  unint64_t v12 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v10) = *(unsigned char *)(v13 + 16);
  *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
  *(unsigned char *)(v12 + 16) = (_BYTE)v10;
  uint64_t v14 = sub_1C277B0D0();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  uint64_t v17 = v15 + 16;
  uint64_t v18 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = (v18 + 17 + v12) & ~v18;
  uint64_t v20 = (v18 + 17 + v13) & ~v18;
  id v21 = v11;
  v16(v19, v20, v14);
  uint64_t v22 = *(void *)(v17 + 48) + 7;
  id v23 = (void *)((v22 + v19) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)((v22 + v20) & 0xFFFFFFFFFFFFFFF8);
  *id v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1C261CBD8()
{
  return HealthPlatformContextProvider.Context.description.getter();
}

unint64_t HealthPlatformContextProvider.Context.description.getter()
{
  sub_1C277C2D0();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_profileIdentifier);
  id v2 = objc_msgSend(v1, sel_description);

  sub_1C277B850();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  return 0xD000000000000012;
}

void FeedItem.hostViewStyle.getter(char *a1@<X8>)
{
  swift_getObjectType();
  id v3 = objc_msgSend(v1, sel_hostViewStyleRawValue);
  uint64_t v4 = sub_1C277B850();
  unint64_t v6 = v5;

  swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7) {
    goto LABEL_7;
  }
  id v8 = objc_msgSend(v1, sel_hostViewStyleRawValue);
  sub_1C277B850();

  uint64_t v9 = sub_1C277C650();
  swift_bridgeObjectRelease();
  if (!v9)
  {
LABEL_12:
    char v10 = 0;
    goto LABEL_13;
  }
  if (v9 != 1)
  {
LABEL_7:
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C277B130();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBB86280);
    id v12 = v1;
    unint64_t v13 = sub_1C277B100();
    os_log_type_t v14 = sub_1C277BD30();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v28 = a1;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v29 = v16;
      *(_DWORD *)uint64_t v15 = 136446722;
      uint64_t v17 = sub_1C277C9E0();
      sub_1C263FDFC(v17, v18, &v29);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      id v19 = objc_msgSend(v12, sel_hostViewStyleRawValue);
      uint64_t v20 = sub_1C277B850();
      unint64_t v22 = v21;

      sub_1C263FDFC(v20, v22, &v29);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2080;
      id v23 = objc_msgSend(v12, sel_description);
      uint64_t v24 = sub_1C277B850();
      unint64_t v26 = v25;

      sub_1C263FDFC(v24, v26, &v29);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v13, v14, "%{public}s Unexpected host view style raw value %{public}s for feed item: %s, privacy: .private)", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      uint64_t v27 = v16;
      a1 = v28;
      MEMORY[0x1C875D230](v27, -1, -1);
      MEMORY[0x1C875D230](v15, -1, -1);
    }
    else
    {
    }
    goto LABEL_12;
  }
  char v10 = 1;
LABEL_13:
  *a1 = v10;
}

double static FeedItemGenerator.delete(context:domain:feedItemIdentifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v23 = a5;
  uint64_t v24 = a3;
  sub_1C2650A98(0);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C264EE60(0);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for GeneratorContext();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = *(void **)a2;
  uint64_t v17 = *(void *)(a2 + 8);
  uint64_t v19 = *(void *)(a2 + 16);
  LODWORD(a2) = *(unsigned __int8 *)(a2 + 24);
  sub_1C2647B80(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  uint64_t v20 = type metadata accessor for PluginFeedItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
  id v21 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C277B440();
  return sub_1C261D210((uint64_t)v16, (uint64_t)v18, v17, v19, a2, v24, a4, (uint64_t)v13, v23);
}

double sub_1C261D210@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v58 = a8;
  *(void *)&long long v54 = a7;
  uint64_t v53 = a6;
  int v67 = a5;
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  uint64_t v64 = a2;
  uint64_t v57 = a1;
  sub_1C264F5A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v61 = v11;
  uint64_t v62 = v12;
  MEMORY[0x1F4188790](v11);
  id v55 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C261E118(0, &qword_1EBB83630, (void (*)(uint64_t))sub_1C264F5A0, (void (*)(void))sub_1C264F634);
  uint64_t v60 = v14;
  uint64_t v63 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v59 = (char *)&v46 - v15;
  uint64_t v16 = type metadata accessor for GeneratorContext();
  uint64_t v52 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v52 + 64);
  uint64_t v18 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v50 = (uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v46 - v19;
  sub_1C264F840(0, &qword_1EBB835F0, sub_1C264EE60, (void (*)(void))sub_1C264EE94);
  uint64_t v68 = v21;
  uint64_t v49 = *(void *)(v21 - 8);
  uint64_t v22 = v49;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  id v47 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  unint64_t v26 = (char *)&v46 - v25;
  sub_1C264EE60(0);
  uint64_t v56 = v27;
  sub_1C261E938(0);
  sub_1C264EE94();
  unint64_t v51 = v26;
  sub_1C277B500();
  id v48 = v20;
  sub_1C2647B80(a1, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  sub_1C263E750(0, (unint64_t *)&qword_1EBB85EA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C277E480;
  *(void *)(inited + 32) = v53;
  *(void *)(inited + 40) = v54;
  uint64_t v29 = sub_1C261E738(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v30 = v47;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v47, v26, v68);
  sub_1C264F8C8();
  swift_bridgeObjectRetain();
  id v31 = v55;
  unint64_t v32 = v30;
  sub_1C277B550();
  uint64_t v33 = v50;
  sub_1C2647B80((uint64_t)v20, v50, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  unint64_t v34 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  unint64_t v35 = (v17 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_1C2647C50(v33, v36 + v34, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  unint64_t v37 = v36 + v35;
  *(void *)unint64_t v37 = v29;
  long long v54 = xmmword_1C277F760;
  *(_OWORD *)(v37 + 8) = xmmword_1C277F760;
  *(unsigned char *)(v37 + 24) = 0;
  sub_1C263E750(0, (unint64_t *)&qword_1EBB85930, (uint64_t)&type metadata for FeedItemContextChange, MEMORY[0x1E4FBB320]);
  sub_1C264F634();
  swift_bridgeObjectRetain();
  unint64_t v38 = v59;
  uint64_t v39 = v61;
  sub_1C277B500();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v39);
  sub_1C264F7B8();
  uint64_t v40 = v60;
  uint64_t v41 = sub_1C277B4E0();
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v49 + 8);
  uint64_t v43 = v68;
  v42(v32, v68);
  sub_1C26480D4((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v40);
  (*(void (**)(uint64_t))(*(void *)(v56 - 8) + 8))(v58);
  sub_1C26480D4(v57, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  v42(v51, v43);
  uint64_t v44 = v65;
  *(void *)a9 = v64;
  *(void *)(a9 + 8) = v44;
  *(void *)(a9 + 16) = v66;
  *(unsigned char *)(a9 + 24) = v67;
  *(void *)(a9 + 32) = v41;
  *(void *)(a9 + 40) = v29;
  double result = *(double *)&v54;
  *(_OWORD *)(a9 + 48) = v54;
  *(unsigned char *)(a9 + 64) = 0;
  return result;
}

double FeedItemGenerator.init(context:domain:feedItemPredicate:feedItemsProvider:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  int v59 = a6;
  uint64_t v57 = a4;
  uint64_t v58 = a5;
  uint64_t v71 = a1;
  uint64_t v61 = a9;
  sub_1C261E050();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v66 = v13;
  uint64_t v67 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v72 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C261E118(0, &qword_1EBB83620, (void (*)(uint64_t))sub_1C261E050, (void (*)(void))sub_1C261E0E4);
  uint64_t v65 = v16;
  uint64_t v68 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v62 = (char *)&v50 - v17;
  uint64_t v18 = type metadata accessor for GeneratorContext();
  uint64_t v54 = *(void *)(v18 - 8);
  uint64_t v19 = *(void *)(v54 + 64);
  uint64_t v20 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v52 = (uint64_t)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v69 = (uint64_t)&v50 - v21;
  sub_1C261DF34();
  uint64_t v70 = v22;
  uint64_t v53 = *(void *)(v22 - 8);
  uint64_t v23 = v53;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  unint64_t v26 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v50 - v27;
  uint64_t v63 = *a2;
  int v64 = *((unsigned __int8 *)a2 + 24);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a7;
  *(void *)(v29 + 24) = a8;
  uint64_t v56 = a8;
  sub_1C261E6D4(0, &qword_1EBB836F0, (uint64_t (*)(uint64_t))sub_1C261E938, MEMORY[0x1E4F1AC08]);
  sub_1C261DFC8();
  swift_retain();
  long long v60 = *(_OWORD *)(a2 + 1);
  id v55 = v28;
  sub_1C277B4A0();
  uint64_t v30 = v69;
  uint64_t v50 = type metadata accessor for GeneratorContext;
  sub_1C2647B80(v71, v69, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  id v31 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  unint64_t v51 = v26;
  v31(v26, v28, v70);
  unint64_t v32 = a3;
  uint64_t v33 = a3;
  unint64_t v35 = v57;
  unint64_t v34 = v58;
  LOBYTE(a2) = v59;
  sub_1C2646704(v33, v57, v58, v59);
  sub_1C261DEEC(&qword_1EBB83730, (void (*)(uint64_t))sub_1C261DF34);
  sub_1C277B550();
  uint64_t v36 = v52;
  sub_1C2647B80(v30, v52, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  unint64_t v37 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  uint64_t v38 = swift_allocObject();
  sub_1C2647C50(v36, v38 + v37, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  unint64_t v39 = v38 + ((v19 + v37 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v40 = v32;
  *(void *)unint64_t v39 = v32;
  *(void *)(v39 + 8) = v35;
  *(void *)(v39 + 16) = v34;
  *(unsigned char *)(v39 + 24) = (_BYTE)a2;
  sub_1C2646704(v32, v35, v34, (char)a2);
  sub_1C263E750(0, (unint64_t *)&qword_1EBB85930, (uint64_t)&type metadata for FeedItemContextChange, MEMORY[0x1E4FBB320]);
  sub_1C261E0E4();
  uint64_t v41 = v62;
  uint64_t v42 = v66;
  uint64_t v43 = v72;
  sub_1C277B500();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v43, v42);
  sub_1C261E1C4();
  uint64_t v44 = v65;
  uint64_t v72 = (char *)sub_1C277B4E0();
  sub_1C2645714(v32, v35, v34, (char)a2);
  unint64_t v45 = *(void (**)(char *, uint64_t))(v53 + 8);
  uint64_t v46 = v70;
  v45(v51, v70);
  id v47 = v50;
  sub_1C26480D4(v69, (uint64_t (*)(void))v50);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v41, v44);
  swift_release();
  sub_1C26480D4(v71, (uint64_t (*)(void))v47);
  v45(v55, v46);
  id v48 = v61;
  void *v61 = v63;
  double result = *(double *)&v60;
  *(_OWORD *)(v48 + 1) = v60;
  *((unsigned char *)v48 + 24) = v64;
  v48[4] = v72;
  v48[5] = v40;
  v48[6] = v35;
  v48[7] = v34;
  *((unsigned char *)v48 + 64) = (_BYTE)a2;
  return result;
}

uint64_t sub_1C261DEEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C261DF34()
{
  if (!qword_1EBB83738)
  {
    sub_1C261E6D4(255, &qword_1EBB836F0, (uint64_t (*)(uint64_t))sub_1C261E938, MEMORY[0x1E4F1AC08]);
    sub_1C261DFC8();
    unint64_t v0 = sub_1C277B4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83738);
    }
  }
}

unint64_t sub_1C261DFC8()
{
  unint64_t result = qword_1EBB836E8;
  if (!qword_1EBB836E8)
  {
    sub_1C261E6D4(255, &qword_1EBB836F0, (uint64_t (*)(uint64_t))sub_1C261E938, MEMORY[0x1E4F1AC08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB836E8);
  }
  return result;
}

void sub_1C261E050()
{
  if (!qword_1EBB83668)
  {
    sub_1C261DF34();
    sub_1C261DEEC(&qword_1EBB83730, (void (*)(uint64_t))sub_1C261DF34);
    unint64_t v0 = sub_1C277B220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83668);
    }
  }
}

uint64_t sub_1C261E0E4()
{
  return sub_1C261DEEC(&qword_1EBB83660, (void (*)(uint64_t))sub_1C261E050);
}

void sub_1C261E118(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1C263E750(255, (unint64_t *)&qword_1EBB85930, (uint64_t)&type metadata for FeedItemContextChange, MEMORY[0x1E4FBB320]);
    a4();
    unint64_t v6 = sub_1C277B1E0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1C261E1C4()
{
  unint64_t result = qword_1EBB83618;
  if (!qword_1EBB83618)
  {
    sub_1C261E118(255, &qword_1EBB83620, (void (*)(uint64_t))sub_1C261E050, (void (*)(void))sub_1C261E0E4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83618);
  }
  return result;
}

uint64_t static FeedItemPredicate.itemWithIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  sub_1C261E2EC();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C277E480;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C261E738(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v5;
}

void sub_1C261E2EC()
{
  if (!qword_1EBB85EA0)
  {
    unint64_t v0 = sub_1C277C7C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB85EA0);
    }
  }
}

__n128 FeedItemGenerator.init<A>(context:domain:feedItemIdentifier:feedItemPublisher:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v38 = a5;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v39 = a1;
  uint64_t v10 = type metadata accessor for GeneratorContext();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v32 = v12;
  sub_1C261E938(255);
  uint64_t v35 = a6;
  uint64_t v13 = sub_1C277B1E0();
  uint64_t v34 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v33 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v18 = *a2;
  char v19 = *((unsigned char *)a2 + 24);
  long long v31 = *(_OWORD *)(a2 + 1);
  sub_1C277B500();
  sub_1C2647B80(v39, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  uint64_t v40 = v18;
  long long v41 = v31;
  char v42 = v19;
  sub_1C263E750(0, (unint64_t *)&qword_1EBB85EA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C277E480;
  *(void *)(inited + 32) = v36;
  *(void *)(inited + 40) = v37;
  uint64_t v21 = (void *)sub_1C261E738(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v22 = v34;
  uint64_t v23 = (uint64_t)v33;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v33, v17, v13);
  swift_getWitnessTable();
  double v24 = FeedItemGenerator.init<A>(context:domain:feedItemPredicate:feedItemsPublisher:)((uint64_t)v32, (uint64_t)&v40, v21, (void *)1, 0, 0, v23, v13, (uint64_t)&v43);
  (*(void (**)(uint64_t, double))(*(void *)(v35 - 8) + 8))(v38, v24);
  sub_1C26480D4(v39, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v13);
  char v25 = v45;
  uint64_t v26 = v46;
  uint64_t v27 = v48;
  char v28 = v49;
  __n128 result = v44;
  long long v30 = v47;
  *(void *)a7 = v43;
  *(__n128 *)(a7 + 8) = result;
  *(unsigned char *)(a7 + 24) = v25;
  *(void *)(a7 + 32) = v26;
  *(_OWORD *)(a7 + 40) = v30;
  *(void *)(a7 + 56) = v27;
  *(unsigned char *)(a7 + 64) = v28;
  return result;
}

void sub_1C261E6D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C261E738(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1C261E8D8();
    uint64_t v3 = sub_1C277C2A0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      unint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1C277C8C0();
      swift_bridgeObjectRetain();
      sub_1C277B8B0();
      uint64_t result = sub_1C277C910();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_1C277C7E0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          char v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_1C277C7E0();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

void sub_1C261E8D8()
{
  if (!qword_1EBB85938)
  {
    unint64_t v0 = sub_1C277C2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB85938);
    }
  }
}

void sub_1C261E938(uint64_t a1)
{
}

uint64_t HealthAppNotificationContentStateManager.__deallocating_deinit()
{
  HealthAppNotificationContentStateManager.deinit();

  return swift_deallocClassInstance();
}

id *HealthAppNotificationContentStateManager.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

void sub_1C261E9F0()
{
}

void sub_1C261EA14()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + *(void *)(*(void *)v0 + 160)) + 16);
  os_unfair_lock_lock(v1);
  uint64_t v2 = v0 + *(void *)(*(void *)v0 + 168);
  swift_beginAccess();
  sub_1C2630D78(v2, (uint64_t)v3);
  if (v4)
  {
    sub_1C2630BCC((uint64_t)v3);
    os_unfair_lock_unlock(v1);
  }
  else
  {
    sub_1C261F308(v3, (uint64_t)v5);
    os_unfair_lock_unlock(v1);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1C277B350();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
  }
}

uint64_t DatabaseAccessibilityDispatchTarget.run(_:for:context:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v20)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t *v35;
  os_unfair_lock_s *v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  void (*v43)(unint64_t, unint64_t, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t, double);
  id v44;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unsigned char v60[40];
  void v61[4];
  long long v62[2];
  long long v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  uint64_t v56 = a4;
  uint64_t v57 = a2;
  uint64_t v11 = sub_1C277AF50();
  id v55 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v55 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v54 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v47 - v14;
  swift_getObjectType();
  uint64_t v16 = swift_conformsToProtocol2();
  if (v16) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v16) {
    uint64_t v18 = a3;
  }
  else {
    uint64_t v18 = 0;
  }
  if (!v18)
  {
    __swift_project_boxed_opaque_existential_1((void *)(v6 + 16), *(void *)(v6 + 40));
    return sub_1C277ACC0();
  }
  unint64_t v51 = a1;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v50 = v11;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v20 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v17 + 24);
  uint64_t v56 = a3;
  swift_unknownObjectRetain();
  v20(&v63, ObjectType, v17);
  if (!v64)
  {
    sub_1C26CB2D8((uint64_t)&v63);
    uint64_t v22 = v6;
LABEL_16:
    __swift_project_boxed_opaque_existential_1((void *)(v22 + 16), *(void *)(v22 + 40));
    swift_unknownObjectRetain();
    sub_1C277ACC0();
    return swift_unknownObjectRelease_n();
  }
  sub_1C261F308(&v63, (uint64_t)&v65);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(ObjectType, v17);
  uint64_t v22 = v6;
  if (!v21)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
    goto LABEL_16;
  }
  char v49 = (void *)v21;
  sub_1C26482E4(v6 + 16, (uint64_t)&v63);
  sub_1C26482E4(v51, (uint64_t)v62);
  BOOL v23 = v55;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
  uint64_t v25 = v50;
  v24(v15, v57, v50);
  sub_1C26482E4((uint64_t)&v63, (uint64_t)v61);
  sub_1C26482E4((uint64_t)v62, (uint64_t)v60);
  v24(v54, (uint64_t)v15, v25);
  uint64_t v26 = (*(unsigned __int8 *)(v23 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v27 = (v12 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v28 = swift_allocObject();
  sub_1C261F308(&v63, v28 + 16);
  sub_1C261F308(v62, v28 + 56);
  uint64_t v29 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v23 + 32))(v28 + v26, v15, v25);
  long long v30 = (void *)(v28 + v27);
  uint64_t v48 = v18;
  *long long v30 = v18;
  v30[1] = v17;
  unint64_t v51 = v17;
  long long v31 = (void *)(v28 + ((v27 + 23) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v32 = v53;
  char *v31 = v52;
  v31[1] = v32;
  MEMORY[0x1F4188790](v29);
  uint64_t v33 = v49;
  *(&v47 - 4) = (uint64_t)v49;
  *(&v47 - 3) = (uint64_t)sub_1C26CB4C0;
  uint64_t v57 = v28;
  *(&v47 - 2) = v28;
  uint64_t v35 = (uint64_t *)(v34 + 16);
  uint64_t v36 = (os_unfair_lock_s *)(v34 + 32);
  swift_unknownObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v36);
  sub_1C261F384(v35, (char *)&v58);
  os_unfair_lock_unlock(v36);
  if (!(_BYTE)v58)
  {
    __swift_project_boxed_opaque_existential_1(v61, v61[3]);
    uint64_t v46 = v54;
    sub_1C277ACC0();
    swift_unknownObjectRelease();

    swift_release();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v46, v50);
LABEL_19:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
  }
  if (v58 != 1)
  {
    swift_unknownObjectRelease();

    swift_release();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v50);
    goto LABEL_19;
  }
  (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v50);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
  uint64_t v37 = v67;
  id v55 = v66;
  uint64_t v54 = (char *)__swift_project_boxed_opaque_existential_1(&v65, v66);
  uint64_t v58 = 0;
  int v59 = 0xE000000000000000;
  sub_1C277C2D0();
  swift_bridgeObjectRelease();
  uint64_t v58 = 0xD000000000000024;
  int v59 = 0x80000001C278C5D0;
  uint64_t v38 = objc_msgSend(v33, sel_description);
  sub_1C277B850();

  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  uint64_t v39 = v58;
  uint64_t v40 = v59;
  long long v41 = (void *)swift_allocObject();
  char v42 = v51;
  void v41[2] = v48;
  v41[3] = v42;
  v41[4] = v33;
  v41[5] = v22;
  uint64_t v43 = *(void (**)(unint64_t, unint64_t, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t, double))(v37 + 8);
  swift_unknownObjectRetain();
  __n128 v44 = v33;
  swift_retain();
  v43(v39, v40, sub_1C26CB8E0, v41, v55, v37, 10.0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
}

uint64_t GeneratorContext.init(sourceProfile:country:feedItemContext:sharableModelContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = (int *)type metadata accessor for GeneratorContext();
  *((unsigned char *)a5 + v10[6]) = 0;
  *a5 = a1;
  sub_1C261F320(a2, (uint64_t)a5 + v10[5]);
  sub_1C261F308(a3, (uint64_t)a5 + v10[7]);
  uint64_t v11 = (uint64_t)a5 + v10[8];

  return sub_1C261F308(a4, v11);
}

uint64_t sub_1C261F308(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1C261F320(uint64_t a1, uint64_t a2)
{
  sub_1C264C860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C261F384(uint64_t *a1@<X0>, char *a2@<X8>)
{
  sub_1C261F3A4(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

void sub_1C261F3A4(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9 = *a1;
  id v10 = a2;
  uint64_t v11 = sub_1C261F640(v10, v9);

  if (v11 && objc_msgSend(v11, sel_isValid))
  {

    char v12 = 0;
    goto LABEL_13;
  }
  uint64_t v13 = a1[1];
  if (!*(void *)(v13 + 16))
  {
LABEL_12:
    sub_1C26CBC40(0, &qword_1EBB831C8, (uint64_t (*)(uint64_t))sub_1C264DE8C, MEMORY[0x1E4FBBE00]);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C277E480;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = a3;
    *(void *)(v25 + 24) = a4;
    *(void *)(v24 + 32) = sub_1C261AECC;
    *(void *)(v24 + 40) = v25;
    id v26 = v10;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = a1[1];
    a1[1] = 0x8000000000000000;
    sub_1C268BA60(v24, v26, isUniquelyReferenced_nonNull_native);
    a1[1] = v29;

    swift_bridgeObjectRelease();
    char v12 = 1;
    goto LABEL_13;
  }
  id v14 = v10;
  unint64_t v15 = sub_1C26344B4((uint64_t)v14);
  if ((v16 & 1) == 0)
  {

    goto LABEL_12;
  }
  uint64_t v17 = *(void **)(*(void *)(v13 + 56) + 8 * v15);
  swift_bridgeObjectRetain();

  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a3;
  *(void *)(v18 + 24) = a4;
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = sub_1C2690984(0, v17[2] + 1, 1, v17);
  }
  unint64_t v20 = v17[2];
  unint64_t v19 = v17[3];
  if (v20 >= v19 >> 1) {
    uint64_t v17 = sub_1C2690984((void *)(v19 > 1), v20 + 1, 1, v17);
  }
  v17[2] = v20 + 1;
  uint64_t v21 = &v17[2 * v20];
  v21[4] = sub_1C262BB18;
  v21[5] = v18;
  id v22 = v14;
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v28 = a1[1];
  a1[1] = 0x8000000000000000;
  sub_1C268BA60((uint64_t)v17, v22, v23);
  a1[1] = v28;

  swift_bridgeObjectRelease();
  char v12 = 2;
LABEL_13:
  *a5 = v12;
}

void *sub_1C261F640(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_1C26344B4((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_1C277C500();

  if (!v4) {
    return 0;
  }
  sub_1C2644ED8(0, &qword_1EBB842D0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

id sub_1C261F718()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_profileIdentifier);

  return v1;
}

id sub_1C261F750@<X0>(void *a1@<X8>)
{
  id v4 = *(id *)(v1 + 16);
  a1[3] = sub_1C2644ED8(0, &qword_1EBB82ED0);
  a1[4] = &protocol witness table for HKHealthStore;
  *a1 = v4;

  return v4;
}

void **initializeBufferWithCopyOfBuffer for SourceProfile(void **a1, void **a2)
{
  id v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

id GeneratorDomain.sourceProfile.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t destroy for HealthAppPluginInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t FeedItem.userInterface.getter()
{
  id v1 = objc_msgSend(v0, sel_storyboardIdentifier);
  if (v1)
  {
    id v2 = v1;
  }
  else
  {
    id v3 = objc_msgSend(v0, sel_viewControllerClassName);
    if (v3)
    {
      id v2 = v3;
    }
    else
    {
      id v4 = objc_msgSend(v0, sel_viewClassName);
      if (v4)
      {
        id v2 = v4;
      }
      else
      {
        id v5 = objc_msgSend(v0, sel_hostingControllerClassName);
        if (v5)
        {
          id v2 = v5;
        }
        else
        {
          id v6 = objc_msgSend(v0, sel_contentConfigurationProviderClassName);
          if (v6)
          {
            id v2 = v6;
          }
          else
          {
            id v7 = objc_msgSend(v0, sel_listContentConfigurationProviderClassName);
            if (!v7) {
              return 0;
            }
            id v2 = v7;
          }
        }
      }
    }
  }
  uint64_t v8 = sub_1C277B850();

  return v8;
}

void sub_1C261F9A0()
{
}

void OrchestrationWorkQueueStatusObserver.didEnqueue(count:context:queueLength:)()
{
  uint64_t v1 = v0;
  if (qword_1EBB82A50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277B130();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB82A38);
  swift_unknownObjectRetain_n();
  id v3 = sub_1C277B100();
  os_log_type_t v4 = sub_1C277BD00();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315650;
    sub_1C2621120(0, &qword_1EBB829D0);
    swift_unknownObjectRetain();
    uint64_t v7 = sub_1C277B860();
    sub_1C263FDFC(v7, v8, &v12);
    sub_1C277C0D0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    sub_1C277C0D0();
    *(_WORD *)(v5 + 22) = 2048;
    sub_1C277C0D0();
    _os_log_impl(&dword_1C2601000, v3, v4, "%s: Enqueued %ld work plans, %ld outstanding.", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v6, -1, -1);
    MEMORY[0x1C875D230](v5, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t v9 = *(os_unfair_lock_s **)(v1 + 16);
  id v10 = v9 + 4;
  uint64_t v11 = v9 + 14;
  os_unfair_lock_lock(v9 + 14);
  sub_1C261FC20(v10);
  os_unfair_lock_unlock(v11);
}

void *sub_1C261FC20(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

void sub_1C261FC38(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, double a8)
{
}

void OrchestrationWorkQueueStatusObserver.didFinish(workPlan:after:analytics:result:executor:context:remaining:)(void *a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, double a8)
{
  uint64_t v135 = a7;
  uint64_t v142 = a5;
  uint64_t v125 = *v8;
  id v126 = a6;
  uint64_t v14 = sub_1C277ADF0();
  uint64_t v129 = *(void *)(v14 - 8);
  uint64_t v130 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v127 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26212CC();
  uint64_t v119 = *(void *)(v16 - 8);
  uint64_t v120 = v16;
  MEMORY[0x1F4188790](v16);
  id v124 = (char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26211C8();
  uint64_t v122 = *(void *)(v18 - 8);
  uint64_t v123 = v18;
  MEMORY[0x1F4188790](v18);
  unint64_t v121 = (char *)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C277AE30();
  uint64_t v138 = *(void *)(v20 - 8);
  uint64_t v139 = v20;
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  id v131 = (char *)&v115 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v137 = (char *)&v115 - v23;
  uint64_t v24 = sub_1C277ADB0();
  uint64_t v141 = *(void (***)(void, void, void))(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v140 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1C277AF50();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v115 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB82A50 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1C277B130();
  __swift_project_value_buffer(v30, (uint64_t)qword_1EBB82A38);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v29, a4, v26);
  sub_1C26482E4((uint64_t)a1, (uint64_t)v146);
  ((void (**)(char *, uint64_t, uint64_t))v141)[2](v140, a2, v24);
  uint64_t v134 = v24;
  swift_unknownObjectRetain();
  sub_1C2621110(a3);
  swift_unknownObjectRetain();
  sub_1C2621110(a3);
  long long v31 = sub_1C277B100();
  os_log_type_t v32 = sub_1C277BD40();
  int v33 = v32;
  BOOL v34 = os_log_type_enabled(v31, v32);
  os_log_type_t v132 = a1;
  uint64_t v133 = a2;
  uint64_t v128 = a4;
  if (v34)
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v118 = v36;
    *(_DWORD *)uint64_t v35 = 136316418;
    int v117 = v33;
    uint64_t v143 = v142;
    id v144 = v126;
    v145[0] = v36;
    sub_1C2621120(0, &qword_1EBB829D0);
    swift_unknownObjectRetain();
    os_log_t v116 = v31;
    uint64_t v37 = sub_1C277B860();
    id v126 = a3;
    uint64_t v143 = sub_1C263FDFC(v37, v38, v145);
    sub_1C277C0D0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2080;
    sub_1C2621074(&qword_1EBB80D50, MEMORY[0x1E4F66E98]);
    uint64_t v39 = sub_1C277C7B0();
    uint64_t v143 = sub_1C263FDFC(v39, v40, v145);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    *(_WORD *)(v35 + 22) = 2080;
    __swift_project_boxed_opaque_existential_1(v146, v146[3]);
    long long v41 = v137;
    a3 = v126;
    sub_1C277B0A0();
    sub_1C2621074(&qword_1EBB829E0, MEMORY[0x1E4F66E48]);
    uint64_t v42 = v139;
    uint64_t v43 = sub_1C277C7B0();
    unint64_t v45 = v44;
    (*(void (**)(char *, uint64_t))(v138 + 8))(v41, v42);
    uint64_t v143 = sub_1C263FDFC(v43, v45, v145);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v146);
    *(_WORD *)(v35 + 32) = 2080;
    sub_1C2621110(a3);
    uint64_t v46 = sub_1C277AD30();
    unint64_t v48 = v47;
    sub_1C2621100(a3);
    uint64_t v143 = sub_1C263FDFC(v46, v48, v145);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    sub_1C2621100(a3);
    sub_1C2621100(a3);
    *(_WORD *)(v35 + 42) = 2048;
    uint64_t v143 = *(void *)&a8;
    sub_1C277C0D0();
    *(_WORD *)(v35 + 52) = 2080;
    sub_1C2621074(&qword_1EBB84160, MEMORY[0x1E4F66E38]);
    char v49 = v140;
    uint64_t v50 = v134;
    uint64_t v51 = sub_1C277C7B0();
    uint64_t v143 = sub_1C263FDFC(v51, v52, v145);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v141[1])(v49, v50);
    os_log_t v53 = v116;
    _os_log_impl(&dword_1C2601000, v116, (os_log_type_t)v117, "[%s] %s/%s: %s after %fs. %s", (uint8_t *)v35, 0x3Eu);
    uint64_t v54 = v118;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v54, -1, -1);
    MEMORY[0x1C875D230](v35, -1, -1);

    uint64_t v55 = v136;
    if (v135) {
      goto LABEL_9;
    }
  }
  else
  {
    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v146);
    sub_1C2621100(a3);
    sub_1C2621100(a3);
    ((void (*)(char *, uint64_t))v141[1])(v140, v134);

    uint64_t v55 = v136;
    if (v135) {
      goto LABEL_9;
    }
  }
  type metadata accessor for HealthPlatformContextProvider.Context(0);
  uint64_t v56 = swift_dynamicCastClass();
  if (v56)
  {
    uint64_t v57 = v56;
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v58 = sub_1C262AB00();
    swift_release();
    v146[0] = v58;
    sub_1C264F068();
    sub_1C2621074(&qword_1EBB82CB8, (void (*)(uint64_t))sub_1C264F068);
    sub_1C277B590();
    swift_release();
    uint64_t v59 = swift_allocObject();
    swift_weakInit();
    long long v60 = (void *)swift_allocObject();
    v60[2] = v59;
    v60[3] = v57;
    v60[4] = v125;
    swift_unknownObjectRetain();
    sub_1C277B330();
    uint64_t v61 = MEMORY[0x1E4FBC848] + 8;
    sub_1C2617598(0, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
    sub_1C2621074(&qword_1EBB841E8, (void (*)(uint64_t))sub_1C26212CC);
    sub_1C264EFA0(&qword_1EBB82CC8, &qword_1EBB82CD0, v61);
    uint64_t v63 = v120;
    uint64_t v62 = v121;
    int v64 = v124;
    sub_1C277B5A0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v64, v63);
    *(void *)(swift_allocObject() + 16) = v125;
    sub_1C2621074(&qword_1EBB841F8, (void (*)(uint64_t))sub_1C26211C8);
    uint64_t v65 = v123;
    sub_1C277B4D0();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v122 + 8))(v62, v65);
  }
LABEL_9:
  if (a3)
  {
    if (a3 == (id)1)
    {
      uint64_t v66 = *(os_unfair_lock_s **)(v55 + 16);
      uint64_t v67 = (uint64_t)&v66[4];
      uint64_t v68 = v66 + 14;
      os_unfair_lock_lock(v66 + 14);
      sub_1C272F048(v67);
      os_unfair_lock_unlock(v68);
    }
    else
    {
      uint64_t v90 = *(os_unfair_lock_s **)(v55 + 16);
      uint64_t v91 = (uint64_t)&v90[4];
      os_log_type_t v92 = v90 + 14;
      id v93 = a3;
      os_unfair_lock_lock(v92);
      sub_1C2621360(v91);
      os_unfair_lock_unlock(v92);
      id v94 = (void *)sub_1C277A610();
      uint64_t v142 = sub_1C277B820();
      sub_1C2621170();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C2785E70;
      *(void *)(inited + 32) = 0x6E6F697461727564;
      *(void *)(inited + 40) = 0xE800000000000000;
      id v126 = a3;
      *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a8);
      *(void *)(inited + 56) = 0x4464656B636F6C62;
      *(void *)(inited + 64) = 0xEF6E6F6974617275;
      sub_1C277AD90();
      *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v96);
      strcpy((char *)(inited + 80), "pausedDuration");
      *(unsigned char *)(inited + 95) = -18;
      sub_1C277AD80();
      *(void *)(inited + 96) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v97);
      *(void *)(inited + 104) = 0xD000000000000010;
      *(void *)(inited + 112) = 0x80000001C278F4A0;
      sub_1C277ADA0();
      *(void *)(inited + 120) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v98);
      *(void *)(inited + 128) = 0x74617275446E7572;
      *(void *)(inited + 136) = 0xEB000000006E6F69;
      sub_1C277AD70();
      *(void *)(inited + 144) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v99);
      *(void *)(inited + 152) = 0x73736563637573;
      *(void *)(inited + 160) = 0xE700000000000000;
      *(void *)(inited + 168) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, 0);
      *(void *)(inited + 176) = 0x6D6F44726F727265;
      *(void *)(inited + 184) = 0xEB000000006E6961;
      id v100 = objc_msgSend(v94, sel_domain);
      if (v100)
      {
        *(void *)(inited + 192) = v100;
        *(void *)(inited + 200) = 0x646F43726F727265;
        *(void *)(inited + 208) = 0xE900000000000065;
        id v101 = objc_msgSend(v94, sel_code);
        *(void *)(inited + 216) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v101);
        *(void *)(inited + 224) = 0x72656469766F7270;
        *(void *)(inited + 232) = 0xE800000000000000;
        sub_1C277AF40();
        uint64_t v141 = (void (**)(void, void, void))v94;
        uint64_t v102 = sub_1C277B820();
        swift_bridgeObjectRelease();
        *(void *)(inited + 240) = v102;
        *(void *)(inited + 248) = 0x726F747563657865;
        *(void *)(inited + 256) = 0xE800000000000000;
        unint64_t v103 = v127;
        sub_1C277AF30();
        sub_1C277ADC0();
        (*(void (**)(char *, uint64_t))(v129 + 8))(v103, v130);
        uint64_t v104 = sub_1C277B820();
        swift_bridgeObjectRelease();
        *(void *)(inited + 264) = v104;
        *(void *)(inited + 272) = 0x6E69616D6F64;
        *(void *)(inited + 280) = 0xE600000000000000;
        os_log_type_t v105 = v132;
        __swift_project_boxed_opaque_existential_1(v132, v132[3]);
        uint64_t v106 = v137;
        sub_1C277B0A0();
        sub_1C277AE20();
        id v107 = *(void (**)(char *, uint64_t))(v138 + 8);
        uint64_t v108 = v106;
        uint64_t v109 = v139;
        v107(v108, v139);
        uint64_t v110 = sub_1C277B820();
        swift_bridgeObjectRelease();
        *(void *)(inited + 288) = v110;
        *(void *)(inited + 296) = 1701080931;
        *(void *)(inited + 304) = 0xE400000000000000;
        __swift_project_boxed_opaque_existential_1(v105, v105[3]);
        uint64_t v111 = v131;
        sub_1C277B0A0();
        uint64_t v112 = sub_1C277AE00();
        v107(v111, v109);
        *(void *)(inited + 312) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v112);
        sub_1C2629360(inited);
        sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
        uint64_t v113 = (void *)sub_1C277B750();
        swift_bridgeObjectRelease();
        os_log_type_t v114 = (void *)v142;
        AnalyticsSendEvent();

        sub_1C2621100(v126);
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    uint64_t v69 = *(os_unfair_lock_s **)(v55 + 16);
    uint64_t v70 = (uint64_t)&v69[4];
    uint64_t v71 = v69 + 14;
    os_unfair_lock_lock(v69 + 14);
    sub_1C272F01C(v70);
    os_unfair_lock_unlock(v71);
    uint64_t v142 = sub_1C277B820();
    sub_1C2621170();
    uint64_t v72 = swift_initStackObject();
    *(_OWORD *)(v72 + 16) = xmmword_1C2785E60;
    *(void *)(v72 + 32) = 0x6E6F697461727564;
    *(void *)(v72 + 40) = 0xE800000000000000;
    *(void *)(v72 + 48) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a8);
    *(void *)(v72 + 56) = 0x4464656B636F6C62;
    *(void *)(v72 + 64) = 0xEF6E6F6974617275;
    sub_1C277AD90();
    *(void *)(v72 + 72) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v73);
    strcpy((char *)(v72 + 80), "pausedDuration");
    *(unsigned char *)(v72 + 95) = -18;
    sub_1C277AD80();
    *(void *)(v72 + 96) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v74);
    *(void *)(v72 + 104) = 0xD000000000000010;
    *(void *)(v72 + 112) = 0x80000001C278F4A0;
    sub_1C277ADA0();
    *(void *)(v72 + 120) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v75);
    *(void *)(v72 + 128) = 0x74617275446E7572;
    *(void *)(v72 + 136) = 0xEB000000006E6F69;
    sub_1C277AD70();
    *(void *)(v72 + 144) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v76);
    *(void *)(v72 + 152) = 0x73736563637573;
    *(void *)(v72 + 160) = 0xE700000000000000;
    *(void *)(v72 + 168) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, 1);
    *(void *)(v72 + 176) = 0x72656469766F7270;
    *(void *)(v72 + 184) = 0xE800000000000000;
    sub_1C277AF40();
    uint64_t v77 = sub_1C277B820();
    swift_bridgeObjectRelease();
    *(void *)(v72 + 192) = v77;
    *(void *)(v72 + 200) = 0x726F747563657865;
    *(void *)(v72 + 208) = 0xE800000000000000;
    unint64_t v78 = v127;
    sub_1C277AF30();
    sub_1C277ADC0();
    (*(void (**)(char *, uint64_t))(v129 + 8))(v78, v130);
    uint64_t v79 = sub_1C277B820();
    swift_bridgeObjectRelease();
    *(void *)(v72 + 216) = v79;
    *(void *)(v72 + 224) = 0x6E69616D6F64;
    *(void *)(v72 + 232) = 0xE600000000000000;
    unint64_t v80 = v132;
    __swift_project_boxed_opaque_existential_1(v132, v132[3]);
    uint64_t v81 = v137;
    sub_1C277B0A0();
    sub_1C277AE20();
    uint64_t v82 = *(void (**)(char *, uint64_t))(v138 + 8);
    uint64_t v83 = v81;
    uint64_t v84 = v139;
    v82(v83, v139);
    uint64_t v85 = sub_1C277B820();
    swift_bridgeObjectRelease();
    *(void *)(v72 + 240) = v85;
    *(void *)(v72 + 248) = 1701080931;
    *(void *)(v72 + 256) = 0xE400000000000000;
    __swift_project_boxed_opaque_existential_1(v80, v80[3]);
    id v86 = v131;
    sub_1C277B0A0();
    uint64_t v87 = sub_1C277AE00();
    v82(v86, v84);
    *(void *)(v72 + 264) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v87);
    sub_1C2629360(v72);
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
    unint64_t v88 = (void *)sub_1C277B750();
    swift_bridgeObjectRelease();
    id v89 = (void *)v142;
    AnalyticsSendEvent();
  }
}

uint64_t sub_1C262105C()
{
  return MEMORY[0x1F411FC38](0x6E6F6D6D6F63, 0xE600000000000000, 1);
}

uint64_t sub_1C2621074(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26210BC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, unint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27640CC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2621100(id a1)
{
  if ((unint64_t)a1 >= 2) {
}
  }

id sub_1C2621110(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

uint64_t sub_1C2621120(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1C2621170()
{
  if (!qword_1EBB831A8)
  {
    sub_1C272EF80();
    unint64_t v0 = sub_1C277C7C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB831A8);
    }
  }
}

void sub_1C26211C8()
{
  if (!qword_1EBB84200)
  {
    uint64_t v0 = MEMORY[0x1E4FBC848] + 8;
    sub_1C2617598(255, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
    sub_1C26212CC();
    sub_1C264EFA0(&qword_1EBB82CC8, &qword_1EBB82CD0, v0);
    sub_1C2621074(&qword_1EBB841E8, (void (*)(uint64_t))sub_1C26212CC);
    unint64_t v1 = sub_1C277B260();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB84200);
    }
  }
}

void sub_1C26212CC()
{
  if (!qword_1EBB841F0)
  {
    sub_1C264F068();
    sub_1C2621074(&qword_1EBB82CB8, (void (*)(uint64_t))sub_1C264F068);
    unint64_t v0 = sub_1C277B250();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB841F0);
    }
  }
}

uint64_t sub_1C2621360(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  BOOL v2 = __OFADD__(v1, 1);
  uint64_t v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    *(void *)(result + 8) = v3;
    uint64_t v4 = *(void *)(result + 32);
    BOOL v2 = __OFADD__(v4, 1);
    uint64_t v5 = v4 + 1;
    if (!v2)
    {
      *(void *)(result + 32) = v5;
      return result;
    }
  }
  __break(1u);
  return result;
}

void **initializeBufferWithCopyOfBuffer for GeneratorContext(void **a1, void **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (void **)((char *)a1 + v8);
    id v10 = (char *)a2 + v8;
    sub_1C264C860();
    uint64_t v11 = v4;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = *(void **)v10;
      *uint64_t v9 = *(void *)v10;
      id v13 = v12;
    }
    else
    {
      uint64_t v14 = *((void *)v10 + 1);
      *uint64_t v9 = *(void *)v10;
      v9[1] = v14;
      v9[2] = *((void *)v10 + 2);
      uint64_t v15 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v24 = &v10[v15];
      uint64_t v17 = sub_1C277A840();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v16, v24, v17);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[7];
    *((unsigned char *)v7 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    long long v20 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)((char *)v7 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
    uint64_t v21 = a3[8];
    long long v22 = *(_OWORD *)((char *)a2 + v21 + 24);
    *(_OWORD *)((char *)v7 + v21 + 24) = v22;
    (**(void (***)(void))(v22 - 8))();
  }
  return v7;
}

id sub_1C26215A8()
{
  uint64_t v0 = sub_1C277A750();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2624328((uint64_t)v3);
  id v4 = objc_allocWithZone(MEMORY[0x1E4F1C190]);
  uint64_t v5 = (void *)sub_1C277A6A0();
  id v6 = objc_msgSend(v4, sel_initWithURL_, v5);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C2644ED8(0, &qword_1EBB851C0);
  uint64_t v7 = (void *)sub_1C277C010();
  objc_msgSend(v6, sel_setOption_forKey_, v7, *MEMORY[0x1E4F1BE80]);

  uint64_t v8 = (void *)sub_1C277C010();
  objc_msgSend(v6, sel_setOption_forKey_, v8, *MEMORY[0x1E4F1BEF0]);

  sub_1C277B850();
  uint64_t v9 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setOption_forKey_, v9, *MEMORY[0x1E4F1BEC0]);

  id v10 = (void *)sub_1C277C010();
  objc_msgSend(v6, sel_setOption_forKey_, v10, *MEMORY[0x1E4F1BF60]);

  return v6;
}

void sub_1C2621794(char *a1@<X8>)
{
  uint64_t v143 = a1;
  uint64_t v148 = *MEMORY[0x1E4F143B8];
  uint64_t v140 = sub_1C277A960();
  uint64_t v2 = *(void *)(v140 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v140);
  uint64_t v139 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v130 - v5;
  sub_1C26248B8(0, (unint64_t *)&qword_1EBB84F30, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v130 - v8;
  uint64_t v10 = sub_1C277A750();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v141 = (char *)&v130 - v15;
  id v16 = sub_1C26215A8();
  id v17 = objc_msgSend(v16, sel_URL);

  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_18;
  }
  uint64_t v138 = v1;
  sub_1C277A6F0();

  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v18(v9, v14, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_18:
    sub_1C2624738((uint64_t)v9, (uint64_t)&qword_1EBB84F30, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C26248B8);
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1C277B130();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EBB86280);
    uint64_t v43 = sub_1C277B100();
    os_log_type_t v44 = sub_1C277BD20();
    if (os_log_type_enabled(v43, v44))
    {
      unint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(void *)&long long v146 = v46;
      *(_DWORD *)unint64_t v45 = 136315138;
      id v144 = (id)sub_1C263FDFC(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v146);
      sub_1C277C0D0();
      _os_log_impl(&dword_1C2601000, v43, v44, "%s no url, store doesn't exist, storeState=.missing", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v46, -1, -1);
      MEMORY[0x1C875D230](v45, -1, -1);

      char *v143 = 1;
      return;
    }

    char v47 = 1;
    goto LABEL_23;
  }
  uint64_t v137 = v10;
  ((void (*)(char *, char *))v18)(v141, v9);
  uint64_t v19 = self;
  id v20 = (id)*MEMORY[0x1E4F1BF70];
  uint64_t v21 = (void *)sub_1C277A6A0();
  *(void *)&long long v146 = 0;
  id v22 = objc_msgSend(v19, sel_metadataForPersistentStoreOfType_URL_options_error_, v20, v21, 0, &v146);

  uint64_t v23 = (void *)v146;
  if (!v22)
  {
    id v57 = (id)v146;
    uint64_t v58 = (void *)sub_1C277A620();

    swift_willThrow();
    uint64_t v59 = (void *)sub_1C277A610();
    uint64_t v60 = v11;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_1C277B130();
    __swift_project_value_buffer(v61, (uint64_t)qword_1EBB86280);
    id v62 = v59;
    uint64_t v63 = sub_1C277B100();
    os_log_type_t v64 = sub_1C277BD20();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = swift_slowAlloc();
      uint64_t v138 = (void *)swift_slowAlloc();
      uint64_t v139 = (char *)swift_slowAlloc();
      *(void *)&long long v146 = v139;
      *(_DWORD *)uint64_t v65 = 136315394;
      uint64_t v140 = v60;
      uint64_t v142 = v58;
      id v144 = (id)sub_1C263FDFC(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v146);
      sub_1C277C0D0();
      *(_WORD *)(v65 + 12) = 2112;
      id v144 = v62;
      id v66 = v62;
      uint64_t v58 = v142;
      uint64_t v60 = v140;
      sub_1C277C0D0();
      uint64_t v67 = v138;
      *uint64_t v138 = v62;

      _os_log_impl(&dword_1C2601000, v63, v64, "%s could not get metadata for store with error %@)", (uint8_t *)v65, 0x16u);
      sub_1C262DB44(0, (unint64_t *)&qword_1EBB854A0, (unint64_t *)&qword_1EBB85F30, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v67, -1, -1);
      uint64_t v68 = v139;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v68, -1, -1);
      MEMORY[0x1C875D230](v65, -1, -1);
    }
    else
    {
    }
    uint64_t v75 = v137;
    if ((sub_1C270AB54() & 0x1FFFFFFFFLL) == 0x17)
    {
      char v76 = 1;
    }
    else
    {
      if ((sub_1C270AB54() & 0x1FFFFFFFFLL) != 0x120A && (sub_1C270AB54() & 0x1FFFFFFFFLL) != 0xD)
      {

        unint64_t v78 = sub_1C277B100();
        os_log_type_t v79 = sub_1C277BD20();
        if (os_log_type_enabled(v78, v79))
        {
          unint64_t v80 = (uint8_t *)swift_slowAlloc();
          uint64_t v81 = swift_slowAlloc();
          *(void *)&long long v146 = v81;
          *(_DWORD *)unint64_t v80 = 136315138;
          id v144 = (id)sub_1C263FDFC(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v146);
          sub_1C277C0D0();
          _os_log_impl(&dword_1C2601000, v78, v79, "%s no metadata, storeState=.needsUpgrade", v80, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v81, -1, -1);
          MEMORY[0x1C875D230](v80, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v60 + 8))(v141, v75);
        char *v143 = 2;
        return;
      }
      char v76 = 2;
    }
    sub_1C270B454();
    swift_allocError();
    *uint64_t v77 = v76;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v60 + 8))(v141, v75);
    return;
  }
  uint64_t v24 = sub_1C277B760();
  id v25 = v23;

  if (!*(void *)(v24 + 16)) {
    goto LABEL_24;
  }
  unint64_t v26 = sub_1C2629588(0xD000000000000023, 0x80000001C278A4E0);
  if ((v27 & 1) == 0) {
    goto LABEL_24;
  }
  sub_1C263FED0(*(void *)(v24 + 56) + 32 * v26, (uint64_t)&v146);
  char v28 = swift_dynamicCast();
  uint64_t v29 = v138;
  if ((v28 & 1) == 0) {
    goto LABEL_24;
  }
  unint64_t v30 = v145;
  if (!*(void *)(v24 + 16)
    || (v31 = (uint64_t)v144, unint64_t v32 = sub_1C2629588(0xD000000000000022, 0x80000001C278D750), (v33 & 1) == 0)
    || (sub_1C263FED0(*(void *)(v24 + 56) + 32 * v32, (uint64_t)&v146), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_24:
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_1C277B130();
    __swift_project_value_buffer(v48, (uint64_t)qword_1EBB86280);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    char v49 = sub_1C277B100();
    os_log_type_t v50 = sub_1C277BD40();
    if (!os_log_type_enabled(v49, v50))
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v11 + 8))(v141, v137);
LABEL_42:
      char *v143 = 2;
      return;
    }
    uint64_t v140 = v11;
    uint64_t v51 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    id v144 = (id)v52;
    *(_DWORD *)uint64_t v51 = 136315906;
    uint64_t v53 = DiskHealthExperienceStore.debugDescription.getter();
    *(void *)&long long v146 = sub_1C263FDFC(v53, v54, (uint64_t *)&v144);
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2080;
    *(void *)&long long v146 = sub_1C263FDFC(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v144);
    sub_1C277C0D0();
    *(_WORD *)(v51 + 22) = 2080;
    if (*(void *)(v24 + 16) && (unint64_t v55 = sub_1C2629588(0xD000000000000023, 0x80000001C278A4E0), (v56 & 1) != 0))
    {
      sub_1C263FED0(*(void *)(v24 + 56) + 32 * v55, (uint64_t)&v146);
    }
    else
    {
      long long v146 = 0u;
      long long v147 = 0u;
    }
    sub_1C262F0B0(0, (unint64_t *)&qword_1EBB84A80, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
    uint64_t v69 = sub_1C277B860();
    *(void *)&long long v146 = sub_1C263FDFC(v69, v70, (uint64_t *)&v144);
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 32) = 2080;
    if (*(void *)(v24 + 16) && (unint64_t v71 = sub_1C2629588(0xD000000000000022, 0x80000001C278D750), (v72 & 1) != 0))
    {
      sub_1C263FED0(*(void *)(v24 + 56) + 32 * v71, (uint64_t)&v146);
    }
    else
    {
      long long v146 = 0u;
      long long v147 = 0u;
    }
    uint64_t v73 = sub_1C277B860();
    *(void *)&long long v146 = sub_1C263FDFC(v73, v74, (uint64_t *)&v144);
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v49, v50, "%s %s storeState=.needsUpgrade, storeVersion=%s, storeLocale=%s", (uint8_t *)v51, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v52, -1, -1);
    MEMORY[0x1C875D230](v51, -1, -1);
LABEL_41:

    (*(void (**)(char *, uint64_t))(v140 + 8))(v141, v137);
    goto LABEL_42;
  }
  uint64_t v136 = v31;
  swift_bridgeObjectRelease();
  unint64_t v34 = v145;
  id v135 = v144;
  if (qword_1EBB848B8 != -1) {
    swift_once();
  }
  if (__PAIR128__(v30, v136) != xmmword_1EBB848A0 && (sub_1C277C7E0() & 1) == 0)
  {
    uint64_t v140 = v11;
    swift_bridgeObjectRelease();
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v109 = sub_1C277B130();
    __swift_project_value_buffer(v109, (uint64_t)qword_1EBB86280);
    swift_retain_n();
    swift_bridgeObjectRetain();
    char v49 = sub_1C277B100();
    os_log_type_t v110 = sub_1C277BD40();
    if (os_log_type_enabled(v49, v110))
    {
      unint64_t v111 = v30;
      uint64_t v112 = swift_slowAlloc();
      uint64_t v139 = (char *)swift_slowAlloc();
      *(void *)&long long v146 = v139;
      *(_DWORD *)uint64_t v112 = 136315906;
      uint64_t v113 = DiskHealthExperienceStore.debugDescription.getter();
      id v144 = (id)sub_1C263FDFC(v113, v114, (uint64_t *)&v146);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v112 + 12) = 2080;
      id v144 = (id)sub_1C263FDFC(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v146);
      sub_1C277C0D0();
      *(_WORD *)(v112 + 22) = 2080;
      long long v115 = xmmword_1EBB848A0;
      swift_bridgeObjectRetain();
      id v144 = (id)sub_1C263FDFC(v115, *((unint64_t *)&v115 + 1), (uint64_t *)&v146);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v112 + 32) = 2080;
      swift_bridgeObjectRetain();
      id v144 = (id)sub_1C263FDFC(v136, v111, (uint64_t *)&v146);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2601000, v49, v110, "%s %s storeState=.needsUpgrade due to mismatch in storeVersion: requiredVersion=%s, currentVersion=%s", (uint8_t *)v112, 0x2Au);
      os_log_t v116 = v139;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v116, -1, -1);
      MEMORY[0x1C875D230](v112, -1, -1);

      (*(void (**)(char *, uint64_t))(v140 + 8))(v141, v137);
      char *v143 = 2;
      return;
    }
    swift_release_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_41;
  }
  unint64_t v35 = v30;
  sub_1C277A920();
  uint64_t v36 = sub_1C262311C();
  uint64_t v38 = v37;
  unint64_t v40 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v39 = v2 + 8;
  uint64_t v134 = v40;
  v40(v6, v140);
  if (v135 == (id)v36 && v34 == v38)
  {
    uint64_t v41 = swift_bridgeObjectRelease();
  }
  else
  {
    char v82 = sub_1C277C7E0();
    uint64_t v41 = swift_bridgeObjectRelease();
    if ((v82 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v117 = sub_1C277B130();
      __swift_project_value_buffer(v117, (uint64_t)qword_1EBB86280);
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v118 = sub_1C277B100();
      os_log_type_t v119 = sub_1C277BD40();
      int v120 = v119;
      if (!os_log_type_enabled(v118, v119))
      {
        swift_release_n();
        swift_bridgeObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v11 + 8))(v141, v137);
        char v47 = 3;
LABEL_23:
        char *v143 = v47;
        return;
      }
      uint64_t v121 = swift_slowAlloc();
      uint64_t v136 = swift_slowAlloc();
      *(void *)&long long v146 = v136;
      *(_DWORD *)uint64_t v121 = 136315906;
      uint64_t v133 = v39;
      LODWORD(v132) = v120;
      uint64_t v122 = DiskHealthExperienceStore.debugDescription.getter();
      id v144 = (id)sub_1C263FDFC(v122, v123, (uint64_t *)&v146);
      id v124 = v118;
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v121 + 12) = 2080;
      id v144 = (id)sub_1C263FDFC(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v146);
      sub_1C277C0D0();
      *(_WORD *)(v121 + 22) = 2080;
      swift_bridgeObjectRetain();
      id v144 = (id)sub_1C263FDFC((uint64_t)v135, v34, (uint64_t *)&v146);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v121 + 32) = 2080;
      uint64_t v125 = v139;
      sub_1C277A920();
      uint64_t v126 = sub_1C262311C();
      unint64_t v128 = v127;
      v134(v125, v140);
      id v144 = (id)sub_1C263FDFC(v126, v128, (uint64_t *)&v146);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v124, (os_log_type_t)v132, "%s %s storeState=.needsDataWipe due to mismatch in locale: storeLocale=%s, Locale.current=%s", (uint8_t *)v121, 0x2Au);
      uint64_t v129 = v136;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v129, -1, -1);
      MEMORY[0x1C875D230](v121, -1, -1);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v141, v137);
      char *v143 = 3;
      return;
    }
  }
  if (((*(uint64_t (**)(uint64_t))(*v29 + 112))(v41) & 1) == 0)
  {
    id v83 = objc_msgSend(self, sel_sharedBehavior);
    if (!v83)
    {
      __break(1u);
      return;
    }
    uint64_t v84 = v83;
    unsigned __int8 v85 = objc_msgSend(v83, sel_healthAppHiddenOrNotInstalled);

    if (v85)
    {
      uint64_t v86 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v87 = sub_1C277B130();
      __swift_project_value_buffer(v87, (uint64_t)qword_1EBB86280);
      swift_retain_n();
      unint64_t v88 = sub_1C277B100();
      os_log_type_t v89 = sub_1C277BD40();
      if (os_log_type_enabled(v88, v89))
      {
        uint64_t v90 = swift_slowAlloc();
        uint64_t v91 = swift_slowAlloc();
        *(void *)&long long v146 = v91;
        *(_DWORD *)uint64_t v90 = 136315394;
        uint64_t v92 = DiskHealthExperienceStore.debugDescription.getter();
        id v144 = (id)sub_1C263FDFC(v92, v93, (uint64_t *)&v146);
        sub_1C277C0D0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v90 + 12) = 2080;
        id v144 = (id)sub_1C263FDFC(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v146);
        sub_1C277C0D0();
        _os_log_impl(&dword_1C2601000, v88, v89, "%s %s storeState=.needsDataWipe due health app installation state", (uint8_t *)v90, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v91, -1, -1);
        MEMORY[0x1C875D230](v90, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      (*(void (**)(char *, uint64_t))(v86 + 8))(v141, v137);
      char v47 = 3;
      goto LABEL_23;
    }
  }
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v94 = sub_1C277B130();
  __swift_project_value_buffer(v94, (uint64_t)qword_1EBB86280);
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v95 = sub_1C277B100();
  os_log_type_t v96 = sub_1C277BD40();
  int v97 = v96;
  if (os_log_type_enabled(v95, v96))
  {
    uint64_t v98 = swift_slowAlloc();
    unint64_t v130 = v35;
    uint64_t v99 = v98;
    uint64_t v132 = swift_slowAlloc();
    *(void *)&long long v146 = v132;
    *(_DWORD *)uint64_t v99 = 136316162;
    uint64_t v133 = v39;
    int v131 = v97;
    uint64_t v100 = DiskHealthExperienceStore.debugDescription.getter();
    id v144 = (id)sub_1C263FDFC(v100, v101, (uint64_t *)&v146);
    uint64_t v102 = v95;
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v99 + 12) = 2080;
    id v144 = (id)sub_1C263FDFC(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v146);
    sub_1C277C0D0();
    *(_WORD *)(v99 + 22) = 2080;
    unint64_t v103 = v130;
    swift_bridgeObjectRetain();
    id v144 = (id)sub_1C263FDFC(v136, v103, (uint64_t *)&v146);
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v99 + 32) = 2080;
    swift_bridgeObjectRetain();
    id v144 = (id)sub_1C263FDFC((uint64_t)v135, v34, (uint64_t *)&v146);
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v99 + 42) = 2080;
    uint64_t v104 = v139;
    sub_1C277A920();
    uint64_t v105 = sub_1C262311C();
    unint64_t v107 = v106;
    v134(v104, v140);
    id v144 = (id)sub_1C263FDFC(v105, v107, (uint64_t *)&v146);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v102, (os_log_type_t)v131, "%s %s storeState=.ready, storeVersion=%s, storeLocale=%s, Locale.current=%s", (uint8_t *)v99, 0x34u);
    uint64_t v108 = v132;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v108, -1, -1);
    MEMORY[0x1C875D230](v99, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v141, v137);
  char *v143 = 0;
}

uint64_t sub_1C262311C()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C26248B8(0, &qword_1EBB84898, MEMORY[0x1E4F27A00], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v38 - v2;
  uint64_t v4 = sub_1C277A940();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26248B8(0, &qword_1EBB84F40, MEMORY[0x1E4F279D8], v0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v38 - v9;
  uint64_t v11 = sub_1C277A960();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_msgSend(self, sel_preferredLanguages);
  id v16 = (void *)sub_1C277BA40();

  uint64_t v17 = v16[2];
  v38[0] = v3;
  uint64_t v18 = v4;
  uint64_t v19 = v5;
  if (v17)
  {
    uint64_t v21 = v16[4];
    unint64_t v20 = v16[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v20 = 0;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v12 + 16))(v14, v38[1], v11);
  if (!v20)
  {
    sub_1C277A950();
    sub_1C277A930();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
    uint64_t v22 = sub_1C277A8E0();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v22) == 1)
    {
      sub_1C2624738((uint64_t)v10, (uint64_t)&qword_1EBB84F40, MEMORY[0x1E4F279D8], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C26248B8);
      unint64_t v20 = 0xE200000000000000;
      uint64_t v21 = 28261;
    }
    else
    {
      uint64_t v21 = sub_1C277A8D0();
      unint64_t v20 = v24;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v22);
    }
  }
  uint64_t v25 = v38[0];
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1C277A910();
  uint64_t v26 = sub_1C277A900();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_1C2624738(v25, (uint64_t)&qword_1EBB84898, MEMORY[0x1E4F27A00], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C26248B8);
    unint64_t v28 = 0xE200000000000000;
    uint64_t v29 = 21333;
  }
  else
  {
    uint64_t v29 = sub_1C277A8D0();
    unint64_t v28 = v30;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  }
  uint64_t v39 = v21;
  unint64_t v40 = v20;
  v38[2] = 45;
  v38[3] = 0xE100000000000000;
  sub_1C26366A8();
  uint64_t v31 = (void *)sub_1C277C0F0();
  if (v31[2] < 2uLL) {
    goto LABEL_18;
  }
  uint64_t v33 = v31[4];
  unint64_t v32 = v31[5];
  uint64_t v35 = v31[6];
  uint64_t v34 = v31[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v35 != v29 || v34 != v28)
  {
    char v36 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v36) {
      goto LABEL_17;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v39 = v21;
    unint64_t v40 = v20;
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
LABEL_17:
  swift_bridgeObjectRelease();
  uint64_t v39 = v33;
  unint64_t v40 = v32;
LABEL_19:
  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  return v39;
}

uint64_t DiskHealthExperienceStore.init(overrideStoreLocation:observeExternalChanges:)(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v61 = a2;
  id v62 = 0;
  v49[1] = *v2;
  sub_1C26248B8(0, &qword_1EBB84A68, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v51 = (char *)v49 - v6;
  uint64_t v7 = sub_1C277BE90();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  MEMORY[0x1F4188790](v7);
  os_log_type_t v50 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C264F24C();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v54 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C277BEA0();
  uint64_t v59 = *(void *)(v11 - 8);
  uint64_t v60 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v58 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C277BE40();
  MEMORY[0x1F4188790](v13);
  uint64_t v14 = sub_1C277B660();
  MEMORY[0x1F4188790](v14 - 8);
  v2[2] = 50;
  sub_1C2624FC4();
  v49[2] = v15;
  swift_allocObject();
  v2[3] = sub_1C277B380();
  v2[5] = 0;
  type metadata accessor for DiskHealthExperienceStore.MutableState();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  uint64_t v17 = v16
      + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_overrideStoreLocation;
  uint64_t v18 = sub_1C277A750();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(void *)(v16
            + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_mergeChangesCancellable) = 0;
  uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
  *(void *)(v16
            + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_observers) = MEMORY[0x1E4FBC860];
  *(void *)(v16
            + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_sharedBackgroundContext) = 0;
  *(void *)(v16
            + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_allEntities) = 0;
  swift_beginAccess();
  uint64_t v57 = a1;
  sub_1C26513D8(a1, v17);
  swift_endAccess();
  sub_1C264E430();
  uint64_t v20 = swift_allocObject();
  *(_DWORD *)(v20 + 24) = 0;
  *(void *)(v20 + 16) = v16;
  v3[4] = v20;
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  swift_retain();
  sub_1C277B650();
  id v66 = v19;
  sub_1C2625030((unint64_t *)&unk_1EBB85160, MEMORY[0x1E4FBCC10]);
  uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C26248B8(0, (unint64_t *)&qword_1EBB850C0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C2634104(qword_1EBB850D0, (unint64_t *)&qword_1EBB850C0, v21);
  sub_1C277C120();
  (*(void (**)(char *, void, uint64_t))(v59 + 104))(v58, *MEMORY[0x1E4FBCC58], v60);
  uint64_t v22 = sub_1C277BED0();
  uint64_t v23 = (void *)v22;
  if (v61)
  {
    id v66 = (id)v3[3];
    swift_retain();
    unint64_t v24 = v50;
    sub_1C277BE80();
    os_log_type_t v64 = v23;
    uint64_t v25 = sub_1C277BE70();
    uint64_t v26 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v51, 1, 1, v25);
    sub_1C2625030(&qword_1EBB850A8, (void (*)(uint64_t))sub_1C2624FC4);
    sub_1C264E780();
    uint64_t v27 = v54;
    sub_1C277B5D0();
    sub_1C2624738(v26, (uint64_t)&qword_1EBB84A68, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C26248B8);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v24, v53);
    swift_release();
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_1C261B21C;
    *(void *)(v29 + 24) = v28;
    sub_1C2625030(&qword_1EBB850A0, (void (*)(uint64_t))sub_1C264F24C);
    uint64_t v30 = v56;
    sub_1C277B600();
    swift_release();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v27, v30);
    uint64_t v31 = v3[4];
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v31 + 24));
    unint64_t v32 = v62;
    sub_1C2603E00((void *)(v31 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v31 + 24));
    swift_release();
    uint64_t v22 = swift_release();
  }
  else
  {
    unint64_t v32 = v62;
  }
  if (((*(uint64_t (**)(uint64_t))(*v3 + 112))(v22) & 1) == 0)
  {
    sub_1C2624738(v57, (uint64_t)&qword_1EBB84F30, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C26248B8);

    swift_release();
    return (uint64_t)v3;
  }
  sub_1C2609E10();
  if (!v32)
  {
    id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C130]), sel_initWithMergeType_, 1);
    id v34 = sub_1C262E4A8();
    id v35 = objc_msgSend(v34, sel_viewContext);

    objc_msgSend(v35, sel_setMergePolicy_, v33);
    swift_release();
    sub_1C2624738(v57, (uint64_t)&qword_1EBB84F30, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C26248B8);
    return (uint64_t)v3;
  }
  id v66 = v32;
  id v37 = v32;
  sub_1C26532A4();
  if (swift_dynamicCast())
  {
    if (v65 == 1)
    {
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_1C277B130();
      __swift_project_value_buffer(v38, (uint64_t)qword_1EBB86280);
      uint64_t v39 = sub_1C277B100();
      os_log_type_t v40 = sub_1C277BD20();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        os_log_type_t v64 = (void *)v42;
        *(_DWORD *)uint64_t v41 = 136315138;
        uint64_t v43 = sub_1C269BF1C();
        uint64_t v63 = sub_1C263FDFC(v43, v44, (uint64_t *)&v64);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        unint64_t v45 = "[%s] Device locked while opening experience store: exiting";
LABEL_20:
        _os_log_impl(&dword_1C2601000, v39, v40, v45, v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v42, -1, -1);
        MEMORY[0x1C875D230](v41, -1, -1);
        goto LABEL_21;
      }
      goto LABEL_21;
    }
    if (v65 == 2)
    {
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_1C277B130();
      __swift_project_value_buffer(v46, (uint64_t)qword_1EBB86280);
      uint64_t v39 = sub_1C277B100();
      os_log_type_t v40 = sub_1C277BD20();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        os_log_type_t v64 = (void *)v42;
        *(_DWORD *)uint64_t v41 = 136315138;
        uint64_t v47 = sub_1C269BF1C();
        uint64_t v63 = sub_1C263FDFC(v47, v48, (uint64_t *)&v64);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        unint64_t v45 = "[%s] Disk I/O Error (Disk Full?): exiting";
        goto LABEL_20;
      }
LABEL_21:

      exit(0);
    }
  }

  id v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  sub_1C277C2D0();
  os_log_type_t v64 = v3;
  type metadata accessor for DiskHealthExperienceStore();
  sub_1C277C450();
  sub_1C277B8D0();
  os_log_type_t v64 = v32;
  sub_1C277C450();
  uint64_t result = sub_1C277C560();
  __break(1u);
  return result;
}

uint64_t sub_1C2624328@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1C277A750();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v26 - v8;
  sub_1C26248B8(0, (unint64_t *)&qword_1EBB84F30, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v26 - v14;
  uint64_t v16 = *(os_unfair_lock_s **)(v1 + 32);
  uint64_t v17 = v16 + 4;
  uint64_t v18 = v16 + 6;
  os_unfair_lock_lock(v16 + 6);
  sub_1C2624CFC(v17, (uint64_t)v15);
  os_unfair_lock_unlock(v18);
  sub_1C262491C((uint64_t)v15, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) != 1) {
    goto LABEL_3;
  }
  sub_1C2624738((uint64_t)v13, (uint64_t)&qword_1EBB84F30, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C26248B8);
  sub_1C2624980();
  id v19 = objc_msgSend(self, sel_defaultManager);
  sub_1C277A6E0();
  uint64_t v20 = (void *)sub_1C277A6A0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  id v27 = 0;
  unsigned int v21 = objc_msgSend(v19, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v20, 1, 0, &v27);

  id v22 = v27;
  uint64_t v13 = v9;
  if (!v21)
  {
    unint64_t v24 = v22;
    uint64_t v25 = sub_1C277A620();

    swift_willThrow();
    id v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_1C277C2D0();
    swift_bridgeObjectRelease();
    id v27 = (id)0xD00000000000002ALL;
    unint64_t v28 = 0x80000001C278DBB0;
    v26[1] = v25;
    sub_1C26532A4();
    sub_1C277B870();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  else
  {
LABEL_3:
    sub_1C2624738((uint64_t)v15, (uint64_t)&qword_1EBB84F30, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C26248B8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v13, v3);
  }
  return result;
}

uint64_t sub_1C2624738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C2624798(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C26247F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2624858(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C26248B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C262491C(uint64_t a1, uint64_t a2)
{
  sub_1C2629308();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2624980()
{
  uint64_t v0 = sub_1C277A750();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v15 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v15 - v11;
  type metadata accessor for StorageLocations();
  static StorageLocations.homeMobileDirectory.getter();
  sub_1C277A6B0();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v1 + 8);
  v13(v4, v0);
  sub_1C277A6B0();
  v13(v7, v0);
  sub_1C277A6C0();
  v13(v10, v0);
  sub_1C277A6D0();
  return ((uint64_t (*)(char *, uint64_t))v13)(v12, v0);
}

uint64_t type metadata accessor for StorageLocations()
{
  return self;
}

uint64_t static StorageLocations.homeMobileDirectory.getter()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  id v1 = objc_msgSend(v0, sel_environment);

  uint64_t v2 = sub_1C277B760();
  if (*(void *)(v2 + 16) && (sub_1C2629588(0xD000000000000024, 0x80000001C278B900), (v3 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1C277A670();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_1C277A670();
  }
}

uint64_t sub_1C2624CFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1
     + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_overrideStoreLocation;
  swift_beginAccess();
  return sub_1C262491C(v3, a2);
}

uint64_t PinnedContentManager.__allocating_init(healthStore:domain:)(void *a1)
{
  type metadata accessor for KeyValueDomainPinnedContentUpdateNotifier();
  uint64_t v2 = swift_allocObject();
  id v3 = a1;
  sub_1C2624E38(v3);
  id v4 = objc_allocWithZone((Class)sub_1C277A3F0());
  id v5 = v3;
  uint64_t v6 = sub_1C277A3E0();
  uint64_t v7 = swift_allocObject();
  swift_retain();
  uint64_t v8 = sub_1C2625078(v6, v2, v7);
  swift_release();

  return v8;
}

uint64_t type metadata accessor for KeyValueDomainPinnedContentUpdateNotifier()
{
  return self;
}

uint64_t sub_1C2624E38(void *a1)
{
  uint64_t v2 = v1;
  sub_1C2624FC4();
  swift_allocObject();
  *(void *)(v1 + 24) = sub_1C277B380();
  sub_1C277A400();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  id v5 = a1;
  uint64_t v6 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v4, sel_initWithCategory_domainName_healthStore_, 1, v6, v5);

  *(void *)(v2 + 16) = v7;
  id v8 = v7;
  swift_retain();
  objc_msgSend(v8, sel_startObservation_, v2);

  swift_release();
  return v2;
}

void sub_1C2624FC4()
{
  if (!qword_1EBB848F8)
  {
    unint64_t v0 = sub_1C277B390();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB848F8);
    }
  }
}

uint64_t sub_1C2625030(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2625078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v12[3] = sub_1C277A3F0();
  v12[4] = MEMORY[0x1E4F65660];
  v12[0] = a1;
  v11[3] = type metadata accessor for KeyValueDomainPinnedContentUpdateNotifier();
  v11[4] = &off_1F1DCE0A0;
  v11[0] = a2;
  sub_1C262524C();
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = 0;
  *(void *)(a3 + 16) = v6;
  *(void *)(a3 + 104) = 0;
  sub_1C277A470();
  sub_1C26482E4((uint64_t)v12, a3 + 24);
  sub_1C26482E4((uint64_t)v11, a3 + 64);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1C2725030;
  *(void *)(v8 + 24) = v7;
  sub_1C2624FC4();
  sub_1C26252D0(&qword_1EBB850A8, (void (*)(uint64_t))sub_1C2624FC4);
  swift_retain();
  uint64_t v9 = sub_1C277B520();
  swift_release();
  swift_release();
  *(void *)(a3 + 104) = v9;
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return a3;
}

void sub_1C262524C()
{
  if (!qword_1EBB856B0)
  {
    sub_1C2604CD0(255, &qword_1EBB856A8, (void (*)(uint64_t))sub_1C264EEC8);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB856B0);
    }
  }
}

uint64_t sub_1C26252D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeWithCopy for HealthAppPluginInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRetain();
  id v7 = v5;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithTake for GeneratorDomain(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for CountryRetrievalRecord(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 24);
    id v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C277A840();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

id static SourceProfile.primary.getter()
{
  id v0 = objc_msgSend(self, sel_primaryProfile);

  return v0;
}

uint64_t sub_1C26254FC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_1C2625540()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), 0);
}

uint64_t sub_1C2625574(void *a1, char a2)
{
  return sub_1C2625580(a1, a2 & 1, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1C2625580(void *a1, char a2, void (*a3)(void *, uint64_t))
{
  if (a2)
  {
    id v6 = a1;
    uint64_t v7 = 1;
  }
  else
  {
    swift_retain();
    uint64_t v7 = 0;
  }
  a3(a1, v7);
  return sub_1C263403C((uint64_t)a1, a2 & 1, MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8B8]);
}

uint64_t sub_1C262560C(uint64_t a1, char a2)
{
  return sub_1C262561C(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1C262561C(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_1C262565C()
{
  return sub_1C2625668(*(void (**)(void *, void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C2625668(void (*a1)(void *, void), uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  unint64_t v5 = (unint64_t)sub_1C2625738(a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if ((v5 & 0x8000000000000000) != 0 || (id v6 = (void *)v5, (v5 & 0x4000000000000000) != 0))
  {
    id v6 = sub_1C2672D74(v5);
    swift_release();
  }
  uint64_t v8 = v6;
  sub_1C2625A44((uint64_t *)&v8);
  swift_release();
  a1(v8, 0);

  return swift_release();
}

void *sub_1C2625738(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C263E704(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  long long v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  id v6 = sub_1C2625848(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1C2648F6C();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1C2625848(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    *uint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C2625A44(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C2625AC0();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C2625AD4(v6);
  return sub_1C277C3A0();
}

void sub_1C2625AC0()
{
}

void sub_1C2625AD4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = sub_1C277C7A0();
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_177;
    }
    if (v4) {
      sub_1C2626698(0, v4, 1, v3);
    }
  }
  else
  {
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 < -1)
    {
LABEL_185:
      sub_1C277C550();
      __break(1u);
      return;
    }
    uint64_t v159 = v5;
    uint64_t v163 = v4;
    if (v4 < 2)
    {
      unint64_t v9 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v172 = MEMORY[0x1E4FBC860];
      __dst = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
      if (v4 != 1)
      {
        unint64_t v100 = *(void *)(MEMORY[0x1E4FBC860] + 16);
        if (v100 < 2) {
          goto LABEL_152;
        }
        goto LABEL_139;
      }
    }
    else
    {
      uint64_t v7 = v6 >> 1;
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB82EE8);
      uint64_t v8 = sub_1C277BAB0();
      *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      uint64_t v4 = v163;
      __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
      uint64_t v172 = v8;
    }
    uint64_t v10 = 0;
    uint64_t v11 = *v3;
    uint64_t v157 = v3;
    uint64_t v158 = *v3 - 8;
    unint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v169 = *v3;
LABEL_13:
    uint64_t v12 = v10 + 1;
    uint64_t v164 = v10;
    if (v10 + 1 >= v4)
    {
      uint64_t v23 = v10 + 1;
      goto LABEL_85;
    }
    uint64_t v13 = *(void **)(v11 + 8 * v12);
    uint64_t v170 = *(void **)(v11 + 8 * v10);
    int64_t v14 = v170;
    id v171 = v13;
    uint64_t v15 = v10;
    id v16 = v13;
    id v17 = v14;
    int v18 = sub_1C2660F94(&v171, &v170);
    if (!v2)
    {
      int v19 = v18;
      uint64_t v160 = v9;

      uint64_t v20 = v15 + 2;
      uint64_t v21 = v169;
      if (v15 + 2 >= v163)
      {
LABEL_16:
        char v22 = v19;
        uint64_t v23 = v20;
LABEL_17:
        if ((v22 & 1) == 0)
        {
          unint64_t v9 = v160;
          uint64_t v2 = 0;
          uint64_t v24 = v163;
          goto LABEL_19;
        }
LABEL_44:
        uint64_t v10 = v164;
        if (v23 < v164) {
          goto LABEL_178;
        }
        if (v164 < v23)
        {
          uint64_t v56 = (uint64_t *)(v158 + 8 * v23);
          uint64_t v57 = v23;
          uint64_t v58 = v164;
          uint64_t v59 = (uint64_t *)(v21 + 8 * v164);
          unint64_t v9 = v160;
          uint64_t v2 = 0;
          uint64_t v24 = v163;
          while (1)
          {
            if (v58 != --v57)
            {
              if (!v21) {
                goto LABEL_183;
              }
              uint64_t v60 = *v59;
              uint64_t *v59 = *v56;
              *uint64_t v56 = v60;
            }
            ++v58;
            --v56;
            ++v59;
            if (v58 >= v57) {
              goto LABEL_19;
            }
          }
        }
        unint64_t v9 = v160;
        uint64_t v2 = 0;
        uint64_t v24 = v163;
        if (v23 >= v163)
        {
LABEL_85:
          if (v23 < v10) {
            goto LABEL_172;
          }
          goto LABEL_86;
        }
LABEL_53:
        if (__OFSUB__(v23, v10)) {
          goto LABEL_176;
        }
        if (v23 - v10 >= v159)
        {
          uint64_t v10 = v164;
          goto LABEL_85;
        }
        uint64_t v10 = v164;
        if (__OFADD__(v164, v159)) {
          goto LABEL_179;
        }
        if (v164 + v159 >= v24) {
          uint64_t v61 = v24;
        }
        else {
          uint64_t v61 = v164 + v159;
        }
        if (v61 >= v164)
        {
          if (v23 == v61) {
            goto LABEL_85;
          }
          id v161 = v9;
          uint64_t v62 = v158 + 8 * v23;
          uint64_t v162 = v61;
LABEL_65:
          os_log_type_t v64 = *(void **)(v21 + 8 * v23);
          uint64_t v65 = v10;
          uint64_t v165 = v62;
          uint64_t v167 = v23;
          while (1)
          {
            id v66 = *(void **)v62;
            id v67 = v64;
            id v68 = v66;
            id v69 = objc_msgSend(v67, sel_package);
            uint64_t v70 = sub_1C277B850();
            uint64_t v72 = v71;

            id v73 = objc_msgSend(v68, sel_package);
            uint64_t v74 = sub_1C277B850();
            uint64_t v76 = v75;

            if (v70 == v74 && v72 == v76)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v78 = sub_1C277C7E0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v78)
              {

                goto LABEL_80;
              }
            }
            id v79 = objc_msgSend(v67, sel_package);
            uint64_t v80 = sub_1C277B850();
            uint64_t v82 = v81;

            id v83 = objc_msgSend(v68, sel_package);
            uint64_t v84 = sub_1C277B850();
            uint64_t v86 = v85;

            if (v84 == v80 && v86 == v82)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v87 = sub_1C277C7E0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v87)
              {

LABEL_63:
                uint64_t v21 = v169;
                uint64_t v63 = v167;
LABEL_64:
                uint64_t v23 = v63 + 1;
                uint64_t v10 = v164;
                uint64_t v62 = v165 + 8;
                if (v23 == v162)
                {
                  uint64_t v23 = v162;
                  unint64_t v9 = v161;
                  uint64_t v2 = 0;
                  if (v162 < v164) {
                    goto LABEL_172;
                  }
LABEL_86:
                  uint64_t v168 = v23;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    unint64_t v9 = sub_1C27396A8(0, *((void *)v9 + 2) + 1, 1, v9);
                  }
                  unint64_t v99 = *((void *)v9 + 2);
                  unint64_t v98 = *((void *)v9 + 3);
                  unint64_t v100 = v99 + 1;
                  uint64_t v11 = v169;
                  uint64_t v101 = v164;
                  if (v99 >= v98 >> 1)
                  {
                    id v149 = sub_1C27396A8((char *)(v98 > 1), v99 + 1, 1, v9);
                    uint64_t v101 = v164;
                    uint64_t v11 = v169;
                    unint64_t v9 = v149;
                  }
                  *((void *)v9 + 2) = v100;
                  uint64_t v102 = v9 + 32;
                  unint64_t v103 = &v9[16 * v99 + 32];
                  *(void *)unint64_t v103 = v101;
                  *((void *)v103 + 1) = v23;
                  if (v99)
                  {
LABEL_91:
                    unint64_t v104 = v100 - 1;
                    if (v100 >= 4)
                    {
                      uint64_t v109 = &v102[16 * v100];
                      uint64_t v110 = *((void *)v109 - 8);
                      uint64_t v111 = *((void *)v109 - 7);
                      BOOL v115 = __OFSUB__(v111, v110);
                      uint64_t v112 = v111 - v110;
                      if (v115) {
                        goto LABEL_160;
                      }
                      uint64_t v114 = *((void *)v109 - 6);
                      uint64_t v113 = *((void *)v109 - 5);
                      BOOL v115 = __OFSUB__(v113, v114);
                      uint64_t v107 = v113 - v114;
                      char v108 = v115;
                      if (v115) {
                        goto LABEL_161;
                      }
                      unint64_t v116 = v100 - 2;
                      uint64_t v117 = &v102[16 * v100 - 32];
                      uint64_t v119 = *(void *)v117;
                      uint64_t v118 = *((void *)v117 + 1);
                      BOOL v115 = __OFSUB__(v118, v119);
                      uint64_t v120 = v118 - v119;
                      if (v115) {
                        goto LABEL_163;
                      }
                      BOOL v115 = __OFADD__(v107, v120);
                      uint64_t v121 = v107 + v120;
                      if (v115) {
                        goto LABEL_166;
                      }
                      if (v121 >= v112)
                      {
                        uint64_t v139 = &v102[16 * v104];
                        uint64_t v141 = *(void *)v139;
                        uint64_t v140 = *((void *)v139 + 1);
                        BOOL v115 = __OFSUB__(v140, v141);
                        uint64_t v142 = v140 - v141;
                        if (v115) {
                          goto LABEL_170;
                        }
                        BOOL v132 = v107 < v142;
                      }
                      else
                      {
LABEL_104:
                        if (v108) {
                          goto LABEL_162;
                        }
                        unint64_t v116 = v100 - 2;
                        uint64_t v122 = &v102[16 * v100 - 32];
                        uint64_t v124 = *(void *)v122;
                        uint64_t v123 = *((void *)v122 + 1);
                        BOOL v125 = __OFSUB__(v123, v124);
                        uint64_t v126 = v123 - v124;
                        char v127 = v125;
                        if (v125) {
                          goto LABEL_165;
                        }
                        unint64_t v128 = &v102[16 * v104];
                        uint64_t v130 = *(void *)v128;
                        uint64_t v129 = *((void *)v128 + 1);
                        BOOL v115 = __OFSUB__(v129, v130);
                        uint64_t v131 = v129 - v130;
                        if (v115) {
                          goto LABEL_168;
                        }
                        if (__OFADD__(v126, v131)) {
                          goto LABEL_169;
                        }
                        if (v126 + v131 < v107) {
                          goto LABEL_116;
                        }
                        BOOL v132 = v107 < v131;
                      }
                      if (v132) {
                        unint64_t v104 = v116;
                      }
                    }
                    else
                    {
                      if (v100 == 3)
                      {
                        uint64_t v106 = *((void *)v9 + 4);
                        uint64_t v105 = *((void *)v9 + 5);
                        BOOL v115 = __OFSUB__(v105, v106);
                        uint64_t v107 = v105 - v106;
                        char v108 = v115;
                        goto LABEL_104;
                      }
                      uint64_t v133 = *((void *)v9 + 4);
                      uint64_t v134 = *((void *)v9 + 5);
                      BOOL v115 = __OFSUB__(v134, v133);
                      uint64_t v126 = v134 - v133;
                      char v127 = v115;
LABEL_116:
                      if (v127) {
                        goto LABEL_164;
                      }
                      id v135 = &v102[16 * v104];
                      uint64_t v137 = *(void *)v135;
                      uint64_t v136 = *((void *)v135 + 1);
                      BOOL v115 = __OFSUB__(v136, v137);
                      uint64_t v138 = v136 - v137;
                      if (v115) {
                        goto LABEL_167;
                      }
                      if (v138 < v126) {
                        goto LABEL_133;
                      }
                    }
                    unint64_t v143 = v104 - 1;
                    if (v104 - 1 >= v100)
                    {
                      __break(1u);
LABEL_157:
                      __break(1u);
LABEL_158:
                      __break(1u);
LABEL_159:
                      __break(1u);
LABEL_160:
                      __break(1u);
LABEL_161:
                      __break(1u);
LABEL_162:
                      __break(1u);
LABEL_163:
                      __break(1u);
LABEL_164:
                      __break(1u);
LABEL_165:
                      __break(1u);
LABEL_166:
                      __break(1u);
LABEL_167:
                      __break(1u);
LABEL_168:
                      __break(1u);
LABEL_169:
                      __break(1u);
LABEL_170:
                      __break(1u);
LABEL_171:
                      __break(1u);
LABEL_172:
                      __break(1u);
LABEL_173:
                      __break(1u);
LABEL_174:
                      __break(1u);
LABEL_175:
                      __break(1u);
LABEL_176:
                      __break(1u);
LABEL_177:
                      __break(1u);
LABEL_178:
                      __break(1u);
LABEL_179:
                      __break(1u);
                      break;
                    }
                    if (!v11) {
                      goto LABEL_182;
                    }
                    id v144 = &v102[16 * v143];
                    uint64_t v145 = *(void *)v144;
                    long long v146 = &v102[16 * v104];
                    uint64_t v147 = *((void *)v146 + 1);
                    sub_1C26629A4((void **)(v11 + 8 * *(void *)v144), (void **)(v11 + 8 * *(void *)v146), v11 + 8 * v147, __dst);
                    if (v2) {
                      goto LABEL_152;
                    }
                    if (v147 < v145) {
                      goto LABEL_157;
                    }
                    if (v104 > *((void *)v9 + 2)) {
                      goto LABEL_158;
                    }
                    *(void *)id v144 = v145;
                    *(void *)&v102[16 * v143 + 8] = v147;
                    unint64_t v148 = *((void *)v9 + 2);
                    if (v104 >= v148) {
                      goto LABEL_159;
                    }
                    unint64_t v100 = v148 - 1;
                    memmove(&v102[16 * v104], v146 + 16, 16 * (v148 - 1 - v104));
                    *((void *)v9 + 2) = v148 - 1;
                    uint64_t v11 = v169;
                    if (v148 <= 2) {
                      goto LABEL_133;
                    }
                    goto LABEL_91;
                  }
                  unint64_t v100 = 1;
LABEL_133:
                  uint64_t v4 = v163;
                  uint64_t v10 = v168;
                  if (v168 >= v163)
                  {
                    uint64_t v3 = v157;
                    if (v100 < 2)
                    {
LABEL_152:
                      swift_bridgeObjectRelease();
                      goto LABEL_153;
                    }
LABEL_139:
                    uint64_t v150 = *v3;
                    while (1)
                    {
                      unint64_t v151 = v100 - 2;
                      if (v100 < 2) {
                        goto LABEL_171;
                      }
                      if (!v150) {
                        goto LABEL_184;
                      }
                      id v152 = v9;
                      uint64_t v153 = *(void *)&v9[16 * v151 + 32];
                      uint64_t v154 = *(void *)&v9[16 * v100 + 24];
                      sub_1C26629A4((void **)(v150 + 8 * v153), (void **)(v150 + 8 * *(void *)&v9[16 * v100 + 16]), v150 + 8 * v154, __dst);
                      if (v2) {
                        goto LABEL_152;
                      }
                      if (v154 < v153) {
                        goto LABEL_173;
                      }
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                        id v152 = sub_1C2739918((uint64_t)v9);
                      }
                      if (v151 >= *((void *)v152 + 2)) {
                        goto LABEL_174;
                      }
                      uint64_t v155 = &v152[16 * v151 + 32];
                      *(void *)uint64_t v155 = v153;
                      *((void *)v155 + 1) = v154;
                      unint64_t v156 = *((void *)v152 + 2);
                      if (v100 > v156) {
                        goto LABEL_175;
                      }
                      unint64_t v9 = v152;
                      memmove(&v152[16 * v100 + 16], &v152[16 * v100 + 32], 16 * (v156 - v100));
                      *((void *)v152 + 2) = v156 - 1;
                      unint64_t v100 = v156 - 1;
                      if (v156 <= 2) {
                        goto LABEL_152;
                      }
                    }
                  }
                  goto LABEL_13;
                }
                goto LABEL_65;
              }
            }
            id v88 = objc_msgSend(v67, sel_name);
            uint64_t v89 = sub_1C277B850();
            uint64_t v91 = v90;

            id v92 = objc_msgSend(v68, sel_name);
            uint64_t v93 = sub_1C277B850();
            uint64_t v95 = v94;

            if (v89 == v93 && v91 == v95)
            {

              swift_bridgeObjectRelease_n();
              goto LABEL_63;
            }
            char v96 = sub_1C277C7E0();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v96 & 1) == 0) {
              goto LABEL_63;
            }
LABEL_80:
            uint64_t v21 = v169;
            uint64_t v63 = v167;
            if (!v169) {
              goto LABEL_181;
            }
            int v97 = *(void **)v62;
            os_log_type_t v64 = *(void **)(v62 + 8);
            *(void *)uint64_t v62 = v64;
            *(void *)(v62 + 8) = v97;
            v62 -= 8;
            if (v167 == ++v65) {
              goto LABEL_64;
            }
          }
        }
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
        goto LABEL_185;
      }
      while (1)
      {
        uint64_t v26 = *(void **)(v21 + 8 * v12);
        id v27 = *(id *)(v21 + 8 * v20);
        id v28 = v26;
        id v29 = objc_msgSend(v27, sel_package);
        uint64_t v30 = sub_1C277B850();
        uint64_t v32 = v31;

        id v33 = objc_msgSend(v28, sel_package);
        uint64_t v34 = sub_1C277B850();
        uint64_t v36 = v35;

        if (v30 == v34 && v32 == v36) {
          break;
        }
        char v38 = sub_1C277C7E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v38)
        {

          if ((v19 & 1) == 0)
          {
            uint64_t v23 = v20;
            unint64_t v9 = v160;
            uint64_t v2 = 0;
            uint64_t v24 = v163;
            uint64_t v21 = v169;
LABEL_19:
            uint64_t v10 = v164;
            if (v23 >= v24) {
              goto LABEL_85;
            }
            goto LABEL_53;
          }
          uint64_t v23 = v20 + 1;
          uint64_t v12 = v20;
          uint64_t v20 = v23;
          uint64_t v21 = v169;
          if (v23 >= v163) {
            goto LABEL_44;
          }
        }
        else
        {
LABEL_32:
          id v39 = objc_msgSend(v27, sel_package);
          uint64_t v40 = sub_1C277B850();
          uint64_t v42 = v41;

          id v43 = objc_msgSend(v28, sel_package);
          uint64_t v44 = sub_1C277B850();
          uint64_t v46 = v45;

          if (v44 == v40 && v46 == v42)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v47 = sub_1C277C7E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v47)
            {

              if (v19) {
                goto LABEL_43;
              }
              goto LABEL_41;
            }
          }
          id v48 = objc_msgSend(v27, sel_name);
          uint64_t v49 = sub_1C277B850();
          uint64_t v51 = v50;

          id v52 = objc_msgSend(v28, sel_name);
          uint64_t v53 = sub_1C277B850();
          uint64_t v55 = v54;

          if (v49 != v53 || v51 != v55)
          {
            int v25 = sub_1C277C7E0();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v22 = v19;
            uint64_t v21 = v169;
            if ((v19 ^ v25)) {
              goto LABEL_16;
            }
            goto LABEL_22;
          }

          swift_bridgeObjectRelease_n();
          if (v19)
          {
LABEL_43:
            uint64_t v23 = v20;
            uint64_t v21 = v169;
            goto LABEL_44;
          }
LABEL_41:
          char v22 = 0;
          uint64_t v21 = v169;
LABEL_22:
          uint64_t v23 = v20 + 1;
          uint64_t v12 = v20;
          uint64_t v20 = v23;
          if (v23 >= v163) {
            goto LABEL_17;
          }
        }
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();

LABEL_153:
    *(void *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1C277BA60();
    swift_bridgeObjectRelease();
  }
}

void sub_1C2626698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v43 = *a4;
    uint64_t v4 = *a4 + 8 * a3 - 8;
LABEL_7:
    uint64_t v6 = *(void **)(v43 + 8 * a3);
    uint64_t v7 = a1;
    uint64_t v42 = v4;
    uint64_t v44 = a3;
    while (1)
    {
      uint64_t v8 = *(void **)v4;
      id v9 = v6;
      id v10 = v8;
      id v11 = objc_msgSend(v9, sel_package);
      uint64_t v12 = sub_1C277B850();
      uint64_t v14 = v13;

      id v15 = objc_msgSend(v10, sel_package);
      uint64_t v16 = sub_1C277B850();
      uint64_t v18 = v17;

      if (v12 == v16 && v14 == v18)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v20 = sub_1C277C7E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v20)
        {

          uint64_t v5 = v44;
          goto LABEL_22;
        }
      }
      id v21 = objc_msgSend(v9, sel_package);
      uint64_t v22 = sub_1C277B850();
      uint64_t v24 = v23;

      id v25 = objc_msgSend(v10, sel_package);
      uint64_t v26 = sub_1C277B850();
      uint64_t v28 = v27;

      if (v26 == v22 && v28 == v24)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v29 = sub_1C277C7E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v29)
        {

          goto LABEL_5;
        }
      }
      id v30 = objc_msgSend(v9, sel_name);
      uint64_t v31 = sub_1C277B850();
      uint64_t v33 = v32;

      id v34 = objc_msgSend(v10, sel_name);
      uint64_t v35 = sub_1C277B850();
      uint64_t v37 = v36;

      if (v31 == v35 && v33 == v37)
      {

        swift_bridgeObjectRelease_n();
LABEL_5:
        uint64_t v5 = v44;
LABEL_6:
        a3 = v5 + 1;
        uint64_t v4 = v42 + 8;
        if (a3 == a2) {
          return;
        }
        goto LABEL_7;
      }
      char v38 = sub_1C277C7E0();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v44;
      if ((v38 & 1) == 0) {
        goto LABEL_6;
      }
LABEL_22:
      if (!v43)
      {
        __break(1u);
        return;
      }
      id v39 = *(void **)v4;
      uint64_t v6 = *(void **)(v4 + 8);
      *(void *)uint64_t v4 = v6;
      *(void *)(v4 + 8) = v39;
      v4 -= 8;
      if (v5 == ++v7) {
        goto LABEL_6;
      }
    }
  }
}

void sub_1C262697C(void *a1, char a2)
{
  sub_1C263A348(a1, a2 & 1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void (**)(void *, uint64_t))(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64));
}

void *SourceProfile.singleProfileIdentifier.getter(void *a1)
{
  id v2 = a1;
  return a1;
}

void *initializeWithCopy for CountryRetrievalRecord(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C277A840();
  id v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t PluginFeedItem.init(uniqueIdentifier:userInterface:userData:contentKind:sourceProfile:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v16 = *a8;
  *(unsigned char *)(a9 + 33) = 0;
  *(void *)(a9 + 40) = 0;
  *(void *)(a9 + 48) = 0;
  *(void *)(a9 + 56) = 0;
  *(void *)(a9 + 64) = 0xF000000000000000;
  uint64_t v17 = (int *)type metadata accessor for PluginFeedItem();
  *(void *)(a9 + 72) = 0;
  *(void *)(a9 + 80) = 0;
  uint64_t v18 = a9 + v17[11];
  uint64_t v19 = type metadata accessor for RelevantDateInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = MEMORY[0x1E4FBC870];
  *(void *)(a9 + v17[13]) = MEMORY[0x1E4FBC870];
  *(void *)(a9 + v17[14]) = v20;
  id v21 = (void *)(a9 + v17[15]);
  *id v21 = 0;
  v21[1] = 0;
  *(void *)(a9 + v17[16]) = MEMORY[0x1E4FBC868];
  *(void *)(a9 + v17[17]) = v20;
  uint64_t v22 = (void *)(a9 + v17[19]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v23 = (void *)(a9 + v17[20]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  uint64_t v24 = (void *)(a9 + v17[21]);
  *uint64_t v24 = 0;
  v24[1] = 0;
  *(void *)(a9 + v17[22]) = 0;
  *(unsigned char *)(a9 + v17[23]) = 13;
  *(unsigned char *)(a9 + v17[24]) = 1;
  *(unsigned char *)(a9 + v17[25]) = 2;
  id v25 = (void *)(a9 + v17[26]);
  *id v25 = 0;
  v25[1] = 0;
  uint64_t v26 = (void *)(a9 + v17[27]);
  *uint64_t v26 = 0;
  v26[1] = 0;
  *(unsigned char *)(a9 + v17[28]) = 0;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5;
  *(void *)(a9 + 88) = a6;
  *(void *)(a9 + 96) = a7;
  *(unsigned char *)(a9 + v17[12]) = v16;
  *(void *)(a9 + v17[18]) = a10;
  return sub_1C2626C3C();
}

uint64_t storeEnumTagSinglePayload for RelevantDateInterval(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C27715AC);
}

uint64_t sub_1C2626C3C()
{
  sub_1C2627398();
  uint64_t v1 = sub_1C277B860();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1C262722C();
  uint64_t v6 = v5;
  uint64_t v7 = *(int *)(type metadata accessor for PluginFeedItem() + 64);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *(void *)(v0 + v7);
  *(void *)(v0 + v7) = 0x8000000000000000;
  sub_1C2626D14(v4, v6, v1, v3, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + v7) = v10;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2626D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1C2629588(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 16 * v14;
      uint64_t result = sub_1C263CC84(*(void *)v21, *(void *)(v21 + 8));
      *(void *)uint64_t v21 = a1;
      *(void *)(v21 + 8) = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1C2677A30();
    goto LABEL_7;
  }
  sub_1C2626EB8(v17, a5 & 1);
  unint64_t v23 = sub_1C2629588(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C277C850();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C2626E68(v14, a3, a4, a1, a2, v20);

  return swift_bridgeObjectRetain();
}

unint64_t sub_1C2626E68(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = (void *)(a6[7] + 16 * result);
  *uint64_t v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

uint64_t sub_1C2626EB8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C26271C4();
  char v6 = a2;
  uint64_t v7 = sub_1C277C5D0();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1C263D360(v37, *((unint64_t *)&v37 + 1));
      }
      sub_1C277C8C0();
      sub_1C277B8B0();
      uint64_t result = sub_1C277C910();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      uint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *uint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

void sub_1C26271C4()
{
  if (!qword_1EBB85E98)
  {
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB85E98);
    }
  }
}

uint64_t sub_1C262722C()
{
  sub_1C277A4D0();
  swift_allocObject();
  sub_1C277A4C0();
  sub_1C26274E0(0, &qword_1EBB85CE8, (void (*)(void))sub_1C26A94EC, (void (*)(void))sub_1C26A9540);
  sub_1C26273D4();
  uint64_t v0 = sub_1C277A4B0();
  swift_release();
  return v0;
}

unint64_t sub_1C2627398()
{
  unint64_t result = qword_1EBB85F48;
  if (!qword_1EBB85F48)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85F48);
  }
  return result;
}

unint64_t sub_1C26273D4()
{
  unint64_t result = qword_1EBB85CE0;
  if (!qword_1EBB85CE0)
  {
    sub_1C26274E0(255, &qword_1EBB85CE8, (void (*)(void))sub_1C26A94EC, (void (*)(void))sub_1C26A9540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85CE0);
  }
  return result;
}

void sub_1C2627464(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = type metadata accessor for ValueJSONWrapper();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C26274E0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = type metadata accessor for ValueJSONWrapper();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t PluginFeedItem.localizedTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for PluginFeedItem() + 80));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t type metadata accessor for PluginFeedItem()
{
  uint64_t result = qword_1EBB85AF0;
  if (!qword_1EBB85AF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id _s14HealthPlatform0A15AppPluginSourceC12knownBundlesSayAC11KnownBundleVGvgZ_0()
{
  uint64_t v0 = (int *)type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  uint64_t v1 = *((void *)v0 - 1);
  MEMORY[0x1F4188790](v0);
  uint64_t v122 = (uint64_t *)((char *)&v113 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_1C277A640();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_1C277A750();
  uint64_t v7 = *(void *)(v143 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v143);
  uint64_t v10 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v113 - v11;
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    int64_t v14 = result;
    unsigned int v127 = objc_msgSend(result, sel_isiPad);

    sub_1C263F5FC(0, (unint64_t *)&unk_1EBB85200, type metadata accessor for HealthAppPluginSource.KnownBundle, MEMORY[0x1E4FBBE00]);
    uint64_t v137 = *(void *)(v1 + 72);
    unint64_t v15 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    uint64_t v16 = swift_allocObject();
    unint64_t v120 = v16;
    *(_OWORD *)(v16 + 16) = xmmword_1C277FE40;
    unint64_t v121 = v15;
    uint64_t v130 = (void *)(v16 + v15);
    uint64_t v135 = type metadata accessor for StorageLocations();
    static StorageLocations.rootDirectory.getter();
    unint64_t v132 = 0x80000001C278AE90;
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = 0x80000001C278AE90;
    unsigned int v141 = *MEMORY[0x1E4F276A8];
    uint64_t v140 = *(void (**)(char *))(v4 + 104);
    uint64_t v142 = v4 + 104;
    uint64_t v17 = v3;
    v140(v6);
    unint64_t v139 = sub_1C26366A8();
    unint64_t v18 = v12;
    sub_1C277A740();
    uint64_t v134 = *(void (**)(char *, uint64_t))(v4 + 8);
    v134(v6, v17);
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v138 = v7 + 8;
    uint64_t v133 = v19;
    uint64_t v20 = v143;
    v19(v10, v143);
    unint64_t v124 = 0xD00000000000001FLL;
    unint64_t v21 = v130;
    *uint64_t v130 = 0xD00000000000001FLL;
    v21[1] = 0x80000001C278AFA0;
    unint64_t v119 = 0xD000000000000023;
    long long v21[2] = 0xD000000000000023;
    v21[3] = 0x80000001C2788CC0;
    unint64_t v22 = (char *)v21 + v0[6];
    uint64_t v131 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v126 = v18;
    v131(v22, v18, v20);
    *((unsigned char *)v21 + v0[7]) = 0;
    *((unsigned char *)v21 + v0[8]) = 0;
    uint64_t v136 = v7 + 32;
    int64_t v23 = (char *)v21 + v137;
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    ((void (*)(char *, void, uint64_t))v140)(v6, v141, v17);
    sub_1C277A740();
    uint64_t v24 = v17;
    v134(v6, v17);
    swift_bridgeObjectRelease();
    v133(v10, v20);
    uint64_t v125 = 0xD000000000000017;
    *(void *)int64_t v23 = 0xD000000000000017;
    *((void *)v23 + 1) = 0x80000001C278AFC0;
    uint64_t v123 = 0xD00000000000001BLL;
    *((void *)v23 + 2) = 0xD00000000000001BLL;
    *((void *)v23 + 3) = 0x80000001C278AFE0;
    int64_t v25 = v126;
    char v26 = v131;
    v131(&v23[v0[6]], v126, v20);
    v23[v0[7]] = v127;
    v23[v0[8]] = 0;
    uint64_t v118 = 2 * v137;
    uint64_t v128 = v4 + 8;
    uint64_t v27 = v24;
    BOOL v28 = v25;
    uint64_t v29 = v130;
    uint64_t v30 = (void *)((char *)v130 + 2 * v137);
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    ((void (*)(char *, void, uint64_t))v140)(v6, v141, v27);
    sub_1C277A740();
    v134(v6, v27);
    swift_bridgeObjectRelease();
    uint64_t v31 = v143;
    v133(v10, v143);
    *uint64_t v30 = v123;
    v30[1] = 0x80000001C278B000;
    _OWORD v30[2] = v124;
    v30[3] = 0x80000001C278B020;
    v26((char *)v30 + v0[6], v28, v31);
    *((unsigned char *)v30 + v0[7]) = 0;
    *((unsigned char *)v30 + v0[8]) = 0;
    uint64_t v32 = v137;
    uint64_t v33 = (char *)v29 + v118 + v137;
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    uint64_t v34 = v141;
    uint64_t v129 = v27;
    ((void (*)(char *, void, uint64_t))v140)(v6, v141, v27);
    sub_1C277A740();
    v134(v6, v27);
    swift_bridgeObjectRelease();
    uint64_t v35 = v143;
    v133(v10, v143);
    *(void *)uint64_t v33 = 0xD00000000000001DLL;
    *((void *)v33 + 1) = 0x80000001C278B040;
    uint64_t v118 = 0xD000000000000021;
    *((void *)v33 + 2) = 0xD000000000000021;
    *((void *)v33 + 3) = 0x80000001C278B060;
    v131(&v33[v0[6]], v28, v35);
    v33[v0[7]] = 0;
    v33[v0[8]] = 0;
    uint64_t v117 = 4 * v32;
    uint64_t v36 = (char *)v130 + 4 * v32;
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    uint64_t v37 = v129;
    ((void (*)(char *, uint64_t, uint64_t))v140)(v6, v34, v129);
    sub_1C277A740();
    v134(v6, v37);
    swift_bridgeObjectRelease();
    uint64_t v38 = v143;
    v133(v10, v143);
    *(void *)uint64_t v36 = 0xD000000000000012;
    *((void *)v36 + 1) = 0x80000001C278B090;
    unint64_t v124 = 0xD000000000000016;
    *((void *)v36 + 2) = 0xD000000000000016;
    *((void *)v36 + 3) = 0x80000001C278B0B0;
    v131(&v36[v0[6]], v28, v38);
    v36[v0[7]] = 0;
    v36[v0[8]] = 1;
    id v39 = (char *)v130 + v117 + v137;
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    uint64_t v40 = v129;
    ((void (*)(char *, void, uint64_t))v140)(v6, v141, v129);
    sub_1C277A740();
    v134(v6, v40);
    swift_bridgeObjectRelease();
    uint64_t v41 = v143;
    uint64_t v42 = v133;
    v133(v10, v143);
    unint64_t v116 = 0xD00000000000001CLL;
    *(void *)id v39 = 0xD00000000000001CLL;
    *((void *)v39 + 1) = 0x80000001C278B0D0;
    unint64_t v114 = 0xD000000000000020;
    *((void *)v39 + 2) = 0xD000000000000020;
    *((void *)v39 + 3) = 0x80000001C278B0F0;
    v131(&v39[v0[6]], v28, v41);
    v39[v0[7]] = 0;
    v39[v0[8]] = 0;
    uint64_t v43 = (void *)((char *)v130 + 6 * v137);
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v44 = v132;
    unint64_t v145 = v132;
    ((void (*)(char *, void, uint64_t))v140)(v6, v141, v40);
    sub_1C277A740();
    v134(v6, v40);
    swift_bridgeObjectRelease();
    uint64_t v45 = v143;
    v42(v10, v143);
    *uint64_t v43 = v125;
    v43[1] = 0x80000001C278B120;
    v43[2] = v123;
    v43[3] = 0x80000001C278B140;
    uint64_t v46 = v45;
    char v47 = v131;
    v131((char *)v43 + v0[6], v28, v46);
    *((unsigned char *)v43 + v0[7]) = 0;
    *((unsigned char *)v43 + v0[8]) = 0;
    uint64_t v123 = 8 * v137;
    id v48 = (char *)v130 + 7 * v137;
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v44;
    uint64_t v49 = v129;
    ((void (*)(char *, void, uint64_t))v140)(v6, v141, v129);
    sub_1C277A740();
    v134(v6, v49);
    swift_bridgeObjectRelease();
    uint64_t v50 = v143;
    v133(v10, v143);
    unint64_t v115 = 0xD000000000000027;
    *(void *)id v48 = 0xD000000000000027;
    *((void *)v48 + 1) = 0x80000001C278B160;
    *((void *)v48 + 2) = 0xD00000000000002BLL;
    *((void *)v48 + 3) = 0x80000001C278B190;
    v47(&v48[v0[6]], v28, v50);
    LOBYTE(v47) = v127;
    v48[v0[7]] = v127;
    v48[v0[8]] = 1;
    uint64_t v51 = (char *)v130 + v123;
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    ((void (*)(char *, void, uint64_t))v140)(v6, v141, v49);
    sub_1C277A740();
    v134(v6, v49);
    swift_bridgeObjectRelease();
    uint64_t v52 = v143;
    v133(v10, v143);
    uint64_t v117 = 0xD000000000000025;
    *(void *)uint64_t v51 = 0xD000000000000025;
    *((void *)v51 + 1) = 0x80000001C278B1C0;
    *((void *)v51 + 2) = v114;
    *((void *)v51 + 3) = 0x80000001C278B1F0;
    v131(&v51[v0[6]], v28, v52);
    v51[v0[7]] = (char)v47;
    v51[v0[8]] = 1;
    uint64_t v53 = (char *)v130 + v123 + v137;
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    uint64_t v54 = v129;
    uint64_t v55 = v140;
    ((void (*)(char *, void, uint64_t))v140)(v6, v141, v129);
    uint64_t v56 = v28;
    sub_1C277A740();
    uint64_t v57 = v134;
    v134(v6, v54);
    swift_bridgeObjectRelease();
    uint64_t v58 = v143;
    v133(v10, v143);
    uint64_t v123 = 0xD000000000000022;
    *(void *)uint64_t v53 = 0xD000000000000022;
    *((void *)v53 + 1) = 0x80000001C278B220;
    *((void *)v53 + 2) = 0xD000000000000026;
    *((void *)v53 + 3) = 0x80000001C278B250;
    v131(&v53[v0[6]], v56, v58);
    v53[v0[7]] = v127;
    v53[v0[8]] = 1;
    uint64_t v59 = v130;
    uint64_t v60 = (char *)v130 + 10 * v137;
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    uint64_t v61 = v129;
    ((void (*)(char *, void, uint64_t))v55)(v6, v141, v129);
    sub_1C277A740();
    v57(v6, v61);
    swift_bridgeObjectRelease();
    uint64_t v62 = v143;
    uint64_t v63 = v133;
    v133(v10, v143);
    *(void *)uint64_t v60 = 0xD00000000000001ELL;
    *((void *)v60 + 1) = 0x80000001C278B280;
    *((void *)v60 + 2) = v123;
    *((void *)v60 + 3) = 0x80000001C278B2A0;
    os_log_type_t v64 = v56;
    v131(&v60[v0[6]], v56, v62);
    v60[v0[7]] = 0;
    v60[v0[8]] = 1;
    uint64_t v65 = (char *)v59 + 11 * v137;
    static StorageLocations.rootDirectory.getter();
    unint64_t v66 = v132;
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    uint64_t v67 = v129;
    ((void (*)(char *, void, uint64_t))v140)(v6, v141, v129);
    sub_1C277A740();
    v134(v6, v67);
    swift_bridgeObjectRelease();
    uint64_t v68 = v143;
    v63(v10, v143);
    *(void *)uint64_t v65 = 0xD000000000000015;
    *((void *)v65 + 1) = 0x80000001C278B2D0;
    *((void *)v65 + 2) = 0xD000000000000019;
    *((void *)v65 + 3) = 0x80000001C278B2F0;
    id v69 = v64;
    v131(&v65[v0[6]], v64, v68);
    v65[v0[7]] = v127;
    v65[v0[8]] = 1;
    uint64_t v70 = v130;
    uint64_t v71 = (char *)v130 + 12 * v137;
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v66;
    uint64_t v72 = v129;
    id v73 = v140;
    ((void (*)(char *, void, uint64_t))v140)(v6, v141, v129);
    sub_1C277A740();
    v134(v6, v72);
    swift_bridgeObjectRelease();
    uint64_t v74 = v143;
    v133(v10, v143);
    *(void *)uint64_t v71 = 0xD000000000000018;
    *((void *)v71 + 1) = 0x80000001C278B310;
    *((void *)v71 + 2) = v119;
    *((void *)v71 + 3) = 0x80000001C278B330;
    v131(&v71[v0[6]], v69, v74);
    v71[v0[7]] = 0;
    v71[v0[8]] = 0;
    uint64_t v75 = (void *)((char *)v70 + 13 * v137);
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    uint64_t v76 = v141;
    uint64_t v77 = v129;
    ((void (*)(char *, void, uint64_t))v73)(v6, v141, v129);
    char v78 = v126;
    sub_1C277A740();
    v134(v6, v77);
    swift_bridgeObjectRelease();
    uint64_t v79 = v143;
    v133(v10, v143);
    *uint64_t v75 = v115;
    v75[1] = 0x80000001C278B360;
    v75[2] = v116;
    v75[3] = 0x80000001C278B390;
    uint64_t v80 = v131;
    v131((char *)v75 + v0[6], v78, v79);
    *((unsigned char *)v75 + v0[7]) = 0;
    *((unsigned char *)v75 + v0[8]) = 1;
    uint64_t v81 = (char *)v130 + 14 * v137;
    static StorageLocations.rootDirectory.getter();
    unint64_t v82 = v132;
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    uint64_t v83 = v76;
    uint64_t v84 = v129;
    ((void (*)(char *, uint64_t, uint64_t))v140)(v6, v83, v129);
    sub_1C277A740();
    v134(v6, v84);
    swift_bridgeObjectRelease();
    uint64_t v85 = v143;
    v133(v10, v143);
    *(void *)uint64_t v81 = 0xD000000000000013;
    *((void *)v81 + 1) = 0x80000001C278B3B0;
    *((void *)v81 + 2) = v125;
    *((void *)v81 + 3) = 0x80000001C278B3D0;
    v80(&v81[v0[6]], v78, v85);
    v81[v0[7]] = 0;
    v81[v0[8]] = 0;
    uint64_t v125 = 16 * v137;
    uint64_t v86 = v130;
    char v87 = (void *)((char *)v130 + 15 * v137);
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v82;
    uint64_t v88 = v129;
    ((void (*)(char *, void, uint64_t))v140)(v6, v141, v129);
    sub_1C277A740();
    uint64_t v89 = v134;
    v134(v6, v88);
    swift_bridgeObjectRelease();
    uint64_t v90 = v143;
    v133(v10, v143);
    *char v87 = v118;
    v87[1] = 0x80000001C278B3F0;
    v87[2] = v124;
    v87[3] = 0x80000001C278B420;
    uint64_t v91 = v126;
    v131((char *)v87 + v0[6], v126, v90);
    *((unsigned char *)v87 + v0[7]) = v127;
    *((unsigned char *)v87 + v0[8]) = 1;
    id v92 = (void *)((char *)v86 + v125);
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    uint64_t v93 = v129;
    ((void (*)(char *, void, uint64_t))v140)(v6, v141, v129);
    sub_1C277A740();
    uint64_t v94 = v93;
    uint64_t v95 = v6;
    v89(v6, v94);
    swift_bridgeObjectRelease();
    char v96 = v10;
    uint64_t v97 = v143;
    unint64_t v98 = v133;
    v133(v10, v143);
    *id v92 = v124;
    v92[1] = 0x80000001C278B440;
    unint64_t v124 = 0xD00000000000001ALL;
    v92[2] = 0xD00000000000001ALL;
    v92[3] = 0x80000001C278B460;
    unint64_t v99 = v131;
    v131((char *)v92 + v0[6], v91, v97);
    *((unsigned char *)v92 + v0[7]) = 1;
    *((unsigned char *)v92 + v0[8]) = 1;
    unint64_t v100 = (void *)((char *)v130 + v125 + v137);
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    uint64_t v101 = v129;
    ((void (*)(char *, void, uint64_t))v140)(v95, v141, v129);
    sub_1C277A740();
    uint64_t v102 = v101;
    unint64_t v103 = v134;
    v134(v95, v102);
    swift_bridgeObjectRelease();
    uint64_t v104 = v143;
    v98(v96, v143);
    *unint64_t v100 = v124;
    v100[1] = 0x80000001C278B480;
    v100[2] = v117;
    v100[3] = 0x80000001C278B4A0;
    uint64_t v105 = v91;
    v99((char *)v100 + v0[6], v91, v104);
    *((unsigned char *)v100 + v0[7]) = v127;
    *((unsigned char *)v100 + v0[8]) = 1;
    uint64_t v106 = (void *)((char *)v130 + 18 * v137);
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    uint64_t v107 = v129;
    ((void (*)(char *, void, uint64_t))v140)(v95, v141, v129);
    sub_1C277A740();
    v103(v95, v107);
    swift_bridgeObjectRelease();
    uint64_t v108 = v143;
    v133(v96, v143);
    *uint64_t v106 = v123;
    v106[1] = 0x80000001C278B4D0;
    v106[2] = 0xD000000000000026;
    v106[3] = 0x80000001C278B500;
    v131((char *)v106 + v0[6], v105, v108);
    *((unsigned char *)v106 + v0[7]) = 0;
    *((unsigned char *)v106 + v0[8]) = 0;
    static StorageLocations.rootDirectory.getter();
    unint64_t v144 = 0xD000000000000026;
    unint64_t v145 = v132;
    ((void (*)(char *, void, uint64_t))v140)(v95, v141, v107);
    sub_1C277A740();
    v134(v95, v107);
    swift_bridgeObjectRelease();
    v133(v96, v108);
    uint64_t v109 = (char *)v122;
    char *v122 = 0xD000000000000029;
    *((void *)v109 + 1) = 0x80000001C278B530;
    *((void *)v109 + 2) = 0xD00000000000002DLL;
    *((void *)v109 + 3) = 0x80000001C278B560;
    unint64_t v110 = v120;
    v131(&v109[v0[6]], v105, v108);
    v109[v0[7]] = 0;
    v109[v0[8]] = 1;
    unint64_t v112 = *(void *)(v110 + 16);
    unint64_t v111 = *(void *)(v110 + 24);
    if (v112 >= v111 >> 1) {
      unint64_t v110 = sub_1C264E4B8(v111 > 1, v112 + 1, 1, v110);
    }
    *(void *)(v110 + 16) = v112 + 1;
    sub_1C2635B20((uint64_t)v109, v110 + v121 + v112 * v137);
    return (id)v110;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static StorageLocations.rootDirectory.getter()
{
  sub_1C2629308();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C277A640();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_processInfo);
  id v8 = objc_msgSend(v7, sel_environment);

  uint64_t v9 = sub_1C277B760();
  if (*(void *)(v9 + 16) && (sub_1C2629588(0x4F54414C554D4953, 0xEE00544F4F525F52), (v10 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F276A8], v3);
    uint64_t v11 = sub_1C277A750();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v2, 1, 1, v11);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F276A8], v3);
    uint64_t v12 = sub_1C277A750();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  }
  return sub_1C277A730();
}

void sub_1C2629308()
{
  if (!qword_1EBB84F30)
  {
    sub_1C277A750();
    unint64_t v0 = sub_1C277C0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84F30);
    }
  }
}

unint64_t sub_1C2629360(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2629664(0, &qword_1EBB80DD8, (uint64_t)&qword_1EBB85F30, 0x1E4FBA8A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C2644ED8);
  uint64_t v2 = (void *)sub_1C277C5F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    id v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1C2629588(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C26294A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C277C7E0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        BOOL v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C277C7E0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1C2629588(uint64_t a1, uint64_t a2)
{
  sub_1C277C8C0();
  sub_1C277B8B0();
  uint64_t v4 = sub_1C277C910();

  return sub_1C26294A4(a1, a2, v4);
}

void sub_1C2629600(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277C600();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2629664(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1C277C600();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

id GeneratorContext.sourceProfile.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

unint64_t SourceProfile.debugDescription.getter(void *a1)
{
  if (!a1) {
    return 0xD000000000000016;
  }
  id v1 = a1;
  sub_1C277C2D0();
  swift_bridgeObjectRelease();
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E90);
  id v2 = v1;
  sub_1C277B870();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();

  return 0xD000000000000015;
}

uint64_t sub_1C26297E0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v21 = a1;
  sub_1C264F668(0, &qword_1EBB82B10, (uint64_t (*)(uint64_t))sub_1C264EC54, sub_1C264ECD4, MEMORY[0x1E4F1AA18]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v20 - v6;
  sub_1C264F318();
  uint64_t v22 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  BOOL v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *(_OWORD *)(v1 + 40);
  long long v24 = *(_OWORD *)(v1 + 24);
  long long v25 = v12;
  uint64_t v26 = *(void *)(v1 + 56);
  sub_1C2629B64((uint64_t)&v24);
  uint64_t v23 = sub_1C277BD70();
  uint64_t v13 = swift_allocObject();
  long long v14 = v25;
  *(_OWORD *)(v13 + 16) = v24;
  *(_OWORD *)(v13 + 32) = v14;
  *(void *)(v13 + 48) = v26;
  sub_1C2629B64((uint64_t)&v24);
  sub_1C264EC54();
  sub_1C263E750(0, (unint64_t *)&qword_1EBB82E00, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4FBB320]);
  sub_1C264ECD4();
  sub_1C277B580();
  swift_release();
  swift_release();
  sub_1C264F504();
  uint64_t v15 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C2606C84((uint64_t)&v24);
  uint64_t v23 = v15;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v21;
  *(void *)(v16 + 24) = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C277B330();
  sub_1C264F0F8();
  sub_1C264F19C();
  sub_1C277B5A0();
  swift_release();
  swift_release();
  sub_1C262AF6C(&qword_1EBB82B78, (void (*)(uint64_t))sub_1C264F318);
  uint64_t v17 = v22;
  uint64_t v18 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v17);
  return v18;
}

uint64_t sub_1C2629B64(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  uint64_t v3 = *(void **)(a1 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  id v4 = v2;
  id v5 = v3;
  return a1;
}

uint64_t sub_1C2629BC0(uint64_t a1, int a2)
{
  int v131 = a2;
  sub_1C264F488(0);
  uint64_t v111 = v3;
  uint64_t v110 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v109 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C264F668(0, (unint64_t *)&unk_1EBB82AE0, (uint64_t (*)(uint64_t))sub_1C264F488, sub_1C264F4D0, MEMORY[0x1E4F1A930]);
  uint64_t v108 = v5;
  uint64_t v107 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v106 = (char *)&v103 - v6;
  sub_1C264F1D0(0);
  uint64_t v105 = v7;
  uint64_t v104 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v103 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C264EDE4();
  uint64_t v130 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v129 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C264F388();
  uint64_t v128 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unsigned int v127 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C262AFFC(0, &qword_1EBB82B30, (uint64_t (*)(uint64_t))sub_1C264F388, sub_1C26D8D58, MEMORY[0x1E4F1AA28]);
  uint64_t v126 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v125 = (char *)&v103 - v17;
  unint64_t v139 = MEMORY[0x1E4FBC860];
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v112 = a1 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v117 = v20 & v18;
  int64_t v113 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v123 = (void (**)(char *, uint64_t))(v13 + 8);
  unint64_t v124 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v122 = (void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v114 = a1;
  swift_bridgeObjectRetain();
  int64_t v21 = 0;
  unint64_t v120 = 0x80000001C278CAC0;
  unint64_t v121 = 0x80000001C278CA90;
LABEL_6:
  if (v117)
  {
    unint64_t v22 = __clz(__rbit64(v117));
    v117 &= v117 - 1;
    unint64_t v23 = v22 | (v21 << 6);
LABEL_22:
    int64_t v116 = v21;
    uint64_t v27 = 8 * v23;
    BOOL v28 = *(void **)(*(void *)(v114 + 48) + v27);
    uint64_t v29 = *(void *)(*(void *)(v114 + 56) + v27);
    unint64_t v30 = *(void *)(v29 + 16);
    id v134 = v28;
    if (v30)
    {
      swift_bridgeObjectRetain_n();
      id v31 = v28;
      uint64_t v115 = v29;
      uint64_t v32 = (uint64_t *)(v29 + 80);
      unint64_t v33 = MEMORY[0x1E4FBC868];
      while (1)
      {
        uint64_t v35 = (void *)*(v32 - 6);
        uint64_t v36 = *(v32 - 5);
        uint64_t v37 = *(v32 - 4);
        unint64_t v133 = *(v32 - 3);
        uint64_t v38 = *(v32 - 2);
        int64_t v119 = *(v32 - 1);
        uint64_t v39 = *v32;
        uint64_t v40 = *(void *)(v33 + 16);
        id v41 = v35;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v118 = v30;
        if (v40)
        {
          swift_bridgeObjectRetain();
          unint64_t v42 = sub_1C2629588(v36, v37);
          uint64_t v43 = (void *)MEMORY[0x1E4FBC860];
          if (v44)
          {
            uint64_t v43 = *(void **)(*(void *)(v33 + 56) + 8 * v42);
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v43 = (void *)MEMORY[0x1E4FBC860];
        }
        uint64_t v136 = v36;
        id v45 = v41;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        id v135 = v45;
        swift_bridgeObjectRetain();
        uint64_t v46 = v43;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v46 = sub_1C26907BC(0, v43[2] + 1, 1, v43);
        }
        unint64_t v48 = v46[2];
        unint64_t v47 = v46[3];
        if (v48 >= v47 >> 1) {
          uint64_t v46 = sub_1C26907BC((void *)(v47 > 1), v48 + 1, 1, v46);
        }
        v46[2] = v48 + 1;
        uint64_t v49 = &v46[7 * v48];
        uint64_t v50 = v136;
        v49[4] = v35;
        v49[5] = v50;
        unint64_t v51 = v133;
        v49[6] = v37;
        v49[7] = v51;
        int64_t v52 = v119;
        v49[8] = v38;
        v49[9] = v52;
        v49[10] = v39;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v137 = v33;
        unint64_t v55 = sub_1C2629588(v50, v37);
        uint64_t v56 = *(void *)(v33 + 16);
        BOOL v57 = (v54 & 1) == 0;
        uint64_t v58 = v56 + v57;
        if (__OFADD__(v56, v57))
        {
          __break(1u);
          goto LABEL_74;
        }
        char v59 = v54;
        if (*(void *)(v33 + 24) >= v58)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1C2678538();
          }
          uint64_t v60 = v136;
          unint64_t v33 = v137;
          if ((v59 & 1) == 0) {
            goto LABEL_43;
          }
        }
        else
        {
          sub_1C2675494(v58, isUniquelyReferenced_nonNull_native);
          uint64_t v60 = v136;
          unint64_t v61 = sub_1C2629588(v136, v37);
          if ((v59 & 1) != (v62 & 1)) {
            goto LABEL_79;
          }
          unint64_t v55 = v61;
          unint64_t v33 = v137;
          if ((v59 & 1) == 0)
          {
LABEL_43:
            *(void *)(v33 + 8 * (v55 >> 6) + 64) |= 1 << v55;
            uint64_t v63 = (uint64_t *)(*(void *)(v33 + 48) + 16 * v55);
            *uint64_t v63 = v60;
            v63[1] = v37;
            *(void *)(*(void *)(v33 + 56) + 8 * v55) = v46;
            uint64_t v64 = *(void *)(v33 + 16);
            BOOL v65 = __OFADD__(v64, 1);
            uint64_t v66 = v64 + 1;
            if (v65) {
              goto LABEL_75;
            }
            *(void *)(v33 + 16) = v66;
            swift_bridgeObjectRetain();
            goto LABEL_25;
          }
        }
        uint64_t v34 = *(void *)(v33 + 56);
        swift_bridgeObjectRelease();
        *(void *)(v34 + 8 * v55) = v46;
LABEL_25:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v32 += 7;
        unint64_t v30 = v118 - 1;
        if (v118 == 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_47;
        }
      }
    }
    swift_bridgeObjectRetain();
    id v67 = v28;
    unint64_t v33 = MEMORY[0x1E4FBC868];
LABEL_47:
    swift_bridgeObjectRelease();
    uint64_t v68 = 0;
    uint64_t v69 = *(void *)(v33 + 64);
    unint64_t v118 = v33 + 64;
    uint64_t v70 = 1 << *(unsigned char *)(v33 + 32);
    if (v70 < 64) {
      uint64_t v71 = ~(-1 << v70);
    }
    else {
      uint64_t v71 = -1;
    }
    unint64_t v72 = v71 & v69;
    int64_t v119 = (unint64_t)(v70 + 63) >> 6;
    unint64_t v133 = v33;
    if (v72)
    {
LABEL_51:
      id v135 = (id)((v72 - 1) & v72);
      uint64_t v136 = v68;
      unint64_t v73 = __clz(__rbit64(v72)) | (v68 << 6);
      goto LABEL_66;
    }
    while (1)
    {
      int64_t v74 = v68 + 1;
      if (__OFADD__(v68, 1)) {
        break;
      }
      if (v74 >= v119) {
        goto LABEL_5;
      }
      unint64_t v75 = *(void *)(v118 + 8 * v74);
      uint64_t v76 = v68 + 1;
      if (!v75)
      {
        uint64_t v76 = v68 + 2;
        if (v68 + 2 >= v119) {
          goto LABEL_5;
        }
        unint64_t v75 = *(void *)(v118 + 8 * v76);
        if (!v75)
        {
          uint64_t v76 = v68 + 3;
          if (v68 + 3 >= v119) {
            goto LABEL_5;
          }
          unint64_t v75 = *(void *)(v118 + 8 * v76);
          if (!v75)
          {
            uint64_t v77 = v68 + 4;
            if (v68 + 4 >= v119)
            {
LABEL_5:

              swift_release();
              int64_t v21 = v116;
              goto LABEL_6;
            }
            unint64_t v75 = *(void *)(v118 + 8 * v77);
            if (!v75)
            {
              while (1)
              {
                uint64_t v76 = v77 + 1;
                if (__OFADD__(v77, 1)) {
                  goto LABEL_76;
                }
                if (v76 >= v119) {
                  goto LABEL_5;
                }
                unint64_t v75 = *(void *)(v118 + 8 * v76);
                ++v77;
                if (v75) {
                  goto LABEL_65;
                }
              }
            }
            uint64_t v76 = v68 + 4;
          }
        }
      }
LABEL_65:
      id v135 = (id)((v75 - 1) & v75);
      uint64_t v136 = v76;
      unint64_t v73 = __clz(__rbit64(v75)) + (v76 << 6);
LABEL_66:
      uint64_t v78 = *(void *)(*(void *)(v33 + 56) + 8 * v73);
      unint64_t v137 = 0;
      unint64_t v138 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C277C2D0();
      swift_bridgeObjectRelease();
      unint64_t v137 = 0xD00000000000002FLL;
      unint64_t v138 = v121;
      sub_1C277B8D0();
      unint64_t v80 = v137;
      unint64_t v79 = v138;
      unint64_t v137 = 0;
      unint64_t v138 = 0xE000000000000000;
      sub_1C277C2D0();
      sub_1C277B8D0();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      unint64_t v81 = v137;
      unint64_t v82 = v138;
      if (v131)
      {
        swift_bridgeObjectRelease();
        unint64_t v80 = 0;
        unint64_t v79 = 0;
      }
      uint64_t v83 = v132;
      sub_1C26D694C(v78);
      unint64_t v137 = v78;
      sub_1C263E750(0, (unint64_t *)&qword_1EBB82E00, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4FBB320]);
      swift_bridgeObjectRetain();
      uint64_t v84 = v129;
      sub_1C277B440();
      uint64_t v85 = (void *)swift_allocObject();
      v85[2] = v80;
      v85[3] = v79;
      id v86 = v134;
      v85[4] = v134;
      v85[5] = v81;
      v85[6] = v82;
      v85[7] = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      id v87 = v86;
      sub_1C277B330();
      sub_1C26D8FE8(0, (unint64_t *)&qword_1EBB82C38, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4F1AAE0]);
      sub_1C262AF6C(&qword_1EBB82CE0, (void (*)(uint64_t))sub_1C264EDE4);
      sub_1C26D91F4(&qword_1EBB82C30, (unint64_t *)&qword_1EBB82C38, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier);
      uint64_t v88 = v127;
      uint64_t v89 = v130;
      sub_1C277B610();
      swift_release();
      (*v124)(v84, v89);
      sub_1C26D8D58();
      uint64_t v90 = v125;
      uint64_t v91 = v128;
      sub_1C277B590();
      (*v123)(v88, v91);
      sub_1C26D8D94();
      uint64_t v92 = v126;
      sub_1C277B4E0();
      (*v122)(v90, v92);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v93 = swift_retain();
      MEMORY[0x1C875B930](v93);
      if (*(void *)(v139 + 16) >= *(void *)(v139 + 24) >> 1) {
        sub_1C277BA90();
      }
      sub_1C277BAE0();
      sub_1C277BA60();
      swift_release();
      unint64_t v33 = v133;
      unint64_t v72 = (unint64_t)v135;
      uint64_t v68 = v136;
      if (v135) {
        goto LABEL_51;
      }
    }
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  int64_t v24 = v21 + 1;
  if (!__OFADD__(v21, 1))
  {
    if (v24 < v113)
    {
      unint64_t v25 = *(void *)(v112 + 8 * v24);
      ++v21;
      if (v25) {
        goto LABEL_21;
      }
      int64_t v21 = v24 + 1;
      if (v24 + 1 >= v113) {
        goto LABEL_72;
      }
      unint64_t v25 = *(void *)(v112 + 8 * v21);
      if (v25) {
        goto LABEL_21;
      }
      int64_t v21 = v24 + 2;
      if (v24 + 2 >= v113) {
        goto LABEL_72;
      }
      unint64_t v25 = *(void *)(v112 + 8 * v21);
      if (v25)
      {
LABEL_21:
        unint64_t v117 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v21 << 6);
        goto LABEL_22;
      }
      int64_t v26 = v24 + 3;
      if (v26 < v113)
      {
        unint64_t v25 = *(void *)(v112 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v21 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_78;
            }
            if (v21 >= v113) {
              goto LABEL_72;
            }
            unint64_t v25 = *(void *)(v112 + 8 * v21);
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v26;
        goto LABEL_21;
      }
    }
LABEL_72:
    swift_release();
    unint64_t v137 = v139;
    sub_1C264F0F8();
    sub_1C264E9A4(0, &qword_1EBB82E38, (void (*)(uint64_t))sub_1C264F0F8);
    sub_1C264F19C();
    sub_1C264E9F8(&qword_1EBB82E40, &qword_1EBB82E38, (void (*)(uint64_t))sub_1C264F0F8);
    uint64_t v94 = v103;
    sub_1C277B2A0();
    sub_1C264F218();
    uint64_t v95 = v109;
    uint64_t v96 = v105;
    sub_1C277B590();
    sub_1C263E750(0, (unint64_t *)&qword_1EBB82E00, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4FBB320]);
    sub_1C264F4D0();
    uint64_t v97 = v106;
    uint64_t v98 = v111;
    sub_1C277B500();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v95, v98);
    sub_1C264F71C();
    uint64_t v99 = v108;
    uint64_t v100 = sub_1C277B4E0();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v97, v99);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v94, v96);
    unint64_t v137 = v100;
    uint64_t v101 = sub_1C277B4E0();
    swift_release();
    return v101;
  }
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  uint64_t result = sub_1C277C850();
  __break(1u);
  return result;
}

uint64_t sub_1C262AB00()
{
  sub_1C262AFFC(0, &qword_1EBB82BD8, (uint64_t (*)(uint64_t))sub_1C264F068, sub_1C26D844C, MEMORY[0x1E4F1AA98]);
  uint64_t v2 = v1;
  uint64_t v18 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - v3;
  sub_1C262BA78(0, &qword_1EBB82D20, (unint64_t *)&qword_1EBB82FC0, 0x1E4F44628, MEMORY[0x1E4F1AC18]);
  uint64_t v6 = v5;
  uint64_t v16 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - v7;
  sub_1C262B150();
  uint64_t v10 = v9;
  uint64_t v17 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(v0 + 64);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t v19 = v0;
  uint64_t v20 = &v22;
  type metadata accessor for UnfairLock();
  sub_1C262AF6C((unint64_t *)&qword_1EBB85390, (void (*)(uint64_t))type metadata accessor for UnfairLock);
  swift_retain();
  sub_1C277AA60();
  swift_release();
  if (*(void *)(v22 + 16))
  {
    uint64_t v21 = v22;
    sub_1C264F068();
    sub_1C264E9A4(0, &qword_1EA304A30, (void (*)(uint64_t))sub_1C264F068);
    sub_1C26D844C();
    sub_1C264E9F8(&qword_1EA304A38, &qword_1EA304A30, (void (*)(uint64_t))sub_1C264F068);
    swift_bridgeObjectRetain();
    sub_1C277B2A0();
    sub_1C26D8480();
    uint64_t v13 = sub_1C277B4E0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v2);
  }
  else
  {
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB82FC0);
    sub_1C277B450();
    sub_1C262B07C(0, (unint64_t *)&qword_1EBB831D0);
    sub_1C262B0CC();
    sub_1C277B5F0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    sub_1C262AF6C(&qword_1EBB82A88, (void (*)(uint64_t))sub_1C262B150);
    uint64_t v13 = sub_1C277B4E0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v10);
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1C262AF6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C262AFB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C262AFFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_1C262B07C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1C262B0CC()
{
  unint64_t result = qword_1EBB82D18;
  if (!qword_1EBB82D18)
  {
    sub_1C262BA78(255, &qword_1EBB82D20, (unint64_t *)&qword_1EBB82FC0, 0x1E4F44628, MEMORY[0x1E4F1AC18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82D18);
  }
  return result;
}

void sub_1C262B150()
{
  if (!qword_1EBB82A90)
  {
    sub_1C262BA78(255, &qword_1EBB82D20, (unint64_t *)&qword_1EBB82FC0, 0x1E4F44628, MEMORY[0x1E4F1AC18]);
    sub_1C262B07C(255, (unint64_t *)&qword_1EBB831D0);
    sub_1C262B0CC();
    unint64_t v0 = sub_1C277B1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82A90);
    }
  }
}

uint64_t sub_1C262B218()
{
  type metadata accessor for UnfairLock();
  sub_1C262AFB4((unint64_t *)&qword_1EBB85390, (void (*)(uint64_t))type metadata accessor for UnfairLock);
  swift_retain();
  sub_1C277AA50();
  swift_release();
  return v1;
}

uint64_t Publishers.HandleStartAndIdleEvents.receive<A>(subscriber:)(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(uint64_t **)(v11 + 16);
  uint64_t v26 = *(void *)(v11 + 24);
  uint64_t v27 = v12;
  uint64_t v28 = v13;
  uint64_t v29 = v26;
  uint64_t v30 = v14;
  _s24HandleStartAndIdleEventsV5InnerCMa();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  double v15 = *(double *)(v4 + a2[9]);
  uint64_t v16 = *(void **)(v4 + a2[10]);
  uint64_t v17 = a2[12];
  uint64_t v18 = (uint64_t *)(v4 + a2[11]);
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v21 = *(void *)(v4 + v17);
  uint64_t v22 = *(void *)(v4 + v17 + 8);
  swift_allocObject();
  id v23 = v16;
  swift_retain();
  swift_retain();
  uint64_t v27 = sub_1C262B498((uint64_t)v10, (uint64_t)v23, v19, v20, v21, v22, v15);
  swift_getWitnessTable();
  sub_1C277B5E0();
  return swift_release();
}

uint64_t *sub_1C262B498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v15 = *v7;
  uint64_t v16 = *(void *)(*v7 + 152);
  type metadata accessor for UnfairLock();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = (_DWORD *)swift_slowAlloc();
  *(void *)(v17 + 16) = v18;
  *uint64_t v18 = 0;
  *(uint64_t *)((char *)v7 + v16) = v17;
  uint64_t v19 = (uint64_t)v7 + *(void *)(*v7 + 160);
  *(void *)(v19 + 32) = 0;
  *(_OWORD *)uint64_t v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(unsigned char *)(v19 + 40) = 2;
  *(uint64_t *)((char *)v7 + *(void *)(*v7 + 168)) = 0;
  *((unsigned char *)v7 + *(void *)(*v7 + 176)) = 1;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v15 + 88) - 8) + 32))((uint64_t)v7 + *(void *)(*v7 + 112), a1);
  *(uint64_t *)((char *)v7 + *(void *)(*v7 + 128)) = a2;
  *(double *)((char *)v7 + *(void *)(*v7 + 120)) = a7;
  uint64_t v20 = (uint64_t *)((char *)v7 + *(void *)(*v7 + 136));
  *uint64_t v20 = a3;
  v20[1] = a4;
  uint64_t v21 = (uint64_t *)((char *)v7 + *(void *)(*v7 + 144));
  *uint64_t v21 = a5;
  v21[1] = a6;
  return v7;
}

uint64_t *Atomic.init(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 96);
  type metadata accessor for UnfairLock();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = (_DWORD *)swift_slowAlloc();
  *(void *)(v5 + 16) = v6;
  *uint64_t v6 = 0;
  *(uint64_t *)((char *)v1 + v4) = v5;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 32))((uint64_t)v1 + *(void *)(*v1 + 88), a1);
  return v1;
}

uint64_t Atomic.mutate(_:)()
{
  return swift_release();
}

uint64_t Atomic.mutateAndReturn<A>(_:)()
{
  return swift_release();
}

uint64_t Atomic.value.getter()
{
  return swift_release();
}

uint64_t type metadata accessor for UnfairLock()
{
  return self;
}

void sub_1C262B974()
{
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)v0 + 16));
}

unint64_t sub_1C262B980()
{
  unint64_t result = qword_1EBB85390;
  if (!qword_1EBB85390)
  {
    type metadata accessor for UnfairLock();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85390);
  }
  return result;
}

uint64_t _s24HandleStartAndIdleEventsV5InnerCMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C262B9F0()
{
  return sub_1C277B480();
}

void sub_1C262BA78(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2644ED8(255, a3);
    unint64_t v9 = a5(a1, v8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C262BAF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1C262BB1C(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1C262BB44()
{
  sub_1C262BB50(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void ***)(v0 + 40));
}

void sub_1C262BB50(uint64_t a1, void *a2, uint64_t a3, void **a4)
{
  uint64_t v8 = (void *)MEMORY[0x1C875C9F0]();
  sub_1C262BE4C(a1, a2, a3, a4);
  unint64_t v9 = *(os_unfair_lock_s **)(a1 + 32);
  uint64_t v10 = (uint64_t)&v9[4];
  uint64_t v11 = v9 + 6;
  os_unfair_lock_lock(v9 + 6);
  sub_1C262DE90(v10);

  os_unfair_lock_unlock(v11);
}

void sub_1C262BE4C(uint64_t a1, void *a2, uint64_t a3, void **a4)
{
  void v38[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = *(os_unfair_lock_s **)(a1 + 32);
  uint64_t v8 = (uint64_t)&v7[4];
  unint64_t v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  id v10 = 0;
  sub_1C262DE5C(v8, v38);
  if (v4)
  {
    os_unfair_lock_unlock(v9);
    __break(1u);
    goto LABEL_27;
  }
  os_unfair_lock_unlock(v9);
  id v11 = v38[0];
  id v12 = objc_msgSend(self, sel_fetchHistoryAfterToken_, v38[0]);
  objc_msgSend(v12, sel_setFetchLimit_, 50);
  v38[0] = 0;
  id v13 = objc_msgSend(a2, sel_executeRequest_error_, v12, v38);
  id v10 = v38[0];
  if (!v13)
  {
    id v17 = v38[0];
    sub_1C277A620();

    swift_willThrow();
LABEL_23:

    return;
  }
  uint64_t v5 = v13;
  uint64_t v35 = v11;
  self;
  uint64_t v14 = swift_dynamicCastObjCClass();
  if (!v14)
  {
LABEL_27:
    id v31 = v10;

    v38[0] = 0;
    v38[1] = (id)0xE000000000000000;
    sub_1C277C2D0();
    type metadata accessor for DiskHealthExperienceStore();
    sub_1C277C450();
    sub_1C277B8D0();
    sub_1C277C560();
    __break(1u);
    return;
  }
  uint64_t v15 = (void *)v14;
  id v16 = v10;
  if (objc_msgSend(v15, sel_result))
  {
    sub_1C277C110();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v37, 0, sizeof(v37));
  }
  sub_1C262C460((uint64_t)v37, (uint64_t)v38);
  if (!v38[3])
  {
    sub_1C2624738((uint64_t)v38, (uint64_t)&qword_1EBB84A80, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C262F0B0);
    goto LABEL_17;
  }
  sub_1C262DB44(0, &qword_1EBB850E8, &qword_1EBB851A0, 0x1E4F1C178, MEMORY[0x1E4FBB320]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C277B130();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EBB86280);
    id v23 = v5;
    int64_t v24 = sub_1C277B100();
    os_log_type_t v25 = sub_1C277BD30();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      v38[0] = v34;
      *(_DWORD *)uint64_t v26 = 134218242;
      *(void *)&v37[0] = objc_msgSend(v15, sel_resultType);
      sub_1C277C0D0();

      *(_WORD *)(v26 + 12) = 2080;
      id v23 = v23;
      id v27 = objc_msgSend(v15, sel_description, v26 + 14);
      uint64_t v28 = sub_1C277B850();
      unint64_t v30 = v29;

      *(void *)&v37[0] = sub_1C263FDFC(v28, v30, (uint64_t *)v38);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2601000, v24, v25, "could not get transactions from result of type %ld: %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v34, -1, -1);
      MEMORY[0x1C875D230](v26, -1, -1);
    }
    else
    {
    }
    sub_1C270C3D4();
    swift_allocError();
    swift_willThrow();

    id v11 = v12;
    id v12 = v35;
    goto LABEL_23;
  }
  sub_1C262C4EC(v36, a3);
  if (v18)
  {
    uint64_t v19 = v18;
    MEMORY[0x1F4188790](v18);
    os_unfair_lock_lock(v9);
    sub_1C270C428(v8);
    os_unfair_lock_unlock(v9);
  }
  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C277C5A0();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v20 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);

    swift_bridgeObjectRelease();
  }

  if (v20 == 50)
  {
    uint64_t v21 = *a4;
    *a4 = (void *)1;
    sub_1C2621100(v21);
  }
}

uint64_t sub_1C262C460(uint64_t a1, uint64_t a2)
{
  sub_1C262F0B0(0, (unint64_t *)&qword_1EBB84A80, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C262C4EC(unint64_t a1, uint64_t a2)
{
  uint64_t v135 = a2;
  uint64_t v143 = sub_1C277A580();
  uint64_t v3 = *(void (***)(char *, uint64_t))(v143 - 8);
  MEMORY[0x1F4188790](v143);
  uint64_t v142 = (char *)&v135 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1E4FBC870];
  uint64_t v157 = (void *)MEMORY[0x1E4FBC870];
  uint64_t v158 = (void *)MEMORY[0x1E4FBC870];
  unint64_t v156 = (void *)MEMORY[0x1E4FBC870];
  if (a1 >> 62)
  {
LABEL_98:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C277C5A0();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v7 = (uint64_t *)MEMORY[0x1E4F1BDF0];
  uint64_t v8 = (uint64_t *)MEMORY[0x1E4F1BDB8];
  unint64_t v9 = (uint64_t *)MEMORY[0x1E4F1BFA0];
  uint64_t v10 = MEMORY[0x1E4FBC840];
  if (v6)
  {
    id v11 = (uint64_t *)self;
    uint64_t v147 = 0;
    id v12 = 0;
    unint64_t v145 = v11;
    uint64_t v146 = a1 & 0xC000000000000001;
    uint64_t v140 = *v7;
    unsigned int v141 = v3 + 1;
    uint64_t v13 = *v8;
    uint64_t v138 = *v9;
    uint64_t v139 = v13;
    uint64_t v5 = 4;
    uint64_t v137 = v10 + 8;
    unint64_t v144 = (void *)v6;
    while (1)
    {
      uint64_t v14 = v12;
      if (v146) {
        uint64_t v15 = (char *)MEMORY[0x1C875C230](v5 - 4, a1);
      }
      else {
        uint64_t v15 = (char *)*(id *)(a1 + 8 * v5);
      }
      uint64_t v3 = (void (**)(char *, uint64_t))v15;
      uint64_t v16 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
      {
        __break(1u);
LABEL_97:
        __break(1u);
        goto LABEL_98;
      }
      unint64_t v17 = a1;
      id v148 = objc_msgSend(v15, sel_token);

      id v18 = objc_msgSend(v3, sel_bundleID);
      uint64_t v19 = sub_1C277B850();
      uint64_t v21 = v20;

      id v22 = objc_msgSend(v145, sel_mainBundle);
      id v23 = objc_msgSend(v22, sel_bundleIdentifier);

      if (!v23) {
        break;
      }
      uint64_t v24 = sub_1C277B850();
      uint64_t v26 = v25;

      if (v19 == v24 && v21 == v26)
      {

        swift_bridgeObjectRelease_n();
        a1 = v17;
        goto LABEL_7;
      }
      char v27 = sub_1C277C7E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v17;
      if ((v27 & 1) == 0) {
        goto LABEL_18;
      }
LABEL_6:

LABEL_7:
      ++v5;
      id v12 = v148;
      if ((void *)v16 == v144)
      {
        swift_bridgeObjectRelease();
        uint64_t v47 = (uint64_t)v157;
        uint64_t v5 = MEMORY[0x1E4FBC870];
        goto LABEL_58;
      }
    }
    swift_bridgeObjectRelease();
    a1 = v17;
LABEL_18:
    if (__OFADD__(v147, 1)) {
      goto LABEL_97;
    }
    ++v147;
    id v28 = objc_msgSend(v3, sel_objectIDNotification);
    unint64_t v29 = v142;
    sub_1C277A530();

    uint64_t v30 = sub_1C277A570();
    (*v141)(v29, v143);
    if (!v30)
    {

      __break(1u);
      return;
    }
    uint64_t v151 = sub_1C277B850();
    uint64_t v152 = v31;
    sub_1C277C260();
    if (*(void *)(v30 + 16) && (unint64_t v32 = sub_1C2673204((uint64_t)v153), (v33 & 1) != 0))
    {
      sub_1C263FED0(*(void *)(v30 + 56) + 32 * v32, (uint64_t)&v154);
    }
    else
    {
      long long v154 = 0u;
      long long v155 = 0u;
    }
    sub_1C265E4DC((uint64_t)v153);
    if (!*((void *)&v155 + 1))
    {
      sub_1C262F2E4((uint64_t)&v154);
      goto LABEL_32;
    }
    sub_1C262D764();
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_32:
      uint64_t v151 = sub_1C277B850();
      uint64_t v152 = v36;
      sub_1C277C260();
      if (*(void *)(v30 + 16) && (unint64_t v37 = sub_1C2673204((uint64_t)v153), (v38 & 1) != 0))
      {
        sub_1C263FED0(*(void *)(v30 + 56) + 32 * v37, (uint64_t)&v154);
      }
      else
      {
        long long v154 = 0u;
        long long v155 = 0u;
      }
      sub_1C265E4DC((uint64_t)v153);
      if (*((void *)&v155 + 1))
      {
        sub_1C262D764();
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_44;
        }
        unint64_t v39 = v151;
        if ((v151 & 0xC000000000000001) != 0)
        {
          if (sub_1C277C1C0())
          {
LABEL_40:
            sub_1C2701A04(v39, v157);
            uint64_t v157 = v40;
            goto LABEL_44;
          }
        }
        else if (*(void *)(v151 + 16))
        {
          goto LABEL_40;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C262F2E4((uint64_t)&v154);
      }
LABEL_44:
      uint64_t v151 = sub_1C277B850();
      uint64_t v152 = v41;
      sub_1C277C260();
      if (*(void *)(v30 + 16) && (unint64_t v42 = sub_1C2673204((uint64_t)v153), (v43 & 1) != 0))
      {
        sub_1C263FED0(*(void *)(v30 + 56) + 32 * v42, (uint64_t)&v154);
      }
      else
      {
        long long v154 = 0u;
        long long v155 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1C265E4DC((uint64_t)v153);
      if (!*((void *)&v155 + 1))
      {

        sub_1C262F2E4((uint64_t)&v154);
        goto LABEL_7;
      }
      sub_1C262D764();
      if (swift_dynamicCast())
      {
        unint64_t v44 = v151;
        if ((v151 & 0xC000000000000001) != 0)
        {
          if (sub_1C277C1C0()) {
            goto LABEL_55;
          }
        }
        else if (*(void *)(v151 + 16))
        {
LABEL_55:
          sub_1C2701A04(v44, v156);
          uint64_t v46 = v45;

          unint64_t v156 = v46;
          goto LABEL_7;
        }
        swift_bridgeObjectRelease();
      }
      goto LABEL_6;
    }
    unint64_t v34 = v151;
    if ((v151 & 0xC000000000000001) != 0)
    {
      if (sub_1C277C1C0())
      {
LABEL_28:
        sub_1C2701A04(v34, v158);
        uint64_t v158 = v35;
        goto LABEL_32;
      }
    }
    else if (*(void *)(v151 + 16))
    {
      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  swift_bridgeObjectRelease();
  uint64_t v147 = 0;
  id v12 = 0;
  uint64_t v47 = MEMORY[0x1E4FBC870];
LABEL_58:
  uint64_t v48 = swift_bridgeObjectRetain();
  sub_1C262D7F8(v48);
  sub_1C262D7F8(v47);
  swift_bridgeObjectRelease();
  id v49 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v50 = (void *)sub_1C277B820();
  unsigned int v51 = objc_msgSend(v49, sel_BOOLForKey_, v50);

  int64_t v52 = &qword_1EBB85FF0[2];
  id v148 = v12;
  if (v51)
  {
    uint64_t v53 = v158;
    swift_bridgeObjectRetain();
    unint64_t v54 = swift_bridgeObjectRetain();
    sub_1C2701A04(v54, v53);
    uint64_t v56 = v55;
    unint64_t v57 = swift_bridgeObjectRetain();
    sub_1C2701A04(v57, v56);
    id v58 = v136;
    uint64_t v60 = (uint64_t *)sub_1C265DB84(v59);
    swift_bridgeObjectRelease();
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_1C277B130();
    __swift_project_value_buffer(v61, (uint64_t)qword_1EBB86280);
    id v62 = v58;
    swift_bridgeObjectRetain_n();
    id v63 = v62;
    uint64_t v64 = sub_1C277B100();
    os_log_type_t v65 = sub_1C277BD40();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v146 = swift_slowAlloc();
      v153[0] = v146;
      *(_DWORD *)uint64_t v66 = 136315394;
      unint64_t v67 = (unint64_t)v60;
      id v68 = objc_msgSend(v63, sel_debugDescription);
      uint64_t v69 = sub_1C277B850();
      unint64_t v71 = v70;

      uint64_t v60 = (uint64_t *)v67;
      *(void *)&long long v154 = sub_1C263FDFC(v69, v71, v153);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2048;
      if ((v67 & 0xC000000000000001) != 0) {
        uint64_t v72 = sub_1C277C1C0();
      }
      else {
        uint64_t v72 = *(void *)(v67 + 16);
      }
      int64_t v52 = &qword_1EBB85FF0[2];
      swift_bridgeObjectRelease();
      *(void *)&long long v154 = v72;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v64, v65, "%s mergeExternalChanges() PREFETCHED objects: %ld", (uint8_t *)v66, 0x16u);
      uint64_t v84 = v146;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v84, -1, -1);
      MEMORY[0x1C875D230](v66, -1, -1);

LABEL_75:
      id v58 = v136;
      goto LABEL_76;
    }

    swift_bridgeObjectRelease_n();
  }
  else
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v73 = sub_1C277B130();
    __swift_project_value_buffer(v73, (uint64_t)qword_1EBB86280);
    id v58 = v136;
    id v74 = v136;
    unint64_t v75 = sub_1C277B100();
    os_log_type_t v76 = sub_1C277BD40();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      uint64_t v146 = swift_slowAlloc();
      v153[0] = v146;
      *(_DWORD *)uint64_t v77 = 136315394;
      id v78 = objc_msgSend(v74, sel_debugDescription);
      uint64_t v79 = sub_1C277B850();
      unint64_t v81 = v80;

      *(void *)&long long v154 = sub_1C263FDFC(v79, v81, v153);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 12) = 2048;
      if ((v5 & 0xC000000000000001) != 0) {
        uint64_t v82 = sub_1C277C1C0();
      }
      else {
        uint64_t v82 = 0;
      }
      int64_t v52 = qword_1EBB85FF0 + 16;
      *(void *)&long long v154 = v82;
      sub_1C277C0D0();
      _os_log_impl(&dword_1C2601000, v75, v76, "%s mergeExternalChanges() PREFETCHING DISABLED %ld", (uint8_t *)v77, 0x16u);
      uint64_t v83 = v146;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v83, -1, -1);
      MEMORY[0x1C875D230](v77, -1, -1);

      uint64_t v60 = (uint64_t *)MEMORY[0x1E4FBC870];
      goto LABEL_75;
    }

    uint64_t v60 = (uint64_t *)MEMORY[0x1E4FBC870];
  }
LABEL_76:
  if (v52[76] != -1) {
    swift_once();
  }
  uint64_t v85 = sub_1C277B130();
  uint64_t v86 = __swift_project_value_buffer(v85, (uint64_t)qword_1EBB86280);
  unint64_t v88 = (unint64_t)v157;
  unint64_t v87 = (unint64_t)v158;
  unint64_t v89 = (unint64_t)v156;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v90 = v58;
  uint64_t v146 = v86;
  uint64_t v91 = sub_1C277B100();
  int v92 = sub_1C277BD40();
  if (os_log_type_enabled(v91, (os_log_type_t)v92))
  {
    LODWORD(v142) = v92;
    uint64_t v143 = (uint64_t)v91;
    unint64_t v145 = v60;
    uint64_t v93 = swift_slowAlloc();
    unsigned int v141 = (void (**)(char *, uint64_t))swift_slowAlloc();
    v153[0] = (uint64_t)v141;
    *(_DWORD *)uint64_t v93 = 136316674;
    id v94 = objc_msgSend(v90, sel_debugDescription);
    uint64_t v95 = v90;
    uint64_t v96 = sub_1C277B850();
    unint64_t v98 = v97;

    *(void *)&long long v154 = sub_1C263FDFC(v96, v98, v153);
    sub_1C277C0D0();

    unint64_t v144 = v95;
    swift_bridgeObjectRelease();
    *(_WORD *)(v93 + 12) = 2080;
    sub_1C262D764();
    uint64_t v99 = sub_1C277C9E0();
    *(void *)&long long v154 = sub_1C263FDFC(v99, v100, v153);
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v93 + 22) = 2048;
    if ((v87 & 0xC000000000000001) != 0) {
      uint64_t v101 = sub_1C277C1C0();
    }
    else {
      uint64_t v101 = *(void *)(v87 + 16);
    }
    swift_bridgeObjectRelease();
    *(void *)&long long v154 = v101;
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v93 + 32) = 2080;
    uint64_t v102 = sub_1C277C9E0();
    *(void *)&long long v154 = sub_1C263FDFC(v102, v103, v153);
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v93 + 42) = 2048;
    id v90 = v144;
    if ((v88 & 0xC000000000000001) != 0) {
      uint64_t v104 = sub_1C277C1C0();
    }
    else {
      uint64_t v104 = *(void *)(v88 + 16);
    }
    swift_bridgeObjectRelease();
    *(void *)&long long v154 = v104;
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v93 + 52) = 2080;
    uint64_t v105 = sub_1C277C9E0();
    *(void *)&long long v154 = sub_1C263FDFC(v105, v106, v153);
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v93 + 62) = 2048;
    if ((v89 & 0xC000000000000001) != 0) {
      uint64_t v107 = sub_1C277C1C0();
    }
    else {
      uint64_t v107 = *(void *)(v89 + 16);
    }
    uint64_t v108 = v143;
    os_log_type_t v109 = v142;
    uint64_t v110 = v141;
    swift_bridgeObjectRelease();
    *(void *)&long long v154 = v107;
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v108, v109, "%s mergeExternalChanges() allInsertedObjectIDs: %s count: %ld, allDeletedObjectIDs: %s count: %ld, allUpdatedObjectIDs: %s count: %ld", (uint8_t *)v93, 0x48u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v110, -1, -1);
    MEMORY[0x1C875D230](v93, -1, -1);

    uint64_t v60 = v145;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_1C262DAF0(0, (unint64_t *)&qword_1EBB85218, (void (*)(uint64_t))sub_1C264EB14);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C277E580;
  *(void *)(inited + 32) = sub_1C277B850();
  *(void *)(inited + 40) = v112;
  swift_beginAccess();
  int64_t v113 = v158;
  sub_1C262D764();
  uint64_t v115 = v114;
  *(void *)(inited + 72) = v114;
  *(void *)(inited + 48) = v113;
  *(void *)(inited + 80) = sub_1C277B850();
  *(void *)(inited + 88) = v116;
  swift_beginAccess();
  unint64_t v117 = v157;
  *(void *)(inited + 120) = v115;
  *(void *)(inited + 96) = v117;
  *(void *)(inited + 128) = sub_1C277B850();
  *(void *)(inited + 136) = v118;
  swift_beginAccess();
  int64_t v119 = v156;
  *(void *)(inited + 168) = v115;
  *(void *)(inited + 144) = v119;
  unint64_t v120 = sub_1C262DBAC(inited);
  unint64_t v121 = self;
  sub_1C262F970(v120);
  uint64_t v122 = (void *)sub_1C277B750();
  swift_bridgeObjectRelease();
  sub_1C2644ED8(0, &qword_1EBB85190);
  uint64_t v123 = (void *)sub_1C277BA30();
  objc_msgSend(v121, sel_mergeChangesFromRemoteContextSave_intoContexts_, v122, v123);
  swift_bridgeObjectRelease();

  id v124 = v90;
  swift_bridgeObjectRetain();
  uint64_t v125 = sub_1C277B100();
  os_log_type_t v126 = sub_1C277BD40();
  if (os_log_type_enabled(v125, v126))
  {
    uint64_t v127 = swift_slowAlloc();
    uint64_t v146 = swift_slowAlloc();
    uint64_t v150 = v146;
    *(_DWORD *)uint64_t v127 = 136315650;
    unint64_t v128 = (unint64_t)v60;
    id v129 = objc_msgSend(v124, sel_debugDescription);
    uint64_t v130 = sub_1C277B850();
    unint64_t v132 = v131;

    uint64_t v149 = sub_1C263FDFC(v130, v132, &v150);
    sub_1C277C0D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v127 + 12) = 2048;
    uint64_t v149 = v147;
    sub_1C277C0D0();
    *(_WORD *)(v127 + 22) = 2048;
    if ((v128 & 0xC000000000000001) != 0) {
      uint64_t v133 = sub_1C277C1C0();
    }
    else {
      uint64_t v133 = *(void *)(v128 + 16);
    }
    swift_bridgeObjectRelease();
    uint64_t v149 = v133;
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v125, v126, "%s mergeExternalChanges() complete merged transactions: %ld objects: %ld", (uint8_t *)v127, 0x20u);
    uint64_t v134 = v146;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v134, -1, -1);
    MEMORY[0x1C875D230](v127, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1C262D764()
{
  if (!qword_1EBB850F8)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85150);
    sub_1C264E7E8(&qword_1EBB85158, (unint64_t *)&qword_1EBB85150);
    unint64_t v0 = sub_1C277BC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB850F8);
    }
  }
}

void sub_1C262D7F8(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    if (!sub_1C277C1C0()) {
      return;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1C277C170();
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85150);
      sub_1C264E7E8(&qword_1EBB85158, (unint64_t *)&qword_1EBB85150);
      sub_1C277BC10();
      a1 = v20;
      uint64_t v18 = v21;
      uint64_t v3 = v22;
      uint64_t v4 = v23;
      unint64_t v5 = v24;
    }
    else
    {
      uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v18 = a1 + 56;
      uint64_t v3 = ~v6;
      uint64_t v7 = -v6;
      if (v7 < 64) {
        uint64_t v8 = ~(-1 << v7);
      }
      else {
        uint64_t v8 = -1;
      }
      unint64_t v5 = v8 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
    }
    int64_t v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v5)
      {
        uint64_t v10 = (v5 - 1) & v5;
        unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
        uint64_t v12 = v4;
      }
      else
      {
        int64_t v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v14);
        uint64_t v12 = v4 + 1;
        if (!v15)
        {
          uint64_t v12 = v4 + 2;
          if (v4 + 2 >= v9) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 3;
            if (v4 + 3 >= v9) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v12 = v4 + 4;
              if (v4 + 4 >= v9) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v18 + 8 * v12);
              if (!v15)
              {
                uint64_t v12 = v4 + 5;
                if (v4 + 5 >= v9) {
                  goto LABEL_36;
                }
                unint64_t v15 = *(void *)(v18 + 8 * v12);
                if (!v15)
                {
                  uint64_t v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    unint64_t v15 = *(void *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_1C2648F6C();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      id v13 = *(id *)(*(void *)(a1 + 48) + 8 * v11);
      if (!v13) {
        goto LABEL_36;
      }
      while (1)
      {
        unint64_t v17 = (void *)sub_1C2740D40(v13);

        uint64_t v4 = v12;
        unint64_t v5 = v10;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (sub_1C277C200())
        {
          sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85150);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v13 = v19;
          swift_unknownObjectRelease();
          uint64_t v12 = v4;
          uint64_t v10 = v5;
          if (v19) {
            continue;
          }
        }
        goto LABEL_36;
      }
    }
  }
  if (*(void *)(*(void *)v1 + 16)) {
    goto LABEL_5;
  }
}

void sub_1C262DAF0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277C7C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C262DB44(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2644ED8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C262DBAC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C262DE00(0, (unint64_t *)&qword_1EBB851E0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = sub_1C277C5F0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  while (1)
  {
    sub_1C262DD30(v6, (uint64_t)&v16, (uint64_t)&qword_1EBB850B8, v7, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C262DDA0);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    unint64_t result = sub_1C2629588(v16, v17);
    if (v11) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v9;
    unint64_t result = (unint64_t)sub_1C262FD34(&v18, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    long long v3[2] = v15;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1C262DD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_1C262DDA0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C262DE00(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void, uint64_t, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x1E4FBB1A0], a3, MEMORY[0x1E4FBB1B0]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

id sub_1C262DE5C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(*(void *)a1 + 24);
  *a2 = v2;
  return v2;
}

uint64_t sub_1C262DE90(uint64_t result)
{
  *(unsigned char *)(*(void *)result + 16) = 0;
  return result;
}

uint64_t sub_1C262DE9C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C262DEF4();
    return swift_release();
  }
  return result;
}

void sub_1C262DEF4()
{
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C277B130();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB86280);
  swift_retain_n();
  uint64_t v1 = sub_1C277B100();
  os_log_type_t v2 = sub_1C277BD40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v20 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v5 = DiskHealthExperienceStore.debugDescription.getter();
    sub_1C263FDFC(v5, v6, &v20);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C2601000, v1, v2, "%s mergeExternalChanges() starting", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v4, -1, -1);
    MEMORY[0x1C875D230](v3, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  id v7 = sub_1C262E4A8();
  id v8 = objc_msgSend(v7, sel_newBackgroundContext);

  do
    uint64_t v9 = sub_1C262E504(v8);
  while (v9 == 1);
  uint64_t v10 = (void *)v9;
  if (v9)
  {
    swift_retain();
    sub_1C2621110(v10);
    swift_retain();
    sub_1C2621110(v10);
    char v11 = sub_1C277B100();
    os_log_type_t v12 = sub_1C277BD30();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      BOOL v14 = (void *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v20 = v18;
      *(_DWORD *)uint64_t v13 = 136315394;
      uint64_t v15 = DiskHealthExperienceStore.debugDescription.getter();
      sub_1C263FDFC(v15, v16, &v20);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v13 + 12) = 2112;
      id v17 = v10;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      sub_1C277C0D0();
      *BOOL v14 = v19;
      sub_1C2621100(v10);
      sub_1C2621100(v10);
      _os_log_impl(&dword_1C2601000, v11, v12, "%s mergeExternalChanges() abandoning merge after too many errors: %@", (uint8_t *)v13, 0x16u);
      sub_1C262DB44(0, (unint64_t *)&qword_1EBB854A0, (unint64_t *)&qword_1EBB85F30, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v18, -1, -1);
      MEMORY[0x1C875D230](v13, -1, -1);

      sub_1C2621100(v10);
    }
    else
    {
      sub_1C2621100(v10);
      swift_release_n();
      sub_1C2621100(v10);
      sub_1C2621100(v10);
    }
  }
}

id sub_1C262E2EC()
{
  id v0 = sub_1C262E4A8();
  id v1 = objc_msgSend(v0, sel_persistentStoreCoordinator);

  return v1;
}

uint64_t sub_1C262E334()
{
  return sub_1C262E358();
}

uint64_t sub_1C262E358()
{
  id v0 = self;
  id v1 = objc_msgSend(v0, sel_currentQueue);
  id v2 = objc_msgSend(v0, sel_mainQueue);
  uint64_t v3 = v2;
  if (v1)
  {
    if (v2)
    {
      sub_1C2644ED8(0, &qword_1EBB80F18);
      id v4 = v1;
      char v5 = sub_1C277C030();

      if ((v5 & 1) == 0) {
        goto LABEL_9;
      }
LABEL_6:
      id v6 = sub_1C262E4A8();
      id v7 = objc_msgSend(v6, sel_viewContext);

      return (uint64_t)v7;
    }
    uint64_t v3 = v1;
  }
  else if (!v2)
  {
    goto LABEL_6;
  }

LABEL_9:
  uint64_t result = sub_1C277C560();
  __break(1u);
  return result;
}

id sub_1C262E4A8()
{
  id v1 = *(void **)(v0 + 40);
  if (v1)
  {
    id v2 = *(id *)(v0 + 40);
  }
  else
  {
    uint64_t v3 = (void *)sub_1C270A21C(v0);
    id v4 = *(void **)(v0 + 40);
    *(void *)(v0 + 40) = v3;
    id v2 = v3;

    id v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_1C262E504(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C277B130();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBB86280);
  swift_retain_n();
  id v5 = sub_1C277B100();
  os_log_type_t v6 = sub_1C277BD40();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    aBlock[0] = v8;
    *(_DWORD *)id v7 = 136315138;
    uint64_t v9 = DiskHealthExperienceStore.debugDescription.getter();
    uint64_t v19 = sub_1C263FDFC(v9, v10, aBlock);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C2601000, v5, v6, "%s mergeExternalChangesUsing(tempMoc:) merging", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v8, -1, -1);
    MEMORY[0x1C875D230](v7, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  uint64_t v11 = sub_1C262E7FC();
  uint64_t v19 = 0;
  os_log_type_t v12 = (void *)swift_allocObject();
  void v12[2] = v2;
  v12[3] = a1;
  v12[4] = v11;
  void v12[5] = &v19;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1C262BB44;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = (uint64_t)sub_1C262BB18;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C262BAF0;
  aBlock[3] = (uint64_t)&block_descriptor_82;
  BOOL v14 = _Block_copy(aBlock);
  swift_retain();
  id v15 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_performBlockAndWait_, v14);
  _Block_release(v14);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = v19;
    swift_release();
    return v17;
  }
  return result;
}

uint64_t sub_1C262E7FC()
{
  uint64_t v1 = v0;
  if ((*(uint64_t (**)(void))(*(void *)v0 + 112))())
  {
    id v2 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v3 = (void *)sub_1C277B820();
    unsigned int v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

    if (v4)
    {
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_1C277B130();
      __swift_project_value_buffer(v5, (uint64_t)qword_1EBB86280);
      swift_retain_n();
      os_log_type_t v6 = sub_1C277B100();
      os_log_type_t v7 = sub_1C277BD40();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        uint64_t v9 = swift_slowAlloc();
        uint64_t v36 = v9;
        *(_DWORD *)uint64_t v8 = 136315138;
        uint64_t v10 = DiskHealthExperienceStore.debugDescription.getter();
        sub_1C263FDFC(v10, v11, &v36);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_1C2601000, v6, v7, "%s mergeExternalChanges() viewContext then sharedBackgroundContext", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v9, -1, -1);
        MEMORY[0x1C875D230](v8, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      sub_1C262F0B0(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1C27814A0;
      id v28 = sub_1C262E4A8();
      id v29 = objc_msgSend(v28, sel_viewContext);

      *(void *)(v26 + 32) = v29;
      *(void *)(v26 + 40) = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v1 + 120))(v30, v31);
    }
    else
    {
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1C277B130();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EBB86280);
      swift_retain_n();
      uint64_t v20 = sub_1C277B100();
      os_log_type_t v21 = sub_1C277BD40();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        uint64_t v36 = v23;
        *(_DWORD *)uint64_t v22 = 136315138;
        uint64_t v24 = DiskHealthExperienceStore.debugDescription.getter();
        sub_1C263FDFC(v24, v25, &v36);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_1C2601000, v20, v21, "%s mergeExternalChanges() sharedBackgroundContext then viewContext", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v23, -1, -1);
        MEMORY[0x1C875D230](v22, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      sub_1C262F0B0(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1C27814A0;
      *(void *)(v26 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v1 + 120))(v26, v32);
      id v33 = sub_1C262E4A8();
      id v34 = objc_msgSend(v33, sel_viewContext);

      *(void *)(v26 + 40) = v34;
    }
  }
  else
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1C277B130();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EBB86280);
    swift_retain_n();
    uint64_t v13 = sub_1C277B100();
    os_log_type_t v14 = sub_1C277BD40();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v36 = v16;
      *(_DWORD *)id v15 = 136315138;
      uint64_t v17 = DiskHealthExperienceStore.debugDescription.getter();
      sub_1C263FDFC(v17, v18, &v36);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1C2601000, v13, v14, "%s mergeExternalChanges() Not running in the app - only merging to background context", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v16, -1, -1);
      MEMORY[0x1C875D230](v15, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    sub_1C262F0B0(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1C277E590;
    *(void *)(v26 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v0 + 120))(v26, v27);
  }
  uint64_t v36 = v26;
  sub_1C277BA60();
  return v36;
}

uint64_t sub_1C262EEC0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t sub_1C262EF04()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 32);
  id v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C262EF60(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

id sub_1C262EF60@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C262EF7C(a1, a2);
}

id sub_1C262EF7C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_sharedBackgroundContext;
  uint64_t v5 = *(void **)(*a1
                + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_sharedBackgroundContext);
  if (v5)
  {
    id v6 = *(id *)(*a1
               + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_sharedBackgroundContext);
  }
  else
  {
    id v7 = sub_1C262E4A8();
    id v8 = objc_msgSend(v7, sel_newBackgroundContext);

    objc_msgSend(v8, sel_setAutomaticallyMergesChangesFromParent_, 1);
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C130]), sel_initWithMergeType_, 1);
    objc_msgSend(v8, sel_setMergePolicy_, v9);

    uint64_t v10 = *(void **)(v3 + v4);
    *(void *)(v3 + v4) = v8;
    id v6 = v8;

    uint64_t v5 = 0;
  }
  *a2 = v6;
  return v5;
}

void sub_1C262F068(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C277C0B0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1C262F0B0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C262F0FC()
{
  return DiskHealthExperienceStore.debugDescription.getter();
}

uint64_t DiskHealthExperienceStore.debugDescription.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 32);
  uint64_t v2 = (uint64_t)&v1[4];
  unint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C262F268(v2, v5);
  os_unfair_lock_unlock(v3);
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_1C277C9E0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C277C450();
  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  return v5[0];
}

void sub_1C262F268(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3 = *(void **)(*(void *)a1 + 24);
  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_description);
    uint64_t v5 = sub_1C277B850();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_1C262F2E4(uint64_t a1)
{
  sub_1C262F914();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void (*UserDefault.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  void v5[4] = malloc(v8);
  id v9 = malloc(v8);
  void v5[5] = v9;
  UserDefault.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_1C261992C;
}

uint64_t UserDefault.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1 - 8;
  uint64_t v6 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  size_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = sub_1C277C0B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v18 - v12;
  if (*(unsigned char *)(v2 + *(int *)(v5 + 44)) == 1
    && (objc_msgSend(self, sel_isAppleInternalInstall) & 1) == 0)
  {
    uint64_t v16 = v2 + *(int *)(a1 + 32);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    return v17(a2, v16, v9);
  }
  else
  {
    sub_1C262F820(a1, (uint64_t)v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2, a1);
    uint64_t v14 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v9) == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(a2, &v8[*(int *)(a1 + 32)], v9);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a1);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a1);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v13, v9);
    }
  }
}

uint64_t sub_1C262F6DC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  id v4 = (id *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);

  uint64_t v5 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = ((unint64_t)v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

void *sub_1C262F760(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = *v6;
  *uint64_t v5 = *v6;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  uint64_t v10 = *(void *)(v8 - 8) + 16;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v12 = ((unint64_t)v5 + v11 + 8) & ~v11;
  uint64_t v13 = ((unint64_t)v6 + v11 + 8) & ~v11;
  swift_bridgeObjectRetain();
  id v14 = v7;
  v9(v12, v13, v8);
  *(unsigned char *)(*(void *)(v10 + 48) + v12) = *(unsigned char *)(*(void *)(v10 + 48) + v13);
  return a1;
}

uint64_t sub_1C262F820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void **)(v2 + 16);
  uint64_t v6 = (void *)sub_1C277B820();
  id v7 = objc_msgSend(v5, sel_objectForKey_, v6);

  if (v7)
  {
    sub_1C277C110();
    swift_unknownObjectRelease();
    sub_1C262FD34(&v11, v12);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_1C262F914();
  uint64_t v8 = *(void *)(a1 + 16);
  int v9 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, v9 ^ 1u, 1, v8);
}

void sub_1C262F914()
{
  if (!qword_1EBB84A80)
  {
    unint64_t v0 = sub_1C277C0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84A80);
    }
  }
}

uint64_t sub_1C262F970(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1C262FD44();
    uint64_t v2 = sub_1C277C5F0();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1C263FED0(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    _OWORD v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1C262FD34(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1C262FD34(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1C262FD34(v36, v37);
    sub_1C262FD34(v37, &v33);
    uint64_t result = sub_1C277C240();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1C262FD34(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1C2648F6C();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

_OWORD *sub_1C262FD34(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1C262FD44()
{
  if (!qword_1EBB851F0)
  {
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB851F0);
    }
  }
}

uint64_t sub_1C262FDB0(void *a1)
{
  return sub_1C262FDD4(a1);
}

uint64_t sub_1C262FDD4(void *a1)
{
  long long v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = *(uint64_t *)((char *)v2 + *(void *)(*v2 + 152));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 16));
  uint64_t v6 = (uint64_t)v2 + *(void *)(*v2 + 160);
  swift_beginAccess();
  sub_1C2630D78(v6, (uint64_t)&v10);
  if (v13 == 2
    && (int8x16_t v7 = vorrq_s8(v11, v12),
        !(*(void *)&vorr_s8(*(int8x8_t *)v7.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL)) | (unint64_t)v10)))
  {
    sub_1C2630BCC((uint64_t)&v10);
    sub_1C26482E4((uint64_t)a1, (uint64_t)&v10);
    char v13 = 0;
    swift_beginAccess();
    sub_1C26305D4((uint64_t)&v10, v6);
    swift_endAccess();
    sub_1C2631070();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
    v12.i64[0] = v4;
    v12.i64[1] = swift_getWitnessTable();
    uint64_t v10 = v2;
    swift_retain();
    sub_1C277B2D0();
    uint64_t v9 = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v10);
    return (*(uint64_t (**)(uint64_t))((char *)v2 + *(void *)(*v2 + 136)))(v9);
  }
  else
  {
    sub_1C2630BCC((uint64_t)&v10);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    return sub_1C277B2F0();
  }
}

void sub_1C262FFD0(uint64_t a1)
{
}

void sub_1C262FFF4(uint64_t a1)
{
  long long v2 = v1;
  uint64_t v27 = *v1;
  uint64_t v3 = v27;
  uint64_t v28 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)v25 - v5;
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = sub_1C277B300();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v25 - v9;
  int8x16_t v11 = (os_unfair_lock_s *)(*(void *)((char *)v2 + *(void *)(v3 + 160)) + 16);
  os_unfair_lock_lock(v11);
  uint64_t v12 = (uint64_t)v2 + *(void *)(*v2 + 168);
  swift_beginAccess();
  sub_1C2630D78(v12, (uint64_t)&v30);
  int v13 = v33;
  sub_1C2630BCC((uint64_t)&v30);
  if (v13)
  {
    os_unfair_lock_unlock(v11);
  }
  else
  {
    uint64_t v30 = 1;
    long long v31 = 0u;
    long long v32 = 0u;
    unsigned __int8 v33 = 2;
    swift_beginAccess();
    sub_1C26305D4((uint64_t)&v30, v12);
    swift_endAccess();
    os_unfair_lock_unlock(v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v28, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v10, 1, AssociatedTypeWitness) == 1)
    {
      LODWORD(v29) = sub_1C277BFB0();
      uint64_t v14 = *v2;
      uint64_t v26 = *(void *)((char *)v2 + *(void *)(*v2 + 120));
      sub_1C263192C(0, (unint64_t *)&qword_1EBB854B8, (uint64_t (*)(uint64_t))sub_1C264DED0, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C277E480;
      int64_t v16 = (void *)((char *)v2 + *(void *)(v14 + 152));
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v15 + 64) = sub_1C263226C();
      *(void *)(v15 + 32) = v17;
      *(void *)(v15 + 40) = v18;
      swift_bridgeObjectRetain();
      sub_1C277B0B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = v29;
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v6, v10, AssociatedTypeWitness);
      LODWORD(v26) = sub_1C277BFB0();
      uint64_t v20 = *v2;
      _OWORD v25[2] = *(void *)((char *)v2 + *(void *)(*v2 + 120));
      v25[1] = *(void *)((char *)v2 + *(void *)(v20 + 128));
      v25[0] = *(void *)((char *)v2 + *(void *)(v20 + 136) + 8);
      sub_1C263192C(0, (unint64_t *)&qword_1EBB854B8, (uint64_t (*)(uint64_t))sub_1C264DED0, MEMORY[0x1E4FBBE00]);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1C277E480;
      uint64_t v22 = sub_1C277C860();
      uint64_t v24 = v23;
      *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v21 + 64) = sub_1C263226C();
      *(void *)(v21 + 32) = v22;
      *(void *)(v21 + 40) = v24;
      sub_1C277B0B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, AssociatedTypeWitness);
    }
    sub_1C277B2C0();
  }
}

uint64_t sub_1C26305D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t _s18SubscriptionStatusOwta(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 <= 1) {
      __swift_destroy_boxed_opaque_existential_0(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      }
      else
      {
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = 0;
      }
    }
  }
  return a1;
}

uint64_t sub_1C26306E8(void *a1)
{
  return sub_1C263070C(a1);
}

uint64_t sub_1C263070C(void *a1)
{
  uint64_t v3 = *v1;
  unsigned int v4 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v1 + *(void *)(*v1 + 160)) + 16);
  os_unfair_lock_lock(v4);
  uint64_t v5 = (uint64_t)v1 + *(void *)(*v1 + 168);
  swift_beginAccess();
  sub_1C2630D78(v5, (uint64_t)&v13);
  if (v16 == 2
    && (int8x16_t v6 = vorrq_s8(v14, v15),
        !(*(void *)&vorr_s8(*(int8x8_t *)v6.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL)) | (unint64_t)v13)))
  {
    sub_1C2630BCC((uint64_t)&v13);
    sub_1C26482E4((uint64_t)a1, (uint64_t)&v13);
    char v16 = 0;
    swift_beginAccess();
    sub_1C26305D4((uint64_t)&v13, v5);
    swift_endAccess();
    os_unfair_lock_unlock(v4);
    sub_1C277BFC0();
    uint64_t v8 = *v1;
    sub_1C263192C(0, (unint64_t *)&qword_1EBB854B8, (uint64_t (*)(uint64_t))sub_1C264DED0, MEMORY[0x1E4FBBE00]);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C277E480;
    uint64_t v10 = (uint64_t *)((char *)v1 + *(void *)(v8 + 152));
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 64) = sub_1C263226C();
    *(void *)(v9 + 32) = v11;
    *(void *)(v9 + 40) = v12;
    swift_bridgeObjectRetain();
    sub_1C277B0B0();
    swift_bridgeObjectRelease();
    v15.i64[0] = v3;
    v15.i64[1] = swift_getWitnessTable();
    int v13 = v1;
    swift_retain();
    sub_1C277B2D0();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v13);
  }
  else
  {
    sub_1C2630BCC((uint64_t)&v13);
    os_unfair_lock_unlock(v4);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    return sub_1C277B2F0();
  }
}

uint64_t sub_1C2630A3C()
{
  sub_1C2630A90();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2630A90()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 88) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));

  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 144);
  uint64_t v2 = sub_1C277B0D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C2630BCC(v0 + *(void *)(*(void *)v0 + 168));
  return v0;
}

uint64_t sub_1C2630BCC(uint64_t a1)
{
  return a1;
}

uint64_t _s18SubscriptionStatusOwxx(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 <= 1) {
    return __swift_destroy_boxed_opaque_existential_0(a1);
  }
  return a1;
}

uint64_t sub_1C2630C44()
{
  uint64_t v1 = *(void *)(v0 + *(void *)(*(void *)v0 + 152));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  uint64_t v2 = v0 + *(void *)(*(void *)v0 + 160);
  swift_beginAccess();
  sub_1C2630D78(v2, (uint64_t)v6);
  sub_1C2630D78((uint64_t)v6, (uint64_t)v4);
  if (v5 != 1 && v5)
  {
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
    sub_1C2630BCC((uint64_t)v4);
  }
  else
  {
    sub_1C261F308(v4, (uint64_t)v8);
  }
  sub_1C2630BCC((uint64_t)v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1C2630F38((uint64_t)v8, (uint64_t)v6);
  if (v7)
  {
    __swift_project_boxed_opaque_existential_1(v6, v7);
    sub_1C277B350();
    sub_1C2630EAC((uint64_t)v8);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  }
  else
  {
    sub_1C2630EAC((uint64_t)v8);
    return sub_1C2630EAC((uint64_t)v6);
  }
}

uint64_t sub_1C2630D78(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t _s18SubscriptionStatusOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t))(v5 - 8))(a1);
    *(unsigned char *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(unsigned char *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t sub_1C2630EAC(uint64_t a1)
{
  sub_1C263143C(0, &qword_1EBB836D0, (uint64_t (*)(uint64_t))sub_1C2668B1C, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2630F38(uint64_t a1, uint64_t a2)
{
  sub_1C263143C(0, &qword_1EBB836D0, (uint64_t (*)(uint64_t))sub_1C2668B1C, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2630FCC()
{
  uint64_t v1 = *(void *)(v0 + *(void *)(*(void *)v0 + 152));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1C2631070();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return sub_1C277B2E0();
}

uint64_t sub_1C2631070()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_1C277B680();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v22 = (char *)&v20 - v9;
  uint64_t v10 = sub_1C277B630();
  uint64_t result = MEMORY[0x1F4188790](v10);
  uint64_t v12 = *(void *)(v2 + 168);
  if (*(void *)((char *)v1 + v12))
  {
    swift_retain();
    sub_1C277B6A0();
    uint64_t result = swift_release();
    uint64_t v2 = *v1;
  }
  if (*((unsigned char *)v1 + *(void *)(v2 + 176)) == 1)
  {
    uint64_t v13 = swift_allocObject();
    swift_weakInit();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = *(void *)(v3 + 80);
    *(_OWORD *)(v14 + 24) = *(_OWORD *)(v3 + 88);
    *(void *)(v14 + 40) = *(void *)(v3 + 104);
    *(void *)(v14 + 48) = v13;
    aBlock[4] = sub_1C2668B0C;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C26254FC;
    aBlock[3] = &block_descriptor_2;
    uint64_t v20 = _Block_copy(aBlock);
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1C263157C();
    sub_1C263143C(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C26314F4();
    uint64_t v21 = v4;
    swift_retain();
    sub_1C277C120();
    sub_1C277B6B0();
    swift_allocObject();
    uint64_t v15 = sub_1C277B690();
    swift_release();
    swift_release();
    *(void *)((char *)v1 + v12) = v15;
    swift_retain();
    swift_release();
    sub_1C277B670();
    char v16 = v22;
    MEMORY[0x1C875B5F0](v8, *(double *)((char *)v1 + *(void *)(*v1 + 120)));
    uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v18 = v8;
    uint64_t v19 = v21;
    v17(v18, v21);
    sub_1C277BE60();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v17)(v16, v19);
  }
  return result;
}

void sub_1C263143C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C26314A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277BB20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C26314F4()
{
  unint64_t result = qword_1EBB85480;
  if (!qword_1EBB85480)
  {
    sub_1C263143C(255, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85480);
  }
  return result;
}

unint64_t sub_1C263157C()
{
  unint64_t result = qword_1EBB84A60;
  if (!qword_1EBB84A60)
  {
    sub_1C277B630();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB84A60);
  }
  return result;
}

uint64_t Publishers.Signpost.init(_:dso:log:name:signpostID:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v35 = a7;
  uint64_t v36 = a5;
  int v37 = a6;
  uint64_t v33 = a2;
  uint64_t v34 = a4;
  uint64_t v39 = a10;
  uint64_t v40 = a8;
  sub_1C263192C(0, qword_1EBB853D8, MEMORY[0x1E4FBD318], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  char v16 = (char *)&v33 - v15;
  uint64_t v17 = sub_1C277B0D0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(a11 - 8);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  uint64_t v38 = a1;
  v22(a9, a1, a11);
  uint64_t v23 = (int *)type metadata accessor for Publishers.Signpost();
  *(void *)(a9 + v23[9]) = v33;
  uint64_t v24 = a3;
  *(void *)(a9 + v23[10]) = a3;
  uint64_t v25 = v35;
  uint64_t v26 = a9 + v23[11];
  uint64_t v27 = v36;
  *(void *)uint64_t v26 = v34;
  *(void *)(v26 + 8) = v27;
  *(unsigned char *)(v26 + 16) = v37;
  sub_1C26319A8(v25, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    id v28 = v24;
    sub_1C277B0C0();
    sub_1C26318A0(v25);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v38, a11);
    sub_1C26318A0((uint64_t)v16);
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a9 + v23[12], v20, v17);
  }
  else
  {
    sub_1C26318A0(v25);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v38, a11);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v30(v20, v16, v17);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a9 + v23[12], v20, v17);
  }
  long long v31 = (void *)(a9 + v23[13]);
  uint64_t v32 = v39;
  void *v31 = v40;
  v31[1] = v32;
  return result;
}

uint64_t sub_1C26318A0(uint64_t a1)
{
  sub_1C263192C(0, qword_1EBB853D8, MEMORY[0x1E4FBD318], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C263192C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for Publishers.Signpost()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C26319A8(uint64_t a1, uint64_t a2)
{
  sub_1C263192C(0, qword_1EBB853D8, MEMORY[0x1E4FBD318], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id _s14HealthPlatform8FeedItemC9predicate11matchingAnySo11NSPredicateCSayAA13SourceProfileOG_tFZ_0(uint64_t a1)
{
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  sub_1C26322C0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C277E480;
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1C263226C();
  *(void *)(v2 + 32) = 0x73656C69666F7270;
  *(void *)(v2 + 40) = 0xE800000000000000;
  id result = (id)sub_1C277BCC0();
  uint64_t v4 = result;
  if (*(void *)(a1 + 16))
  {
    sub_1C2631B74(a1, result);
    uint64_t v5 = (void *)sub_1C277BA30();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v5);

    return v6;
  }
  return result;
}

id sub_1C2631B74(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  id result = (id)MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1C277C3C0();
    id v6 = (void **)(a1 + 32);
    while (1)
    {
      uint64_t v9 = *v6++;
      unint64_t v8 = v9;
      if (v9)
      {
        sub_1C26322C0();
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_1C277E470;
        *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v10 + 64) = sub_1C263226C();
        *(void *)(v10 + 32) = 0x73656C69666F7270;
        *(void *)(v10 + 40) = 0xE800000000000000;
        id v11 = v8;
        id result = objc_msgSend(v11, sel_identifier);
        if (!result)
        {
          __break(1u);
          return result;
        }
        id v12 = result;
        sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
        *(void *)(v10 + 96) = sub_1C2644ED8(0, &qword_1EBB851A8);
        *(void *)(v10 + 104) = sub_1C26323B0();
        *(void *)(v10 + 72) = v12;
        sub_1C277BCC0();
      }
      else
      {
        id v7 = a2;
      }
      sub_1C277C390();
      sub_1C277C3D0();
      sub_1C277C3E0();
      sub_1C277C3A0();
      if (!--v3) {
        return (id)v13;
      }
    }
  }
  return result;
}

id static Feed.predicate(kind:associatedProfileIdentifier:feedPrefixKeyPath:)(char a1, void *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4;
  id v7 = (void *)sub_1C2632418(a3, a4, a1);
  if (!a2)
  {
    sub_1C26322C0();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C277E480;
    if (v4)
    {
      unint64_t v24 = v4;
      swift_bridgeObjectRetain();
      sub_1C277B8D0();
      unint64_t v4 = a3;
      unint64_t v14 = v24;
    }
    else
    {
      unint64_t v14 = 0xE000000000000000;
    }
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
    swift_bridgeObjectRetain();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v13 + 64) = sub_1C263226C();
    *(void *)(v13 + 32) = v4;
    *(void *)(v13 + 40) = v14;
    char v16 = (void *)sub_1C277BCC0();
    goto LABEL_11;
  }
  id v8 = a2;
  id result = objc_msgSend(v8, sel_identifier);
  if (result)
  {
    uint64_t v10 = result;
    sub_1C26322C0();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C277E470;
    if (v4)
    {
      unint64_t v23 = v4;
      swift_bridgeObjectRetain();
      sub_1C277B8D0();
      unint64_t v4 = a3;
      unint64_t v12 = v23;
    }
    else
    {
      unint64_t v12 = 0xE000000000000000;
    }
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
    swift_bridgeObjectRetain();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 64) = sub_1C263226C();
    *(void *)(v11 + 32) = v4;
    *(void *)(v11 + 40) = v12;
    *(void *)(v11 + 96) = sub_1C2644ED8(0, &qword_1EBB851A8);
    *(void *)(v11 + 104) = sub_1C26323B0();
    *(void *)(v11 + 72) = v10;
    id v15 = v10;
    char v16 = (void *)sub_1C277BCC0();

LABEL_11:
    sub_1C2632364(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C27814A0;
    *(void *)(v17 + 32) = v7;
    *(void *)(v17 + 40) = v16;
    uint64_t v22 = v17;
    sub_1C277BA60();
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
    id v18 = v7;
    id v19 = v16;
    uint64_t v20 = (void *)sub_1C277BA30();
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v20, v22);

    return v21;
  }
  __break(1u);
  return result;
}

uint64_t PluginFeedItemStorage.init(storageContext:pluginPackage:scope:executorIdentifier:pinnedContentManager:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, long long *a7@<X6>, void *a8@<X8>)
{
  *a8 = a1;
  a8[6] = a2;
  a8[7] = a3;
  sub_1C2632318(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C27814A0;
  *(void *)(v15 + 32) = a4;
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  sub_1C26322C0();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C277E480;
  *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 64) = sub_1C263226C();
  *(void *)(v16 + 32) = a2;
  *(void *)(v16 + 40) = a3;
  id v17 = a1;
  swift_bridgeObjectRetain();
  id v18 = a4;
  *(void *)(v15 + 40) = sub_1C277BCC0();
  sub_1C277BA60();
  id v19 = (void *)sub_1C277BA30();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v19);

  a8[8] = v20;
  a8[9] = a5;
  a8[10] = a6;

  return sub_1C261F308(a7, (uint64_t)(a8 + 1));
}

unint64_t sub_1C263226C()
{
  unint64_t result = qword_1EBB85460;
  if (!qword_1EBB85460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85460);
  }
  return result;
}

void sub_1C26322C0()
{
  if (!qword_1EBB854B8)
  {
    sub_1C264DED0();
    unint64_t v0 = sub_1C277C7C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB854B8);
    }
  }
}

void sub_1C2632318(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2632364(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C26323B0()
{
  unint64_t result = qword_1EBB851B0;
  if (!qword_1EBB851B0)
  {
    sub_1C2644ED8(255, &qword_1EBB851A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB851B0);
  }
  return result;
}

uint64_t sub_1C2632418(uint64_t a1, unint64_t a2, char a3)
{
  sub_1C26322C0();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C277E470;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C277B8D0();
    uint64_t v7 = a1;
    unint64_t v8 = a2;
  }
  else
  {
    uint64_t v7 = 0;
    unint64_t v8 = 0xE000000000000000;
  }
  uint64_t v16 = v7;
  swift_bridgeObjectRetain();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  unint64_t v9 = v8;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1C263226C();
  *(void *)(v6 + 64) = v11;
  *(void *)(v6 + 32) = v16;
  *(void *)(v6 + 40) = v9;
  unint64_t v12 = 0xE800000000000000;
  unint64_t v13 = 0x73656C6369747261;
  unint64_t v14 = v11;
  switch(a3)
  {
    case 1:
      unint64_t v12 = 0x80000001C2789370;
      unint64_t v13 = 0xD000000000000011;
      break;
    case 2:
      unint64_t v12 = 0xEA00000000007374;
      unint64_t v13 = 0x6867696C68676968;
      break;
    case 3:
      unint64_t v12 = 0xE700000000000000;
      unint64_t v13 = 0x73656369746F6ELL;
      break;
    case 4:
      break;
    case 5:
      unint64_t v12 = 0xE600000000000000;
      unint64_t v13 = 0x73646E657274;
      break;
    default:
      unint64_t v12 = 0xED000068746C6165;
      unint64_t v13 = 0x48726F4673707061;
      break;
  }
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  *(void *)(v6 + 96) = v10;
  *(void *)(v6 + 104) = v14;
  *(void *)(v6 + 72) = v13;
  *(void *)(v6 + 80) = v12;
  return sub_1C277BCC0();
}

Swift::Bool_optional __swiftcall PinnedContentManaging.pinnedStatus(for:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v4 = (*(uint64_t (**)())(v1 + 8))();
  if (!v4) {
    return (Swift::Bool_optional)2;
  }
  unint64_t v5 = (void *)v4;
  uint64_t v6 = (void *)sub_1C277A3C0();

  char v7 = sub_1C2632688(countAndFlagsBits, (uint64_t)object, v6);
  swift_bridgeObjectRelease();
  return (Swift::Bool_optional)(v7 & 1);
}

uint64_t sub_1C2632688(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1C277C7E0();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  unint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1C277C7E0() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2632750()
{
  return PinnedContentManager.state.getter();
}

uint64_t PinnedContentManager.state.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C2632810(v2, &v5);
  os_unfair_lock_unlock(v3);
  sub_1C277B3A0();
  swift_release();
  return v5;
}

uint64_t sub_1C2632810@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C263282C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C263282C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *a1;
  if (v6)
  {
    *a3 = v6;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((void *)(a2 + 24), *(void *)(a2 + 48));
    uint64_t v7 = sub_1C277A430();
    if (v3)
    {
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_1C277B130();
      __swift_project_value_buffer(v8, (uint64_t)qword_1EBB86280);
      id v9 = v3;
      id v10 = v3;
      uint64_t v11 = sub_1C277B100();
      os_log_type_t v12 = sub_1C277BD20();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        uint64_t v22 = v14;
        *(_DWORD *)uint64_t v13 = 136446466;
        uint64_t v15 = sub_1C277C9E0();
        sub_1C263FDFC(v15, v16, &v22);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2080;
        id v17 = v3;
        sub_1C26532A4();
        uint64_t v18 = sub_1C277B860();
        sub_1C263FDFC(v18, v19, &v22);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C2601000, v11, v12, "[%{public}s]: Failed to fetch initial pinned content: %s", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v14, -1, -1);
        MEMORY[0x1C875D230](v13, -1, -1);
      }
      else
      {
      }
      uint64_t v7 = 0;
    }
    uint64_t v22 = v7;
    sub_1C264EEC8();
    swift_allocObject();
    uint64_t v20 = sub_1C277B3D0();
    *a1 = v20;
    *a3 = v20;
    swift_retain();
  }
  return swift_retain();
}

void **assignWithTake for GeneratorContext(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (void **)((char *)a1 + v7);
    id v9 = (void **)((char *)a2 + v7);
    sub_1C2632C4C((uint64_t)a1 + v7);
    sub_1C264C860();
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      _OWORD v8[2] = v9[2];
      uint64_t v12 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
      uint64_t v13 = (char *)v8 + v12;
      uint64_t v14 = (char *)v9 + v12;
      uint64_t v15 = sub_1C277A840();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v16 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  id v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + v16);
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)id v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((void *)v17 + 4) = *((void *)v18 + 4);
  uint64_t v20 = a3[8];
  id v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + v20);
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)id v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((void *)v21 + 4) = *((void *)v22 + 4);
  return a1;
}

uint64_t sub_1C2632C4C(uint64_t a1)
{
  sub_1C264C860();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for CountryRetrievalRecord(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C277A840();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1C2632D20(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1C262560C;
  *(void *)(v8 + 24) = v7;
  swift_retain();
  sub_1C2632DE0(a4, (void (*)(void *, uint64_t))sub_1C2625574, v8);

  return swift_release();
}

void sub_1C2632DE0(void *a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v51 = *v3;
  uint64_t v8 = sub_1C277B630();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C277B660();
  uint64_t v50 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v52 = objc_msgSend(a1, sel_profileIdentifier);
  id v15 = objc_msgSend(v52, sel_type);
  if (v15 == (id)1 || (id v15 = objc_msgSend(v52, sel_type), v15 == (id)3))
  {
    uint64_t v47 = v12;
    uint64_t v48 = v9;
    id v49 = a1;
    MEMORY[0x1F4188790](v15);
    *(&v47 - 4) = (uint64_t)v52;
    *(&v47 - 3) = (uint64_t)a2;
    id v17 = (uint64_t *)(v16 + 16);
    uint64_t v18 = (os_unfair_lock_s *)(v16 + 24);
    uint64_t v19 = v51;
    *(&v47 - 2) = a3;
    *(&v47 - 1) = v19;
    os_unfair_lock_lock(v18);
    sub_1C2634168(v17, (uint64_t)&aBlock);
    os_unfair_lock_unlock(v18);
    unsigned __int8 v20 = v55;
    if (v55 == 255)
    {
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1C277B130();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EBB86280);
      uint64_t v30 = sub_1C277B100();
      os_log_type_t v31 = sub_1C277BD40();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        uint64_t aBlock = v33;
        *(_DWORD *)uint64_t v32 = 136446210;
        uint64_t v34 = sub_1C277C9E0();
        uint64_t v53 = sub_1C263FDFC(v34, v35, &aBlock);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v30, v31, "[%{public}s] No in-memory transaction builder found, creating it", v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v33, -1, -1);
        MEMORY[0x1C875D230](v32, -1, -1);
      }

      uint64_t v36 = v49;
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v4;
      *(void *)(v37 + 24) = v36;
      id v38 = objc_allocWithZone(MEMORY[0x1E4F2B4D0]);
      id v58 = sub_1C26B274C;
      uint64_t v59 = (void *)v37;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v55 = 1107296256;
      uint64_t v56 = sub_1C26B2638;
      unint64_t v57 = &block_descriptor_7;
      uint64_t v39 = _Block_copy(&aBlock);
      swift_retain();
      id v40 = v36;
      id v41 = objc_msgSend(v38, sel_initWithCommittedTransactions_handler_, 0, v39);
      _Block_release(v39);
      swift_release();
      objc_msgSend(v40, sel_executeQuery_, v41);
    }
    else
    {
      uint64_t v21 = aBlock;
      if (v55)
      {
        uint64_t v51 = v3[3];
        unint64_t v44 = (void *)swift_allocObject();
        uint64_t v44[2] = a2;
        v44[3] = a3;
        v44[4] = v21;
        id v58 = sub_1C2625540;
        uint64_t v59 = v44;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v55 = 1107296256;
        uint64_t v56 = sub_1C26254FC;
        unint64_t v57 = &block_descriptor_6;
        id v45 = _Block_copy(&aBlock);
        sub_1C2633FD0(v21, v20);
        sub_1C2633FD0(v21, v20);
        swift_retain();
        sub_1C277B650();
        uint64_t v53 = MEMORY[0x1E4FBC860];
        sub_1C2633AA0((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
        uint64_t v46 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
        sub_1C2633CC0(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
        sub_1C2634050((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v46);
        sub_1C277C120();
        MEMORY[0x1C875BDD0](0, v14, v11, v45);

        _Block_release(v45);
        sub_1C2633FE8(v21, v20);
        sub_1C2633FE8(v21, v20);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v8);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v47);
        swift_release();
      }
      else
      {
        if (qword_1EBB86260 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_1C277B130();
        __swift_project_value_buffer(v22, (uint64_t)qword_1EBB86280);
        long long v23 = sub_1C277B100();
        os_log_type_t v24 = sub_1C277BD40();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)swift_slowAlloc();
          uint64_t v26 = swift_slowAlloc();
          uint64_t aBlock = v26;
          *(_DWORD *)uint64_t v25 = 136446210;
          uint64_t v27 = sub_1C277C9E0();
          uint64_t v53 = sub_1C263FDFC(v27, v28, &aBlock);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2601000, v23, v24, "[%{public}s] Waiting for in-memory transaction builder creation, completion enqueued", v25, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v26, -1, -1);
          MEMORY[0x1C875D230](v25, -1, -1);
        }

        sub_1C2633FE8(v21, v20);
      }
    }
  }
  else
  {
    sub_1C26B26F0();
    unint64_t v42 = (void *)swift_allocError();
    a2(v42, 1);

    id v43 = v52;
  }
}

void *HealthAppPluginNotificationManager.init(healthStore:bundleIdentifier:notificationManager:primaryHealthStore:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = sub_1C2633658(a1, a2, a3, a4);

  swift_release();
  return v7;
}

void *sub_1C2633658(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)v4;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a2;
  *(void *)(v4 + 40) = a3;
  *(void *)(v4 + 48) = a4;
  id v6 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C277C2D0();
  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for HealthAppNotificationContentStateManager();
  uint64_t v8 = HealthAppNotificationContentStateManager.__allocating_init(healthStore:domain:)(*(id *)(v4 + 24), 0, 0xE000000000000000);
  v5[10] = v7;
  v5[11] = sub_1C263377C(&qword_1EBB826F0, (void (*)(uint64_t))type metadata accessor for HealthAppNotificationContentStateManager);
  v5[7] = v8;
  return v5;
}

uint64_t sub_1C263377C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t HealthAppNotificationContentStateManager.__allocating_init(healthStore:domain:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v14 = a1;
  uint64_t v4 = sub_1C277BEA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C277BE40();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1C277B660();
  MEMORY[0x1F4188790](v9 - 8);
  v13[1] = sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  uint64_t v17 = v3;
  swift_getMetatypeMetadata();
  sub_1C277B860();
  sub_1C277B650();
  uint64_t v17 = MEMORY[0x1E4FBC860];
  sub_1C2633AE8((unint64_t *)&unk_1EBB85160, 255, MEMORY[0x1E4FBCC10]);
  sub_1C2633D24(0, (unint64_t *)&qword_1EBB850C0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C2633DEC();
  sub_1C277C120();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCC58], v4);
  uint64_t v10 = (void *)sub_1C277BED0();
  type metadata accessor for HealthAppNotificationContentStateManager();
  swift_allocObject();
  uint64_t v11 = sub_1C2633E74(v14, v15, v16, v10);

  return v11;
}

uint64_t type metadata accessor for HealthAppNotificationContentStateManager()
{
  return self;
}

uint64_t sub_1C2633AA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2633AE8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2633B30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2633B78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2633BC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2633C08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277BB20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2633C5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2633CC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2633D24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2633D88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C2633DEC()
{
  unint64_t result = qword_1EBB850D0[0];
  if (!qword_1EBB850D0[0])
  {
    sub_1C2633C5C(255, (unint64_t *)&qword_1EBB850C0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBB850D0);
  }
  return result;
}

uint64_t sub_1C2633E74(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  *(void *)(v4 + 32) = 0;
  sub_1C277A4A0();
  swift_allocObject();
  *(void *)(v4 + 56) = sub_1C277A490();
  sub_1C277A4D0();
  swift_allocObject();
  *(void *)(v4 + 64) = sub_1C277A4C0();
  *(unsigned char *)(v4 + 72) = 0;
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a4;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F2AF20]);
  id v9 = a1;
  id v10 = a4;
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v8, sel_initWithProtectionCategory_domain_healthStore_, 0, v11, v9);

  *(void *)(v5 + 16) = v12;
  id v13 = objc_allocWithZone(MEMORY[0x1E4F2AF20]);
  uint64_t v14 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_initWithProtectionCategory_domain_healthStore_, 1, v14, v9);

  *(void *)(v5 + 24) = v15;
  return v5;
}

uint64_t sub_1C2633FC4(uint64_t a1, char a2)
{
  if (a2) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1C2633FD0(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1C2633FC4(result, a2 & 1);
  }
  return result;
}

uint64_t sub_1C2633FE8(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1C263403C(result, a2 & 1, MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
  }
  return result;
}

uint64_t sub_1C263403C(uint64_t a1, char a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  if (a2) {
    return a4();
  }
  else {
    return a3();
  }
}

uint64_t sub_1C2634050(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2633CC0(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26340B4(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26314A0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2634104(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26248B8(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2634168(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C2634188(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

void sub_1C2634188(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = *a1;
  if (!*(void *)(*a1 + 16)) {
    goto LABEL_6;
  }
  id v13 = a2;
  unint64_t v14 = sub_1C26344B4((uint64_t)v13);
  if ((v15 & 1) == 0)
  {

LABEL_6:
    unsigned __int8 v20 = (void *)swift_allocObject();
    _OWORD v20[2] = a3;
    v20[3] = a4;
    v20[4] = a5;
    sub_1C2633CC0(0, &qword_1EBB843B0, (uint64_t (*)(uint64_t))sub_1C269B190, MEMORY[0x1E4FBBE00]);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C277E480;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_1C26B3378;
    *(void *)(v22 + 24) = v20;
    *(void *)(v21 + 32) = sub_1C26B339C;
    *(void *)(v21 + 40) = v22;
    id v23 = a2;
    swift_retain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = *a1;
    *a1 = 0x8000000000000000;
    sub_1C268B540(v21, 0, v23, isUniquelyReferenced_nonNull_native);
    *a1 = v32;
    swift_release();

    swift_bridgeObjectRelease();
    uint64_t v17 = 0;
    char v19 = -1;
    goto LABEL_7;
  }
  uint64_t v16 = *(void *)(v12 + 56) + 16 * v14;
  uint64_t v17 = *(void **)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_1C2633FC4(*(void *)v16, v18);

  if (v18)
  {
    char v19 = 1;
  }
  else
  {
    uint64_t v25 = (void *)swift_allocObject();
    _OWORD v25[2] = a3;
    void v25[3] = a4;
    v25[4] = a5;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_1C26B3668;
    *(void *)(v26 + 24) = v25;
    swift_retain();
    swift_retain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_1C269079C(0, v17[2] + 1, 1, v17);
    }
    unint64_t v28 = v17[2];
    unint64_t v27 = v17[3];
    if (v28 >= v27 >> 1) {
      uint64_t v17 = sub_1C269079C((void *)(v27 > 1), v28 + 1, 1, v17);
    }
    v17[2] = v28 + 1;
    uint64_t v29 = &v17[2 * v28];
    v29[4] = sub_1C26B339C;
    v29[5] = v26;
    swift_release();
    id v30 = v13;
    swift_bridgeObjectRetain();
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *a1;
    *a1 = 0x8000000000000000;
    sub_1C268B540((uint64_t)v17, 0, v30, v31);
    *a1 = v33;
    swift_release();

    swift_bridgeObjectRelease();
    char v19 = 0;
  }
LABEL_7:
  *(void *)a6 = v17;
  *(unsigned char *)(a6 + 8) = v19;
}

unint64_t sub_1C26344B4(uint64_t a1)
{
  uint64_t v2 = sub_1C277C020();
  return sub_1C2634504(a1, v2, (unint64_t *)&qword_1EBB85E90);
}

unint64_t sub_1C2634504(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1C2644ED8(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_1C277C030();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_1C277C030();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t SourceProfile.description.getter(void *a1)
{
  uint64_t v2 = sub_1C277A8A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0x636974736F6E6761;
  }
  id v6 = a1;
  objc_msgSend(v6, sel_type);
  id v7 = (id)HKStringFromProfileType();
  uint64_t v8 = sub_1C277B850();
  uint64_t v10 = v9;

  v13[0] = v8;
  v13[1] = v10;
  sub_1C277B8D0();
  id v11 = objc_msgSend(v6, sel_identifier);
  sub_1C277A880();

  sub_1C277A850();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1C277B8D0();

  swift_bridgeObjectRelease();
  return v13[0];
}

unint64_t _s14HealthPlatform26CloudSyncStatusInputSignalC6AnchorV2eeoiySbAE_AEtFZ_0(id *a1, void *a2)
{
  uint64_t v29 = a2;
  uint64_t active = type metadata accessor for ActiveSyncState(0);
  uint64_t v4 = *(void *)(active - 8);
  MEMORY[0x1F4188790](active);
  unint64_t v27 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2634D34(0, &qword_1EBB838F0, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v26 - v8;
  sub_1C263583C(0, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v28 = (uint64_t)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  char v15 = (char *)&v26 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = type metadata accessor for CloudSyncStatusInputSignal.Anchor(0);
  uint64_t v19 = *(int *)(v18 + 20);
  uint64_t v26 = a1;
  sub_1C2634C4C((uint64_t)a1 + v19, (uint64_t)v17, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
  sub_1C2634C4C((uint64_t)v29 + *(int *)(v18 + 20), (uint64_t)v15, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
  uint64_t v20 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_1C2634C4C((uint64_t)v17, (uint64_t)v9, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
  sub_1C2634C4C((uint64_t)v15, v20, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v21((uint64_t)v9, 1, active) == 1)
  {
    sub_1C2634CB8((uint64_t)v15, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
    sub_1C2634CB8((uint64_t)v17, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
    if (v21(v20, 1, active) == 1)
    {
      sub_1C2634CB8((uint64_t)v9, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  uint64_t v22 = (uint64_t)v27;
  uint64_t v23 = v28;
  sub_1C2634C4C((uint64_t)v9, v28, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
  if (v21(v20, 1, active) == 1)
  {
    sub_1C2634CB8((uint64_t)v15, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
    sub_1C2634CB8((uint64_t)v17, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
    sub_1C275A794(v23, type metadata accessor for ActiveSyncState);
LABEL_6:
    sub_1C275BDD8((uint64_t)v9, &qword_1EBB838F0, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
    return 0;
  }
  sub_1C2759FA0(v20, v22, type metadata accessor for ActiveSyncState);
  char v24 = _s14HealthPlatform15ActiveSyncStateO2eeoiySbAC_ACtFZ_0(v23, v22);
  sub_1C275A794(v22, type metadata accessor for ActiveSyncState);
  sub_1C2634CB8((uint64_t)v15, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
  sub_1C2634CB8((uint64_t)v17, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
  sub_1C275A794(v23, type metadata accessor for ActiveSyncState);
  sub_1C2634CB8((uint64_t)v9, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
  if ((v24 & 1) == 0) {
    return 0;
  }
LABEL_8:
  unint64_t result = ((unint64_t)*v26 | *v29) == 0;
  if (*v26)
  {
    if (*v29) {
      return (unint64_t)objc_msgSend(*v26, sel_isEqual_);
    }
  }
  return result;
}

uint64_t sub_1C2634C4C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C263583C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C2634CB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C263583C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for CloudSyncStatusInputSignal.Anchor(uint64_t a1)
{
  return sub_1C2635628(a1, (uint64_t *)&unk_1EBB80D28);
}

void sub_1C2634D34(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C263583C(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t HealthAppPluginSource.plugin(bundleIdentifier:allowDynamicFallback:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X8>)
{
  int v31 = a3;
  uint64_t v30 = *v4;
  uint64_t v29 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  uint64_t v8 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C263F5FC(0, &qword_1EBB84FA8, type metadata accessor for HealthAppPluginSource.KnownBundle, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = v4[5];
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v32 = a4;
  if (v15)
  {
    uint64_t v28 = (char *)&v27 - v12;
    uint64_t v16 = v14 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v17 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C2635178(v16, (uint64_t)v10, type metadata accessor for HealthAppPluginSource.KnownBundle);
      BOOL v18 = *((void *)v10 + 2) == a1 && *((void *)v10 + 3) == a2;
      if (v18 || (sub_1C277C7E0() & 1) != 0) {
        break;
      }
      sub_1C2635098((uint64_t)v10, type metadata accessor for HealthAppPluginSource.KnownBundle);
      v16 += v17;
      if (!--v15)
      {
        uint64_t v19 = 1;
        char v20 = v31;
        uint64_t v21 = v30;
        uint64_t v13 = v28;
        goto LABEL_13;
      }
    }
    uint64_t v13 = v28;
    sub_1C2635B20((uint64_t)v10, (uint64_t)v28);
    uint64_t v19 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = 1;
  }
  char v20 = v31;
  uint64_t v21 = v30;
LABEL_13:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, v19, 1, v29);
  uint64_t v22 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v22);
  *(&v27 - 6) = a1;
  *(&v27 - 5) = a2;
  *(&v27 - 4) = (uint64_t)v13;
  *(&v27 - 3) = (uint64_t)v4;
  *((unsigned char *)&v27 - 16) = v20 & 1;
  char v24 = (void (*)(char *, uint64_t))&v23[4];
  uint64_t v25 = v23 + 7;
  *(&v27 - 1) = v21;
  os_unfair_lock_lock(v23 + 7);
  sub_1C2635B98(v24, v32);
  os_unfair_lock_unlock(v25);
  return sub_1C263F58C((uint64_t)v13, &qword_1EBB84FA8, type metadata accessor for HealthAppPluginSource.KnownBundle);
}

uint64_t sub_1C2635098(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for HealthAppPluginSource.KnownBundle(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C277A750();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1C2635178(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for HealthAppPluginSource.KnownBundle(uint64_t a1)
{
  return sub_1C2635628(a1, qword_1EBB848C0);
}

void *initializeWithCopy for HealthAppPluginSource.KnownBundle(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1C277A750();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  return a1;
}

uint64_t destroy for CloudSyncStatusInputSignal.Anchor(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t active = type metadata accessor for ActiveSyncState(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(active - 8) + 48))(v4, 1, active);
  if (!result)
  {
    uint64_t v7 = type metadata accessor for SyncError(0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v4, 2, v7);
    if (!result)
    {
      sub_1C2635734();
      uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);
      return v9(v4, v8);
    }
  }
  return result;
}

void **initializeBufferWithCopyOfBuffer for CloudSyncStatusInputSignal.Anchor(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t active = type metadata accessor for ActiveSyncState(0);
    uint64_t v10 = *(void *)(active - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v12 = v4;
    if (v11(v8, 1, active))
    {
      sub_1C263583C(0, &qword_1EBB83A98, (void (*)(uint64_t))type metadata accessor for ActiveSyncState);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v14 = type metadata accessor for SyncError(0);
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 2, v14))
      {
        memcpy(v7, v8, *(void *)(v10 + 64));
      }
      else
      {
        sub_1C2635734();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v7, v8, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 2, v14);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, active);
    }
  }
  return v5;
}

uint64_t sub_1C2635628(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2635660@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C277B130();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void sub_1C2635734()
{
  if (!qword_1EBB854C0)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB854D0);
    unint64_t v0 = sub_1C277B720();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB854C0);
    }
  }
}

uint64_t getEnumTagSinglePayload for SyncError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C275C5F4);
}

uint64_t type metadata accessor for SyncError(uint64_t a1)
{
  return sub_1C2635628(a1, qword_1EBB85630);
}

uint64_t getEnumTagSinglePayload for ActiveSyncState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C275CF48);
}

void sub_1C26357E4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C262B07C(255, a3);
    unint64_t v4 = sub_1C277C0B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C263583C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277C0B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for ActiveSyncState(uint64_t a1)
{
  return sub_1C2635628(a1, (uint64_t *)&unk_1EBB85588);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t UserDefault.init(key:userDefaults:fallbackValue:isAppleInternalOnly:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  *(void *)a7 = a1;
  *((void *)a7 + 1) = a2;
  *((void *)a7 + 2) = a3;
  uint64_t v11 = type metadata accessor for UserDefault();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(&a7[*(int *)(v11 + 32)], a4, a6);
  a7[*(int *)(v11 + 36)] = a5;
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for UserDefault()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C2635A54()
{
  if (!qword_1EBB82D10)
  {
    sub_1C26418CC(255, (unint64_t *)&qword_1EBB82E10, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C277B460();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82D10);
    }
  }
}

uint64_t sub_1C2635AD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2635B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for HealthAppPluginSource.KnownBundle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C269E6B0);
}

void sub_1C2635B98(void (*a1)(char *, uint64_t)@<X0>, void *a2@<X8>)
{
}

void sub_1C2635BB0(void (*a1)(char *, uint64_t)@<X0>, void *a2@<X8>)
{
  sub_1C2635BD8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(NSObject **)(v2 + 56), a2);
}

void sub_1C2635BD8(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, NSObject *a7@<X6>, void *a8@<X8>)
{
  os_log_t v101 = a7;
  int v104 = a6;
  uint64_t v105 = a5;
  uint64_t v116 = a4;
  unint64_t v117 = a8;
  unint64_t v120 = a3;
  uint64_t v10 = sub_1C277A640();
  uint64_t v112 = *(void *)(v10 - 8);
  uint64_t v113 = v10;
  MEMORY[0x1F4188790](v10);
  os_log_type_t v109 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C277A750();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v110 = v12;
  uint64_t v111 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v108 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C263F5FC(0, &qword_1EBB84FA8, type metadata accessor for HealthAppPluginSource.KnownBundle, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v115 = (uint64_t *)((char *)&v100 - v16);
  uint64_t v118 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  uint64_t v114 = *(char **)(v118 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v118);
  unint64_t v103 = (os_log_t *)((char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v102 = (uint64_t)&v100 - v20;
  MEMORY[0x1F4188790](v19);
  unint64_t v106 = a1;
  uint64_t v107 = (os_log_t *)((char *)&v100 - v21);
  uint64_t v22 = *(void *)(*(void *)a1 + 16);
  if (v22)
  {
    uint64_t v23 = (uint64_t *)(*(void *)a1 + 40);
    while (1)
    {
      uint64_t v25 = *(v23 - 1);
      uint64_t v24 = *v23;
      uint64_t v26 = (void *)v23[1];
      uint64_t v27 = v23[2];
      unint64_t v29 = v23[3];
      uint64_t v28 = v23[4];
      if (v27 == a2 && v29 == v120) {
        break;
      }
      if (sub_1C277C7E0()) {
        goto LABEL_24;
      }
      v23 += 6;
      if (!--v22) {
        goto LABEL_9;
      }
    }
    uint64_t v27 = a2;
    unint64_t v29 = v120;
LABEL_24:
    uint64_t v66 = v117;
    *unint64_t v117 = v25;
    v66[1] = v24;
    v66[2] = v26;
    v66[3] = v27;
    v66[4] = v29;
    v66[5] = v28;
    swift_bridgeObjectRetain();
    id v67 = v26;
    swift_bridgeObjectRetain();
LABEL_25:
    swift_unknownObjectRetain();
    return;
  }
LABEL_9:
  int v31 = (void (*)(void, void, void))v115;
  sub_1C26380D8(v116, (uint64_t)v115);
  uint64_t v32 = v118;
  if ((*((unsigned int (**)(void, uint64_t, uint64_t))v114 + 6))(v31, 1, v118) == 1)
  {
    sub_1C263F58C((uint64_t)v31, &qword_1EBB84FA8, type metadata accessor for HealthAppPluginSource.KnownBundle);
    if ((v104 & 1) == 0) {
      goto LABEL_20;
    }
    uint64_t v33 = v106;
    uint64_t v34 = v119;
    sub_1C2636774(v106);
    if (v34) {
      return;
    }
    int64_t v119 = 0;
    uint64_t v35 = *(void *)(*(void *)v33 + 16);
    if (!v35)
    {
LABEL_20:
      type metadata accessor for HealthAppPluginInfo.LoadError(0);
      sub_1C269E8C0(&qword_1EA304648, (void (*)(uint64_t))type metadata accessor for HealthAppPluginInfo.LoadError);
      swift_allocError();
      unint64_t v44 = v120;
      *id v45 = a2;
      v45[1] = v44;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return;
    }
    uint64_t v36 = (uint64_t *)(*(void *)v33 + 40);
    while (1)
    {
      uint64_t v38 = *(v36 - 1);
      uint64_t v37 = *v36;
      id v40 = (void *)v36[1];
      uint64_t v39 = v36[2];
      unint64_t v42 = v36[3];
      uint64_t v41 = v36[4];
      if (v39 == a2 && v42 == v120) {
        break;
      }
      if (sub_1C277C7E0()) {
        goto LABEL_34;
      }
      v36 += 6;
      if (!--v35) {
        goto LABEL_20;
      }
    }
    uint64_t v39 = a2;
    unint64_t v42 = v120;
LABEL_34:
    unint64_t v98 = v117;
    *unint64_t v117 = v38;
    v98[1] = v37;
    v98[2] = v40;
    v98[3] = v39;
    v98[4] = v42;
    v98[5] = v41;
    swift_bridgeObjectRetain();
    id v99 = v40;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  uint64_t v46 = v107;
  sub_1C2635B20((uint64_t)v31, (uint64_t)v107);
  uint64_t v47 = (char *)v46 + *(int *)(v32 + 24);
  os_log_t v48 = v46[1];
  os_log_t v121 = *v46;
  os_log_t v122 = v48;
  uint64_t v49 = v112;
  uint64_t v50 = v113;
  id v52 = (void *)(v112 + 104);
  uint64_t v51 = *(void (**)(void))(v112 + 104);
  uint64_t v53 = v109;
  LODWORD(v116) = *MEMORY[0x1E4F276C0];
  uint64_t v115 = v51;
  v51(v109);
  unint64_t v54 = sub_1C26366A8();
  swift_bridgeObjectRetain();
  uint64_t v55 = v108;
  unint64_t v120 = v54;
  uint64_t v114 = v47;
  sub_1C277A740();
  id v58 = *(void (**)(void, void))(v49 + 8);
  uint64_t v56 = v49 + 8;
  unint64_t v57 = v58;
  v58(v53, v50);
  swift_bridgeObjectRelease();
  id v59 = objc_allocWithZone(MEMORY[0x1E4F28B50]);
  uint64_t v60 = (void *)sub_1C277A6A0();
  id v61 = objc_msgSend(v59, sel_initWithURL_, v60);

  uint64_t v62 = v110;
  uint64_t v63 = v111 + 8;
  uint64_t v64 = v55;
  os_log_type_t v65 = *(void (**)(char *, uint64_t))(v111 + 8);
  v65(v64, v110);
  if (v61)
  {
    sub_1C2636AB4(v61, v106, v117);
    sub_1C2635098((uint64_t)v46, type metadata accessor for HealthAppPluginSource.KnownBundle);
  }
  else
  {
    unint64_t v106 = v65;
    int64_t v119 = v57;
    unint64_t v117 = v52;
    uint64_t v111 = v63;
    if (qword_1EBB85EA8 != -1) {
      swift_once();
    }
    uint64_t v112 = v56;
    uint64_t v68 = sub_1C277B130();
    __swift_project_value_buffer(v68, (uint64_t)qword_1EBB85ED8);
    uint64_t v69 = v102;
    sub_1C2635178((uint64_t)v46, v102, type metadata accessor for HealthAppPluginSource.KnownBundle);
    unint64_t v70 = v103;
    sub_1C2635178((uint64_t)v46, (uint64_t)v103, type metadata accessor for HealthAppPluginSource.KnownBundle);
    unint64_t v71 = sub_1C277B100();
    os_log_type_t v72 = sub_1C277BD20();
    int v73 = v72;
    BOOL v74 = os_log_type_enabled(v71, v72);
    uint64_t v75 = v113;
    if (v74)
    {
      uint64_t v76 = swift_slowAlloc();
      uint64_t v105 = swift_slowAlloc();
      uint64_t v123 = v105;
      *(_DWORD *)uint64_t v76 = 136315650;
      int v104 = v73;
      os_log_t v121 = v101;
      swift_getMetatypeMetadata();
      uint64_t v77 = sub_1C277B860();
      os_log_t v101 = v71;
      os_log_t v121 = (os_log_t)sub_1C263FDFC(v77, v78, &v123);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v76 + 12) = 2080;
      uint64_t v80 = *(void *)(v69 + 16);
      unint64_t v79 = *(void *)(v69 + 24);
      swift_bridgeObjectRetain();
      os_log_t v121 = (os_log_t)sub_1C263FDFC(v80, v79, &v123);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C2635098(v69, type metadata accessor for HealthAppPluginSource.KnownBundle);
      *(_WORD *)(v76 + 22) = 2080;
      os_log_t v81 = v70[1];
      os_log_t v121 = *v70;
      os_log_t v122 = v81;
      uint64_t v82 = v109;
      ((void (*)(char *, void, uint64_t))v115)(v109, v116, v113);
      swift_bridgeObjectRetain();
      uint64_t v83 = v108;
      sub_1C277A740();
      uint64_t v84 = (void (*)(char *, uint64_t))v119;
      v119(v82, v113);
      swift_bridgeObjectRelease();
      sub_1C269E8C0((unint64_t *)&qword_1EA304AD0, MEMORY[0x1E4F276F0]);
      uint64_t v85 = sub_1C277C7B0();
      unint64_t v87 = v86;
      v106(v83, v110);
      os_log_t v121 = (os_log_t)sub_1C263FDFC(v85, v87, &v123);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      uint64_t v62 = v110;
      sub_1C2635098((uint64_t)v70, type metadata accessor for HealthAppPluginSource.KnownBundle);
      os_log_t v88 = v101;
      _os_log_impl(&dword_1C2601000, v101, (os_log_type_t)v104, "[%s] Known URL for bundle identifier %s appears invalid; cannot load bundle at that location: %s",
        (uint8_t *)v76,
        0x20u);
      uint64_t v89 = v105;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v89, -1, -1);
      uint64_t v90 = v76;
      uint64_t v75 = v113;
      MEMORY[0x1C875D230](v90, -1, -1);
    }
    else
    {
      sub_1C2635098(v69, type metadata accessor for HealthAppPluginSource.KnownBundle);
      sub_1C2635098((uint64_t)v70, type metadata accessor for HealthAppPluginSource.KnownBundle);

      uint64_t v83 = v108;
      uint64_t v82 = v109;
      uint64_t v84 = (void (*)(char *, uint64_t))v119;
    }
    type metadata accessor for HealthAppPluginInfo.LoadError(0);
    sub_1C269E8C0(&qword_1EA304648, (void (*)(uint64_t))type metadata accessor for HealthAppPluginInfo.LoadError);
    int64_t v119 = (void (*)(void, void))swift_allocError();
    int v92 = v91;
    uint64_t v93 = v107;
    os_log_t v94 = v107[1];
    os_log_t v121 = *v107;
    os_log_t v122 = v94;
    ((void (*)(char *, void, uint64_t))v115)(v82, v116, v75);
    swift_bridgeObjectRetain();
    sub_1C277A740();
    v84(v82, v75);
    swift_bridgeObjectRelease();
    uint64_t v95 = sub_1C277A700();
    uint64_t v97 = v96;
    v106(v83, v62);
    *int v92 = v95;
    v92[1] = v97;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1C2635098((uint64_t)v93, type metadata accessor for HealthAppPluginSource.KnownBundle);
  }
}

uint64_t getEnumTagSinglePayload for HealthAppPluginSource.KnownBundle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C269E600);
}

unint64_t sub_1C26366A8()
{
  unint64_t result = qword_1EBB850B0;
  if (!qword_1EBB850B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB850B0);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> HealthAppPluginSource.loadPluginsFromDisk()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  unint64_t v2 = (unint64_t)&v1[4];
  uint64_t v3 = v1 + 7;
  os_unfair_lock_lock(v1 + 7);
  sub_1C2636754(v2);
  os_unfair_lock_unlock(v3);
}

unint64_t sub_1C2636754(unint64_t result)
{
  if ((*(unsigned char *)(result + 8) & 1) == 0) {
    return sub_1C2636774((void *)result);
  }
  return result;
}

unint64_t sub_1C2636774(void *a1)
{
  unint64_t result = (*(uint64_t (**)(void))(v1 + 24))();
  if (!v2)
  {
    unint64_t v5 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1C277C5A0();
      unint64_t result = swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v6)
      {
LABEL_4:
        if (v6 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v7 = 0;
        unint64_t v13 = v5 & 0xC000000000000001;
        uint64_t v11 = a1;
        do
        {
          if (v13) {
            id v9 = (id)MEMORY[0x1C875C230](v7, v5);
          }
          else {
            id v9 = *(id *)(v5 + 8 * v7 + 32);
          }
          uint64_t v10 = v9;
          sub_1C2636AB4(v9, a1, v12);
          uint64_t v8 = (void *)v12[2];

          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();

          a1 = v11;
          swift_bridgeObjectRelease();
          ++v7;
        }
        while (v6 != v7);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C2636AB4(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  v87[1] = *MEMORY[0x1E4F143B8];
  if (HKIsUnitTesting())
  {
    id v8 = objc_msgSend(self, sel_callStackSymbols);
    uint64_t v9 = sub_1C277BA40();

    if (*(void *)(v9 + 16) >= 5uLL) {
      uint64_t v10 = 5;
    }
    else {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    type metadata accessor for HealthAppPluginInfo.LoadError(0);
    sub_1C269E8C0(&qword_1EA304648, (void (*)(uint64_t))type metadata accessor for HealthAppPluginInfo.LoadError);
    swift_allocError();
    uint64_t v12 = v11;
    sub_1C277C800();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v13 = swift_dynamicCastClass();
    if (!v13)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = MEMORY[0x1E4FBC860];
    }
    uint64_t v14 = *(void *)(v13 + 16);
    swift_release();
    if (v14 == v10)
    {
      uint64_t v15 = swift_dynamicCastClass();
      if (!v15)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = MEMORY[0x1E4FBC860];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = sub_1C2672EAC(v9, v9 + 32, 0, (2 * v10) | 1);
    }
    swift_bridgeObjectRelease();
    *uint64_t v12 = v15;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_11;
  }
  id v16 = objc_msgSend(a1, sel_bundleIdentifier);
  if (!v16)
  {
    if (qword_1EBB85EA8 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_1C277B130();
    __swift_project_value_buffer(v40, (uint64_t)qword_1EBB85ED8);
    id v41 = a1;
    unint64_t v42 = sub_1C277B100();
    os_log_type_t v43 = sub_1C277BD20();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      v87[0] = v85;
      *(_DWORD *)uint64_t v44 = 136315394;
      swift_getMetatypeMetadata();
      uint64_t v45 = sub_1C277B860();
      sub_1C263FDFC(v45, v46, v87);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      id v47 = objc_msgSend(v41, sel_bundlePath);
      uint64_t v48 = sub_1C277B850();
      unint64_t v50 = v49;

      v86[0] = (id)sub_1C263FDFC(v48, v50, v87);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v42, v43, "[%s] Ignoring plugin bundle (no bundle identifier): %s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v85, -1, -1);
      MEMORY[0x1C875D230](v44, -1, -1);
    }
    else
    {
    }
    type metadata accessor for HealthAppPluginInfo.LoadError(0);
    sub_1C269E8C0(&qword_1EA304648, (void (*)(uint64_t))type metadata accessor for HealthAppPluginInfo.LoadError);
    swift_allocError();
    void *v51 = v41;
    swift_storeEnumTagMultiPayload();
    id v52 = v41;
    goto LABEL_50;
  }
  uint64_t v17 = v16;
  unint64_t v79 = a3;
  uint64_t v80 = a1;
  uint64_t v83 = sub_1C277B850();
  uint64_t v84 = v18;

  unint64_t v78 = a2;
  os_log_t v81 = (void *)*a2;
  uint64_t v19 = *(void *)(*a2 + 16);
  if (v19)
  {
    uint64_t v20 = v81 + 5;
    while (1)
    {
      uint64_t v21 = *(v20 - 1);
      uint64_t v22 = *v20;
      uint64_t v24 = (void *)v20[1];
      uint64_t v23 = v20[2];
      uint64_t v25 = v20[3];
      uint64_t v26 = v20[4];
      if (v23 == v83 && v25 == v84) {
        break;
      }
      if (sub_1C277C7E0()) {
        goto LABEL_42;
      }
      v20 += 6;
      if (!--v19) {
        goto LABEL_21;
      }
    }
    uint64_t v23 = v83;
    uint64_t v25 = v84;
LABEL_42:
    swift_bridgeObjectRetain();
    id v66 = v24;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    *unint64_t v79 = v21;
    v79[1] = v22;
    v79[2] = v66;
    v79[3] = v23;
    v79[4] = v25;
    v79[5] = v26;
    return;
  }
LABEL_21:
  if (sub_1C26400F4(v83, v84, *(void *)(v3 + 48)))
  {
    if (qword_1EBB85EA8 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1C277B130();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EBB85ED8);
    id v29 = v80;
    uint64_t v30 = sub_1C277B100();
    os_log_type_t v31 = sub_1C277BD20();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      v87[0] = v82;
      *(_DWORD *)uint64_t v32 = 136315394;
      swift_getMetatypeMetadata();
      uint64_t v33 = sub_1C277B860();
      sub_1C263FDFC(v33, v34, v87);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      id v35 = objc_msgSend(v29, sel_bundlePath);
      uint64_t v36 = sub_1C277B850();
      unint64_t v38 = v37;

      v86[0] = (id)sub_1C263FDFC(v36, v38, v87);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v30, v31, "[%s] Ignoring plugin bundle (disabled): %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      uint64_t v39 = v82;
LABEL_47:
      MEMORY[0x1C875D230](v39, -1, -1);
      MEMORY[0x1C875D230](v32, -1, -1);

LABEL_49:
      type metadata accessor for HealthAppPluginInfo.LoadError(0);
      sub_1C269E8C0(&qword_1EA304648, (void (*)(uint64_t))type metadata accessor for HealthAppPluginInfo.LoadError);
      swift_allocError();
      uint64_t *v76 = v83;
      v76[1] = v84;
      swift_storeEnumTagMultiPayload();
LABEL_50:
      swift_willThrow();
      return;
    }
    goto LABEL_48;
  }
  uint64_t v53 = *(void *)(v3 + 56);
  if (v53 && (sub_1C26400F4(v83, v84, v53) & 1) == 0)
  {
    if (qword_1EBB85EA8 != -1) {
      swift_once();
    }
    uint64_t v67 = sub_1C277B130();
    __swift_project_value_buffer(v67, (uint64_t)qword_1EBB85ED8);
    id v29 = v80;
    uint64_t v30 = sub_1C277B100();
    os_log_type_t v68 = sub_1C277BD20();
    if (os_log_type_enabled(v30, v68))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v69 = (void *)swift_slowAlloc();
      v86[0] = v69;
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v70 = sub_1C269BF1C();
      v87[0] = sub_1C263FDFC(v70, v71, (uint64_t *)v86);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      id v72 = objc_msgSend(v29, sel_bundlePath);
      uint64_t v73 = sub_1C277B850();
      unint64_t v75 = v74;

      v87[0] = sub_1C263FDFC(v73, v75, (uint64_t *)v86);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v30, v68, "[%s] Ignoring plugin bundle (not in allow list): %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      uint64_t v39 = (uint64_t)v69;
      goto LABEL_47;
    }
LABEL_48:

    goto LABEL_49;
  }
  swift_bridgeObjectRelease();
  id v54 = v80;
  HealthAppPluginInfo.init(bundle:)(v54, (uint64_t *)v86);
  if (!v4)
  {
    id v56 = v86[0];
    id v55 = v86[1];
    id v58 = v86[2];
    id v57 = v86[3];
    id v59 = v86[4];
    id v60 = v86[5];
    v86[0] = 0;
    if (!objc_msgSend(v54, sel_loadAndReturnError_, v86))
    {
      id v77 = v86[0];
      sub_1C277A620();

      swift_willThrow();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();

LABEL_11:
      swift_bridgeObjectRelease();
      return;
    }
    id v61 = v86[0];
    swift_bridgeObjectRetain();
    id v62 = v58;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      os_log_t v81 = sub_1C2637E48(0, v81[2] + 1, 1, v81);
    }
    unint64_t v64 = v81[2];
    unint64_t v63 = v81[3];
    if (v64 >= v63 >> 1) {
      os_log_t v81 = sub_1C2637E48((void *)(v63 > 1), v64 + 1, 1, v81);
    }
    v81[2] = v64 + 1;
    os_log_type_t v65 = &v81[6 * v64];
    v65[4] = v56;
    v65[5] = v55;
    v65[6] = v62;
    v65[7] = v57;
    v65[8] = v59;
    v65[9] = v60;
    void *v78 = v81;
    *unint64_t v79 = v56;
    v79[1] = v55;
    v79[2] = v62;
    v79[3] = v57;
    v79[4] = v59;
    v79[5] = v60;
  }
}

void HealthAppPluginInfo.init(bundle:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C277A750();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_bundleIdentifier);
  if (!v8)
  {
    if (qword_1EBB85EA8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C277B130();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EBB85ED8);
    id v22 = a1;
    uint64_t v23 = sub_1C277B100();
    os_log_type_t v24 = sub_1C277BD30();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v64 = (uint64_t)(v25 + 4);
      v65[0] = v26;
      id v27 = objc_msgSend(v22, sel_bundlePath);
      uint64_t v28 = sub_1C277B850();
      unint64_t v30 = v29;

      uint64_t v66 = sub_1C263FDFC(v28, v30, v65);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v23, v24, "Plugin bundle at %s has no bundle identifier.", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v26, -1, -1);
      MEMORY[0x1C875D230](v25, -1, -1);

LABEL_30:
      type metadata accessor for HealthAppPluginInfo.LoadError(0);
      sub_1C269E8C0(&qword_1EA304648, (void (*)(uint64_t))type metadata accessor for HealthAppPluginInfo.LoadError);
      swift_allocError();
      *unint64_t v46 = v22;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return;
    }
LABEL_29:

    goto LABEL_30;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1C277B850();
  uint64_t v12 = v11;

  if (!objc_msgSend(a1, sel_principalClass))
  {
    swift_bridgeObjectRelease();
    if (qword_1EBB85EA8 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1C277B130();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EBB85ED8);
    id v22 = a1;
    uint64_t v23 = sub_1C277B100();
    os_log_type_t v32 = sub_1C277BD30();
    if (os_log_type_enabled(v23, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v64 = (uint64_t)(v33 + 4);
      v65[0] = v34;
      id v35 = objc_msgSend(v22, sel_bundlePath);
      uint64_t v36 = sub_1C277B850();
      unint64_t v38 = v37;

      uint64_t v66 = sub_1C263FDFC(v36, v38, v65);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v23, v32, "Plugin bundle at %s has no principal class.", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v34, -1, -1);
      MEMORY[0x1C875D230](v33, -1, -1);

      goto LABEL_30;
    }
    goto LABEL_29;
  }
  uint64_t v63 = v10;
  uint64_t v64 = v12;
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  uint64_t v14 = swift_conformsToProtocol2();
  if (v14) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v14) {
    uint64_t v16 = ObjCClassMetadata;
  }
  else {
    uint64_t v16 = 0;
  }
  if (v16)
  {
    id v17 = objc_msgSend(a1, sel_bundleURL);
    sub_1C277A6F0();

    uint64_t v62 = sub_1C277A690();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v16, v15);
LABEL_28:
    *a2 = v62;
    a2[1] = v19;
    uint64_t v45 = v63;
    a2[2] = (uint64_t)a1;
    a2[3] = v45;
    a2[4] = v64;
    a2[5] = v20;
    return;
  }
  uint64_t v39 = swift_conformsToProtocol2();
  if (v39) {
    uint64_t v40 = v39;
  }
  else {
    uint64_t v40 = 0;
  }
  if (v39) {
    uint64_t v41 = ObjCClassMetadata;
  }
  else {
    uint64_t v41 = 0;
  }
  if (v41)
  {
    id v42 = objc_msgSend(a1, sel_bundleURL);
    sub_1C277A6F0();

    uint64_t v62 = sub_1C277A690();
    uint64_t v19 = v43;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v65[3] = v41;
    v65[4] = v40;
    __swift_allocate_boxed_opaque_existential_1(v65);
    v44(v41, v40);
    uint64_t v20 = sub_1C277C7D0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v65);
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  if (qword_1EBB85EA8 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_1C277B130();
  __swift_project_value_buffer(v47, (uint64_t)qword_1EBB85ED8);
  id v48 = a1;
  unint64_t v49 = sub_1C277B100();
  os_log_type_t v50 = sub_1C277BD20();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    v65[0] = v64;
    *(_DWORD *)uint64_t v51 = 136315394;
    id v52 = objc_msgSend(v48, sel_bundlePath);
    uint64_t v53 = sub_1C277B850();
    unint64_t v55 = v54;

    uint64_t v66 = sub_1C263FDFC(v53, v55, v65);
    sub_1C277C0D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2080;
    uint64_t v56 = sub_1C277C9E0();
    uint64_t v66 = sub_1C263FDFC(v56, v57, v65);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v49, v50, "Plugin bundle at %s has a principal class (%s) of an unknown type; cannot instantiate.",
      (uint8_t *)v51,
      0x16u);
    uint64_t v58 = v64;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v58, -1, -1);
    MEMORY[0x1C875D230](v51, -1, -1);
  }
  else
  {
  }
  type metadata accessor for HealthAppPluginInfo.LoadError(0);
  sub_1C269E8C0(&qword_1EA304648, (void (*)(uint64_t))type metadata accessor for HealthAppPluginInfo.LoadError);
  swift_allocError();
  id v60 = v59;
  uint64_t *v59 = sub_1C277C9E0();
  v60[1] = v61;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
}

void *sub_1C2637E48(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2640614(0, qword_1EBB84928);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C2637FE0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

id sub_1C2637F7C()
{
  return sub_1C263B9FC();
}

uint64_t sub_1C2637FE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C26380D8(uint64_t a1, uint64_t a2)
{
  sub_1C263F5FC(0, &qword_1EBB84FA8, type metadata accessor for HealthAppPluginSource.KnownBundle, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C263816C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a1;
  v12[3] = a2;
  void v12[4] = a3;
  void v12[5] = a4;
  v12[6] = a5;
  sub_1C26387E0(0, &qword_1EBB82D70, (uint64_t (*)(uint64_t))sub_1C26388B8, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C277B480();
  *a6 = result;
  return result;
}

uint64_t sub_1C2638268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  unint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C26387E0(0, &qword_1EBB82D70, (uint64_t (*)(uint64_t))sub_1C26388B8, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C277B480();
  sub_1C263885C(&qword_1EBB82D68, &qword_1EBB82D70, v5);
  uint64_t v6 = sub_1C277B4E0();
  swift_release();
  return v6;
}

uint64_t sub_1C263839C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  id v22 = a6;
  sub_1C263B7E0();
  uint64_t v21 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a2;
  v16[3] = v15;
  v16[4] = a3;
  v16[5] = a4;
  v16[6] = a5;
  id v17 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C26387E0(0, &qword_1EBB82D70, (uint64_t (*)(uint64_t))sub_1C26388B8, MEMORY[0x1E4F1AC28]);
  sub_1C263885C(&qword_1EBB82D68, &qword_1EBB82D70, v17);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C277B4A0();
  sub_1C2638EEC(&qword_1EBB82DA0, (void (*)(uint64_t))sub_1C263B7E0);
  uint64_t v18 = v21;
  uint64_t v19 = sub_1C277B4E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v18);
  *id v22 = v19;
  return result;
}

uint64_t Publisher<>.getSummaries(pluginIdentifier:modelIdentifiers:modelObjectTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a6;
  uint64_t v22 = a1;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C26387E0(255, &qword_1EBB82C90, (uint64_t (*)(uint64_t))sub_1C26388B8, MEMORY[0x1E4F1AAE0]);
  uint64_t v24 = v12;
  uint64_t v25 = a5;
  uint64_t v26 = sub_1C263885C(&qword_1EBB82C88, &qword_1EBB82C90, v11);
  uint64_t v27 = a6;
  uint64_t v13 = sub_1C277B260();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v21 - v15;
  id v17 = (void *)swift_allocObject();
  uint64_t v18 = v22;
  v17[2] = a3;
  v17[3] = v18;
  v17[4] = a2;
  v17[5] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C277B330();
  sub_1C26388B8();
  sub_1C277B5A0();
  swift_release();
  swift_getWitnessTable();
  uint64_t v19 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v19;
}

void sub_1C26387E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_1C26532A4();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C263885C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26387E0(255, a2, (uint64_t (*)(uint64_t))sub_1C26388B8, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C26388B8()
{
  if (!qword_1EBB82E50)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB82EE8);
    unint64_t v0 = sub_1C277BB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82E50);
    }
  }
}

uint64_t sub_1C2638920@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v42 = a5;
  uint64_t v43 = a6;
  uint64_t v45 = a3;
  sub_1C2639AFC(0, &qword_1EBB82CD8, MEMORY[0x1E4F1ABF8]);
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v39 = (char *)&v33 - v12;
  sub_1C263B8EC();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v44 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PluginSharableModel();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v20 = (uint64_t *)((char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = *a1;
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t v47 = MEMORY[0x1E4FBC860];
  uint64_t v23 = *(void *)(a2 + 16);
  if (v23)
  {
    uint64_t v34 = v21;
    uint64_t v35 = v15;
    uint64_t v36 = v14;
    unint64_t v38 = a7;
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB82EE8);
    uint64_t v24 = a2;
    uint64_t v25 = a2 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v26 = *(void *)(v18 + 72);
    uint64_t v37 = v24;
    swift_bridgeObjectRetain();
    do
    {
      sub_1C26397A4(v25, (uint64_t)v20);
      swift_bridgeObjectRetain();
      uint64_t v27 = HKSharedSummary.init(model:pluginIdentifier:)(v20, v45, a4);
      MEMORY[0x1C875B930]();
      if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C277BA90();
      }
      sub_1C277BAE0();
      sub_1C277BA60();

      v25 += v26;
      --v23;
    }
    while (v23);
    a2 = v37;
    swift_bridgeObjectRelease();
    uint64_t v22 = v47;
    a7 = v38;
    uint64_t v15 = v35;
    uint64_t v14 = v36;
    uint64_t v28 = v44;
    uint64_t v21 = v34;
  }
  else
  {
    uint64_t v28 = v44;
  }
  uint64_t v29 = sub_1C2638268(v22, v21);
  swift_bridgeObjectRelease();
  uint64_t v46 = v29;
  *(void *)(swift_allocObject() + 16) = a2;
  unint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C26387E0(0, &qword_1EBB82C90, (uint64_t (*)(uint64_t))sub_1C26388B8, MEMORY[0x1E4F1AAE0]);
  sub_1C263B054(0, &qword_1EBB82E08, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel, MEMORY[0x1E4FBB320]);
  sub_1C263885C(&qword_1EBB82C88, &qword_1EBB82C90, v30);
  swift_bridgeObjectRetain();
  sub_1C277B500();
  swift_release();
  swift_release();
  sub_1C2638EEC(&qword_1EBB82AA8, (void (*)(uint64_t))sub_1C263B8EC);
  uint64_t v31 = sub_1C277B4E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v28, v14);
  *a7 = v31;
  return result;
}

uint64_t sub_1C2638EA8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C277A8A0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2638EEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void (*HKSharedSummary.init(model:pluginIdentifier:)(void *a1, uint64_t a2, uint64_t a3))(char *, uint64_t, void *)
{
  sub_1C263E478(0, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
  MEMORY[0x1F4188790](v6 - 8);
  os_log_type_t v65 = (char *)v63 - v7;
  sub_1C263E478(0, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v66 = (char *)v63 - v9;
  unint64_t v71 = (void *)sub_1C277AB60();
  uint64_t v10 = *(v71 - 1);
  MEMORY[0x1F4188790](v71);
  uint64_t v12 = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  v63[3] = a1[1];
  v63[4] = v13;
  uint64_t v14 = a1[4];
  int64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v67 = a1;
  if (v15)
  {
    v63[1] = a2;
    v63[2] = a3;
    uint64_t v72 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C264872C(0, v15, 0);
    uint64_t v18 = *(void (**)(char *, uint64_t, void *))(v10 + 16);
    uint64_t v17 = v10 + 16;
    uint64_t v19 = *(unsigned __int8 *)(v17 + 64);
    v63[0] = v14;
    uint64_t v20 = v14 + ((v19 + 32) & ~v19);
    uint64_t v69 = *(void *)(v17 + 56);
    uint64_t v70 = v18;
    os_log_type_t v68 = (void (**)(char *, void *))(v17 - 8);
    do
    {
      uint64_t v21 = v71;
      uint64_t v22 = v17;
      v70(v12, v20, v71);
      uint64_t v23 = (void *)sub_1C277AB50();
      id v24 = objc_msgSend(v23, sel_authorizationIdentifier, v63[0]);

      uint64_t v25 = sub_1C277B850();
      uint64_t v27 = v26;

      (*v68)(v12, v21);
      uint64_t v16 = v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C264872C(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v72;
      }
      unint64_t v29 = *(void *)(v16 + 16);
      unint64_t v28 = *(void *)(v16 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1C264872C(v28 > 1, v29 + 1, 1);
        uint64_t v16 = v72;
      }
      *(void *)(v16 + 16) = v29 + 1;
      uint64_t v30 = v16 + 16 * v29;
      *(void *)(v30 + 32) = v25;
      *(void *)(v30 + 40) = v27;
      v20 += v69;
      --v15;
      uint64_t v17 = v22;
    }
    while (v15);
    swift_bridgeObjectRelease();
    a1 = v67;
  }
  uint64_t v31 = (void *)sub_1C2648348(v16);
  swift_bridgeObjectRelease();
  unint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = (void (*)(char *, uint64_t, void *))sub_1C2649500(v32);
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67A60]), sel_init);
  uint64_t v35 = (uint64_t)v66;
  if (!v34)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C26E03F0();
    swift_allocError();
    *uint64_t v43 = 0;
    swift_willThrow();
LABEL_20:
    sub_1C2639748((uint64_t)a1);
    return v33;
  }
  uint64_t v36 = v34;
  unint64_t v71 = v31;
  uint64_t v37 = (void *)sub_1C277A770();
  objc_msgSend(v36, sel_setUserData_, v37);

  uint64_t v38 = type metadata accessor for PluginSharableModel();
  sub_1C263E40C((uint64_t)a1 + *(int *)(v38 + 40), v35, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
  uint64_t v39 = sub_1C277A9E0();
  uint64_t v40 = *(void *)(v39 - 8);
  int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v35, 1, v39);
  uint64_t v70 = v33;
  if (v41 == 1)
  {
    sub_1C263E520(v35, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
    uint64_t v42 = 0;
  }
  else
  {
    uint64_t v33 = (void (*)(char *, uint64_t, void *))sub_1C277A9D0();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v39);
    uint64_t v42 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v36, sel_setSourceTimeZoneIdentifier_, v42);

  uint64_t v44 = (uint64_t)v65;
  sub_1C263E40C((uint64_t)a1 + *(int *)(v38 + 44), (uint64_t)v65, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
  uint64_t v45 = sub_1C277A960();
  uint64_t v46 = *(void *)(v45 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45) == 1)
  {
    sub_1C263E520(v44, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
    uint64_t v47 = 0;
  }
  else
  {
    uint64_t v33 = (void (*)(char *, uint64_t, void *))sub_1C277A8C0();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
    uint64_t v47 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v36, sel_setSourceLocaleIdentifier_, v47);

  id v48 = objc_msgSend(v36, sel_data);
  if (!v48)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C26E03F0();
    swift_allocError();
    unsigned char *v61 = 1;
    swift_willThrow();

    goto LABEL_20;
  }
  unint64_t v49 = v48;
  uint64_t v50 = sub_1C277A780();
  unint64_t v52 = v51;

  os_log_type_t v68 = (void (**)(char *, void *))objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v66 = (char *)sub_1C277B820();
  swift_bridgeObjectRelease();
  uint64_t v53 = (void *)sub_1C277B820();
  uint64_t v72 = a1[2];
  sub_1C277C7B0();
  os_log_type_t v65 = (char *)sub_1C277B820();
  swift_bridgeObjectRelease();
  uint64_t v72 = a1[3];
  sub_1C277C7B0();
  uint64_t v69 = sub_1C277B820();
  swift_bridgeObjectRelease();
  uint64_t v64 = sub_1C277BBB0();
  swift_bridgeObjectRelease();
  sub_1C263E57C();
  sub_1C264AB48();
  unint64_t v54 = (void *)sub_1C277BBB0();
  unint64_t v71 = v54;
  swift_bridgeObjectRelease();
  uint64_t v55 = v50;
  unint64_t v56 = v52;
  unint64_t v57 = (void *)sub_1C277A770();
  id v59 = v65;
  uint64_t v58 = v66;
  id v60 = (void *)v64;
  uint64_t v33 = (void (*)(char *, uint64_t, void *))objc_msgSend(v68, sel_initWithPackage_name_version_compatibilityVersion_authorizationIdentifiers_objectTypes_summaryData_, v66, v53, v65, v69, v64, v54, v57);

  sub_1C263CC84(v55, v56);
  sub_1C2639748((uint64_t)v67);
  return v33;
}

uint64_t sub_1C2639748(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PluginSharableModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C26397A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PluginSharableModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Publisher<>.addModels(_:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v9 = *(void *)(a4 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2639AFC(255, &qword_1EBB82C80, MEMORY[0x1E4F1AAE0]);
  uint64_t v13 = v12;
  uint64_t v28 = v12;
  uint64_t v27 = sub_1C263B8A8(&qword_1EBB82C78, &qword_1EBB82C80, v11);
  uint64_t v29 = v13;
  uint64_t v30 = a4;
  uint64_t v31 = v27;
  uint64_t v32 = a5;
  v23[1] = a5;
  uint64_t v14 = sub_1C277B260();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v23 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v6, a4);
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a4;
  *((void *)v19 + 3) = a5;
  uint64_t v20 = v25;
  *((void *)v19 + 4) = v24;
  *((void *)v19 + 5) = v20;
  *((void *)v19 + 6) = v26;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v19[v18], (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C277B330();
  sub_1C263B054(0, &qword_1EBB82E08, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel, MEMORY[0x1E4FBB320]);
  sub_1C277B5A0();
  swift_release();
  swift_getWitnessTable();
  uint64_t v21 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v21;
}

void sub_1C2639AFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_1C263B054(255, &qword_1EBB82E08, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel, MEMORY[0x1E4FBB320]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_1C26532A4();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C2639BA4(void *a1, unint64_t a2, uint64_t a3, void (*a4)(unint64_t, void), uint64_t a5)
{
  uint64_t v10 = sub_1C277A8A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1C277B130();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EBB85FD0);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v31 = sub_1C277B100();
    int v32 = sub_1C277BD00();
    if (!os_log_type_enabled(v31, (os_log_type_t)v32))
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
LABEL_25:
      a4(a2, 0);
      return;
    }
    LODWORD(v50) = v32;
    uint64_t v53 = v11;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v55 = v49;
    *(_DWORD *)uint64_t v33 = 134218499;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1C277C5A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v34 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v54[0] = v34;
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2081;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1C277C5A0();
      uint64_t v51 = a5;
      unint64_t v52 = a4;
      if (v35) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v35 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v51 = a5;
      unint64_t v52 = a4;
      if (v35)
      {
LABEL_15:
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v36 = (id)MEMORY[0x1C875C230](0, a2);
        }
        else
        {
          if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v36 = *(id *)(a2 + 32);
        }
        uint64_t v37 = v36;
        swift_bridgeObjectRelease();
        id v38 = objc_msgSend(v37, sel_package);

        uint64_t v35 = sub_1C277B850();
        uint64_t v40 = v39;

        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v40 = 0;
LABEL_24:
    v54[0] = v35;
    v54[1] = v40;
    sub_1C263B0F8();
    uint64_t v42 = sub_1C277B860();
    v54[0] = sub_1C263FDFC(v42, v43, &v55);
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 22) = 2080;
    id v44 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
    sub_1C277A880();

    sub_1C2638EEC(&qword_1EBB82658, MEMORY[0x1E4F27990]);
    uint64_t v45 = sub_1C277C7B0();
    unint64_t v47 = v46;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v10);
    v54[0] = sub_1C263FDFC(v45, v47, &v55);
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v31, (os_log_type_t)v50, "[Transaction] %ld sharable model(s) from %{private}s added to transaction %s", (uint8_t *)v33, 0x20u);
    uint64_t v48 = v49;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v48, -1, -1);
    MEMORY[0x1C875D230](v33, -1, -1);

    a4 = v52;
    goto LABEL_25;
  }
  uint64_t v53 = v11;
  id v14 = a1;
  if (qword_1EBB85FE8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1C277B130();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBB85FD0);
  swift_bridgeObjectRetain();
  swift_retain();
  id v16 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  id v17 = a1;
  unint64_t v18 = sub_1C277B100();
  os_log_type_t v19 = sub_1C277BD20();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v50 = v10;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    v54[0] = v49;
    *(_DWORD *)uint64_t v20 = 134349570;
    uint64_t v51 = a5;
    unint64_t v52 = a4;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C277C5A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v55 = v21;
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    id v22 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
    sub_1C277A880();

    uint64_t v23 = sub_1C277A850();
    unint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v50);
    uint64_t v55 = sub_1C263FDFC(v23, v25, v54);
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2082;
    uint64_t v55 = (uint64_t)a1;
    id v26 = a1;
    sub_1C26532A4();
    uint64_t v27 = sub_1C277B870();
    uint64_t v55 = sub_1C263FDFC(v27, v28, v54);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2601000, v18, v19, "[Transaction] Could not add %{public}ld summaries to transaction %s. %{public}s", (uint8_t *)v20, 0x20u);
    uint64_t v29 = v49;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v29, -1, -1);
    MEMORY[0x1C875D230](v20, -1, -1);

    a4 = v52;
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  id v41 = a1;
  a4((unint64_t)a1, 1);
}

void sub_1C263A348(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void *, uint64_t), uint64_t a8, uint64_t a9)
{
  uint64_t v17 = sub_1C277A8A0();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = v21;
  uint64_t v94 = v18;
  if (a2)
  {
    id v23 = a1;
    unint64_t v24 = (void *)sub_1C277A610();
    unsigned __int8 v25 = objc_msgSend(v24, sel_hk_isObjectNotFoundError);

    if (v25)
    {
      if (qword_1EBB85FE8 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1C277B130();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EBB85FD0);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v27 = sub_1C277B100();
      os_log_type_t v28 = sub_1C277BD40();
      int v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v92 = a4;
        uint64_t v31 = v30;
        uint64_t v89 = swift_slowAlloc();
        v97[0] = v89;
        *(_DWORD *)uint64_t v31 = 136315650;
        uint64_t v91 = a8;
        id v32 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
        os_log_t v88 = v27;
        id v33 = v32;
        sub_1C277A880();

        uint64_t v34 = sub_1C277A850();
        int v87 = v29;
        uint64_t v35 = a5;
        unint64_t v37 = v36;
        (*(void (**)(char *, uint64_t))(v93 + 8))(v20, v94);
        uint64_t v95 = sub_1C263FDFC(v34, v37, v97);
        sub_1C277C0D0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 12) = 2080;
        uint64_t v95 = v92;
        uint64_t v96 = v35;
        sub_1C263B0F8();
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1C277B860();
        uint64_t v95 = sub_1C263FDFC(v38, v39, v97);
        sub_1C277C0D0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 22) = 2080;
        uint64_t v95 = a6;
        sub_1C263B054(0, &qword_1EBB82E68, (uint64_t (*)(uint64_t))sub_1C26818D4, MEMORY[0x1E4FBB718]);
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1C277B860();
        uint64_t v95 = sub_1C263FDFC(v40, v41, v97);
        sub_1C277C0D0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        os_log_t v42 = v88;
        _os_log_impl(&dword_1C2601000, v88, (os_log_type_t)v87, "[Transaction] No summaries were found for transaction %s with identifier %s and names %s", (uint8_t *)v31, 0x20u);
        uint64_t v43 = v89;
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v43, -1, -1);
        MEMORY[0x1C875D230](v31, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      a7((void *)MEMORY[0x1E4FBC860], 0);
    }
    else
    {
      if (qword_1EBB85FE8 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_1C277B130();
      __swift_project_value_buffer(v44, (uint64_t)qword_1EBB85FD0);
      sub_1C2701924(a1, 1);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C2701924(a1, 1);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_1C277B100();
      os_log_type_t v46 = sub_1C277BD20();
      int v47 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v48 = swift_slowAlloc();
        uint64_t v92 = a4;
        uint64_t v49 = v48;
        uint64_t v89 = swift_slowAlloc();
        v97[0] = v89;
        *(_DWORD *)uint64_t v49 = 136315906;
        uint64_t v91 = a8;
        id v50 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
        os_log_t v88 = v45;
        id v51 = v50;
        sub_1C277A880();

        uint64_t v52 = sub_1C277A850();
        int v87 = v47;
        uint64_t v53 = a5;
        unint64_t v55 = v54;
        (*(void (**)(char *, uint64_t))(v93 + 8))(v20, v94);
        uint64_t v95 = sub_1C263FDFC(v52, v55, v97);
        sub_1C277C0D0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 12) = 2080;
        uint64_t v95 = v92;
        uint64_t v96 = v53;
        sub_1C263B0F8();
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_1C277B860();
        uint64_t v95 = sub_1C263FDFC(v56, v57, v97);
        sub_1C277C0D0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 22) = 2080;
        uint64_t v95 = a6;
        sub_1C263B054(0, &qword_1EBB82E68, (uint64_t (*)(uint64_t))sub_1C26818D4, MEMORY[0x1E4FBB718]);
        swift_bridgeObjectRetain();
        uint64_t v58 = sub_1C277B860();
        uint64_t v95 = sub_1C263FDFC(v58, v59, v97);
        sub_1C277C0D0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 32) = 2082;
        uint64_t v95 = (uint64_t)a1;
        id v60 = a1;
        sub_1C26532A4();
        uint64_t v61 = sub_1C277B870();
        uint64_t v95 = sub_1C263FDFC(v61, v62, v97);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        sub_1C263B3A4(a1, 1);
        sub_1C263B3A4(a1, 1);
        uint64_t v45 = v88;
        _os_log_impl(&dword_1C2601000, v88, (os_log_type_t)v87, "[Transaction] Could not get summaries for transaction %s with identifier %s and names %s. %{public}s", (uint8_t *)v49, 0x2Au);
        uint64_t v63 = v89;
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v63, -1, -1);
        MEMORY[0x1C875D230](v49, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release_n();
        sub_1C263B3A4(a1, 1);
        sub_1C263B3A4(a1, 1);
      }

      id v83 = a1;
      a7(a1, 1);
      sub_1C263B3A4(a1, 1);
    }
    sub_1C263B3A4(a1, 1);
  }
  else
  {
    uint64_t v92 = a4;
    if (a9)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = a9;
    }
    else
    {
      swift_bridgeObjectRetain();
      if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1C277C5A0())
      {
        sub_1C269A994(MEMORY[0x1E4FBC860]);
        uint64_t v22 = v84;
      }
      else
      {
        uint64_t v22 = MEMORY[0x1E4FBC870];
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v64 = sub_1C263B150((unint64_t)a1, a6, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C263B3A4(a1, 0);
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v65 = sub_1C277B130();
    __swift_project_value_buffer(v65, (uint64_t)qword_1EBB85FD0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v66 = sub_1C277B100();
    int v67 = sub_1C277BD40();
    if (os_log_type_enabled(v66, (os_log_type_t)v67))
    {
      uint64_t v89 = a5;
      uint64_t v68 = swift_slowAlloc();
      uint64_t v86 = swift_slowAlloc();
      v97[0] = v86;
      *(_DWORD *)uint64_t v68 = 134219010;
      uint64_t v90 = a7;
      uint64_t v91 = a8;
      os_log_t v88 = v66;
      int v87 = v67;
      if (v64 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v69 = sub_1C277C5A0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v69 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v95 = v69;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2080;
      id v70 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
      sub_1C277A880();

      uint64_t v71 = sub_1C277A850();
      unint64_t v73 = v72;
      (*(void (**)(char *, uint64_t))(v93 + 8))(v20, v94);
      uint64_t v95 = sub_1C263FDFC(v71, v73, v97);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 22) = 2080;
      uint64_t v95 = v92;
      uint64_t v96 = v89;
      sub_1C263B0F8();
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_1C277B860();
      uint64_t v95 = sub_1C263FDFC(v74, v75, v97);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 32) = 2080;
      uint64_t v95 = a6;
      uint64_t v76 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
      sub_1C263B054(0, &qword_1EBB82E68, (uint64_t (*)(uint64_t))sub_1C26818D4, MEMORY[0x1E4FBB718]);
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_1C277B860();
      uint64_t v95 = sub_1C263FDFC(v77, v78, v97);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 42) = 2080;
      uint64_t v95 = a9;
      sub_1C263B054(0, &qword_1EBB82E78, (uint64_t (*)(uint64_t))sub_1C27018B0, v76);
      swift_bridgeObjectRetain();
      uint64_t v79 = sub_1C277B860();
      uint64_t v95 = sub_1C263FDFC(v79, v80, v97);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v81 = v88;
      _os_log_impl(&dword_1C2601000, v88, (os_log_type_t)v87, "[Transaction] Retrieved %ld summaries for transaction %s with identifier %s and filters %s %s", (uint8_t *)v68, 0x34u);
      uint64_t v82 = v86;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v82, -1, -1);
      MEMORY[0x1C875D230](v68, -1, -1);

      v90((void *)v64, 0);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      a7((void *)v64, 0);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1C263B054(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C263B0B8(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

void sub_1C263B0F8()
{
  if (!qword_1EBB85920)
  {
    unint64_t v0 = sub_1C277C0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB85920);
    }
  }
}

uint64_t sub_1C263B150(unint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      unint64_t v21 = a3 & 0xC000000000000001;
      id v20 = v4;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v9 = (id)MEMORY[0x1C875C230](v8, a1);
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_23;
        }
        if (a2)
        {
          id v4 = objc_msgSend(v9, sel_name);
          uint64_t v12 = sub_1C277B850();
          uint64_t v14 = v13;

          char v15 = sub_1C26400F4(v12, v14, a2);
          swift_bridgeObjectRelease();
          if (v21) {
            goto LABEL_12;
          }
        }
        else
        {
          char v15 = 1;
          if (v21)
          {
LABEL_12:
            if (!sub_1C277C1C0()) {
              goto LABEL_18;
            }
            goto LABEL_13;
          }
        }
        if (!*(void *)(a3 + 16))
        {
LABEL_18:
          if (v15) {
            goto LABEL_19;
          }
          goto LABEL_4;
        }
LABEL_13:
        id v16 = objc_msgSend(v10, sel_objectTypes, v20);
        sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E80);
        sub_1C264AB48();
        uint64_t v17 = sub_1C277BBC0();

        sub_1C263B3B0(a3, v17);
        id v4 = v18;
        swift_bridgeObjectRelease();
        if (v15 & 1) != 0 && (v4)
        {
LABEL_19:
          sub_1C277C390();
          id v4 = *(id *)(v23 + 16);
          sub_1C277C3D0();
          sub_1C277C3E0();
          sub_1C277C3A0();
          goto LABEL_5;
        }
LABEL_4:

LABEL_5:
        ++v8;
        if (v11 == v7) {
          return v23;
        }
      }
      if (v8 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      uint64_t v7 = sub_1C277C5A0();
      if (!v7) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v9 = *(id *)(a1 + 8 * v8 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

void sub_1C263B3A4(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

void sub_1C263B3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = sub_1C277C1C0();
    unint64_t v6 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_6:
    if (*(void *)(a1 + 16) < v5) {
      return;
    }
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (sub_1C277C1C0() < v5) {
    return;
  }
LABEL_7:
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1C277C170();
    sub_1C263E57C();
    sub_1C2635AD8((unint64_t *)&qword_1EBB84498, (void (*)(uint64_t))sub_1C263E57C);
    sub_1C277BC10();
    uint64_t v2 = v37;
    uint64_t v33 = v38;
    uint64_t v7 = v39;
    uint64_t v8 = v40;
    unint64_t v9 = v41;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v33 = v2 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v9 = v12 & *(void *)(v2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
  }
  sub_1C263E57C();
  int64_t v32 = (unint64_t)(v7 + 64) >> 6;
  uint64_t v35 = a1 + 56;
  while (1)
  {
    while (1)
    {
      unint64_t v14 = v9;
      uint64_t v15 = v8;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
      if (!sub_1C277C200()) {
        goto LABEL_46;
      }
      swift_dynamicCast();
      uint64_t v17 = v36;
      uint64_t v34 = v14;
      if (v6) {
        goto LABEL_14;
      }
LABEL_36:
      uint64_t v22 = v2;
      if (!*(void *)(a1 + 16)) {
        goto LABEL_43;
      }
      unint64_t v23 = v6;
      uint64_t v24 = sub_1C277C020();
      uint64_t v25 = -1 << *(unsigned char *)(a1 + 32);
      unint64_t v26 = v24 & ~v25;
      if (((*(void *)(v35 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
        goto LABEL_43;
      }
      id v27 = *(id *)(*(void *)(a1 + 48) + 8 * v26);
      char v28 = sub_1C277C030();

      if ((v28 & 1) == 0)
      {
        uint64_t v29 = ~v25;
        while (1)
        {
          unint64_t v26 = (v26 + 1) & v29;
          if (((*(void *)(v35 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
            break;
          }
          id v30 = *(id *)(*(void *)(a1 + 48) + 8 * v26);
          char v31 = sub_1C277C030();

          if (v31) {
            goto LABEL_42;
          }
        }
LABEL_43:

LABEL_44:
        sub_1C2648F6C();
        return;
      }
LABEL_42:

      uint64_t v2 = v22;
      unint64_t v6 = v23;
      unint64_t v9 = v34;
    }
    if (v9)
    {
      uint64_t v34 = (v9 - 1) & v9;
      unint64_t v16 = __clz(__rbit64(v9)) | (v8 << 6);
      goto LABEL_35;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      return;
    }
    if (v18 >= v32) {
      goto LABEL_46;
    }
    unint64_t v19 = *(void *)(v33 + 8 * v18);
    ++v8;
    if (!v19)
    {
      uint64_t v8 = v15 + 2;
      if (v15 + 2 >= v32) {
        goto LABEL_46;
      }
      unint64_t v19 = *(void *)(v33 + 8 * v8);
      if (!v19)
      {
        uint64_t v8 = v15 + 3;
        if (v15 + 3 >= v32) {
          goto LABEL_46;
        }
        unint64_t v19 = *(void *)(v33 + 8 * v8);
        if (!v19)
        {
          uint64_t v8 = v15 + 4;
          if (v15 + 4 >= v32) {
            goto LABEL_46;
          }
          unint64_t v19 = *(void *)(v33 + 8 * v8);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_34:
    uint64_t v34 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_35:
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v16);
    unint64_t v36 = v17;
    id v21 = v17;
    if (!v6) {
      goto LABEL_36;
    }
LABEL_14:
    char v13 = sub_1C277C210();

    unint64_t v9 = v34;
    if ((v13 & 1) == 0) {
      goto LABEL_44;
    }
  }
  uint64_t v20 = v15 + 5;
  while (v32 != v20)
  {
    unint64_t v19 = *(void *)(v33 + 8 * v20++);
    if (v19)
    {
      uint64_t v8 = v20 - 1;
      goto LABEL_34;
    }
  }
LABEL_46:
  sub_1C2648F6C();
}

void sub_1C263B7E0()
{
  if (!qword_1EBB82DA8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
    sub_1C26387E0(255, &qword_1EBB82D70, (uint64_t (*)(uint64_t))sub_1C26388B8, MEMORY[0x1E4F1AC28]);
    sub_1C263885C(&qword_1EBB82D68, &qword_1EBB82D70, v0);
    unint64_t v1 = sub_1C277B4B0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB82DA8);
    }
  }
}

uint64_t sub_1C263B8A8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2639AFC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C263B8EC()
{
  if (!qword_1EBB82AB0)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C26387E0(255, &qword_1EBB82C90, (uint64_t (*)(uint64_t))sub_1C26388B8, MEMORY[0x1E4F1AAE0]);
    sub_1C263B054(255, &qword_1EBB82E08, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel, MEMORY[0x1E4FBB320]);
    sub_1C263885C(&qword_1EBB82C88, &qword_1EBB82C90, v0);
    unint64_t v1 = sub_1C277B1E0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB82AB0);
    }
  }
}

id sub_1C263B9FC()
{
  v61[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1C263F5FC(0, (unint64_t *)&qword_1EBB84F30, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v1 = MEMORY[0x1F4188790](v0 - 8);
  uint64_t v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  uint64_t v56 = (char *)&v46 - v4;
  uint64_t v5 = sub_1C277A750();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  unint64_t v55 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v58 = (char *)&v46 - v9;
  MEMORY[0x1F4188790](v8);
  unint64_t v59 = (char *)&v46 - v10;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CB8]), sel_init);
  uint64_t v12 = (void *)sub_1C277A6A0();
  type metadata accessor for URLResourceKey(0);
  char v13 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = (void *)sub_1C277BA30();
  v61[0] = 0;
  id v15 = objc_msgSend(v11, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v12, v14, 0, v61);

  id v16 = v61[0];
  if (v15)
  {
    uint64_t v17 = sub_1C277BA40();
    id v18 = v16;

    v61[0] = v13;
    uint64_t v54 = *(void *)(v17 + 16);
    id v47 = v11;
    if (v54)
    {
      unint64_t v19 = 0;
      uint64_t v20 = (uint64_t)v56;
      uint64_t v50 = v17;
      uint64_t v51 = v57 + 48;
      id v21 = (void (**)(char *, uint64_t, uint64_t))(v57 + 32);
      uint64_t v48 = (void (**)(char *, uint64_t))(v57 + 8);
      uint64_t v49 = v3;
      uint64_t v52 = (void *)(v57 + 56);
      uint64_t v53 = (void (**)(char *, char *, uint64_t))(v57 + 16);
      unint64_t v46 = (v57 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      while (1)
      {
        if (v19 >= *(void *)(v17 + 16)) {
          __break(1u);
        }
        uint64_t v22 = v57;
        unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
        uint64_t v24 = *(void *)(v57 + 72);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v57 + 16))(v20, v17 + v23 + v24 * v19, v5);
        id v60 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56);
        v60(v20, 0, 1, v5);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v5) == 1)
        {
          char v13 = (void *)MEMORY[0x1E4FBC860];
          goto LABEL_22;
        }
        uint64_t v25 = *v21;
        (*v21)(v59, v20, v5);
        if (sub_1C277A650() == 0x6C7068746C616568 && v26 == 0xEC0000006E696775) {
          break;
        }
        char v27 = sub_1C277C7E0();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_12;
        }
        (*v48)(v59, v5);
LABEL_5:
        ++v19;
        uint64_t v20 = (uint64_t)v56;
        uint64_t v17 = v50;
        if (v54 == v19)
        {
          int64_t v32 = v60;
          char v13 = (void *)MEMORY[0x1E4FBC860];
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRelease();
LABEL_12:
      v25(v58, (uint64_t)v59, v5);
      char v28 = (char *)v61[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C263C188(0, *((void *)v28 + 2) + 1, 1);
        char v28 = (char *)v61[0];
      }
      unint64_t v30 = *((void *)v28 + 2);
      unint64_t v29 = *((void *)v28 + 3);
      if (v30 >= v29 >> 1)
      {
        sub_1C263C188(v29 > 1, v30 + 1, 1);
        char v28 = (char *)v61[0];
      }
      *((void *)v28 + 2) = v30 + 1;
      v25(&v28[v23 + v30 * v24], (uint64_t)v58, v5);
      v61[0] = v28;
      uint64_t v3 = v49;
      goto LABEL_5;
    }
    uint64_t v20 = (uint64_t)v56;
    int64_t v32 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56);
LABEL_21:
    id v60 = v32;
    v32(v20, 1, 1, v5);
LABEL_22:
    swift_bridgeObjectRelease();
    sub_1C263F58C(v20, (unint64_t *)&qword_1EBB84F30, MEMORY[0x1E4F276F0]);
    uint64_t v33 = v61[0];
    v61[0] = v13;
    uint64_t v34 = v33[2];
    uint64_t v52 = v33;
    if (v34)
    {
      uint64_t v58 = *(char **)(v57 + 16);
      unint64_t v59 = (char *)(v57 + 16);
      uint64_t v35 = (char *)v33 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
      uint64_t v36 = *(void *)(v57 + 72);
      uint64_t v56 = (char *)(v57 + 56);
      uint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
      uint64_t v53 = (void (**)(char *, char *, uint64_t))(v57 + 32);
      uint64_t v54 = v36;
      uint64_t v38 = (uint64_t (**)(char *, uint64_t))(v57 + 8);
      swift_retain();
      uint64_t v39 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v60;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v58)(v3, v35, v5);
        v39(v3, 0, 1, v5);
        if ((*v37)(v3, 1, v5) == 1) {
          break;
        }
        uint64_t v40 = v55;
        (*v53)(v55, v3, v5);
        id v41 = objc_allocWithZone(MEMORY[0x1E4F28B50]);
        os_log_t v42 = (void *)sub_1C277A6A0();
        id v43 = objc_msgSend(v41, sel_initWithURL_, v42);

        uint64_t v44 = (*v38)(v40, v5);
        if (v43)
        {
          MEMORY[0x1C875B930](v44);
          if (*(void *)(((unint64_t)v61[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v61[0] & 0xFFFFFFFFFFFFFF8)
                                                                                                 + 0x18) >> 1)
            sub_1C277BA90();
          sub_1C277BAE0();
          sub_1C277BA60();
        }
        v35 += v54;
        --v34;
        uint64_t v39 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v60;
        if (!v34) {
          goto LABEL_31;
        }
      }
    }
    else
    {
      swift_retain();
      uint64_t v39 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v60;
LABEL_31:
      v39(v3, 1, 1, v5);
    }
    swift_release();
    id v31 = v61[0];
    swift_release();
  }
  else
  {
    id v31 = v61[0];
    sub_1C277A620();

    swift_willThrow();
  }
  return v31;
}

void sub_1C263C13C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C263C188(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C263C1D0(a1, a2, a3, (void *)*v3, sub_1C263C41C, MEMORY[0x1E4F276F0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C263C1D0(char a1, int64_t a2, char a3, void *a4, void (*a5)(void), uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    id v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  a5(0);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  id v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  id v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

void sub_1C263C41C(uint64_t a1)
{
}

void PluginSharableModel.init(identifier:version:authorizationIdentifiers:objectTypes:data:sourceTimeZone:sourceLocale:sharedSummary:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v44 = a8;
  unint64_t v45 = a4;
  uint64_t v40 = a1;
  uint64_t v48 = a5;
  uint64_t v49 = a11;
  uint64_t v41 = a10;
  uint64_t v42 = a2;
  id v43 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
  sub_1C263E4CC(0, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v39 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = sub_1C277A960();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v38 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *a3;
  uint64_t v24 = a3[1];
  *(void *)(a9 + 64) = 0;
  uint64_t v25 = type metadata accessor for PluginSharableModel();
  uint64_t v26 = a9 + *(int *)(v25 + 40);
  uint64_t v27 = sub_1C277A9E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  uint64_t v28 = a9 + *(int *)(v25 + 44);
  unint64_t v46 = *(void (**)(void))(v21 + 56);
  uint64_t v47 = v28;
  v46();
  uint64_t v29 = v42;
  *(void *)a9 = v40;
  *(void *)(a9 + 8) = v29;
  *(void *)(a9 + 16) = v23;
  *(void *)(a9 + 24) = v24;
  uint64_t v30 = v44;
  uint64_t v31 = v41;
  uint64_t v32 = v48;
  *(void *)(a9 + 32) = v45;
  *(void *)(a9 + 40) = v32;
  *(void *)(a9 + 48) = a6;
  *(void *)(a9 + 56) = a7;
  uint64_t v48 = a6;
  unint64_t v45 = a7;
  sub_1C263D360(a6, a7);
  sub_1C263D520(v30, v26);
  sub_1C263D60C(v31, (uint64_t)v19, &qword_1EBB806C8, v43);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1C263CC84(v48, v45);
    uint64_t v33 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
    sub_1C263C8D0(v31, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
    sub_1C263C8D0(v30, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
    sub_1C263C8D0((uint64_t)v19, &qword_1EBB806C8, v33);
    uint64_t v34 = v47;
    sub_1C263C8D0(v47, &qword_1EBB806C8, v33);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v46)(v34, 1, 1, v20);
  }
  else
  {
    uint64_t v35 = v38;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v38, v19, v20);
    sub_1C277A8C0();
    uint64_t v36 = (uint64_t)v39;
    sub_1C277A8B0();
    sub_1C263CC84(v48, v45);
    uint64_t v37 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
    sub_1C263C8D0(v31, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
    sub_1C263C8D0(v30, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v35, v20);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v46)(v36, 0, 1, v20);
    sub_1C263D5A0(v36, v47, &qword_1EBB806C8, v37);
  }

  *(void *)(a9 + 64) = v49;
}

uint64_t sub_1C263C860(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C263D41C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C263C8D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C263E4CC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t destroy for PluginFeedItem(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  sub_1C263CCDC(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(a1 + 64);
  if (v4 >> 60 != 15) {
    sub_1C263CC84(*(void *)(a1 + 56), v4);
  }
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(a1 + 96);
  if (v5 >> 60 != 15) {
    sub_1C263CC84(*(void *)(a1 + 88), v5);
  }
  uint64_t v6 = a1 + a2[11];
  uint64_t v7 = type metadata accessor for RelevantDateInterval();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = sub_1C277A520();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[27]))
  {
    return swift_release();
  }
  return result;
}

uint64_t destroy for PluginSharableModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C263CC84(*(void *)(a1 + 48), *(void *)(a1 + 56));

  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1C277A9E0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 44);
  uint64_t v8 = sub_1C277A960();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    int64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_1C263CC84(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1C263CCDC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PluginFeedItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_1C263D4D4(v7, v8, v9);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  uint64_t v11 = (_OWORD *)(a2 + 56);
  unint64_t v12 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 56) = *v11;
  }
  else
  {
    uint64_t v13 = *(void *)v11;
    sub_1C263D360(v13, v12);
    *(void *)(a1 + 56) = v13;
    *(void *)(a1 + 64) = v12;
  }
  uint64_t v14 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v14;
  uint64_t v15 = (_OWORD *)(a2 + 88);
  unint64_t v16 = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 88) = *v15;
  }
  else
  {
    uint64_t v17 = *(void *)v15;
    sub_1C263D360(v17, v16);
    *(void *)(a1 + 88) = v17;
    *(void *)(a1 + 96) = v16;
  }
  uint64_t v18 = a3[11];
  uint64_t v19 = (char *)(a1 + v18);
  uint64_t v20 = (char *)(a2 + v18);
  uint64_t v21 = type metadata accessor for RelevantDateInterval();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    sub_1C263D4EC(0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = sub_1C277A520();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v19, v20, v24);
    *(void *)&v19[*(int *)(v21 + 20)] = *(void *)&v20[*(int *)(v21 + 20)];
    *(void *)&v19[*(int *)(v21 + 24)] = *(void *)&v20[*(int *)(v21 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v25 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  uint64_t v26 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v56 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v56;
  uint64_t v29 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  uint64_t v30 = a3[18];
  uint64_t v31 = a3[19];
  uint64_t v57 = *(void **)(a2 + v30);
  *(void *)(a1 + v30) = v57;
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  uint64_t v55 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v55;
  uint64_t v34 = a3[20];
  uint64_t v35 = a3[21];
  uint64_t v36 = (void *)(a1 + v34);
  uint64_t v37 = (void *)(a2 + v34);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  uint64_t v39 = (void *)(a1 + v35);
  uint64_t v40 = (void *)(a2 + v35);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = a3[23];
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v42) = *(unsigned char *)(a2 + v42);
  uint64_t v43 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v43) = *(unsigned char *)(a2 + v43);
  uint64_t v44 = a3[26];
  uint64_t v45 = a3[27];
  unint64_t v46 = (void *)(a1 + v44);
  uint64_t v47 = (void *)(a2 + v44);
  uint64_t v48 = v47[1];
  *unint64_t v46 = *v47;
  v46[1] = v48;
  uint64_t v49 = (void *)(a1 + v45);
  uint64_t v50 = a2 + v45;
  uint64_t v51 = *(void *)(a2 + v45);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v52 = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v51)
  {
    uint64_t v53 = *(void *)(v50 + 8);
    void *v49 = v51;
    v49[1] = v53;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
  }
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  return a1;
}

uint64_t type metadata accessor for RelevantDateInterval()
{
  uint64_t result = qword_1EBB86130;
  if (!qword_1EBB86130) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RelevantDateInterval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2771540);
}

uint64_t initializeWithCopy for PluginSharableModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  unint64_t v9 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C263D360(v8, v9);
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v10;
  uint64_t v11 = *(int *)(a3 + 40);
  unint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_1C277A9E0();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  id v17 = v10;
  if (v16(v13, 1, v14))
  {
    sub_1C263E4CC(0, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v19 = *(int *)(a3 + 44);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = sub_1C277A960();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    sub_1C263E4CC(0, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

uint64_t sub_1C263D360(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void sub_1C263D3B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C263D41C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C263D480(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277C0B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C263D4D4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1C263D4EC(uint64_t a1)
{
}

uint64_t sub_1C263D520(uint64_t a1, uint64_t a2)
{
  sub_1C263E4CC(0, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C263D5A0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C263E4CC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C263D60C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C263E4CC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t PluginSharableModel.init(sharedSummary:)@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C263E478(0, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v106 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v103 = (uint64_t)&v95 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v107 = (char *)&v95 - v10;
  sub_1C263E478(0, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v105 = (uint64_t)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v108 = (uint64_t)&v95 - v14;
  id v15 = objc_msgSend(a1, sel_name);
  uint64_t v104 = sub_1C277B850();
  uint64_t v17 = v16;

  unint64_t v114 = MEMORY[0x1E4FBC860];
  uint64_t v113 = MEMORY[0x1E4FBC860];
  id v18 = objc_msgSend(a1, sel_authorizationIdentifiers);
  uint64_t v19 = sub_1C277BBC0();

  sub_1C263F3D4(v19, &v114, &v113);
  uint64_t v20 = v2;
  swift_bridgeObjectRelease();
  if (*(void *)(v113 + 16))
  {
    uint64_t v109 = v17;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C277B130();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EBB86280);
    uint64_t v22 = sub_1C277B100();
    os_log_type_t v23 = sub_1C277BD20();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v102 = v2;
      uint64_t v25 = v24;
      uint64_t v100 = swift_slowAlloc();
      id v101 = a1;
      *(void *)&long long v112 = v100;
      *(_DWORD *)uint64_t v25 = 136315651;
      uint64_t v110 = sub_1C263FDFC(0xD000000000000013, 0x80000001C278CD50, (uint64_t *)&v112);
      sub_1C277C0D0();
      *(_WORD *)(v25 + 12) = 2048;
      swift_beginAccess();
      *(void *)&long long v111 = *(void *)(v113 + 16);
      sub_1C277C0D0();
      *(_WORD *)(v25 + 22) = 2081;
      uint64_t v26 = swift_bridgeObjectRetain();
      uint64_t v27 = a2;
      uint64_t v28 = MEMORY[0x1C875B960](v26, MEMORY[0x1E4FBB1A0]);
      unint64_t v30 = v29;
      swift_bridgeObjectRelease();
      uint64_t v31 = v28;
      a2 = v27;
      *(void *)&long long v111 = sub_1C263FDFC(v31, v30, (uint64_t *)&v112);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v22, v23, "%s Could not decode %ld authorization categories %{private}s", (uint8_t *)v25, 0x20u);
      uint64_t v32 = v100;
      swift_arrayDestroy();
      a1 = v101;
      MEMORY[0x1C875D230](v32, -1, -1);
      uint64_t v33 = v25;
      uint64_t v20 = v102;
      MEMORY[0x1C875D230](v33, -1, -1);
    }

    uint64_t v17 = v109;
  }
  id v34 = objc_msgSend(a1, sel_objectTypes);
  sub_1C263E57C();
  sub_1C264AB48();
  uint64_t v35 = sub_1C277BBC0();

  uint64_t v36 = sub_1C263E79C(v35);
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(a1, sel_summaryData);
  uint64_t v38 = sub_1C277A780();
  unint64_t v40 = v39;

  id v41 = objc_allocWithZone(MEMORY[0x1E4F67A60]);
  uint64_t v42 = (void *)sub_1C277A770();
  sub_1C263CC84(v38, v40);
  id v43 = objc_msgSend(v41, sel_initWithData_, v42);

  if (!v43)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C26E03F0();
    swift_allocError();
    *uint64_t v53 = 0;
    swift_willThrow();
    goto LABEL_15;
  }
  if ((objc_msgSend(v43, sel_hasUserData) & 1) == 0
    || (id v44 = objc_msgSend(v43, sel_userData)) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C26E03F0();
    swift_allocError();
    *id v52 = 2;
    swift_willThrow();

LABEL_15:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v45 = v44;
  uint64_t v46 = sub_1C277A780();
  unint64_t v97 = v47;

  unsigned int v48 = objc_msgSend(v43, sel_hasSourceTimeZoneIdentifier);
  uint64_t v100 = v36;
  id v101 = v43;
  uint64_t v98 = v46;
  uint64_t v99 = a2;
  if (v48 && (id v49 = objc_msgSend(v43, sel_sourceTimeZoneIdentifier)) != 0)
  {
    uint64_t v50 = v49;
    sub_1C277B850();

    sub_1C277A9C0();
    id v43 = v101;
    swift_bridgeObjectRelease();
    uint64_t v51 = (uint64_t)v107;
  }
  else
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_1C277B130();
    __swift_project_value_buffer(v55, (uint64_t)qword_1EBB86280);
    uint64_t v56 = sub_1C277B100();
    os_log_type_t v57 = sub_1C277BD20();
    if (os_log_type_enabled(v56, v57))
    {
      id v58 = a1;
      unint64_t v59 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      *(void *)&long long v112 = v60;
      *(_DWORD *)unint64_t v59 = 136315138;
      *(void *)&long long v111 = sub_1C263FDFC(0xD000000000000013, 0x80000001C278CD50, (uint64_t *)&v112);
      id v43 = v101;
      sub_1C277C0D0();
      _os_log_impl(&dword_1C2601000, v56, v57, "[%s] Could not access sourceTimeZoneIdentifier", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v60, -1, -1);
      uint64_t v61 = v59;
      a1 = v58;
      MEMORY[0x1C875D230](v61, -1, -1);
    }

    uint64_t v51 = (uint64_t)v107;
    uint64_t v62 = sub_1C277A9E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v108, 1, 1, v62);
  }
  unsigned int v63 = objc_msgSend(v43, sel_hasSourceLocaleIdentifier);
  uint64_t v102 = v20;
  uint64_t v109 = v17;
  if (v63 && (id v64 = objc_msgSend(v43, sel_sourceLocaleIdentifier)) != 0)
  {
    uint64_t v65 = v64;
    uint64_t v66 = sub_1C277B850();
    unint64_t v68 = v67;

    swift_bridgeObjectRetain();
    uint64_t v96 = v66;
    sub_1C277A8B0();
    uint64_t v69 = sub_1C277A960();
    uint64_t v70 = *(void *)(v69 - 8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v51, 0, 1, v69);
    uint64_t v71 = v103;
    sub_1C263E40C(v51, v103, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v71, 1, v69) == 1)
    {
      id v72 = a1;
      sub_1C263E520(v71, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v73 = sub_1C277B130();
      __swift_project_value_buffer(v73, (uint64_t)qword_1EBB86280);
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_1C277B100();
      os_log_type_t v75 = sub_1C277BD20();
      if (os_log_type_enabled(v74, v75))
      {
        unint64_t v76 = v68;
        uint64_t v77 = swift_slowAlloc();
        uint64_t v78 = swift_slowAlloc();
        *(void *)&long long v112 = v78;
        *(_DWORD *)uint64_t v77 = 136315394;
        *(void *)&long long v111 = type metadata accessor for PluginSharableModel();
        sub_1C26E0444();
        uint64_t v79 = sub_1C277B860();
        *(void *)&long long v111 = sub_1C263FDFC(v79, v80, (uint64_t *)&v112);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v77 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&long long v111 = sub_1C263FDFC(v96, v76, (uint64_t *)&v112);
        sub_1C277C0D0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C2601000, v74, v75, "[%s]: Unable to map locale identifier to locale: %s", (uint8_t *)v77, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v78, -1, -1);
        MEMORY[0x1C875D230](v77, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a1 = v72;
      uint64_t v51 = (uint64_t)v107;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1C263E520(v71, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
    }
  }
  else
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v81 = sub_1C277B130();
    __swift_project_value_buffer(v81, (uint64_t)qword_1EBB86280);
    uint64_t v82 = sub_1C277B100();
    os_log_type_t v83 = sub_1C277BD20();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = (uint8_t *)swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      *(void *)&long long v112 = v85;
      *(_DWORD *)uint64_t v84 = 136315138;
      *(void *)&long long v111 = sub_1C263FDFC(0xD000000000000013, 0x80000001C278CD50, (uint64_t *)&v112);
      sub_1C277C0D0();
      _os_log_impl(&dword_1C2601000, v82, v83, "[%s] No sourceLocaleIdentifier was provided", v84, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v85, -1, -1);
      MEMORY[0x1C875D230](v84, -1, -1);
    }

    uint64_t v86 = sub_1C277A960();
    uint64_t v51 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v107, 1, 1, v86);
  }
  HKSharedSummary.modelVersion.getter();
  long long v111 = v112;
  unint64_t v87 = v114;
  os_log_t v88 = (void (*)(uint64_t))MEMORY[0x1E4F27D68];
  uint64_t v89 = v108;
  uint64_t v90 = v105;
  sub_1C263E40C(v108, v105, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
  uint64_t v91 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
  uint64_t v92 = v106;
  sub_1C263E40C(v51, v106, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
  swift_bridgeObjectRetain();
  uint64_t v93 = v51;
  id v94 = a1;
  PluginSharableModel.init(identifier:version:authorizationIdentifiers:objectTypes:data:sourceTimeZone:sourceLocale:sharedSummary:)(v104, v109, (uint64_t *)&v111, v87, v100, v98, v97, v90, v99, v92, (uint64_t)a1);

  sub_1C263E520(v93, &qword_1EBB806C8, v91);
  sub_1C263E520(v89, &qword_1EBB859A8, v88);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C263E40C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C263E478(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C263E478(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277C0B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C263E4CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277C0B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C263E520(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C263E478(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C263E57C()
{
  unint64_t result = qword_1EBB85E80;
  if (!qword_1EBB85E80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85E80);
  }
  return result;
}

uint64_t sub_1C263E5BC(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = sub_1C277C1C0();
    if (v8) {
      goto LABEL_3;
    }
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_3:
  if (v8 <= 0)
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1C263E704(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v9 = (void *)swift_allocObject();
    int64_t v10 = _swift_stdlib_malloc_size(v9);
    uint64_t v11 = v10 - 32;
    if (v10 < 32) {
      uint64_t v11 = v10 - 25;
    }
    v9[2] = v8;
    v9[3] = (2 * (v11 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C2648F74(&v14, v9 + 4, v8, a1, a2, a3, a4);
  uint64_t result = sub_1C2648F6C();
  if (v12 == (void *)v8) {
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

void sub_1C263E704(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C263E750(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C263E79C(uint64_t a1)
{
  return sub_1C263E5BC(a1, (unint64_t *)&qword_1EBB85E80, 0x1E4F2B2C0, (unint64_t *)&qword_1EBB84498);
}

uint64_t HKSharedSummary.modelVersion.getter()
{
  swift_getObjectType();
  id v1 = objc_msgSend(v0, sel_version);
  Swift::Int v2 = sub_1C277B850();
  unint64_t v4 = v3;

  id v5 = objc_msgSend(v0, sel_compatibilityVersion);
  uint64_t v6 = sub_1C277B850();
  unint64_t v8 = v7;

  sub_1C263E88C(v2, v4, v6, v8);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1C263E88C(Swift::Int result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = HIBYTE(a2) & 0xF;
  uint64_t v50 = result;
  uint64_t v10 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = result & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v12 = &qword_1EBB85FF0[2];
  if (!v11) {
    goto LABEL_35;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    Swift::Int v16 = (Swift::Int)sub_1C26DFBA0(v50, a2, 10);
    char v47 = v46;
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0) {
      goto LABEL_40;
    }
    goto LABEL_35;
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    v51[0] = result;
    v51[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (v9)
      {
        if (v9 != 1 && (BYTE1(result) - 48) <= 9u)
        {
          Swift::Int v16 = (BYTE1(result) - 48);
          if (v9 == 2) {
            goto LABEL_40;
          }
          if ((BYTE2(result) - 48) <= 9u)
          {
            Swift::Int v16 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
            uint64_t v17 = v9 - 3;
            if (v9 == 3) {
              goto LABEL_40;
            }
            id v18 = (unsigned __int8 *)v51 + 3;
            while (1)
            {
              unsigned int v19 = *v18 - 48;
              if (v19 > 9) {
                break;
              }
              uint64_t v20 = 10 * v16;
              if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
                break;
              }
              Swift::Int v16 = v20 + v19;
              if (__OFADD__(v20, v19)) {
                break;
              }
              ++v18;
              if (!--v17) {
                goto LABEL_40;
              }
            }
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      if (result != 45)
      {
        if (v9 && (result - 48) <= 9u)
        {
          Swift::Int v16 = (result - 48);
          if (v9 == 1) {
            goto LABEL_40;
          }
          if ((BYTE1(result) - 48) <= 9u)
          {
            Swift::Int v16 = 10 * (result - 48) + (BYTE1(result) - 48);
            uint64_t v38 = v9 - 2;
            if (v9 == 2) {
              goto LABEL_40;
            }
            unint64_t v39 = (unsigned __int8 *)v51 + 2;
            while (1)
            {
              unsigned int v40 = *v39 - 48;
              if (v40 > 9) {
                break;
              }
              uint64_t v41 = 10 * v16;
              if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
                break;
              }
              Swift::Int v16 = v41 + v40;
              if (__OFADD__(v41, v40)) {
                break;
              }
              ++v39;
              if (!--v38) {
                goto LABEL_40;
              }
            }
          }
        }
        goto LABEL_35;
      }
      if (v9)
      {
        if (v9 != 1 && (BYTE1(result) - 48) <= 9u)
        {
          if (v9 == 2)
          {
            Swift::Int v16 = -(uint64_t)(BYTE1(result) - 48);
            goto LABEL_40;
          }
          if ((BYTE2(result) - 48) <= 9u)
          {
            Swift::Int v16 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
            uint64_t v42 = v9 - 3;
            if (v9 == 3) {
              goto LABEL_40;
            }
            id v43 = (unsigned __int8 *)v51 + 3;
            while (1)
            {
              unsigned int v44 = *v43 - 48;
              if (v44 > 9) {
                break;
              }
              uint64_t v45 = 10 * v16;
              if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
                break;
              }
              Swift::Int v16 = v45 - v44;
              if (__OFSUB__(v45, v44)) {
                break;
              }
              ++v43;
              if (!--v42) {
                goto LABEL_40;
              }
            }
          }
        }
LABEL_35:
        if (qword_1EBB86260 != -1) {
          swift_once();
        }
        uint64_t v21 = sub_1C277B130();
        __swift_project_value_buffer(v21, (uint64_t)qword_1EBB86280);
        swift_bridgeObjectRetain_n();
        uint64_t v22 = sub_1C277B100();
        os_log_type_t v23 = sub_1C277BD20();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = swift_slowAlloc();
          uint64_t v48 = swift_slowAlloc();
          uint64_t v52 = v48;
          *(_DWORD *)uint64_t v24 = 136315394;
          v51[0] = v5;
          swift_getMetatypeMetadata();
          uint64_t v25 = sub_1C277B860();
          v51[0] = sub_1C263FDFC(v25, v26, &v52);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v24 + 12) = 2080;
          swift_bridgeObjectRetain();
          v51[0] = sub_1C263FDFC(v50, a2, &v52);
          Swift::Int v16 = -1;
          sub_1C277C0D0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C2601000, v22, v23, "[%s]: Unable to determine current version number from: %s", (uint8_t *)v24, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v48, -1, -1);
          uint64_t v27 = v24;
          uint64_t v12 = qword_1EBB85FF0 + 16;
          MEMORY[0x1C875D230](v27, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          Swift::Int v16 = -1;
        }
        goto LABEL_40;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  if ((result & 0x1000000000000000) != 0) {
    uint64_t v13 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    uint64_t v13 = (unsigned __int8 *)sub_1C277C380();
  }
  uint64_t v14 = sub_1C26DFC88(v13, v10, 10);
  if (v15) {
    goto LABEL_35;
  }
  Swift::Int v16 = (Swift::Int)v14;
LABEL_40:
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C263F184(a3, a4);
  if (v29)
  {
    if (v12[76] != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1C277B130();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EBB86280);
    swift_bridgeObjectRetain_n();
    uint64_t v32 = sub_1C277B100();
    os_log_type_t v33 = sub_1C277BD20();
    if (os_log_type_enabled(v32, v33))
    {
      Swift::Int v30 = -1;
      uint64_t v34 = v5;
      uint64_t v35 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v52 = v49;
      *(_DWORD *)uint64_t v35 = 136315394;
      v51[0] = v34;
      swift_getMetatypeMetadata();
      uint64_t v36 = sub_1C277B860();
      v51[0] = sub_1C263FDFC(v36, v37, &v52);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      v51[0] = sub_1C263FDFC(v50, a2, &v52);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2601000, v32, v33, "[%s]: Unable to determine minimum supported version number from: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v49, -1, -1);
      MEMORY[0x1C875D230](v35, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      Swift::Int v30 = -1;
    }
  }
  else
  {
    Swift::Int v30 = v28;
  }
  return SharableModelVersion.init(latestSupported:minimumSupported:)(v16, v30).latestSupported;
}

HealthPlatform::SharableModelVersion __swiftcall SharableModelVersion.init(latestSupported:minimumSupported:)(Swift::Int latestSupported, Swift::Int minimumSupported)
{
  Swift::Int v3 = minimumSupported;
  Swift::Int v4 = latestSupported;
  uint64_t v5 = v2;
  if (latestSupported < minimumSupported)
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1C277B130();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBB86280);
    unint64_t v7 = sub_1C277B100();
    os_log_type_t v8 = sub_1C277BD20();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315650;
      uint64_t v14 = v10;
      sub_1C26F4E94();
      uint64_t v11 = sub_1C277B860();
      sub_1C263FDFC(v11, v12, &v14);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2048;
      sub_1C277C0D0();
      *(_WORD *)(v9 + 22) = 2048;
      sub_1C277C0D0();
      _os_log_impl(&dword_1C2601000, v7, v8, "[%s]: error: Malformed version with %ld < %ld, returning false version", (uint8_t *)v9, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v10, -1, -1);
      MEMORY[0x1C875D230](v9, -1, -1);
    }

    Swift::Int v3 = -1;
    Swift::Int v4 = -1;
  }
  *uint64_t v5 = v4;
  v5[1] = v3;
  result.minimumSupported = minimumSupported;
  result.latestSupported = latestSupported;
  return result;
}

uint64_t sub_1C263F184(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_1C277C380();
      }
      uint64_t v7 = (uint64_t)sub_1C26DFC88(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        char v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        unsigned int v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_1C26DFBA0(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_1C263F3D4(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v7 = a1 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a1 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    unsigned int v19 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v20 = v19[1];
    v22[0] = *v19;
    v22[1] = v20;
    swift_bridgeObjectRetain();
    sub_1C263F688(v22, a2, a3);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    if (!v17)
    {
      int64_t v18 = v13 + 1;
      if (v13 + 1 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (v17) {
        goto LABEL_14;
      }
      int64_t v18 = v13 + 2;
      if (v13 + 2 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (v17) {
        goto LABEL_14;
      }
      int64_t v18 = v13 + 3;
      if (v13 + 3 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (v17)
      {
LABEL_14:
        int64_t v13 = v18;
        goto LABEL_15;
      }
      int64_t v21 = v13 + 4;
      if (v13 + 4 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v21);
      v13 += 4;
      if (!v17) {
        break;
      }
    }
LABEL_15:
    unint64_t v10 = (v17 - 1) & v17;
  }
  while (1)
  {
    int64_t v13 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v13 >= v11) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v21;
    if (v17) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C263F58C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C263F5FC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C263F5FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

uint64_t sub_1C263F688(uint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  Swift::Int v30 = a3;
  uint64_t v31 = a2;
  sub_1C263E478(0, &qword_1EBB829B0, MEMORY[0x1E4F66840]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v30 - v5;
  uint64_t v7 = sub_1C277AB60();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  int64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  int64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = *a1;
  uint64_t v15 = a1[1];
  id v16 = objc_allocWithZone(MEMORY[0x1E4F2B4D8]);
  swift_bridgeObjectRetain();
  unint64_t v17 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_initWithAuthorizationIdentifier_, v17);

  sub_1C277AB70();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1C263E520((uint64_t)v6, &qword_1EBB829B0, MEMORY[0x1E4F66840]);
    int64_t v18 = v30;
    unsigned int v19 = (void *)*v30;
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *int64_t v18 = (uint64_t)v19;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C26404F8(0, v19[2] + 1, 1, v19);
      unsigned int v19 = (void *)result;
      *int64_t v18 = result;
    }
    unint64_t v22 = v19[2];
    unint64_t v21 = v19[3];
    if (v22 >= v21 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C26404F8((void *)(v21 > 1), v22 + 1, 1, v19);
      unsigned int v19 = (void *)result;
      *int64_t v18 = result;
    }
    v19[2] = v22 + 1;
    os_log_type_t v23 = &v19[2 * v22];
    v23[4] = v14;
    v23[5] = v15;
  }
  else
  {
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v24(v13, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    uint64_t v25 = v31;
    unint64_t v26 = *v31;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v25 = v26;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v26 = sub_1C263FA08(0, *(void *)(v26 + 16) + 1, 1, v26);
      *uint64_t v25 = v26;
    }
    unint64_t v29 = *(void *)(v26 + 16);
    unint64_t v28 = *(void *)(v26 + 24);
    if (v29 >= v28 >> 1)
    {
      unint64_t v26 = sub_1C263FA08(v28 > 1, v29 + 1, 1, v26);
      unint64_t *v31 = v26;
    }
    *(void *)(v26 + 16) = v29 + 1;
    v24((char *)(v26+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v29), v11, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  return result;
}

uint64_t sub_1C263FA08(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C2640DB8(a1, a2, a3, a4, &qword_1EBB83160, MEMORY[0x1E4F66840], MEMORY[0x1E4F66840], MEMORY[0x1E4F66840]);
}

void sub_1C263FA50(uint64_t a1)
{
}

void *sub_1C263FA84(uint64_t a1, uint64_t (*a2)(void, void, _OWORD *))
{
  swift_retain();
  sub_1C277C440();
  swift_release();
  sub_1C277C620();
  if (*((void *)&v15 + 1))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      long long v11 = v13;
      v12[0] = v14;
      v12[1] = v15;
      uint64_t v5 = a2(v13, *((void *)&v13 + 1), v12);
      uint64_t v7 = v6;
      sub_1C263FBF4((uint64_t)&v11, (uint64_t (*)(void))sub_1C263FCB0);
      if (v7)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1C26404F8(0, v3[2] + 1, 1, v3);
        }
        unint64_t v9 = v3[2];
        unint64_t v8 = v3[3];
        if (v9 >= v8 >> 1) {
          uint64_t v3 = sub_1C26404F8((void *)(v8 > 1), v9 + 1, 1, v3);
        }
        long long v3[2] = v9 + 1;
        uint64_t v4 = &v3[2 * v9];
        v4[4] = v5;
        v4[5] = v7;
      }
      sub_1C277C620();
    }
    while (*((void *)&v15 + 1));
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_release();
  return v3;
}

uint64_t sub_1C263FBF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C263FC54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C263D480(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C263FCB0()
{
  if (!qword_1EBB85918)
  {
    sub_1C26488D8(255, (unint64_t *)&qword_1EBB85920, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB85918);
    }
  }
}

uint64_t sub_1C263FD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C263FD4C(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1C263FD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a1;
  if (a2)
  {
    if (sub_1C26400F4(a1, a2, a4))
    {
      return 0;
    }
    else
    {
      uint64_t v9 = v4;
      uint64_t v10 = a2;
      swift_bridgeObjectRetain();
      sub_1C277B8D0();
      sub_1C263FED0(a3, (uint64_t)&v8);
      sub_1C277B860();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  return v4;
}

uint64_t sub_1C263FDFC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1C263FF38(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1C263FED0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1C263FED0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1C263FED0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_1C263FF38(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1C277C0E0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1C264022C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1C277C380();
  if (!v8)
  {
    sub_1C277C550();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1C277C610();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1C26400F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1C277C8C0();
    sub_1C277B8B0();
    uint64_t v6 = sub_1C277C910();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1C277C7E0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          id v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1C277C7E0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1C264022C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1C26402C4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C2605848(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1C2605848(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1C26402C4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1C264043C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1C277C2E0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1C277C550();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1C277B8E0();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1C277C610();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1C277C550();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1C264043C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C26404A0();
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  long long v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void sub_1C26404A0()
{
  if (!qword_1EBB84A70)
  {
    unint64_t v0 = sub_1C277C7C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84A70);
    }
  }
}

void *sub_1C26404F8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2640614(0, (unint64_t *)&qword_1EBB85EA0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      long long v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C26406D0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_1C2640614(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C277C7C0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void destroy for UserProfile(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C277A8A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  char v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_1C26406D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C26407C4@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  sub_1C26415EC(0, &qword_1EBB827F8, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)v23 - v5;
  uint64_t v7 = type metadata accessor for PluginSharableModel();
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v30 = (uint64_t)v23 - v11;
  uint64_t v12 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
LABEL_18:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v17 = MEMORY[0x1E4FBC860];
LABEL_19:
    *a2 = v17;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C277C5A0();
  uint64_t v13 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_3:
  if (v13 >= 1)
  {
    v23[0] = a2;
    uint64_t v16 = 0;
    uint64_t v25 = &v37;
    uint64_t v34 = (void (**)(char *, void, uint64_t, uint64_t))(v31 + 56);
    unint64_t v35 = v12 & 0xC000000000000001;
    os_log_type_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    unint64_t v17 = MEMORY[0x1E4FBC860];
    *(void *)&long long v15 = 136446210;
    long long v24 = v15;
    v23[1] = MEMORY[0x1E4FBC840] + 8;
    uint64_t v32 = v13;
    uint64_t v28 = v7;
    unint64_t v29 = v6;
    uint64_t v26 = v12;
    uint64_t v27 = v10;
    do
    {
      unint64_t v36 = v17;
      if (v35) {
        id v18 = (id)MEMORY[0x1C875C230](v16, v12);
      }
      else {
        id v18 = *(id *)(v12 + 8 * v16 + 32);
      }
      id v19 = v18;
      PluginSharableModel.init(sharedSummary:)(v19, (uint64_t)v6);
      (*v34)(v6, 0, 1, v7);

      if ((*v33)(v6, 1, v7) == 1)
      {
        sub_1C272A164((uint64_t)v6);
        unint64_t v17 = v36;
      }
      else
      {
        uint64_t v20 = v30;
        sub_1C2640CE0((uint64_t)v6, v30);
        sub_1C2640CE0(v20, (uint64_t)v10);
        unint64_t v17 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v17 = sub_1C2641214(0, *(void *)(v17 + 16) + 1, 1, v17);
        }
        unint64_t v22 = *(void *)(v17 + 16);
        unint64_t v21 = *(void *)(v17 + 24);
        if (v22 >= v21 >> 1) {
          unint64_t v17 = sub_1C2641214(v21 > 1, v22 + 1, 1, v17);
        }
        *(void *)(v17 + 16) = v22 + 1;
        sub_1C2640CE0((uint64_t)v10, v17+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v22);
        uint64_t v13 = v32;
      }
      ++v16;
    }
    while (v13 != v16);
    uint64_t result = swift_bridgeObjectRelease();
    a2 = (unint64_t *)v23[0];
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2640CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PluginSharableModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PluginSharableModel()
{
  uint64_t result = qword_1EBB85A48;
  if (!qword_1EBB85A48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PluginSharableModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C26F6B30);
}

uint64_t getEnumTagSinglePayload for PluginSharableModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C26F69CC);
}

uint64_t sub_1C2640DB8(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    id v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C2641054(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  id v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_1C277C550();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C26410B8(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

void sub_1C2641054(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C26410B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C2641214(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C2640DB8(a1, a2, a3, a4, &qword_1EBB83130, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel, (uint64_t (*)(void))type metadata accessor for PluginSharableModel, (uint64_t (*)(void))type metadata accessor for PluginSharableModel);
}

uint64_t Publisher<>.createPluginSharableModelChangeInitialPublisher()()
{
  sub_1C26415EC(255, &qword_1EBB82E08, MEMORY[0x1E4FBB320]);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1C277B340();
  sub_1C26418CC(255, (unint64_t *)&qword_1EBB82E10, MEMORY[0x1E4FBB320]);
  swift_getWitnessTable();
  uint64_t v0 = sub_1C277B1E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)v6 - v2;
  v6[1] = Publisher<>.mapSharedSummaryToPluginSharableModel()();
  sub_1C277B500();
  swift_release();
  swift_getWitnessTable();
  uint64_t v4 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t Publisher<>.mapSharedSummaryToPluginSharableModel()()
{
  sub_1C26415EC(255, &qword_1EBB82E08, MEMORY[0x1E4FBB320]);
  uint64_t v0 = sub_1C277B1E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)&v6 - v2;
  sub_1C277B500();
  swift_getWitnessTable();
  uint64_t v4 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_1C26415EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for PluginSharableModel();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t Publisher<>.filter(identifiers:objectTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26418CC(255, (unint64_t *)&qword_1EBB82E10, MEMORY[0x1E4FBB320]);
  long long v21[2] = v11;
  uint64_t v12 = sub_1C277B1E0();
  uint64_t v22 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v21 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v5, a3);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v16 = (v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v15, v10, a3);
  uint64_t v18 = v24;
  *(void *)(v17 + v16) = v23;
  *(void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C277B500();
  swift_release();
  swift_getWitnessTable();
  uint64_t v19 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v12);
  return v19;
}

void sub_1C26418CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for PluginSharableModelChange);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t PluginStorage.data.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1C2641B44(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t PluginStorage.init(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_uniqueIdentifier);
  uint64_t v24 = sub_1C277B850();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(a1, sel_profiles);
  type metadata accessor for Profile();
  sub_1C2642288();
  uint64_t v8 = sub_1C277BBC0();

  uint64_t v9 = sub_1C2641B6C(v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_1C2641ED0(v9);
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(a1, sel_data);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_1C277A780();
    unint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v15 = 0xF000000000000000;
  }
  id v16 = v10;
  swift_bridgeObjectRetain();
  sub_1C2641B44(v13, v15);
  id v17 = objc_msgSend(a1, sel_plugin);
  id v18 = objc_msgSend(v17, sel_package);

  uint64_t v19 = sub_1C277B850();
  uint64_t v21 = v20;

  swift_bridgeObjectRetain();
  id v22 = v16;
  sub_1C2641B44(v13, v15);
  swift_bridgeObjectRetain();
  sub_1C2641B58(v13, v15);
  swift_bridgeObjectRelease_n();

  sub_1C2641B58(v13, v15);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v6;
  a2[2] = (uint64_t)v10;
  a2[3] = v13;
  a2[4] = v15;
  a2[5] = v19;
  a2[6] = v21;
  return result;
}

uint64_t sub_1C2641B44(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1C263D360(a1, a2);
  }
  return a1;
}

uint64_t sub_1C2641B58(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1C263CC84(a1, a2);
  }
  return a1;
}

uint64_t sub_1C2641B6C(uint64_t a1)
{
  uint64_t v28 = type metadata accessor for UserProfile();
  uint64_t v2 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  id v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v29 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v5 = sub_1C277C1C0();
  }
  else {
    uint64_t v5 = *(void *)(a1 + 16);
  }
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1C2641E88(0, v5 & ~(v5 >> 63), 0);
    if (v29)
    {
      uint64_t result = sub_1C277C160();
      char v8 = 1;
    }
    else
    {
      uint64_t result = sub_1C265B7F4(a1);
      char v8 = v9 & 1;
    }
    uint64_t v31 = result;
    uint64_t v32 = v7;
    char v33 = v8;
    if (v5 < 0)
    {
      __break(1u);
LABEL_25:
      __break(1u);
    }
    else
    {
      uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8;
      if (a1 < 0) {
        uint64_t v10 = a1;
      }
      v27[1] = v10;
      do
      {
        while (1)
        {
          int64_t v17 = v31;
          uint64_t v16 = v32;
          char v18 = v33;
          sub_1C2641FA8(v31, v32, v33, a1);
          id v20 = v19;
          uint64_t v21 = (void *)Profile.hkProfileIdentifier.getter();
          id v22 = objc_msgSend(v21, sel_identifier);
          sub_1C277A880();

          *(void *)&v4[*(int *)(v28 + 20)] = v21;
          uint64_t v23 = v34;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C2641E88(0, *(void *)(v23 + 16) + 1, 1);
            uint64_t v23 = v34;
          }
          unint64_t v25 = *(void *)(v23 + 16);
          unint64_t v24 = *(void *)(v23 + 24);
          if (v25 >= v24 >> 1)
          {
            sub_1C2641E88(v24 > 1, v25 + 1, 1);
            uint64_t v23 = v34;
          }
          *(void *)(v23 + 16) = v25 + 1;
          uint64_t result = sub_1C2643AE0((uint64_t)v4, v23+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v25);
          if (v29) {
            break;
          }
          int64_t v11 = sub_1C265B4D0(v17, v16, v18, a1);
          uint64_t v13 = v12;
          char v15 = v14;
          sub_1C26431E8(v17, v16, v18);
          uint64_t v31 = v11;
          uint64_t v32 = v13;
          char v33 = v15 & 1;
          if (!--v5) {
            goto LABEL_22;
          }
        }
        if ((v18 & 1) == 0) {
          goto LABEL_25;
        }
        if (sub_1C277C180()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_1C2642224();
        uint64_t v26 = (void (*)(unsigned char *, void))sub_1C277BBF0();
        sub_1C277C230();
        v26(v30, 0);
        --v5;
      }
      while (v5);
LABEL_22:
      sub_1C26431E8(v31, v32, v33);
      return v34;
    }
  }
  return result;
}

uint64_t sub_1C2641E88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C263C1D0(a1, a2, a3, (void *)*v3, sub_1C263FA50, (uint64_t (*)(void))type metadata accessor for UserProfile);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C2641ED0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 2)
  {
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  else
  {
    if (!v1) {
      return 0;
    }
    uint64_t v3 = type metadata accessor for UserProfile();
    id v4 = *(void **)(a1
                  + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80))
                  + *(int *)(v3 + 20));
    id v5 = v4;
    return (uint64_t)v4;
  }
  return result;
}

void sub_1C2641FA8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1C2641FC0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(void))
{
  unint64_t v8 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v9 = a4;
      }
      else {
        uint64_t v9 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x1C875C0F0](a1, a2, v9);
      a5(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_1C277C1A0() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1C277C1B0();
  a5(0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v5 = v19;
  swift_unknownObjectRelease();
  uint64_t v10 = sub_1C277C020();
  uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v8 = v10 & ~v11;
  if (((*(void *)(a4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v8);
  char v13 = sub_1C277C030();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v11;
    do
    {
      unint64_t v8 = (v8 + 1) & v14;
      if (((*(void *)(a4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_26;
      }
      id v15 = *(id *)(*(void *)(a4 + 48) + 8 * v8);
      char v16 = sub_1C277C030();
    }
    while ((v16 & 1) == 0);
  }

LABEL_20:
  int64_t v17 = *(void **)(*(void *)(a4 + 48) + 8 * v8);

  id v18 = v17;
}

void sub_1C2642224()
{
  if (!qword_1EBB850F0)
  {
    type metadata accessor for Profile();
    sub_1C2642288();
    unint64_t v0 = sub_1C277BC00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB850F0);
    }
  }
}

uint64_t sub_1C2642288()
{
  return sub_1C26424F4(&qword_1EBB85088, (void (*)(uint64_t))type metadata accessor for Profile);
}

uint64_t Profile.hkProfileIdentifier.getter()
{
  uint64_t v1 = v0;
  sub_1C2644ED8(0, &qword_1EBB86050);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E90);
  id v2 = objc_msgSend(v0, sel_encodedHKProfileIdentifier);
  uint64_t v3 = sub_1C277A780();
  unint64_t v5 = v4;

  uint64_t v6 = sub_1C277BE10();
  sub_1C263CC84(v3, v5);
  if (v6) {
    return v6;
  }
  sub_1C277C2D0();
  sub_1C277B8D0();
  id v8 = objc_msgSend(v1, sel_encodedHKProfileIdentifier);
  uint64_t v9 = sub_1C277A780();
  unint64_t v11 = v10;

  sub_1C277A760();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C263CC84(v9, v11);
  uint64_t result = sub_1C277C560();
  __break(1u);
  return result;
}

uint64_t sub_1C26424F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Void __swiftcall NSManagedObjectContext.queue_createProfiles(for:)(Swift::OpaquePointer a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v47 = sub_1C277A8A0();
  MEMORY[0x1F4188790](v47);
  char v46 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = *((void *)a1._rawValue + 2);
  if (v53)
  {
    uint64_t v52 = (char *)a1._rawValue + 32;
    uint64_t v45 = (void (**)(char *, uint64_t))(v2 + 8);
    v44[1] = a1._rawValue;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    *(void *)&long long v6 = 136446722;
    long long v49 = v6;
    uint64_t v48 = MEMORY[0x1E4FBC840] + 8;
    long long v51 = xmmword_1C277E480;
    while (1)
    {
      uint64_t v7 = *(void **)&v52[8 * v4];
      if (v7)
      {
        sub_1C2641054(0, &qword_1EBB85210, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, MEMORY[0x1E4FBBE00]);
        uint64_t v8 = type metadata accessor for UserProfile();
        unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = v51;
        unint64_t v11 = v10 + v9;
        id v12 = v7;
        id v13 = objc_msgSend(v12, sel_identifier);
        sub_1C277A880();

        *(void *)(v11 + *(int *)(v8 + 20)) = v12;
        uint64_t v14 = sub_1C2643840(v10);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
      }
      else
      {
        uint64_t v14 = MEMORY[0x1E4FBC870];
      }
      id v15 = v54;
      unint64_t v16 = (unint64_t)sub_1C2642CAC(v14, (uint64_t)v15);

      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1C277C5A0();
        swift_bridgeObjectRelease();
      }
      uint64_t v17 = type metadata accessor for Profile();
      uint64_t v18 = sub_1C2642C1C(&qword_1EBB85088, (void (*)(uint64_t))type metadata accessor for Profile);
      uint64_t v59 = sub_1C277BBE0();
      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1C277C5A0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v19 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v58 = v5;
      uint64_t v55 = v18;
      uint64_t v56 = v17;
      if (v19)
      {
        if (v19 < 1)
        {
          __break(1u);
          return;
        }
        if ((v16 & 0xC000000000000001) != 0)
        {
          for (uint64_t i = 0; i != v19; ++i)
          {
            uint64_t v21 = (void *)MEMORY[0x1C875C230](i, v16);
            sub_1C2643394(&v61, v21);
          }
        }
        else
        {
          for (uint64_t j = 0; j != v19; ++j)
          {
            uint64_t v23 = *(void **)(v16 + 8 * j + 32);
            sub_1C2643394(&v61, v23);
          }
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v57 = v4;
      if (qword_1EBB85FE8 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_1C277B130();
      __swift_project_value_buffer(v24, (uint64_t)qword_1EBB85FD0);
      id v25 = v7;
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1C277B100();
      os_log_type_t v27 = sub_1C277BD40();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = swift_slowAlloc();
        unint64_t v29 = (void *)swift_slowAlloc();
        id v61 = v29;
        *(_DWORD *)uint64_t v28 = v49;
        uint64_t v59 = ObjectType;
        swift_getMetatypeMetadata();
        uint64_t v30 = sub_1C277B860();
        *(void *)(v28 + 4) = sub_1C263FDFC(v30, v31, (uint64_t *)&v61);
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2080;
        if (v7)
        {
          id v32 = v25;
          objc_msgSend(v32, sel_type);
          id v33 = (id)HKStringFromProfileType();
          uint64_t v34 = sub_1C277B850();
          unint64_t v36 = v35;

          uint64_t v59 = v34;
          unint64_t v60 = v36;
          sub_1C277B8D0();
          id v37 = objc_msgSend(v32, sel_identifier);
          uint64_t v38 = v46;
          sub_1C277A880();

          sub_1C277A850();
          (*v45)(v38, v47);
          sub_1C277B8D0();

          swift_bridgeObjectRelease();
          uint64_t v39 = v59;
          unint64_t v40 = v60;
        }
        else
        {
          unint64_t v40 = 0xE800000000000000;
          uint64_t v39 = 0x636974736F6E6761;
        }
        *(void *)(v28 + 14) = sub_1C263FDFC(v39, v40, (uint64_t *)&v61);

        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_1C277BBD0();
        unint64_t v43 = v42;
        swift_bridgeObjectRelease();
        *(void *)(v28 + 24) = sub_1C263FDFC(v41, v43, (uint64_t *)&v61);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v26, v27, "[%{public}s]: Updating profiles in cache for sourceProfile <%s>; profiles: <%s>",
          (uint8_t *)v28,
          0x20u);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v29, -1, -1);
        MEMORY[0x1C875D230](v28, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v5 = v58;
      uint64_t v4 = v57 + 1;
      if (v57 + 1 == v53)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1C2642C1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2642C64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1C2642CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a2;
  uint64_t v37 = sub_1C277A8A0();
  uint64_t v4 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  unint64_t v36 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UserProfile();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v39 = (uint64_t)&v30 - v10;
  uint64_t v11 = *(void *)(a1 + 16);
  id result = (id)MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v30 = v2;
    uint64_t v45 = MEMORY[0x1E4FBC860];
    sub_1C277C3C0();
    int64_t v13 = sub_1C2643C24(a1);
    uint64_t v15 = v14;
    int v17 = v16 & 1;
    uint64_t v35 = a1 + 56;
    id result = (id)type metadata accessor for Profile();
    unint64_t v31 = (void (**)(char *, uint64_t))(v4 + 8);
    id v32 = result;
    long long v34 = xmmword_1C277E470;
    unint64_t v33 = 0x80000001C2789760;
    while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(v35 + (((unint64_t)v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_12;
      }
      if (*(_DWORD *)(a1 + 36) != v15) {
        goto LABEL_13;
      }
      uint64_t v43 = v11;
      uint64_t v44 = v15;
      int v42 = v17;
      uint64_t v18 = v39;
      sub_1C2644754(*(void *)(a1 + 48) + *(void *)(v40 + 72) * v13, v39, (uint64_t (*)(void))type metadata accessor for UserProfile);
      sub_1C2644908(v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserProfile);
      uint64_t v19 = *(void **)&v9[*(int *)(v41 + 20)];
      sub_1C26431F4(0, (unint64_t *)&qword_1EBB854B8, (unint64_t *)&qword_1EBB85F40);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = v34;
      *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v20 + 64) = sub_1C263226C();
      *(void *)(v20 + 32) = 0xD000000000000010;
      *(void *)(v20 + 40) = v33;
      id result = objc_msgSend(v19, sel_identifier);
      if (!result) {
        goto LABEL_14;
      }
      id v21 = result;
      uint64_t v22 = (uint64_t)v9;
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
      *(void *)(v20 + 96) = sub_1C2644ED8(0, &qword_1EBB851A8);
      *(void *)(v20 + 104) = sub_1C26450E4((unint64_t *)&qword_1EBB851B0, &qword_1EBB851A8);
      *(void *)(v20 + 72) = v21;
      uint64_t v23 = (void *)sub_1C277BCC0();
      uint64_t v24 = (void *)sub_1C2644090(v38, (uint64_t)v23);

      id v25 = objc_msgSend(v19, sel_identifier);
      uint64_t v26 = v36;
      sub_1C277A880();

      os_log_type_t v27 = (void *)sub_1C277A860();
      (*v31)(v26, v37);
      objc_msgSend(v24, sel_setUniqueIdentifier_, v27);

      Profile.hkProfileIdentifier.setter(v19);
      sub_1C263FBF4(v22, (uint64_t (*)(void))type metadata accessor for UserProfile);
      sub_1C277C390();
      sub_1C277C3D0();
      sub_1C277C3E0();
      sub_1C277C3A0();
      id result = (id)sub_1C26432B0(v13, v44, v42 & 1, a1);
      int64_t v13 = (int64_t)result;
      uint64_t v15 = v28;
      int v17 = v29 & 1;
      uint64_t v11 = v43 - 1;
      unint64_t v9 = (char *)v22;
      if (v43 == 1)
      {
        sub_1C26431E8((uint64_t)result, v28, v29 & 1);
        return (id)v45;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for Profile()
{
  return self;
}

uint64_t sub_1C26431E8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C26431F4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C2621120(255, a3);
    unint64_t v4 = sub_1C277C7C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2643254(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C2621120(255, a3);
    unint64_t v4 = sub_1C277C7C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

int64_t sub_1C26432B0(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C2643394(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C277C1D0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for Profile();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C277C1C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2693A80(v7, result + 1, (void (*)(void))sub_1C269B2FC, (void (*)(void))type metadata accessor for Profile, (void (*)(void))sub_1C269B2FC);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C26948A8(v26, (void (*)(void))sub_1C269B2FC);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C2734FA0(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C020();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      type metadata accessor for Profile();
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C277C030();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C277C030();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C26436B4((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_1C269B2FC, (void (*)(void))type metadata accessor for Profile, (void (*)(void))sub_1C269B2FC, (void (*)(uint64_t))sub_1C273FB44);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

void sub_1C26436B4(uint64_t a1, unint64_t a2, char a3, void (*a4)(void), void (*a5)(void), void (*a6)(void), void (*a7)(uint64_t))
{
  unint64_t v11 = *(void *)(*v7 + 16);
  unint64_t v12 = *(void *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v13 = v11 + 1;
  if (a3)
  {
    sub_1C26948A8(v13, a4);
  }
  else
  {
    if (v12 > v11)
    {
      a7(v13);
      goto LABEL_14;
    }
    sub_1C2698520(v13, a6);
  }
  uint64_t v14 = *v7;
  uint64_t v15 = sub_1C277C020();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    a5(0);
    id v17 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
    char v18 = sub_1C277C030();

    if (v18)
    {
LABEL_13:
      sub_1C277C840();
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
        char v21 = sub_1C277C030();

        if (v21) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v22 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = a1;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v25;
  }
}

uint64_t sub_1C2643840(uint64_t a1)
{
  uint64_t v26 = type metadata accessor for UserProfile();
  uint64_t v2 = *(void *)(v26 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v26);
  unint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1C2643B90();
    uint64_t v9 = sub_1C277C2A0();
    uint64_t v10 = 0;
    uint64_t v11 = v9 + 56;
    uint64_t v12 = *(unsigned __int8 *)(v2 + 80);
    uint64_t v24 = v8;
    uint64_t v25 = a1 + ((v12 + 32) & ~v12);
    uint64_t v13 = *(void *)(v2 + 72);
    while (1)
    {
      sub_1C26448A4(v25 + v13 * v10, (uint64_t)v7);
      sub_1C277C8C0();
      sub_1C277A8A0();
      sub_1C2642C1C(&qword_1EBB84F38, MEMORY[0x1E4F27990]);
      sub_1C277B7C0();
      uint64_t v14 = sub_1C277C910();
      uint64_t v15 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v16 = v14 & v15;
      unint64_t v17 = (v14 & (unint64_t)v15) >> 6;
      uint64_t v18 = *(void *)(v11 + 8 * v17);
      uint64_t v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        while (1)
        {
          sub_1C26448A4(*(void *)(v9 + 48) + v16 * v13, (uint64_t)v5);
          if (sub_1C277A870())
          {
            sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
            if (sub_1C277C030()) {
              break;
            }
          }
          sub_1C269B390((uint64_t)v5);
          unint64_t v16 = (v16 + 1) & v15;
          unint64_t v17 = v16 >> 6;
          uint64_t v18 = *(void *)(v11 + 8 * (v16 >> 6));
          uint64_t v19 = 1 << v16;
          if ((v18 & (1 << v16)) == 0) {
            goto LABEL_5;
          }
        }
        sub_1C269B390((uint64_t)v5);
        sub_1C269B390((uint64_t)v7);
      }
      else
      {
LABEL_5:
        *(void *)(v11 + 8 * v17) = v19 | v18;
        uint64_t result = sub_1C2643AE0((uint64_t)v7, *(void *)(v9 + 48) + v16 * v13);
        uint64_t v21 = *(void *)(v9 + 16);
        BOOL v22 = __OFADD__(v21, 1);
        uint64_t v23 = v21 + 1;
        if (v22)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v23;
      }
      if (++v10 == v24) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C2643AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for UserProfile()
{
  uint64_t result = qword_1EBB84FD0;
  if (!qword_1EBB84FD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2643B90()
{
  if (!qword_1EBB83010)
  {
    type metadata accessor for UserProfile();
    sub_1C2642C1C(&qword_1EBB84FC0, (void (*)(uint64_t))type metadata accessor for UserProfile);
    unint64_t v0 = sub_1C277C2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83010);
    }
  }
}

uint64_t sub_1C2643C28(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void Profile.hkProfileIdentifier.setter(void *a1)
{
  void v23[3] = *(id *)MEMORY[0x1E4F143B8];
  v23[0] = 0;
  id v3 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v23);
  id v4 = v23[0];
  if (v3)
  {
    uint64_t v5 = sub_1C277A780();
    unint64_t v7 = v6;

    unint64_t v8 = (void *)sub_1C277A770();
    sub_1C263CC84(v5, v7);
    objc_msgSend(v1, sel_setEncodedHKProfileIdentifier_, v8);

    id v9 = objc_msgSend(v1, sel_encodedHKProfileIdentifier);
    uint64_t v10 = sub_1C277A780();
    unint64_t v12 = v11;

    switch(v12 >> 62)
    {
      case 1uLL:
        sub_1C263CC84(v10, v12);
        if ((int)v10 == v10 >> 32) {
          goto LABEL_9;
        }
        break;
      case 2uLL:
        uint64_t v13 = *(void *)(v10 + 16);
        uint64_t v14 = *(void *)(v10 + 24);
        sub_1C263CC84(v10, v12);
        if (v13 == v14) {
          goto LABEL_9;
        }
        break;
      case 3uLL:
        sub_1C263CC84(v10, v12);
        goto LABEL_9;
      default:
        sub_1C263CC84(v10, v12);
        if ((v12 & 0xFF000000000000) == 0)
        {
LABEL_9:
          if (qword_1EBB86260 != -1) {
            swift_once();
          }
          uint64_t v15 = sub_1C277B130();
          __swift_project_value_buffer(v15, (uint64_t)qword_1EBB86280);
          unint64_t v16 = a1;
          unint64_t v17 = sub_1C277B100();
          os_log_type_t v18 = sub_1C277BD30();
          if (os_log_type_enabled(v17, v18))
          {
            uint64_t v19 = (uint8_t *)swift_slowAlloc();
            id v20 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v19 = 138412290;
            v23[0] = v16;
            uint64_t v21 = v16;
            sub_1C277C0D0();
            *id v20 = v16;

            _os_log_impl(&dword_1C2601000, v17, v18, "Profile: received empty encodedHKProfileIdentifier for %@", v19, 0xCu);
            sub_1C264E608();
            swift_arrayDestroy();
            MEMORY[0x1C875D230](v20, -1, -1);
            MEMORY[0x1C875D230](v19, -1, -1);
          }
          else
          {

            unint64_t v17 = v16;
          }
        }
        break;
    }
  }
  else
  {
    BOOL v22 = v4;
    sub_1C277A620();

    swift_willThrow();
    v23[0] = 0;
    v23[1] = (id)0xE000000000000000;
    sub_1C277C2D0();
    sub_1C277B8D0();
    sub_1C262B07C(0, (unint64_t *)&qword_1EBB831D0);
    sub_1C277C450();
    sub_1C277C560();
    __break(1u);
  }
}

uint64_t sub_1C2644090(uint64_t a1, uint64_t a2)
{
  return sub_1C26440D0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C2644270, 0x656C69666F7250, 0xE700000000000000, (void (*)(void))type metadata accessor for Profile);
}

uint64_t sub_1C26440D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5, void (*a6)(void))
{
  uint64_t result = a3(a1, a2, 1);
  if (!result)
  {
    id v9 = self;
    uint64_t v10 = (void *)sub_1C277B820();
    objc_msgSend(v9, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v10, a1);

    a6(0);
    return swift_dynamicCastClassUnconditional();
  }
  return result;
}

unint64_t sub_1C2644270(void *a1, uint64_t a2, char a3)
{
  id v4 = v3;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v9 = (void *)sub_1C277B820();
  id v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  objc_msgSend(v10, sel_setPredicate_, a2);
  type metadata accessor for Profile();
  unint64_t result = sub_1C277C000();
  if (v3) {
    goto LABEL_2;
  }
  unint64_t v12 = result;
  id v37 = v10;
  unint64_t v13 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (v35 >= 2) {
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    id v4 = sub_1C277C5A0();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = *(NSObject **)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v4 > 1)
    {
LABEL_6:
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1C277B130();
      uint64_t v15 = (id *)__swift_project_value_buffer(v14, (uint64_t)qword_1EBB86280);
      id v4 = sub_1C277B100();
      os_log_type_t v16 = sub_1C277BD20();
      if (os_log_type_enabled(v4, v16))
      {
        uint64_t v15 = (id *)v12;
        unint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v17 = 0;
        _os_log_impl(&dword_1C2601000, v4, v16, "Error: duplicate feed item created...", v17, 2u);
        os_log_type_t v18 = v17;
        unint64_t v12 = (unint64_t)v15;
        MEMORY[0x1C875D230](v18, -1, -1);
      }

      if (v13)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1C277C5A0();
        if (!v19)
        {
LABEL_23:
          swift_bridgeObjectRelease_n();
          sub_1C266AEE8(a1, a3 & 1, &qword_1EA304388, (void (*)(uint64_t))type metadata accessor for Profile);
          id v10 = v37;
          sub_1C266B94C();
          swift_allocError();
          swift_willThrow();
LABEL_2:

          return (unint64_t)v4;
        }
      }
      else
      {
        uint64_t v19 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v19) {
          goto LABEL_23;
        }
      }
      id v20 = (v19 - 1);
      if (v19 >= 1)
      {
        uint64_t v21 = 0;
        unint64_t v22 = v12 & 0xC000000000000001;
        char v40 = a3;
        unint64_t v38 = v12 & 0xC000000000000001;
        uint64_t v39 = (id *)v12;
        while (1)
        {
          if (v22) {
            id v23 = (id)MEMORY[0x1C875C230](v21, v12);
          }
          else {
            id v23 = *(id *)(v12 + 8 * (void)v21 + 32);
          }
          id v24 = v23;
          uint64_t v25 = sub_1C277B100();
          os_log_type_t v43 = sub_1C277BD20();
          if (os_log_type_enabled(v25, v43))
          {
            uint64_t v26 = swift_slowAlloc();
            uint64_t v42 = swift_slowAlloc();
            uint64_t v44 = v42;
            *(_DWORD *)uint64_t v26 = 134218242;
            *(void *)(v26 + 4) = v21;
            *(_WORD *)(v26 + 12) = 2080;
            id v27 = v24;
            id v4 = v20;
            id v28 = objc_msgSend(v27, sel_description);
            log = v25;
            uint64_t v29 = a1;
            uint64_t v30 = sub_1C277B850();
            unint64_t v32 = v31;

            unint64_t v22 = v38;
            uint64_t v33 = v30;
            a1 = v29;
            *(void *)(v26 + 14) = sub_1C263FDFC(v33, v32, &v44);

            a3 = v40;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2601000, log, v43, "Existing item %ld: %s", (uint8_t *)v26, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C875D230](v42, -1, -1);
            uint64_t v34 = v26;
            unint64_t v12 = (unint64_t)v39;
            MEMORY[0x1C875D230](v34, -1, -1);

            id v20 = v4;
            if (v4 == v21) {
              goto LABEL_23;
            }
          }
          else
          {

            if (v20 == v21) {
              goto LABEL_23;
            }
          }
          uint64_t v21 = ((char *)v21 + 1);
        }
      }
      __break(1u);
LABEL_33:
      unint64_t v36 = MEMORY[0x1C875C230](0, v12);
      goto LABEL_30;
    }
  }
  uint64_t v15 = (id *)v10;
  if (!v4)
  {
LABEL_31:
    swift_bridgeObjectRelease();

    return (unint64_t)v4;
  }
  if ((v12 & 0xC000000000000001) != 0) {
    goto LABEL_33;
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unint64_t v36 = *(id *)(v12 + 32);
LABEL_30:
    id v4 = v36;
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2644754(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C26447BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t initializeWithCopy for UserProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C277A8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t sub_1C26448A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2644908(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2644970(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL static SourceProfile.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  BOOL result = (a1 | a2) == 0;
  if (a1)
  {
    if (a2)
    {
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
      id v5 = (id)a1;
      id v6 = (id)a2;
      char v7 = sub_1C277C030();

      return v7 & 1;
    }
  }
  return result;
}

uint64_t sub_1C2644A64(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C277C5A0();
    swift_bridgeObjectRelease();
  }
  sub_1C2644ED8(0, a2);
  sub_1C26450E4(a4, a2);
  uint64_t result = sub_1C277BBE0();
  uint64_t v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C5A0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11) {
      return v17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      return v17;
    }
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        uint64_t v13 = MEMORY[0x1C875C230](i, a1);
        a5(&v16, v13);
      }
    }
    else
    {
      uint64_t v14 = (void **)(a1 + 32);
      do
      {
        uint64_t v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2644BF8(void *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C277C1D0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E80);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C277C1C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2693CE4(v7, result + 1, &qword_1EA3045A0, (unint64_t *)&qword_1EBB85E80, 0x1E4F2B2C0, (unint64_t *)&qword_1EBB84498);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C2694B48(v26, &qword_1EA3045A0, (unint64_t *)&qword_1EBB85E80, 0x1E4F2B2C0, (unint64_t *)&qword_1EBB84498);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C2734FA0(v8, v23);
    *id v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C020();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E80);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C277C030();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C277C030();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C2644F14((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C2644ED8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1C2644F14(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1C2694B48(v8, &qword_1EA3045A0, (unint64_t *)&qword_1EBB85E80, 0x1E4F2B2C0, (unint64_t *)&qword_1EBB84498);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C273F6E4();
      goto LABEL_14;
    }
    sub_1C269879C(v8, &qword_1EA3045A0, (unint64_t *)&qword_1EBB85E80, 0x1E4F2B2C0, (unint64_t *)&qword_1EBB84498);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1C277C020();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E80);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1C277C030();

    if (v13)
    {
LABEL_13:
      sub_1C277C840();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1C277C030();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1C26450E4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2644ED8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2645128@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  uint64_t result = _s14HealthPlatform38FeatureStatusFeedItemGeneratorPipelineV15changePublisher7Combine03AnyJ0Vy0A12KitAdditions0cD0Os5NeverOGvg_0();
  *a1 = result;
  return result;
}

double FeedItemGenerator.init<A>(context:domain:feedItemPredicate:feedItemsPublisher:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v52 = a7;
  uint64_t v53 = a1;
  uint64_t v11 = a5;
  id v37 = a5;
  os_log_type_t v43 = a4;
  uint64_t v50 = a3;
  *(void *)&long long v51 = a2;
  uint64_t v14 = type metadata accessor for GeneratorContext();
  uint64_t v45 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v45 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v38 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = a8;
  uint64_t v16 = sub_1C277B220();
  uint64_t v49 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v37 - v17;
  sub_1C263E750(255, (unint64_t *)&qword_1EBB85930, (uint64_t)&type metadata for FeedItemContextChange, MEMORY[0x1E4FBB320]);
  uint64_t v40 = v19;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v44 = sub_1C277B1E0();
  uint64_t v48 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v21 = (char *)&v37 - v20;
  uint64_t v46 = *(void *)v51;
  int v47 = *(unsigned __int8 *)(v51 + 24);
  unint64_t v22 = a3;
  uint64_t v23 = v43;
  id v24 = v11;
  LOBYTE(v11) = a6;
  sub_1C2646704(v22, v43, v24, a6);
  sub_1C277B550();
  uint64_t v42 = type metadata accessor for GeneratorContext;
  uint64_t v25 = v38;
  sub_1C2647B80(v53, v38, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  unint64_t v26 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  unint64_t v27 = (v15 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  sub_1C2647C50(v25, v28 + v26, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  unint64_t v29 = v28 + v27;
  uint64_t v30 = v50;
  *(void *)unint64_t v29 = v50;
  *(void *)(v29 + 8) = v23;
  unint64_t v31 = v23;
  unint64_t v32 = v37;
  *(void *)(v29 + 16) = v37;
  *(unsigned char *)(v29 + 24) = (_BYTE)v11;
  LOBYTE(v27) = (_BYTE)v11;
  sub_1C2646704(v30, v31, v32, (char)v11);
  long long v51 = *(_OWORD *)(v51 + 8);
  sub_1C277B500();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v16);
  uint64_t v33 = v44;
  swift_getWitnessTable();
  uint64_t v34 = sub_1C277B4E0();
  uint64_t v35 = v50;
  sub_1C2645714(v50, v31, v32, v27);
  (*(void (**)(uint64_t))(*(void *)(v41 - 8) + 8))(v52);
  sub_1C26480D4(v53, (uint64_t (*)(void))v42);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v33);
  *(void *)a9 = v46;
  double result = *(double *)&v51;
  *(_OWORD *)(a9 + 8) = v51;
  *(unsigned char *)(a9 + 24) = v47;
  *(void *)(a9 + 32) = v34;
  *(void *)(a9 + 40) = v35;
  *(void *)(a9 + 48) = v31;
  *(void *)(a9 + 56) = v32;
  *(unsigned char *)(a9 + 64) = v27;
  return result;
}

uint64_t destroy for FeatureStatusFeedItemGeneratorPipeline(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (id *)((char *)a1 + *(int *)(a2 + 20));

  id v5 = (int *)type metadata accessor for GeneratorContext();
  unint64_t v6 = (id *)((char *)v4 + v5[5]);
  sub_1C264C860();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = (char *)v6 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    uint64_t v8 = sub_1C277A840();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4 + v5[7]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4 + v5[8]);
  sub_1C2645714(*(id *)((char *)a1 + *(int *)(a2 + 24)), *(id *)((char *)a1 + *(int *)(a2 + 24) + 8), *(id *)((char *)a1 + *(int *)(a2 + 24) + 16), *((unsigned char *)a1 + *(int *)(a2 + 24) + 24));
  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_1C2645714(void *a1, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRelease();
    a1 = a3;
    goto LABEL_7;
  }
  if (a4 != 2)
  {
    if (a4 != 1) {
      return;
    }
    goto LABEL_6;
  }
LABEL_7:

  sub_1C264577C(a1);
}

void sub_1C264577C(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t ChangePublisherFeedItemGeneratorPipeline.publisher.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for GeneratorContext();
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v44 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v6);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v37 = sub_1C277B4B0();
  uint64_t v39 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  unint64_t v36 = (char *)&v29 - v10;
  swift_getAssociatedTypeWitness();
  uint64_t v42 = sub_1C277B340();
  unint64_t v41 = sub_1C26468B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = sub_1C277B1E0();
  uint64_t v45 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v38 = (char *)&v29 - v11;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v30 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34(v30, v2, a1);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = (v12 + 32) & ~v12;
  uint64_t v32 = v12 | 7;
  uint64_t v33 = v13 + v9;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  unint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v31(v14 + v13, (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  uint64_t v15 = v36;
  sub_1C277B4A0();
  uint64_t v16 = (uint64_t)v44;
  uint64_t v17 = v2;
  uint64_t v18 = a2;
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  uint64_t v19 = v37;
  swift_getWitnessTable();
  uint64_t v20 = v15;
  uint64_t v21 = Publisher.firstIfNecessary(for:)(v16);
  sub_1C2646908(v16);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v19);
  uint64_t v46 = v21;
  unint64_t v22 = v30;
  v34(v30, v17, a1);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = v18;
  v31(v23 + v13, v22, a1);
  id v24 = (void *)swift_allocObject();
  v24[2] = a1;
  v24[3] = v18;
  v24[4] = sub_1C276C7BC;
  v24[5] = v23;
  uint64_t v25 = v38;
  sub_1C277B500();
  swift_release();
  swift_release();
  uint64_t v26 = v43;
  swift_getWitnessTable();
  uint64_t v27 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v26);
  return v27;
}

uint64_t Publisher.firstIfNecessary(for:)(uint64_t a1)
{
  uint64_t v2 = sub_1C277B220();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - v4;
  uint64_t v6 = (void *)(a1 + *(int *)(type metadata accessor for GeneratorContext() + 28));
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8))
  {
    return sub_1C277B4E0();
  }
  else
  {
    sub_1C277B550();
    swift_getWitnessTable();
    uint64_t v9 = sub_1C277B4E0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v9;
  }
}

uint64_t sub_1C2645E28()
{
  uint64_t v1 = v0;
  sub_1C264677C(0, &qword_1EBB83648, (uint64_t (*)(uint64_t))sub_1C2646964, sub_1C26469AC, MEMORY[0x1E4F1A9A8]);
  uint64_t v37 = *(void *)(v2 - 8);
  uint64_t v38 = v2;
  MEMORY[0x1F4188790](v2);
  unint64_t v36 = (char *)&v36 - v3;
  uint64_t v4 = type metadata accessor for GeneratorContext();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  uint64_t v9 = v8 - 8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2646964(0);
  uint64_t v42 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2646A34();
  uint64_t v45 = *(void *)(v16 - 8);
  uint64_t v46 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v44 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2646414(v1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeatureStatusFeedItemGeneratorPipeline);
  unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v39 = v18 + v11;
  uint64_t v19 = swift_allocObject();
  sub_1C26467FC((uint64_t)v12, v19 + v18, (uint64_t (*)(void))type metadata accessor for FeatureStatusFeedItemGeneratorPipeline);
  sub_1C26469E0(0);
  uint64_t v21 = v20;
  uint64_t v40 = sub_1C2646A00();
  uint64_t v41 = v21;
  sub_1C277B4A0();
  uint64_t v22 = v1;
  sub_1C2646414(v1 + *(int *)(v9 + 28), (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  uint64_t v23 = &v7[*(int *)(v5 + 36)];
  uint64_t v24 = *((void *)v23 + 3);
  uint64_t v25 = *((void *)v23 + 4);
  __swift_project_boxed_opaque_existential_1(v23, v24);
  LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
  sub_1C26469AC();
  if (v5)
  {
    uint64_t v27 = v43;
    uint64_t v29 = sub_1C277B4E0();
  }
  else
  {
    uint64_t v26 = v36;
    uint64_t v27 = v43;
    sub_1C277B550();
    sub_1C276D7D0(qword_1EBB83780, &qword_1EBB83648, (uint64_t (*)(uint64_t))sub_1C2646964, sub_1C26469AC);
    uint64_t v28 = v38;
    uint64_t v29 = sub_1C277B4E0();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v28);
  }
  sub_1C2646908((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v27);
  uint64_t v47 = v29;
  sub_1C2646414(v22, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeatureStatusFeedItemGeneratorPipeline);
  uint64_t v30 = swift_allocObject();
  sub_1C26467FC((uint64_t)v12, v30 + v18, (uint64_t (*)(void))type metadata accessor for FeatureStatusFeedItemGeneratorPipeline);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_1C276CF30;
  *(void *)(v31 + 24) = v30;
  sub_1C26468B0();
  uint64_t v32 = v44;
  sub_1C277B500();
  swift_release();
  swift_release();
  sub_1C26463CC(&qword_1EBB835D8, (void (*)(uint64_t))sub_1C2646A34);
  uint64_t v33 = v46;
  uint64_t v34 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v33);
  return v34;
}

uint64_t sub_1C26463CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2646414(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t initializeWithCopy for FeatureStatusFeedItemGeneratorPipeline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v10;
  uint64_t v41 = (int *)type metadata accessor for GeneratorContext();
  uint64_t v11 = v41[5];
  uint64_t v40 = v8;
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = v9 + v11;
  sub_1C264C860();
  id v14 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = *(void **)v13;
    *uint64_t v12 = *(void *)v13;
    id v17 = v16;
  }
  else
  {
    uint64_t v18 = *(void *)(v13 + 8);
    *uint64_t v12 = *(void *)v13;
    v12[1] = v18;
    _OWORD v12[2] = *(void *)(v13 + 16);
    uint64_t v19 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    uint64_t v20 = (char *)v12 + v19;
    uint64_t v21 = v13 + v19;
    uint64_t v22 = sub_1C277A840();
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
  }
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v40 + v41[6]) = *(unsigned char *)(v9 + v41[6]);
  uint64_t v24 = v41[7];
  long long v25 = *(_OWORD *)(v9 + v24 + 24);
  *(_OWORD *)(v40 + v24 + 24) = v25;
  (**(void (***)(void))(v25 - 8))();
  uint64_t v26 = v41[8];
  long long v27 = *(_OWORD *)(v9 + v26 + 24);
  *(_OWORD *)(v40 + v26 + 24) = v27;
  (**(void (***)(void))(v27 - 8))();
  uint64_t v28 = a3[6];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  id v31 = *(id *)v30;
  uint64_t v32 = *(void **)(v30 + 8);
  uint64_t v33 = *(void **)(v30 + 16);
  char v34 = *(unsigned char *)(v30 + 24);
  sub_1C2646704(*(id *)v30, v32, v33, v34);
  *(void *)uint64_t v29 = v31;
  *(void *)(v29 + 8) = v32;
  *(void *)(v29 + 16) = v33;
  *(unsigned char *)(v29 + 24) = v34;
  uint64_t v35 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  unint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  uint64_t v38 = v37[1];
  *unint64_t v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

id sub_1C2646704(id result, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRetain();
    uint64_t result = a3;
    goto LABEL_7;
  }
  if (a4 != 2)
  {
    if (a4 != 1) {
      return result;
    }
    goto LABEL_6;
  }
LABEL_7:

  return sub_1C264676C(result);
}

id sub_1C264676C(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void sub_1C264677C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_1C26467FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FeatureStatusFeedItemGeneratorPipeline()
{
  uint64_t result = qword_1EBB83420;
  if (!qword_1EBB83420) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C26468B0()
{
  unint64_t result = qword_1EBB834C0;
  if (!qword_1EBB834C0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB834C0);
  }
  return result;
}

uint64_t sub_1C2646908(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GeneratorContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C2646964(uint64_t a1)
{
}

uint64_t sub_1C26469AC()
{
  return sub_1C26463CC(&qword_1EBB83700, sub_1C2646964);
}

void sub_1C26469E0(uint64_t a1)
{
}

uint64_t sub_1C2646A00()
{
  return sub_1C26463CC(&qword_1EBB836B0, sub_1C26469E0);
}

void sub_1C2646A34()
{
  if (!qword_1EBB835E0)
  {
    sub_1C26469E0(255);
    sub_1C26468B0();
    sub_1C2646A00();
    unint64_t v0 = sub_1C277B1E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB835E0);
    }
  }
}

uint64_t _s14HealthPlatform38FeatureStatusFeedItemGeneratorPipelineV15changePublisher7Combine03AnyJ0Vy0A12KitAdditions0cD0Os5NeverOGvg_0()
{
  sub_1C2647158(0, &qword_1EBB836F8, MEMORY[0x1E4F1AC18]);
  v17[1] = *(void *)(v1 - 8);
  v17[2] = v1;
  MEMORY[0x1F4188790](v1);
  v17[0] = (char *)v17 - v2;
  sub_1C264722C();
  uint64_t v4 = v3;
  uint64_t v18 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C277AA10();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  uint64_t v20 = v0;
  (*(void (**)(void *__return_ptr))(v0 + *(int *)(v19 + 32)))(v22);
  __swift_project_boxed_opaque_existential_1(v22, v23);
  uint64_t v11 = sub_1C277AA80();
  __swift_project_boxed_opaque_existential_1(v22, v23);
  sub_1C277AA70();
  uint64_t v21 = v11;
  sub_1C2647844(0, &qword_1EBB83778, MEMORY[0x1E4F66798], MEMORY[0x1E4FBBE00]);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C277E480;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 16))(v13 + v12, v10, v7);
  id v14 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1C2647158(0, &qword_1EBB836B8, MEMORY[0x1E4F1AAE0]);
  sub_1C26478A8(&qword_1EBB836B0, &qword_1EBB836B8, v14);
  sub_1C277B5B0();
  swift_bridgeObjectRelease();
  sub_1C26478EC(&qword_1EBB83548, (void (*)(uint64_t))sub_1C264722C);
  uint64_t v15 = sub_1C277B4E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  return v15;
}

void sub_1C2647158(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C277AA10();
    unint64_t v7 = a3(a1, v6, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C26471C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277B340();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C264722C()
{
  if (!qword_1EBB83550[0])
  {
    sub_1C2683FE8();
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C2647158(255, &qword_1EBB836B8, MEMORY[0x1E4F1AAE0]);
    sub_1C26478EC(&qword_1EBB83690, (void (*)(uint64_t))sub_1C2683FE8);
    sub_1C26478A8(&qword_1EBB836B0, &qword_1EBB836B8, v0);
    unint64_t v1 = sub_1C277B1A0();
    if (!v2) {
      atomic_store(v1, qword_1EBB83550);
    }
  }
}

void sub_1C2647338(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for GeneratorContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1C26473C8(v1 + v4, *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)), a1);
}

void sub_1C26473C8(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (void *)(a1 + *(int *)(type metadata accessor for GeneratorContext() + 28));
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  sub_1C2647518(a1);
  if (v10)
  {
    id v11 = a2;
    id v12 = v9;
    uint64_t v13 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v14 = a2;
    id v15 = v9;
    uint64_t v13 = 0;
  }
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B068]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, a2, v9, v13);

  unint64_t v17 = sub_1C26474D4();
  uint64_t v18 = MEMORY[0x1E4F66930];
  a3[3] = v17;
  a3[4] = v18;

  *a3 = v16;
}

unint64_t sub_1C26474D4()
{
  unint64_t result = qword_1EBB83758;
  if (!qword_1EBB83758)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB83758);
  }
  return result;
}

uint64_t sub_1C2647518(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CountryRetrievalRecord();
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (uint64_t *)((char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C264C860();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void **)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for GeneratorContext();
  sub_1C2647B18(a1 + *(int *)(v8 + 20), (uint64_t)v7, (uint64_t (*)(void))sub_1C264C860);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = *v7;
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1C277B130();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EBB85FD0);
    id v11 = v9;
    id v12 = sub_1C277B100();
    os_log_type_t v13 = sub_1C277BD20();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v22 = v15;
      *(_DWORD *)uint64_t v14 = 136446466;
      uint64_t v21 = sub_1C263FDFC(0xD000000000000026, 0x80000001C277F7A0, &v22);
      sub_1C277C0D0();
      *(_WORD *)(v14 + 12) = 2082;
      uint64_t v21 = (uint64_t)v9;
      id v16 = v11;
      uint64_t v17 = sub_1C277B860();
      uint64_t v21 = sub_1C263FDFC(v17, v18, &v22);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v12, v13, "[%{public}s] Failed to get country code: %{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v15, -1, -1);
      MEMORY[0x1C875D230](v14, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  else
  {
    sub_1C2647BE8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CountryRetrievalRecord);
    uint64_t v19 = *v4;
    swift_bridgeObjectRetain();
    sub_1C2648074((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CountryRetrievalRecord);
  }
  return v19;
}

void sub_1C2647844(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C26478A8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2647158(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26478EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FeatureStatusFeedItemGeneratorPipeline.init(context:featureIdentifier:feedItemProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for GeneratorContext();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v8 - 8);
  id v12 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (void **)((char *)&v20 - v13);
  sub_1C2647B18(a1, (uint64_t)&v20 - v13, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  sub_1C2649424();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C277E480;
  sub_1C26482E4(a3, v15 + 32);
  sub_1C2647B18(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v17 = (v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  sub_1C2647BE8((uint64_t)v12, v18 + v16, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  *(void *)(v18 + v17) = a2;
  sub_1C2647CB8(v14, v15, (uint64_t)sub_1C2647514, v18, a4);
  __swift_destroy_boxed_opaque_existential_0(a3);
  return sub_1C2648074(a1, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
}

uint64_t sub_1C2647B18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2647B80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2647BE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2647C50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_1C2647CB8@<D0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = a2;
  uint64_t v7 = *a1;
  int64_t v8 = *(void *)(a2 + 16);
  unint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v42 = *a1;
  if (v8)
  {
    unint64_t v51 = MEMORY[0x1E4FBC860];
    id v10 = v7;
    sub_1C264928C(0, v8, 0);
    uint64_t v11 = v5 + 32;
    uint64_t v12 = v51;
    int64_t v13 = v8;
    do
    {
      sub_1C26482E4(v11, (uint64_t)v47);
      uint64_t v14 = v48;
      uint64_t v15 = v49;
      __swift_project_boxed_opaque_existential_1(v47, v48);
      (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v15 + 24))(&v50, v14, v15);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
      char v16 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C264928C(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v51;
      }
      unint64_t v18 = *(void *)(v12 + 16);
      unint64_t v17 = *(void *)(v12 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1C264928C(v17 > 1, v18 + 1, 1);
        uint64_t v12 = v51;
      }
      *(void *)(v12 + 16) = v18 + 1;
      *(unsigned char *)(v12 + v18 + 32) = v16;
      v11 += 40;
      --v13;
    }
    while (v13);
    uint64_t v5 = a2;
  }
  else
  {
    id v19 = v7;
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  uint64_t v20 = sub_1C2649760(v12);
  swift_bridgeObjectRelease();
  unint64_t v51 = v9;
  uint64_t v21 = *(void *)(v5 + 16);
  if (v21)
  {
    uint64_t v22 = v5 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1C26482E4(v22, (uint64_t)v47);
      uint64_t v23 = v48;
      uint64_t v24 = v49;
      __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
      sub_1C264896C(v25);
      v22 += 40;
      --v21;
    }
    while (v21);
    uint64_t v5 = a2;
    swift_bridgeObjectRelease();
    unint64_t v9 = v51;
  }
  uint64_t v26 = sub_1C2649500(v9);
  swift_bridgeObjectRelease();
  *(void *)a5 = v42;
  *(void *)(a5 + 8) = v20;
  *(void *)(a5 + 16) = v26;
  *(unsigned char *)(a5 + 24) = 0;
  long long v27 = (int *)type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  sub_1C2647B18((uint64_t)a1, a5 + v27[5], (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  uint64_t v28 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    unint64_t v51 = MEMORY[0x1E4FBC860];
    sub_1C264872C(0, v8, 0);
    uint64_t v29 = v5 + 32;
    uint64_t v28 = v51;
    do
    {
      sub_1C26482E4(v29, (uint64_t)v47);
      uint64_t v30 = v48;
      uint64_t v31 = v49;
      __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
      uint64_t v34 = v33;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C264872C(0, *(void *)(v28 + 16) + 1, 1);
        uint64_t v28 = v51;
      }
      unint64_t v36 = *(void *)(v28 + 16);
      unint64_t v35 = *(void *)(v28 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1C264872C(v35 > 1, v36 + 1, 1);
        uint64_t v28 = v51;
      }
      *(void *)(v28 + 16) = v36 + 1;
      uint64_t v37 = v28 + 16 * v36;
      *(void *)(v37 + 32) = v32;
      *(void *)(v37 + 40) = v34;
      v29 += 40;
      --v8;
    }
    while (v8);
    uint64_t v5 = a2;
  }
  uint64_t v38 = sub_1C2648348(v28);
  swift_bridgeObjectRelease();
  sub_1C2648074((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  uint64_t v39 = a5 + v27[6];
  *(void *)uint64_t v39 = v38;
  *(void *)&double result = 1;
  *(_OWORD *)(v39 + 8) = xmmword_1C277F760;
  *(unsigned char *)(v39 + 24) = 0;
  *(void *)(a5 + v27[7]) = v5;
  uint64_t v41 = (void *)(a5 + v27[8]);
  *uint64_t v41 = a3;
  v41[1] = a4;
  return result;
}

unsigned char *sub_1C264806C(unsigned char *result, char a2)
{
  *double result = a2;
  return result;
}

uint64_t sub_1C2648074(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C26480D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t GeneratorContext.environment.getter()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for GeneratorContext() + 28));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3) & 1;
}

uint64_t GeneratorContext.healthStore.getter()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for GeneratorContext() + 28));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t GeneratorContext.feedItemContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for GeneratorContext();
  return sub_1C26482E4(v1 + *(int *)(v3 + 28), a1);
}

uint64_t GeneratorContext.isLaunchGeneration.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for GeneratorContext() + 24));
}

uint64_t type metadata accessor for GeneratorContext()
{
  uint64_t result = qword_1EBB806E0;
  if (!qword_1EBB806E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C26482E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C2648348(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1C277BBE0();
  uint64_t v8 = result;
  if (v2)
  {
    unint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1C26483E0(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1C26483E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1C277C8C0();
  swift_bridgeObjectRetain();
  sub_1C277B8B0();
  uint64_t v8 = sub_1C277C910();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1C277C7E0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1C277C7E0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1C2648590(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1C2648590(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1C2693F0C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1C273F534();
      goto LABEL_22;
    }
    sub_1C2697C20();
  }
  uint64_t v11 = *v4;
  sub_1C277C8C0();
  sub_1C277B8B0();
  uint64_t result = sub_1C277C910();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1C277C7E0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1C277C840();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        unint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1C277C7E0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1C264872C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C264874C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C264874C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C26488D8(0, (unint64_t *)&qword_1EBB85EA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

void sub_1C26488D8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2648924(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C277BB20();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1C264896C(uint64_t result)
{
  uint64_t v4 = v2;
  uint64_t v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t result = sub_1C277C1C0();
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = *(void *)(result + 16);
  }
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C277C5A0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = v20 + v6;
    if (!__OFADD__(v20, v6)) {
      goto LABEL_6;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v7 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v6;
  if (__OFADD__(v7, v6)) {
    goto LABEL_24;
  }
LABEL_6:
  unint64_t v9 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v9;
  uint64_t v11 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_16;
    }
    uint64_t v11 = 1;
  }
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 <= v8) {
    uint64_t v13 = v8;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = MEMORY[0x1C875C240](v11, v13, 1, v9);
  swift_bridgeObjectRelease();
  *uint64_t v4 = v14;
  uint64_t v12 = v14 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
  uint64_t v15 = *(void *)(v12 + 16);
  uint64_t v16 = (*(void *)(v12 + 24) >> 1) - v15;
  uint64_t result = (uint64_t)sub_1C2649270(&v44, (void *)(v12 + 8 * v15 + 32), v16, v5);
  if (result < v6)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (result >= 1)
  {
    uint64_t v17 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v18 = __OFADD__(v17, result);
    uint64_t v19 = v17 + result;
    if (v18)
    {
      __break(1u);
LABEL_33:
      if (!sub_1C277C200()) {
        goto LABEL_21;
      }
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E80);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v24 = v43;
      swift_unknownObjectRelease();
      while (2)
      {
        if (!v24) {
          goto LABEL_21;
        }
        while (1)
        {
          uint64_t v26 = *v4 & 0xFFFFFFFFFFFFFF8;
          if (v3 + 1 > *(void *)(v26 + 0x18) >> 1)
          {
            sub_1C277BA90();
            uint64_t v26 = *v4 & 0xFFFFFFFFFFFFFF8;
          }
          uint64_t v27 = *(void *)(v26 + 24) >> 1;
          if (v3 < v27) {
            break;
          }
LABEL_37:
          *(void *)(v26 + 16) = v3;
        }
        uint64_t v28 = v26 + 32;
        while (1)
        {
          *(void *)(v28 + 8 * v3++) = v24;
          int64_t v29 = v47;
          if (v44 < 0)
          {
            if (!sub_1C277C200()) {
              goto LABEL_74;
            }
            sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E80);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            uint64_t v24 = v43;
            swift_unknownObjectRelease();
            goto LABEL_49;
          }
          if (!v48) {
            break;
          }
          unint64_t v30 = (v48 - 1) & v48;
          unint64_t v31 = __clz(__rbit64(v48)) | (v47 << 6);
LABEL_45:
          uint64_t v24 = *(void **)(*(void *)(v44 + 48) + 8 * v31);
          id v32 = v24;
LABEL_46:
          int64_t v47 = v29;
          unint64_t v48 = v30;
LABEL_49:
          if (!v24)
          {
LABEL_74:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v3;
            goto LABEL_21;
          }
          if (v3 >= v27)
          {
            uint64_t v26 = *v4 & 0xFFFFFFFFFFFFFF8;
            goto LABEL_37;
          }
        }
        int64_t v33 = v47 + 1;
        if (__OFADD__(v47, 1))
        {
          __break(1u);
LABEL_98:
          uint64_t v24 = 0;
          unint64_t v22 = 0;
          int64_t v21 = v1;
LABEL_30:
          int64_t v47 = v21;
          unint64_t v48 = v22;
          continue;
        }
        break;
      }
      int64_t v34 = (unint64_t)(v46 + 64) >> 6;
      if (v33 >= v34)
      {
        uint64_t v24 = 0;
        unint64_t v30 = 0;
        goto LABEL_46;
      }
      unint64_t v35 = *(void *)(v45 + 8 * v33);
      if (!v35)
      {
        int64_t v36 = v47 + 2;
        if (v47 + 2 >= v34) {
          goto LABEL_71;
        }
        unint64_t v35 = *(void *)(v45 + 8 * v36);
        if (!v35)
        {
          int64_t v1 = v47 + 3;
          if (v47 + 3 >= v34) {
            goto LABEL_72;
          }
          unint64_t v35 = *(void *)(v45 + 8 * v1);
          if (v35)
          {
            int64_t v33 = v47 + 3;
            goto LABEL_55;
          }
          int64_t v36 = v47 + 4;
          if (v47 + 4 >= v34)
          {
            uint64_t v24 = 0;
            unint64_t v30 = 0;
            int64_t v29 = v47 + 3;
            goto LABEL_46;
          }
          unint64_t v35 = *(void *)(v45 + 8 * v36);
          if (!v35)
          {
            int64_t v33 = v47 + 5;
            if (v47 + 5 >= v34)
            {
LABEL_72:
              uint64_t v24 = 0;
              unint64_t v30 = 0;
              int64_t v29 = v36;
              goto LABEL_46;
            }
            unint64_t v35 = *(void *)(v45 + 8 * v33);
            if (!v35)
            {
              int64_t v33 = v34 - 1;
              uint64_t v37 = v47 + 6;
              while (v34 != v37)
              {
                unint64_t v35 = *(void *)(v45 + 8 * v37++);
                if (v35)
                {
                  int64_t v33 = v37 - 1;
                  goto LABEL_55;
                }
              }
LABEL_71:
              uint64_t v24 = 0;
              unint64_t v30 = 0;
              int64_t v29 = v33;
              goto LABEL_46;
            }
            goto LABEL_55;
          }
        }
        int64_t v33 = v36;
      }
LABEL_55:
      unint64_t v30 = (v35 - 1) & v35;
      unint64_t v31 = __clz(__rbit64(v35)) + (v33 << 6);
      int64_t v29 = v33;
      goto LABEL_45;
    }
    *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
  }
  if (result != v16)
  {
LABEL_21:
    sub_1C2648F6C();
    return sub_1C277BA60();
  }
LABEL_26:
  uint64_t v3 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  int64_t v21 = v47;
  if (v44 < 0) {
    goto LABEL_33;
  }
  if (v48)
  {
    unint64_t v22 = (v48 - 1) & v48;
    unint64_t v23 = __clz(__rbit64(v48)) | (v47 << 6);
LABEL_29:
    uint64_t v24 = *(void **)(*(void *)(v44 + 48) + 8 * v23);
    id v25 = v24;
    goto LABEL_30;
  }
  int64_t v38 = v47 + 1;
  if (!__OFADD__(v47, 1))
  {
    int64_t v39 = (unint64_t)(v46 + 64) >> 6;
    if (v38 >= v39)
    {
      uint64_t v24 = 0;
      unint64_t v22 = 0;
      goto LABEL_30;
    }
    unint64_t v40 = *(void *)(v45 + 8 * v38);
    if (v40) {
      goto LABEL_79;
    }
    int64_t v41 = v47 + 2;
    if (v47 + 2 >= v39)
    {
LABEL_95:
      uint64_t v24 = 0;
      unint64_t v22 = 0;
      int64_t v21 = v38;
      goto LABEL_30;
    }
    unint64_t v40 = *(void *)(v45 + 8 * v41);
    if (v40) {
      goto LABEL_83;
    }
    int64_t v1 = v47 + 3;
    if (v47 + 3 < v39)
    {
      unint64_t v40 = *(void *)(v45 + 8 * v1);
      if (v40)
      {
        int64_t v38 = v47 + 3;
        goto LABEL_79;
      }
      int64_t v41 = v47 + 4;
      if (v47 + 4 >= v39) {
        goto LABEL_98;
      }
      unint64_t v40 = *(void *)(v45 + 8 * v41);
      if (v40)
      {
LABEL_83:
        int64_t v38 = v41;
LABEL_79:
        unint64_t v22 = (v40 - 1) & v40;
        unint64_t v23 = __clz(__rbit64(v40)) + (v38 << 6);
        int64_t v21 = v38;
        goto LABEL_29;
      }
      int64_t v38 = v47 + 5;
      if (v47 + 5 < v39)
      {
        unint64_t v40 = *(void *)(v45 + 8 * v38);
        if (!v40)
        {
          int64_t v38 = v39 - 1;
          uint64_t v42 = v47 + 6;
          do
          {
            if (v39 == v42) {
              goto LABEL_95;
            }
            unint64_t v40 = *(void *)(v45 + 8 * v42++);
          }
          while (!v40);
          int64_t v38 = v42 - 1;
        }
        goto LABEL_79;
      }
    }
    uint64_t v24 = 0;
    unint64_t v22 = 0;
    int64_t v21 = v41;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2648F6C()
{
  return swift_release();
}

void *sub_1C2648F74(void *result, void *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7 = a4;
  unint64_t v9 = a2;
  int64_t v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1C277C170();
    sub_1C2644ED8(0, a5);
    sub_1C264E7E8(a7, a5);
    uint64_t result = (void *)sub_1C277BC10();
    uint64_t v7 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    int64_t v14 = v36;
    unint64_t v15 = v37;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v16 = 0;
    goto LABEL_38;
  }
  int64_t v14 = 0;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v12 = a4 + 56;
  uint64_t v13 = ~v24;
  uint64_t v25 = -v24;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v15 = v26 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v16 = 0;
LABEL_38:
    uint64_t v27 = v29;
LABEL_41:
    *uint64_t v27 = v7;
    v27[1] = v12;
    void v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (void *)v16;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v16 = 0;
  int64_t v30 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_1C277C200()) {
        goto LABEL_40;
      }
      sub_1C2644ED8(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v19 = v32;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v32) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v20 >= v30)
    {
      unint64_t v15 = 0;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v20);
    if (v21) {
      goto LABEL_23;
    }
    int64_t v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      unint64_t v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30) {
        goto LABEL_44;
      }
      unint64_t v21 = *(void *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        int64_t v20 = v14 + 3;
        goto LABEL_23;
      }
      int64_t v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        unint64_t v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (!v21)
      {
        int64_t v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          unint64_t v15 = 0;
          int64_t v14 = v22;
          goto LABEL_40;
        }
        unint64_t v21 = *(void *)(v12 + 8 * v20);
        if (!v21)
        {
          int64_t v23 = v14 + 6;
          while (v30 != v23)
          {
            unint64_t v21 = *(void *)(v12 + 8 * v23++);
            if (v21)
            {
              int64_t v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v15 = 0;
          int64_t v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v20 = v22;
LABEL_23:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v14 = v20;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    id v19 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      uint64_t v16 = a3;
LABEL_40:
      uint64_t v13 = v28;
      uint64_t v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void *sub_1C2649270(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2648F74(a1, a2, a3, a4, (unint64_t *)&qword_1EBB85E80, 0x1E4F2B2C0, (unint64_t *)&qword_1EBB84498);
}

uint64_t sub_1C264928C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C26492BC(a1, a2, a3, *v3, (unint64_t *)&unk_1EBB86248, (uint64_t)&type metadata for ContentKind);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C26492BC(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  int64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    int64_t v11 = *((void *)a4 + 2);
  }
  else {
    int64_t v11 = v9;
  }
  if (v11)
  {
    sub_1C26488D8(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v14 = v12 + 32;
  unint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v14 >= &v15[v10]) {
      memmove(v14, v15, v10);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v10] || v14 >= &v15[v10])
  {
    memcpy(v14, v15, v10);
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

void sub_1C2649424()
{
  if (!qword_1EBB83140)
  {
    sub_1C262B07C(255, &qword_1EBB82928);
    unint64_t v0 = sub_1C277C7C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83140);
    }
  }
}

uint64_t GeneratorDomain.init(sourceProfile:contentKinds:hkTypes:complexity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v8 = *a4;
  uint64_t v9 = sub_1C2649760(a2);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1C2649500(a3);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = v9;
  *(void *)(a5 + 16) = v10;
  *(unsigned char *)(a5 + 24) = v8;
  return result;
}

uint64_t sub_1C2649500(unint64_t a1)
{
  return sub_1C2644A64(a1, (unint64_t *)&qword_1EBB85E80, 0x1E4F2B2C0, (unint64_t *)&qword_1EBB84498, (void (*)(id *, uint64_t))sub_1C2644BF8);
}

unint64_t GeneratorDomain.debugDescription.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 16);
  if ((v2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(v2 + 16) > 1uLL) {
      goto LABEL_5;
    }
LABEL_6:
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E80);
    sub_1C264AB48();
    swift_bridgeObjectRetain();
    sub_1C277BBD0();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (sub_1C277C1C0() <= 1) {
    goto LABEL_6;
  }
  sub_1C277C1C0();
LABEL_5:
  sub_1C277C7B0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
LABEL_7:
  id v3 = v1;
  sub_1C264A9B8(v1);
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C26497D4();
  swift_bridgeObjectRetain();
  sub_1C277BBD0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C277B860();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

uint64_t sub_1C2649760(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1C26497D4();
  uint64_t result = sub_1C277BBE0();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1C2649828(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_1C26497D4()
{
  unint64_t result = qword_1EBB806D0;
  if (!qword_1EBB806D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB806D0);
  }
  return result;
}

uint64_t sub_1C2649828(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_1C277C8C0();
  ContentKind.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_1C277B8B0();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C277C910();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  uint64_t v23 = a2;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_79:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *v24;
    *uint64_t v24 = 0x8000000000000000;
    char v21 = v23;
    sub_1C264A294(v23, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v24 = v26;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_83;
  }
  uint64_t v8 = ~v6;
  uint64_t v9 = a2;
  while (2)
  {
    unint64_t v10 = 0xD000000000000011;
    unint64_t v11 = 0x80000001C2788B70;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v11 = 0xE500000000000000;
        unint64_t v10 = 0x7472656C61;
        break;
      case 2:
        unint64_t v11 = 0xE300000000000000;
        unint64_t v10 = 7368801;
        break;
      case 3:
        unint64_t v11 = 0xE700000000000000;
        unint64_t v10 = 0x656C6369747261;
        break;
      case 4:
        unint64_t v11 = 0xE800000000000000;
        unint64_t v10 = 0x79726F6765746163;
        break;
      case 5:
        unint64_t v11 = 0xE400000000000000;
        unint64_t v10 = 1635017060;
        break;
      case 6:
        unint64_t v10 = 0x6D6D755361746164;
        unint64_t v11 = 0xEB00000000797261;
        break;
      case 7:
        uint64_t v12 = "cle";
        goto LABEL_13;
      case 8:
        uint64_t v12 = "dataSummaryAlert";
        goto LABEL_13;
      case 9:
        uint64_t v12 = "dataSummaryChart";
LABEL_13:
        unint64_t v11 = (unint64_t)v12 | 0x8000000000000000;
        unint64_t v10 = 0xD000000000000010;
        break;
      case 0xA:
        unint64_t v10 = 0x5365727574616566;
        unint64_t v11 = 0xED00007375746174;
        break;
      case 0xB:
        unint64_t v11 = 0xE900000000000074;
        goto LABEL_17;
      case 0xC:
        unint64_t v11 = 0xEF68637261655374;
LABEL_17:
        unint64_t v10 = 0x6867696C68676968;
        break;
      case 0xD:
        unint64_t v10 = 0x697461676976616ELL;
        unint64_t v11 = 0xEA00000000006E6FLL;
        break;
      case 0xE:
        unint64_t v11 = 0xE600000000000000;
        unint64_t v10 = 0x617461446F6ELL;
        break;
      case 0xF:
        unint64_t v11 = 0xE500000000000000;
        unint64_t v10 = 0x726568746FLL;
        break;
      case 0x10:
        unint64_t v10 = 0x6D726F6674616C70;
        unint64_t v11 = 0xED00007472656C41;
        break;
      case 0x11:
        unint64_t v10 = 0x6F69746F6D6F7270;
        unint64_t v11 = 0xE90000000000006ELL;
        break;
      case 0x12:
        unint64_t v11 = 0xE600000000000000;
        unint64_t v10 = 0x74706D6F7270;
        break;
      case 0x13:
        unint64_t v11 = 0xE700000000000000;
        unint64_t v10 = 0x656C69666F7270;
        break;
      case 0x14:
        unint64_t v10 = 0x6E6F6974616C6572;
        unint64_t v11 = 0xEC00000070696873;
        break;
      case 0x15:
        unint64_t v11 = 0xE800000000000000;
        unint64_t v10 = 0x73676E6974746573;
        break;
      case 0x16:
        unint64_t v11 = 0xE600000000000000;
        unint64_t v10 = 0x657461647075;
        break;
      case 0x17:
        unint64_t v11 = 0xE700000000000000;
        unint64_t v10 = 0x72616265646973;
        break;
      default:
        break;
    }
    unint64_t v13 = 0xD000000000000011;
    unint64_t v14 = 0x80000001C2788B70;
    switch(v9)
    {
      case 1:
        unint64_t v14 = 0xE500000000000000;
        if (v10 == 0x7472656C61) {
          goto LABEL_73;
        }
        goto LABEL_74;
      case 2:
        unint64_t v14 = 0xE300000000000000;
        if (v10 != 7368801) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 3:
        unint64_t v14 = 0xE700000000000000;
        uint64_t v15 = 0x6C6369747261;
        goto LABEL_65;
      case 4:
        unint64_t v14 = 0xE800000000000000;
        if (v10 != 0x79726F6765746163) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 5:
        unint64_t v14 = 0xE400000000000000;
        if (v10 != 1635017060) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 6:
        unint64_t v14 = 0xEB00000000797261;
        if (v10 != 0x6D6D755361746164) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 7:
        uint64_t v16 = "cle";
        goto LABEL_44;
      case 8:
        uint64_t v16 = "dataSummaryAlert";
        goto LABEL_44;
      case 9:
        uint64_t v16 = "dataSummaryChart";
LABEL_44:
        unint64_t v14 = (unint64_t)v16 | 0x8000000000000000;
        if (v10 != 0xD000000000000010) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 10:
        uint64_t v17 = 0x5365727574616566;
        uint64_t v18 = 0x7375746174;
        goto LABEL_58;
      case 11:
        unint64_t v14 = 0xE900000000000074;
        goto LABEL_49;
      case 12:
        unint64_t v14 = 0xEF68637261655374;
LABEL_49:
        if (v10 != 0x6867696C68676968) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 13:
        unint64_t v14 = 0xEA00000000006E6FLL;
        if (v10 != 0x697461676976616ELL) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 14:
        unint64_t v14 = 0xE600000000000000;
        if (v10 != 0x617461446F6ELL) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 15:
        unint64_t v14 = 0xE500000000000000;
        if (v10 != 0x726568746FLL) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 16:
        uint64_t v17 = 0x6D726F6674616C70;
        uint64_t v18 = 0x7472656C41;
LABEL_58:
        unint64_t v14 = v18 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
        if (v10 != v17) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 17:
        unint64_t v14 = 0xE90000000000006ELL;
        if (v10 != 0x6F69746F6D6F7270) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 18:
        unint64_t v14 = 0xE600000000000000;
        if (v10 != 0x74706D6F7270) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 19:
        unint64_t v14 = 0xE700000000000000;
        uint64_t v15 = 0x6C69666F7270;
LABEL_65:
        if (v10 != (v15 & 0xFFFFFFFFFFFFLL | 0x65000000000000)) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 20:
        unint64_t v14 = 0xEC00000070696873;
        if (v10 != 0x6E6F6974616C6572) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 21:
        unint64_t v14 = 0xE800000000000000;
        if (v10 != 0x73676E6974746573) {
          goto LABEL_74;
        }
        goto LABEL_73;
      case 22:
        unint64_t v14 = 0xE600000000000000;
        unint64_t v13 = 0x657461647075;
        goto LABEL_72;
      case 23:
        unint64_t v14 = 0xE700000000000000;
        if (v10 != 0x72616265646973) {
          goto LABEL_74;
        }
        goto LABEL_73;
      default:
LABEL_72:
        if (v10 != v13) {
          goto LABEL_74;
        }
LABEL_73:
        if (v11 == v14)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_82;
        }
LABEL_74:
        char v19 = sub_1C277C7E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_79;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_82:
        uint64_t result = 0;
        char v21 = *(unsigned char *)(*(void *)(*v24 + 48) + v7);
LABEL_83:
        *a1 = v21;
        return result;
    }
  }
}

uint64_t sub_1C2649F18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1C277C7E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1C2649FBC()
{
  return sub_1C277C910();
}

unint64_t ContentKind.rawValue.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7472656C61;
      break;
    case 2:
      unint64_t result = 7368801;
      break;
    case 3:
      unint64_t result = 0x656C6369747261;
      break;
    case 4:
      unint64_t result = 0x79726F6765746163;
      break;
    case 5:
      unint64_t result = 1635017060;
      break;
    case 6:
      unint64_t result = 0x6D6D755361746164;
      break;
    case 7:
    case 8:
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xA:
      unint64_t result = 0x5365727574616566;
      break;
    case 0xB:
      unint64_t result = 0x6867696C68676968;
      break;
    case 0xC:
      unint64_t result = 0x6867696C68676968;
      break;
    case 0xD:
      unint64_t result = 0x697461676976616ELL;
      break;
    case 0xE:
      unint64_t result = 0x617461446F6ELL;
      break;
    case 0xF:
      unint64_t result = 0x726568746FLL;
      break;
    case 0x10:
      unint64_t result = 0x6D726F6674616C70;
      break;
    case 0x11:
      unint64_t result = 0x6F69746F6D6F7270;
      break;
    case 0x12:
      unint64_t result = 0x74706D6F7270;
      break;
    case 0x13:
      unint64_t result = 0x656C69666F7270;
      break;
    case 0x14:
      unint64_t result = 0x6E6F6974616C6572;
      break;
    case 0x15:
      unint64_t result = 0x73676E6974746573;
      break;
    case 0x16:
      unint64_t result = 0x657461647075;
      break;
    case 0x17:
      unint64_t result = 0x72616265646973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C264A294(uint64_t result, unint64_t a2, char a3)
{
  unsigned __int8 v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C26950F4();
    }
    else
    {
      if (v7 > v6)
      {
        unint64_t result = (uint64_t)sub_1C2740108();
        goto LABEL_85;
      }
      sub_1C2698CF0();
    }
    uint64_t v8 = *v3;
    sub_1C277C8C0();
    ContentKind.rawValue.getter();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
    unint64_t result = sub_1C277C910();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      uint64_t v11 = v5;
      while (2)
      {
        unint64_t v12 = 0xD000000000000011;
        unint64_t v13 = 0x80000001C2788B70;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v13 = 0xE500000000000000;
            unint64_t v12 = 0x7472656C61;
            break;
          case 2:
            unint64_t v13 = 0xE300000000000000;
            unint64_t v12 = 7368801;
            break;
          case 3:
            unint64_t v13 = 0xE700000000000000;
            unint64_t v12 = 0x656C6369747261;
            break;
          case 4:
            unint64_t v13 = 0xE800000000000000;
            unint64_t v12 = 0x79726F6765746163;
            break;
          case 5:
            unint64_t v13 = 0xE400000000000000;
            unint64_t v12 = 1635017060;
            break;
          case 6:
            unint64_t v12 = 0x6D6D755361746164;
            unint64_t v13 = 0xEB00000000797261;
            break;
          case 7:
            unint64_t v14 = "cle";
            goto LABEL_25;
          case 8:
            unint64_t v14 = "dataSummaryAlert";
            goto LABEL_25;
          case 9:
            unint64_t v14 = "dataSummaryChart";
LABEL_25:
            unint64_t v13 = (unint64_t)v14 | 0x8000000000000000;
            unint64_t v12 = 0xD000000000000010;
            break;
          case 0xA:
            unint64_t v12 = 0x5365727574616566;
            unint64_t v13 = 0xED00007375746174;
            break;
          case 0xB:
            unint64_t v13 = 0xE900000000000074;
            unint64_t v12 = 0x6867696C68676968;
            break;
          case 0xC:
            unint64_t v12 = 0x6867696C68676968;
            unint64_t v13 = 0xEF68637261655374;
            break;
          case 0xD:
            unint64_t v12 = 0x697461676976616ELL;
            unint64_t v13 = 0xEA00000000006E6FLL;
            break;
          case 0xE:
            unint64_t v13 = 0xE600000000000000;
            unint64_t v12 = 0x617461446F6ELL;
            break;
          case 0xF:
            unint64_t v13 = 0xE500000000000000;
            unint64_t v12 = 0x726568746FLL;
            break;
          case 0x10:
            unint64_t v12 = 0x6D726F6674616C70;
            unint64_t v13 = 0xED00007472656C41;
            break;
          case 0x11:
            unint64_t v12 = 0x6F69746F6D6F7270;
            unint64_t v13 = 0xE90000000000006ELL;
            break;
          case 0x12:
            unint64_t v13 = 0xE600000000000000;
            unint64_t v12 = 0x74706D6F7270;
            break;
          case 0x13:
            unint64_t v13 = 0xE700000000000000;
            unint64_t v12 = 0x656C69666F7270;
            break;
          case 0x14:
            unint64_t v12 = 0x6E6F6974616C6572;
            unint64_t v13 = 0xEC00000070696873;
            break;
          case 0x15:
            unint64_t v13 = 0xE800000000000000;
            unint64_t v12 = 0x73676E6974746573;
            break;
          case 0x16:
            unint64_t v13 = 0xE600000000000000;
            unint64_t v12 = 0x657461647075;
            break;
          case 0x17:
            unint64_t v13 = 0xE700000000000000;
            unint64_t v12 = 0x72616265646973;
            break;
          default:
            break;
        }
        unint64_t v15 = 0xD000000000000011;
        unint64_t v16 = 0x80000001C2788B70;
        switch(v11)
        {
          case 1:
            unint64_t v16 = 0xE500000000000000;
            if (v12 == 0x7472656C61) {
              goto LABEL_79;
            }
            goto LABEL_80;
          case 2:
            unint64_t v16 = 0xE300000000000000;
            if (v12 != 7368801) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 3:
            unint64_t v16 = 0xE700000000000000;
            if (v12 != 0x656C6369747261) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 4:
            unint64_t v16 = 0xE800000000000000;
            if (v12 != 0x79726F6765746163) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 5:
            unint64_t v16 = 0xE400000000000000;
            if (v12 != 1635017060) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 6:
            unint64_t v16 = 0xEB00000000797261;
            if (v12 != 0x6D6D755361746164) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 7:
            char v19 = "cle";
            goto LABEL_60;
          case 8:
            char v19 = "dataSummaryAlert";
            goto LABEL_60;
          case 9:
            char v19 = "dataSummaryChart";
LABEL_60:
            unint64_t v16 = (unint64_t)v19 | 0x8000000000000000;
            if (v12 != 0xD000000000000010) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 10:
            uint64_t v17 = 0x5365727574616566;
            uint64_t v18 = 0x7375746174;
            goto LABEL_63;
          case 11:
            unint64_t v16 = 0xE900000000000074;
            if (v12 != 0x6867696C68676968) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 12:
            unint64_t v16 = 0xEF68637261655374;
            if (v12 != 0x6867696C68676968) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 13:
            unint64_t v16 = 0xEA00000000006E6FLL;
            if (v12 != 0x697461676976616ELL) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 14:
            unint64_t v16 = 0xE600000000000000;
            if (v12 != 0x617461446F6ELL) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 15:
            unint64_t v16 = 0xE500000000000000;
            if (v12 != 0x726568746FLL) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 16:
            uint64_t v17 = 0x6D726F6674616C70;
            uint64_t v18 = 0x7472656C41;
LABEL_63:
            unint64_t v16 = v18 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
            if (v12 != v17) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 17:
            unint64_t v16 = 0xE90000000000006ELL;
            if (v12 != 0x6F69746F6D6F7270) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 18:
            unint64_t v16 = 0xE600000000000000;
            if (v12 != 0x74706D6F7270) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 19:
            unint64_t v16 = 0xE700000000000000;
            unint64_t v15 = 0x656C69666F7270;
            goto LABEL_78;
          case 20:
            unint64_t v16 = 0xEC00000070696873;
            if (v12 != 0x6E6F6974616C6572) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 21:
            unint64_t v16 = 0xE800000000000000;
            if (v12 != 0x73676E6974746573) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 22:
            unint64_t v16 = 0xE600000000000000;
            if (v12 != 0x657461647075) {
              goto LABEL_80;
            }
            goto LABEL_79;
          case 23:
            unint64_t v16 = 0xE700000000000000;
            if (v12 != 0x72616265646973) {
              goto LABEL_80;
            }
            goto LABEL_79;
          default:
LABEL_78:
            if (v12 != v15) {
              goto LABEL_80;
            }
LABEL_79:
            if (v13 == v16) {
              goto LABEL_88;
            }
LABEL_80:
            char v20 = sub_1C277C7E0();
            swift_bridgeObjectRelease();
            unint64_t result = swift_bridgeObjectRelease();
            if (v20) {
              goto LABEL_89;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_85:
  uint64_t v21 = *v25;
  *(void *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v21 + 48) + a2) = v26;
  uint64_t v22 = *(void *)(v21 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
LABEL_88:
    swift_bridgeObjectRelease_n();
LABEL_89:
    unint64_t result = sub_1C277C840();
    __break(1u);
  }
  else
  {
    *(void *)(v21 + 16) = v24;
  }
  return result;
}

uint64_t sub_1C264A9B8(void *a1)
{
  uint64_t v2 = sub_1C277A8A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned __int8 v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0x636974736F6E6761;
  }
  id v6 = a1;
  objc_msgSend(v6, sel_type);
  id v7 = (id)HKStringFromProfileType();
  uint64_t v8 = sub_1C277B850();
  uint64_t v10 = v9;

  v13[0] = v8;
  v13[1] = v10;
  sub_1C277B8D0();
  id v11 = objc_msgSend(v6, sel_identifier);
  sub_1C277A880();

  sub_1C277A850();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1C277B8D0();

  swift_bridgeObjectRelease();
  return v13[0];
}

unint64_t sub_1C264AB48()
{
  unint64_t result = qword_1EBB84498;
  if (!qword_1EBB84498)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85E80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB84498);
  }
  return result;
}

uint64_t destroy for GeneratorDomain(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_1C264ABF4(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned __int8 v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1C264AC6C(uint64_t a1, void *a2)
{
  sub_1C264AC78(a1, a2, *(void (**)(id))(v2 + 16));
}

void sub_1C264AC78(uint64_t a1, id a2, void (*a3)(id))
{
  if (a2)
  {
    id v5 = a2;
    a3(a2);
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    unint64_t v7 = (unint64_t)&v6[4];
    uint64_t v8 = v6 + 16;
    os_unfair_lock_lock(v6 + 16);
    sub_1C264AD70(v7);
    os_unfair_lock_unlock(v8);
    a3(0);
  }
}

void sub_1C264AD64(void *a1)
{
  sub_1C2639BA4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(unint64_t, void))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C264AD70(unint64_t a1)
{
  return sub_1C264AD8C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C264AD8C(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if (a2 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C277C5A0();
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  unint64_t v33 = v2;
  unint64_t v34 = v2 & 0xC000000000000001;
  uint64_t v5 = 4;
  uint64_t v31 = v4;
  id v32 = (void *)a1;
  while (1)
  {
    if (v34) {
      id v7 = (id)MEMORY[0x1C875C230](v5 - 4, v2);
    }
    else {
      id v7 = *(id *)(v2 + 8 * v5);
    }
    uint64_t v8 = v7;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v35 = v5 - 3;
    uint64_t v36 = v5;
    id v9 = objc_msgSend(v7, sel_package);
    uint64_t v10 = sub_1C277B850();
    uint64_t v12 = v11;

    unint64_t v2 = (unint64_t)objc_msgSend(v8, sel_name);
    uint64_t v13 = sub_1C277B850();
    uint64_t v15 = v14;

    id v16 = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *(void **)a1;
    unint64_t v37 = *(void **)a1;
    *(void *)a1 = 0x8000000000000000;
    a1 = sub_1C264BCE4(v10, v12, v13, v15);
    uint64_t v20 = v18[2];
    BOOL v21 = (v19 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      goto LABEL_22;
    }
    unint64_t v2 = v19;
    if (v18[3] < v22) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v25 = v37;
      if (v19) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1C26770CC();
      uint64_t v25 = v37;
      if (v2)
      {
LABEL_4:
        uint64_t v6 = v25[7];

        *(void *)(v6 + 8 * a1) = v16;
        goto LABEL_5;
      }
    }
LABEL_17:
    v25[(a1 >> 6) + 8] |= 1 << a1;
    char v26 = (uint64_t *)(v25[6] + 32 * a1);
    *char v26 = v10;
    v26[1] = v12;
    void v26[2] = v13;
    v26[3] = v15;
    *(void *)(v25[7] + 8 * a1) = v16;
    uint64_t v27 = v25[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_23;
    }
    _OWORD v25[2] = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_5:
    a1 = (unint64_t)v32;
    *id v32 = v25;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v36 + 1;
    unint64_t v2 = v33;
    if (v35 == v31) {
      return swift_bridgeObjectRelease();
    }
  }
  sub_1C264BE84(v22, isUniquelyReferenced_nonNull_native);
  unint64_t v23 = sub_1C264BCE4(v10, v12, v13, v15);
  if ((v2 & 1) == (v24 & 1))
  {
    a1 = v23;
    uint64_t v25 = v37;
    if (v2) {
      goto LABEL_4;
    }
    goto LABEL_17;
  }
  uint64_t result = sub_1C277C850();
  __break(1u);
  return result;
}

uint64_t sub_1C264B054(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v134 = a7;
  uint64_t v133 = a6;
  v132[1] = a5;
  uint64_t v150 = a2;
  uint64_t v10 = sub_1C277B630();
  uint64_t v139 = *(void *)(v10 - 8);
  uint64_t v140 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v138 = (char *)v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_1C277B660();
  uint64_t v136 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  uint64_t v135 = (char *)v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v145 = sub_1C264C33C(MEMORY[0x1E4FBC860]);
  unsigned int v141 = a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v146 = v13 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v147 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v148 = v13;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  uint64_t v142 = a4 + 9;
  unint64_t v144 = a4;
  uint64_t v149 = a3;
  while (v17)
  {
    unint64_t v19 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    unint64_t v20 = v19 | (v18 << 6);
LABEL_23:
    id v24 = *(id *)(*(void *)(v148 + 56) + 8 * v20);
    uint64_t v25 = v24;
    if (!a3) {
      goto LABEL_31;
    }
    id v26 = objc_msgSend(v24, sel_package);
    uint64_t v27 = sub_1C277B850();
    uint64_t v29 = v28;

    if (v27 == v150 && v29 == a3)
    {
      swift_bridgeObjectRelease();
LABEL_31:
      if (!a4) {
        goto LABEL_55;
      }
      id v32 = objc_msgSend(v25, sel_name);
      uint64_t v33 = sub_1C277B850();
      uint64_t v35 = v34;

      uint64_t v36 = a4[2];
      if (v36)
      {
        BOOL v37 = a4[4] == v33 && a4[5] == v35;
        if (!v37 && (sub_1C277C7E0() & 1) == 0)
        {
          if (v36 == 1) {
            goto LABEL_53;
          }
          BOOL v38 = a4[6] == v33 && a4[7] == v35;
          if (!v38 && (sub_1C277C7E0() & 1) == 0)
          {
            if (v36 != 2)
            {
              int64_t v39 = v142;
              uint64_t v40 = 2;
              while (1)
              {
                uint64_t v41 = v40 + 1;
                if (__OFADD__(v40, 1)) {
                  break;
                }
                BOOL v42 = *(v39 - 1) == v33 && *v39 == v35;
                if (v42 || (sub_1C277C7E0() & 1) != 0) {
                  goto LABEL_54;
                }
                v39 += 2;
                ++v40;
                if (v41 == v36) {
                  goto LABEL_53;
                }
              }
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
              goto LABEL_144;
            }
LABEL_53:

            goto LABEL_67;
          }
        }
LABEL_54:
        swift_bridgeObjectRelease();
LABEL_55:
        int64_t v143 = v18;
        id v43 = objc_msgSend(v25, sel_package);
        uint64_t v44 = sub_1C277B850();
        uint64_t v46 = v45;

        id v47 = objc_msgSend(v25, sel_name);
        uint64_t v48 = sub_1C277B850();
        uint64_t v50 = v49;

        id v51 = v25;
        unint64_t v52 = v145;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        aBlock[0] = v52;
        unint64_t v55 = sub_1C264BCE4(v44, v46, v48, v50);
        uint64_t v56 = *(void *)(v52 + 16);
        BOOL v57 = (v54 & 1) == 0;
        uint64_t v58 = v56 + v57;
        if (__OFADD__(v56, v57)) {
          goto LABEL_139;
        }
        char v59 = v54;
        if (*(void *)(v52 + 24) >= v58)
        {
          int64_t v18 = v143;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1C26770CC();
            int64_t v18 = v143;
          }
          a4 = v144;
        }
        else
        {
          sub_1C264BE84(v58, isUniquelyReferenced_nonNull_native);
          unint64_t v60 = sub_1C264BCE4(v44, v46, v48, v50);
          if ((v59 & 1) != (v61 & 1)) {
            goto LABEL_145;
          }
          unint64_t v55 = v60;
          int64_t v18 = v143;
          a4 = v144;
        }
        uint64_t v62 = (void *)aBlock[0];
        unint64_t v145 = aBlock[0];
        if (v59)
        {
          uint64_t v63 = *(void *)(aBlock[0] + 56);

          *(void *)(v63 + 8 * v55) = v51;
        }
        else
        {
          *(void *)(aBlock[0] + 8 * (v55 >> 6) + 64) |= 1 << v55;
          id v64 = (uint64_t *)(v62[6] + 32 * v55);
          *id v64 = v44;
          v64[1] = v46;
          v64[2] = v48;
          v64[3] = v50;
          *(void *)(v62[7] + 8 * v55) = v51;
          uint64_t v65 = v62[2];
          BOOL v66 = __OFADD__(v65, 1);
          uint64_t v67 = v65 + 1;
          if (v66) {
            goto LABEL_141;
          }
          v62[2] = v67;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_67:
        swift_bridgeObjectRelease();
        a3 = v149;
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {
      char v31 = sub_1C277C7E0();
      swift_bridgeObjectRelease();
      if (v31) {
        goto LABEL_31;
      }
    }
  }
  int64_t v21 = v18 + 1;
  if (__OFADD__(v18, 1)) {
    goto LABEL_137;
  }
  if (v21 < v147)
  {
    unint64_t v22 = *(void *)(v146 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v147) {
        goto LABEL_68;
      }
      unint64_t v22 = *(void *)(v146 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v147) {
          goto LABEL_68;
        }
        unint64_t v22 = *(void *)(v146 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v147) {
            goto LABEL_68;
          }
          unint64_t v22 = *(void *)(v146 + 8 * v18);
          if (!v22)
          {
            int64_t v23 = v21 + 4;
            if (v23 >= v147) {
              goto LABEL_68;
            }
            unint64_t v22 = *(void *)(v146 + 8 * v23);
            if (!v22)
            {
              while (1)
              {
                int64_t v18 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_143;
                }
                if (v18 >= v147) {
                  goto LABEL_68;
                }
                unint64_t v22 = *(void *)(v146 + 8 * v18);
                ++v23;
                if (v22) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v18 = v23;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_23;
  }
LABEL_68:
  swift_release();
  uint64_t v68 = *v141;
  uint64_t v69 = *(void *)(*v141 + 64);
  uint64_t v146 = *v141 + 64;
  uint64_t v70 = 1 << *(unsigned char *)(v68 + 32);
  uint64_t v71 = -1;
  if (v70 < 64) {
    uint64_t v71 = ~(-1 << v70);
  }
  unint64_t v72 = v71 & v69;
  int64_t v147 = (unint64_t)(v70 + 63) >> 6;
  uint64_t v148 = v68;
  swift_bridgeObjectRetain();
  int64_t v73 = 0;
  uint64_t v142 = a4 + 9;
  while (v72)
  {
    unint64_t v74 = __clz(__rbit64(v72));
    v72 &= v72 - 1;
    unint64_t v75 = v74 | (v73 << 6);
LABEL_90:
    id v79 = *(id *)(*(void *)(v148 + 56) + 8 * v75);
    unint64_t v80 = v79;
    if (a3)
    {
      id v81 = objc_msgSend(v79, sel_package);
      uint64_t v82 = sub_1C277B850();
      uint64_t v84 = v83;

      if (v82 == v150 && v84 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v86 = sub_1C277C7E0();
        swift_bridgeObjectRelease();
        if ((v86 & 1) == 0)
        {

          continue;
        }
      }
    }
    if (a4)
    {
      id v87 = objc_msgSend(v80, sel_name);
      uint64_t v88 = sub_1C277B850();
      uint64_t v90 = v89;

      uint64_t v91 = a4[2];
      if (!v91)
      {

        swift_bridgeObjectRelease();
        continue;
      }
      int64_t v92 = v73;
      BOOL v93 = a4[4] == v88 && a4[5] == v90;
      if (v93 || (sub_1C277C7E0() & 1) != 0) {
        goto LABEL_122;
      }
      if (v91 == 1)
      {

        swift_bridgeObjectRelease();
        a3 = v149;
        continue;
      }
      BOOL v94 = a4[6] == v88 && a4[7] == v90;
      if (v94 || (sub_1C277C7E0() & 1) != 0)
      {
LABEL_122:
        swift_bridgeObjectRelease();
        int64_t v73 = v92;
        goto LABEL_123;
      }
      if (v91 != 2)
      {
        uint64_t v95 = v142;
        uint64_t v96 = 2;
        do
        {
          uint64_t v97 = v96 + 1;
          if (__OFADD__(v96, 1)) {
            goto LABEL_136;
          }
          BOOL v98 = *(v95 - 1) == v88 && *v95 == v90;
          if (v98 || (sub_1C277C7E0() & 1) != 0) {
            goto LABEL_122;
          }
          v95 += 2;
          ++v96;
        }
        while (v97 != v91);
      }

      swift_bridgeObjectRelease();
      a3 = v149;
      int64_t v73 = v92;
    }
    else
    {
LABEL_123:
      int64_t v143 = v73;
      id v99 = objc_msgSend(v80, sel_package);
      uint64_t v100 = sub_1C277B850();
      uint64_t v102 = v101;

      id v103 = objc_msgSend(v80, sel_name);
      uint64_t v104 = sub_1C277B850();
      uint64_t v106 = v105;

      id v107 = v80;
      unint64_t v108 = v145;
      char v109 = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v108;
      unint64_t v111 = sub_1C264BCE4(v100, v102, v104, v106);
      uint64_t v112 = *(void *)(v108 + 16);
      BOOL v113 = (v110 & 1) == 0;
      uint64_t v114 = v112 + v113;
      if (__OFADD__(v112, v113)) {
        goto LABEL_140;
      }
      char v115 = v110;
      if (*(void *)(v108 + 24) >= v114)
      {
        if ((v109 & 1) == 0) {
          sub_1C26770CC();
        }
      }
      else
      {
        sub_1C264BE84(v114, v109);
        unint64_t v116 = sub_1C264BCE4(v100, v102, v104, v106);
        if ((v115 & 1) != (v117 & 1)) {
          goto LABEL_145;
        }
        unint64_t v111 = v116;
      }
      a4 = v144;
      uint64_t v118 = (void *)aBlock[0];
      unint64_t v145 = aBlock[0];
      if (v115)
      {
        uint64_t v119 = *(void *)(aBlock[0] + 56);
        uint64_t v120 = 8 * v111;

        *(void *)(v119 + v120) = v107;
      }
      else
      {
        *(void *)(aBlock[0] + 8 * (v111 >> 6) + 64) |= 1 << v111;
        os_log_t v121 = (uint64_t *)(v118[6] + 32 * v111);
        *os_log_t v121 = v100;
        v121[1] = v102;
        v121[2] = v104;
        v121[3] = v106;
        *(void *)(v118[7] + 8 * v111) = v107;
        uint64_t v122 = v118[2];
        BOOL v66 = __OFADD__(v122, 1);
        uint64_t v123 = v122 + 1;
        if (v66) {
          goto LABEL_142;
        }
        v118[2] = v123;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a3 = v149;
      int64_t v73 = v143;
    }
  }
  int64_t v76 = v73 + 1;
  if (__OFADD__(v73, 1)) {
    goto LABEL_138;
  }
  if (v76 >= v147)
  {
LABEL_134:
    swift_release();
    id v124 = (void *)swift_allocObject();
    uint64_t v125 = v134;
    v124[2] = v133;
    v124[3] = v125;
    v124[4] = v145;
    aBlock[4] = sub_1C262565C;
    aBlock[5] = v124;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C26254FC;
    aBlock[3] = &block_descriptor_75;
    os_log_type_t v126 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v127 = v135;
    sub_1C277B650();
    uint64_t v151 = MEMORY[0x1E4FBC860];
    sub_1C264C47C((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
    unint64_t v128 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C2633C08(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00]);
    sub_1C264C224((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v128);
    id v129 = v138;
    uint64_t v130 = v140;
    sub_1C277C120();
    MEMORY[0x1C875BDD0](0, v127, v129, v126);
    _Block_release(v126);
    (*(void (**)(char *, uint64_t))(v139 + 8))(v129, v130);
    (*(void (**)(char *, uint64_t))(v136 + 8))(v127, v137);
    return swift_release();
  }
  unint64_t v77 = *(void *)(v146 + 8 * v76);
  ++v73;
  if (v77) {
    goto LABEL_89;
  }
  int64_t v73 = v76 + 1;
  if (v76 + 1 >= v147) {
    goto LABEL_134;
  }
  unint64_t v77 = *(void *)(v146 + 8 * v73);
  if (v77) {
    goto LABEL_89;
  }
  int64_t v73 = v76 + 2;
  if (v76 + 2 >= v147) {
    goto LABEL_134;
  }
  unint64_t v77 = *(void *)(v146 + 8 * v73);
  if (v77) {
    goto LABEL_89;
  }
  int64_t v73 = v76 + 3;
  if (v76 + 3 >= v147) {
    goto LABEL_134;
  }
  unint64_t v77 = *(void *)(v146 + 8 * v73);
  if (v77)
  {
LABEL_89:
    unint64_t v72 = (v77 - 1) & v77;
    unint64_t v75 = __clz(__rbit64(v77)) + (v73 << 6);
    goto LABEL_90;
  }
  int64_t v78 = v76 + 4;
  if (v78 >= v147) {
    goto LABEL_134;
  }
  unint64_t v77 = *(void *)(v146 + 8 * v78);
  if (v77)
  {
    int64_t v73 = v78;
    goto LABEL_89;
  }
  while (1)
  {
    int64_t v73 = v78 + 1;
    if (__OFADD__(v78, 1)) {
      break;
    }
    if (v73 >= v147) {
      goto LABEL_134;
    }
    unint64_t v77 = *(void *)(v146 + 8 * v73);
    ++v78;
    if (v77) {
      goto LABEL_89;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_1C277C850();
  __break(1u);
  return result;
}

unint64_t sub_1C264BCE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C277C8C0();
  sub_1C277B8B0();
  sub_1C277B8B0();
  uint64_t v8 = sub_1C277C910();

  return sub_1C264BD84(a1, a2, a3, a4, v8);
}

unint64_t sub_1C264BD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v13 = ~v7;
    uint64_t v14 = *(void *)(v5 + 48);
    do
    {
      uint64_t v15 = (void *)(v14 + 32 * v8);
      uint64_t v16 = v15[2];
      uint64_t v17 = v15[3];
      BOOL v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_1C277C7E0() & 1) != 0)
      {
        BOOL v19 = v16 == a3 && v17 == a4;
        if (v19 || (sub_1C277C7E0() & 1) != 0) {
          break;
        }
      }
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

uint64_t sub_1C264BE84(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C264C1A8();
  char v39 = a2;
  uint64_t v6 = sub_1C277C5D0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v36) {
          goto LABEL_33;
        }
        unint64_t v22 = v37[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v22 = v37[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v39)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v22 = v37[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v20);
      uint64_t v30 = *v28;
      uint64_t v29 = v28[1];
      uint64_t v32 = v28[2];
      uint64_t v31 = v28[3];
      uint64_t v33 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v34 = v33;
      }
      sub_1C277C8C0();
      sub_1C277B8B0();
      sub_1C277B8B0();
      uint64_t result = sub_1C277C910();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      BOOL v18 = (void *)(*(void *)(v7 + 48) + 32 * v17);
      *BOOL v18 = v30;
      v18[1] = v29;
      v18[2] = v32;
      v18[3] = v31;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_1C264C1A8()
{
  if (!qword_1EBB830D0)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB82EE8);
    sub_1C267BAD0();
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB830D0);
    }
  }
}

uint64_t sub_1C264C224(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2633C08(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C264C274(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26DE690(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C264C2D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2633D88(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C264C33C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C264C1A8();
  unint64_t v2 = (void *)sub_1C277C5F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 64);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 4);
    uint64_t v6 = (uint64_t)*(v4 - 3);
    uint64_t v7 = (uint64_t)*(v4 - 2);
    uint64_t v8 = (uint64_t)*(v4 - 1);
    uint64_t v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v10 = v9;
    unint64_t result = sub_1C264BCE4(v5, v6, v7, v8);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int64_t v13 = (uint64_t *)(v2[6] + 32 * result);
    *int64_t v13 = v5;
    v13[1] = v6;
    void v13[2] = v7;
    v13[3] = v8;
    *(void *)(v2[7] + 8 * result) = v10;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1C264C47C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeWithCopy for GeneratorDomain(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for GeneratorContext(id *a1, int *a2)
{
  uint64_t v4 = (id *)((char *)a1 + a2[5]);
  sub_1C264C860();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    id v5 = (char *)v4 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    uint64_t v6 = sub_1C277A840();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + a2[7]);
  uint64_t v7 = (uint64_t)a1 + a2[8];

  return __swift_destroy_boxed_opaque_existential_0(v7);
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void **initializeWithCopy for GeneratorContext(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void **)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  sub_1C264C860();
  id v10 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = *(void **)v9;
    *uint64_t v8 = *(void *)v9;
    id v12 = v11;
  }
  else
  {
    uint64_t v13 = *((void *)v9 + 1);
    *uint64_t v8 = *(void *)v9;
    v8[1] = v13;
    _OWORD v8[2] = *((void *)v9 + 2);
    uint64_t v14 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    BOOL v15 = (char *)v8 + v14;
    int64_t v23 = &v9[v14];
    uint64_t v16 = sub_1C277A840();
    unint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v15, v23, v16);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  long long v19 = *(_OWORD *)((char *)a2 + v18 + 24);
  *(_OWORD *)((char *)a1 + v18 + 24) = v19;
  (**(void (***)(void))(v19 - 8))();
  uint64_t v20 = a3[8];
  long long v21 = *(_OWORD *)((char *)a2 + v20 + 24);
  *(_OWORD *)((char *)a1 + v20 + 24) = v21;
  (**(void (***)(void))(v21 - 8))();
  return a1;
}

uint64_t type metadata accessor for CountryRetrievalRecord()
{
  uint64_t result = qword_1EBB80788;
  if (!qword_1EBB80788) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C264C860()
{
  if (!qword_1EBB80870)
  {
    type metadata accessor for CountryRetrievalRecord();
    sub_1C268246C();
    unint64_t v0 = sub_1C277C990();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB80870);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SourceProfile(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.reproductiveHealth.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t static Logger.menstrualCycles.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB85ED0, (uint64_t)qword_1EBB85EB8, a1);
}

uint64_t storeEnumTagSinglePayload for PluginFeedItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C269001C);
}

unsigned char *sub_1C264C974(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

uint64_t dispatch thunk of HealthPluginDelegate.makeSharableModelPipelines(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t getEnumTagSinglePayload for SharableModelVersion(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t static Logger.general.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB86260, (uint64_t)qword_1EBB86280, a1);
}

ValueMetadata *type metadata accessor for PluginFeedItem.HostViewStyle()
{
  return &type metadata for PluginFeedItem.HostViewStyle;
}

uint64_t HealthPluginDelegate.makeSharableModelPipelines(for:)()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C264C9F8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 64))();
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_1C264CA74(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  a3(*(void *)(a1 + 8));
  uint64_t v4 = *(void *)(a1 + 24);

  return a3(v4);
}

uint64_t destroy for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(uint64_t a1, uint64_t a2)
{
  return sub_1C264CA74(a1, a2, MEMORY[0x1E4FBC898]);
}

ValueMetadata *type metadata accessor for PluginSharableModelChange()
{
  return &type metadata for PluginSharableModelChange;
}

uint64_t storeEnumTagSinglePayload for SharableModelVersion(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

uint64_t dispatch thunk of FeedItemContext.queue(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

unint64_t Feed.Kind.rawValue.getter(char a1)
{
  unint64_t result = 0x48726F4673707061;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6867696C68676968;
      break;
    case 3:
      unint64_t result = 0x73656369746F6ELL;
      break;
    case 4:
      unint64_t result = 0x73656C6369747261;
      break;
    case 5:
      unint64_t result = 0x73646E657274;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerationPhase()
{
  return &type metadata for GenerationPhase;
}

uint64_t String.init<A>(describingSensitive:)(uint64_t a1, uint64_t a2)
{
  return sub_1C2619D94(a1, a2, MEMORY[0x1E4FBB0E8]);
}

uint64_t sub_1C264CC38(uint64_t a1, uint64_t a2)
{
  return sub_1C2632D20(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1C264CC40@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2617690(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t SharableModelVersion.minimumSupported.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t SharableModelVersion.latestSupported.getter()
{
  return *(void *)v0;
}

int64x2_t static PluginSharableModel.currentCodeVersion.getter@<Q0>(int64x2_t *a1@<X8>)
{
  int64x2_t result = vdupq_n_s64(1uLL);
  *a1 = result;
  return result;
}

uint64_t sub_1C264CC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

BOOL sub_1C264CC78(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t PluginSharableModelQueryPredicate.objectTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PluginSharableModelQueryPredicate.identifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s14descr1F1DC3F91C22SharableModelReferenceVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)int64x2_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

BOOL sub_1C264CCE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t storeEnumTagSinglePayload for CloudSyncStatusInputSignal.Anchor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C275DDEC);
}

uint64_t getEnumTagSinglePayload for CountryRetrievalRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2667724);
}

uint64_t sub_1C264CD24(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t destroy for UserInterface(uint64_t a1)
{
  return sub_1C263CCDC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t storeEnumTagSinglePayload for PluginStorage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)int64x2_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t dispatch thunk of HealthExperienceStore.viewContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1C264CDA8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C2638920(a1, v2[4], v2[5], v2[6], v2[2], v2[3], a2);
}

uint64_t sub_1C264CDF0@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C264CDFC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C263839C(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1C264CE08(uint64_t a1, uint64_t a2)
{
  return sub_1C261BD84(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1C264CE18@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C263816C(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t sub_1C264CE28(uint64_t a1, uint64_t a2)
{
  return sub_1C261AC98(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C264CE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.Signpost.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1C264CE44(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  return Publishers.HandleStartAndIdleEvents.receive<A>(subscriber:)(a1, a4, a2);
}

uint64_t static Logger.cloudSync.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(qword_1EBB85FA0, (uint64_t)qword_1EBB86030, a1);
}

uint64_t static Logger.daemon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB85EA8, (uint64_t)qword_1EBB85ED8, a1);
}

uint64_t static Logger.healthRecords.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB84478, (uint64_t)qword_1EBB84480, a1);
}

uint64_t static Logger.dataSource.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB85F88, (uint64_t)qword_1EBB85FB8, a1);
}

uint64_t _s21FeedItemCreationErrorOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

uint64_t sub_1C264CF38()
{
  return sub_1C277AED0();
}

uint64_t sub_1C264CF58()
{
  return sub_1C277AED0();
}

uint64_t destroy for PluginSharableModelChange(uint64_t a1)
{
  return sub_1C264CFA0(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1C264CF84(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 4u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_1C264CFA0(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 4u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t dispatch thunk of PluginContentStateManager.getDate(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t sub_1C264CFD8(uint64_t *a1, uint64_t *a2)
{
  return sub_1C26059B8(*a1, *a2);
}

uint64_t storeEnumTagSinglePayload for CountryRetrievalRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C26677D4);
}

void sub_1C264CFF8()
{
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v0 + 16));
}

void sub_1C264D000(void *a1@<X8>)
{
  *a1 = 5 * *v1;
}

uint64_t sub_1C264D010()
{
  return 0x65756C6176;
}

unsigned char *sub_1C264D024(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        break;
      case 2:
        *(_WORD *)uint64_t result = a2;
        break;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = 0;
        break;
      case 2:
        *(_WORD *)uint64_t result = 0;
        break;
      case 3:
LABEL_19:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)uint64_t result = 0;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t static GeneratorContext.generatorPipelineBufferSize.getter()
{
  return 1;
}

uint64_t getEnumTagSinglePayload for PluginStorage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for PluginStorage()
{
  return &type metadata for PluginStorage;
}

uint64_t dispatch thunk of UnfairLock.assertOwner()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

ValueMetadata *type metadata accessor for HealthAppPluginInfo()
{
  return &type metadata for HealthAppPluginInfo;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t String.init<A>(reflectingSensitive:)(uint64_t a1, uint64_t a2)
{
  return sub_1C2619D94(a1, a2, MEMORY[0x1E4FBB0F8]);
}

uint64_t getEnumTagSinglePayload for FeatureStatusFeedItemGeneratorPipeline(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2683BE4);
}

ValueMetadata *type metadata accessor for PluginSharableModelQueryPredicate()
{
  return &type metadata for PluginSharableModelQueryPredicate;
}

uint64_t PluginSharableModelQueryPredicate.init(identifiers:objectTypes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t dispatch thunk of SharableModelGeneratorPipeline.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SharableModelGeneratorPipeline.domain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C264D3E4(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(void *)uint64_t result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

uint64_t dispatch thunk of PluginContentStateManager.getInteger(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_1C264D424()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C264D434()
{
  return sub_1C277AED0();
}

uint64_t sub_1C264D450@<X0>(void *a1@<X8>)
{
  return sub_1C2610E74(a1);
}

uint64_t dispatch thunk of SharableModelGenerator.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SharableModelGenerator.domain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t static NSManagedObjectUnique<>.find(context:uniquenessPredicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2610438(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2610524);
}

ValueMetadata *type metadata accessor for FeedItemContextChange()
{
  return &type metadata for FeedItemContextChange;
}

ValueMetadata *type metadata accessor for FeedItemChangeDomain()
{
  return &type metadata for FeedItemChangeDomain;
}

uint64_t dispatch thunk of RecursiveUnfairLock.unlock()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_1C264D4E0()
{
  return os_unfair_recursive_lock_unlock();
}

uint64_t dispatch thunk of RecursiveUnfairLock.lock()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_1C264D50C()
{
  return os_unfair_recursive_lock_lock_with_options();
}

void destroy for FeedItemPredicate(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for FeedItemPredicate()
{
  return &type metadata for FeedItemPredicate;
}

ValueMetadata *type metadata accessor for FeedItemGenerator()
{
  return &type metadata for FeedItemGenerator;
}

id static StorageLocations.fileManager.getter()
{
  if (qword_1EBB82770 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB82768;

  return v0;
}

uint64_t GeneratorDomain.init(sourceProfile:contentKinds:hkTypes:complexity:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = *a4;
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = v5;
  return result;
}

ValueMetadata *type metadata accessor for LogCategory()
{
  return &type metadata for LogCategory;
}

uint64_t sub_1C264D5CC()
{
  return sub_1C2609038(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C264D5D4(uint64_t a1, uint64_t a2)
{
  return sub_1C260CE60(a1, a2, v2);
}

uint64_t dispatch thunk of HealthExperienceStore.persistentStoreCoordinator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t objectdestroy_71Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return MEMORY[0x1F4186498](v1, 40, 7);
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t objectdestroy_5Tm_0()
{
  uint64_t v1 = type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v15 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v16 = sub_1C277AA10();
  uint64_t v4 = *(void *)(v16 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = *(void *)(v4 + 64);
  uint64_t v6 = v0 + v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = (id *)(v0 + v3 + *(int *)(v1 + 20));

  uint64_t v8 = (int *)type metadata accessor for GeneratorContext();
  uint64_t v9 = (id *)((char *)v7 + v8[5]);
  sub_1C264C860();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    id v10 = (char *)v9 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    uint64_t v11 = sub_1C277A840();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = (v3 + v15 + v5) & ~v5;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7 + v8[7]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7 + v8[8]);
  sub_1C2645714(*(void **)(v6 + *(int *)(v1 + 24)), *(void **)(v6 + *(int *)(v1 + 24) + 8), *(void **)(v6 + *(int *)(v1 + 24) + 16), *(unsigned char *)(v6 + *(int *)(v1 + 24) + 24));
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v12, v16);

  return MEMORY[0x1F4186498](v0, v12 + v14, v2 | v5 | 7);
}

uint64_t objectdestroy_5Tm_1(uint64_t (*a1)(void))
{
  uint64_t v2 = (int *)(a1(0) - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = v1 + v4 + v2[7];
  uint64_t v8 = sub_1C277A8A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v1, v5, v6);
}

uint64_t objectdestroy_5Tm_2(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 32));
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v2, 48, 7);
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t objectdestroy_61Tm(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 24));
  swift_release();

  return MEMORY[0x1F4186498](v2, 48, 7);
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v1 = type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (id *)(v0 + v3 + *(int *)(v1 + 20));

  uint64_t v6 = (int *)type metadata accessor for GeneratorContext();
  uint64_t v7 = (id *)((char *)v5 + v6[5]);
  sub_1C264C860();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = (char *)v7 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    uint64_t v9 = sub_1C277A840();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v5 + v6[7]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v5 + v6[8]);
  sub_1C2645714(*(void **)(v0 + v3 + *(int *)(v1 + 24)), *(void **)(v0 + v3 + *(int *)(v1 + 24) + 8), *(void **)(v0 + v3 + *(int *)(v1 + 24) + 16), *(unsigned char *)(v0 + v3 + *(int *)(v1 + 24) + 24));
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *__n128 result = *a2;
  return result;
}

unint64_t sub_1C264DE8C()
{
  unint64_t result = qword_1EBB831F0;
  if (!qword_1EBB831F0)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EBB831F0);
  }
  return result;
}

unint64_t sub_1C264DED0()
{
  unint64_t result = qword_1EBB85F40;
  if (!qword_1EBB85F40)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85F40);
  }
  return result;
}

void sub_1C264DF28(uint64_t a1)
{
}

void sub_1C264DF5C()
{
  if (!qword_1EBB83A08)
  {
    type metadata accessor for ProgressUserInfoKey(255);
    sub_1C2680CD4((unint64_t *)&unk_1EBB82FA0, 255, type metadata accessor for ProgressUserInfoKey);
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83A08);
    }
  }
}

uint64_t sub_1C264E000(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C26051F0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C264E020(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C263C1D0(a1, a2, a3, (void *)*v3, sub_1C264DF28, type metadata accessor for HealthAppPluginSource.KnownBundle);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C264E068(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = 0;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v28 = result + 32;
  unint64_t v26 = *(void *)(result + 16);
  while (1)
  {
    if (v4 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v4;
    }
    uint64_t v29 = v5;
    unint64_t v27 = v6;
LABEL_7:
    if (v4 == v6)
    {
      __break(1u);
      return result;
    }
    uint64_t v7 = v28 + 56 * v4;
    long long v8 = *(_OWORD *)v7;
    uint64_t v9 = *(void *)(v7 + 16);
    uint64_t v10 = *(void *)(v7 + 32);
    uint64_t v11 = *(void *)(v7 + 48);
    ++v4;
    uint64_t v12 = *(void *)(a2 + 16);
    long long v32 = *(_OWORD *)v7;
    uint64_t v13 = *(void *)v7;
    uint64_t v30 = *(void *)(v7 + 40);
    uint64_t v31 = *(void *)(v7 + 24);
    if (v12) {
      break;
    }
    id v25 = (id)v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_20:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = v11;
    if ((result & 1) == 0) {
      uint64_t result = sub_1C265A030(0, *(void *)(v5 + 16) + 1, 1);
    }
    unint64_t v23 = *(void *)(v5 + 16);
    unint64_t v22 = *(void *)(v5 + 24);
    if (v23 >= v22 >> 1) {
      uint64_t result = sub_1C265A030(v22 > 1, v23 + 1, 1);
    }
    *(void *)(v5 + 16) = v23 + 1;
    uint64_t v24 = v5 + 56 * v23;
    *(_OWORD *)(v24 + 32) = v32;
    *(void *)(v24 + 48) = v9;
    *(void *)(v24 + 56) = v31;
    *(void *)(v24 + 64) = v10;
    *(void *)(v24 + 72) = v30;
    *(void *)(v24 + 80) = v21;
    if (v4 == v2) {
      return v5;
    }
  }
  id v14 = (id)v8;
  uint64_t v35 = v9;
  swift_bridgeObjectRetain();
  uint64_t v34 = v10;
  swift_bridgeObjectRetain();
  uint64_t v33 = v11;
  swift_bridgeObjectRetain();
  id v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  while (1)
  {
    unint64_t v17 = *(void **)(a2 + 8 * v16 + 32);
    if (!v17) {
      break;
    }
    if (v13)
    {
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
      id v18 = v15;
      id v19 = v17;
      char v20 = sub_1C277C030();

      if (v20)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        id v15 = v18;
        goto LABEL_17;
      }
    }
LABEL_11:
    if (v12 == ++v16)
    {

      swift_bridgeObjectRelease();
      unint64_t v2 = v26;
      uint64_t v5 = v29;
      uint64_t v9 = v35;
      uint64_t v11 = v33;
      uint64_t v10 = v34;
      goto LABEL_20;
    }
  }
  if (v13) {
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_17:
  unint64_t v2 = v26;
  uint64_t v5 = v29;

  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v6 = v27;
  if (v4 != v26) {
    goto LABEL_7;
  }
  return v5;
}

void sub_1C264E310(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v3 = sub_1C277C370();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1C264E370()
{
  if (!qword_1EBB80DB8)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB80DB8);
    }
  }
}

void sub_1C264E3D0()
{
  if (!qword_1EBB851D0)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB851D0);
    }
  }
}

void sub_1C264E430()
{
  if (!qword_1EBB851C8)
  {
    type metadata accessor for DiskHealthExperienceStore.MutableState();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB851C8);
    }
  }
}

void *sub_1C264E498(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2603EE8(a1, a2, a3, a4, &qword_1EBB83A18, (uint64_t (*)(uint64_t))sub_1C269AF10);
}

uint64_t sub_1C264E4B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C2640DB8(a1, a2, a3, a4, (unint64_t *)&unk_1EBB85200, type metadata accessor for HealthAppPluginSource.KnownBundle, type metadata accessor for HealthAppPluginSource.KnownBundle, type metadata accessor for HealthAppPluginSource.KnownBundle);
}

uint64_t sub_1C264E500(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1C264DE8C();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

void sub_1C264E608()
{
  if (!qword_1EBB854A0)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85F30);
    unint64_t v0 = sub_1C277C0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB854A0);
    }
  }
}

uint64_t sub_1C264E670(uint64_t a1, uint64_t a2)
{
  sub_1C264E6D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C264E6D4()
{
  if (!qword_1EBB838D8)
  {
    type metadata accessor for ProgressUserInfoKey(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB838D8);
    }
  }
}

unint64_t sub_1C264E740()
{
  unint64_t result = qword_1EBB85180;
  if (!qword_1EBB85180)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85180);
  }
  return result;
}

unint64_t sub_1C264E780()
{
  unint64_t result = qword_1EBB85170;
  if (!qword_1EBB85170)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85180);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85170);
  }
  return result;
}

uint64_t sub_1C264E7E8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2644ED8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void sub_1C264E860(uint64_t a1)
{
}

id static NSOperationQueue.utility.getter()
{
  return sub_1C2607128(&qword_1EBB85130, (void **)qword_1EBB85120);
}

void sub_1C264E8AC(uint64_t a1)
{
}

id static NSOperationQueue.userInitiated.getter()
{
  return sub_1C2607128(&qword_1EBB85118, (void **)&qword_1EBB85110);
}

uint64_t sub_1C264E8F8()
{
  uint64_t result = sub_1C2607874();
  qword_1EBB84900 = result;
  return result;
}

uint64_t static Int.alphabeticalSortHint.getter()
{
  return 0;
}

uint64_t sub_1C264E920(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_1C264E94C()
{
  if (!qword_1EBB85E70)
  {
    unint64_t v0 = sub_1C277BB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB85E70);
    }
  }
}

void sub_1C264E9A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277BB20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C264E9F8(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C264E9A4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C264EA48(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2648924(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C264EA8C()
{
  unint64_t result = qword_1EBB82DF0;
  if (!qword_1EBB82DF0)
  {
    sub_1C2641054(255, &qword_1EBB82DE8, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82DF0);
  }
  return result;
}

void sub_1C264EB14()
{
  if (!qword_1EBB850B8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB850B8);
    }
  }
}

uint64_t sub_1C264EB80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v5 = *(void *)(a1 + 8 * v3++ + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C2768950(v5);
    swift_bridgeObjectRelease();
  }
  while (v1 != v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C264EC28@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C264EB80(*a1);
  *a2 = result;
  return result;
}

void sub_1C264EC54()
{
  if (!qword_1EBB82D50)
  {
    sub_1C26A1110();
    sub_1C262B07C(255, (unint64_t *)&qword_1EBB831D0);
    unint64_t v0 = sub_1C277B470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82D50);
    }
  }
}

uint64_t sub_1C264ECD4()
{
  return sub_1C262AF6C(&qword_1EBB82D48, (void (*)(uint64_t))sub_1C264EC54);
}

unint64_t sub_1C264ED08()
{
  unint64_t result = qword_1EBB84208;
  if (!qword_1EBB84208)
  {
    sub_1C2617598(255, &qword_1EBB84210, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AC18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB84208);
  }
  return result;
}

void sub_1C264ED88()
{
  if (!qword_1EBB82D00)
  {
    unint64_t v0 = sub_1C277B430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82D00);
    }
  }
}

void sub_1C264EDE4()
{
  if (!qword_1EBB82CE8)
  {
    sub_1C263E750(255, (unint64_t *)&qword_1EBB82E00, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C277B430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82CE8);
    }
  }
}

void sub_1C264EE60(uint64_t a1)
{
}

uint64_t sub_1C264EE94()
{
  return sub_1C261DEEC(&qword_1EBB836D8, sub_1C264EE60);
}

void sub_1C264EEC8()
{
  if (!qword_1EBB856A0)
  {
    sub_1C2604CD0(255, (unint64_t *)&unk_1EBB85578, MEMORY[0x1E4F65658]);
    unint64_t v0 = sub_1C277B3C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB856A0);
    }
  }
}

uint64_t sub_1C264EF4C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2617528(255, a2, MEMORY[0x1E4FBC848] + 8, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C264EFA0(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2617598(255, a2, a3, MEMORY[0x1E4F1AAE0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C264F004(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2779B58(255, a2, a3, MEMORY[0x1E4F1AAE0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C264F068()
{
  if (!qword_1EBB82CC0)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB82FC0);
    sub_1C262B07C(255, (unint64_t *)&qword_1EBB831D0);
    unint64_t v0 = sub_1C277B340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82CC0);
    }
  }
}

void sub_1C264F0F8()
{
  if (!qword_1EBB82C70)
  {
    sub_1C263E750(255, (unint64_t *)&qword_1EBB82E00, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4FBB320]);
    sub_1C262B07C(255, (unint64_t *)&qword_1EBB831D0);
    unint64_t v0 = sub_1C277B340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82C70);
    }
  }
}

uint64_t sub_1C264F19C()
{
  return sub_1C262AF6C(&qword_1EBB82C68, (void (*)(uint64_t))sub_1C264F0F8);
}

void sub_1C264F1D0(uint64_t a1)
{
}

uint64_t sub_1C264F218()
{
  return sub_1C262AF6C(&qword_1EBB82BC8, sub_1C264F1D0);
}

void sub_1C264F24C()
{
  if (!qword_1EBB848F0)
  {
    sub_1C2624FC4();
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85180);
    sub_1C2625030(&qword_1EBB850A8, (void (*)(uint64_t))sub_1C2624FC4);
    sub_1C264E780();
    unint64_t v0 = sub_1C277B270();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB848F0);
    }
  }
}

void sub_1C264F318()
{
  if (!qword_1EBB82B80)
  {
    sub_1C264F0F8();
    sub_1C264F19C();
    unint64_t v0 = sub_1C277B260();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82B80);
    }
  }
}

void sub_1C264F388()
{
  if (!qword_1EBB82B60)
  {
    sub_1C26D8FE8(255, (unint64_t *)&qword_1EBB82C38, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4F1AAE0]);
    sub_1C26D8C8C();
    sub_1C26D91F4(&qword_1EBB82C30, (unint64_t *)&qword_1EBB82C38, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier);
    sub_1C262AF6C(&qword_1EBB82A78, (void (*)(uint64_t))sub_1C26D8C8C);
    unint64_t v0 = sub_1C277B260();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82B60);
    }
  }
}

void sub_1C264F488(uint64_t a1)
{
}

uint64_t sub_1C264F4D0()
{
  return sub_1C262AF6C(&qword_1EBB82B38, sub_1C264F488);
}

unint64_t sub_1C264F504()
{
  unint64_t result = qword_1EBB82B08;
  if (!qword_1EBB82B08)
  {
    sub_1C264F668(255, &qword_1EBB82B10, (uint64_t (*)(uint64_t))sub_1C264EC54, sub_1C264ECD4, MEMORY[0x1E4F1AA18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82B08);
  }
  return result;
}

void sub_1C264F5A0()
{
  if (!qword_1EBB83678)
  {
    sub_1C264F840(255, &qword_1EBB835F0, sub_1C264EE60, (void (*)(void))sub_1C264EE94);
    sub_1C264F8C8();
    unint64_t v0 = sub_1C277B220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83678);
    }
  }
}

uint64_t sub_1C264F634()
{
  return sub_1C261DEEC(&qword_1EBB83670, (void (*)(uint64_t))sub_1C264F5A0);
}

void sub_1C264F668(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    sub_1C263E750(255, (unint64_t *)&qword_1EBB82E00, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4FBB320]);
    uint64_t v11 = v10;
    uint64_t v12 = a4();
    unint64_t v13 = a5(a1, v9, v11, v12);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

unint64_t sub_1C264F71C()
{
  unint64_t result = qword_1EBB82AD8;
  if (!qword_1EBB82AD8)
  {
    sub_1C264F668(255, (unint64_t *)&unk_1EBB82AE0, (uint64_t (*)(uint64_t))sub_1C264F488, sub_1C264F4D0, MEMORY[0x1E4F1A930]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82AD8);
  }
  return result;
}

unint64_t sub_1C264F7B8()
{
  unint64_t result = qword_1EBB83628;
  if (!qword_1EBB83628)
  {
    sub_1C261E118(255, &qword_1EBB83630, (void (*)(uint64_t))sub_1C264F5A0, (void (*)(void))sub_1C264F634);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83628);
  }
  return result;
}

void sub_1C264F840(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1C261E938(255);
    a4();
    unint64_t v6 = sub_1C277B1E0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1C264F8C8()
{
  unint64_t result = qword_1EBB835E8;
  if (!qword_1EBB835E8)
  {
    sub_1C264F840(255, &qword_1EBB835F0, sub_1C264EE60, (void (*)(void))sub_1C264EE94);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB835E8);
  }
  return result;
}

void sub_1C264F950()
{
  if (!qword_1EBB841E0)
  {
    uint64_t v0 = MEMORY[0x1E4FBB390];
    sub_1C2617598(255, &qword_1EBB82CB0, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AAE0]);
    sub_1C264EFA0(&qword_1EBB82CA8, &qword_1EBB82CB0, v0);
    unint64_t v1 = sub_1C277B1E0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB841E0);
    }
  }
}

uint64_t sub_1C264FA10(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB86030);
}

uint64_t sub_1C264FA34(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB85EF0);
}

uint64_t static Logger.analytics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB85EB0, (uint64_t)qword_1EBB85EF0, a1);
}

uint64_t sub_1C264FA7C(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB86008);
}

uint64_t static Logger.profile.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB86028, (uint64_t)qword_1EBB86008, a1);
}

uint64_t static Logger.hearing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB83540, (uint64_t)qword_1EBB83520, a1);
}

uint64_t sub_1C264FAE4(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB86280);
}

uint64_t sub_1C264FB04(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB85FF0);
}

uint64_t static Logger.plugin.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB85F90, (uint64_t)qword_1EBB85FF0, a1);
}

uint64_t sub_1C264FB44(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB85970);
}

uint64_t sub_1C264FB5C(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB84448);
}

uint64_t static Logger.xpc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(qword_1EBB84468, (uint64_t)qword_1EBB84448, a1);
}

uint64_t sub_1C264FB98(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB834F8);
}

uint64_t static Logger.advertisableFeatures.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB83518, (uint64_t)qword_1EBB834F8, a1);
}

uint64_t sub_1C264FBE0(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB86268);
}

uint64_t static Logger.personalization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB86258, (uint64_t)qword_1EBB86268, a1);
}

uint64_t sub_1C264FC30(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB85EB8);
}

unint64_t static Logger.healthSubsystem.getter()
{
  return 0xD000000000000010;
}

uint64_t static Logger.respiratory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB834F0, (uint64_t)qword_1EBB834D0, a1);
}

uint64_t sub_1C264FC94(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB85FD0);
}

uint64_t sub_1C264FCB8(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB85FB8);
}

uint64_t sub_1C264FCDC(uint64_t a1)
{
  sub_1C264FD38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C264FD38()
{
  if (!qword_1EBB83930)
  {
    sub_1C277ACF0();
    unint64_t v0 = sub_1C277C0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83930);
    }
  }
}

void sub_1C264FD90()
{
  if (!qword_1EBB80D48)
  {
    unint64_t v0 = sub_1C277AC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB80D48);
    }
  }
}

uint64_t FeedItem.FavoriteStatus.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x657469726F766166;
  }
  if (a1 == 1) {
    return 0x726F766146746F6ELL;
  }
  return 0x626967696C656E69;
}

id static FeedItem.fetchRequest(predicate:)(uint64_t a1)
{
  id v2 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  objc_msgSend(v2, sel_setPredicate_, a1);
  return v2;
}

uint64_t sub_1C264FEB0()
{
  return 0;
}

uint64_t sub_1C264FEB8()
{
  return 1;
}

uint64_t Atomic.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  swift_release();
  return v0;
}

uint64_t Atomic.__deallocating_deinit()
{
  Atomic.deinit();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Atomic()
{
  return __swift_instantiateGenericMetadata();
}

void *static Feed.Kind.allCases.getter()
{
  return &unk_1F1DC58D8;
}

void *static Feed.Kind.summaryTabRankedFeeds.getter()
{
  return &unk_1F1DC5900;
}

uint64_t storeEnumTagSinglePayload for FeatureStatusFeedItemGeneratorPipeline(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2683C94);
}

void sub_1C2650040(void **a1)
{
}

uint64_t sub_1C2650048@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C2616998(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

Swift::Void __swiftcall OrchestrationWorkQueueStatusObserver.didStartForegroundSession(planCount:duration:)(Swift::Int planCount, Swift::Double duration)
{
}

void static PluginSharableModelQueryPredicate.unspecified.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_1C2650080@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C2650098(a1, a2);
}

uint64_t sub_1C2650098@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C2603ADC(a1, a2);
}

uint64_t type metadata accessor for LegacyGenerationInputSignal()
{
  return self;
}

uint64_t sub_1C26500D8()
{
  return sub_1C277AED0();
}

unsigned char *sub_1C26500F4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *(unsigned __int8 *)(v2 + 16);
  if (v3 == *result)
  {
    *a2 = 0;
  }
  else
  {
    *unint64_t result = v3;
    *a2 = v3;
  }
  return result;
}

uint64_t sub_1C265011C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2650164@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C26501A8(a1, a2);
}

unsigned char *sub_1C2650180@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *(unsigned __int8 *)(v2 + 16);
  if (v3 == *result)
  {
    *a2 = 0;
  }
  else
  {
    *uint64_t result = v3;
    *a2 = 1;
  }
  return result;
}

uint64_t sub_1C26501A8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t storeEnumTagSinglePayload for FeatureStatusInputSignal.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1C2650204()
{
  return sub_1C260FDDC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t dispatch thunk of CancellableProgressList.add(_:uuid:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

ValueMetadata *type metadata accessor for GenerationWorkRequest()
{
  return &type metadata for GenerationWorkRequest;
}

uint64_t sub_1C2650248(uint64_t a1, uint64_t a2, char a3)
{
  int v4 = a3 & 1;
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 8);
  uint64_t result = v6(ObjectType, a2);
  if (v4 != (result & 1))
  {
    sub_1C277C2D0();
    sub_1C277B8D0();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    v6(ObjectType, a2);
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

uint64_t GenerationWorkRequest.notStartedCancellationBlock.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t GenerationWorkRequest.completionBlock.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t GenerationWorkRequest.init(environment:pluginIdentifierSetToRun:generationPhases:commitUrgentTransaction:makeGenerationWorkBlock:completionBlock:notStartedCancellationBlock:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  *(unsigned char *)a9 = result & 1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  return result;
}

uint64_t GenerationWorkRequest.makeGenerationWorkBlock.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t GenerationWorkRequest.makeGenerationWorkBlock.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  return v1;
}

ValueMetadata *type metadata accessor for DataVisualizationKind()
{
  return &type metadata for DataVisualizationKind;
}

unint64_t DataVisualizationKind.rawValue.getter()
{
  unint64_t result = 0x5265676172657661;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7274736944726162;
      break;
    case 2:
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x7562697274736964;
      break;
    case 5:
      unint64_t result = 0x746F6C50746F64;
      break;
    case 6:
      unint64_t result = 0x65764F746E657665;
      break;
    case 7:
      unint64_t result = 0x437473656772616CLL;
      break;
    case 8:
      unint64_t result = 0x72616843656E696CLL;
      break;
    case 9:
      unint64_t result = 0x7472616843656970;
      break;
    case 0xA:
      unint64_t result = 0x6574756F72;
      break;
    case 0xB:
      unint64_t result = 0x6172676F6E6D6F73;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xD:
      unint64_t result = 0x6C654465756C6176;
      break;
    default:
      return result;
  }
  return result;
}

void **assignWithTake for SourceProfile(void **a1, void **a2)
{
  int v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t dispatch thunk of SharableModelContext.sharableModelChangePublisher(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SharableModelContext.previousSharableModelPublisher(predicate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SharableModelContext.previousSharableModelPublisher(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

ValueMetadata *type metadata accessor for ProminenceFeatureTag()
{
  return &type metadata for ProminenceFeatureTag;
}

uint64_t type metadata accessor for FileMonitorPublisher()
{
  uint64_t result = qword_1EBB85078;
  if (!qword_1EBB85078) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemProminence()
{
  return &type metadata for FeedItemProminence;
}

unint64_t static KeywordFeatureTag.NotificationSettingsIdentifier.features.getter()
{
  return 0xD000000000000025;
}

unint64_t static KeywordFeatureTag.NotificationSettingsIdentifier.defaults.getter()
{
  return 0xD000000000000025;
}

uint64_t static KeywordFeatureTag.SidebarTypeIdentifier.healthCategory.getter()
{
  return 0x614368746C616548;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.sleep.getter()
{
  return 0xD000000000000020;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.suggestedActions.getter()
{
  return 0xD000000000000010;
}

uint64_t FeedItemGenerator.publisher.getter()
{
  return swift_retain();
}

unint64_t static UserDefaultsKeys.appFirstLaunchDateKey.getter()
{
  return 0xD000000000000023;
}

uint64_t static UserDefaultsKeys.appLastOpenedDateKey.getter()
{
  if (qword_1EBB82790 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBB82778;
  swift_bridgeObjectRetain();
  return v0;
}

unsigned char *GeneratorDomain.complexity.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 24) = *result;
  return result;
}

uint64_t dispatch thunk of GenerationQueue.enqueue(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

void sub_1C2650914(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2 >> 62 == 1)
  {

    sub_1C265F0D0(a3, a4, a5);
  }
  else if (!(a2 >> 62))
  {
  }
}

uint64_t sub_1C26509CC(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 2) {
    return v1 - 1;
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for GenerationQueue.EnqueueResult()
{
  return &type metadata for GenerationQueue.EnqueueResult;
}

void *static GenerationPhase.allCases.getter()
{
  return &unk_1F1DC54B8;
}

uint64_t dispatch thunk of FeedItemContext.scheduler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeedItemContext.fetchPluginStorage(havingUniqueIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of FeedItemContext.environment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))() & 1;
}

unint64_t sub_1C2650A5C()
{
  unint64_t result = qword_1EBB85788;
  if (!qword_1EBB85788)
  {
    type metadata accessor for PluginFeedItem();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85788);
  }
  return result;
}

void sub_1C2650A98(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for PluginFeedItem.SharableModelReference()
{
  return &type metadata for PluginFeedItem.SharableModelReference;
}

ValueMetadata *type metadata accessor for PluginFeedItem.NotificationIdentifier()
{
  return &type metadata for PluginFeedItem.NotificationIdentifier;
}

uint64_t PluginFeedItem.usesPlatformView.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t type metadata accessor for ForegroundTask(uint64_t a1)
{
  return sub_1C2635628(a1, qword_1EBB838C0);
}

unsigned char *sub_1C2650B14(unsigned char *a1)
{
  return sub_1C2650B2C(a1);
}

unsigned char *sub_1C2650B2C(unsigned char *result)
{
  if ((*result & 1) == 0)
  {
    *unint64_t result = 1;
    return (unsigned char *)sub_1C26137F0();
  }
  return result;
}

uint64_t sub_1C2650B64(uint64_t a1)
{
  return sub_1C2606584(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1C2650B88()
{
  return sub_1C260F964();
}

void sub_1C2650B90(uint64_t a1)
{
  sub_1C2614F50(a1, v1);
}

uint64_t sub_1C2650BAC()
{
  return sub_1C2604D70(*(void *)(v0 + 16), 1);
}

uint64_t sub_1C2650BCC(uint64_t a1)
{
  return sub_1C26118F8(a1, v1);
}

void sub_1C2650BE8()
{
  sub_1C260F67C(*(double *)(v0 + 24));
}

uint64_t sub_1C2650BF8()
{
  return sub_1C260B1A0(*(double *)(v0 + 32), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1C2650C04(uint64_t a1)
{
  sub_1C2612D94(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

ValueMetadata *type metadata accessor for BasicGenerator()
{
  return &type metadata for BasicGenerator;
}

uint64_t sub_1C2650C34(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

ValueMetadata *type metadata accessor for UserInterface()
{
  return &type metadata for UserInterface;
}

uint64_t sub_1C2650C5C()
{
  return SourceProfile.description.getter(*v0);
}

uint64_t getEnumTagSinglePayload for SearchSection(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for SearchSection()
{
  return &type metadata for SearchSection;
}

uint64_t UserDefault.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_1C2619A18(a1, a2);
  int v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8);

  return v4(a1);
}

unint64_t sub_1C2650D74()
{
  unint64_t result = qword_1EBB85F20;
  if (!qword_1EBB85F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85F20);
  }
  return result;
}

uint64_t type metadata accessor for HealthPlatformContextProvider.Context(uint64_t a1)
{
  return sub_1C2635628(a1, qword_1EBB82730);
}

uint64_t sub_1C2650DE8(void *a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = MEMORY[0x1E4FBC868];
  return result;
}

uint64_t sub_1C2650E24(void **a1)
{
  return sub_1C2605080(a1);
}

void sub_1C2650E40(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1C2606E24(a1, v2[2], v2[3], v2[4], a2);
}

void sub_1C2650E60(uint64_t a1)
{
  sub_1C2607B30(a1, *(void *)(v1 + 16));
}

uint64_t dispatch thunk of HealthAppNotificationManager.removePluginFeedItemNotificationsWithoutProfiles(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t sub_1C2650EAC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C260799C(*(void *)(v1 + 16), a1);
}

uint64_t dispatch thunk of HealthAppNotificationManager.scheduleAllCoalescedNotifications()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.getNotificationSettings()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

id sub_1C2650EFC()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_notificationSettings);

  return v1;
}

uint64_t HealthExperienceStoreOracle.healthExperienceStore.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C26482E4(v1 + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore, a1);
}

uint64_t dispatch thunk of HealthExperienceStoreOracle.readyHealthExperienceStore.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t type metadata accessor for HealthExperienceStoreModel()
{
  return self;
}

uint64_t sub_1C2650FC4()
{
  uint64_t result = sub_1C260CF90();
  qword_1EBB8CE18 = result;
  return result;
}

uint64_t dispatch thunk of HealthExperienceStore.persistentContainer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HealthExperienceStore.persistentStoreDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

void *sub_1C265100C()
{
  id v0 = _s14HealthPlatform0A15AppPluginSourceC12knownBundlesSayAC11KnownBundleVGvgZ_0();
  id v1 = _s14HealthPlatform0A15AppPluginSourceC25disabledBundleIdentifiersShySSGyFZ_0();
  id v2 = _s14HealthPlatform0A15AppPluginSourceC24allowedBundleIdentifiersShySSGSgyFZ_0();
  type metadata accessor for HealthAppPluginSource();
  uint64_t v3 = swift_allocObject();
  uint64_t result = HealthAppPluginSource.init(bundleProvider:knownBundles:disabledBundleIdentifiers:allowedBundleIdentifiers:)(0, 0, (uint64_t)v0, (uint64_t)v1, (uint64_t)v2);
  qword_1EBB84FB0 = v3;
  return result;
}

uint64_t type metadata accessor for DaemonHealthExperienceStoreOracle()
{
  return self;
}

id static DaemonHealthExperienceStoreOracle.shared.getter()
{
  if (qword_1EBB83A38 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1EBB83A28;

  return v0;
}

id sub_1C2651100()
{
  return sub_1C262E4A8();
}

id sub_1C2651124()
{
  return sub_1C26215A8();
}

uint64_t static DiskHealthExperienceStore.shared.getter()
{
  if (qword_1EBB84670 != -1) {
    swift_once();
  }

  return swift_retain();
}

void sub_1C26511A4(uint64_t a1, uint64_t a2)
{
  sub_1C2604048(a1, a2, v2);
}

void sub_1C26511AC()
{
  sub_1C26248B8(319, (unint64_t *)&qword_1EBB84F30, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for DiskHealthExperienceStore.MutableState()
{
  uint64_t result = qword_1EBB84F88;
  if (!qword_1EBB84F88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t static DiskHealthExperienceStore.diskHealthExperienceStoreLocaleKey.getter()
{
  return 0xD000000000000022;
}

unint64_t static DiskHealthExperienceStore.diskHealthExperienceStoreVersionKey.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_1C2651318(uint64_t a1)
{
  sub_1C2641054(0, &qword_1EBB82660, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C26513A4(uint64_t a1)
{
}

uint64_t sub_1C26513D8(uint64_t a1, uint64_t a2)
{
  sub_1C26248B8(0, (unint64_t *)&qword_1EBB84F30, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C265146C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26514B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id HealthExperienceStoreCleanupOperation.__allocating_init(context:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return HealthExperienceStoreCleanupOperation.init(context:)(a1);
}

id HealthExperienceStoreCleanupOperation.init(context:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14HealthPlatform37HealthExperienceStoreCleanupOperation_context] = a1;
  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for HealthExperienceStoreCleanupOperation();
  id v3 = a1;
  id v4 = objc_msgSendSuper2(&v15, sel_init);
  uint64_t v5 = qword_1EBB86260;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1C277B130();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBB86280);
  id v8 = v6;
  uint64_t v9 = sub_1C277B100();
  os_log_type_t v10 = sub_1C277BD40();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    id v13 = v8;
    sub_1C277C0D0();
    *uint64_t v12 = v8;

    _os_log_impl(&dword_1C2601000, v9, v10, "%@ init", v11, 0xCu);
    sub_1C2652E60(0, (unint64_t *)&qword_1EBB854A0, (void (*)(uint64_t))sub_1C2652E20);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v12, -1, -1);
    MEMORY[0x1C875D230](v11, -1, -1);
  }
  else
  {

    id v3 = v8;
  }

  return v8;
}

uint64_t type metadata accessor for HealthExperienceStoreCleanupOperation()
{
  return self;
}

uint64_t sub_1C2651750()
{
  uint64_t v1 = sub_1C277A9A0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v77 = ((char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v78 = sub_1C277A9B0();
  int64_t v76 = *(void **)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  unint64_t v74 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2652E60(0, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v75 = (char *)&v67 - v6;
  uint64_t v80 = sub_1C277A840();
  uint64_t v7 = *(void *)(v80 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v80);
  int64_t v73 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v71 = (char *)&v67 - v11;
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v67 - v12;
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C277B130();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EBB86280);
  uint64_t v16 = v0;
  uint64_t v72 = v15;
  unint64_t v17 = sub_1C277B100();
  os_log_type_t v18 = sub_1C277BD40();
  BOOL v19 = os_log_type_enabled(v17, v18);
  id v79 = v13;
  if (v19)
  {
    char v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    uint64_t v69 = v2;
    uint64_t v70 = v1;
    uint64_t v68 = v20;
    *(_DWORD *)char v20 = 138412290;
    aBlock[0] = (uint64_t)v16;
    unint64_t v22 = v16;
    uint64_t v2 = v69;
    uint64_t v1 = v70;
    sub_1C277C0D0();
    *uint64_t v21 = v16;

    id v13 = v79;
    os_log_type_t v23 = v18;
    uint64_t v24 = v68;
    _os_log_impl(&dword_1C2601000, v17, v23, "%@ main()", v68, 0xCu);
    sub_1C2652E60(0, (unint64_t *)&qword_1EBB854A0, (void (*)(uint64_t))sub_1C2652E20);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v21, -1, -1);
    MEMORY[0x1C875D230](v24, -1, -1);
  }
  else
  {
  }
  sub_1C277A830();
  id v25 = v74;
  sub_1C277A990();
  unint64_t v26 = v77;
  (*(void (**)(NSObject *, void, uint64_t))(v2 + 104))(v77, *MEMORY[0x1E4F27BF0], v1);
  uint64_t v27 = (uint64_t)v75;
  sub_1C277A980();
  (*(void (**)(NSObject *, uint64_t))(v2 + 8))(v26, v1);
  ((void (*)(char *, uint64_t))v76[1])(v25, v78);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v27, 1, v80) == 1)
  {
    sub_1C2652EB4(v27);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v73, v13, v80);
    uint64_t v28 = v16;
    uint64_t v29 = v7;
    uint64_t v30 = (uint8_t *)sub_1C277B100();
    os_log_type_t v31 = sub_1C277BD20();
    if (os_log_type_enabled((os_log_t)v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = (void *)swift_slowAlloc();
      int64_t v76 = v33;
      uint64_t v78 = swift_slowAlloc();
      aBlock[0] = v78;
      *(_DWORD *)uint64_t v32 = 138412546;
      unint64_t v77 = v30;
      uint64_t v82 = (uint64_t)v28;
      uint64_t v34 = v73;
      uint64_t v35 = v28;
      sub_1C277C0D0();
      void *v33 = v28;

      *(_WORD *)(v32 + 12) = 2080;
      sub_1C265313C(&qword_1EBB82650, MEMORY[0x1E4F27928]);
      uint64_t v36 = v80;
      uint64_t v37 = sub_1C277C7B0();
      uint64_t v82 = sub_1C263FDFC(v37, v38, aBlock);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      char v39 = *(void (**)(char *, uint64_t))(v29 + 8);
      v39(v34, v36);
      uint64_t v40 = (uint8_t *)v77;
      _os_log_impl(&dword_1C2601000, v77, v31, "%@ cannot generate yesterday from today: %s", (uint8_t *)v32, 0x16u);
      sub_1C2652E60(0, (unint64_t *)&qword_1EBB854A0, (void (*)(uint64_t))sub_1C2652E20);
      uint64_t v41 = v76;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v41, -1, -1);
      uint64_t v42 = v78;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v42, -1, -1);
      MEMORY[0x1C875D230](v32, -1, -1);

      id v43 = v79;
      uint64_t v44 = v36;
    }
    else
    {

      char v39 = *(void (**)(char *, uint64_t))(v7 + 8);
      uint64_t v63 = v80;
      v39(v73, v80);

      id v43 = v13;
      uint64_t v44 = v63;
    }
    return ((uint64_t (*)(char *, uint64_t))v39)(v43, v44);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v71, v27, v80);
    uint64_t v45 = self;
    uint64_t v46 = (void *)sub_1C277A7E0();
    id v47 = objc_msgSend(v45, sel_deleteHistoryBeforeDate_, v46);

    uint64_t v48 = *(void **)&v16[OBJC_IVAR____TtC14HealthPlatform37HealthExperienceStoreCleanupOperation_context];
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = v16;
    *(void *)(v49 + 24) = v47;
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = sub_1C2652F6C;
    *(void *)(v50 + 24) = v49;
    aBlock[4] = (uint64_t)sub_1C261AEA4;
    aBlock[5] = v50;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C262BAF0;
    aBlock[3] = (uint64_t)&block_descriptor;
    id v51 = _Block_copy(aBlock);
    unint64_t v52 = v16;
    uint64_t v53 = (char *)v47;
    swift_retain();
    swift_release();
    objc_msgSend(v48, sel_performBlockAndWait_, v51);
    _Block_release(v51);
    LOBYTE(v48) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (v48)
    {
      __break(1u);
    }
    else
    {
      unint64_t v55 = v52;
      uint64_t v56 = sub_1C277B100();
      os_log_type_t v57 = sub_1C277BD40();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        char v59 = (void *)swift_slowAlloc();
        unint64_t v77 = v58;
        uint64_t v78 = v49;
        *(_DWORD *)uint64_t v58 = 138412290;
        aBlock[0] = (uint64_t)v55;
        unint64_t v60 = v55;
        char v61 = v53;
        sub_1C277C0D0();
        void *v59 = v55;

        uint64_t v62 = v77;
        _os_log_impl(&dword_1C2601000, v56, v57, "%@ start() done!", (uint8_t *)v77, 0xCu);
        sub_1C2652E60(0, (unint64_t *)&qword_1EBB854A0, (void (*)(uint64_t))sub_1C2652E20);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v59, -1, -1);
        MEMORY[0x1C875D230](v62, -1, -1);
      }
      else
      {

        char v61 = v55;
      }
      id v64 = v79;

      uint64_t v65 = *(void (**)(char *, uint64_t))(v7 + 8);
      uint64_t v66 = v80;
      v65(v71, v80);
      v65(v64, v66);
      return swift_release();
    }
  }
  return result;
}

void sub_1C265218C(char *a1, void *a2)
{
  v31[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void **)&a1[OBJC_IVAR____TtC14HealthPlatform37HealthExperienceStoreCleanupOperation_context];
  v31[0] = 0;
  id v5 = objc_msgSend(v4, sel_executeRequest_error_, a2, v31);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = v31[0];
  }
  else
  {
    id v8 = v31[0];
    uint64_t v9 = (void *)sub_1C277A620();

    swift_willThrow();
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1C277B130();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EBB86280);
    uint64_t v11 = a1;
    id v12 = a2;
    id v13 = v9;
    uint64_t v14 = v11;
    id v15 = v12;
    id v16 = v9;
    unint64_t v17 = sub_1C277B100();
    os_log_type_t v18 = sub_1C277BD20();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v29 = (void *)swift_slowAlloc();
      uint64_t v30 = (void *)swift_slowAlloc();
      v31[0] = v30;
      *(_DWORD *)uint64_t v19 = 138412802;
      char v20 = v14;
      sub_1C277C0D0();
      *uint64_t v29 = v14;

      *(_WORD *)(v19 + 12) = 2080;
      id v21 = v15;
      id v22 = objc_msgSend(v21, sel_description);
      uint64_t v23 = sub_1C277B850();
      unint64_t v25 = v24;

      sub_1C263FDFC(v23, v25, (uint64_t *)v31);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2080;
      id v26 = v9;
      sub_1C26532A4();
      uint64_t v27 = sub_1C277B870();
      sub_1C263FDFC(v27, v28, (uint64_t *)v31);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2601000, v17, v18, "%@ executing this request failed: %s with error: %s", (uint8_t *)v19, 0x20u);
      sub_1C2652E60(0, (unint64_t *)&qword_1EBB854A0, (void (*)(uint64_t))sub_1C2652E20);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v29, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v30, -1, -1);
      MEMORY[0x1C875D230](v19, -1, -1);
    }
    else
    {
    }
  }
}

id HealthExperienceStoreCleanupOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void HealthExperienceStoreCleanupOperation.init()()
{
}

id HealthExperienceStoreCleanupOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthExperienceStoreCleanupOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2652740()
{
  return sub_1C277C910();
}

uint64_t sub_1C2652788()
{
  return sub_1C277C8D0();
}

uint64_t sub_1C26527B4()
{
  return sub_1C277C910();
}

uint64_t sub_1C26527F8(uint64_t a1, uint64_t a2)
{
  return sub_1C2652CFC(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1C2652820(uint64_t a1, uint64_t a2)
{
  return sub_1C2652CFC(a1, a2, MEMORY[0x1E4F27EB8]);
}

void *sub_1C2652838@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1C2652848(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1C2652854(uint64_t a1, id *a2)
{
  uint64_t result = sub_1C277B830();
  *a2 = 0;
  return result;
}

uint64_t sub_1C26528CC(uint64_t a1, id *a2)
{
  char v3 = sub_1C277B840();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1C265294C@<X0>(uint64_t *a1@<X8>)
{
  sub_1C277B850();
  uint64_t v2 = sub_1C277B820();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C2652998(uint64_t a1)
{
  uint64_t v2 = sub_1C265313C(&qword_1EBB842A0, type metadata accessor for HKFeatureIdentifier);
  uint64_t v3 = sub_1C265313C((unint64_t *)&unk_1EA304170, type metadata accessor for HKFeatureIdentifier);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1C2652A54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C277B850();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C2652A80(uint64_t a1)
{
  uint64_t v2 = sub_1C265313C(&qword_1EA3041D0, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_1C265313C((unint64_t *)&unk_1EA3041D8, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1C2652B3C(uint64_t a1)
{
  uint64_t v2 = sub_1C265313C((unint64_t *)&unk_1EBB82FA0, type metadata accessor for ProgressUserInfoKey);
  uint64_t v3 = sub_1C265313C(&qword_1EA3041E8, type metadata accessor for ProgressUserInfoKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1C2652BF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C277B820();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C2652C40(uint64_t a1)
{
  uint64_t v2 = sub_1C265313C(&qword_1EA3041F0, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v3 = sub_1C265313C(&qword_1EA3041F8, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1C2652CFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1C277B850();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C2652D40()
{
  sub_1C277B850();
  sub_1C277B8B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2652D94()
{
  uint64_t v0 = sub_1C277B850();
  uint64_t v2 = v1;
  if (v0 == sub_1C277B850() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C277C7E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1C2652E20()
{
  unint64_t result = qword_1EBB85F30;
  if (!qword_1EBB85F30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85F30);
  }
  return result;
}

void sub_1C2652E60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277C0B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2652EB4(uint64_t a1)
{
  sub_1C2652E60(0, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2652F2C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C2652F6C()
{
  sub_1C265218C(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1C2652F74()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t method lookup function for HealthExperienceStoreCleanupOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthExperienceStoreCleanupOperation);
}

uint64_t dispatch thunk of HealthExperienceStoreCleanupOperation.__allocating_init(context:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t sub_1C2652FBC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C2652FDC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

void type metadata accessor for os_unfair_recursive_lock_s(uint64_t a1)
{
}

void type metadata accessor for CFError(uint64_t a1)
{
}

void type metadata accessor for HKBiologicalSex(uint64_t a1)
{
}

void type metadata accessor for HKWheelchairUse(uint64_t a1)
{
}

void type metadata accessor for HKFeatureIdentifier(uint64_t a1)
{
}

void type metadata accessor for _HKDataTypeCode(uint64_t a1)
{
}

uint64_t sub_1C26530F4()
{
  return sub_1C265313C(&qword_1EBB82F00, type metadata accessor for _HKDataTypeCode);
}

uint64_t sub_1C265313C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2653184()
{
  return sub_1C265313C(&qword_1EA304148, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_1C26531CC()
{
  return sub_1C265313C((unint64_t *)&unk_1EA304150, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_1C2653214()
{
  return sub_1C265313C(&qword_1EBB842A8, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_1C265325C()
{
  return sub_1C265313C((unint64_t *)&unk_1EA304160, type metadata accessor for HKOnboardingCompletionCountryCodeProvenance);
}

unint64_t sub_1C26532A4()
{
  unint64_t result = qword_1EBB831D0;
  if (!qword_1EBB831D0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB831D0);
  }
  return result;
}

void type metadata accessor for HKMCPregnancyState(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

uint64_t sub_1C265334C()
{
  return sub_1C265313C(&qword_1EA304188, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1C2653394()
{
  return sub_1C265313C(&qword_1EA304190, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1C26533DC()
{
  return sub_1C265313C(&qword_1EA304198, type metadata accessor for ProgressUserInfoKey);
}

uint64_t sub_1C2653424()
{
  return sub_1C265313C(&qword_1EA3041A0, type metadata accessor for ProgressUserInfoKey);
}

uint64_t sub_1C265346C()
{
  return sub_1C265313C(&qword_1EA3041A8, type metadata accessor for URLResourceKey);
}

uint64_t sub_1C26534B4()
{
  return sub_1C265313C(&qword_1EA3041B0, type metadata accessor for URLResourceKey);
}

uint64_t sub_1C26534FC()
{
  return sub_1C265313C((unint64_t *)&unk_1EA3041B8, type metadata accessor for URLResourceKey);
}

uint64_t sub_1C2653544()
{
  return sub_1C265313C(&qword_1EBB82FB0, type metadata accessor for ProgressUserInfoKey);
}

uint64_t sub_1C265358C()
{
  return sub_1C265313C(&qword_1EA3041C8, type metadata accessor for NSKeyValueChangeKey);
}

double ContentMagnitudeFeatureTag.value.getter()
{
  return *(double *)v0;
}

HealthPlatform::ContentMagnitudeFeatureTag __swiftcall ContentMagnitudeFeatureTag.init(_:)(HealthPlatform::ContentMagnitudeFeatureTag result)
{
  v1->Swift::Int value = result.value;
  return result;
}

double sub_1C26535F8@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

double sub_1C2653604@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

ValueMetadata *type metadata accessor for ContentMagnitudeFeatureTag()
{
  return &type metadata for ContentMagnitudeFeatureTag;
}

uint64_t static FeedItem.entityName.getter()
{
  return 0x6D65744964656546;
}

uint64_t sub_1C2653638()
{
  return 0x6D65744964656546;
}

unint64_t static FeedItem.uniqueIdentifierKeyPath.getter()
{
  return 0xD000000000000010;
}

uint64_t static FeedItem.defaultSortOrder.getter()
{
  return 99999;
}

uint64_t FeedItem.eligibleFeedKinds.getter()
{
  FeedItem.contentKind.getter(&v9);
  uint64_t v0 = 0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  char v2 = v9;
  do
  {
    char v5 = byte_1F1DC4C48[v0 + 32];
    uint64_t v6 = &unk_1F1DC4C70;
    switch(v5)
    {
      case 1:
        uint64_t v6 = &unk_1F1DC4C98;
        break;
      case 2:
        break;
      case 3:
        if (qword_1EBB85960 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v6 = (void *)qword_1EBB85770;
        swift_bridgeObjectRetain();
        break;
      case 4:
        uint64_t v6 = &unk_1F1DC4CC0;
        break;
      case 5:
        uint64_t v6 = &unk_1F1DC4D10;
        break;
      default:
        uint64_t v6 = &unk_1F1DC4CE8;
        break;
    }
    char v7 = sub_1C26596D8(v2, (uint64_t)v6);
    swift_bridgeObjectRelease();
    if (v7)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1C2659DB0(0, *(void *)(v1 + 16) + 1, 1);
      }
      unint64_t v4 = *(void *)(v1 + 16);
      unint64_t v3 = *(void *)(v1 + 24);
      if (v4 >= v3 >> 1) {
        sub_1C2659DB0(v3 > 1, v4 + 1, 1);
      }
      *(void *)(v1 + 16) = v4 + 1;
      *(unsigned char *)(v1 + v4 + 32) = v5;
    }
    ++v0;
  }
  while (v0 != 6);
  return v1;
}

void sub_1C2653854(unsigned char *a1@<X8>)
{
  FeedItem.contentKind.getter(&v2);
  *a1 = v2;
}

id sub_1C2653890(uint64_t a1, void **a2)
{
  char v2 = *a2;
  ContentKind.rawValue.getter();
  unint64_t v3 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setContentKindRawValue_, v3);

  return sub_1C2653980();
}

id FeedItem.contentKind.setter()
{
  ContentKind.rawValue.getter();
  uint64_t v1 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setContentKindRawValue_, v1);

  return sub_1C2653980();
}

id sub_1C2653980()
{
  if ((objc_msgSend(v0, sel_searchSectionHintRawValue) & 0x80000000) != 0
    || (unsigned __int8 v1 = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(v0, sel_searchSectionHintRawValue)), v1 == 13))
  {
    FeedItem.contentKind.getter(&v4);
    uint64_t v2 = FeedItem.associatedKeywords.getter();
    unsigned __int8 v1 = sub_1C27746A0(&v4, v2);
    swift_bridgeObjectRelease();
  }

  return objc_msgSend(v0, sel_setSearchSectionRawValue_, v1);
}

id (*FeedItem.contentKind.modify(uint64_t a1))(void **a1)
{
  *(void *)a1 = v1;
  FeedItem.contentKind.getter((char *)(a1 + 8));
  return sub_1C2653A7C;
}

id sub_1C2653A7C(void **a1)
{
  uint64_t v1 = *a1;
  ContentKind.rawValue.getter();
  uint64_t v2 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setContentKindRawValue_, v2);

  return sub_1C2653980();
}

uint64_t FeedItem.favoriteStatus.getter()
{
  swift_getObjectType();
  id v1 = objc_msgSend(v0, sel_favoriteStatusRawValue);
  uint64_t v2 = sub_1C277B850();
  unint64_t v4 = v3;

  swift_bridgeObjectRelease();
  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5
    || (id v6 = objc_msgSend(v0, sel_favoriteStatusRawValue),
        sub_1C277B850(),
        v6,
        unint64_t v7 = sub_1C277C650(),
        swift_bridgeObjectRelease(),
        v7 >= 3))
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1C277B130();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EBB86280);
    id v9 = v0;
    uint64_t v10 = sub_1C277B100();
    os_log_type_t v11 = sub_1C277BD30();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v27 = v13;
      *(_DWORD *)uint64_t v12 = 136446723;
      uint64_t v14 = sub_1C277C9E0();
      uint64_t v25 = sub_1C263FDFC(v14, v15, &v27);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2082;
      id v16 = objc_msgSend(v9, sel_favoriteStatusRawValue, v25, v27);
      uint64_t v17 = sub_1C277B850();
      unint64_t v19 = v18;

      uint64_t v26 = sub_1C263FDFC(v17, v19, &v27);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 22) = 2081;
      id v20 = objc_msgSend(v9, sel_description, v26);
      uint64_t v21 = sub_1C277B850();
      unint64_t v23 = v22;

      sub_1C263FDFC(v21, v23, &v27);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v10, v11, "%{public}s Unexpected favorite status %{public}s for feed item %{private}s", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v13, -1, -1);
      MEMORY[0x1C875D230](v12, -1, -1);
    }
    else
    {
    }
    return 2;
  }
  return v7;
}

void sub_1C2653E38(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (id)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setFavoriteStatusRawValue_, v3);
}

void FeedItem.favoriteStatus.setter()
{
  id v1 = (id)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setFavoriteStatusRawValue_, v1);
}

void (*FeedItem.favoriteStatus.modify(uint64_t a1))(void **a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = FeedItem.favoriteStatus.getter();
  return sub_1C2654010;
}

void sub_1C2654010(void **a1)
{
  uint64_t v1 = *a1;
  id v2 = (id)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setFavoriteStatusRawValue_, v2);
}

uint64_t FeedItem.searchSection.getter()
{
  uint64_t result = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(v0, sel_searchSectionRawValue));
  if (result == 13)
  {
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C265416C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(*a1, sel_searchSectionRawValue));
  if (result == 13)
  {
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  else
  {
    *a2 = result;
  }
  return result;
}

id FeedItem.searchSection.setter(unsigned __int8 a1)
{
  return objc_msgSend(v1, sel_setSearchSectionRawValue_, a1);
}

id (*FeedItem.searchSection.modify(uint64_t a1))(uint64_t a1)
{
  id v2 = v1;
  *(void *)a1 = v2;
  char v4 = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(v2, sel_searchSectionRawValue));
  if (v4 == 13)
  {
    uint64_t result = (id (*)(uint64_t))sub_1C277C560();
    __break(1u);
  }
  else
  {
    *(unsigned char *)(a1 + 8) = v4;
    return sub_1C26542D8;
  }
  return result;
}

id sub_1C26542D8(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setSearchSectionRawValue_, *(unsigned __int8 *)(a1 + 8));
}

uint64_t FeedItem.searchSectionHint.getter()
{
  if ((objc_msgSend(v0, sel_searchSectionHintRawValue) & 0x80000000) != 0) {
    return 13;
  }
  id v1 = objc_msgSend(v0, sel_searchSectionHintRawValue);

  return _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)v1);
}

id FeedItem.searchSectionHint.setter(unsigned __int8 a1)
{
  if (a1 == 13) {
    uint64_t v2 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v2 = a1;
  }
  objc_msgSend(v1, sel_setSearchSectionHintRawValue_, v2);

  return sub_1C2653980();
}

id (*FeedItem.searchSectionHint.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)a1 = v2;
  if ((objc_msgSend(v2, sel_searchSectionHintRawValue) & 0x80000000) != 0) {
    char v4 = 13;
  }
  else {
    char v4 = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(v2, sel_searchSectionHintRawValue));
  }
  *(unsigned char *)(a1 + 8) = v4;
  return sub_1C265440C;
}

id sub_1C265440C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8) == 13) {
    uint64_t v1 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v1 = *(unsigned __int8 *)(a1 + 8);
  }
  objc_msgSend(*(id *)a1, sel_setSearchSectionHintRawValue_, v1);
  return sub_1C2653980();
}

uint64_t FeedItem.associatedKeywords.getter()
{
  id v1 = objc_msgSend(v0, sel_keywords);
  type metadata accessor for Keyword();
  sub_1C265B880();
  uint64_t v2 = sub_1C277BBC0();

  unint64_t v29 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = sub_1C277C1C0();
    if (v3) {
      goto LABEL_3;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
LABEL_21:
    uint64_t v28 = sub_1C2648348(v7);
    swift_bridgeObjectRelease();
    return v28;
  }
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1C264872C(0, v3 & ~(v3 >> 63), 0);
  if (v29)
  {
    uint64_t result = sub_1C277C160();
    char v6 = 1;
  }
  else
  {
    uint64_t result = sub_1C265B7F8(v2);
    char v6 = v8 & 1;
  }
  uint64_t v31 = result;
  uint64_t v32 = v5;
  char v33 = v6;
  if ((v3 & 0x8000000000000000) == 0)
  {
    do
    {
      while (1)
      {
        int64_t v15 = v31;
        uint64_t v14 = v32;
        char v16 = v33;
        sub_1C2641FC0(v31, v32, v33, v2, (void (*)(void))type metadata accessor for Keyword);
        unint64_t v18 = v17;
        id v19 = objc_msgSend(v17, sel_identifier);
        uint64_t v20 = sub_1C277B850();
        uint64_t v22 = v21;

        uint64_t v23 = v34;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1C264872C(0, *(void *)(v23 + 16) + 1, 1);
          uint64_t v23 = v34;
        }
        unint64_t v25 = *(void *)(v23 + 16);
        unint64_t v24 = *(void *)(v23 + 24);
        if (v25 >= v24 >> 1)
        {
          uint64_t result = sub_1C264872C(v24 > 1, v25 + 1, 1);
          uint64_t v23 = v34;
        }
        *(void *)(v23 + 16) = v25 + 1;
        unint64_t v26 = v23 + 16 * v25;
        *(void *)(v26 + 32) = v20;
        *(void *)(v26 + 40) = v22;
        if (v29) {
          break;
        }
        int64_t v9 = sub_1C26432B0(v15, v14, v16, v2);
        uint64_t v11 = v10;
        char v13 = v12;
        sub_1C26431E8(v15, v14, v16);
        uint64_t v31 = v9;
        uint64_t v32 = v11;
        char v33 = v13 & 1;
        if (!--v3) {
          goto LABEL_20;
        }
      }
      if ((v16 & 1) == 0) {
        goto LABEL_23;
      }
      if (sub_1C277C180()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1C265CE70(0, &qword_1EBB85490, (void (*)(uint64_t))type metadata accessor for Keyword, (void (*)(void))sub_1C265B880);
      uint64_t v27 = (void (*)(char *, void))sub_1C277BBF0();
      sub_1C277C230();
      v27(v30, 0);
      --v3;
    }
    while (v3);
LABEL_20:
    sub_1C26431E8(v31, v32, v33);
    swift_bridgeObjectRelease();
    uint64_t v7 = v34;
    goto LABEL_21;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t FeedItem.associatedHKTypes.getter()
{
  id v1 = objc_msgSend(v0, sel_dataTypes);
  type metadata accessor for DataType();
  sub_1C265B8B4();
  uint64_t v2 = sub_1C277BBC0();

  sub_1C2654BD8(v2);
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C2644A64(v4, (unint64_t *)&qword_1EBB85E80, 0x1E4F2B2C0, (unint64_t *)&qword_1EBB84498, (void (*)(id *, uint64_t))sub_1C2644BF8);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C2654844@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_dataTypes);
  type metadata accessor for DataType();
  sub_1C265B8B4();
  uint64_t v4 = sub_1C277BBC0();

  sub_1C2654BD8(v4);
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1C2644A64(v6, (unint64_t *)&qword_1EBB85E80, 0x1E4F2B2C0, (unint64_t *)&qword_1EBB84498, (void (*)(id *, uint64_t))sub_1C2644BF8);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v7;
  return result;
}

void sub_1C2654914(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  id v3 = *a2;
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v3, sel_managedObjectContext);
  if (v4)
  {
    id v5 = v4;
    unint64_t v6 = sub_1C265B8E8(v2, v5);
    swift_bridgeObjectRelease();

    sub_1C265BDC4(v6, (void (*)(void))type metadata accessor for DataType, (void (*)(void))sub_1C265B8B4, (void (*)(id *, uint64_t))sub_1C2691010);
    swift_bridgeObjectRelease();
    type metadata accessor for DataType();
    sub_1C265B8B4();
    uint64_t v7 = (void *)sub_1C277BBB0();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setDataTypes_, v7);
  }
  else
  {
    sub_1C277C560();
    __break(1u);
  }
}

void FeedItem.associatedHKTypes.setter(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_managedObjectContext);
  if (v3)
  {
    id v4 = v3;
    unint64_t v5 = sub_1C265B8E8(a1, v4);
    swift_bridgeObjectRelease();

    sub_1C265BDC4(v5, (void (*)(void))type metadata accessor for DataType, (void (*)(void))sub_1C265B8B4, (void (*)(id *, uint64_t))sub_1C2691010);
    swift_bridgeObjectRelease();
    type metadata accessor for DataType();
    sub_1C265B8B4();
    unint64_t v6 = (void *)sub_1C277BBB0();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setDataTypes_, v6);
  }
  else
  {
    sub_1C277C560();
    __break(1u);
  }
}

void sub_1C2654BD8(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C277C170();
    type metadata accessor for DataType();
    sub_1C265B8B4();
    sub_1C277BC10();
    uint64_t v1 = v19;
    uint64_t v17 = v20;
    uint64_t v2 = v21;
    int64_t v3 = v22;
    unint64_t v4 = v23;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  int64_t v16 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_1C277C200()) {
      goto LABEL_36;
    }
    type metadata accessor for DataType();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v18;
    swift_unknownObjectRelease();
    int64_t v10 = v3;
    uint64_t v8 = v4;
    if (!v18) {
      goto LABEL_36;
    }
LABEL_26:
    id v14 = objc_msgSend(self, sel_dataTypeWithCode_, objc_msgSend(v11, sel_codeRaw));

    int64_t v3 = v10;
    unint64_t v4 = v8;
    if (v14)
    {
      MEMORY[0x1C875B930]();
      if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C277BA90();
      }
      sub_1C277BAE0();
      sub_1C277BA60();
      int64_t v3 = v10;
      unint64_t v4 = v8;
    }
  }
  if (v4)
  {
    uint64_t v8 = (v4 - 1) & v4;
    unint64_t v9 = __clz(__rbit64(v4)) | (v3 << 6);
    int64_t v10 = v3;
LABEL_25:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
    if (!v11) {
      goto LABEL_36;
    }
    goto LABEL_26;
  }
  int64_t v10 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v10 >= v16) {
      goto LABEL_36;
    }
    unint64_t v12 = *(void *)(v17 + 8 * v10);
    if (!v12)
    {
      int64_t v13 = v3 + 2;
      if (v3 + 2 >= v16) {
        goto LABEL_36;
      }
      unint64_t v12 = *(void *)(v17 + 8 * v13);
      if (v12) {
        goto LABEL_23;
      }
      int64_t v13 = v3 + 3;
      if (v3 + 3 >= v16) {
        goto LABEL_36;
      }
      unint64_t v12 = *(void *)(v17 + 8 * v13);
      if (v12) {
        goto LABEL_23;
      }
      int64_t v13 = v3 + 4;
      if (v3 + 4 >= v16) {
        goto LABEL_36;
      }
      unint64_t v12 = *(void *)(v17 + 8 * v13);
      if (v12)
      {
LABEL_23:
        int64_t v10 = v13;
      }
      else
      {
        int64_t v10 = v3 + 5;
        if (v3 + 5 >= v16) {
          goto LABEL_36;
        }
        unint64_t v12 = *(void *)(v17 + 8 * v10);
        if (!v12)
        {
          int64_t v15 = v3 + 6;
          while (v16 != v15)
          {
            unint64_t v12 = *(void *)(v17 + 8 * v15++);
            if (v12)
            {
              int64_t v10 = v15 - 1;
              goto LABEL_24;
            }
          }
LABEL_36:
          sub_1C2648F6C();
          return;
        }
      }
    }
LABEL_24:
    uint64_t v8 = (v12 - 1) & v12;
    unint64_t v9 = __clz(__rbit64(v12)) + (v10 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t sub_1C2654F18(uint64_t a1)
{
  uint64_t result = sub_1C277BBE0();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    id v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1C26483E0(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void (*FeedItem.associatedHKTypes.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x38uLL);
  *a1 = v4;
  v4[3] = v2;
  id v5 = objc_msgSend(v2, sel_dataTypes);
  v4[4] = type metadata accessor for DataType();
  v4[5] = sub_1C265B8B4();
  uint64_t v6 = sub_1C277BBC0();

  sub_1C2654BD8(v6);
  unint64_t v8 = v7;
  v4[6] = 0;
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1C2644A64(v8, (unint64_t *)&qword_1EBB85E80, 0x1E4F2B2C0, (unint64_t *)&qword_1EBB84498, (void (*)(id *, uint64_t))sub_1C2644BF8);
  swift_bridgeObjectRelease();
  *uint64_t v4 = v9;
  return sub_1C26551C8;
}

void sub_1C26551C8(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = (void *)(*a1)[3];
  if ((a2 & 1) == 0)
  {
    id v10 = objc_msgSend((id)(*a1)[3], sel_managedObjectContext);
    if (v10)
    {
      id v11 = (void *)v2[3];
      id v12 = v10;
      unint64_t v13 = sub_1C265B8E8(v3, v12);

      swift_bridgeObjectRelease();
      sub_1C265BDC4(v13, (void (*)(void))type metadata accessor for DataType, (void (*)(void))sub_1C265B8B4, (void (*)(id *, uint64_t))sub_1C2691010);
      swift_bridgeObjectRelease();
      int64_t v14 = (void *)sub_1C277BBB0();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setDataTypes_, v14);

      goto LABEL_6;
    }
LABEL_9:
    sub_1C277C560();
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  id v5 = objc_msgSend(v4, sel_managedObjectContext);
  if (!v5) {
    goto LABEL_9;
  }
  uint64_t v6 = (void *)v2[3];
  id v7 = v5;
  unint64_t v8 = sub_1C265B8E8(v3, v7);

  swift_bridgeObjectRelease();
  sub_1C265BDC4(v8, (void (*)(void))type metadata accessor for DataType, (void (*)(void))sub_1C265B8B4, (void (*)(id *, uint64_t))sub_1C2691010);
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_1C277BBB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setDataTypes_, v9);

  swift_bridgeObjectRelease();
LABEL_6:

  free(v2);
}

uint64_t sub_1C2655438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FeedItem.associatedKeywords.getter();
  *a1 = result;
  return result;
}

void sub_1C2655464()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  FeedItem.associatedKeywords.setter(v0);
}

void FeedItem.associatedKeywords.setter(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_managedObjectContext);
  if (v3)
  {
    id v4 = v3;
    unint64_t v5 = sub_1C265CA98(a1, v4);
    swift_bridgeObjectRelease();

    sub_1C265BDC4(v5, (void (*)(void))type metadata accessor for Keyword, (void (*)(void))sub_1C265B880, (void (*)(id *, uint64_t))sub_1C2691330);
    swift_bridgeObjectRelease();
    type metadata accessor for Keyword();
    sub_1C265B880();
    uint64_t v6 = (void *)sub_1C277BBB0();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setKeywords_, v6);

    sub_1C2653980();
  }
  else
  {
    sub_1C277C560();
    __break(1u);
  }
}

void (*FeedItem.associatedKeywords.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[3] = v1;
  *a1 = FeedItem.associatedKeywords.getter();
  return sub_1C2655638;
}

void sub_1C2655638(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)a1;
  id v4 = *(void **)(a1 + 24);
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v5 = objc_msgSend(v4, sel_managedObjectContext);
    if (v5)
    {
      uint64_t v6 = *(void **)(a1 + 24);
      id v7 = v5;
      unint64_t v8 = sub_1C265CA98(v3, v7);

      swift_bridgeObjectRelease();
      sub_1C265BDC4(v8, (void (*)(void))type metadata accessor for Keyword, (void (*)(void))sub_1C265B880, (void (*)(id *, uint64_t))sub_1C2691330);
      swift_bridgeObjectRelease();
      type metadata accessor for Keyword();
      sub_1C265B880();
      uint64_t v9 = (void *)sub_1C277BBB0();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setKeywords_, v9);

      sub_1C2653980();
      swift_bridgeObjectRelease();
      return;
    }
LABEL_10:
    sub_1C277C560();
    __break(1u);
    return;
  }
  id v10 = objc_msgSend(*(id *)(a1 + 24), sel_managedObjectContext);
  if (!v10) {
    goto LABEL_10;
  }
  id v11 = *(void **)(a1 + 24);
  id v14 = v10;
  unint64_t v12 = sub_1C265CA98(v3, v14);

  swift_bridgeObjectRelease();
  sub_1C265BDC4(v12, (void (*)(void))type metadata accessor for Keyword, (void (*)(void))sub_1C265B880, (void (*)(id *, uint64_t))sub_1C2691330);
  swift_bridgeObjectRelease();
  type metadata accessor for Keyword();
  sub_1C265B880();
  unint64_t v13 = (void *)sub_1C277BBB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setKeywords_, v13);

  sub_1C2653980();
}

uint64_t FeedItem.associatedProfiles.getter()
{
  uint64_t v31 = type metadata accessor for UserProfile();
  uint64_t v1 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v3 = (char *)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(v0, sel_profiles);
  type metadata accessor for Profile();
  sub_1C2642288();
  uint64_t v5 = sub_1C277BBC0();

  unint64_t v32 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = sub_1C277C1C0();
    if (v6) {
      goto LABEL_3;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_23:
    uint64_t v29 = sub_1C265BF6C(v10);
    swift_bridgeObjectRelease();
    return v29;
  }
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1C2641E88(0, v6 & ~(v6 >> 63), 0);
  if (v32)
  {
    uint64_t result = sub_1C277C160();
    char v9 = 1;
  }
  else
  {
    uint64_t result = sub_1C265B7F8(v5);
    char v9 = v11 & 1;
  }
  uint64_t v34 = result;
  uint64_t v35 = v8;
  char v36 = v9;
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v12 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v5 < 0) {
      uint64_t v12 = v5;
    }
    v30[1] = v12;
    do
    {
      while (1)
      {
        int64_t v19 = v34;
        uint64_t v18 = v35;
        char v20 = v36;
        sub_1C2641FC0(v34, v35, v36, v5, (void (*)(void))type metadata accessor for Profile);
        int64_t v22 = v21;
        unint64_t v23 = (void *)Profile.hkProfileIdentifier.getter();
        id v24 = objc_msgSend(v23, sel_identifier);
        sub_1C277A880();

        *(void *)&v3[*(int *)(v31 + 20)] = v23;
        uint64_t v25 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C2641E88(0, *(void *)(v25 + 16) + 1, 1);
          uint64_t v25 = v37;
        }
        unint64_t v27 = *(void *)(v25 + 16);
        unint64_t v26 = *(void *)(v25 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1C2641E88(v26 > 1, v27 + 1, 1);
          uint64_t v25 = v37;
        }
        *(void *)(v25 + 16) = v27 + 1;
        uint64_t result = sub_1C2644908((uint64_t)v3, v25+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v27, (uint64_t (*)(void))type metadata accessor for UserProfile);
        if (v32) {
          break;
        }
        int64_t v13 = sub_1C26432B0(v19, v18, v20, v5);
        uint64_t v15 = v14;
        char v17 = v16;
        sub_1C26431E8(v19, v18, v20);
        uint64_t v34 = v13;
        uint64_t v35 = v15;
        char v36 = v17 & 1;
        if (!--v6) {
          goto LABEL_22;
        }
      }
      if ((v20 & 1) == 0) {
        goto LABEL_25;
      }
      if (sub_1C277C180()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1C265CE70(0, (unint64_t *)&qword_1EBB850F0, (void (*)(uint64_t))type metadata accessor for Profile, (void (*)(void))sub_1C2642288);
      uint64_t v28 = (void (*)(char *, void))sub_1C277BBF0();
      sub_1C277C230();
      v28(v33, 0);
      --v6;
    }
    while (v6);
LABEL_22:
    sub_1C26431E8(v34, v35, v36);
    swift_bridgeObjectRelease();
    uint64_t v10 = v37;
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void sub_1C2655CD0(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v3, sel_managedObjectContext);
  if (v4)
  {
    id v5 = v4;
    id v6 = sub_1C2642CAC(v2, (uint64_t)v5);

    sub_1C265BDC4((unint64_t)v6, (void (*)(void))type metadata accessor for Profile, (void (*)(void))sub_1C2642288, (void (*)(id *, uint64_t))sub_1C2643394);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for Profile();
    sub_1C2642288();
    id v7 = (void *)sub_1C277BBB0();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setProfiles_, v7);
  }
  else
  {
    sub_1C277C560();
    __break(1u);
  }
}

void FeedItem.associatedProfiles.setter(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_managedObjectContext);
  if (v3)
  {
    id v4 = v3;
    id v5 = sub_1C2642CAC(a1, (uint64_t)v4);

    sub_1C265BDC4((unint64_t)v5, (void (*)(void))type metadata accessor for Profile, (void (*)(void))sub_1C2642288, (void (*)(id *, uint64_t))sub_1C2643394);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for Profile();
    sub_1C2642288();
    id v6 = (void *)sub_1C277BBB0();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setProfiles_, v6);
  }
  else
  {
    sub_1C277C560();
    __break(1u);
  }
}

void (*FeedItem.associatedProfiles.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[3] = v1;
  *a1 = FeedItem.associatedProfiles.getter();
  return sub_1C2655FEC;
}

void sub_1C2655FEC(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)a1;
  id v4 = *(void **)(a1 + 24);
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v5 = objc_msgSend(v4, sel_managedObjectContext);
    if (v5)
    {
      id v6 = *(void **)(a1 + 24);
      id v7 = v5;
      id v8 = sub_1C2642CAC(v3, (uint64_t)v7);

      sub_1C265BDC4((unint64_t)v8, (void (*)(void))type metadata accessor for Profile, (void (*)(void))sub_1C2642288, (void (*)(id *, uint64_t))sub_1C2643394);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for Profile();
      sub_1C2642288();
      char v9 = (void *)sub_1C277BBB0();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setProfiles_, v9);

      swift_bridgeObjectRelease();
      return;
    }
LABEL_10:
    sub_1C277C560();
    __break(1u);
    return;
  }
  id v10 = objc_msgSend(*(id *)(a1 + 24), sel_managedObjectContext);
  if (!v10) {
    goto LABEL_10;
  }
  char v11 = *(void **)(a1 + 24);
  id v14 = v10;
  id v12 = sub_1C2642CAC(v3, (uint64_t)v14);

  sub_1C265BDC4((unint64_t)v12, (void (*)(void))type metadata accessor for Profile, (void (*)(void))sub_1C2642288, (void (*)(id *, uint64_t))sub_1C2643394);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Profile();
  sub_1C2642288();
  int64_t v13 = (void *)sub_1C277BBB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setProfiles_, v13);
}

uint64_t FeedItem.associatedSharableModelReferences.getter()
{
  id v1 = objc_msgSend(v0, sel_sharableModelReferences);
  type metadata accessor for SharableModelReference();
  sub_1C265CE3C();
  uint64_t v2 = sub_1C277BBC0();

  unint64_t v29 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = sub_1C277C1C0();
    if (v3) {
      goto LABEL_3;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
LABEL_21:
    uint64_t v28 = sub_1C265C504(v7);
    swift_bridgeObjectRelease();
    return v28;
  }
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1C2659DE0(0, v3 & ~(v3 >> 63), 0);
  if (v29)
  {
    uint64_t result = sub_1C277C160();
    char v6 = 1;
  }
  else
  {
    uint64_t result = sub_1C265B7F8(v2);
    char v6 = v8 & 1;
  }
  uint64_t v31 = result;
  uint64_t v32 = v5;
  char v33 = v6;
  if ((v3 & 0x8000000000000000) == 0)
  {
    do
    {
      while (1)
      {
        int64_t v15 = v31;
        uint64_t v14 = v32;
        char v16 = v33;
        sub_1C2641FC0(v31, v32, v33, v2, (void (*)(void))type metadata accessor for SharableModelReference);
        uint64_t v18 = v17;
        id v19 = objc_msgSend(v17, sel_identifier);
        uint64_t v20 = sub_1C277B850();
        uint64_t v22 = v21;

        uint64_t v23 = v34;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1C2659DE0(0, *(void *)(v23 + 16) + 1, 1);
          uint64_t v23 = v34;
        }
        unint64_t v25 = *(void *)(v23 + 16);
        unint64_t v24 = *(void *)(v23 + 24);
        if (v25 >= v24 >> 1)
        {
          uint64_t result = sub_1C2659DE0(v24 > 1, v25 + 1, 1);
          uint64_t v23 = v34;
        }
        *(void *)(v23 + 16) = v25 + 1;
        unint64_t v26 = v23 + 16 * v25;
        *(void *)(v26 + 32) = v20;
        *(void *)(v26 + 40) = v22;
        if (v29) {
          break;
        }
        int64_t v9 = sub_1C26432B0(v15, v14, v16, v2);
        uint64_t v11 = v10;
        char v13 = v12;
        sub_1C26431E8(v15, v14, v16);
        uint64_t v31 = v9;
        uint64_t v32 = v11;
        char v33 = v13 & 1;
        if (!--v3) {
          goto LABEL_20;
        }
      }
      if ((v16 & 1) == 0) {
        goto LABEL_23;
      }
      if (sub_1C277C180()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1C265CE70(0, &qword_1EBB85488, (void (*)(uint64_t))type metadata accessor for SharableModelReference, (void (*)(void))sub_1C265CE3C);
      unint64_t v27 = (void (*)(char *, void))sub_1C277BBF0();
      sub_1C277C230();
      v27(v30, 0);
      --v3;
    }
    while (v3);
LABEL_20:
    sub_1C26431E8(v31, v32, v33);
    swift_bridgeObjectRelease();
    uint64_t v7 = v34;
    goto LABEL_21;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

void sub_1C26565C0(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v3, sel_managedObjectContext);
  if (v4)
  {
    id v5 = v4;
    id v6 = v3;
    unint64_t v7 = sub_1C265CEE0(v2, (uint64_t)v5, v6);

    sub_1C265BDC4(v7, (void (*)(void))type metadata accessor for SharableModelReference, (void (*)(void))sub_1C265CE3C, (void (*)(id *, uint64_t))sub_1C2691800);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for SharableModelReference();
    sub_1C265CE3C();
    char v8 = (void *)sub_1C277BBB0();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSharableModelReferences_, v8);
  }
  else
  {
    sub_1C277C560();
    __break(1u);
  }
}

void FeedItem.associatedSharableModelReferences.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v2, sel_managedObjectContext);
  if (v4)
  {
    id v5 = v4;
    id v6 = v2;
    unint64_t v7 = sub_1C265CEE0(a1, (uint64_t)v5, v6);

    sub_1C265BDC4(v7, (void (*)(void))type metadata accessor for SharableModelReference, (void (*)(void))sub_1C265CE3C, (void (*)(id *, uint64_t))sub_1C2691800);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for SharableModelReference();
    sub_1C265CE3C();
    char v8 = (void *)sub_1C277BBB0();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSharableModelReferences_, v8);
  }
  else
  {
    sub_1C277C560();
    __break(1u);
  }
}

void (*FeedItem.associatedSharableModelReferences.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[3] = v1;
  *a1 = FeedItem.associatedSharableModelReferences.getter();
  return sub_1C2656900;
}

void sub_1C2656900(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)a1;
  id v4 = *(void **)(a1 + 24);
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v5 = objc_msgSend(v4, sel_managedObjectContext);
    if (v5)
    {
      id v6 = v5;
      id v7 = *(id *)(a1 + 24);
      id v8 = v6;
      unint64_t v9 = sub_1C265CEE0(v3, (uint64_t)v8, v7);

      sub_1C265BDC4(v9, (void (*)(void))type metadata accessor for SharableModelReference, (void (*)(void))sub_1C265CE3C, (void (*)(id *, uint64_t))sub_1C2691800);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for SharableModelReference();
      sub_1C265CE3C();
      uint64_t v10 = (void *)sub_1C277BBB0();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_setSharableModelReferences_, v10);

      swift_bridgeObjectRelease();
      return;
    }
LABEL_10:
    sub_1C277C560();
    __break(1u);
    return;
  }
  id v11 = objc_msgSend(*(id *)(a1 + 24), sel_managedObjectContext);
  if (!v11) {
    goto LABEL_10;
  }
  char v12 = *(void **)(a1 + 24);
  id v16 = v11;
  id v13 = v12;
  unint64_t v14 = sub_1C265CEE0(v3, (uint64_t)v16, v13);

  sub_1C265BDC4(v14, (void (*)(void))type metadata accessor for SharableModelReference, (void (*)(void))sub_1C265CE3C, (void (*)(id *, uint64_t))sub_1C2691800);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for SharableModelReference();
  sub_1C265CE3C();
  int64_t v15 = (void *)sub_1C277BBB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setSharableModelReferences_, v15);
}

uint64_t sub_1C2656BCC@<X0>(uint64_t a1@<X8>)
{
  return FeedItem.relevantDateInterval.getter(a1);
}

uint64_t sub_1C2656BF0(uint64_t a1)
{
  sub_1C263D4EC(0);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2644754(a1, (uint64_t)v4, (uint64_t (*)(void))sub_1C263D4EC);
  return FeedItem.relevantDateInterval.setter((uint64_t)v4);
}

uint64_t FeedItem.relevantDateInterval.setter(uint64_t a1)
{
  uint64_t v2 = sub_1C277A520();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C263D4EC(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v46 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  unint64_t v14 = (char *)&v46 - v13;
  MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v46 - v15;
  sub_1C26513A4(0);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v46 - v21;
  uint64_t v51 = a1;
  sub_1C2644754(a1, (uint64_t)v16, (uint64_t (*)(void))sub_1C263D4EC);
  uint64_t v23 = type metadata accessor for RelevantDateInterval();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v49 = v24 + 48;
  int v25 = v53(v16, 1, v23);
  uint64_t v47 = v3;
  uint64_t v48 = v2;
  if (v25 == 1)
  {
    sub_1C263FBF4((uint64_t)v16, (uint64_t (*)(void))sub_1C263D4EC);
    uint64_t v26 = sub_1C277A840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v22, 1, 1, v26);
    unint64_t v27 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v16, v2);
    sub_1C263FBF4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for RelevantDateInterval);
    sub_1C277A510();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v28 = sub_1C277A840();
    uint64_t v29 = *(void *)(v28 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v22, 0, 1, v28);
    unint64_t v27 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v22, 1, v28) != 1)
    {
      unint64_t v27 = (void *)sub_1C277A7E0();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v28);
    }
  }
  objc_msgSend(v52, sel_setRelevantStartDate_, v27);

  uint64_t v30 = v51;
  sub_1C2644754(v51, (uint64_t)v14, (uint64_t (*)(void))sub_1C263D4EC);
  if (v53(v14, 1, v23) == 1)
  {
    sub_1C263FBF4((uint64_t)v14, (uint64_t (*)(void))sub_1C263D4EC);
    uint64_t v31 = sub_1C277A840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v20, 1, 1, v31);
    uint64_t v32 = 0;
  }
  else
  {
    uint64_t v34 = v47;
    uint64_t v33 = v48;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v5, v14, v48);
    sub_1C263FBF4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for RelevantDateInterval);
    sub_1C277A4F0();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v33);
    uint64_t v35 = sub_1C277A840();
    uint64_t v36 = *(void *)(v35 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v20, 0, 1, v35);
    uint64_t v32 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v20, 1, v35) != 1)
    {
      uint64_t v32 = (void *)sub_1C277A7E0();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v35);
    }
  }
  id v37 = v52;
  objc_msgSend(v52, sel_setRelevantEndDate_, v32);

  sub_1C2644754(v30, (uint64_t)v11, (uint64_t (*)(void))sub_1C263D4EC);
  int v38 = v53(v11, 1, v23);
  double v39 = 0.0;
  uint64_t v40 = (uint64_t (*)(void))sub_1C263D4EC;
  if (v38 == 1)
  {
    double v41 = 0.0;
  }
  else
  {
    double v41 = *(double *)&v11[*(int *)(v23 + 20)];
    uint64_t v40 = (uint64_t (*)(void))type metadata accessor for RelevantDateInterval;
  }
  uint64_t v42 = (uint64_t)v50;
  sub_1C263FBF4((uint64_t)v11, v40);
  objc_msgSend(v37, sel_setRelevantRampUpTime_, v41);
  sub_1C2644754(v30, v42, (uint64_t (*)(void))sub_1C263D4EC);
  int v43 = v53((char *)v42, 1, v23);
  uint64_t v44 = (uint64_t (*)(void))sub_1C263D4EC;
  if (v43 != 1)
  {
    double v39 = *(double *)(v42 + *(int *)(v23 + 24));
    uint64_t v44 = (uint64_t (*)(void))type metadata accessor for RelevantDateInterval;
  }
  sub_1C263FBF4(v42, v44);
  objc_msgSend(v37, sel_setRelevantRampDownTime_, v39);
  return sub_1C263FBF4(v30, (uint64_t (*)(void))sub_1C263D4EC);
}

void (*FeedItem.relevantDateInterval.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  sub_1C263D4EC(0);
  size_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  a1[1] = malloc(v4);
  id v5 = malloc(v4);
  a1[2] = v5;
  FeedItem.relevantDateInterval.getter((uint64_t)v5);
  return sub_1C2657410;
}

void sub_1C2657410(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  if (a2)
  {
    sub_1C2644754(*(void *)(a1 + 16), (uint64_t)v2, (uint64_t (*)(void))sub_1C263D4EC);
    FeedItem.relevantDateInterval.setter((uint64_t)v2);
    sub_1C263FBF4((uint64_t)v3, (uint64_t (*)(void))sub_1C263D4EC);
  }
  else
  {
    FeedItem.relevantDateInterval.setter(*(void *)(a1 + 16));
  }
  free(v3);

  free(v2);
}

void FeedItem.userInterface.setter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  size_t v4 = v3;
  uint64_t v8 = &selRef_setStoryboardIdentifier_;
  objc_msgSend(v4, sel_setStoryboardIdentifier_, 0);
  objc_msgSend(v4, sel_setViewClassName_, 0);
  objc_msgSend(v4, sel_setViewControllerClassName_, 0);
  objc_msgSend(v4, sel_setHostingControllerClassName_, 0);
  switch(a3)
  {
    case 1u:
      uint64_t v8 = &selRef_setViewControllerClassName_;
      goto LABEL_7;
    case 2u:
      uint64_t v8 = &selRef_setViewClassName_;
      goto LABEL_7;
    case 3u:
      uint64_t v8 = &selRef_setHostingControllerClassName_;
      goto LABEL_7;
    case 4u:
      uint64_t v8 = &selRef_setContentConfigurationProviderClassName_;
      goto LABEL_7;
    case 5u:
      uint64_t v8 = &selRef_setListContentConfigurationProviderClassName_;
      goto LABEL_7;
    case 6u:
      return;
    default:
LABEL_7:
      id v9 = (id)sub_1C277B820();
      objc_msgSend(v4, *v8, v9);
      sub_1C263CCDC(a1, a2, a3);

      return;
  }
}

void (*FeedItem.userInterface.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  *(void *)a1 = FeedItem.userInterface.getter();
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1C2657664;
}

void sub_1C2657664(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 16);
  if (a2)
  {
    sub_1C263D4D4(*(void *)a1, v3, v4);
    FeedItem.userInterface.setter(v2, v3, v4);
    sub_1C263CCDC(v2, v3, v4);
  }
  else
  {
    FeedItem.userInterface.setter(*(void *)a1, v3, v4);
  }
}

Swift::String_optional __swiftcall FeedItem.displayTitle(in:)(HKHealthStore in)
{
  id v3 = objc_msgSend(v1, sel_dataTypes);
  type metadata accessor for DataType();
  sub_1C265B8B4();
  uint64_t v4 = sub_1C277BBC0();

  sub_1C2654BD8(v4);
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1C2644A64(v6, (unint64_t *)&qword_1EBB85E80, 0x1E4F2B2C0, (unint64_t *)&qword_1EBB84498, (void (*)(id *, uint64_t))sub_1C2644BF8);
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_1C2657BB0(v7, (unint64_t *)&qword_1EBB85E80);
  swift_bridgeObjectRelease();
  if (v8)
  {
    id v9 = [(objc_class *)in.super.isa displayTypeController];
    if (v9)
    {
      id v11 = v9;
      id v12 = objc_msgSend(v9, sel_displayTypeForObjectType_, v8);

      if (v12)
      {
        id v13 = objc_msgSend(v12, sel_localization);

        id v14 = objc_msgSend(v13, sel_displayName);
        uint64_t v15 = sub_1C277B850();
        unint64_t v17 = v16;

        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  id v18 = objc_msgSend(v1, sel_localizedTitle);
  if (!v18)
  {
    if (qword_1EBB85990 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1C277B130();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EBB85970);
    id v20 = v1;
    uint64_t v21 = sub_1C277B100();
    os_log_type_t v22 = sub_1C277BD20();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v33 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      id v25 = v20;
      id v26 = objc_msgSend(v25, sel_description);
      uint64_t v27 = sub_1C277B850();
      unint64_t v29 = v28;

      sub_1C263FDFC(v27, v29, &v33);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v21, v22, "This is probably a bug and should not happen. The description is %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v24, -1, -1);
      MEMORY[0x1C875D230](v23, -1, -1);
    }
    else
    {
    }
    if (!objc_msgSend(self, sel_isAppleInternalInstall))
    {
      uint64_t v15 = 0;
      unint64_t v17 = 0xE000000000000000;
      goto LABEL_14;
    }
    id v18 = objc_msgSend(v20, sel_description);
  }
  uint64_t v30 = v18;
  uint64_t v15 = sub_1C277B850();
  unint64_t v17 = v31;

LABEL_14:
  id v9 = (id)v15;
  uint64_t v10 = (void *)v17;
LABEL_18:
  result.value._object = v10;
  result.value._uint64_t countAndFlagsBits = (uint64_t)v9;
  return result;
}

uint64_t sub_1C2657AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1C2643C24(a1);
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v7 = type metadata accessor for UserProfile();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  else
  {
    sub_1C265B744(result, v5, a1, a2);
    uint64_t v12 = type metadata accessor for UserProfile();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t sub_1C2657B9C(uint64_t a1)
{
  return sub_1C2657BB0(a1, &qword_1EBB80DB0);
}

uint64_t sub_1C2657BB0(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = sub_1C277C160();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C277C220();
    char v10 = MEMORY[0x1C875C0A0](v5, v7, v8, v9);
    swift_bridgeObjectRelease();
    if (v10)
    {
LABEL_3:
      sub_1C26431E8(v5, v7, v4 != 0);
      return 0;
    }
LABEL_7:
    sub_1C265B4D4(v5, v7, v4 != 0, a1, a2);
    uint64_t v11 = v15;
    sub_1C26431E8(v5, v7, v4 != 0);
    return v11;
  }
  uint64_t result = sub_1C265B7F8(a1);
  if ((v14 & 1) == 0)
  {
    uint64_t v7 = v13;
    if (*(_DWORD *)(a1 + 36) == v13)
    {
      uint64_t v5 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1C2657CD8(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (id)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setHostViewStyleRawValue_, v3);
}

void FeedItem.hostViewStyle.setter()
{
  id v1 = (id)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setHostViewStyleRawValue_, v1);
}

void (*FeedItem.hostViewStyle.modify(uint64_t a1))(void **a1)
{
  *(void *)a1 = v1;
  FeedItem.hostViewStyle.getter((char *)(a1 + 8));
  return sub_1C2657E58;
}

void sub_1C2657E58(void **a1)
{
  uint64_t v1 = *a1;
  id v2 = (id)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setHostViewStyleRawValue_, v2);
}

uint64_t FeedItem.__allocating_init(context:uniqueIdentifier:userInterface:pluginPackage:userData:dateSubmitted:relevantDateRange:contentKind:searchSectionHint:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, void *a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 *a13, unsigned __int8 a14)
{
  uint64_t v15 = v14;
  id v72 = a7;
  int v66 = a6;
  uint64_t v64 = a4;
  uint64_t v65 = a5;
  uint64_t v63 = a2;
  uint64_t v17 = type metadata accessor for RelevantDateInterval();
  uint64_t v61 = *(void *)(v17 - 8);
  uint64_t v62 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v58 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C263D4EC(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v60 = (uint64_t)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C265D068(0);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  char v59 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  id v25 = (char *)&v57 - v24;
  uint64_t v26 = sub_1C277A520();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v68 = (char *)&v57 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v69 = *a13;
  unint64_t v29 = self;
  uint64_t v30 = (void *)sub_1C277B820();
  id v31 = objc_msgSend(v29, sel_entityForName_inManagedObjectContext_, v30, a1);

  if (v31)
  {
    uint64_t v73 = a12;
    uint64_t v74 = a11;
    id v32 = objc_allocWithZone(v15);
    id v70 = v31;
    id v33 = objc_msgSend(v32, sel_initWithEntity_insertIntoManagedObjectContext_, v31, a1);
    uint64_t v34 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_setUniqueIdentifier_, v34);

    FeedItem.userInterface.setter(v64, v65, v66);
    uint64_t v35 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_setPluginPackage_, v35);

    uint64_t v71 = a9;
    unint64_t v67 = a10;
    if (a10 >> 60 == 15)
    {
      uint64_t v36 = 0;
    }
    else
    {
      sub_1C263D360(a9, a10);
      uint64_t v36 = (void *)sub_1C277A770();
      sub_1C2641B58(a9, a10);
    }
    id v72 = a1;
    objc_msgSend(v33, sel_setUserData_, v36);

    id v37 = (void *)sub_1C277A7E0();
    objc_msgSend(v33, sel_setDateSubmitted_, v37);

    sub_1C2644754(v73, (uint64_t)v25, (uint64_t (*)(void))sub_1C265D068);
    int v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    if (v38((uint64_t)v25, 1, v26) == 1)
    {
      sub_1C263FBF4((uint64_t)v25, (uint64_t (*)(void))sub_1C265D068);
      uint64_t v40 = v70;
      uint64_t v39 = v71;
      char v41 = v69;
    }
    else
    {
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
      int v43 = v68;
      v42(v68, v25, v26);
      uint64_t v44 = (uint64_t)v59;
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v59, v43, v26);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v44, 0, 1, v26);
      if (v38(v44, 1, v26) == 1)
      {
        sub_1C263FBF4(v44, (uint64_t (*)(void))sub_1C265D068);
        uint64_t v45 = 1;
        uint64_t v46 = v61;
        uint64_t v47 = v62;
        uint64_t v40 = v70;
        uint64_t v39 = v71;
        uint64_t v48 = v60;
      }
      else
      {
        uint64_t v49 = v58;
        v42(v58, (char *)v44, v26);
        uint64_t v47 = v62;
        *(void *)&v49[*(int *)(v62 + 20)] = 0;
        *(void *)&v49[*(int *)(v47 + 24)] = 0;
        uint64_t v50 = (uint64_t)v49;
        uint64_t v48 = v60;
        sub_1C2644908(v50, v60, (uint64_t (*)(void))type metadata accessor for RelevantDateInterval);
        uint64_t v45 = 0;
        uint64_t v46 = v61;
        uint64_t v40 = v70;
        uint64_t v39 = v71;
      }
      char v41 = v69;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v48, v45, 1, v47);
      FeedItem.relevantDateInterval.setter(v48);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v68, v26);
    }
    char v75 = v41;
    ContentKind.rawValue.getter();
    uint64_t v51 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_setContentKindRawValue_, v51);

    sub_1C2653980();
    if (a14 == 13) {
      uint64_t v52 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v52 = a14;
    }
    objc_msgSend(v33, sel_setSearchSectionHintRawValue_, v52);
    sub_1C2653980();
    uint64_t v53 = (void *)sub_1C277B820();
    objc_msgSend(v33, sel_setFavoriteStatusRawValue_, v53);

    char v54 = (void *)sub_1C277B820();
    objc_msgSend(v33, sel_setHostViewStyleRawValue_, v54);

    sub_1C2641B58(v39, v67);
    sub_1C263FBF4(v73, (uint64_t (*)(void))sub_1C265D068);
    uint64_t v55 = sub_1C277A840();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v74, v55);
    return (uint64_t)v33;
  }
  else
  {
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

uint64_t FeedItem.addFeatureTag<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_getDynamicType();
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 16))(a2);
  uint64_t v11 = v10;
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a2, a4);
  unint64_t v14 = v13;
  id v15 = objc_msgSend(v5, sel_managedObjectContext);
  if (v15)
  {
    unint64_t v16 = v15;
    _s14HealthPlatform8FeedItemC9removeTag4nameySS_tF_0(v9, v11);
    type metadata accessor for EncodedFeatureTag();
    id v17 = v16;
    swift_bridgeObjectRetain();
    sub_1C263D360(v12, v14);
    uint64_t v18 = (void *)EncodedFeatureTag.__allocating_init(context:name:data:)(v17, v9, v11, v12, v14);
    objc_msgSend(v5, sel_addFeatureTagsObject_, v18);

    sub_1C263CC84(v12, v14);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

void FeedItem.addFeatureTag(name:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id v9 = objc_msgSend(v4, sel_managedObjectContext);
  if (v9)
  {
    uint64_t v10 = v9;
    _s14HealthPlatform8FeedItemC9removeTag4nameySS_tF_0(a1, a2);
    type metadata accessor for EncodedFeatureTag();
    id v11 = v10;
    swift_bridgeObjectRetain();
    sub_1C263D360(a3, a4);
    id v12 = (id)EncodedFeatureTag.__allocating_init(context:name:data:)(v11, a1, a2, a3, a4);
    objc_msgSend(v4, sel_addFeatureTagsObject_, v12);
  }
  else
  {
    sub_1C277C560();
    __break(1u);
  }
}

uint64_t FeedItem.featureTag<A>(kind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  id v12 = objc_msgSend(v6, sel_featureTags);
  type metadata accessor for EncodedFeatureTag();
  sub_1C26424F4(&qword_1EBB853A8, (void (*)(uint64_t))type metadata accessor for EncodedFeatureTag);
  uint64_t v13 = sub_1C277BBC0();

  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = a1;
  uint64_t v14 = 0;
  sub_1C2658B28(sub_1C265D09C, (uint64_t)v18, v13);
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    (*(void (**)(void *, uint64_t, uint64_t))(a3 + 16))(v16, a2, a3);
  }
  else
  {
    uint64_t v14 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a5, v14, 1, a2);
}

uint64_t sub_1C2658A48(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_msgSend(*a1, sel_name);
  uint64_t v7 = sub_1C277B850();
  uint64_t v9 = v8;

  if (v7 == (*(uint64_t (**)(uint64_t))(*(void *)(a4 + 8) + 16))(a3) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1C277C7E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

void sub_1C2658B28(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C277C170();
    type metadata accessor for EncodedFeatureTag();
    sub_1C26424F4(&qword_1EBB853A8, (void (*)(uint64_t))type metadata accessor for EncodedFeatureTag);
    sub_1C277BC10();
    uint64_t v5 = v24;
    uint64_t v23 = v25;
    uint64_t v7 = v26;
    int64_t v8 = v27;
    unint64_t v9 = v28;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v23 = a3 + 56;
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = v11;
    int64_t v8 = 0;
  }
  int64_t v22 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!sub_1C277C200()) {
    goto LABEL_36;
  }
  type metadata accessor for EncodedFeatureTag();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v14 = v29;
  swift_unknownObjectRelease();
  int64_t v15 = v8;
  uint64_t v16 = v9;
  if (!v14) {
    goto LABEL_36;
  }
  while (1)
  {
    id v29 = v14;
    char v20 = a1(&v29);
    if (v4)
    {

      goto LABEL_36;
    }
    if (v20) {
      goto LABEL_36;
    }

    int64_t v8 = v15;
    unint64_t v9 = v16;
    if (v5 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v9) {
      break;
    }
    uint64_t v16 = (v9 - 1) & v9;
    unint64_t v17 = __clz(__rbit64(v9)) | (v8 << 6);
    int64_t v15 = v8;
LABEL_24:
    id v14 = *(id *)(*(void *)(v5 + 48) + 8 * v17);
    if (!v14) {
      goto LABEL_36;
    }
  }
  int64_t v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v15 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v15);
  if (v18)
  {
LABEL_23:
    uint64_t v16 = (v18 - 1) & v18;
    unint64_t v17 = __clz(__rbit64(v18)) + (v15 << 6);
    goto LABEL_24;
  }
  int64_t v19 = v8 + 2;
  if (v8 + 2 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18) {
    goto LABEL_22;
  }
  int64_t v19 = v8 + 3;
  if (v8 + 3 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18) {
    goto LABEL_22;
  }
  int64_t v19 = v8 + 4;
  if (v8 + 4 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18)
  {
LABEL_22:
    int64_t v15 = v19;
    goto LABEL_23;
  }
  int64_t v15 = v8 + 5;
  if (v8 + 5 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v15);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v21 = v8 + 6;
  while (v22 != v21)
  {
    unint64_t v18 = *(void *)(v23 + 8 * v21++);
    if (v18)
    {
      int64_t v15 = v21 - 1;
      goto LABEL_23;
    }
  }
LABEL_36:
  sub_1C2648F6C();
}

void _s14HealthPlatform8FeedItemC9removeTag4nameySS_tF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v13 = objc_msgSend(v3, sel_managedObjectContext);
  if (v13)
  {
    id v6 = objc_msgSend(v3, sel_featureTags);
    type metadata accessor for EncodedFeatureTag();
    sub_1C26424F4(&qword_1EBB853A8, (void (*)(uint64_t))type metadata accessor for EncodedFeatureTag);
    uint64_t v7 = sub_1C277BBC0();

    swift_bridgeObjectRetain();
    sub_1C26E78A4(v7, a1, a2);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v13;
    if (v9)
    {
      id v11 = objc_msgSend(v3, sel_featureTags);
      sub_1C277BBC0();

      uint64_t v12 = (void *)sub_1C277BBB0();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setFeatureTags_, v12);

      objc_msgSend(v13, sel_deleteObject_, v9);
      uint64_t v10 = v13;
    }
  }
  else
  {
    sub_1C277C560();
    __break(1u);
  }
}

uint64_t FeedItem.numberOfTags.getter()
{
  id v1 = objc_msgSend(v0, sel_featureTags);
  type metadata accessor for EncodedFeatureTag();
  sub_1C26424F4(&qword_1EBB853A8, (void (*)(uint64_t))type metadata accessor for EncodedFeatureTag);
  uint64_t v2 = sub_1C277BBC0();

  if ((v2 & 0xC000000000000001) != 0) {
    uint64_t v3 = sub_1C277C1C0();
  }
  else {
    uint64_t v3 = *(void *)(v2 + 16);
  }
  swift_bridgeObjectRelease();
  return v3;
}

Swift::Void __swiftcall FeedItem.removeAllTags()()
{
  id v1 = objc_msgSend(v0, sel_managedObjectContext);
  if (!v1) {
    goto LABEL_33;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v0, sel_featureTags);
  type metadata accessor for EncodedFeatureTag();
  sub_1C26424F4(&qword_1EBB853A8, (void (*)(uint64_t))type metadata accessor for EncodedFeatureTag);
  uint64_t v4 = sub_1C277BBC0();

  id v21 = v0;
  if ((v4 & 0xC000000000000001) != 0)
  {
    sub_1C277C170();
    sub_1C277BC10();
    uint64_t v4 = v24;
    uint64_t v22 = v25;
    uint64_t v5 = v26;
    uint64_t v6 = v27;
    unint64_t v7 = v28;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = -1 << *(unsigned char *)(v4 + 32);
    uint64_t v22 = v4 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v4 + 56);
  }
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  if (v4 < 0) {
    goto LABEL_11;
  }
  while (1)
  {
    if (v7)
    {
      uint64_t v12 = (v7 - 1) & v7;
      unint64_t v13 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v14 = v6;
      goto LABEL_28;
    }
    int64_t v16 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v16 >= v11) {
      goto LABEL_31;
    }
    unint64_t v17 = *(void *)(v22 + 8 * v16);
    uint64_t v14 = v6 + 1;
    if (!v17)
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_31;
      }
      unint64_t v17 = *(void *)(v22 + 8 * v14);
      if (!v17)
      {
        uint64_t v14 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_31;
        }
        unint64_t v17 = *(void *)(v22 + 8 * v14);
        if (!v17)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_31;
          }
          unint64_t v17 = *(void *)(v22 + 8 * v14);
          if (!v17)
          {
            uint64_t v18 = v6 + 5;
            while (v11 != v18)
            {
              unint64_t v17 = *(void *)(v22 + 8 * v18++);
              if (v17)
              {
                uint64_t v14 = v18 - 1;
                goto LABEL_27;
              }
            }
LABEL_31:
            sub_1C2648F6C();
            int64_t v19 = (void *)sub_1C277B820();
            id v20 = objc_msgSend(v21, sel_mutableSetValueForKeyPath_, v19);

            objc_msgSend(v20, sel_removeAllObjects);
            return;
          }
        }
      }
    }
LABEL_27:
    uint64_t v12 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v14 << 6);
LABEL_28:
    id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    if (!v15) {
      goto LABEL_31;
    }
    while (1)
    {
      objc_msgSend(v2, sel_deleteObject_, v15);

      uint64_t v6 = v14;
      unint64_t v7 = v12;
      if ((v4 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_11:
      if (sub_1C277C200())
      {
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v15 = v23;
        swift_unknownObjectRelease();
        uint64_t v14 = v6;
        uint64_t v12 = v7;
        if (v23) {
          continue;
        }
      }
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_33:
  sub_1C277C560();
  __break(1u);
}

uint64_t static FeedItem.FeedItemCreationError.== infix(_:_:)()
{
  return 1;
}

uint64_t FeedItem.FeedItemCreationError.hash(into:)()
{
  return sub_1C277C8D0();
}

uint64_t FeedItem.FeedItemCreationError.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t sub_1C265951C()
{
  return sub_1C277C910();
}

uint64_t sub_1C2659560()
{
  return sub_1C277C8D0();
}

uint64_t sub_1C2659588()
{
  return sub_1C277C910();
}

uint64_t static FeedItem.existingFeedItem(with:in:)(uint64_t a1, id a2)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  v9[0] = 0;
  id v3 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v9);
  id v4 = v9[0];
  if (!v3)
  {
    id v7 = v9[0];
    sub_1C277A620();

    goto LABEL_5;
  }
  uint64_t v5 = v3;
  type metadata accessor for FeedItem();
  uint64_t v2 = swift_dynamicCastClass();
  id v6 = v4;
  if (!v2)
  {

    sub_1C265D0C0();
    swift_allocError();
LABEL_5:
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1C26596D8(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (2)
  {
    uint64_t v6 = a2 + v5++;
    unint64_t v7 = 0xD000000000000011;
    unint64_t v8 = 0x80000001C2788B70;
    switch(*(unsigned char *)(v6 + 32))
    {
      case 1:
        unint64_t v8 = 0xE500000000000000;
        unint64_t v7 = 0x7472656C61;
        break;
      case 2:
        unint64_t v8 = 0xE300000000000000;
        unint64_t v7 = 7368801;
        break;
      case 3:
        unint64_t v8 = 0xE700000000000000;
        unint64_t v7 = 0x656C6369747261;
        break;
      case 4:
        unint64_t v8 = 0xE800000000000000;
        unint64_t v7 = 0x79726F6765746163;
        break;
      case 5:
        unint64_t v8 = 0xE400000000000000;
        unint64_t v7 = 1635017060;
        break;
      case 6:
        unint64_t v7 = 0x6D6D755361746164;
        unint64_t v8 = 0xEB00000000797261;
        break;
      case 7:
        uint64_t v9 = "cle";
        goto LABEL_12;
      case 8:
        uint64_t v9 = "dataSummaryAlert";
LABEL_12:
        unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
        goto LABEL_14;
      case 9:
        unint64_t v8 = 0x80000001C2788BF0;
LABEL_14:
        unint64_t v7 = 0xD000000000000010;
        break;
      case 0xA:
        unint64_t v7 = 0x5365727574616566;
        unint64_t v8 = 0xED00007375746174;
        break;
      case 0xB:
        unint64_t v8 = 0xE900000000000074;
        goto LABEL_18;
      case 0xC:
        unint64_t v8 = 0xEF68637261655374;
LABEL_18:
        unint64_t v7 = 0x6867696C68676968;
        break;
      case 0xD:
        unint64_t v7 = 0x697461676976616ELL;
        unint64_t v8 = 0xEA00000000006E6FLL;
        break;
      case 0xE:
        unint64_t v8 = 0xE600000000000000;
        unint64_t v7 = 0x617461446F6ELL;
        break;
      case 0xF:
        unint64_t v8 = 0xE500000000000000;
        unint64_t v7 = 0x726568746FLL;
        break;
      case 0x10:
        unint64_t v7 = 0x6D726F6674616C70;
        unint64_t v8 = 0xED00007472656C41;
        break;
      case 0x11:
        unint64_t v7 = 0x6F69746F6D6F7270;
        unint64_t v8 = 0xE90000000000006ELL;
        break;
      case 0x12:
        unint64_t v8 = 0xE600000000000000;
        unint64_t v7 = 0x74706D6F7270;
        break;
      case 0x13:
        unint64_t v8 = 0xE700000000000000;
        unint64_t v7 = 0x656C69666F7270;
        break;
      case 0x14:
        unint64_t v7 = 0x6E6F6974616C6572;
        unint64_t v8 = 0xEC00000070696873;
        break;
      case 0x15:
        unint64_t v8 = 0xE800000000000000;
        unint64_t v7 = 0x73676E6974746573;
        break;
      case 0x16:
        unint64_t v8 = 0xE600000000000000;
        unint64_t v7 = 0x657461647075;
        break;
      case 0x17:
        unint64_t v8 = 0xE700000000000000;
        unint64_t v7 = 0x72616265646973;
        break;
      default:
        break;
    }
    unint64_t v10 = 0xD000000000000011;
    unint64_t v11 = 0x80000001C2788B70;
    switch(a1)
    {
      case 1:
        unint64_t v11 = 0xE500000000000000;
        if (v7 == 0x7472656C61) {
          goto LABEL_75;
        }
        goto LABEL_76;
      case 2:
        unint64_t v11 = 0xE300000000000000;
        if (v7 != 7368801) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 3:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x6C6369747261;
        goto LABEL_67;
      case 4:
        unint64_t v11 = 0xE800000000000000;
        if (v7 != 0x79726F6765746163) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 5:
        unint64_t v11 = 0xE400000000000000;
        if (v7 != 1635017060) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 6:
        unint64_t v11 = 0xEB00000000797261;
        if (v7 != 0x6D6D755361746164) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 7:
        unint64_t v13 = "cle";
        goto LABEL_44;
      case 8:
        unint64_t v13 = "dataSummaryAlert";
LABEL_44:
        unint64_t v11 = (unint64_t)v13 | 0x8000000000000000;
        goto LABEL_46;
      case 9:
        unint64_t v11 = 0x80000001C2788BF0;
LABEL_46:
        if (v7 != 0xD000000000000010) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 10:
        uint64_t v14 = 0x5365727574616566;
        uint64_t v15 = 0x7375746174;
        goto LABEL_60;
      case 11:
        unint64_t v11 = 0xE900000000000074;
        goto LABEL_51;
      case 12:
        unint64_t v11 = 0xEF68637261655374;
LABEL_51:
        if (v7 != 0x6867696C68676968) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 13:
        unint64_t v11 = 0xEA00000000006E6FLL;
        if (v7 != 0x697461676976616ELL) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 14:
        unint64_t v11 = 0xE600000000000000;
        if (v7 != 0x617461446F6ELL) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 15:
        unint64_t v11 = 0xE500000000000000;
        if (v7 != 0x726568746FLL) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 16:
        uint64_t v14 = 0x6D726F6674616C70;
        uint64_t v15 = 0x7472656C41;
LABEL_60:
        unint64_t v11 = v15 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
        if (v7 != v14) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 17:
        unint64_t v11 = 0xE90000000000006ELL;
        if (v7 != 0x6F69746F6D6F7270) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 18:
        unint64_t v11 = 0xE600000000000000;
        if (v7 != 0x74706D6F7270) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 19:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x6C69666F7270;
LABEL_67:
        if (v7 != (v12 & 0xFFFFFFFFFFFFLL | 0x65000000000000)) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 20:
        unint64_t v11 = 0xEC00000070696873;
        if (v7 != 0x6E6F6974616C6572) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 21:
        unint64_t v11 = 0xE800000000000000;
        if (v7 != 0x73676E6974746573) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 22:
        unint64_t v11 = 0xE600000000000000;
        unint64_t v10 = 0x657461647075;
        goto LABEL_74;
      case 23:
        unint64_t v11 = 0xE700000000000000;
        if (v7 != 0x72616265646973) {
          goto LABEL_76;
        }
        goto LABEL_75;
      default:
LABEL_74:
        if (v7 != v10) {
          goto LABEL_76;
        }
LABEL_75:
        if (v8 == v11)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 1;
        }
LABEL_76:
        char v16 = sub_1C277C7E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
        {
          if (v2 == v5)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        return 1;
    }
  }
}

uint64_t sub_1C2659DB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C26492BC(a1, a2, a3, *v3, &qword_1EBB83158, (uint64_t)&type metadata for Feed.Kind);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C2659DE0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C265A158(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C2659E00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C265A2E4(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C2659E20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C265A470(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1C2659E40(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C265A624(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C2659E60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C263C1D0(a1, a2, a3, (void *)*v3, sub_1C265D87C, (uint64_t (*)(void))sub_1C265D8B0);
  *id v3 = result;
  return result;
}

uint64_t sub_1C2659EA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C263C1D0(a1, a2, a3, (void *)*v3, sub_1C265D700, type metadata accessor for UnprotectedNotificationContentState);
  *id v3 = result;
  return result;
}

uint64_t sub_1C2659EF0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C263C1D0(a1, a2, a3, (void *)*v3, sub_1C265D734, MEMORY[0x1E4F27990]);
  *id v3 = result;
  return result;
}

uint64_t sub_1C2659F38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C263C1D0(a1, a2, a3, (void *)*v3, sub_1C265D768, type metadata accessor for ProtectedNotificationContentState);
  *id v3 = result;
  return result;
}

uint64_t sub_1C2659F80(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C263C1D0(a1, a2, a3, (void *)*v3, sub_1C265D6CC, MEMORY[0x1E4F27928]);
  *id v3 = result;
  return result;
}

uint64_t sub_1C2659FC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C263C1D0(a1, a2, a3, (void *)*v3, sub_1C265D644, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  *id v3 = result;
  return result;
}

uint64_t sub_1C265A010(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C265A7B0(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1C265A030(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C265A97C(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C265A050(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C265AB28(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C265A070(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C265ACB4(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C265A090(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C263C1D0(a1, a2, a3, (void *)*v3, sub_1C265D610, (uint64_t (*)(void))type metadata accessor for PluginSharableModel);
  *id v3 = result;
  return result;
}

uint64_t sub_1C265A0D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C265AE5C(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1C265A0F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C265B010(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C265A118(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C265B19C(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C265A138(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C265B31C(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1C265A158(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C26488D8(0, &qword_1EBB854B0, (uint64_t)&type metadata for PluginFeedItem.SharableModelReference, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C265A2E4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C26488D8(0, &qword_1EA3042C8, (uint64_t)&type metadata for CachingSharedSummaryTransactionBuilder.SummaryIdentifier, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C265A470(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C263D3B8(0, &qword_1EBB831C8, (uint64_t (*)(uint64_t))sub_1C264DE8C, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1C264DE8C();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C265A624(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C263D3B8(0, &qword_1EBB831B0, (uint64_t (*)(uint64_t))sub_1C265D5A8, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C265A7B0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C26431F4(0, &qword_1EA304298, (unint64_t *)&qword_1EA3044C0);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_1C2621120(0, (unint64_t *)&qword_1EA3044C0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C265A97C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C26488D8(0, &qword_1EA304270, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C265AB28(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C26488D8(0, &qword_1EA304290, (uint64_t)&type metadata for SourceProfile, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C265ACB4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C26488D8(0, &qword_1EBB85948, (uint64_t)&type metadata for ContentKind.Group, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C265AE5C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C26431F4(0, &qword_1EBB83170, &qword_1EBB829D0);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1C2621120(0, &qword_1EBB829D0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C265B010(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C263D3B8(0, &qword_1EBB831C0, (uint64_t (*)(uint64_t))sub_1C265D540, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C265B19C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C26488D8(0, &qword_1EA304288, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C265B31C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C263D3B8(0, &qword_1EA304278, (uint64_t (*)(uint64_t))sub_1C265D50C, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1C265D50C(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

void sub_1C265B4D4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v8 = a4;
      }
      else {
        uint64_t v8 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x1C875C0F0](a1, a2, v8);
      sub_1C2644ED8(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_1C277C1A0() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1C277C1B0();
  sub_1C2644ED8(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v18;
  swift_unknownObjectRelease();
  uint64_t v9 = sub_1C277C020();
  uint64_t v10 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v9 & ~v10;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v11 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v12 = sub_1C277C030();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v10;
    do
    {
      unint64_t v7 = (v7 + 1) & v13;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_26;
      }
      id v14 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v15 = sub_1C277C030();
    }
    while ((v15 & 1) == 0);
  }

LABEL_20:
  char v16 = *(void **)(*(void *)(a4 + 48) + 8 * v7);

  id v17 = v16;
}

uint64_t sub_1C265B744@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || (uint64_t v4 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    uint64_t v6 = *(void *)(a3 + 48);
    uint64_t v7 = type metadata accessor for UserProfile();
    return sub_1C2644754(v6 + *(void *)(*(void *)(v7 - 8) + 72) * v4, a4, (uint64_t (*)(void))type metadata accessor for UserProfile);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1C265B7F8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1C265B880()
{
  return sub_1C26424F4(&qword_1EBB853D0, (void (*)(uint64_t))type metadata accessor for Keyword);
}

uint64_t sub_1C265B8B4()
{
  return sub_1C26424F4((unint64_t *)&unk_1EBB85090, (void (*)(uint64_t))type metadata accessor for DataType);
}

uint64_t sub_1C265B8E8(uint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  unint64_t v31 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_1C277C1C0();
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v4) {
      return result;
    }
    uint64_t v36 = MEMORY[0x1E4FBC860];
    sub_1C277C3C0();
    uint64_t v33 = sub_1C277C160();
    uint64_t v34 = v6;
    char v35 = 1;
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
    __break(1u);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (!v4) {
    return result;
  }
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_1C277C3C0();
  uint64_t v33 = sub_1C265B7F8(v3);
  uint64_t v34 = v7;
  char v35 = v8 & 1;
LABEL_7:
  type metadata accessor for DataType();
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  uint64_t v9 = a2;
  while (1)
  {
    uint64_t v18 = v3;
    sub_1C265B4D4(v33, v34, v35, v3, (unint64_t *)&qword_1EBB85E80);
    id v20 = v19;
    id v21 = objc_msgSend(v19, sel_code);
    sub_1C26431F4(0, (unint64_t *)&qword_1EBB854B8, (unint64_t *)&qword_1EBB85F40);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C277E470;
    *(void *)(v22 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v22 + 64) = MEMORY[0x1E4FBB5C8];
    *(void *)(v22 + 32) = v21;
    *(void *)(v22 + 96) = MEMORY[0x1E4FBB1A0];
    *(void *)(v22 + 104) = sub_1C263226C();
    *(void *)(v22 + 72) = 0x77615265646F63;
    *(void *)(v22 + 80) = 0xE700000000000000;
    uint64_t v23 = (void *)sub_1C277BCC0();
    unint64_t v24 = sub_1C2669680(v9, (uint64_t)v23, 1);
    if (v2) {
      break;
    }
    uint64_t v25 = (void *)v24;
    if (v24)
    {
    }
    else
    {
      uint64_t v26 = self;
      uint64_t v27 = (void *)sub_1C277B820();
      id v28 = objc_msgSend(v26, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v27, v9);

      uint64_t v25 = (void *)swift_dynamicCastClassUnconditional();
    }
    objc_msgSend(v25, sel_setCodeRaw_, v21);

    sub_1C277C390();
    uint64_t v23 = *(void **)(v36 + 16);
    sub_1C277C3D0();
    sub_1C277C3E0();
    sub_1C277C3A0();
    if (v31)
    {
      if ((v35 & 1) == 0)
      {
        __break(1u);
        break;
      }
      uint64_t v3 = v18;
      if (sub_1C277C180()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1C265DADC();
      id v29 = (void (*)(void *, void))sub_1C277BBF0();
      sub_1C277C230();
      v29(v32, 0);
      if (!--v4)
      {
LABEL_18:
        sub_1C26431E8(v33, v34, v35);
        return v36;
      }
    }
    else
    {
      uint64_t v10 = v33;
      uint64_t v11 = v34;
      char v12 = v35;
      uint64_t v3 = v18;
      int64_t v13 = sub_1C26432B0(v33, v34, v35, v18);
      uint64_t v15 = v14;
      char v17 = v16;
      sub_1C26431E8(v10, v11, v12);
      uint64_t v33 = v13;
      uint64_t v34 = v15;
      uint64_t v9 = a2;
      char v35 = v17 & 1;
      if (!--v4) {
        goto LABEL_18;
      }
    }
  }

  v32[0] = 0;
  v32[1] = 0xE000000000000000;
  sub_1C277C2D0();
  sub_1C277B8D0();
  v32[4] = v2;
  sub_1C2621120(0, (unint64_t *)&qword_1EBB831D0);
  sub_1C277C450();
  uint64_t result = sub_1C277C560();
  __break(1u);
  return result;
}

uint64_t sub_1C265BD84(unint64_t a1)
{
  return sub_1C265BDC4(a1, (void (*)(void))type metadata accessor for DataType, (void (*)(void))sub_1C265B8B4, (void (*)(id *, uint64_t))sub_1C2691010);
}

uint64_t sub_1C265BDC4(unint64_t a1, void (*a2)(void), void (*a3)(void), void (*a4)(id *, uint64_t))
{
  unint64_t v8 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C277C5A0();
    swift_bridgeObjectRelease();
  }
  a2(0);
  a3();
  uint64_t result = sub_1C277BBE0();
  uint64_t v16 = result;
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C277C5A0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v10) {
      return v16;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v10) {
      return v16;
    }
  }
  if (v10 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        uint64_t v12 = MEMORY[0x1C875C230](i, a1);
        a4(&v15, v12);
      }
    }
    else
    {
      int64_t v13 = (void **)(a1 + 32);
      do
      {
        uint64_t v14 = *v13++;
        a4(&v15, (uint64_t)v14);

        --v10;
      }
      while (v10);
    }
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C265BF2C(unint64_t a1)
{
  return sub_1C265BDC4(a1, (void (*)(void))type metadata accessor for Keyword, (void (*)(void))sub_1C265B880, (void (*)(id *, uint64_t))sub_1C2691330);
}

uint64_t sub_1C265BF6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserProfile();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v34 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  sub_1C26424F4(&qword_1EBB84FC0, (void (*)(uint64_t))type metadata accessor for UserProfile);
  uint64_t v39 = v2;
  uint64_t v16 = sub_1C277BBE0();
  uint64_t v35 = v15;
  if (!v15) {
    return v16;
  }
  uint64_t v17 = 0;
  uint64_t v34 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v18 = *(void *)(v3 + 72);
  while (1)
  {
    uint64_t v38 = v17;
    sub_1C2644754(v34 + v18 * v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for UserProfile);
    sub_1C277C8C0();
    uint64_t v22 = sub_1C277A8A0();
    uint64_t v23 = sub_1C26424F4(&qword_1EBB84F38, MEMORY[0x1E4F27990]);
    swift_bridgeObjectRetain();
    uint64_t v36 = v23;
    uint64_t v37 = v22;
    sub_1C277B7C0();
    uint64_t v24 = sub_1C277C910();
    uint64_t v25 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v26 = v24 & ~v25;
    if ((*(void *)(v16 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26))
    {
      uint64_t v27 = ~v25;
      while (1)
      {
        sub_1C2644754(*(void *)(v16 + 48) + v26 * v18, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for UserProfile);
        if (sub_1C277A870())
        {
          sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
          if (sub_1C277C030()) {
            break;
          }
        }
        sub_1C263FBF4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for UserProfile);
        unint64_t v26 = (v26 + 1) & v27;
        if (((*(void *)(v16 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
          goto LABEL_14;
        }
      }
      sub_1C263FBF4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for UserProfile);
      goto LABEL_7;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C2644754((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for UserProfile);
    uint64_t v40 = v16;
    if (*(void *)(v16 + 24) > *(void *)(v16 + 16))
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C273F8E8();
      }
      goto LABEL_5;
    }
    if (isUniquelyReferenced_nonNull_native) {
      sub_1C26941E8();
    }
    else {
      sub_1C2697ECC();
    }
    uint64_t v29 = v40;
    sub_1C277C8C0();
    sub_1C277B7C0();
    uint64_t v30 = sub_1C277C910();
    uint64_t v31 = -1 << *(unsigned char *)(v29 + 32);
    unint64_t v26 = v30 & ~v31;
    if ((*(void *)(v29 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26)) {
      break;
    }
LABEL_5:
    uint64_t v16 = v40;
    *(void *)(v40 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v26;
    sub_1C2644908((uint64_t)v12, *(void *)(v16 + 48) + v26 * v18, (uint64_t (*)(void))type metadata accessor for UserProfile);
    uint64_t v19 = *(void *)(v16 + 16);
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20)
    {
      __break(1u);
      goto LABEL_26;
    }
    *(void *)(v16 + 16) = v21;
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v17 = v38 + 1;
    sub_1C263FBF4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for UserProfile);
    if (v17 == v35) {
      return v16;
    }
  }
  uint64_t v32 = ~v31;
  while (1)
  {
    sub_1C2644754(*(void *)(v29 + 48) + v26 * v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserProfile);
    if (sub_1C277A870())
    {
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
      if (sub_1C277C030()) {
        break;
      }
    }
    sub_1C263FBF4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserProfile);
    unint64_t v26 = (v26 + 1) & v32;
    if (((*(void *)(v29 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
      goto LABEL_5;
    }
  }
LABEL_26:
  sub_1C263FBF4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserProfile);
  uint64_t result = sub_1C277C840();
  __break(1u);
  return result;
}

uint64_t sub_1C265C4C4(unint64_t a1)
{
  return sub_1C265BDC4(a1, (void (*)(void))type metadata accessor for Profile, (void (*)(void))sub_1C2642288, (void (*)(id *, uint64_t))sub_1C2643394);
}

uint64_t sub_1C265C504(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1C265DA88();
  uint64_t result = sub_1C277BBE0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1C2691650(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1C265C59C(unint64_t a1)
{
  return sub_1C265BDC4(a1, (void (*)(void))type metadata accessor for SharableModelReference, (void (*)(void))sub_1C265CE3C, (void (*)(id *, uint64_t))sub_1C2691800);
}

uint64_t sub_1C265C5DC(unint64_t a1)
{
  return sub_1C265BDC4(a1, (void (*)(void))type metadata accessor for FeedItem, (void (*)(void))sub_1C265D848, (void (*)(id *, uint64_t))sub_1C2691E00);
}

uint64_t sub_1C265C61C(unint64_t a1)
{
  return sub_1C2644A64(a1, &qword_1EBB80DB0, 0x1E4F2B5D8, &qword_1EBB82F98, (void (*)(id *, uint64_t))sub_1C26926EC);
}

uint64_t sub_1C265C64C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1C265D79C();
  uint64_t result = sub_1C277BBE0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      long long v5 = *(_OWORD *)(v4 + 16);
      v9[0] = *(_OWORD *)v4;
      v9[1] = v5;
      id v9[2] = *(_OWORD *)(v4 + 32);
      uint64_t v10 = *(void *)(v4 + 48);
      sub_1C265D7F0((id *)v9);
      sub_1C26929CC((uint64_t)&v7, v9);
      uint64_t v6 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v4 += 56;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1C265C714(uint64_t a1)
{
  uint64_t v2 = sub_1C277A8A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  id v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v27 = (char *)v21 - v6;
  sub_1C263D3B8(0, &qword_1EBB82660, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  sub_1C26424F4(&qword_1EBB84F38, MEMORY[0x1E4F27990]);
  uint64_t v29 = sub_1C277BBE0();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_1C2692E7C(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_1C265C9E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1C265D678();
  uint64_t result = sub_1C277BBE0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      id v6 = v5;
      sub_1C26931A0(&v7, v5);

      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1C265CA68(unint64_t a1)
{
  return sub_1C2644A64(a1, (unint64_t *)&qword_1EBB82FE0, 0x1E4F2B4B8, &qword_1EBB82FF0, (void (*)(id *, uint64_t))sub_1C26937A0);
}

uint64_t sub_1C265CA98(uint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1C277C3C0();
    int64_t v6 = sub_1C2643C24(v3);
    int v8 = v7;
    char v10 = v9 & 1;
    uint64_t v26 = v3 + 56;
    type metadata accessor for Keyword();
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
    uint64_t v25 = v3;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
    {
      if (((*(void *)(v26 + (((unint64_t)v6 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_15;
      }
      if (*(_DWORD *)(v3 + 36) != v8) {
        goto LABEL_16;
      }
      uint64_t v28 = v4;
      uint64_t v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      sub_1C26431F4(0, (unint64_t *)&qword_1EBB854B8, (unint64_t *)&qword_1EBB85F40);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1C277E480;
      *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v22 + 64) = sub_1C263226C();
      *(void *)(v22 + 32) = v21;
      *(void *)(v22 + 40) = v20;
      swift_bridgeObjectRetain_n();
      uint64_t v23 = (void *)sub_1C277BCC0();
      unint64_t v24 = sub_1C2669B64(a2, (uint64_t)v23, 1);
      if (v2) {
        goto LABEL_17;
      }
      uint64_t v14 = (void *)v24;
      if (v24)
      {
      }
      else
      {
        uint64_t v11 = self;
        uint64_t v12 = (void *)sub_1C277B820();
        id v13 = objc_msgSend(v11, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v12, a2);

        uint64_t v14 = (void *)swift_dynamicCastClassUnconditional();
      }
      unint64_t v15 = (void *)sub_1C277B820();
      objc_msgSend(v14, sel_setIdentifier_, v15);
      swift_bridgeObjectRelease();

      sub_1C277C390();
      sub_1C277C3D0();
      sub_1C277C3E0();
      sub_1C277C3A0();
      uint64_t v3 = v25;
      int64_t v16 = sub_1C26432B0(v6, v8, v10 & 1, v25);
      int64_t v6 = v16;
      int v8 = v17;
      char v10 = v18 & 1;
      uint64_t v4 = v28 - 1;
      if (v28 == 1)
      {
        sub_1C26431E8(v16, v17, v18 & 1);
        return v29;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    sub_1C277C2D0();
    sub_1C277B8D0();
    sub_1C2621120(0, (unint64_t *)&qword_1EBB831D0);
    sub_1C277C450();
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C265CE3C()
{
  return sub_1C26424F4(&qword_1EBB853C8, (void (*)(uint64_t))type metadata accessor for SharableModelReference);
}

void sub_1C265CE70(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1C277BC00();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C265CEE0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C277C3C0();
    int64_t v6 = sub_1C2643C24(a1);
    int v8 = v7;
    char v10 = v9 & 1;
    uint64_t result = type metadata accessor for SharableModelReference();
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v6 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_11;
      }
      if (*(_DWORD *)(a1 + 36) != v8) {
        goto LABEL_12;
      }
      uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
      uint64_t v12 = v11[1];
      v17[0] = *v11;
      v17[1] = v12;
      swift_bridgeObjectRetain();
      static SharableModelReference.findOrCreate(pluginSharableModelReference:in:for:)(v17, a2, a3);
      swift_bridgeObjectRelease();
      sub_1C277C390();
      sub_1C277C3D0();
      sub_1C277C3E0();
      sub_1C277C3A0();
      uint64_t result = sub_1C26432B0(v6, v8, v10 & 1, a1);
      int64_t v6 = result;
      int v8 = v13;
      char v10 = v14 & 1;
      if (!--v4)
      {
        sub_1C26431E8(result, v13, v14 & 1);
        return v18;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

void sub_1C265D068(uint64_t a1)
{
}

uint64_t sub_1C265D09C(id *a1)
{
  return sub_1C2658A48(a1, v1[5], v1[2], v1[3]) & 1;
}

unint64_t sub_1C265D0C0()
{
  unint64_t result = qword_1EA304260;
  if (!qword_1EA304260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304260);
  }
  return result;
}

unint64_t sub_1C265D118()
{
  unint64_t result = qword_1EA304268;
  if (!qword_1EA304268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304268);
  }
  return result;
}

void sub_1C265D16C(unsigned char *a1@<X8>)
{
  FeedItem.contentKind.getter(&v2);
  *a1 = v2;
}

uint64_t sub_1C265D1AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = FeedItem.favoriteStatus.getter();
  *a1 = result;
  return result;
}

id sub_1C265D1E0(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSearchSectionRawValue_, *a1);
}

uint64_t sub_1C265D1F4@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = *a1;
  if ((objc_msgSend(*a1, sel_searchSectionHintRawValue) & 0x80000000) != 0) {
    uint64_t result = 13;
  }
  else {
    uint64_t result = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(v3, sel_searchSectionHintRawValue));
  }
  *a2 = result;
  return result;
}

id sub_1C265D250(unsigned char *a1, id *a2)
{
  if (*a1 == 13) {
    uint64_t v2 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v2 = *a1;
  }
  objc_msgSend(*a2, sel_setSearchSectionHintRawValue_, v2);
  return sub_1C2653980();
}

uint64_t sub_1C265D298@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FeedItem.associatedKeywords.getter();
  *a1 = result;
  return result;
}

void sub_1C265D2C4()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  FeedItem.associatedKeywords.setter(v0);
}

uint64_t sub_1C265D2F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FeedItem.associatedProfiles.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C265D320@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FeedItem.associatedSharableModelReferences.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C265D350@<X0>(uint64_t a1@<X8>)
{
  return FeedItem.relevantDateInterval.getter(a1);
}

uint64_t sub_1C265D378@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = FeedItem.userInterface.getter();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

void sub_1C265D3A8(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 16);
  sub_1C263D4D4(*(void *)a1, v2, v3);
  FeedItem.userInterface.setter(v1, v2, v3);
}

void sub_1C265D3F8(unsigned char *a1@<X8>)
{
  FeedItem.hostViewStyle.getter(&v2);
  *a1 = v2;
}

unsigned char *_s21FeedItemCreationErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C265D4D4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItem.FeedItemCreationError()
{
  return &type metadata for FeedItem.FeedItemCreationError;
}

void sub_1C265D50C(uint64_t a1)
{
}

void sub_1C265D540()
{
  if (!qword_1EBB82F10)
  {
    type metadata accessor for _HKDataTypeCode(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB82F10);
    }
  }
}

void sub_1C265D5A8()
{
  if (!qword_1EBB82EB0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB82EB0);
    }
  }
}

void sub_1C265D610(uint64_t a1)
{
}

void sub_1C265D644(uint64_t a1)
{
}

unint64_t sub_1C265D678()
{
  unint64_t result = qword_1EBB82758;
  if (!qword_1EBB82758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82758);
  }
  return result;
}

void sub_1C265D6CC(uint64_t a1)
{
}

void sub_1C265D700(uint64_t a1)
{
}

void sub_1C265D734(uint64_t a1)
{
}

void sub_1C265D768(uint64_t a1)
{
}

unint64_t sub_1C265D79C()
{
  unint64_t result = qword_1EA3042B8;
  if (!qword_1EA3042B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3042B8);
  }
  return result;
}

id *sub_1C265D7F0(id *a1)
{
  id v2 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C265D848()
{
  return sub_1C26424F4(&qword_1EA3042C0, (void (*)(uint64_t))type metadata accessor for FeedItem);
}

void sub_1C265D87C(uint64_t a1)
{
}

void sub_1C265D8B0()
{
  if (!qword_1EBB82A70)
  {
    sub_1C265D95C();
    type metadata accessor for PluginFeedItem();
    sub_1C26424F4((unint64_t *)&unk_1EBB82AF0, (void (*)(uint64_t))sub_1C265D95C);
    unint64_t v0 = sub_1C277B190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82A70);
    }
  }
}

void sub_1C265D95C()
{
  if (!qword_1EBB82B00)
  {
    sub_1C265D9F0();
    sub_1C26424F4(&qword_1EBB836A0, (void (*)(uint64_t))sub_1C265D9F0);
    unint64_t v0 = sub_1C277B220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82B00);
    }
  }
}

void sub_1C265D9F0()
{
  if (!qword_1EBB836A8)
  {
    sub_1C263D3B8(255, &qword_1EBB85780, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C277B340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB836A8);
    }
  }
}

unint64_t sub_1C265DA88()
{
  unint64_t result = qword_1EBB85398;
  if (!qword_1EBB85398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85398);
  }
  return result;
}

void sub_1C265DADC()
{
  if (!qword_1EA3042D0)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85E80);
    sub_1C26450E4((unint64_t *)&qword_1EBB84498, (unint64_t *)&qword_1EBB85E80);
    unint64_t v0 = sub_1C277BC00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3042D0);
    }
  }
}

uint64_t sub_1C265DB84(uint64_t a1)
{
  uint64_t v10 = MEMORY[0x1E4FBC870];
  int v3 = (void *)swift_allocObject();
  long long v3[2] = a1;
  v3[3] = &v10;
  v3[4] = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1C265E570;
  *(void *)(v4 + 24) = v3;
  aBlock[4] = sub_1C261AECC;
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C262BAF0;
  aBlock[3] = &block_descriptor_0;
  uint64_t v5 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v6 = v1;
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_performBlockAndWait_, v5);
  _Block_release(v5);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_1C265DD00(uint64_t a1, uint64_t *a2)
{
  id v4 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  sub_1C262DAF0(0, (unint64_t *)&qword_1EBB854B8, (void (*)(uint64_t))sub_1C264DED0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C277E480;
  sub_1C262D764();
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = sub_1C265E58C(&qword_1EA3042D8, (void (*)(uint64_t))sub_1C262D764);
  *(void *)(v5 + 32) = a1;
  swift_bridgeObjectRetain();
  int v7 = (void *)sub_1C277BCC0();
  objc_msgSend(v4, sel_setPredicate_, v7);

  type metadata accessor for FeedItem();
  unint64_t v8 = sub_1C277C000();
  uint64_t v9 = sub_1C265C5DC(v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1C265E130(v9);

  swift_bridgeObjectRelease();
  *a2 = v10;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C265E130(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1C277C1C0()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x1E4FBC870];
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v29 = v1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1C265E5D4();
  uint64_t v3 = sub_1C277C2A0();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C277C170();
  type metadata accessor for FeedItem();
  sub_1C265E58C(&qword_1EA3042C0, (void (*)(uint64_t))type metadata accessor for FeedItem);
  uint64_t result = sub_1C277BC10();
  uint64_t v1 = v31;
  uint64_t v29 = v32;
  uint64_t v5 = v33;
  uint64_t v6 = v34;
  unint64_t v7 = v35;
LABEL_11:
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v12 = v3 + 56;
  while (v1 < 0)
  {
    if (!sub_1C277C200()) {
      goto LABEL_45;
    }
    type metadata accessor for FeedItem();
    swift_dynamicCast();
    int64_t v16 = v30;
LABEL_36:
    uint64_t result = sub_1C277C020();
    uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v3 + 48) + 8 * v13) = v16;
    ++*(void *)(v3 + 16);
  }
  if (v7)
  {
    unint64_t v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v15 = v14 | (v6 << 6);
LABEL_35:
    int64_t v16 = *(void **)(*(void *)(v1 + 48) + 8 * v15);
    uint64_t v30 = v16;
    id v21 = v16;
    goto LABEL_36;
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v29 + 8 * v17);
    uint64_t v19 = v6 + 1;
    if (!v18)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_45;
      }
      unint64_t v18 = *(void *)(v29 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_45;
        }
        unint64_t v18 = *(void *)(v29 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v29 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v6 + 5;
            if (v6 + 5 >= v11) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v29 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v6 + 6;
              while (v11 != v20)
              {
                unint64_t v18 = *(void *)(v29 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_1C2648F6C();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1C265E4DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C265E530()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C265E570()
{
  return sub_1C265DD00(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1C265E57C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C265E58C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C265E5D4()
{
  if (!qword_1EA3042E0)
  {
    sub_1C2644ED8(255, &qword_1EA3042E8);
    sub_1C264E7E8(&qword_1EA3042F0, &qword_1EA3042E8);
    unint64_t v0 = sub_1C277C2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3042E0);
    }
  }
}

uint64_t sub_1C265E668()
{
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacyGenerationExecutor()
{
  return self;
}

uint64_t sub_1C265E6CC()
{
  return MEMORY[0x1F411FC18](0xD000000000000010, 0x80000001C2789B30);
}

uint64_t sub_1C265E6E8()
{
  type metadata accessor for LegacyGenerationExecutor.Planner();

  return swift_allocObject();
}

uint64_t sub_1C265E718(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  return sub_1C265EAA4(a2, a3);
}

uint64_t sub_1C265E724()
{
  return 0;
}

uint64_t sub_1C265E730@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1C265E760()
{
  return 0;
}

void sub_1C265E76C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1C265E778(uint64_t a1)
{
  unint64_t v2 = sub_1C265F404();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C265E7B4(uint64_t a1)
{
  unint64_t v2 = sub_1C265F404();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C265E7F0@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t sub_1C265E7FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_1C265E850(void *a1)
{
  sub_1C265F3A8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C265F404();
  sub_1C277C9B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for LegacyGenerationExecutor.Planner()
{
  return self;
}

uint64_t sub_1C265E980(uint64_t a1, uint64_t a2)
{
  return sub_1C265F360((unint64_t *)&unk_1EBB80D18, a2, (void (*)(uint64_t))type metadata accessor for LegacyGenerationExecutor.Planner.WorkPlan);
}

uint64_t sub_1C265E9C8(uint64_t a1, uint64_t a2)
{
  return sub_1C265F360(&qword_1EBB82820, a2, (void (*)(uint64_t))type metadata accessor for LegacyGenerationExecutor.Planner.WorkPlan);
}

uint64_t sub_1C265EA10(uint64_t a1, uint64_t a2)
{
  return sub_1C265F360(&qword_1EA3042F8, a2, (void (*)(uint64_t))type metadata accessor for LegacyGenerationExecutor.Planner.WorkPlan);
}

uint64_t sub_1C265EA5C(uint64_t a1, uint64_t a2)
{
  return sub_1C265F360(&qword_1EBB82828, a2, (void (*)(uint64_t))type metadata accessor for LegacyGenerationExecutor.Planner);
}

uint64_t sub_1C265EAA4(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v5 = sub_1C277B130();
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  int64_t v11 = (char *)&v44 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v58 = (char *)&v44 - v12;
  unint64_t v13 = *(os_unfair_lock_s **)(*(void *)(v2 + 16) + 16);
  unint64_t v14 = v13 + 4;
  unint64_t v15 = v13 + 26;
  os_unfair_lock_lock(v13 + 26);
  sub_1C273CA1C((uint64_t)v14, (uint64_t)&v60);
  os_unfair_lock_unlock(v15);
  uint64_t v16 = v62;
  if (v62)
  {
    uint64_t v52 = a2;
    uint64_t v53 = a1;
    uint64_t v17 = v61;
    uint64_t v18 = v65;
    uint64_t v54 = v64;
    uint64_t v55 = v63;
    uint64_t v19 = v66;
    uint64_t v20 = v67;
    uint64_t v21 = v69;
    uint64_t v50 = v68;
    uint64_t v51 = v60;
    swift_getObjectType();
    sub_1C277AC30();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    uint64_t v22 = sub_1C277B100();
    os_log_type_t v23 = sub_1C277BD40();
    int v24 = v23;
    BOOL v25 = os_log_type_enabled(v22, v23);
    uint64_t v49 = v22;
    if (v25)
    {
      uint64_t v48 = v19;
      uint64_t v26 = swift_slowAlloc();
      int v46 = v24;
      BOOL v27 = (uint8_t *)v26;
      uint64_t v47 = swift_slowAlloc();
      uint64_t v59 = v47;
      uint64_t v45 = v27;
      *(_DWORD *)BOOL v27 = 136315138;
      uint64_t v44 = v27 + 4;
      uint64_t v28 = v51;
      LOBYTE(v60) = v51 & 1;
      uint64_t v61 = v17;
      uint64_t v62 = v16;
      LOBYTE(v63) = v55 & 1;
      uint64_t v64 = v54;
      uint64_t v65 = v18;
      uint64_t v66 = v19;
      uint64_t v67 = v20;
      uint64_t v68 = v50;
      uint64_t v69 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v29 = sub_1C277B860();
      uint64_t v60 = sub_1C263FDFC(v29, v30, &v59);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      uint64_t v31 = v28;
      sub_1C265F0D0(v28, v17, v16);
      sub_1C265F0D0(v28, v17, v16);
      uint64_t v32 = v49;
      uint64_t v33 = v45;
      _os_log_impl(&dword_1C2601000, v49, (os_log_type_t)v46, "[Legacy Generation Orchestration] Beginning background work request %s", v45, 0xCu);
      uint64_t v34 = v47;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v34, -1, -1);
      MEMORY[0x1C875D230](v33, -1, -1);

      sub_1C265F0D0(v31, v17, v16);
    }
    else
    {
      uint64_t v39 = v51;
      sub_1C265F0D0(v51, v17, v16);
      sub_1C265F0D0(v39, v17, v16);

      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v57);
    return v53(0);
  }
  else
  {
    os_unfair_lock_lock(v15);
    sub_1C265F544(v14, &v60);
    os_unfair_lock_unlock(v15);
    int v35 = v60;
    swift_getObjectType();
    if (v35 == 1)
    {
      sub_1C277AC30();
      uint64_t v36 = sub_1C277B100();
      os_log_type_t v37 = sub_1C277BD40();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl(&dword_1C2601000, v36, v37, "[Legacy Generation Orchestration] Foreground generation.", v38, 2u);
        MEMORY[0x1C875D230](v38, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v11, v57);
    }
    else
    {
      sub_1C277AC30();
      char v41 = sub_1C277B100();
      os_log_type_t v42 = sub_1C277BD40();
      if (os_log_type_enabled(v41, v42))
      {
        int v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v43 = 0;
        _os_log_impl(&dword_1C2601000, v41, v42, "[Legacy Generation Orchestration] Idle.", v43, 2u);
        MEMORY[0x1C875D230](v43, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v8, v57);
    }
    return a1(0);
  }
}

uint64_t sub_1C265F0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C265F140(void (*a1)(uint64_t))
{
  uint64_t v2 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C260846C();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C277E590;
  sub_1C277ACB0();
  sub_1C2612CDC(0, &qword_1EBB83180, (void (*)(uint64_t))sub_1C265F308);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C277E480;
  *(void *)(v4 + 56) = sub_1C277AEC0();
  *(void *)(v4 + 64) = sub_1C265F360(&qword_1EBB829E8, 255, MEMORY[0x1E4F66E70]);
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v4 + 32));
  sub_1C277AED0();
  sub_1C277AEB0();
  *(void *)(v3 + 32) = sub_1C277AC80();
  sub_1C277BA60();
  a1(v3);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C265F308()
{
  unint64_t result = qword_1EBB82A00;
  if (!qword_1EBB82A00)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB82A00);
  }
  return result;
}

uint64_t sub_1C265F360(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C265F3A8()
{
  if (!qword_1EA304300)
  {
    sub_1C265F404();
    unint64_t v0 = sub_1C277C780();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304300);
    }
  }
}

unint64_t sub_1C265F404()
{
  unint64_t result = qword_1EA304308;
  if (!qword_1EA304308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304308);
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyGenerationExecutor.Planner.WorkPlan.CodingKeys()
{
  return &type metadata for LegacyGenerationExecutor.Planner.WorkPlan.CodingKeys;
}

unint64_t sub_1C265F46C()
{
  unint64_t result = qword_1EA304310;
  if (!qword_1EA304310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304310);
  }
  return result;
}

unint64_t sub_1C265F4C4()
{
  unint64_t result = qword_1EA304318;
  if (!qword_1EA304318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304318);
  }
  return result;
}

void ContentKindFeatureTag.value.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

HealthPlatform::ContentKindFeatureTag __swiftcall ContentKindFeatureTag.init(_:)(HealthPlatform::ContentKindFeatureTag result)
{
  *uint64_t v1 = *(unsigned char *)result.value;
  return result;
}

void sub_1C265F538(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *sub_1C265F544@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C265F550()
{
  uint64_t result = swift_getKeyPath();
  qword_1EBB82808 = result;
  return result;
}

uint64_t static ContentKindFeatureTag.keyPath.getter()
{
  if (qword_1EBB82800 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static ContentKindFeatureTag.keyPath.setter(uint64_t a1)
{
  if (qword_1EBB82800 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EBB82808 = a1;
  return swift_release();
}

uint64_t (*static ContentKindFeatureTag.keyPath.modify())()
{
  if (qword_1EBB82800 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C265F6FC()
{
  if (qword_1EBB82800 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t getEnumTagSinglePayload for ContentKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE9) {
    goto LABEL_17;
  }
  if (a2 + 23 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 23) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 23;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x18;
  int v8 = v6 - 24;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ContentKindFeatureTag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *uint64_t result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C265F8D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 23;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKindFeatureTag()
{
  return &type metadata for ContentKindFeatureTag;
}

uint64_t sub_1C265F910()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C265F91C()
{
  uint64_t result = sub_1C277B820();
  qword_1EBB82F58 = result;
  return result;
}

id static NSNotificationName.cachedSharedSummaryTransactionCompleted.getter()
{
  if (qword_1EBB82F68 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_1EBB82F58;

  return v0;
}

void sub_1C265F9B0()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_transactionUUID);
  sub_1C277A880();
}

void *CachingSharedSummaryTransactionBuilder.__allocating_init(transactionBuilder:fallbackTransactionFilter:)(void *a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  unsigned int v6 = sub_1C2662E08(a1, a2, a3);

  swift_release();
  return v6;
}

void *CachingSharedSummaryTransactionBuilder.init(transactionBuilder:fallbackTransactionFilter:)(void *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = sub_1C2662E08(a1, a2, a3);

  swift_release();
  return v4;
}

uint64_t sub_1C265FABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2660DB4(a1, a2, a3);
}

uint64_t sub_1C265FAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v5[2] = v2;
  v5[3] = a1;
  void v5[4] = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_retain_n();
  swift_retain();
  sub_1C261ADFC();
  swift_release();

  return swift_release();
}

void sub_1C265FBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)(a1 + 16);
  BOOL v7 = (void *)swift_allocObject();
  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a1;
  v9[4] = sub_1C2664190;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  id v9[2] = sub_1C264ABF4;
  _OWORD v9[3] = &block_descriptor_111;
  int v8 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_discardWithCompletion_, v8);
  _Block_release(v8);
}

void sub_1C265FCC8(int a1, id a2, void (*a3)(id), uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    id v7 = a2;
    a3(a2);
  }
  else
  {
    id v9 = objc_msgSend(self, sel_defaultCenter);
    if (qword_1EBB82F68 != -1) {
      swift_once();
    }
    objc_msgSend(v9, sel_postNotificationName_object_, qword_1EBB82F58, a5);

    uint64_t v10 = *(os_unfair_lock_s **)(a5 + 40);
    p_os_unfair_lock_opaque = (unint64_t *)&v10[4]._os_unfair_lock_opaque;
    uint64_t v12 = v10 + 16;
    os_unfair_lock_lock(v10 + 16);
    sub_1C265FE04(p_os_unfair_lock_opaque);
    os_unfair_lock_unlock(v12);
    a3(0);
  }
}

uint64_t sub_1C265FE04(unint64_t *a1)
{
  unint64_t v2 = sub_1C264C33C(MEMORY[0x1E4FBC860]);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C265FE50(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(unsigned char *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = a2;
  *(void *)(v7 + 40) = a3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  swift_retain_n();
  swift_retain();
  sub_1C261ADFC();
  swift_release();

  return swift_release();
}

void sub_1C265FF2C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void **)(a1 + 16);
  id v9 = (void *)swift_allocObject();
  id v9[2] = a1;
  _OWORD v9[3] = a3;
  v9[4] = a4;
  v11[4] = sub_1C266416C;
  void v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1C26601B0;
  v11[3] = &block_descriptor_105;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_commitAsUrgent_completion_, a2 & 1, v10);
  _Block_release(v10);
}

void sub_1C2660030(void *a1, id a2, uint64_t a3, void (*a4)(void *, uint64_t))
{
  if (a1)
  {
    uint64_t v7 = self;
    id v8 = a1;
    id v9 = objc_msgSend(v7, sel_defaultCenter);
    if (qword_1EBB82F68 != -1) {
      swift_once();
    }
    objc_msgSend(v9, sel_postNotificationName_object_, qword_1EBB82F58, a3);

    id v14 = v8;
    a4(a1, 0);

    uint64_t v10 = v14;
  }
  else
  {
    if (a2) {
      id v12 = a2;
    }
    else {
      id v12 = objc_msgSend(self, sel_hk_error_userInfo_, 0, 0);
    }
    id v13 = a2;
    a4(v12, 1);
    uint64_t v10 = v12;
  }
}

void sub_1C26601B0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1C266023C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  return a2(a1, 1);
}

uint64_t sub_1C266026C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2660DB4(a1, a2, a3);
}

void sub_1C26602A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = *(void **)(a1 + 16);
  id v7 = (void *)sub_1C277B750();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  v10[4] = sub_1C266413C;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = sub_1C264ABF4;
  v10[3] = &block_descriptor_99;
  id v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_addMetadata_completion_, v7, v9);
  _Block_release(v9);
}

uint64_t sub_1C26603C8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1C26603F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = (void *)swift_allocObject();
  id v9[2] = v4;
  _OWORD v9[3] = a1;
  v9[4] = a2;
  v9[5] = a3;
  void v9[6] = a4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  swift_retain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C261ADFC();
  swift_release();

  return swift_release();
}

void sub_1C26604D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void **)(a1 + 16);
  int64_t v11 = (void *)sub_1C277B820();
  id v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a4;
  uint64_t v12[3] = a5;
  void v12[4] = a1;
  void v12[5] = a2;
  v12[6] = a3;
  v14[4] = sub_1C2664110;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  long long v14[2] = sub_1C264ABF4;
  v14[3] = &block_descriptor_93;
  id v13 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v10, sel_removeAllSummariesWithPackage_completion_, v11, v13);
  _Block_release(v13);
}

void sub_1C2660608(uint64_t a1, id a2, void (*a3)(id))
{
  if (a2)
  {
    id v5 = a2;
    a3(a2);
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    id v7 = (uint64_t *)&v6[4];
    uint64_t v8 = v6 + 16;
    os_unfair_lock_lock(v6 + 16);
    sub_1C2664120(v7);
    os_unfair_lock_unlock(v8);
    a3(0);
  }
}

uint64_t sub_1C26606F4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C26637C0(v6, a2, a3);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    id v9 = (uint64_t *)(v7 + 56);
    do
    {
      uint64_t v10 = *(v9 - 3);
      uint64_t v11 = *(v9 - 2);
      uint64_t v12 = *(v9 - 1);
      uint64_t v13 = *v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_1C264BCE4(v10, v11, v12, v13);
      LOBYTE(v12) = v15;
      swift_bridgeObjectRelease();
      if (v12)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v17 = *a1;
        uint64_t v20 = *a1;
        *a1 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C26770CC();
          uint64_t v17 = v20;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v18 = *(void **)(*(void *)(v17 + 56) + 8 * v14);
        sub_1C268A540(v14, v17);
        *a1 = v17;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v9 += 4;
      --v8;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2660884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v5;
  v11[3] = a1;
  v11[4] = a2;
  void v11[5] = a3;
  void v11[6] = a4;
  v11[7] = a5;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  *(void *)(v12 + 24) = a5;
  swift_retain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C261ADFC();
  swift_release();

  return swift_release();
}

void sub_1C2660980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void **)(a1 + 16);
  uint64_t v13 = (void *)sub_1C277B820();
  unint64_t v14 = (void *)sub_1C277BA30();
  char v15 = (void *)swift_allocObject();
  v15[2] = a5;
  v15[3] = a6;
  uint64_t v15[4] = a1;
  v15[5] = a2;
  v15[6] = a3;
  v15[7] = a4;
  v17[4] = sub_1C2664098;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  uint64_t v17[2] = sub_1C264ABF4;
  void v17[3] = &block_descriptor_87;
  uint64_t v16 = _Block_copy(v17);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v12, sel_removeSummariesWithPackage_names_completion_, v13, v14, v16);
  _Block_release(v16);
}

void sub_1C2660AE0(uint64_t a1, id a2, void (*a3)(id))
{
  if (a2)
  {
    id v5 = a2;
    a3(a2);
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    uint64_t v7 = (uint64_t *)&v6[4];
    uint64_t v8 = v6 + 16;
    os_unfair_lock_lock(v6 + 16);
    sub_1C26640A8(v7);
    os_unfair_lock_unlock(v8);
    a3(0);
  }
}

uint64_t sub_1C2660BD0(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C2663A24(v8, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = (uint64_t *)(v9 + 56);
    do
    {
      uint64_t v12 = *(v11 - 3);
      uint64_t v13 = *(v11 - 2);
      uint64_t v14 = *(v11 - 1);
      uint64_t v15 = *v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_1C264BCE4(v12, v13, v14, v15);
      LOBYTE(v14) = v17;
      swift_bridgeObjectRelease();
      if (v14)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v19 = *a1;
        uint64_t v22 = *a1;
        *a1 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C26770CC();
          uint64_t v19 = v22;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v20 = *(void **)(*(void *)(v19 + 56) + 8 * v16);
        sub_1C268A540(v16, v19);
        *a1 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v11 += 4;
      --v10;
    }
    while (v10);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2660D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2660DB4(a1, a2, a3);
}

uint64_t sub_1C2660DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  v7[5] = a3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  swift_retain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C261ADFC();
  swift_release();

  return swift_release();
}

void sub_1C2660E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1C2660EA8(uint64_t a1, id a2, void (*a3)(id))
{
  if (a2)
  {
    id v5 = a2;
    a3(a2);
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    unint64_t v7 = (unint64_t)&v6[4];
    uint64_t v8 = v6 + 16;
    os_unfair_lock_lock(v6 + 16);
    sub_1C2664920(v7);
    os_unfair_lock_unlock(v8);
    a3(0);
  }
}

uint64_t sub_1C2660F94(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  id v4 = objc_msgSend(*a1, sel_package);
  uint64_t v5 = sub_1C277B850();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(v3, sel_package);
  uint64_t v9 = sub_1C277B850();
  uint64_t v11 = v10;

  if (v5 == v9 && v7 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = 1;
    char v14 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14) {
      return v13 & 1;
    }
  }
  id v15 = objc_msgSend(v2, sel_package);
  uint64_t v16 = sub_1C277B850();
  uint64_t v18 = v17;

  id v19 = objc_msgSend(v3, sel_package);
  uint64_t v20 = sub_1C277B850();
  uint64_t v22 = v21;

  if (v20 == v16 && v22 == v18)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v23 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23)
    {
      char v13 = 0;
      return v13 & 1;
    }
  }
  id v24 = objc_msgSend(v2, sel_name);
  uint64_t v25 = sub_1C277B850();
  uint64_t v27 = v26;

  id v28 = objc_msgSend(v3, sel_name);
  uint64_t v29 = sub_1C277B850();
  uint64_t v31 = v30;

  if (v25 == v29 && v27 == v31) {
    char v13 = 0;
  }
  else {
    char v13 = sub_1C277C7E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

uint64_t sub_1C26611CC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_1C277C7E0(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1C277C7E0();
    }
  }
  return result;
}

uint64_t sub_1C2661270()
{
  return sub_1C277C910();
}

uint64_t sub_1C26612D8()
{
  sub_1C277B8B0();

  return sub_1C277B8B0();
}

uint64_t sub_1C2661328()
{
  return sub_1C277C910();
}

void sub_1C266138C()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = (os_unfair_lock_s *)v0[5];
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 16;
  os_unfair_lock_lock(v3 + 16);
  sub_1C26614E0(v4, aBlock);
  os_unfair_lock_unlock(v5);
  if (LOBYTE(aBlock[0]) == 1)
  {
    BOOL v6 = (void *)v1[2];
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    *(void *)(v7 + 24) = v2;
    aBlock[4] = sub_1C2663F68;
    aBlock[5] = v7;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C2661BE8;
    aBlock[3] = &block_descriptor_66;
    id v8 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v6, sel_addedSummariesWithPackage_names_resultsHandler_, 0, 0, v8);
    _Block_release(v8);
  }
}

uint64_t sub_1C26614E0@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (*(void *)(result + 16))
  {
    *a2 = 0;
  }
  else
  {
    *(void *)(result + 16) = 1;
    *a2 = 1;
  }
  return result;
}

void sub_1C2661504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(os_unfair_lock_s **)(a4 + 40);
  p_os_unfair_lock_opaque = (unint64_t *)&v4[4]._os_unfair_lock_opaque;
  BOOL v6 = v4 + 16;
  os_unfair_lock_lock(v4 + 16);
  sub_1C2663F70(p_os_unfair_lock_opaque, (uint64_t *)&v12);
  os_unfair_lock_unlock(v6);
  unint64_t v7 = v12;
  if (v12)
  {
    if (v12 != 1)
    {
      uint64_t v8 = *(void *)(v12 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain();
        unint64_t v9 = v7 + 40;
        do
        {
          uint64_t v10 = *(void (**)(uint64_t))(v9 - 8);
          uint64_t v11 = swift_retain();
          v10(v11);
          swift_release();
          v9 += 16;
          --v8;
        }
        while (v8);
        sub_1C2663F98(v7);
      }
      sub_1C2663F98(v7);
    }
  }
  else
  {
    sub_1C266138C();
  }
}

void sub_1C26615E4(id a1@<X1>, unint64_t *a2@<X0>, unint64_t a3@<X3>, char a4@<W4>, uint64_t *a5@<X8>)
{
  if (a1)
  {
    id v9 = a1;
    uint64_t v10 = (void *)sub_1C277A610();
    if ((objc_msgSend(v10, sel_hk_isObjectNotFoundError) & 1) == 0)
    {
      if (qword_1EBB85FE8 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_1C277B130();
      __swift_project_value_buffer(v39, (uint64_t)qword_1EBB85FD0);
      id v40 = a1;
      id v41 = a1;
      os_log_type_t v42 = sub_1C277B100();
      os_log_type_t v43 = sub_1C277BD20();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        uint64_t v67 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v44 = 138412290;
        id v45 = a1;
        uint64_t v69 = _swift_stdlib_bridgeErrorToNSError();
        sub_1C277C0D0();
        *uint64_t v67 = v69;

        _os_log_impl(&dword_1C2601000, v42, v43, "Failed to warm shared summary cache: %@", v44, 0xCu);
        sub_1C264E608();
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v67, -1, -1);
        MEMORY[0x1C875D230](v44, -1, -1);
      }
      else
      {
      }
      uint64_t v46 = a2[5];
      if (v46 > 2)
      {
        unint64_t v49 = MEMORY[0x1E4FBC860];
        *a2 = sub_1C264C33C(MEMORY[0x1E4FBC860]);
        swift_bridgeObjectRelease();
        uint64_t v50 = (void *)a2[2];
        id v51 = v10;
        sub_1C2663F20(v50);
        a2[2] = (unint64_t)v10;
        unint64_t v52 = a2[3];
        uint64_t v53 = *(void *)(v52 + 16);
        if (v53)
        {
          uint64_t v54 = a2;
          swift_bridgeObjectRetain();
          unint64_t v55 = v52 + 56;
          do
          {
            uint64_t v56 = *(void (**)(id))(v55 - 8);
            v55 += 32;
            swift_retain();
            swift_retain();
            v56(v51);
            swift_release();
            swift_release();
            --v53;
          }
          while (v53);
          swift_bridgeObjectRelease();
          a2 = v54;
        }
        swift_bridgeObjectRelease();
        uint64_t v57 = a2[4];
        a2[3] = v49;
        a2[4] = v49;
        id v58 = v51;
        uint64_t v48 = sub_1C2662CDC(v57, v58);
        swift_bridgeObjectRelease();
      }
      else
      {
        a2[5] = v46 + 1;
        unint64_t v47 = sub_1C264C33C(MEMORY[0x1E4FBC860]);

        *a2 = v47;
        swift_bridgeObjectRelease();
        sub_1C2663F20((id)a2[2]);
        uint64_t v48 = 0;
        a2[2] = 0;
      }
      goto LABEL_45;
    }
  }
  if (!a3)
  {
LABEL_42:
    if (a4) {
      sub_1C2661C94();
    }
    uint64_t v48 = 1;
LABEL_45:
    *a5 = v48;
    return;
  }
  char v59 = a4;
  if (a3 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C5A0();
    if (v11) {
      goto LABEL_7;
    }
    goto LABEL_41;
  }
  uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    a4 = v59;
    goto LABEL_42;
  }
LABEL_7:
  uint64_t v63 = a2;
  unint64_t v64 = a3 & 0xC000000000000001;
  uint64_t v12 = 4;
  uint64_t v61 = v11;
  unint64_t v62 = a3;
  while (1)
  {
    if (v64) {
      id v15 = (id)MEMORY[0x1C875C230](v12 - 4, a3);
    }
    else {
      id v15 = *(id *)(a3 + 8 * v12);
    }
    uint64_t v16 = v15;
    if (__OFADD__(v12 - 4, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v65 = v12 - 3;
    uint64_t v66 = v12;
    id v17 = objc_msgSend(v15, sel_package);
    uint64_t v18 = sub_1C277B850();
    uint64_t v20 = v19;

    id v21 = objc_msgSend(v16, sel_name);
    uint64_t v22 = sub_1C277B850();
    a3 = v23;

    id v24 = v16;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v26 = *a2;
    uint64_t v68 = (void *)*a2;
    *a2 = 0x8000000000000000;
    unint64_t v28 = sub_1C264BCE4(v18, v20, v22, a3);
    uint64_t v29 = *(void *)(v26 + 16);
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      goto LABEL_38;
    }
    a2 = v27;
    if (*(void *)(v26 + 24) < v31) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v34 = v68;
      if (v27) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_1C26770CC();
      uint64_t v34 = v68;
      if (a2)
      {
LABEL_8:
        uint64_t v13 = v34[7];
        uint64_t v14 = 8 * v28;

        *(void *)(v13 + v14) = v24;
        goto LABEL_9;
      }
    }
LABEL_21:
    v34[(v28 >> 6) + 8] |= 1 << v28;
    int v35 = (uint64_t *)(v34[6] + 32 * v28);
    *int v35 = v18;
    v35[1] = v20;
    v35[2] = v22;
    v35[3] = a3;
    *(void *)(v34[7] + 8 * v28) = v24;
    uint64_t v36 = v34[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37) {
      goto LABEL_39;
    }
    v34[2] = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_9:
    a2 = v63;
    *uint64_t v63 = (unint64_t)v34;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v66 + 1;
    a3 = v62;
    if (v65 == v61) {
      goto LABEL_41;
    }
  }
  sub_1C264BE84(v31, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = sub_1C264BCE4(v18, v20, v22, a3);
  if ((a2 & 1) == (v33 & 1))
  {
    unint64_t v28 = v32;
    uint64_t v34 = v68;
    if (a2) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
  sub_1C277C850();
  __break(1u);
}

uint64_t sub_1C2661BC0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C2661BE8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = a2;
  unint64_t v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB82EE8);
    uint64_t v6 = sub_1C277BA40();
  }
  swift_retain();
  id v8 = a4;
  v7(v6, a3, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1C2661C94()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_healthStore);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    *(void *)(v3 + 24) = v2;
    id v4 = objc_allocWithZone(MEMORY[0x1E4F2B4D0]);
    aBlock[4] = sub_1C2663798;
    aBlock[5] = v3;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C26B2638;
    aBlock[3] = &block_descriptor_1;
    uint64_t v5 = _Block_copy(aBlock);
    swift_retain();
    id v6 = v2;
    id v7 = objc_msgSend(v4, sel_initWithHandler_, v5);
    _Block_release(v5);
    swift_release();
    objc_msgSend(v6, sel_executeQuery_, v7);
  }
  else
  {
    sub_1C277C560();
    __break(1u);
  }
}

uint64_t sub_1C2661E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4 = *(os_unfair_lock_s **)(a4 + 40);
  uint64_t v5 = (uint64_t)&v4[4];
  id v6 = v4 + 16;
  os_unfair_lock_lock(v4 + 16);
  sub_1C26637A0(v5, &v12);
  os_unfair_lock_unlock(v6);
  uint64_t v7 = *(void *)(v12 + 16);
  if (v7)
  {
    uint64_t v8 = v12 + 40;
    do
    {
      id v9 = *(void (**)(uint64_t))(v8 - 8);
      uint64_t v10 = swift_retain();
      v9(v10);
      swift_release();
      v8 += 16;
      --v7;
    }
    while (v7);
  }
  return swift_bridgeObjectRelease();
}

void sub_1C2661EBC(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  if (!a1)
  {
    if (a4)
    {
      uint64_t v20 = (*(uint64_t (**)(uint64_t))(a3 + 24))(a4);
      if (v20)
      {
        id v21 = (void *)v20;
        id v22 = objc_allocWithZone(MEMORY[0x1E4F2B4B0]);
        aBlock[4] = sub_1C2663EF4;
        aBlock[5] = a3;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1C26628D8;
        aBlock[3] = &block_descriptor_57;
        unint64_t v23 = _Block_copy(aBlock);
        swift_retain();
        id v24 = objc_msgSend(v22, sel_initWithTransaction_package_resultsHandler_, v21, 0, v23);
        _Block_release(v23);
        swift_release();
        objc_msgSend(a5, sel_executeQuery_, v24);

        uint64_t v25 = MEMORY[0x1E4FBC860];
        goto LABEL_21;
      }
      if (qword_1EBB85FE8 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1C277B130();
      __swift_project_value_buffer(v31, (uint64_t)qword_1EBB85FD0);
      uint64_t v27 = sub_1C277B100();
      os_log_type_t v28 = sub_1C277BD20();
      if (!os_log_type_enabled(v27, v28))
      {
LABEL_20:

        uint64_t v25 = sub_1C2663D34(a2);
        goto LABEL_21;
      }
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      BOOL v30 = "No fallback transaction selected.";
    }
    else
    {
      if (qword_1EBB85FE8 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1C277B130();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EBB85FD0);
      uint64_t v27 = sub_1C277B100();
      os_log_type_t v28 = sub_1C277BD20();
      if (!os_log_type_enabled(v27, v28)) {
        goto LABEL_20;
      }
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      BOOL v30 = "No fallback transactions found.";
    }
    _os_log_impl(&dword_1C2601000, v27, v28, v30, v29, 2u);
    MEMORY[0x1C875D230](v29, -1, -1);
    goto LABEL_20;
  }
  id v9 = a1;
  if (qword_1EBB85FE8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1C277B130();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBB85FD0);
  id v11 = a1;
  id v12 = a1;
  uint64_t v13 = sub_1C277B100();
  os_log_type_t v14 = sub_1C277BD20();
  if (os_log_type_enabled(v13, v14))
  {
    id v15 = (uint8_t *)swift_slowAlloc();
    char v33 = a6;
    uint64_t v16 = (void *)swift_slowAlloc();
    *(_DWORD *)id v15 = 138412290;
    id v17 = a1;
    aBlock[0] = _swift_stdlib_bridgeErrorToNSError();
    sub_1C277C0D0();
    *uint64_t v16 = aBlock[0];

    _os_log_impl(&dword_1C2601000, v13, v14, "Failed to fetch fallback transactions: %@", v15, 0xCu);
    sub_1C264E608();
    swift_arrayDestroy();
    a6 = v33;
    MEMORY[0x1C875D230](v16, -1, -1);
    MEMORY[0x1C875D230](v15, -1, -1);
  }
  else
  {
  }
  uint64_t v25 = sub_1C2663D34(a2);

LABEL_21:
  *a6 = v25;
}

uint64_t sub_1C2662304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(os_unfair_lock_s **)(a5 + 40);
  uint64_t v6 = (uint64_t)&v5[4];
  uint64_t v7 = v5 + 16;
  os_unfair_lock_lock(v5 + 16);
  sub_1C2663EFC(v6, &v13);
  os_unfair_lock_unlock(v7);
  uint64_t v8 = *(void *)(v13 + 16);
  if (v8)
  {
    uint64_t v9 = v13 + 40;
    do
    {
      uint64_t v10 = *(void (**)(uint64_t))(v9 - 8);
      uint64_t v11 = swift_retain();
      v10(v11);
      swift_release();
      v9 += 16;
      --v8;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease();
}

void sub_1C26623B4(id a1@<X1>, uint64_t a2@<X0>, unint64_t a3@<X3>, char a4@<W4>, uint64_t *a5@<X8>)
{
  if (a1)
  {
    unint64_t v5 = (unint64_t)a1;
    id v7 = a1;
    if (qword_1EBB85FE8 != -1) {
LABEL_31:
    }
      swift_once();
    uint64_t v8 = sub_1C277B130();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EBB85FD0);
    id v9 = (id)v5;
    id v10 = (id)v5;
    uint64_t v11 = sub_1C277B100();
    os_log_type_t v12 = sub_1C277BD20();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v14 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412290;
      id v15 = (id)v5;
      uint64_t v53 = _swift_stdlib_bridgeErrorToNSError();
      sub_1C277C0D0();
      *os_log_type_t v14 = v53;

      _os_log_impl(&dword_1C2601000, v11, v12, "Failed to fetch fallback transactions: %@", v13, 0xCu);
      sub_1C264E608();
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v14, -1, -1);
      MEMORY[0x1C875D230](v13, -1, -1);
    }
    else
    {
    }
    uint64_t v44 = sub_1C2663D34(a2);

    goto LABEL_37;
  }
  unint64_t v16 = a3;
  if (!a3)
  {
LABEL_34:
    if (a4) {
      uint64_t v44 = sub_1C2663D34(a2);
    }
    else {
      uint64_t v44 = MEMORY[0x1E4FBC860];
    }
LABEL_37:
    *a5 = v44;
    return;
  }
  char v45 = a4;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1C277C5A0();
    if (v17) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v17)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    a4 = v45;
    goto LABEL_34;
  }
LABEL_8:
  uint64_t v49 = a2;
  unint64_t v50 = v16 & 0xC000000000000001;
  uint64_t v18 = 4;
  uint64_t v47 = v17;
  unint64_t v48 = v16;
  while (1)
  {
    if (v50) {
      id v20 = (id)MEMORY[0x1C875C230](v18 - 4, v16);
    }
    else {
      id v20 = *(id *)(v16 + 8 * v18);
    }
    id v21 = v20;
    if (__OFADD__(v18 - 4, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v51 = v18 - 3;
    uint64_t v52 = v18;
    id v22 = objc_msgSend(v20, sel_package);
    uint64_t v23 = sub_1C277B850();
    uint64_t v25 = v24;

    id v26 = objc_msgSend(v21, sel_name);
    uint64_t v27 = sub_1C277B850();
    uint64_t v29 = v28;

    id v30 = v21;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v32 = *(void **)(a2 + 8);
    *(void *)(a2 + 8) = 0x8000000000000000;
    unint64_t v5 = sub_1C264BCE4(v23, v25, v27, v29);
    uint64_t v34 = v32[2];
    BOOL v35 = (v33 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35)) {
      goto LABEL_29;
    }
    a2 = v33;
    if (v32[3] < v36) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v39 = v32;
      if (v33) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1C26770CC();
      uint64_t v39 = v32;
      if (a2)
      {
LABEL_9:
        uint64_t v19 = v39[7];

        *(void *)(v19 + 8 * v5) = v30;
        goto LABEL_10;
      }
    }
LABEL_22:
    v39[(v5 >> 6) + 8] |= 1 << v5;
    id v40 = (uint64_t *)(v39[6] + 32 * v5);
    uint64_t *v40 = v23;
    v40[1] = v25;
    _OWORD v40[2] = v27;
    v40[3] = v29;
    *(void *)(v39[7] + 8 * v5) = v30;
    uint64_t v41 = v39[2];
    BOOL v42 = __OFADD__(v41, 1);
    uint64_t v43 = v41 + 1;
    if (v42) {
      goto LABEL_30;
    }
    v39[2] = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_10:
    a2 = v49;
    *(void *)(v49 + 8) = v39;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = v52 + 1;
    unint64_t v16 = v48;
    if (v51 == v47) {
      goto LABEL_33;
    }
  }
  sub_1C264BE84(v36, isUniquelyReferenced_nonNull_native);
  unint64_t v37 = sub_1C264BCE4(v23, v25, v27, v29);
  if ((a2 & 1) == (v38 & 1))
  {
    unint64_t v5 = v37;
    uint64_t v39 = v32;
    if (a2) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
  sub_1C277C850();
  __break(1u);
}

uint64_t CachingSharedSummaryTransactionBuilder.deinit()
{
  swift_release();
  swift_release();

  return v0;
}

uint64_t CachingSharedSummaryTransactionBuilder.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C26628D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = a3;
  id v9 = *(void (**)(id, uint64_t, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB82EE8);
    uint64_t v7 = sub_1C277BA40();
  }
  swift_retain();
  id v10 = a2;
  id v11 = a5;
  v9(v10, v7, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26629A4(void **__src, void **a2, unint64_t a3, void **__dst)
{
  BOOL v35 = __dst;
  unint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v41 = __src;
  id v40 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != a2 || &a2[v12] <= __dst)
      {
        memmove(__dst, a2, 8 * v12);
        __dst = v35;
      }
      id v21 = &__dst[v12];
      uint64_t v39 = v21;
      uint64_t v41 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        id v22 = (id *)(a3 - 8);
        uint64_t v23 = v5;
        uint64_t v34 = v6;
        while (1)
        {
          uint64_t v24 = v21;
          uint64_t v25 = *--v21;
          id v38 = v25;
          id v26 = *--v23;
          unint64_t v37 = v26;
          id v27 = v38;
          id v28 = v26;
          char v29 = sub_1C2660F94(&v38, &v37);
          if (v36) {
            break;
          }
          char v30 = v29;
          uint64_t v36 = 0;
          uint64_t v31 = v22 + 1;

          if (v30)
          {
            unint64_t v32 = v35;
            if (v31 != v5 || v22 >= v5) {
              *id v22 = *v23;
            }
            uint64_t v41 = v23;
            id v21 = v24;
          }
          else
          {
            uint64_t v39 = v21;
            unint64_t v32 = v35;
            if (v31 < v24 || v22 >= v24 || v31 != v24) {
              *id v22 = *v21;
            }
            uint64_t v23 = v5;
          }
          if (v23 > v34)
          {
            --v22;
            unint64_t v5 = v23;
            if (v21 > v32) {
              continue;
            }
          }
          goto LABEL_48;
        }
      }
      goto LABEL_48;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
    {
      memmove(__dst, __src, 8 * v9);
      __dst = v35;
    }
    uint64_t v13 = &__dst[v9];
    uint64_t v39 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      while (1)
      {
        id v38 = *v5;
        os_log_type_t v14 = __dst;
        unint64_t v37 = *__dst;
        id v15 = v37;
        id v16 = v38;
        id v17 = v15;
        char v18 = sub_1C2660F94(&v38, &v37);
        if (v36) {
          break;
        }
        char v19 = v18;

        if (v19)
        {
          id v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5) {
            *uint64_t v6 = *v5;
          }
          __dst = v14;
        }
        else
        {
          if (v6 != v14) {
            *uint64_t v6 = *v14;
          }
          __dst = v14 + 1;
          id v40 = v14 + 1;
          id v20 = v5;
        }
        uint64_t v36 = 0;
        uint64_t v41 = ++v6;
        if (__dst < v13)
        {
          unint64_t v5 = v20;
          if ((unint64_t)v20 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
LABEL_48:
    sub_1C27397A0((void **)&v41, (const void **)&v40, &v39);
    return 1;
  }
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C2662CDC(uint64_t a1, void *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1C2659E20(0, v2, 0);
    uint64_t v3 = v15;
    uint64_t v6 = (void *)(a1 + 56);
    do
    {
      uint64_t v7 = *(v6 - 3);
      uint64_t v8 = *v6;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v7;
      *(_OWORD *)(v9 + 24) = *((_OWORD *)v6 - 1);
      *(void *)(v9 + 40) = v8;
      *(void *)(v9 + 48) = a2;
      unint64_t v10 = *(void *)(v15 + 16);
      unint64_t v11 = *(void *)(v15 + 24);
      swift_retain();
      swift_retain();
      id v12 = a2;
      if (v10 >= v11 >> 1) {
        sub_1C2659E20(v11 > 1, v10 + 1, 1);
      }
      *(void *)(v15 + 16) = v10 + 1;
      uint64_t v13 = v15 + 16 * v10;
      *(void *)(v13 + 32) = sub_1C2663FF0;
      *(void *)(v13 + 40) = v9;
      v6 += 4;
      --v2;
    }
    while (v2);
  }
  return v3;
}

void *sub_1C2662E08(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  id v20 = a1;
  uint64_t v4 = sub_1C277BEA0();
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C277BE40();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1C277B660();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  unint64_t v10 = sub_1C264C33C(MEMORY[0x1E4FBC860]);
  unint64_t v11 = sub_1C264C33C(v9);
  sub_1C2664258();
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 64) = 0;
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = 0;
  *(void *)(v12 + 40) = v9;
  *(void *)(v12 + 48) = v9;
  *(void *)(v12 + 56) = 0;
  v3[5] = v12;
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  sub_1C277B650();
  uint64_t v23 = v9;
  sub_1C264C47C((unint64_t *)&unk_1EBB85160, MEMORY[0x1E4FBCC10]);
  uint64_t v13 = (void (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C2633C08(0, (unint64_t *)&qword_1EBB850C0, MEMORY[0x1E4FBCC10]);
  sub_1C264C224(qword_1EBB850D0, (unint64_t *)&qword_1EBB850C0, v13);
  sub_1C277C120();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v6, *MEMORY[0x1E4FBCC58], v19);
  v3[6] = sub_1C277BED0();
  os_log_type_t v14 = v20;
  uint64_t v15 = v21;
  long long v3[2] = v20;
  v3[3] = v15;
  v3[4] = v22;
  id v16 = v14;
  swift_retain();
  sub_1C266138C();
  return v3;
}

void sub_1C26630EC()
{
  sub_1C265FBCC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C26630F8()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C2663138()
{
  sub_1C265FF2C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_1C266314C()
{
  sub_1C26602A8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1C2663158()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C2663180()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C26631C8()
{
  sub_1C26604D8(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1C26631D8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1C2663228()
{
  sub_1C2660980(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

void sub_1C266323C()
{
  sub_1C261B06C(v0[2], v0[3], v0[4], v0[5], (uint64_t)&unk_1F1DC6478, (uint64_t)sub_1C266403C, (uint64_t)&block_descriptor_81);
}

uint64_t sub_1C2663280()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C26632D0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(a1, 1);
}

uint64_t method lookup function for CachingSharedSummaryTransactionBuilder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CachingSharedSummaryTransactionBuilder);
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.transactionUUID.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.__allocating_init(transactionBuilder:fallbackTransactionFilter:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.addSummaries(_:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.discard(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.commit(asUrgent:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.addMetadata(_:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.removeAllSummaries(withPackage:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.removeSummaries(withPackage:names:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.reuseSummaries(_:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of CachingSharedSummaryTransactionBuilder.addedSummaries(withPackage:names:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t destroy for CachingSharedSummaryTransactionBuilder.ProtectedState(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v2 = *(void **)(a1 + 16);
  if ((unint64_t)v2 >= 3) {

  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CachingSharedSummaryTransactionBuilder.ProtectedState(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)v5 >= 3) {
    id v6 = v5;
  }
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  a1[2] = v5;
  a1[3] = v7;
  uint64_t v9 = a2[5];
  a1[4] = v8;
  a1[5] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CachingSharedSummaryTransactionBuilder.ProtectedState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = (void *)a2[2];
  if ((unint64_t)v4 >= 3)
  {
    if ((unint64_t)v5 >= 3)
    {
      a1[2] = v5;
      id v7 = v5;

      goto LABEL_8;
    }

    uint64_t v5 = (void *)a2[2];
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 3)
  {
LABEL_6:
    a1[2] = v5;
    goto LABEL_8;
  }
  a1[2] = v5;
  id v6 = v5;
LABEL_8:
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for CachingSharedSummaryTransactionBuilder.ProtectedState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if ((unint64_t)v4 >= 3)
  {
    if (v5 >= 3)
    {
      *(void *)(a1 + 16) = v5;

      goto LABEL_6;
    }
  }
  *(void *)(a1 + 16) = v5;
LABEL_6:
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for CachingSharedSummaryTransactionBuilder.ProtectedState(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CachingSharedSummaryTransactionBuilder.ProtectedState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CachingSharedSummaryTransactionBuilder.ProtectedState()
{
  return &type metadata for CachingSharedSummaryTransactionBuilder.ProtectedState;
}

uint64_t sub_1C2663758()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2663798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2661E10(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_1C26637A0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C2661EBC(*(id *)(v2 + 16), a1, *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), a2);
}

uint64_t sub_1C26637C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v5 = 0;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v7 = v8;
  uint64_t v30 = result;
  uint64_t v9 = 1 << *(unsigned char *)(result - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v7;
  int64_t v31 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v15 >= v31) {
      goto LABEL_34;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_34;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_34;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v5);
        if (!v16)
        {
          int64_t v5 = v15 + 3;
          if (v15 + 3 >= v31) {
            goto LABEL_34;
          }
          unint64_t v16 = *(void *)(v30 + 8 * v5);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_22:
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 32 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    if (*v18 == a2 && v20 == a3)
    {
      uint64_t v19 = a2;
      uint64_t v20 = a3;
      goto LABEL_29;
    }
    uint64_t result = sub_1C277C7E0();
    if (result)
    {
LABEL_29:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_1C2659E00(0, *(void *)(v12 + 16) + 1, 1);
      }
      unint64_t v25 = *(void *)(v12 + 16);
      unint64_t v24 = *(void *)(v12 + 24);
      unint64_t v26 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        unint64_t v28 = *(void *)(v12 + 16);
        unint64_t v29 = v25 + 1;
        uint64_t result = sub_1C2659E00(v24 > 1, v25 + 1, 1);
        unint64_t v25 = v28;
        unint64_t v26 = v29;
      }
      *(void *)(v12 + 16) = v26;
      id v27 = (void *)(v12 + 32 * v25);
      v27[4] = v19;
      v27[5] = v20;
      v27[6] = v21;
      v27[7] = v22;
    }
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v31)
  {
LABEL_34:
    swift_release();
    return v12;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v31) {
      goto LABEL_34;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1C2663A24(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = a3;
  uint64_t v5 = a2;
  int64_t i = 0;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v8 = v9;
  uint64_t v10 = 1 << *(unsigned char *)(result - 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v8;
  uint64_t v36 = result;
  int64_t v37 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v34 = a4 + 7;
  uint64_t v35 = MEMORY[0x1E4FBC860];
  do
  {
    while (1)
    {
      while (1)
      {
LABEL_4:
        if (v12)
        {
          unint64_t v13 = __clz(__rbit64(v12));
          v12 &= v12 - 1;
          unint64_t v14 = v13 | (i << 6);
        }
        else
        {
          int64_t v15 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_49;
          }
          if (v15 >= v37)
          {
LABEL_47:
            swift_release();
            return v35;
          }
          unint64_t v16 = *(void *)(v36 + 8 * v15);
          ++i;
          if (!v16)
          {
            int64_t i = v15 + 1;
            if (v15 + 1 >= v37) {
              goto LABEL_47;
            }
            unint64_t v16 = *(void *)(v36 + 8 * i);
            if (!v16)
            {
              int64_t i = v15 + 2;
              if (v15 + 2 >= v37) {
                goto LABEL_47;
              }
              unint64_t v16 = *(void *)(v36 + 8 * i);
              if (!v16)
              {
                int64_t i = v15 + 3;
                if (v15 + 3 >= v37) {
                  goto LABEL_47;
                }
                unint64_t v16 = *(void *)(v36 + 8 * i);
                if (!v16)
                {
                  int64_t v17 = v15 + 4;
                  if (v17 >= v37) {
                    goto LABEL_47;
                  }
                  unint64_t v16 = *(void *)(v36 + 8 * v17);
                  for (int64_t i = v17; !v16; ++v17)
                  {
                    int64_t i = v17 + 1;
                    if (__OFADD__(v17, 1)) {
                      goto LABEL_50;
                    }
                    if (i >= v37) {
                      goto LABEL_47;
                    }
                    unint64_t v16 = *(void *)(v36 + 8 * i);
                  }
                }
              }
            }
          }
          unint64_t v12 = (v16 - 1) & v16;
          unint64_t v14 = __clz(__rbit64(v16)) + (i << 6);
        }
        uint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 32 * v14);
        uint64_t v19 = v18[1];
        uint64_t v21 = v18[2];
        uint64_t v20 = v18[3];
        uint64_t v42 = *v18;
        if (*v18 != v5 || v19 != v4)
        {
          uint64_t result = sub_1C277C7E0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        uint64_t v23 = a4[2];
        if (v23) {
          break;
        }
      }
      int64_t v24 = i;
      if (a4[4] != v21 || a4[5] != v20)
      {
        uint64_t result = sub_1C277C7E0();
        if ((result & 1) == 0) {
          break;
        }
      }
LABEL_42:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v30 = v35;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1C2659E00(0, *(void *)(v35 + 16) + 1, 1);
        uint64_t v30 = v35;
      }
      int64_t i = v24;
      unint64_t v32 = *(void *)(v30 + 16);
      unint64_t v31 = *(void *)(v30 + 24);
      if (v32 >= v31 >> 1)
      {
        uint64_t result = sub_1C2659E00(v31 > 1, v32 + 1, 1);
        uint64_t v30 = v35;
      }
      *(void *)(v30 + 16) = v32 + 1;
      uint64_t v35 = v30;
      uint64_t v33 = (void *)(v30 + 32 * v32);
      v33[4] = v42;
      v33[5] = v19;
      v33[6] = v21;
      v33[7] = v20;
      uint64_t v5 = a2;
      uint64_t v4 = a3;
    }
    uint64_t v5 = a2;
    uint64_t v4 = a3;
  }
  while (v23 == 1);
  unint64_t v26 = v34;
  uint64_t v27 = 1;
  while (1)
  {
    uint64_t v28 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (*(v26 - 1) == v21 && *v26 == v20) {
      goto LABEL_42;
    }
    uint64_t result = sub_1C277C7E0();
    if (result) {
      goto LABEL_42;
    }
    v26 += 2;
    ++v27;
    if (v28 == v23)
    {
      uint64_t v5 = a2;
      uint64_t v4 = a3;
      int64_t i = v24;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_1C2663D34(uint64_t a1)
{
  sub_1C2663F20(*(id *)(a1 + 16));
  *(void *)(a1 + 16) = 2;
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 56;
    do
    {
      uint64_t v5 = *(void (**)(uint64_t))(v4 - 24);
      v4 += 32;
      swift_retain();
      swift_retain();
      v5(a1);
      swift_release();
      swift_release();
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 32) = v6;
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v18 = v6;
    sub_1C2659E20(0, v8, 0);
    uint64_t v9 = v18;
    uint64_t v10 = (uint64_t *)(v7 + 40);
    do
    {
      uint64_t v12 = *(v10 - 1);
      uint64_t v11 = *v10;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v12;
      *(void *)(v13 + 24) = v11;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C2659E20(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v18;
      }
      unint64_t v15 = *(void *)(v9 + 16);
      unint64_t v14 = *(void *)(v9 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C2659E20(v14 > 1, v15 + 1, 1);
        uint64_t v9 = v18;
      }
      *(void *)(v9 + 16) = v15 + 1;
      uint64_t v16 = v9 + 16 * v15;
      *(void *)(v16 + 32) = sub_1C261AEA4;
      *(void *)(v16 + 40) = v13;
      v10 += 4;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v9;
}

uint64_t sub_1C2663EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2662304(a1, a2, a3, a4, v4);
}

void sub_1C2663EFC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C26623B4(*(id *)(v2 + 16), a1, *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), a2);
}

void sub_1C2663F20(id a1)
{
  if ((unint64_t)a1 >= 3) {
}
  }

uint64_t sub_1C2663F30()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C2663F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2661504(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_1C2663F70(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C26615E4(*(id *)(v2 + 16), a1, *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), a2);
}

unint64_t sub_1C2663F98(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2663FA8()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C2663FF0()
{
  return (*(uint64_t (**)(void))(v0 + 32))(*(void *)(v0 + 48));
}

uint64_t sub_1C2664020()
{
  return objectdestroy_71Tm(MEMORY[0x1E4FBC898]);
}

void sub_1C266403C(uint64_t a1, void *a2)
{
  sub_1C2660EA8(a1, a2, *(void (**)(id))(v2 + 16));
}

uint64_t sub_1C2664048()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1C2664098(uint64_t a1, void *a2)
{
  sub_1C2660AE0(a1, a2, *(void (**)(id))(v2 + 16));
}

uint64_t sub_1C26640A8(uint64_t *a1)
{
  return sub_1C2660BD0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1C26640C8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C2664110(uint64_t a1, void *a2)
{
  sub_1C2660608(a1, a2, *(void (**)(id))(v2 + 16));
}

uint64_t sub_1C2664120(uint64_t *a1)
{
  return sub_1C26606F4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C266413C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 16))(a2);
}

void sub_1C266416C(void *a1, void *a2)
{
  sub_1C2660030(a1, a2, *(void *)(v2 + 16), *(void (**)(void *, uint64_t))(v2 + 24));
}

uint64_t sub_1C2664178()
{
  return objectdestroy_71Tm(MEMORY[0x1E4FBC8D0]);
}

void sub_1C2664190(int a1, void *a2)
{
  sub_1C265FCC8(a1, a2, *(void (**)(id))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1C266419C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C26641D4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2664214()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

id sub_1C2664244(id result)
{
  if ((unint64_t)result >= 3) {
    return result;
  }
  return result;
}

void sub_1C2664258()
{
  if (!qword_1EBB830B0)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB830B0);
    }
  }
}

uint64_t destroy for CachingSharedSummaryTransactionBuilder.PendingWork(uint64_t a1, uint64_t a2)
{
  return sub_1C264CA74(a1, a2, MEMORY[0x1E4FBC8D0]);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for CachingSharedSummaryTransactionBuilder.PendingQueryWork()
{
  return &type metadata for CachingSharedSummaryTransactionBuilder.PendingQueryWork;
}

uint64_t _s14HealthPlatform38CachingSharedSummaryTransactionBuilderC11PendingWorkVwcp_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *_s14HealthPlatform38CachingSharedSummaryTransactionBuilderC11PendingWorkVwca_0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s14HealthPlatform38CachingSharedSummaryTransactionBuilderC11PendingWorkVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t _s14HealthPlatform38CachingSharedSummaryTransactionBuilderC11PendingWorkVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C266443C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CachingSharedSummaryTransactionBuilder.PendingWork()
{
  return &type metadata for CachingSharedSummaryTransactionBuilder.PendingWork;
}

void *initializeBufferWithCopyOfBuffer for CachingSharedSummaryTransactionBuilder.CacheState(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for CachingSharedSummaryTransactionBuilder.CacheState(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for CachingSharedSummaryTransactionBuilder.CacheState(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void **assignWithTake for CachingSharedSummaryTransactionBuilder.CacheState(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for CachingSharedSummaryTransactionBuilder.CacheState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CachingSharedSummaryTransactionBuilder.CacheState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)__n128 result = 0;
    *(_DWORD *)__n128 result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1C2664674(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1C266468C(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for CachingSharedSummaryTransactionBuilder.CacheState()
{
  return &type metadata for CachingSharedSummaryTransactionBuilder.CacheState;
}

void *initializeWithCopy for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CachingSharedSummaryTransactionBuilder.SummaryIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CachingSharedSummaryTransactionBuilder.SummaryIdentifier()
{
  return &type metadata for CachingSharedSummaryTransactionBuilder.SummaryIdentifier;
}

unint64_t sub_1C2664850()
{
  unint64_t result = qword_1EBB82998;
  if (!qword_1EBB82998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82998);
  }
  return result;
}

uint64_t sub_1C2664920(unint64_t a1)
{
  return sub_1C264AD70(a1);
}

uint64_t PluginStorage.uniqueIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginStorage.uniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PluginStorage.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

void *PluginStorage.sourceProfile.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void PluginStorage.sourceProfile.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*PluginStorage.sourceProfile.modify())()
{
  return nullsub_1;
}

uint64_t PluginStorage.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C2641B58(*(void *)(v2 + 24), *(void *)(v2 + 32));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*PluginStorage.data.modify())()
{
  return nullsub_1;
}

uint64_t PluginStorage.pluginIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginStorage.pluginIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*PluginStorage.pluginIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PluginStorage.init(uniqueIdentifier:sourceProfile:data:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  a6[5] = 0;
  a6[6] = 0xE000000000000000;
  return result;
}

unint64_t PluginStorage.debugDescription.getter()
{
  uint64_t v1 = sub_1C277A8A0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + 16);
  unint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  sub_1C277C2D0();
  swift_bridgeObjectRelease();
  unint64_t v14 = 0xD000000000000011;
  unint64_t v15 = 0x80000001C2789E60;
  swift_bridgeObjectRetain();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  if (v5)
  {
    id v6 = v5;
    objc_msgSend(v6, sel_type);
    id v7 = (id)HKStringFromProfileType();
    uint64_t v8 = sub_1C277B850();
    uint64_t v10 = v9;

    v13[0] = v8;
    v13[1] = v10;
    sub_1C277B8D0();
    id v11 = objc_msgSend(v6, sel_identifier);
    sub_1C277A880();

    sub_1C277A850();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_1C277B8D0();

    swift_bridgeObjectRelease();
  }
  sub_1C277B8D0();

  swift_bridgeObjectRelease();
  return v14;
}

uint64_t initializeWithCopy for PluginStorage(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = (void *)a2[2];
  *(void *)(a1 + 16) = v5;
  id v6 = a2 + 3;
  unint64_t v7 = a2[4];
  swift_bridgeObjectRetain();
  id v8 = v5;
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v6;
  }
  else
  {
    uint64_t v9 = *(void *)v6;
    sub_1C263D360(v9, v7);
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v7;
  }
  uint64_t v10 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PluginStorage(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  unint64_t v7 = a2 + 3;
  unint64_t v8 = a2[4];
  if (a1[4] >> 60 != 15)
  {
    if (v8 >> 60 != 15)
    {
      uint64_t v10 = *v7;
      sub_1C263D360(*v7, a2[4]);
      uint64_t v11 = a1[3];
      unint64_t v12 = a1[4];
      a1[3] = v10;
      a1[4] = v8;
      sub_1C263CC84(v11, v12);
      goto LABEL_8;
    }
    sub_1C2664EEC((uint64_t)(a1 + 3));
    goto LABEL_6;
  }
  if (v8 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)v7;
    goto LABEL_8;
  }
  uint64_t v9 = *v7;
  sub_1C263D360(*v7, a2[4]);
  a1[3] = v9;
  a1[4] = v8;
LABEL_8:
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C2664EEC(uint64_t a1)
{
  return a1;
}

void *assignWithTake for PluginStorage(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)a1[2];
  a1[2] = a2[2];

  id v6 = a2 + 3;
  unint64_t v7 = a1[4];
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = a2[4];
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = a1[3];
      a1[3] = *v6;
      a1[4] = v8;
      sub_1C263CC84(v9, v7);
      goto LABEL_6;
    }
    sub_1C2664EEC((uint64_t)(a1 + 3));
  }
  *(_OWORD *)(a1 + 3) = *(_OWORD *)v6;
LABEL_6:
  uint64_t v10 = a2[6];
  a1[5] = a2[5];
  a1[6] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C2664FEC(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_dateSubmitted);
  sub_1C277A810();
}

void sub_1C266504C(id *a1@<X0>, SEL *a2@<X3>, void (*a3)(void)@<X4>, unint64_t *a4@<X5>, void (*a5)(uint64_t)@<X6>, uint64_t *a6@<X8>)
{
  id v10 = [*a1 *a2];
  a3(0);
  sub_1C266645C(a4, a5);
  uint64_t v11 = sub_1C277BBC0();

  *a6 = v11;
}

void sub_1C26650D8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t), SEL *a8)
{
  uint64_t v11 = *a2;
  a5(0);
  sub_1C266645C(a6, a7);
  id v12 = (id)sub_1C277BBB0();
  objc_msgSend(v11, *a8, v12);
}

void sub_1C2665174(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  uint64_t v5 = sub_1C277B850();
  uint64_t v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

void sub_1C26651C8(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_1C277A780();
    unint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v8 = 0xF000000000000000;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_1C266522C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = sub_1C277A770();
  }
  id v8 = (id)v7;
  [v6 *a5];
}

void sub_1C26652A4(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_1C277B850();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_1C2665308(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v7 = sub_1C277B820();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  [v6 *a5];
}

uint64_t sub_1C2665378@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1C277A810();

    uint64_t v6 = sub_1C277A840();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a3;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = sub_1C277A840();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a3;
    uint64_t v10 = 1;
  }

  return v7(v9, v10, 1, v8);
}

void sub_1C266543C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  sub_1C26513A4(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26663F8(a1, (uint64_t)v10);
  uint64_t v11 = *a2;
  uint64_t v12 = sub_1C277A840();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    unint64_t v14 = (void *)sub_1C277A7E0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, v14);
}

char *keypath_get_selector_actionHandlerClassName()
{
  return sel_actionHandlerClassName;
}

void sub_1C2665570(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665590(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_actionHandlerUserData()
{
  return sel_actionHandlerUserData;
}

void sub_1C26655BC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C26655DC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_baseAutomationIdentifier()
{
  return sel_baseAutomationIdentifier;
}

void sub_1C2665608(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665628(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_categoryIdentifier()
{
  return sel_categoryIdentifier;
}

void sub_1C2665654(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665674(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_pinnedContentIdentifier()
{
  return sel_pinnedContentIdentifier;
}

void sub_1C26656A0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C26656C0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_contentKindRawValue()
{
  return sel_contentKindRawValue;
}

void sub_1C26656EC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C266570C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_contentConfigurationProviderClassName()
{
  return sel_contentConfigurationProviderClassName;
}

void sub_1C2665724(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665744(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_executorIdentifier()
{
  return sel_executorIdentifier;
}

void sub_1C2665770(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665790(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_listContentConfigurationProviderClassName()
{
  return sel_listContentConfigurationProviderClassName;
}

void sub_1C26657BC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C26657DC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_dataTypes()
{
  return sel_dataTypes;
}

void sub_1C2665808(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665858(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_dateSubmitted()
{
  return sel_dateSubmitted;
}

void sub_1C26658B8(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (id)sub_1C277A7E0();
  objc_msgSend(v2, sel_setDateSubmitted_, v3);
}

char *keypath_get_selector_favoriteStatusRawValue()
{
  return sel_favoriteStatusRawValue;
}

void sub_1C2665920(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665940(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_featureTags()
{
  return sel_featureTags;
}

void sub_1C2665958(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C26659A8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_feedSection()
{
  return sel_feedSection;
}

id sub_1C2665A04@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_feedSection);
  *a2 = result;
  return result;
}

id sub_1C2665A40(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFeedSection_, *a1);
}

char *keypath_get_selector_hideInDiscover()
{
  return sel_hideInDiscover;
}

id sub_1C2665A60@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_hideInDiscover);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1C2665A94(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHideInDiscover_, *a1);
}

char *keypath_get_selector_hostingControllerClassName()
{
  return sel_hostingControllerClassName;
}

void sub_1C2665AB4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665AD4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_hostViewStyleRawValue()
{
  return sel_hostViewStyleRawValue;
}

void sub_1C2665B00(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665B20(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_keywords()
{
  return sel_keywords;
}

void sub_1C2665B38(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665B88(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_localizedCategoryName()
{
  return sel_localizedCategoryName;
}

void sub_1C2665BE4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665C04(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_localizedDescription()
{
  return sel_localizedDescription;
}

void sub_1C2665C30(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665C50(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_localizedTitle()
{
  return sel_localizedTitle;
}

void sub_1C2665C7C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665C9C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_pluginPackage()
{
  return sel_pluginPackage;
}

void sub_1C2665CC8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665CE8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_profiles()
{
  return sel_profiles;
}

void sub_1C2665D00(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665D50(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_searchSectionHintRawValue()
{
  return sel_searchSectionHintRawValue;
}

id sub_1C2665DAC@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_searchSectionHintRawValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_1C2665DE0(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSearchSectionHintRawValue_, *a1);
}

char *keypath_get_selector_searchSectionRawValue()
{
  return sel_searchSectionRawValue;
}

id sub_1C2665E00@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_searchSectionRawValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_1C2665E34(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSearchSectionRawValue_, *a1);
}

char *keypath_get_selector_sectionSortOrder()
{
  return sel_sectionSortOrder;
}

id sub_1C2665E54@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_sectionSortOrder);
  *a2 = result;
  return result;
}

id sub_1C2665E88(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSectionSortOrder_, *a1);
}

char *keypath_get_selector_sharableModelReferences()
{
  return sel_sharableModelReferences;
}

void sub_1C2665EA8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665EF8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_sortOrder()
{
  return sel_sortOrder;
}

id sub_1C2665F54@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_sortOrder);
  *a2 = result;
  return result;
}

id sub_1C2665F88(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSortOrder_, *a1);
}

char *keypath_get_selector_storyboardIdentifier()
{
  return sel_storyboardIdentifier;
}

void sub_1C2665FA8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2665FC8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_suggestionRelevanceScore()
{
  return sel_suggestionRelevanceScore;
}

id sub_1C2665FF4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_suggestionRelevanceScore);
  *a2 = v4;
  return result;
}

id sub_1C2666028(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSuggestionRelevanceScore_, *a1);
}

char *keypath_get_selector_uniqueIdentifier()
{
  return sel_uniqueIdentifier;
}

void sub_1C2666048(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2666068(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void keypath_set_10Tm(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  id v7 = (id)sub_1C277B820();
  objc_msgSend(v6, *a5, v7);
}

char *keypath_get_selector_userData()
{
  return sel_userData;
}

void sub_1C26660E4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2666104(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_usesPlatformView()
{
  return sel_usesPlatformView;
}

id sub_1C2666130@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_usesPlatformView);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1C2666164(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUsesPlatformView_, *a1);
}

char *keypath_get_selector_viewClassName()
{
  return sel_viewClassName;
}

void sub_1C2666184(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C26661A4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_viewControllerClassName()
{
  return sel_viewControllerClassName;
}

void sub_1C26661D0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C26661F0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_relevantStartDate()
{
  return sel_relevantStartDate;
}

uint64_t sub_1C266621C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2665378(a1, (SEL *)&selRef_relevantStartDate, a2);
}

void sub_1C266623C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_relevantEndDate()
{
  return sel_relevantEndDate;
}

uint64_t sub_1C2666268@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2665378(a1, (SEL *)&selRef_relevantEndDate, a2);
}

void sub_1C2666288(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_relevantRampUpTime()
{
  return sel_relevantRampUpTime;
}

id sub_1C26662B4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_relevantRampUpTime);
  *a2 = v4;
  return result;
}

id sub_1C26662E8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRelevantRampUpTime_, *a1);
}

char *keypath_get_selector_relevantRampDownTime()
{
  return sel_relevantRampDownTime;
}

id sub_1C2666308@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_relevantRampDownTime);
  *a2 = v4;
  return result;
}

id sub_1C266633C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRelevantRampDownTime_, *a1);
}

char *keypath_get_selector_sortHint()
{
  return sel_sortHint;
}

id sub_1C266635C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_sortHint);
  *a2 = result;
  return result;
}

id sub_1C2666390(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSortHint_, *a1);
}

char *keypath_get_selector_indexForSearch()
{
  return sel_indexForSearch;
}

id sub_1C26663B0@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_indexForSearch);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1C26663E4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIndexForSearch_, *a1);
}

uint64_t sub_1C26663F8(uint64_t a1, uint64_t a2)
{
  sub_1C26513A4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C266645C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Publisher.subscribe(on:domain:)(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a2;
  char v9 = *((unsigned char *)a2 + 24);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  uint64_t v13 = v8;
  long long v14 = *(_OWORD *)(a2 + 1);
  char v15 = v9;
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(v4, &v13, a3, a4, v10, v11);
}

uint64_t dispatch thunk of GeneratorScheduler.receiveOn<A>(for:domain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of GeneratorScheduler.subscribeOn<A>(for:domain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t CountryRetrievalRecord.isoCountryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CountryRetrievalRecord.isoCountryCode.modify())()
{
  return nullsub_1;
}

uint64_t CountryRetrievalRecord.provenance.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t CountryRetrievalRecord.provenance.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*CountryRetrievalRecord.provenance.modify())()
{
  return nullsub_1;
}

uint64_t CountryRetrievalRecord.retrieved.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
  uint64_t v4 = sub_1C277A840();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t CountryRetrievalRecord.retrieved.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
  uint64_t v4 = sub_1C277A840();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CountryRetrievalRecord.retrieved.modify())()
{
  return nullsub_1;
}

uint64_t CountryRetrievalRecord.init(isoCountryCode:provenance:retrieved:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  uint64_t v6 = (char *)a5 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
  uint64_t v7 = sub_1C277A840();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a4, v7);
}

BOOL sub_1C26667BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s14HealthPlatform15GenerationPhaseO9hashValueSivg_0()
{
  return sub_1C277C910();
}

uint64_t sub_1C2666818()
{
  return sub_1C277C8D0();
}

uint64_t sub_1C2666844()
{
  uint64_t v1 = 0x6E616E65766F7270;
  if (*v0 != 1) {
    uint64_t v1 = 0x6576656972746572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746E756F436F7369;
  }
}

uint64_t sub_1C26668B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2667BF4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C26668DC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1C26668E8(uint64_t a1)
{
  unint64_t v2 = sub_1C2666B54();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2666924(uint64_t a1)
{
  unint64_t v2 = sub_1C2666B54();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CountryRetrievalRecord.encode(to:)(void *a1)
{
  sub_1C2666F70(0, &qword_1EA304320, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2666B54();
  sub_1C277C9B0();
  v9[15] = 0;
  sub_1C277C720();
  if (!v1)
  {
    type metadata accessor for CountryRetrievalRecord();
    v9[14] = 2;
    sub_1C277A840();
    sub_1C2667520(&qword_1EA304330, MEMORY[0x1E4F27928]);
    sub_1C277C760();
    v9[13] = 1;
    sub_1C277C750();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C2666B54()
{
  unint64_t result = qword_1EA304328;
  if (!qword_1EA304328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304328);
  }
  return result;
}

uint64_t CountryRetrievalRecord.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v25 = sub_1C277A840();
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2666F70(0, &qword_1EA304338, MEMORY[0x1E4FBBDC0]);
  uint64_t v26 = v6;
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for CountryRetrievalRecord();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2666B54();
  sub_1C277C9A0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v20 = v9;
  uint64_t v21 = a1;
  uint64_t v13 = v24;
  uint64_t v12 = v25;
  char v29 = 0;
  *uint64_t v11 = sub_1C277C690();
  v11[1] = v14;
  char v28 = 2;
  sub_1C2667520(&qword_1EA304340, MEMORY[0x1E4F27928]);
  sub_1C277C6D0();
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))((char *)v11 + *(int *)(v20 + 24), v5, v12);
  char v27 = 1;
  uint64_t v19 = 0;
  uint64_t v15 = sub_1C277C6C0();
  uint64_t v16 = (uint64_t)v21;
  uint64_t v17 = v15;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v26);
  v11[2] = v17;
  sub_1C2666FD4((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_0(v16);
  return sub_1C2667038((uint64_t)v11);
}

void sub_1C2666F70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2666B54();
    unint64_t v7 = a3(a1, &type metadata for CountryRetrievalRecord.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C2666FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CountryRetrievalRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2667038(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CountryRetrievalRecord();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CountryRetrievalRecord.hash(into:)()
{
  return sub_1C277B7C0();
}

uint64_t CountryRetrievalRecord.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t sub_1C2667214@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CountryRetrievalRecord.init(from:)(a1, a2);
}

uint64_t sub_1C266722C(void *a1)
{
  return CountryRetrievalRecord.encode(to:)(a1);
}

uint64_t sub_1C2667244()
{
  return sub_1C277C910();
}

uint64_t sub_1C26672FC()
{
  return sub_1C277B7C0();
}

uint64_t sub_1C2667398()
{
  return sub_1C277C910();
}

uint64_t _s14HealthPlatform22CountryRetrievalRecordV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C277C7E0() & 1) == 0 || a1[2] != a2[2]) {
    return 0;
  }
  uint64_t v5 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);

  return MEMORY[0x1F40E52C0]((char *)a1 + v5, (char *)a2 + v5);
}

uint64_t sub_1C26674D8()
{
  return sub_1C2667520(&qword_1EA304350, (void (*)(uint64_t))type metadata accessor for CountryRetrievalRecord);
}

uint64_t sub_1C2667520(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *assignWithCopy for CountryRetrievalRecord(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 24);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C277A840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for CountryRetrievalRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1C277A840();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for CountryRetrievalRecord(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C277A840();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1C2667724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C277A840();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C26677D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C277A840();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C266787C()
{
  uint64_t result = sub_1C277A840();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **assignWithCopy for SourceProfile(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for CountryRetrievalRecord.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CountryRetrievalRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2667AB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CountryRetrievalRecord.CodingKeys()
{
  return &type metadata for CountryRetrievalRecord.CodingKeys;
}

unint64_t sub_1C2667AF0()
{
  unint64_t result = qword_1EA304358;
  if (!qword_1EA304358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304358);
  }
  return result;
}

unint64_t sub_1C2667B48()
{
  unint64_t result = qword_1EA304360;
  if (!qword_1EA304360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304360);
  }
  return result;
}

unint64_t sub_1C2667BA0()
{
  unint64_t result = qword_1EA304368;
  if (!qword_1EA304368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304368);
  }
  return result;
}

uint64_t sub_1C2667BF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F436F7369 && a2 == 0xEE0065646F437972;
  if (v2 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E616E65766F7270 && a2 == 0xEA00000000006563 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6576656972746572 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

int *Publishers.HandleStartAndIdleEvents.init(_:idleTimeInterval:queue:startBlock:idleBlock:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a8, a1, a7);
  unint64_t result = (int *)type metadata accessor for Publishers.HandleStartAndIdleEvents();
  *(double *)(a8 + result[9]) = a9;
  *(void *)(a8 + result[10]) = a2;
  uint64_t v17 = (void *)(a8 + result[11]);
  *uint64_t v17 = a3;
  v17[1] = a4;
  uint64_t v18 = (void *)(a8 + result[12]);
  *uint64_t v18 = a5;
  v18[1] = a6;
  return result;
}

uint64_t *sub_1C2667E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  return sub_1C262B498(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1C2667EE0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1C2667EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1C2667F04()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C2667FC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    unsigned int v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void **)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = *v13;
    *uint64_t v12 = *v13;
    uint64_t v15 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v16 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v19 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    id v21 = v14;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1C2668118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void **)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void **)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *v10;
  uint64_t v12 = *v9;
  *uint64_t v9 = *v10;
  id v13 = v11;

  uint64_t v14 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  uint64_t v17 = (void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C26681F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  uint64_t v11 = (_OWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (_OWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  *(_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C26682A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void **)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void **)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *v9;
  *uint64_t v9 = *v10;

  uint64_t v12 = (_OWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v13 = (_OWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  swift_release();
  *(_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C266836C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C26684D8);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C26684EC(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v20 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v20 = a2 - 1;
              }
              void *v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1C26686F4);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_1C266871C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C2668808()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C260C994();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2668860()
{
  uint64_t v1 = *(void *)(v0 + *(void *)(*(void *)v0 + 152));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  uint64_t v2 = v0 + *(void *)(*(void *)v0 + 160);
  swift_beginAccess();
  sub_1C2630D78(v2, (uint64_t)&v6);
  sub_1C2630D78((uint64_t)&v6, (uint64_t)v4);
  if (v5 != 1 && v5)
  {
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_1C2630BCC((uint64_t)v4);
  }
  else
  {
    sub_1C261F308(v4, (uint64_t)v10);
  }
  sub_1C2630BCC((uint64_t)&v6);
  if (*(void *)(v0 + *(void *)(*(void *)v0 + 168)))
  {
    swift_retain();
    sub_1C277B6A0();
    swift_release();
  }
  uint64_t v6 = 1;
  long long v7 = 0u;
  long long v8 = 0u;
  char v9 = 2;
  swift_beginAccess();
  sub_1C26305D4((uint64_t)&v6, v2);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1C2630F38((uint64_t)v10, (uint64_t)&v6);
  if ((void)v8)
  {
    __swift_project_boxed_opaque_existential_1(&v6, v8);
    sub_1C277B2F0();
    sub_1C2630EAC((uint64_t)v10);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v6);
  }
  else
  {
    sub_1C2630EAC((uint64_t)v10);
    return sub_1C2630EAC((uint64_t)&v6);
  }
}

uint64_t sub_1C26689FC()
{
  return sub_1C277B160();
}

uint64_t sub_1C2668A20()
{
  return sub_1C2668860();
}

uint64_t sub_1C2668A44()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C2668A60()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C2668A7C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1C2668A9C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2668AD4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C2668B0C()
{
  return sub_1C2668808();
}

unint64_t sub_1C2668B1C()
{
  unint64_t result = qword_1EBB806C0;
  if (!qword_1EBB806C0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB806C0);
  }
  return result;
}

uint64_t PluginFeedItem.HostViewStyle.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C277C650();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t PluginFeedItem.HostViewStyle.rawValue.getter()
{
  if (*v0) {
    return 0x656D6F7268436F6ELL;
  }
  else {
    return 0x656D6F726863;
  }
}

uint64_t sub_1C2668C10(char *a1, char *a2)
{
  return sub_1C273DE10(*a1, *a2);
}

uint64_t sub_1C2668C1C@<X0>(char *a1@<X8>)
{
  return PluginFeedItem.HostViewStyle.init(rawValue:)(a1);
}

unint64_t sub_1C2668C2C()
{
  unint64_t result = qword_1EA304370;
  if (!qword_1EA304370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304370);
  }
  return result;
}

uint64_t sub_1C2668C80()
{
  return sub_1C277C910();
}

uint64_t sub_1C2668D00()
{
  sub_1C277B8B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2668D6C()
{
  return sub_1C277C910();
}

uint64_t _s14descr1F1DC3F91C13HostViewStyleOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr1F1DC3F91C13HostViewStyleOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2668F44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *static Plugin.findOrCreatePlugin(_:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2669068();
  sub_1C26322C0();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C277E480;
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 64) = sub_1C263226C();
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  swift_bridgeObjectRetain();
  BOOL v7 = (void *)sub_1C277BCC0();
  int v8 = (void *)sub_1C2768060(a3, (uint64_t)v7);

  char v9 = (void *)sub_1C277B820();
  objc_msgSend(v8, sel_setPackage_, v9);

  return v8;
}

unint64_t sub_1C2669068()
{
  unint64_t result = qword_1EBB85100;
  if (!qword_1EBB85100)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85100);
  }
  return result;
}

id Plugin.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id Plugin.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for Plugin();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id Plugin.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Plugin();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static PluginData.entityName.getter()
{
  return 0x61446E6967756C50;
}

void *static PluginData.findOrCreate(uniqueIdentifier:pluginIdentifier:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  sub_1C26322C0();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C277EF40;
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v12 = sub_1C263226C();
  strcpy((char *)(v10 + 32), "plugin.package");
  *(unsigned char *)(v10 + 47) = -18;
  *(void *)(v10 + 96) = v11;
  *(void *)(v10 + 104) = v12;
  *(void *)(v10 + 64) = v12;
  *(void *)(v10 + 72) = a3;
  *(void *)(v10 + 80) = a4;
  *(void *)(v10 + 136) = v11;
  *(void *)(v10 + 144) = v12;
  *(void *)(v10 + 112) = 0xD000000000000010;
  *(void *)(v10 + 120) = 0x80000001C2789760;
  *(void *)(v10 + 176) = v11;
  *(void *)(v10 + 184) = v12;
  *(void *)(v10 + 152) = a1;
  *(void *)(v10 + 160) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v13 = (void *)sub_1C277BCC0();
  int v14 = (void *)sub_1C276809C(a5, (uint64_t)v13);
  int v15 = (void *)sub_1C277B820();
  objc_msgSend(v14, sel_setUniqueIdentifier_, v15);

  return v14;
}

unint64_t static PluginData.find(uniqueIdentifier:pluginIdentifier:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  sub_1C26322C0();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C277EF40;
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v12 = sub_1C263226C();
  strcpy((char *)(v10 + 32), "plugin.package");
  *(unsigned char *)(v10 + 47) = -18;
  *(void *)(v10 + 96) = v11;
  *(void *)(v10 + 104) = v12;
  *(void *)(v10 + 64) = v12;
  *(void *)(v10 + 72) = a3;
  *(void *)(v10 + 80) = a4;
  *(void *)(v10 + 136) = v11;
  *(void *)(v10 + 144) = v12;
  *(void *)(v10 + 112) = 0xD000000000000010;
  *(void *)(v10 + 120) = 0x80000001C2789760;
  *(void *)(v10 + 176) = v11;
  *(void *)(v10 + 184) = v12;
  *(void *)(v10 + 152) = a1;
  *(void *)(v10 + 160) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v13 = (void *)sub_1C277BCC0();
  unint64_t v14 = sub_1C266A528(a5, (uint64_t)v13, 1);

  return v14;
}

uint64_t PluginData.__allocating_init(context:uniqueIdentifier:)(void *a1)
{
  int v3 = self;
  unsigned int v4 = (void *)sub_1C277B820();
  id v5 = objc_msgSend(v3, sel_entityForName_inManagedObjectContext_, v4, a1);

  if (v5)
  {
    id v6 = objc_msgSend(objc_allocWithZone(v1), sel_initWithEntity_insertIntoManagedObjectContext_, v5, a1);
    objc_super v7 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setUniqueIdentifier_, v7);

    return (uint64_t)v6;
  }
  else
  {
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

unint64_t sub_1C2669680(void *a1, uint64_t a2, char a3)
{
  unsigned int v4 = v3;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  char v9 = (void *)sub_1C277B820();
  id v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  objc_msgSend(v10, sel_setPredicate_, a2);
  type metadata accessor for DataType();
  unint64_t result = sub_1C277C000();
  if (v3) {
    goto LABEL_2;
  }
  unint64_t v12 = result;
  id v37 = v10;
  unint64_t v13 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (v35 >= 2) {
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    unsigned int v4 = sub_1C277C5A0();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v4 = *(NSObject **)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v4 > 1)
    {
LABEL_6:
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1C277B130();
      int v15 = (id *)__swift_project_value_buffer(v14, (uint64_t)qword_1EBB86280);
      unsigned int v4 = sub_1C277B100();
      os_log_type_t v16 = sub_1C277BD20();
      if (os_log_type_enabled(v4, v16))
      {
        int v15 = (id *)v12;
        int v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v17 = 0;
        _os_log_impl(&dword_1C2601000, v4, v16, "Error: duplicate feed item created...", v17, 2u);
        uint64_t v18 = v17;
        unint64_t v12 = (unint64_t)v15;
        MEMORY[0x1C875D230](v18, -1, -1);
      }

      if (v13)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1C277C5A0();
        if (!v19)
        {
LABEL_23:
          swift_bridgeObjectRelease_n();
          sub_1C266AEE8(a1, a3 & 1, &qword_1EA3043A8, (void (*)(uint64_t))type metadata accessor for DataType);
          id v10 = v37;
          sub_1C266B94C();
          swift_allocError();
          swift_willThrow();
LABEL_2:

          return (unint64_t)v4;
        }
      }
      else
      {
        uint64_t v19 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v19) {
          goto LABEL_23;
        }
      }
      uint64_t v20 = (v19 - 1);
      if (v19 >= 1)
      {
        id v21 = 0;
        unint64_t v22 = v12 & 0xC000000000000001;
        char v40 = a3;
        unint64_t v38 = v12 & 0xC000000000000001;
        uint64_t v39 = (id *)v12;
        while (1)
        {
          if (v22) {
            id v23 = (id)MEMORY[0x1C875C230](v21, v12);
          }
          else {
            id v23 = *(id *)(v12 + 8 * (void)v21 + 32);
          }
          id v24 = v23;
          uint64_t v25 = sub_1C277B100();
          os_log_type_t v43 = sub_1C277BD20();
          if (os_log_type_enabled(v25, v43))
          {
            uint64_t v26 = swift_slowAlloc();
            uint64_t v42 = swift_slowAlloc();
            uint64_t v44 = v42;
            *(_DWORD *)uint64_t v26 = 134218242;
            *(void *)(v26 + 4) = v21;
            *(_WORD *)(v26 + 12) = 2080;
            id v27 = v24;
            unsigned int v4 = v20;
            id v28 = objc_msgSend(v27, sel_description);
            log = v25;
            char v29 = a1;
            uint64_t v30 = sub_1C277B850();
            unint64_t v32 = v31;

            unint64_t v22 = v38;
            uint64_t v33 = v30;
            a1 = v29;
            *(void *)(v26 + 14) = sub_1C263FDFC(v33, v32, &v44);

            a3 = v40;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2601000, log, v43, "Existing item %ld: %s", (uint8_t *)v26, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C875D230](v42, -1, -1);
            uint64_t v34 = v26;
            unint64_t v12 = (unint64_t)v39;
            MEMORY[0x1C875D230](v34, -1, -1);

            uint64_t v20 = v4;
            if (v4 == v21) {
              goto LABEL_23;
            }
          }
          else
          {

            if (v20 == v21) {
              goto LABEL_23;
            }
          }
          id v21 = ((char *)v21 + 1);
        }
      }
      __break(1u);
LABEL_33:
      uint64_t v36 = MEMORY[0x1C875C230](0, v12);
      goto LABEL_30;
    }
  }
  int v15 = (id *)v10;
  if (!v4)
  {
LABEL_31:
    swift_bridgeObjectRelease();

    return (unint64_t)v4;
  }
  if ((v12 & 0xC000000000000001) != 0) {
    goto LABEL_33;
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v36 = *(id *)(v12 + 32);
LABEL_30:
    unsigned int v4 = v36;
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C2669B64(void *a1, uint64_t a2, char a3)
{
  unsigned int v4 = v3;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  char v9 = (void *)sub_1C277B820();
  id v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  objc_msgSend(v10, sel_setPredicate_, a2);
  type metadata accessor for Keyword();
  unint64_t result = sub_1C277C000();
  if (v3) {
    goto LABEL_2;
  }
  unint64_t v12 = result;
  id v37 = v10;
  unint64_t v13 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (v35 >= 2) {
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    unsigned int v4 = sub_1C277C5A0();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v4 = *(NSObject **)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v4 > 1)
    {
LABEL_6:
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1C277B130();
      int v15 = (id *)__swift_project_value_buffer(v14, (uint64_t)qword_1EBB86280);
      unsigned int v4 = sub_1C277B100();
      os_log_type_t v16 = sub_1C277BD20();
      if (os_log_type_enabled(v4, v16))
      {
        int v15 = (id *)v12;
        int v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v17 = 0;
        _os_log_impl(&dword_1C2601000, v4, v16, "Error: duplicate feed item created...", v17, 2u);
        uint64_t v18 = v17;
        unint64_t v12 = (unint64_t)v15;
        MEMORY[0x1C875D230](v18, -1, -1);
      }

      if (v13)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1C277C5A0();
        if (!v19)
        {
LABEL_23:
          swift_bridgeObjectRelease_n();
          sub_1C266AEE8(a1, a3 & 1, &qword_1EA3043A0, (void (*)(uint64_t))type metadata accessor for Keyword);
          id v10 = v37;
          sub_1C266B94C();
          swift_allocError();
          swift_willThrow();
LABEL_2:

          return (unint64_t)v4;
        }
      }
      else
      {
        uint64_t v19 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v19) {
          goto LABEL_23;
        }
      }
      uint64_t v20 = (v19 - 1);
      if (v19 >= 1)
      {
        id v21 = 0;
        unint64_t v22 = v12 & 0xC000000000000001;
        char v40 = a3;
        unint64_t v38 = v12 & 0xC000000000000001;
        uint64_t v39 = (id *)v12;
        while (1)
        {
          if (v22) {
            id v23 = (id)MEMORY[0x1C875C230](v21, v12);
          }
          else {
            id v23 = *(id *)(v12 + 8 * (void)v21 + 32);
          }
          id v24 = v23;
          uint64_t v25 = sub_1C277B100();
          os_log_type_t v43 = sub_1C277BD20();
          if (os_log_type_enabled(v25, v43))
          {
            uint64_t v26 = swift_slowAlloc();
            uint64_t v42 = swift_slowAlloc();
            uint64_t v44 = v42;
            *(_DWORD *)uint64_t v26 = 134218242;
            *(void *)(v26 + 4) = v21;
            *(_WORD *)(v26 + 12) = 2080;
            id v27 = v24;
            unsigned int v4 = v20;
            id v28 = objc_msgSend(v27, sel_description);
            log = v25;
            char v29 = a1;
            uint64_t v30 = sub_1C277B850();
            unint64_t v32 = v31;

            unint64_t v22 = v38;
            uint64_t v33 = v30;
            a1 = v29;
            *(void *)(v26 + 14) = sub_1C263FDFC(v33, v32, &v44);

            a3 = v40;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2601000, log, v43, "Existing item %ld: %s", (uint8_t *)v26, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C875D230](v42, -1, -1);
            uint64_t v34 = v26;
            unint64_t v12 = (unint64_t)v39;
            MEMORY[0x1C875D230](v34, -1, -1);

            uint64_t v20 = v4;
            if (v4 == v21) {
              goto LABEL_23;
            }
          }
          else
          {

            if (v20 == v21) {
              goto LABEL_23;
            }
          }
          id v21 = ((char *)v21 + 1);
        }
      }
      __break(1u);
LABEL_33:
      uint64_t v36 = MEMORY[0x1C875C230](0, v12);
      goto LABEL_30;
    }
  }
  int v15 = (id *)v10;
  if (!v4)
  {
LABEL_31:
    swift_bridgeObjectRelease();

    return (unint64_t)v4;
  }
  if ((v12 & 0xC000000000000001) != 0) {
    goto LABEL_33;
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v36 = *(id *)(v12 + 32);
LABEL_30:
    unsigned int v4 = v36;
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C266A048(void *a1, uint64_t a2, char a3)
{
  unsigned int v4 = v3;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  char v9 = (void *)sub_1C277B820();
  id v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  objc_msgSend(v10, sel_setPredicate_, a2);
  type metadata accessor for Plugin();
  unint64_t result = sub_1C277C000();
  if (v3) {
    goto LABEL_2;
  }
  unint64_t v12 = result;
  id v37 = v10;
  unint64_t v13 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (v35 >= 2) {
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    unsigned int v4 = sub_1C277C5A0();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v4 = *(NSObject **)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v4 > 1)
    {
LABEL_6:
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1C277B130();
      int v15 = (id *)__swift_project_value_buffer(v14, (uint64_t)qword_1EBB86280);
      unsigned int v4 = sub_1C277B100();
      os_log_type_t v16 = sub_1C277BD20();
      if (os_log_type_enabled(v4, v16))
      {
        int v15 = (id *)v12;
        int v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v17 = 0;
        _os_log_impl(&dword_1C2601000, v4, v16, "Error: duplicate feed item created...", v17, 2u);
        uint64_t v18 = v17;
        unint64_t v12 = (unint64_t)v15;
        MEMORY[0x1C875D230](v18, -1, -1);
      }

      if (v13)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1C277C5A0();
        if (!v19)
        {
LABEL_23:
          swift_bridgeObjectRelease_n();
          sub_1C266AEE8(a1, a3 & 1, &qword_1EA304398, (void (*)(uint64_t))type metadata accessor for Plugin);
          id v10 = v37;
          sub_1C266B94C();
          swift_allocError();
          swift_willThrow();
LABEL_2:

          return (unint64_t)v4;
        }
      }
      else
      {
        uint64_t v19 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v19) {
          goto LABEL_23;
        }
      }
      uint64_t v20 = (v19 - 1);
      if (v19 >= 1)
      {
        id v21 = 0;
        unint64_t v22 = v12 & 0xC000000000000001;
        char v40 = a3;
        unint64_t v38 = v12 & 0xC000000000000001;
        uint64_t v39 = (id *)v12;
        while (1)
        {
          if (v22) {
            id v23 = (id)MEMORY[0x1C875C230](v21, v12);
          }
          else {
            id v23 = *(id *)(v12 + 8 * (void)v21 + 32);
          }
          id v24 = v23;
          uint64_t v25 = sub_1C277B100();
          os_log_type_t v43 = sub_1C277BD20();
          if (os_log_type_enabled(v25, v43))
          {
            uint64_t v26 = swift_slowAlloc();
            uint64_t v42 = swift_slowAlloc();
            uint64_t v44 = v42;
            *(_DWORD *)uint64_t v26 = 134218242;
            *(void *)(v26 + 4) = v21;
            *(_WORD *)(v26 + 12) = 2080;
            id v27 = v24;
            unsigned int v4 = v20;
            id v28 = objc_msgSend(v27, sel_description);
            log = v25;
            char v29 = a1;
            uint64_t v30 = sub_1C277B850();
            unint64_t v32 = v31;

            unint64_t v22 = v38;
            uint64_t v33 = v30;
            a1 = v29;
            *(void *)(v26 + 14) = sub_1C263FDFC(v33, v32, &v44);

            a3 = v40;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2601000, log, v43, "Existing item %ld: %s", (uint8_t *)v26, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C875D230](v42, -1, -1);
            uint64_t v34 = v26;
            unint64_t v12 = (unint64_t)v39;
            MEMORY[0x1C875D230](v34, -1, -1);

            uint64_t v20 = v4;
            if (v4 == v21) {
              goto LABEL_23;
            }
          }
          else
          {

            if (v20 == v21) {
              goto LABEL_23;
            }
          }
          id v21 = ((char *)v21 + 1);
        }
      }
      __break(1u);
LABEL_33:
      uint64_t v36 = MEMORY[0x1C875C230](0, v12);
      goto LABEL_30;
    }
  }
  int v15 = (id *)v10;
  if (!v4)
  {
LABEL_31:
    swift_bridgeObjectRelease();

    return (unint64_t)v4;
  }
  if ((v12 & 0xC000000000000001) != 0) {
    goto LABEL_33;
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v36 = *(id *)(v12 + 32);
LABEL_30:
    unsigned int v4 = v36;
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C266A528(void *a1, uint64_t a2, char a3)
{
  unsigned int v4 = v3;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  char v9 = (void *)sub_1C277B820();
  id v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  objc_msgSend(v10, sel_setPredicate_, a2);
  type metadata accessor for PluginData();
  unint64_t result = sub_1C277C000();
  if (v3) {
    goto LABEL_2;
  }
  unint64_t v12 = result;
  id v37 = v10;
  unint64_t v13 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (v35 >= 2) {
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    unsigned int v4 = sub_1C277C5A0();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v4 = *(NSObject **)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v4 > 1)
    {
LABEL_6:
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1C277B130();
      int v15 = (id *)__swift_project_value_buffer(v14, (uint64_t)qword_1EBB86280);
      unsigned int v4 = sub_1C277B100();
      os_log_type_t v16 = sub_1C277BD20();
      if (os_log_type_enabled(v4, v16))
      {
        int v15 = (id *)v12;
        int v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v17 = 0;
        _os_log_impl(&dword_1C2601000, v4, v16, "Error: duplicate feed item created...", v17, 2u);
        uint64_t v18 = v17;
        unint64_t v12 = (unint64_t)v15;
        MEMORY[0x1C875D230](v18, -1, -1);
      }

      if (v13)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1C277C5A0();
        if (!v19)
        {
LABEL_23:
          swift_bridgeObjectRelease_n();
          sub_1C266AEE8(a1, a3 & 1, &qword_1EA304390, (void (*)(uint64_t))type metadata accessor for PluginData);
          id v10 = v37;
          sub_1C266B94C();
          swift_allocError();
          swift_willThrow();
LABEL_2:

          return (unint64_t)v4;
        }
      }
      else
      {
        uint64_t v19 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v19) {
          goto LABEL_23;
        }
      }
      uint64_t v20 = (v19 - 1);
      if (v19 >= 1)
      {
        id v21 = 0;
        unint64_t v22 = v12 & 0xC000000000000001;
        char v40 = a3;
        unint64_t v38 = v12 & 0xC000000000000001;
        uint64_t v39 = (id *)v12;
        while (1)
        {
          if (v22) {
            id v23 = (id)MEMORY[0x1C875C230](v21, v12);
          }
          else {
            id v23 = *(id *)(v12 + 8 * (void)v21 + 32);
          }
          id v24 = v23;
          uint64_t v25 = sub_1C277B100();
          os_log_type_t v43 = sub_1C277BD20();
          if (os_log_type_enabled(v25, v43))
          {
            uint64_t v26 = swift_slowAlloc();
            uint64_t v42 = swift_slowAlloc();
            uint64_t v44 = v42;
            *(_DWORD *)uint64_t v26 = 134218242;
            *(void *)(v26 + 4) = v21;
            *(_WORD *)(v26 + 12) = 2080;
            id v27 = v24;
            unsigned int v4 = v20;
            id v28 = objc_msgSend(v27, sel_description);
            log = v25;
            char v29 = a1;
            uint64_t v30 = sub_1C277B850();
            unint64_t v32 = v31;

            unint64_t v22 = v38;
            uint64_t v33 = v30;
            a1 = v29;
            *(void *)(v26 + 14) = sub_1C263FDFC(v33, v32, &v44);

            a3 = v40;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2601000, log, v43, "Existing item %ld: %s", (uint8_t *)v26, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C875D230](v42, -1, -1);
            uint64_t v34 = v26;
            unint64_t v12 = (unint64_t)v39;
            MEMORY[0x1C875D230](v34, -1, -1);

            uint64_t v20 = v4;
            if (v4 == v21) {
              goto LABEL_23;
            }
          }
          else
          {

            if (v20 == v21) {
              goto LABEL_23;
            }
          }
          id v21 = ((char *)v21 + 1);
        }
      }
      __break(1u);
LABEL_33:
      uint64_t v36 = MEMORY[0x1C875C230](0, v12);
      goto LABEL_30;
    }
  }
  int v15 = (id *)v10;
  if (!v4)
  {
LABEL_31:
    swift_bridgeObjectRelease();

    return (unint64_t)v4;
  }
  if ((v12 & 0xC000000000000001) != 0) {
    goto LABEL_33;
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v36 = *(id *)(v12 + 32);
LABEL_30:
    unsigned int v4 = v36;
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C266AA10(void *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  char v9 = (void *)sub_1C277B820();
  id v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  objc_msgSend(v10, sel_setPredicate_, a2);
  type metadata accessor for FeedSection();
  unint64_t result = sub_1C277C000();
  if (v3) {
    goto LABEL_2;
  }
  unint64_t v12 = result;
  id v37 = v10;
  unint64_t v13 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (v35 >= 2) {
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    unsigned int v4 = sub_1C277C5A0();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v4 = *(NSObject **)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v4 > 1)
    {
LABEL_6:
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1C277B130();
      int v15 = (void *)__swift_project_value_buffer(v14, (uint64_t)qword_1EBB86280);
      unsigned int v4 = sub_1C277B100();
      os_log_type_t v16 = sub_1C277BD20();
      if (os_log_type_enabled(v4, v16))
      {
        int v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v17 = 0;
        _os_log_impl(&dword_1C2601000, v4, v16, "Error: duplicate feed item created...", v17, 2u);
        MEMORY[0x1C875D230](v17, -1, -1);
      }

      if (v13)
      {
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1C277C5A0();
        if (!v18)
        {
LABEL_24:
          swift_bridgeObjectRelease_n();
          sub_1C266B40C(a1, a3 & 1);
          id v10 = v37;
          sub_1C266B94C();
          swift_allocError();
          swift_willThrow();
LABEL_2:

          return (unint64_t)v4;
        }
      }
      else
      {
        uint64_t v18 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v18) {
          goto LABEL_24;
        }
      }
      unsigned int v4 = (v18 - 1);
      if (v18 >= 1)
      {
        uint64_t v19 = 0;
        unint64_t v42 = v12 & 0xC000000000000001;
        unint64_t v38 = v12;
        uint64_t v39 = a1;
        if ((v12 & 0xC000000000000001) == 0) {
          goto LABEL_17;
        }
        while (1)
        {
          for (id i = (id)MEMORY[0x1C875C230](v19, v12); ; id i = *(id *)(v12 + 8 * (void)v19 + 32))
          {
            id v21 = i;
            unint64_t v22 = sub_1C277B100();
            os_log_type_t v23 = sub_1C277BD20();
            if (os_log_type_enabled(v22, v23))
            {
              uint64_t v24 = swift_slowAlloc();
              uint64_t v41 = swift_slowAlloc();
              uint64_t v43 = v41;
              *(_DWORD *)uint64_t v24 = 134218242;
              *(void *)(v24 + 4) = v19;
              *(_WORD *)(v24 + 12) = 2080;
              id v25 = v21;
              id v26 = objc_msgSend(v25, sel_description);
              os_log_type_t type = v23;
              id v27 = v19;
              id v28 = v4;
              uint64_t v29 = a3;
              uint64_t v30 = sub_1C277B850();
              unint64_t v32 = v31;

              uint64_t v33 = v30;
              a3 = v29;
              unsigned int v4 = v28;
              uint64_t v19 = v27;
              *(void *)(v24 + 14) = sub_1C263FDFC(v33, v32, &v43);

              a1 = v39;
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1C2601000, v22, type, "Existing item %ld: %s", (uint8_t *)v24, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1C875D230](v41, -1, -1);
              uint64_t v34 = v24;
              unint64_t v12 = v38;
              MEMORY[0x1C875D230](v34, -1, -1);

              if (v4 == v27) {
                goto LABEL_24;
              }
            }
            else
            {

              if (v4 == v19) {
                goto LABEL_24;
              }
            }
            uint64_t v19 = ((char *)v19 + 1);
            if (v42) {
              break;
            }
LABEL_17:
            ;
          }
        }
      }
      __break(1u);
LABEL_34:
      uint64_t v36 = MEMORY[0x1C875C230](0, v12);
      goto LABEL_31;
    }
  }
  int v15 = v10;
  if (!v4)
  {
LABEL_32:
    swift_bridgeObjectRelease();

    return (unint64_t)v4;
  }
  if ((v12 & 0xC000000000000001) != 0) {
    goto LABEL_34;
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v36 = *(id *)(v12 + 32);
LABEL_31:
    unsigned int v4 = v36;
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

void sub_1C266AEE8(void *a1, char a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v8 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  if (!v8)
  {
    if (qword_1EBB86260 == -1)
    {
LABEL_11:
      uint64_t v19 = sub_1C277B130();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EBB86280);
      uint64_t v20 = sub_1C277B100();
      os_log_type_t v21 = sub_1C277BD30();
      if (os_log_type_enabled(v20, v21))
      {
        unint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v22 = 0;
        _os_log_impl(&dword_1C2601000, v20, v21, "No coordinator, unable to reset cache version", v22, 2u);
        MEMORY[0x1C875D230](v22, -1, -1);
      }

      return;
    }
LABEL_24:
    swift_once();
    goto LABEL_11;
  }
  char v9 = v8;
  id v10 = objc_msgSend(v8, sel_persistentStores);
  sub_1C2644ED8(0, &qword_1EBB84920);
  unint64_t v11 = sub_1C277BA40();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_4;
    }
  }
  else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    uint64_t v30 = a4;
    if ((v11 & 0xC000000000000001) != 0)
    {
      id v12 = (id)MEMORY[0x1C875C230](0, v11);
LABEL_7:
      unint64_t v13 = v12;
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(v9, sel_metadataForPersistentStore_, v13);
      sub_1C277B760();

      sub_1C2689C60(0xD000000000000023, 0x80000001C278A4E0, v31);
      sub_1C262F2E4((uint64_t)v31);
      swift_bridgeObjectRetain();
      int v15 = (void *)sub_1C277B750();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setMetadata_forPersistentStore_, v15, v13);

      *(void *)&v31[0] = 0;
      unsigned __int8 v16 = objc_msgSend(a1, sel_save_, v31);
      int v17 = *(void **)&v31[0];
      if (v16)
      {
        if (a2)
        {
          *(void *)&v31[0] = 0;
          *((void *)&v31[0] + 1) = 0xE000000000000000;
          id v29 = v17;
          sub_1C277C2D0();
          sub_1C277B8D0();
          sub_1C266B9A0(0, a3, v30);
          sub_1C277B860();
          sub_1C277B8D0();
          swift_bridgeObjectRelease();
          sub_1C277B8D0();
          sub_1C277C560();
          __break(1u);
        }
        else
        {
          id v18 = *(id *)&v31[0];

          swift_bridgeObjectRelease();
        }
      }
      else
      {
        id v23 = *(id *)&v31[0];
        swift_bridgeObjectRelease();
        sub_1C277A620();

        swift_willThrow();
      }
      return;
    }
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v12 = *(id *)(v11 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1C277B130();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EBB86280);
  id v26 = sub_1C277B100();
  os_log_type_t v27 = sub_1C277BD30();
  if (os_log_type_enabled(v26, v27))
  {
    id v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v28 = 0;
    _os_log_impl(&dword_1C2601000, v26, v27, "No persistent stores, unable to reset cache version", v28, 2u);
    MEMORY[0x1C875D230](v28, -1, -1);
  }
}

void sub_1C266B40C(void *a1, char a2)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  type metadata accessor for FeedSection();
  id v4 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  if (!v4)
  {
    if (qword_1EBB86260 == -1)
    {
LABEL_11:
      uint64_t v15 = sub_1C277B130();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EBB86280);
      unsigned __int8 v16 = sub_1C277B100();
      os_log_type_t v17 = sub_1C277BD30();
      if (os_log_type_enabled(v16, v17))
      {
        id v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v18 = 0;
        _os_log_impl(&dword_1C2601000, v16, v17, "No coordinator, unable to reset cache version", v18, 2u);
        MEMORY[0x1C875D230](v18, -1, -1);
      }

      return;
    }
LABEL_24:
    swift_once();
    goto LABEL_11;
  }
  id v5 = v4;
  id v6 = objc_msgSend(v4, sel_persistentStores);
  sub_1C2644ED8(0, &qword_1EBB84920);
  unint64_t v7 = sub_1C277BA40();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_4;
    }
  }
  else if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    if ((v7 & 0xC000000000000001) != 0)
    {
      id v8 = (id)MEMORY[0x1C875C230](0, v7);
LABEL_7:
      char v9 = v8;
      swift_bridgeObjectRelease();
      id v10 = objc_msgSend(v5, sel_metadataForPersistentStore_, v9);
      sub_1C277B760();

      sub_1C2689C60(0xD000000000000023, 0x80000001C278A4E0, v26);
      sub_1C262F2E4((uint64_t)v26);
      swift_bridgeObjectRetain();
      unint64_t v11 = (void *)sub_1C277B750();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setMetadata_forPersistentStore_, v11, v9);

      *(void *)&v26[0] = 0;
      unsigned __int8 v12 = objc_msgSend(a1, sel_save_, v26);
      unint64_t v13 = *(void **)&v26[0];
      if (v12)
      {
        if (a2)
        {
          *(void *)&v26[0] = 0;
          *((void *)&v26[0] + 1) = 0xE000000000000000;
          id v25 = v13;
          sub_1C277C2D0();
          sub_1C277B8D0();
          sub_1C266B9A0(0, &qword_1EA304380, (void (*)(uint64_t))type metadata accessor for FeedSection);
          sub_1C277B860();
          sub_1C277B8D0();
          swift_bridgeObjectRelease();
          sub_1C277B8D0();
          sub_1C277C560();
          __break(1u);
        }
        else
        {
          id v14 = *(id *)&v26[0];

          swift_bridgeObjectRelease();
        }
      }
      else
      {
        id v19 = *(id *)&v26[0];
        swift_bridgeObjectRelease();
        sub_1C277A620();

        swift_willThrow();
      }
      return;
    }
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v8 = *(id *)(v7 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C277B130();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EBB86280);
  unint64_t v22 = sub_1C277B100();
  os_log_type_t v23 = sub_1C277BD30();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_1C2601000, v22, v23, "No persistent stores, unable to reset cache version", v24, 2u);
    MEMORY[0x1C875D230](v24, -1, -1);
  }
}

unint64_t sub_1C266B94C()
{
  unint64_t result = qword_1EA304378;
  if (!qword_1EA304378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304378);
  }
  return result;
}

uint64_t sub_1C266B9A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t Publisher<>.collectAndReduceOutput()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a3;
  uint64_t v5 = sub_1C277B250();
  uint64_t v17 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)v15 - v6;
  v15[1] = swift_getAssociatedTypeWitness();
  swift_getWitnessTable();
  uint64_t v8 = sub_1C277B1E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)v15 - v10;
  sub_1C277B590();
  unsigned __int8 v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a1;
  uint64_t v12[3] = a2;
  void v12[4] = v16;
  sub_1C277B500();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v5);
  swift_getWitnessTable();
  uint64_t v13 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_1C266BC44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v11 = &v14[-v10];
  uint64_t v12 = *a1;
  sub_1C277BCA0();
  uint64_t v19 = v12;
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = AssociatedTypeWitness;
  sub_1C277BB20();
  swift_getWitnessTable();
  sub_1C277B9B0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
}

uint64_t sub_1C266BDC4()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C266BDD4(uint64_t *a1)
{
  return sub_1C266BC44(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1C266BDE0()
{
  return sub_1C277BC90();
}

BOOL Subscribers.SubscriptionStatus.isActive.getter()
{
  sub_1C2630D78(v0, (uint64_t)v3);
  BOOL v1 = v3[40] < 2u;
  sub_1C2630BCC((uint64_t)v3);
  return v1;
}

uint64_t _s18SubscriptionStatusOwca(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 <= 1) {
      __swift_destroy_boxed_opaque_existential_0(a1);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v7 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v7 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      long long v8 = *a2;
      long long v9 = a2[1];
      *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
      *(_OWORD *)a1 = v8;
      *(_OWORD *)(a1 + 16) = v9;
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t _s18SubscriptionStatusOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t _s18SubscriptionStatusOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C266C048(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1C266C064(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Subscribers.SubscriptionStatus()
{
  return &type metadata for Subscribers.SubscriptionStatus;
}

id static OrchestrationAnchor.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  BOOL v1 = (void *)sub_1C277B820();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1C266C108(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C266C128(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_planner()
{
  return sel_planner;
}

void sub_1C266C154(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C266C174(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_criteria()
{
  return sel_criteria;
}

void sub_1C266C1A0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C266C1C0(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_encodedAnchorSet()
{
  return sel_encodedAnchorSet;
}

void sub_1C266C1EC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_encodedAnchorSet);
  uint64_t v4 = sub_1C277A780();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1C266C248(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_profileIdentifier()
{
  return sel_profileIdentifier;
}

void sub_1C266C274(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C266C294(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void keypath_setTm(void *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void), SEL *a6)
{
  uint64_t v7 = *a2;
  id v8 = (id)a5(*a1, a1[1]);
  objc_msgSend(v7, *a6, v8);
}

uint64_t sub_1C266C31C(uint64_t a1)
{
  uint64_t v20 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  id v8 = (void *)MEMORY[0x1E4FBC860];
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v9 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    uint64_t v14 = 8 * i;
    uint64_t v15 = *(void *)(*(void *)(a1 + 48) + v14);
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + v14);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C2690660(0, v8[2] + 1, 1, v8);
      id v8 = (void *)result;
    }
    unint64_t v18 = v8[2];
    unint64_t v17 = v8[3];
    if (v18 >= v17 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C2690660((void *)(v17 > 1), v18 + 1, 1, v8);
      id v8 = (void *)result;
    }
    _OWORD v8[2] = v18 + 1;
    uint64_t v19 = &v8[2 * v18];
    v19[4] = v15;
    v19[5] = v16;
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v5) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v20 + 8 * v11);
    ++v7;
    if (!v12)
    {
      int64_t v7 = v11 + 1;
      if (v11 + 1 >= v5) {
        goto LABEL_27;
      }
      unint64_t v12 = *(void *)(v20 + 8 * v7);
      if (!v12)
      {
        int64_t v7 = v11 + 2;
        if (v11 + 2 >= v5) {
          goto LABEL_27;
        }
        unint64_t v12 = *(void *)(v20 + 8 * v7);
        if (!v12)
        {
          int64_t v7 = v11 + 3;
          if (v11 + 3 >= v5) {
            goto LABEL_27;
          }
          unint64_t v12 = *(void *)(v20 + 8 * v7);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v4 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v5)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v8;
  }
  unint64_t v12 = *(void *)(v20 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v20 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C266C514(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v26 = *(void *)(a1 + 16);
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_1C2659E40(0, v1, 0);
  uint64_t v2 = v28;
  uint64_t result = sub_1C2751C28(a1);
  uint64_t v5 = result;
  uint64_t v7 = v26;
  uint64_t v6 = a1;
  uint64_t v8 = 0;
  uint64_t v9 = a1 + 64;
  uint64_t v10 = a1 + 80;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v6 + 32))
  {
    unint64_t v12 = (unint64_t)v5 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v6 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v13 = *(void *)(*(void *)(v6 + 48) + 8 * v5);
    uint64_t v14 = *(void *)(*(void *)(v6 + 56) + 8 * v5);
    unint64_t v16 = *(void *)(v28 + 16);
    unint64_t v15 = *(void *)(v28 + 24);
    if (v16 >= v15 >> 1)
    {
      uint64_t v24 = v9;
      uint64_t v25 = v4;
      uint64_t v23 = v10;
      uint64_t result = sub_1C2659E40(v15 > 1, v16 + 1, 1);
      uint64_t v10 = v23;
      uint64_t v9 = v24;
      uint64_t v4 = v25;
      uint64_t v7 = v26;
      uint64_t v6 = a1;
    }
    *(void *)(v28 + 16) = v16 + 1;
    uint64_t v17 = v28 + 16 * v16;
    *(void *)(v17 + 32) = v13;
    *(void *)(v17 + 40) = v14;
    int64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    if (v5 >= v11) {
      goto LABEL_25;
    }
    uint64_t v18 = *(void *)(v9 + 8 * v12);
    if ((v18 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(v6 + 36) != v4) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 & (-2 << (v5 & 0x3F));
    if (v19)
    {
      int64_t v11 = __clz(__rbit64(v19)) | v5 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v20 = v12 + 1;
      unint64_t v21 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v9 + 8 * v20);
        if (v22)
        {
LABEL_20:
          int64_t v11 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v12)
          {
            unint64_t v22 = *(void *)(v10 + 8 * v12++);
            if (v22)
            {
              unint64_t v20 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v8;
    uint64_t v5 = v11;
    if (v8 == v7) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t static InputSignalIdentifier.databaseChangesQuery.getter()
{
  return sub_1C277AED0();
}

uint64_t static InputSignalSet.LookupKey.databaseChangesQuery.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C277AED0();
  type metadata accessor for DatabaseChangesQueryInputSignal();
  return sub_1C277ACD0();
}

uint64_t type metadata accessor for DatabaseChangesQueryInputSignal()
{
  return self;
}

void *DatabaseChangesQueryInputSignal.__allocating_init(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1C267A8AC(a1, a3, a4, a5, v5, ObjectType, a2);
}

void *DatabaseChangesQueryInputSignal.__allocating_init(context:observer:healthStore:changesObserver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = *(void *)(a6 + 24);
  uint64_t v14 = *(void *)(a6 + 32);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1(a6, v13);
  unint64_t v16 = sub_1C267AA98(a1, a2, a3, a4, a5, v15, v6, v13, v14);
  __swift_destroy_boxed_opaque_existential_0(a6);
  return v16;
}

void *DatabaseChangesQueryInputSignal.init(context:observer:healthStore:changesObserver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = *(void *)(a6 + 24);
  uint64_t v14 = *(void *)(a6 + 32);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1(a6, v13);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  unint64_t v19 = sub_1C267A538(a1, a2, a3, a4, a5, (uint64_t)v17, v6, v13, v14);
  __swift_destroy_boxed_opaque_existential_0(a6);
  return v19;
}

uint64_t DatabaseChangesQueryInputSignal.Anchor.init(anchor:lastUpdateAnchors:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t DatabaseChangesQueryInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1C266CA60(uint64_t a1)
{
  sub_1C26482E4(v1 + 56, (uint64_t)v15);
  uint64_t v3 = v16;
  uint64_t v4 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  uint64_t v5 = *(os_unfair_lock_s **)(v1 + 96);
  uint64_t v6 = (void **)&v5[4];
  uint64_t v7 = v5 + 8;
  os_unfair_lock_lock(v5 + 8);
  sub_1C266CBA8(v6, &v14);
  os_unfair_lock_unlock(v7);
  uint64_t v8 = v14;
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = a1;
  int64_t v11 = *(void (**)(uint64_t, void *, void (*)(uint64_t, uint64_t, void *), uint64_t, uint64_t, uint64_t))(v4 + 8);
  swift_retain();
  uint64_t v12 = swift_bridgeObjectRetain();
  v11(v12, v8, sub_1C267C314, v10, v3, v4);
  swift_release();
  swift_release();

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
}

id sub_1C266CBA8@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = *a1;
  return v2;
}

void sub_1C266CBD8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v101 = a1;
  uint64_t v8 = sub_1C277AEE0();
  uint64_t v104 = *(void *)(v8 - 8);
  uint64_t v105 = v8;
  MEMORY[0x1F4188790](v8);
  id v103 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1C277B130();
  uint64_t v10 = *(void *)(v106 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v106);
  uint64_t v100 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v98 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v98 - v16;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v19 = Strong;
  uint64_t v102 = v10;
  if (a3)
  {
    swift_getObjectType();
    id v20 = a3;
    sub_1C277AC30();
    id v21 = a3;
    swift_retain();
    id v22 = a3;
    swift_retain();
    uint64_t v23 = sub_1C277B100();
    os_log_type_t v24 = sub_1C277BD20();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v99 = v19;
      uint64_t v26 = v25;
      id v107 = (void *)swift_slowAlloc();
      unint64_t v108 = (void *)swift_slowAlloc();
      char v109 = v108;
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v101 = v26 + 4;
      uint64_t v27 = v103;
      sub_1C277AED0();
      sub_1C267B0A8(&qword_1EBB841D8, 255, MEMORY[0x1E4F66E78]);
      uint64_t v28 = v105;
      uint64_t v29 = a5;
      uint64_t v30 = sub_1C277C7B0();
      unint64_t v32 = v31;
      (*(void (**)(char *, uint64_t))(v104 + 8))(v27, v28);
      uint64_t v33 = v30;
      a5 = v29;
      uint64_t v111 = sub_1C263FDFC(v33, v32, (uint64_t *)&v109);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2112;
      id v34 = a3;
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v111 = v35;
      sub_1C277C0D0();
      uint64_t v36 = v107;
      void *v107 = v35;

      _os_log_impl(&dword_1C2601000, v23, v24, "[%s] Query failed: %@; attempting to restart query.",
        (uint8_t *)v26,
        0x16u);
      sub_1C264E608();
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v36, -1, -1);
      uint64_t v37 = (uint64_t)v108;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v37, -1, -1);
      uint64_t v38 = v26;
      uint64_t v19 = v99;
      MEMORY[0x1C875D230](v38, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v102 + 8))(v17, v106);
    if (qword_1EA303F18 != -1) {
      swift_once();
    }
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = v19;
    *(void *)(v44 + 24) = a5;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C2721A14((uint64_t)sub_1C267C3F8, v44);
    swift_release();

    swift_release();
    return;
  }
  unint64_t v108 = (void *)a2;
  if (!a2)
  {
    swift_getObjectType();
    sub_1C277AC30();
    swift_retain_n();
    char v45 = sub_1C277B100();
    os_log_type_t v46 = sub_1C277BD40();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      id v107 = (void *)swift_slowAlloc();
      char v109 = v107;
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v100 = (char *)(v47 + 4);
      unint64_t v48 = v103;
      sub_1C277AED0();
      sub_1C267B0A8(&qword_1EBB841D8, 255, MEMORY[0x1E4F66E78]);
      uint64_t v49 = v105;
      uint64_t v50 = sub_1C277C7B0();
      unint64_t v52 = v51;
      (*(void (**)(char *, uint64_t))(v104 + 8))(v48, v49);
      uint64_t v111 = sub_1C263FDFC(v50, v52, (uint64_t *)&v109);
      sub_1C277C0D0();
      swift_release_n();
      a2 = (uint64_t)v108;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v45, v46, "[%s] Initial update; no changed types (empty database?)", v47, 0xCu);
      uint64_t v53 = v107;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v53, -1, -1);
      MEMORY[0x1C875D230](v47, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v54 = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v15, v106);
    uint64_t v55 = v19;
    goto LABEL_40;
  }
  uint64_t v99 = Strong;
  unint64_t v39 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1C277C1C0();
    if (v40) {
      goto LABEL_8;
    }
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_36:
    uint64_t v78 = v99;
    swift_getObjectType();
    id v79 = v100;
    sub_1C277AC30();
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v80 = sub_1C277B100();
    os_log_type_t v81 = sub_1C277BD40();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = swift_slowAlloc();
      id v107 = (void *)swift_slowAlloc();
      char v109 = v107;
      *(_DWORD *)uint64_t v82 = 136315394;
      uint64_t v83 = v103;
      sub_1C277AED0();
      sub_1C267B0A8(&qword_1EBB841D8, 255, MEMORY[0x1E4F66E78]);
      uint64_t v84 = v105;
      uint64_t v85 = sub_1C277C7B0();
      unint64_t v87 = v86;
      (*(void (**)(char *, uint64_t))(v104 + 8))(v83, v84);
      uint64_t v111 = sub_1C263FDFC(v85, v87, (uint64_t *)&v109);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v82 + 12) = 2080;
      uint64_t v88 = swift_bridgeObjectRetain();
      uint64_t v89 = MEMORY[0x1C875B960](v88, MEMORY[0x1E4FBB1A0]);
      unint64_t v91 = v90;
      swift_bridgeObjectRelease();
      uint64_t v111 = sub_1C263FDFC(v89, v91, (uint64_t *)&v109);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v80, v81, "[%s] Types changed: %s", (uint8_t *)v82, 0x16u);
      int64_t v92 = v107;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v92, -1, -1);
      MEMORY[0x1C875D230](v82, -1, -1);

      uint64_t v54 = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v100, v106);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      uint64_t v54 = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v79, v106);
    }
    uint64_t v55 = v78;
    a2 = (uint64_t)v108;
LABEL_40:
    BOOL v93 = *(os_unfair_lock_s **)(v55 + 96);
    MEMORY[0x1F4188790](v54);
    *(&v98 - 2) = a2;
    *(&v98 - 1) = v94;
    swift_retain();
    os_unfair_lock_lock(v93 + 8);
    sub_1C267C31C((uint64_t)&v93[4], &v109);
    os_unfair_lock_unlock(v93 + 8);
    swift_release();
    uint64_t v96 = v109;
    uint64_t v95 = v110;
    swift_getObjectType();
    char v109 = v96;
    uint64_t v110 = v95;
    uint64_t v111 = v55;
    type metadata accessor for DatabaseChangesQueryInputSignal();
    sub_1C267B0A8(&qword_1EBB82978, v97, (void (*)(uint64_t))type metadata accessor for DatabaseChangesQueryInputSignal);
    sub_1C277AE40();
    swift_bridgeObjectRelease();
    swift_release();

    return;
  }
  uint64_t v40 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (!v40) {
    goto LABEL_17;
  }
LABEL_8:
  uint64_t v114 = MEMORY[0x1E4FBC860];
  sub_1C264872C(0, v40 & ~(v40 >> 63), 0);
  if (v39)
  {
    uint64_t v41 = sub_1C277C460();
    char v43 = 1;
  }
  else
  {
    uint64_t v41 = sub_1C267A7FC(a2);
    char v43 = v56 & 1;
  }
  uint64_t v111 = v41;
  uint64_t v112 = v42;
  char v113 = v43;
  if ((v40 & 0x8000000000000000) == 0)
  {
    uint64_t v57 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0) {
      uint64_t v57 = a2;
    }
    id v107 = (void *)v57;
    do
    {
      while (1)
      {
        uint64_t v65 = v111;
        uint64_t v64 = v112;
        char v66 = v113;
        sub_1C267A630(v111, v112, v113, a2);
        uint64_t v68 = v67;
        id v69 = objc_msgSend(v67, sel_sensitiveLoggingIdentifier);
        uint64_t v70 = sub_1C277B850();
        uint64_t v72 = v71;

        uint64_t v73 = v114;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C264872C(0, *(void *)(v73 + 16) + 1, 1);
          uint64_t v73 = v114;
        }
        unint64_t v75 = *(void *)(v73 + 16);
        unint64_t v74 = *(void *)(v73 + 24);
        if (v75 >= v74 >> 1)
        {
          sub_1C264872C(v74 > 1, v75 + 1, 1);
          uint64_t v73 = v114;
        }
        *(void *)(v73 + 16) = v75 + 1;
        uint64_t v76 = v73 + 16 * v75;
        *(void *)(v76 + 32) = v70;
        *(void *)(v76 + 40) = v72;
        if (v39) {
          break;
        }
        a2 = (uint64_t)v108;
        sub_1C2751A50(v65, v64, v66, (uint64_t)v108);
        uint64_t v59 = v58;
        uint64_t v61 = v60;
        char v63 = v62;
        sub_1C26431E8(v65, v64, v66);
        uint64_t v111 = v59;
        uint64_t v112 = v61;
        char v113 = v63 & 1;
        if (!--v40) {
          goto LABEL_35;
        }
      }
      a2 = (uint64_t)v108;
      if ((v66 & 1) == 0) {
        goto LABEL_43;
      }
      if (sub_1C277C4A0()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1C267C338();
      unint64_t v77 = (void (*)(void **, void))sub_1C277B780();
      sub_1C277C540();
      v77(&v109, 0);
      --v40;
    }
    while (v40);
LABEL_35:
    sub_1C26431E8(v111, v112, v113);
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  __break(1u);
LABEL_43:
  __break(1u);
}

uint64_t DatabaseChangesQueryInputSignal.identifier.getter()
{
  return sub_1C277AED0();
}

uint64_t sub_1C266D8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C277AEE0();
  uint64_t v23 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C277B130();
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C277AC30();
  swift_retain_n();
  uint64_t v9 = sub_1C277B100();
  os_log_type_t v10 = sub_1C277BD40();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v22 = a2;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v26 = v20;
    uint64_t v21 = v6;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v19 = v12 + 4;
    sub_1C277AED0();
    sub_1C267B0A8(&qword_1EBB841D8, 255, MEMORY[0x1E4F66E78]);
    uint64_t v13 = sub_1C277C7B0();
    unint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
    uint64_t v25 = sub_1C263FDFC(v13, v15, &v26);
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v9, v10, "[%s] Device unlocked; retrying.", v12, 0xCu);
    uint64_t v16 = v20;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v16, -1, -1);
    uint64_t v17 = v12;
    a2 = v22;
    MEMORY[0x1C875D230](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v21);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  }
  return sub_1C266CA60(a2);
}

uint64_t sub_1C266DC2C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = a3;
  uint64_t v5 = a1;
  uint64_t v6 = a4;
  uint64_t v7 = *(void **)(a1 + 8);
  if (!a2 || !a3)
  {
    swift_bridgeObjectRetain();
LABEL_50:
    uint64_t v38 = v7;
    unint64_t v39 = *(void **)v5;
    id v40 = v4;
    swift_bridgeObjectRelease();

    *(void *)uint64_t v5 = v4;
    *(void *)(v5 + 8) = v38;
    *uint64_t v6 = v4;
    v6[1] = v38;
    id v41 = v40;
    return swift_bridgeObjectRetain();
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
    unint64_t v47 = 0;
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    unint64_t v10 = sub_1C277C470() | 0x8000000000000000;
  }
  else
  {
    uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v8 = ~v11;
    unint64_t v47 = a2 + 64;
    uint64_t v12 = -v11;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a2 + 64);
    unint64_t v10 = a2;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char v45 = v4;
  id v49 = v4;
  uint64_t v14 = 0;
  int64_t v46 = (unint64_t)(v8 + 64) >> 6;
  for (i = v10; ; unint64_t v10 = i)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      if (!sub_1C277C530()) {
        goto LABEL_49;
      }
      sub_1C2644ED8(0, &qword_1EBB80D80);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      uint64_t v17 = v14;
      uint64_t v15 = v9;
      id v18 = v50;
      if (!v50) {
        goto LABEL_49;
      }
    }
    else
    {
      if (v9)
      {
        uint64_t v15 = (v9 - 1) & v9;
        unint64_t v16 = __clz(__rbit64(v9)) | (v14 << 6);
        uint64_t v17 = v14;
      }
      else
      {
        int64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_53;
        }
        if (v19 >= v46) {
          goto LABEL_49;
        }
        unint64_t v20 = *(void *)(v47 + 8 * v19);
        uint64_t v17 = v14 + 1;
        if (!v20)
        {
          uint64_t v17 = v14 + 2;
          if (v14 + 2 >= v46) {
            goto LABEL_49;
          }
          unint64_t v20 = *(void *)(v47 + 8 * v17);
          if (!v20)
          {
            uint64_t v17 = v14 + 3;
            if (v14 + 3 >= v46) {
              goto LABEL_49;
            }
            unint64_t v20 = *(void *)(v47 + 8 * v17);
            if (!v20)
            {
              uint64_t v17 = v14 + 4;
              if (v14 + 4 >= v46) {
                goto LABEL_49;
              }
              unint64_t v20 = *(void *)(v47 + 8 * v17);
              if (!v20)
              {
                uint64_t v17 = v14 + 5;
                if (v14 + 5 >= v46) {
                  goto LABEL_49;
                }
                unint64_t v20 = *(void *)(v47 + 8 * v17);
                if (!v20)
                {
                  uint64_t v17 = v14 + 6;
                  if (v14 + 6 >= v46) {
                    goto LABEL_49;
                  }
                  unint64_t v20 = *(void *)(v47 + 8 * v17);
                  if (!v20)
                  {
                    uint64_t v21 = v14 + 7;
                    while (v46 != v21)
                    {
                      unint64_t v20 = *(void *)(v47 + 8 * v21++);
                      if (v20)
                      {
                        uint64_t v17 = v21 - 1;
                        goto LABEL_36;
                      }
                    }
LABEL_49:
                    sub_1C2648F6C();

                    swift_bridgeObjectRelease();
                    uint64_t v5 = a1;
                    uint64_t v6 = a4;
                    uint64_t v4 = v45;
                    goto LABEL_50;
                  }
                }
              }
            }
          }
        }
LABEL_36:
        uint64_t v15 = (v20 - 1) & v20;
        unint64_t v16 = __clz(__rbit64(v20)) + (v17 << 6);
      }
      id v18 = *(id *)(*(void *)(v10 + 48) + 8 * v16);
      if (!v18) {
        goto LABEL_49;
      }
    }
    uint64_t v22 = v18;
    id v23 = objc_msgSend(v18, sel_code);
    id v24 = objc_msgSend(v49, sel__rowid);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v50 = v7;
    unint64_t v27 = sub_1C2673248((uint64_t)v23);
    uint64_t v28 = v7[2];
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (v7[3] >= v30)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v26) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_1C2677294();
        if (v31) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_1C2673AE4(v30, isUniquelyReferenced_nonNull_native);
      unint64_t v32 = sub_1C2673248((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_54;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_11:
        *(void *)(v7[7] + 8 * v27) = v24;
        goto LABEL_12;
      }
    }
    v7[(v27 >> 6) + 8] |= 1 << v27;
    uint64_t v34 = 8 * v27;
    *(void *)(v7[6] + v34) = v23;
    *(void *)(v7[7] + v34) = v24;
    uint64_t v35 = v7[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_52;
    }
    v7[2] = v37;
LABEL_12:

    swift_bridgeObjectRelease();
    uint64_t v14 = v17;
    unint64_t v9 = v15;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  type metadata accessor for _HKDataTypeCode(0);
  uint64_t result = sub_1C277C850();
  __break(1u);
  return result;
}

void sub_1C266E0A8(void **a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  if (*a1) {
    objc_msgSend(*(id *)(a2 + 24), sel_stopQuery_);
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a5;
  *(void *)(v11 + 24) = a6;
  id v12 = objc_allocWithZone(MEMORY[0x1E4F2B8A0]);
  sub_1C2644ED8(0, &qword_1EBB80D80);
  swift_bridgeObjectRetain();
  id v13 = a4;
  swift_retain();
  uint64_t v14 = (void *)sub_1C277BA30();
  swift_bridgeObjectRelease();
  v19[4] = sub_1C267B858;
  v19[5] = v11;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 1107296256;
  v19[2] = sub_1C26729E0;
  v19[3] = &block_descriptor_3;
  uint64_t v15 = _Block_copy(v19);
  id v16 = objc_msgSend(v12, sel_initWithTypes_anchor_resultsHandler_, v14, v13, v15);

  _Block_release(v15);
  swift_release();
  uint64_t v17 = *a1;
  id v18 = v16;

  *a1 = v16;
  objc_msgSend(*(id *)(a2 + 24), sel_executeQuery_, v18);
}

uint64_t sub_1C266E264()
{
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1C266E2A4()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 16);
  uint64_t v2 = (void **)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C267B7FC(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1C266E30C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 16);
  uint64_t v2 = (void **)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C267B7A8(v2);

  os_unfair_lock_unlock(v3);
}

id DatabaseChangesQueryInputSignal.Anchor.anchor.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void DatabaseChangesQueryInputSignal.Anchor.anchor.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t (*DatabaseChangesQueryInputSignal.Anchor.anchor.modify())()
{
  return nullsub_1;
}

unint64_t static DatabaseChangesQueryInputSignal.Anchor.== infix(_:_:)(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if ((sub_1C26073E8(a1[1], a2[1]) & 1) == 0) {
    return 0;
  }
  unint64_t result = (v2 | v3) == 0;
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    return (unint64_t)objc_msgSend((id)v2, sel_isEqual_, v3);
  }
  return result;
}

uint64_t sub_1C266E444(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C277A520();
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v54 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v46 - v7;
  sub_1C2605F28(0, &qword_1EA3043D8, (uint64_t (*)(uint64_t))sub_1C267BCB4, MEMORY[0x1E4FBB718]);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  id v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v10);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v53 = (void **)((char *)&v46 - v14);
  uint64_t v49 = a1;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v16 = a1 + 64;
  uint64_t v15 = v17;
  uint64_t v18 = 1 << *(unsigned char *)(v16 - 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v15;
  int64_t v55 = 0;
  uint64_t v56 = v57 + 16;
  uint64_t v50 = (void (**)(char *, char *, uint64_t))(v57 + 32);
  unint64_t v51 = (void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v47 = v16;
  int64_t v48 = (unint64_t)(v18 + 63) >> 6;
  int64_t v46 = v48 - 1;
  uint64_t v52 = a2;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v22 = v21 | (v55 << 6);
      id v23 = v53;
LABEL_8:
      id v24 = *(void **)(*(void *)(v49 + 48) + 8 * v22);
      uint64_t v25 = v57;
      unint64_t v26 = *(void *)(v49 + 56) + *(void *)(v57 + 72) * v22;
      sub_1C267BCB4();
      uint64_t v28 = v27;
      (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(&v12[*(int *)(v27 + 48)], v26, v4);
      *(void *)id v12 = v24;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v12, 0, 1, v28);
      id v29 = v24;
      goto LABEL_27;
    }
    int64_t v30 = v55 + 1;
    id v23 = v53;
    if (__OFADD__(v55, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v30 < v48)
    {
      unint64_t v31 = *(void *)(v47 + 8 * v30);
      if (v31) {
        goto LABEL_12;
      }
      int64_t v32 = v55 + 2;
      ++v55;
      if (v30 + 1 < v48)
      {
        unint64_t v31 = *(void *)(v47 + 8 * v32);
        if (v31) {
          goto LABEL_15;
        }
        int64_t v55 = v30 + 1;
        if (v30 + 2 < v48)
        {
          unint64_t v31 = *(void *)(v47 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_12;
          }
          int64_t v32 = v30 + 3;
          int64_t v55 = v30 + 2;
          if (v30 + 3 < v48) {
            break;
          }
        }
      }
    }
LABEL_26:
    sub_1C267BCB4();
    uint64_t v28 = v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v12, 1, 1, v33);
    unint64_t v20 = 0;
LABEL_27:
    sub_1C267C258((uint64_t)v12, (uint64_t)v23, &qword_1EA3043D8, (uint64_t (*)(uint64_t))sub_1C267BCB4);
    sub_1C267BCB4();
    int v34 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v23, 1, v28);
    BOOL v35 = v34 == 1;
    if (v34 == 1) {
      return v35;
    }
    BOOL v36 = *v23;
    (*v50)(v8, (char *)v23 + *(int *)(v28 + 48), v4);
    uint64_t v37 = v52;
    uint64_t v38 = v8;
    unint64_t v39 = sub_1C2673164((uint64_t)v36);
    char v41 = v40;

    if ((v41 & 1) == 0)
    {
      (*v51)(v38, v4);
      return 0;
    }
    uint64_t v42 = v57;
    char v43 = v54;
    (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v54, *(void *)(v37 + 56) + *(void *)(v57 + 72) * v39, v4);
    sub_1C267B0A8((unint64_t *)&qword_1EA3043E8, 255, MEMORY[0x1E4F26E60]);
    char v44 = sub_1C277B810();
    char v45 = *(void (**)(char *, uint64_t))(v42 + 8);
    v45(v43, v4);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v45)(v38, v4);
    uint64_t v8 = v38;
    if ((v44 & 1) == 0) {
      return v35;
    }
  }
  unint64_t v31 = *(void *)(v47 + 8 * v32);
  if (v31)
  {
LABEL_15:
    int64_t v30 = v32;
LABEL_12:
    unint64_t v20 = (v31 - 1) & v31;
    unint64_t v22 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v55 = v30;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v30 >= v48)
    {
      int64_t v55 = v46;
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v47 + 8 * v30);
    ++v32;
    if (v31) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

void sub_1C266E9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      a2 = a1;
    }
    else {
      a2 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (v2 < 0) {
        a1 = v2;
      }
      else {
        a1 = v2 & 0xFFFFFFFFFFFFFF8;
      }
      goto LABEL_50;
    }
    uint64_t v5 = a2;
    uint64_t v6 = v2;
    goto LABEL_18;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v5 = a2;
    }
    else {
      uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v6 = v3;
LABEL_18:
    sub_1C2679350(v5, v6);
    return;
  }
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_42;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v15 >= v12) {
      return;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v12) {
        return;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v12) {
          return;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v7);
        if (!v16) {
          break;
        }
      }
    }
LABEL_41:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_42:
    uint64_t v18 = 8 * v14;
    uint64_t v19 = *(void **)(*(void *)(v3 + 56) + v18);
    id v20 = *(id *)(*(void *)(v3 + 48) + v18);
    id v21 = v19;
    unint64_t v22 = sub_1C2673164((uint64_t)v20);
    char v24 = v23;

    if ((v24 & 1) == 0)
    {

      return;
    }
    sub_1C2644ED8(0, &qword_1EBB82F38);
    id v25 = *(id *)(*(void *)(v2 + 56) + 8 * v22);
    char v26 = sub_1C277C030();

    if ((v26 & 1) == 0) {
      return;
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v12) {
    return;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_41;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      return;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_41;
    }
  }
LABEL_49:
  __break(1u);
LABEL_50:
  MEMORY[0x1F4184BB8](a1, a2);
}

uint64_t sub_1C266EC30(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v92 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v93 = (unint64_t)(v4 + 63) >> 6;
  while (2)
  {
    if (v6)
    {
      unint64_t v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v8 = v7 | (v3 << 6);
      uint64_t v9 = a2;
    }
    else
    {
      int64_t v10 = v3 + 1;
      uint64_t v9 = a2;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
      }
      if (v10 >= v93) {
        return 1;
      }
      unint64_t v11 = *(void *)(v92 + 8 * v10);
      ++v3;
      if (!v11)
      {
        int64_t v3 = v10 + 1;
        if (v10 + 1 >= v93) {
          return 1;
        }
        unint64_t v11 = *(void *)(v92 + 8 * v3);
        if (!v11)
        {
          int64_t v3 = v10 + 2;
          if (v10 + 2 >= v93) {
            return 1;
          }
          unint64_t v11 = *(void *)(v92 + 8 * v3);
          if (!v11)
          {
            int64_t v12 = v10 + 3;
            if (v12 >= v93) {
              return 1;
            }
            unint64_t v11 = *(void *)(v92 + 8 * v12);
            if (!v11)
            {
              while (1)
              {
                int64_t v3 = v12 + 1;
                if (__OFADD__(v12, 1)) {
                  goto LABEL_145;
                }
                if (v3 >= v93) {
                  return 1;
                }
                unint64_t v11 = *(void *)(v92 + 8 * v3);
                ++v12;
                if (v11) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v3 = v12;
          }
        }
      }
LABEL_23:
      unint64_t v6 = (v11 - 1) & v11;
      unint64_t v8 = __clz(__rbit64(v11)) + (v3 << 6);
    }
    uint64_t v13 = 16 * v8;
    unint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + v13);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 56) + v13);
    uint64_t v19 = *v17;
    unint64_t v18 = v17[1];
    swift_bridgeObjectRetain();
    sub_1C263D360(v19, v18);
    unint64_t v20 = sub_1C2629588(v16, v15);
    LOBYTE(v16) = v21;
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      goto LABEL_137;
    }
    unint64_t v22 = v18 >> 62;
    char v23 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v20);
    uint64_t v25 = *v23;
    unint64_t v24 = v23[1];
    uint64_t v26 = 0;
    switch(v24 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v25), v25)) {
          goto LABEL_140;
        }
        uint64_t v26 = HIDWORD(v25) - (int)v25;
LABEL_30:
        sub_1C263D360(v25, v24);
        break;
      case 2uLL:
        uint64_t v28 = *(void *)(v25 + 16);
        uint64_t v27 = *(void *)(v25 + 24);
        uint64_t v26 = v27 - v28;
        if (!__OFSUB__(v27, v28)) {
          goto LABEL_30;
        }
        goto LABEL_141;
      case 3uLL:
        break;
      default:
        uint64_t v26 = BYTE6(v24);
        break;
    }
    switch((int)v22)
    {
      case 1:
        LODWORD(v29) = HIDWORD(v19) - v19;
        if (__OFSUB__(HIDWORD(v19), v19)) {
          goto LABEL_142;
        }
        uint64_t v29 = (int)v29;
LABEL_36:
        if (v26 == v29)
        {
          if (v26 < 1)
          {
LABEL_7:
            sub_1C263CC84(v25, v24);
            sub_1C263CC84(v19, v18);
            uint64_t v2 = a1;
          }
          else
          {
            switch(v24 >> 62)
            {
              case 1uLL:
                if ((int)v25 > v25 >> 32) {
                  goto LABEL_144;
                }
                uint64_t v38 = (char *)sub_1C277A590();
                if (!v38) {
                  goto LABEL_50;
                }
                uint64_t v39 = sub_1C277A5B0();
                if (__OFSUB__((int)v25, v39)) {
                  goto LABEL_147;
                }
                v38 += (int)v25 - v39;
LABEL_50:
                sub_1C277A5A0();
                if (!v22)
                {
                  __s1[0] = v19;
                  LOWORD(__s1[1]) = v18;
                  BYTE2(__s1[1]) = BYTE2(v18);
                  BYTE3(__s1[1]) = BYTE3(v18);
                  BYTE4(__s1[1]) = BYTE4(v18);
                  BYTE5(__s1[1]) = BYTE5(v18);
                  if (!v38) {
                    goto LABEL_175;
                  }
                  size_t v55 = BYTE6(v18);
                  uint64_t v57 = __s1;
                  uint64_t v56 = v38;
LABEL_120:
                  int v54 = memcmp(v56, v57, v55);
                  goto LABEL_121;
                }
                if (v22 == 1)
                {
                  if (v19 >> 32 < (int)v19) {
                    goto LABEL_155;
                  }
                  swift_retain();
                  char v40 = (char *)sub_1C277A590();
                  if (v40)
                  {
                    uint64_t v41 = sub_1C277A5B0();
                    if (__OFSUB__((int)v19, v41)) {
                      goto LABEL_163;
                    }
                    v40 += (int)v19 - v41;
                  }
                  uint64_t v42 = sub_1C277A5A0();
                  if (v42 >= (v19 >> 32) - (int)v19) {
                    size_t v43 = (v19 >> 32) - (int)v19;
                  }
                  else {
                    size_t v43 = v42;
                  }
                  if (!v38) {
                    goto LABEL_165;
                  }
                  uint64_t v2 = a1;
                  if (!v40) {
                    goto LABEL_166;
                  }
                  int v44 = memcmp(v38, v40, v43);
                  sub_1C263CC84(v19, v18);
                  sub_1C263CC84(v25, v24);
                  sub_1C263CC84(v19, v18);
                  if (v44) {
                    return 0;
                  }
                }
                else
                {
                  uint64_t v83 = *(void *)(v19 + 16);
                  unint64_t v91 = *(char **)(v19 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v84 = sub_1C277A590();
                  if (v84)
                  {
                    uint64_t v85 = sub_1C277A5B0();
                    if (__OFSUB__(v83, v85)) {
                      goto LABEL_162;
                    }
                    v84 += v83 - v85;
                  }
                  if (__OFSUB__(v91, v83)) {
                    goto LABEL_157;
                  }
                  uint64_t v86 = sub_1C277A5A0();
                  if (v86 >= (uint64_t)&v91[-v83]) {
                    unint64_t v87 = &v91[-v83];
                  }
                  else {
                    unint64_t v87 = (char *)v86;
                  }
                  uint64_t v2 = a1;
                  uint64_t v72 = v38;
                  if (!v38) {
                    goto LABEL_176;
                  }
                  if (!v84) {
                    goto LABEL_177;
                  }
                  size_t v71 = (size_t)v87;
                  uint64_t v73 = (const void *)v84;
LABEL_133:
                  int v88 = memcmp(v72, v73, v71);
                  swift_release();
                  swift_release();
                  sub_1C263CC84(v25, v24);
                  sub_1C263CC84(v19, v18);
                  if (v88) {
                    return 0;
                  }
                }
                continue;
              case 2uLL:
                uint64_t v45 = *(void *)(v25 + 16);
                swift_retain();
                swift_retain();
                uint64_t v46 = sub_1C277A590();
                if (v46)
                {
                  uint64_t v47 = v46;
                  uint64_t v48 = sub_1C277A5B0();
                  if (__OFSUB__(v45, v48)) {
                    goto LABEL_146;
                  }
                  uint64_t v49 = (void *)(v47 + v45 - v48);
                }
                else
                {
                  uint64_t v49 = 0;
                }
                sub_1C277A5A0();
                if (v22)
                {
                  unint64_t v90 = v49;
                  if (v22 == 1)
                  {
                    if (v19 >> 32 < (int)v19) {
                      goto LABEL_150;
                    }
                    swift_retain();
                    uint64_t v58 = (char *)sub_1C277A590();
                    if (v58)
                    {
                      uint64_t v59 = sub_1C277A5B0();
                      if (__OFSUB__((int)v19, v59)) {
                        goto LABEL_161;
                      }
                      v58 += (int)v19 - v59;
                    }
                    uint64_t v60 = sub_1C277A5A0();
                    if (v60 >= (v19 >> 32) - (int)v19) {
                      size_t v61 = (v19 >> 32) - (int)v19;
                    }
                    else {
                      size_t v61 = v60;
                    }
                    if (!v49) {
                      goto LABEL_168;
                    }
                    if (!v58) {
                      goto LABEL_169;
                    }
                    int v54 = memcmp(v49, v58, v61);
                    sub_1C263CC84(v19, v18);
                    swift_release();
                    swift_release();
LABEL_121:
                    sub_1C263CC84(v25, v24);
                    sub_1C263CC84(v19, v18);
                    uint64_t v2 = a1;
                    if (v54) {
                      return 0;
                    }
                  }
                  else
                  {
                    uint64_t v76 = *(void *)(v19 + 16);
                    uint64_t v75 = *(void *)(v19 + 24);
                    swift_retain();
                    swift_retain();
                    unint64_t v77 = (char *)sub_1C277A590();
                    if (v77)
                    {
                      uint64_t v78 = sub_1C277A5B0();
                      if (__OFSUB__(v76, v78)) {
                        goto LABEL_160;
                      }
                      v77 += v76 - v78;
                    }
                    BOOL v32 = __OFSUB__(v75, v76);
                    int64_t v79 = v75 - v76;
                    if (v32) {
                      goto LABEL_156;
                    }
                    uint64_t v80 = sub_1C277A5A0();
                    if (v80 >= v79) {
                      size_t v81 = v79;
                    }
                    else {
                      size_t v81 = v80;
                    }
                    if (!v90) {
                      goto LABEL_173;
                    }
                    if (!v77) {
                      goto LABEL_174;
                    }
                    int v82 = memcmp(v90, v77, v81);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    sub_1C263CC84(v25, v24);
                    sub_1C263CC84(v19, v18);
                    uint64_t v2 = a1;
                    if (v82) {
                      return 0;
                    }
                  }
                }
                else
                {
                  __s1[0] = v19;
                  LOWORD(__s1[1]) = v18;
                  BYTE2(__s1[1]) = BYTE2(v18);
                  BYTE3(__s1[1]) = BYTE3(v18);
                  BYTE4(__s1[1]) = BYTE4(v18);
                  BYTE5(__s1[1]) = BYTE5(v18);
                  if (!v49) {
                    goto LABEL_172;
                  }
                  int v74 = memcmp(v49, __s1, BYTE6(v18));
                  swift_release();
                  swift_release();
                  sub_1C263CC84(v25, v24);
                  sub_1C263CC84(v19, v18);
                  uint64_t v2 = a1;
                  if (v74) {
                    return 0;
                  }
                }
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v22) {
                  goto LABEL_75;
                }
                if (v22 == 1)
                {
                  uint64_t v33 = (v19 >> 32) - (int)v19;
                  if (v19 >> 32 < (int)v19) {
                    goto LABEL_149;
                  }
                  sub_1C263D360(v19, v18);
                  uint64_t v50 = sub_1C277A590();
                  if (!v50) {
                    goto LABEL_167;
                  }
                  uint64_t v35 = v50;
                  uint64_t v51 = sub_1C277A5B0();
                  uint64_t v37 = (int)v19 - v51;
                  if (__OFSUB__((int)v19, v51)) {
                    goto LABEL_154;
                  }
LABEL_71:
                  uint64_t v52 = sub_1C277A5A0();
                  if (v52 >= v33) {
                    size_t v53 = v33;
                  }
                  else {
                    size_t v53 = v52;
                  }
                  int v54 = memcmp(__s1, (const void *)(v35 + v37), v53);
                  sub_1C263CC84(v19, v18);
                  goto LABEL_121;
                }
                uint64_t v68 = *(void *)(v19 + 16);
                uint64_t v69 = *(void *)(v19 + 24);
                swift_retain();
                swift_retain();
                uint64_t v64 = sub_1C277A590();
                if (v64)
                {
                  uint64_t v70 = sub_1C277A5B0();
                  if (__OFSUB__(v68, v70)) {
                    goto LABEL_159;
                  }
                  v64 += v68 - v70;
                }
                BOOL v32 = __OFSUB__(v69, v68);
                int64_t v66 = v69 - v68;
                if (v32) {
                  goto LABEL_152;
                }
                uint64_t v67 = sub_1C277A5A0();
                uint64_t v2 = a1;
                if (!v64) {
                  goto LABEL_171;
                }
LABEL_100:
                if (v67 >= v66) {
                  size_t v71 = v66;
                }
                else {
                  size_t v71 = v67;
                }
                uint64_t v72 = __s1;
                uint64_t v73 = (const void *)v64;
                goto LABEL_133;
              default:
                __s1[0] = v25;
                LOWORD(__s1[1]) = v24;
                BYTE2(__s1[1]) = BYTE2(v24);
                BYTE3(__s1[1]) = BYTE3(v24);
                BYTE4(__s1[1]) = BYTE4(v24);
                BYTE5(__s1[1]) = BYTE5(v24);
                if (!v22)
                {
LABEL_75:
                  uint64_t v96 = v19;
                  __int16 v97 = v18;
                  char v98 = BYTE2(v18);
                  char v99 = BYTE3(v18);
                  char v100 = BYTE4(v18);
                  size_t v55 = BYTE6(v18);
                  char v101 = BYTE5(v18);
                  uint64_t v56 = __s1;
                  uint64_t v57 = &v96;
                  goto LABEL_120;
                }
                if (v22 == 1)
                {
                  uint64_t v33 = (v19 >> 32) - (int)v19;
                  if (v19 >> 32 < (int)v19) {
                    goto LABEL_148;
                  }
                  sub_1C263D360(v19, v18);
                  uint64_t v34 = sub_1C277A590();
                  if (!v34)
                  {
                    sub_1C277A5A0();
                    __break(1u);
LABEL_165:
                    __break(1u);
LABEL_166:
                    __break(1u);
LABEL_167:
                    sub_1C277A5A0();
                    __break(1u);
LABEL_168:
                    __break(1u);
LABEL_169:
                    __break(1u);
LABEL_170:
                    __break(1u);
LABEL_171:
                    __break(1u);
LABEL_172:
                    __break(1u);
LABEL_173:
                    __break(1u);
LABEL_174:
                    __break(1u);
LABEL_175:
                    __break(1u);
LABEL_176:
                    __break(1u);
LABEL_177:
                    __break(1u);
                    JUMPOUT(0x1C266F6ACLL);
                  }
                  uint64_t v35 = v34;
                  uint64_t v36 = sub_1C277A5B0();
                  uint64_t v37 = (int)v19 - v36;
                  if (__OFSUB__((int)v19, v36)) {
                    goto LABEL_153;
                  }
                  goto LABEL_71;
                }
                uint64_t v62 = *(void *)(v19 + 16);
                uint64_t v63 = *(void *)(v19 + 24);
                swift_retain();
                swift_retain();
                uint64_t v64 = sub_1C277A590();
                if (v64)
                {
                  uint64_t v65 = sub_1C277A5B0();
                  if (__OFSUB__(v62, v65)) {
                    goto LABEL_158;
                  }
                  v64 += v62 - v65;
                }
                BOOL v32 = __OFSUB__(v63, v62);
                int64_t v66 = v63 - v62;
                if (v32) {
                  goto LABEL_151;
                }
                uint64_t v67 = sub_1C277A5A0();
                uint64_t v2 = a1;
                if (!v64) {
                  goto LABEL_170;
                }
                goto LABEL_100;
            }
          }
          continue;
        }
LABEL_136:
        sub_1C263CC84(v25, v24);
LABEL_137:
        sub_1C263CC84(v19, v18);
        return 0;
      case 2:
        uint64_t v31 = *(void *)(v19 + 16);
        uint64_t v30 = *(void *)(v19 + 24);
        BOOL v32 = __OFSUB__(v30, v31);
        uint64_t v29 = v30 - v31;
        if (!v32) {
          goto LABEL_36;
        }
        goto LABEL_143;
      case 3:
        if (!v26) {
          goto LABEL_7;
        }
        goto LABEL_136;
      default:
        uint64_t v29 = BYTE6(v18);
        goto LABEL_36;
    }
  }
}

void DatabaseChangesQueryInputSignal.Anchor.hasDifference(from:for:)(uint64_t a1, unint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *a2;
  unint64_t v6 = *(void **)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v37 = v5;
  if (!*(void *)v2) {
    goto LABEL_9;
  }
  unint64_t v7 = *(void **)a1;
  if (!v3 || v7 == 0)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v39 = *(void **)a1;
    sub_1C2644ED8(0, &qword_1EBB82ED8);
    id v9 = v7;
    uint64_t v10 = sub_1C277C7D0();
  }
  unsigned __int8 v11 = objc_msgSend(v6, sel_isEqual_, v10);
  swift_unknownObjectRelease();
  uint64_t v5 = v37;
  if ((v11 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1C277C170();
      sub_1C2644ED8(0, &qword_1EBB80D80);
      sub_1C264E7E8(&qword_1EBB80D88, &qword_1EBB80D80);
      sub_1C277BC10();
      unint64_t v4 = (unint64_t)v39;
      uint64_t v36 = v40;
      uint64_t v12 = v41;
      uint64_t v13 = v42;
      unint64_t v14 = v43;
    }
    else
    {
      uint64_t v15 = -1 << *(unsigned char *)(v4 + 32);
      uint64_t v36 = (char *)(v4 + 56);
      uint64_t v12 = ~v15;
      uint64_t v16 = -v15;
      if (v16 < 64) {
        uint64_t v17 = ~(-1 << v16);
      }
      else {
        uint64_t v17 = -1;
      }
      unint64_t v14 = v17 & *(void *)(v4 + 56);
      swift_bridgeObjectRetain();
      uint64_t v13 = 0;
    }
    int64_t v35 = (unint64_t)(v12 + 64) >> 6;
    while (1)
    {
      uint64_t v18 = v13;
      if ((v4 & 0x8000000000000000) != 0)
      {
        if (!sub_1C277C200()) {
          goto LABEL_49;
        }
        sub_1C2644ED8(0, &qword_1EBB80D80);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v21 = v38;
        swift_unknownObjectRelease();
        if (!v38) {
          goto LABEL_49;
        }
      }
      else
      {
        if (v14)
        {
          unint64_t v19 = __clz(__rbit64(v14));
          v14 &= v14 - 1;
          unint64_t v20 = v19 | (v13 << 6);
        }
        else
        {
          int64_t v22 = v13 + 1;
          if (__OFADD__(v13, 1))
          {
            __break(1u);
            return;
          }
          if (v22 >= v35) {
            goto LABEL_49;
          }
          unint64_t v23 = *(void *)&v36[8 * v22];
          ++v13;
          if (!v23)
          {
            uint64_t v13 = v18 + 2;
            if (v18 + 2 >= v35) {
              goto LABEL_49;
            }
            unint64_t v23 = *(void *)&v36[8 * v13];
            if (!v23)
            {
              uint64_t v13 = v18 + 3;
              if (v18 + 3 >= v35) {
                goto LABEL_49;
              }
              unint64_t v23 = *(void *)&v36[8 * v13];
              if (!v23)
              {
                uint64_t v13 = v18 + 4;
                if (v18 + 4 >= v35) {
                  goto LABEL_49;
                }
                unint64_t v23 = *(void *)&v36[8 * v13];
                if (!v23)
                {
                  uint64_t v24 = v18 + 5;
                  while (v35 != v24)
                  {
                    unint64_t v23 = *(void *)&v36[8 * v24++];
                    if (v23)
                    {
                      uint64_t v13 = v24 - 1;
                      goto LABEL_36;
                    }
                  }
LABEL_49:
                  sub_1C2648F6C();
                  return;
                }
              }
            }
          }
LABEL_36:
          unint64_t v14 = (v23 - 1) & v23;
          unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
        }
        id v21 = *(id *)(*(void *)(v4 + 48) + 8 * v20);
        if (!v21) {
          goto LABEL_49;
        }
      }
      id v25 = objc_msgSend(v21, sel_code);
      if (*(void *)(v5 + 16) && (unint64_t v26 = sub_1C2673248((uint64_t)v25), (v27 & 1) != 0))
      {
        int v28 = 0;
        uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v26);
        if (!v3) {
          goto LABEL_16;
        }
LABEL_43:
        id v30 = objc_msgSend(v21, sel_code);
        if (!*(void *)(v3 + 16)) {
          goto LABEL_16;
        }
        unint64_t v31 = sub_1C2673248((uint64_t)v30);
        if ((v32 & 1) == 0) {
          goto LABEL_16;
        }
        uint64_t v33 = *(void *)(*(void *)(v3 + 56) + 8 * v31);

        if (v29 == v33) {
          int v34 = v28;
        }
        else {
          int v34 = 1;
        }
        uint64_t v5 = v37;
        if (v34 == 1) {
          goto LABEL_49;
        }
      }
      else
      {
        uint64_t v29 = 0;
        int v28 = 1;
        if (v3) {
          goto LABEL_43;
        }
LABEL_16:

        uint64_t v5 = v37;
        if ((v28 & 1) == 0) {
          goto LABEL_49;
        }
      }
    }
  }
}

uint64_t DatabaseChangesQueryInputSignal.Anchor.merged(with:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v4 = *(void **)a1;
  unint64_t v6 = *(void **)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  if (*(void *)a1)
  {
    uint64_t v7 = *(void *)(a1 + 8);
    if (v6)
    {
      id v8 = v4;
      id v9 = v6;
      id v10 = objc_msgSend(v9, sel__rowid);
      id v11 = objc_msgSend(v8, sel__rowid);

      if ((uint64_t)v10 >= (uint64_t)v11) {
        uint64_t v12 = v8;
      }
      else {
        uint64_t v12 = v9;
      }
      if ((uint64_t)v10 < (uint64_t)v11)
      {
        uint64_t v13 = v6;
      }
      else
      {
        uint64_t v5 = v7;
        uint64_t v13 = v4;
      }
      id v14 = v12;
      uint64_t result = swift_bridgeObjectRetain();
      *a2 = v13;
      a2[1] = v5;
      return result;
    }
    *a2 = v4;
    a2[1] = v7;
    id v17 = v4;
  }
  else
  {
    *a2 = v6;
    a2[1] = v5;
    id v16 = v6;
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C266FBB8()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x726F68636E61;
  }
}

uint64_t sub_1C266FBF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C267B610(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C266FC1C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C266FC28(uint64_t a1)
{
  unint64_t v2 = sub_1C267ABC4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C266FC64(uint64_t a1)
{
  unint64_t v2 = sub_1C267ABC4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void DatabaseChangesQueryInputSignal.Anchor.init(from:)(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C267ACD4(0, &qword_1EBB83100, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C267ABC4();
  sub_1C277C9A0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    char v49 = 0;
    sub_1C267AC18();
    sub_1C277C680();
    uint64_t v11 = (uint64_t)v47;
    unint64_t v10 = v48;
    if (v48 >> 60 == 15)
    {
      uint64_t v46 = (uint64_t)v47;
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v45 = a2;
      sub_1C2644ED8(0, &qword_1EBB86050);
      sub_1C2644ED8(0, &qword_1EBB82ED8);
      sub_1C263D360(v11, v10);
      uint64_t v13 = sub_1C277BE10();
      sub_1C2641B58(v11, v10);
      uint64_t v46 = v11;
      uint64_t v12 = (void *)v13;
      a2 = v45;
    }
    sub_1C267AC6C();
    char v49 = 1;
    sub_1C267AD38(&qword_1EBB82DD8);
    sub_1C277C6D0();
    unint64_t v44 = v10;
    uint64_t v45 = a2;
    uint64_t v14 = sub_1C266C31C((uint64_t)v47);
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v39 = v12;
      uint64_t v40 = 0;
      uint64_t v41 = v7;
      uint64_t v42 = v6;
      unint64_t v43 = a1;
      swift_bridgeObjectRetain();
      v38[1] = v14;
      id v16 = (uint64_t *)(v14 + 40);
      id v17 = (void *)MEMORY[0x1E4FBC868];
      while (1)
      {
        uint64_t v18 = v9;
        uint64_t v20 = *(v16 - 1);
        uint64_t v19 = *v16;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v47 = v17;
        unint64_t v23 = sub_1C2673248(v20);
        uint64_t v24 = v17[2];
        BOOL v25 = (v22 & 1) == 0;
        uint64_t v26 = v24 + v25;
        if (__OFADD__(v24, v25)) {
          break;
        }
        char v27 = v22;
        if (v17[3] >= v26)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1C2677294();
          }
        }
        else
        {
          sub_1C2673AE4(v26, isUniquelyReferenced_nonNull_native);
          unint64_t v28 = sub_1C2673248(v20);
          if ((v27 & 1) != (v29 & 1)) {
            goto LABEL_25;
          }
          unint64_t v23 = v28;
        }
        id v9 = v18;
        id v17 = v47;
        if (v27)
        {
          *(void *)(v47[7] + 8 * v23) = v19;
        }
        else
        {
          v47[(v23 >> 6) + 8] |= 1 << v23;
          uint64_t v30 = 8 * v23;
          *(void *)(v17[6] + v30) = v20;
          *(void *)(v17[7] + v30) = v19;
          uint64_t v31 = v17[2];
          BOOL v32 = __OFADD__(v31, 1);
          uint64_t v33 = v31 + 1;
          if (v32) {
            goto LABEL_24;
          }
          uint64_t v17[2] = v33;
        }
        v16 += 2;
        swift_bridgeObjectRelease();
        if (!--v15)
        {
          swift_bridgeObjectRelease();
          uint64_t v6 = v42;
          a1 = v43;
          uint64_t v7 = v41;
          unint64_t v34 = v44;
          uint64_t v35 = v46;
          uint64_t v12 = v39;
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      type metadata accessor for _HKDataTypeCode(0);
      sub_1C277C850();
      __break(1u);
    }
    else
    {
      id v17 = (void *)MEMORY[0x1E4FBC868];
      unint64_t v34 = v44;
      uint64_t v35 = v46;
LABEL_22:
      sub_1C2641B58(v35, v34);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      uint64_t v36 = v45;
      *uint64_t v45 = v12;
      v36[1] = v17;
      id v37 = v12;
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t DatabaseChangesQueryInputSignal.Anchor.encode(to:)(void *a1)
{
  v46[2] = *(id *)MEMORY[0x1E4F143B8];
  sub_1C267ACD4(0, &qword_1EBB83110, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v41 - v7;
  id v9 = *(void **)v1;
  uint64_t v43 = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C267ABC4();
  unint64_t v44 = v8;
  sub_1C277C9B0();
  if (v9)
  {
    unint64_t v10 = self;
    v46[0] = 0;
    id v11 = v9;
    id v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, v46);
    id v13 = v46[0];
    if (!v12)
    {
      uint64_t v19 = v13;
      sub_1C277A620();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v44, v5);
    }
    uint64_t v14 = (void *)sub_1C277A780();
    id v16 = v15;

    v46[0] = v14;
    v46[1] = v16;
    char v45 = 0;
    sub_1C267AD9C();
    id v17 = v44;
    sub_1C277C760();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);

      return sub_1C263CC84((uint64_t)v14, (unint64_t)v16);
    }

    sub_1C263CC84((uint64_t)v14, (unint64_t)v16);
  }
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C266C514(v20);
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    v41[1] = v2;
    uint64_t v42 = v6;
    uint64_t v43 = v5;
    swift_bridgeObjectRetain();
    v41[0] = v21;
    unint64_t v23 = (uint64_t *)(v21 + 40);
    uint64_t v24 = (void *)MEMORY[0x1E4FBC868];
    while (1)
    {
      uint64_t v26 = *(v23 - 1);
      uint64_t v25 = *v23;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v46[0] = v24;
      unint64_t v29 = sub_1C26732B0(v26);
      uint64_t v30 = v24[2];
      BOOL v31 = (v28 & 1) == 0;
      uint64_t v32 = v30 + v31;
      if (__OFADD__(v30, v31))
      {
        __break(1u);
LABEL_26:
        __break(1u);
      }
      char v33 = v28;
      if (v24[3] >= v32)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v24 = v46[0];
          if ((v28 & 1) == 0) {
            goto LABEL_18;
          }
        }
        else
        {
          sub_1C2677420();
          uint64_t v24 = v46[0];
          if ((v33 & 1) == 0) {
            goto LABEL_18;
          }
        }
      }
      else
      {
        sub_1C2673DB0(v32, isUniquelyReferenced_nonNull_native);
        unint64_t v34 = sub_1C26732B0(v26);
        if ((v33 & 1) != (v35 & 1))
        {
          uint64_t result = sub_1C277C850();
          __break(1u);
          return result;
        }
        unint64_t v29 = v34;
        uint64_t v24 = v46[0];
        if ((v33 & 1) == 0)
        {
LABEL_18:
          v24[(v29 >> 6) + 8] |= 1 << v29;
          uint64_t v36 = 8 * v29;
          *(void *)(v24[6] + v36) = v26;
          *(void *)(v24[7] + v36) = v25;
          uint64_t v37 = v24[2];
          BOOL v38 = __OFADD__(v37, 1);
          uint64_t v39 = v37 + 1;
          if (v38) {
            goto LABEL_26;
          }
          v24[2] = v39;
          goto LABEL_10;
        }
      }
      *(void *)(v24[7] + 8 * v29) = v25;
LABEL_10:
      v23 += 2;
      swift_bridgeObjectRelease();
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v42;
        uint64_t v5 = v43;
        goto LABEL_24;
      }
    }
  }
  uint64_t v24 = (void *)MEMORY[0x1E4FBC868];
LABEL_24:
  swift_bridgeObjectRelease();
  v46[0] = v24;
  char v45 = 1;
  sub_1C267AC6C();
  sub_1C267AD38(&qword_1EBB82DD0);
  uint64_t v40 = v44;
  sub_1C277C760();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v40, v5);
  return swift_bridgeObjectRelease();
}

void sub_1C267061C(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1C2670634(void *a1)
{
  return DatabaseChangesQueryInputSignal.Anchor.encode(to:)(a1);
}

uint64_t DatabaseChangesQueryInputSignal.Configuration.identifier.getter()
{
  return sub_1C277AED0();
}

uint64_t DatabaseChangesQueryInputSignal.Configuration.types.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DatabaseChangesQueryInputSignal.Configuration.types.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*DatabaseChangesQueryInputSignal.Configuration.types.modify())()
{
  return nullsub_1;
}

uint64_t DatabaseChangesQueryInputSignal.Configuration.init(types:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t static DatabaseChangesQueryInputSignal.Configuration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C26717E8(*a1, *a2, &qword_1EBB80D80) & 1;
}

uint64_t sub_1C26706F8(uint64_t a1, uint64_t a2)
{
  return sub_1C26717E8(a1, a2, &qword_1EBB80D80);
}

uint64_t sub_1C267070C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v32 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v33 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v35 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v34 = v3;
      unint64_t v8 = v7 | (v3 << 6);
      goto LABEL_25;
    }
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v9 >= v33) {
      return 1;
    }
    unint64_t v10 = *(void *)(v32 + 8 * v9);
    int64_t v11 = v3 + 1;
    if (!v10)
    {
      int64_t v11 = v3 + 2;
      if (v3 + 2 >= v33) {
        return 1;
      }
      unint64_t v10 = *(void *)(v32 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v3 + 3;
        if (v3 + 3 >= v33) {
          return 1;
        }
        unint64_t v10 = *(void *)(v32 + 8 * v11);
        if (!v10) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v6 = (v10 - 1) & v10;
    int64_t v34 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_25:
    uint64_t v13 = result;
    uint64_t v14 = *(void **)(*(void *)(result + 48) + 8 * v8);
    sub_1C277B850();
    sub_1C277C8C0();
    id v15 = v14;
    sub_1C277B8B0();
    uint64_t v16 = sub_1C277C910();
    swift_bridgeObjectRelease();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = v16 & ~v17;
    if (((*(void *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      goto LABEL_40;
    }
    uint64_t v19 = sub_1C277B850();
    uint64_t v21 = v20;
    if (v19 == sub_1C277B850() && v21 == v22)
    {
LABEL_7:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v24 = sub_1C277C7E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        uint64_t v25 = ~v17;
        while (1)
        {
          unint64_t v18 = (v18 + 1) & v25;
          if (((*(void *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
            break;
          }
          uint64_t v26 = sub_1C277B850();
          uint64_t v28 = v27;
          if (v26 == sub_1C277B850() && v28 == v29) {
            goto LABEL_7;
          }
          char v31 = sub_1C277C7E0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31) {
            goto LABEL_8;
          }
        }
LABEL_40:

        return 0;
      }
    }
LABEL_8:

    uint64_t result = v13;
    int64_t v3 = v34;
  }
  uint64_t v12 = v3 + 4;
  if (v3 + 4 >= v33) {
    return 1;
  }
  unint64_t v10 = *(void *)(v32 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v3 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v33) {
      return 1;
    }
    unint64_t v10 = *(void *)(v32 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_24;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1C2670A20(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v33 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  uint64_t v9 = a2 + 56;
  int64_t v34 = (unint64_t)(v6 + 63) >> 6;
  if ((v7 & v5) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v10 = __clz(__rbit64(v8));
  uint64_t v11 = (v8 - 1) & v8;
  unint64_t v12 = v10 | (v4 << 6);
LABEL_22:
  uint64_t v16 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v12);
  sub_1C277C8C0();
  ContentKind.rawValue.getter();
  sub_1C277B8B0();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_1C277C910();
  uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v19 = v17 & ~v18;
  if (((*(void *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
    return 0;
  }
  unint64_t v35 = v11;
  int64_t v36 = v4;
  uint64_t v20 = ~v18;
  while (2)
  {
    unint64_t v21 = 0xD000000000000011;
    unint64_t v22 = 0x80000001C2788B70;
    switch(*(unsigned char *)(*(void *)(a2 + 48) + v19))
    {
      case 1:
        unint64_t v22 = 0xE500000000000000;
        unint64_t v21 = 0x7472656C61;
        break;
      case 2:
        unint64_t v22 = 0xE300000000000000;
        unint64_t v21 = 7368801;
        break;
      case 3:
        unint64_t v22 = 0xE700000000000000;
        unint64_t v21 = 0x656C6369747261;
        break;
      case 4:
        unint64_t v22 = 0xE800000000000000;
        unint64_t v21 = 0x79726F6765746163;
        break;
      case 5:
        unint64_t v22 = 0xE400000000000000;
        unint64_t v21 = 1635017060;
        break;
      case 6:
        unint64_t v21 = 0x6D6D755361746164;
        unint64_t v22 = 0xEB00000000797261;
        break;
      case 7:
        unint64_t v23 = "cle";
        goto LABEL_34;
      case 8:
        unint64_t v23 = "dataSummaryAlert";
        goto LABEL_34;
      case 9:
        unint64_t v23 = "dataSummaryChart";
LABEL_34:
        unint64_t v22 = (unint64_t)v23 | 0x8000000000000000;
        unint64_t v21 = 0xD000000000000010;
        break;
      case 0xA:
        unint64_t v21 = 0x5365727574616566;
        unint64_t v22 = 0xED00007375746174;
        break;
      case 0xB:
        unint64_t v22 = 0xE900000000000074;
        unint64_t v21 = 0x6867696C68676968;
        break;
      case 0xC:
        unint64_t v21 = 0x6867696C68676968;
        unint64_t v22 = 0xEF68637261655374;
        break;
      case 0xD:
        unint64_t v21 = 0x697461676976616ELL;
        unint64_t v22 = 0xEA00000000006E6FLL;
        break;
      case 0xE:
        unint64_t v22 = 0xE600000000000000;
        unint64_t v21 = 0x617461446F6ELL;
        break;
      case 0xF:
        unint64_t v22 = 0xE500000000000000;
        unint64_t v21 = 0x726568746FLL;
        break;
      case 0x10:
        unint64_t v21 = 0x6D726F6674616C70;
        unint64_t v22 = 0xED00007472656C41;
        break;
      case 0x11:
        unint64_t v21 = 0x6F69746F6D6F7270;
        unint64_t v22 = 0xE90000000000006ELL;
        break;
      case 0x12:
        unint64_t v22 = 0xE600000000000000;
        unint64_t v21 = 0x74706D6F7270;
        break;
      case 0x13:
        unint64_t v22 = 0xE700000000000000;
        unint64_t v21 = 0x656C69666F7270;
        break;
      case 0x14:
        unint64_t v21 = 0x6E6F6974616C6572;
        unint64_t v22 = 0xEC00000070696873;
        break;
      case 0x15:
        unint64_t v22 = 0xE800000000000000;
        unint64_t v21 = 0x73676E6974746573;
        break;
      case 0x16:
        unint64_t v22 = 0xE600000000000000;
        unint64_t v21 = 0x657461647075;
        break;
      case 0x17:
        unint64_t v22 = 0xE700000000000000;
        unint64_t v21 = 0x72616265646973;
        break;
      default:
        break;
    }
    unint64_t v24 = 0xD000000000000011;
    unint64_t v25 = 0x80000001C2788B70;
    switch(v16)
    {
      case 1:
        unint64_t v25 = 0xE500000000000000;
        if (v21 != 0x7472656C61) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 2:
        unint64_t v25 = 0xE300000000000000;
        if (v21 != 7368801) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 3:
        unint64_t v25 = 0xE700000000000000;
        uint64_t v26 = 0x6C6369747261;
        goto LABEL_85;
      case 4:
        unint64_t v25 = 0xE800000000000000;
        if (v21 != 0x79726F6765746163) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 5:
        unint64_t v25 = 0xE400000000000000;
        if (v21 != 1635017060) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 6:
        unint64_t v25 = 0xEB00000000797261;
        if (v21 != 0x6D6D755361746164) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 7:
        uint64_t v27 = "cle";
        goto LABEL_64;
      case 8:
        uint64_t v27 = "dataSummaryAlert";
        goto LABEL_64;
      case 9:
        uint64_t v27 = "dataSummaryChart";
LABEL_64:
        unint64_t v25 = (unint64_t)v27 | 0x8000000000000000;
        if (v21 != 0xD000000000000010) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 10:
        uint64_t v28 = 0x5365727574616566;
        uint64_t v29 = 0x7375746174;
        goto LABEL_78;
      case 11:
        unint64_t v25 = 0xE900000000000074;
        if (v21 != 0x6867696C68676968) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 12:
        unint64_t v25 = 0xEF68637261655374;
        if (v21 != 0x6867696C68676968) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 13:
        unint64_t v25 = 0xEA00000000006E6FLL;
        if (v21 != 0x697461676976616ELL) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 14:
        unint64_t v25 = 0xE600000000000000;
        if (v21 != 0x617461446F6ELL) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 15:
        unint64_t v25 = 0xE500000000000000;
        if (v21 != 0x726568746FLL) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 16:
        uint64_t v28 = 0x6D726F6674616C70;
        uint64_t v29 = 0x7472656C41;
LABEL_78:
        unint64_t v25 = v29 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
        if (v21 != v28) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 17:
        unint64_t v25 = 0xE90000000000006ELL;
        if (v21 != 0x6F69746F6D6F7270) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 18:
        unint64_t v25 = 0xE600000000000000;
        if (v21 != 0x74706D6F7270) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 19:
        unint64_t v25 = 0xE700000000000000;
        uint64_t v26 = 0x6C69666F7270;
LABEL_85:
        if (v21 != (v26 & 0xFFFFFFFFFFFFLL | 0x65000000000000)) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 20:
        unint64_t v25 = 0xEC00000070696873;
        if (v21 != 0x6E6F6974616C6572) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 21:
        unint64_t v25 = 0xE800000000000000;
        if (v21 != 0x73676E6974746573) {
          goto LABEL_94;
        }
        goto LABEL_93;
      case 22:
        unint64_t v25 = 0xE600000000000000;
        unint64_t v24 = 0x657461647075;
        goto LABEL_92;
      case 23:
        unint64_t v25 = 0xE700000000000000;
        if (v21 != 0x72616265646973) {
          goto LABEL_94;
        }
        goto LABEL_93;
      default:
LABEL_92:
        if (v21 != v24) {
          goto LABEL_94;
        }
LABEL_93:
        if (v22 != v25)
        {
LABEL_94:
          char v30 = sub_1C277C7E0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v30) {
            goto LABEL_100;
          }
          unint64_t v19 = (v19 + 1) & v20;
          if (((*(void *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
            return 0;
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
LABEL_100:
        uint64_t v3 = a1;
        unint64_t v8 = v35;
        int64_t v4 = v36;
        if (v35) {
          goto LABEL_7;
        }
LABEL_8:
        int64_t v13 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_105;
        }
        if (v13 < v34)
        {
          unint64_t v14 = *(void *)(v33 + 8 * v13);
          ++v4;
          if (v14) {
            goto LABEL_21;
          }
          int64_t v4 = v13 + 1;
          if (v13 + 1 < v34)
          {
            unint64_t v14 = *(void *)(v33 + 8 * v4);
            if (v14) {
              goto LABEL_21;
            }
            int64_t v4 = v13 + 2;
            if (v13 + 2 < v34)
            {
              unint64_t v14 = *(void *)(v33 + 8 * v4);
              if (v14) {
                goto LABEL_21;
              }
              int64_t v15 = v13 + 3;
              if (v15 < v34)
              {
                unint64_t v14 = *(void *)(v33 + 8 * v15);
                if (v14)
                {
                  int64_t v4 = v15;
LABEL_21:
                  uint64_t v11 = (v14 - 1) & v14;
                  unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
                  goto LABEL_22;
                }
                while (1)
                {
                  int64_t v4 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    break;
                  }
                  if (v4 >= v34) {
                    return 1;
                  }
                  unint64_t v14 = *(void *)(v33 + 8 * v4);
                  ++v15;
                  if (v14) {
                    goto LABEL_21;
                  }
                }
LABEL_105:
                __break(1u);
                JUMPOUT(0x1C26711F8);
              }
            }
          }
        }
        return 1;
    }
  }
}

void sub_1C26712B8(uint64_t a1, uint64_t a2)
{
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v25 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  int64_t v26 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = a2 + 56;
  if ((v7 & v5) == 0) {
    goto LABEL_8;
  }
  while (2)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_22:
    int64_t v15 = *(void **)(*(void *)(a1 + 48) + 8 * v11);
    sub_1C277C8C0();
    int64_t v27 = v4;
    sub_1C277C8D0();
    if (v15)
    {
      id v16 = v15;
      sub_1C277C040();
    }
    uint64_t v17 = sub_1C277C910();
    uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
    {
LABEL_35:

      return;
    }
    uint64_t v20 = ~v18;
    while (1)
    {
      unint64_t v21 = *(void **)(*(void *)(a2 + 48) + 8 * v19);
      if (v21) {
        break;
      }
      if (!v15) {
        goto LABEL_32;
      }
LABEL_27:
      unint64_t v19 = (v19 + 1) & v20;
      if (((*(void *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        goto LABEL_35;
      }
    }
    if (!v15) {
      goto LABEL_27;
    }
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
    id v22 = v15;
    id v23 = v21;
    char v24 = sub_1C277C030();

    if ((v24 & 1) == 0) {
      goto LABEL_27;
    }

LABEL_32:
    int64_t v4 = v27;
    if (v8) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v12 < v26)
  {
    unint64_t v13 = *(void *)(v25 + 8 * v12);
    ++v4;
    if (v13) {
      goto LABEL_21;
    }
    int64_t v4 = v12 + 1;
    if (v12 + 1 < v26)
    {
      unint64_t v13 = *(void *)(v25 + 8 * v4);
      if (v13) {
        goto LABEL_21;
      }
      int64_t v4 = v12 + 2;
      if (v12 + 2 < v26)
      {
        unint64_t v13 = *(void *)(v25 + 8 * v4);
        if (v13) {
          goto LABEL_21;
        }
        int64_t v14 = v12 + 3;
        if (v14 < v26)
        {
          unint64_t v13 = *(void *)(v25 + 8 * v14);
          if (v13)
          {
            int64_t v4 = v14;
LABEL_21:
            unint64_t v8 = (v13 - 1) & v13;
            unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
            goto LABEL_22;
          }
          while (1)
          {
            int64_t v4 = v14 + 1;
            if (__OFADD__(v14, 1)) {
              break;
            }
            if (v4 >= v26) {
              return;
            }
            unint64_t v13 = *(void *)(v25 + 8 * v4);
            ++v14;
            if (v13) {
              goto LABEL_21;
            }
          }
LABEL_38:
          __break(1u);
        }
      }
    }
  }
}

uint64_t sub_1C267154C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    uint64_t v14 = result;
    int64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1C277C8C0();
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    uint64_t v18 = sub_1C277C910();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    id v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1C277C7E0() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        int64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1C277C7E0() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1C26717D4(uint64_t a1, uint64_t a2)
{
  return sub_1C26717E8(a1, a2, (unint64_t *)&qword_1EBB85E80);
}

uint64_t sub_1C26717E8(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  unint64_t v5 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v6 = a1;
    }
    else {
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v5)
    {
      if (a2 < 0) {
        uint64_t v7 = a2;
      }
      else {
        uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      return MEMORY[0x1F4184BB8](v7, v6);
    }
    sub_1C2679700(v6, a2);
    return v9 & 1;
  }
  if (v5)
  {
    if (a2 < 0) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    sub_1C2679700(v8, a1);
    return v9 & 1;
  }
  if (a1 == a2)
  {
LABEL_47:
    char v9 = 1;
    return v9 & 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
LABEL_49:
    char v9 = 0;
    return v9 & 1;
  }
  uint64_t v30 = a1 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(a1 + 56);
  uint64_t v7 = sub_1C2644ED8(0, a3);
  int64_t v13 = 0;
  int64_t v31 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = a2 + 56;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_41;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v17 >= v31) {
      goto LABEL_47;
    }
    unint64_t v18 = *(void *)(v30 + 8 * v17);
    ++v13;
    if (!v18)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v31) {
        goto LABEL_47;
      }
      unint64_t v18 = *(void *)(v30 + 8 * v13);
      if (!v18)
      {
        int64_t v13 = v17 + 2;
        if (v17 + 2 >= v31) {
          goto LABEL_47;
        }
        unint64_t v18 = *(void *)(v30 + 8 * v13);
        if (!v18) {
          break;
        }
      }
    }
LABEL_40:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_41:
    id v20 = *(id *)(*(void *)(a1 + 48) + 8 * v16);
    uint64_t v21 = sub_1C277C020();
    uint64_t v22 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v23 = v21 & ~v22;
    if (((*(void *)(v14 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_48;
    }
    int64_t v32 = v13;
    id v24 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
    char v25 = sub_1C277C030();

    if ((v25 & 1) == 0)
    {
      uint64_t v26 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v26;
        if (((*(void *)(v14 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        id v27 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
        char v28 = sub_1C277C030();

        if (v28) {
          goto LABEL_24;
        }
      }
LABEL_48:

      goto LABEL_49;
    }
LABEL_24:

    int64_t v13 = v32;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v31) {
    goto LABEL_47;
  }
  unint64_t v18 = *(void *)(v30 + 8 * v19);
  if (v18)
  {
    int64_t v13 = v19;
    goto LABEL_40;
  }
  while (1)
  {
    int64_t v13 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v13 >= v31) {
      goto LABEL_47;
    }
    unint64_t v18 = *(void *)(v30 + 8 * v13);
    ++v19;
    if (v18) {
      goto LABEL_40;
    }
  }
LABEL_52:
  __break(1u);
  return MEMORY[0x1F4184BB8](v7, v6);
}

uint64_t sub_1C2671ADC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      return MEMORY[0x1F4184BB8](v6, v5);
    }
    sub_1C2679700(v5, a2);
    return v8 & 1;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    sub_1C2679700(v7, a1);
    return v8 & 1;
  }
  if (a1 == a2)
  {
LABEL_49:
    char v8 = 1;
    return v8 & 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
LABEL_51:
    char v8 = 0;
    return v8 & 1;
  }
  uint64_t v29 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  uint64_t v6 = sub_1C2644ED8(0, &qword_1EBB84260);
  int64_t v12 = 0;
  int64_t v30 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_43;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v16 >= v30) {
      goto LABEL_49;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v30) {
        goto LABEL_49;
      }
      unint64_t v17 = *(void *)(v29 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v30) {
          goto LABEL_49;
        }
        unint64_t v17 = *(void *)(v29 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v30) {
            goto LABEL_49;
          }
          unint64_t v17 = *(void *)(v29 + 8 * v12);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_42:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_43:
    id v19 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    uint64_t v20 = sub_1C277C020();
    uint64_t v21 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v22 = v20 & ~v21;
    if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      goto LABEL_50;
    }
    int64_t v31 = v12;
    id v23 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
    char v24 = sub_1C277C030();

    if ((v24 & 1) == 0)
    {
      uint64_t v25 = ~v21;
      while (1)
      {
        unint64_t v22 = (v22 + 1) & v25;
        if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          break;
        }
        id v26 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
        char v27 = sub_1C277C030();

        if (v27) {
          goto LABEL_24;
        }
      }
LABEL_50:

      goto LABEL_51;
    }
LABEL_24:

    int64_t v12 = v31;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v30) {
    goto LABEL_49;
  }
  unint64_t v17 = *(void *)(v29 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_42;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v30) {
      goto LABEL_49;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_42;
    }
  }
LABEL_54:
  __break(1u);
  return MEMORY[0x1F4184BB8](v6, v5);
}

uint64_t DatabaseChangesQueryInputSignal.Configuration.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1C2679A50(a1, v3, &qword_1EBB80D80, 0x1E4F2B448, &qword_1EBB80D88);

  return swift_bridgeObjectRelease();
}

uint64_t DatabaseChangesQueryInputSignal.Configuration.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_1C277C8C0();
  sub_1C2679A50((uint64_t)v3, v1, &qword_1EBB80D80, 0x1E4F2B448, &qword_1EBB80D88);
  return sub_1C277C910();
}

uint64_t sub_1C2671EB8(uint64_t *a1, uint64_t *a2)
{
  return sub_1C26717E8(*a1, *a2, &qword_1EBB80D80) & 1;
}

uint64_t sub_1C2671EEC()
{
  uint64_t v1 = *v0;
  sub_1C277C8C0();
  sub_1C2679A50((uint64_t)v3, v1, &qword_1EBB80D80, 0x1E4F2B448, &qword_1EBB80D88);
  return sub_1C277C910();
}

void sub_1C2671F4C(uint64_t a1)
{
  sub_1C2679A50(a1, *v1, &qword_1EBB80D80, 0x1E4F2B448, &qword_1EBB80D88);
}

uint64_t sub_1C2671F80()
{
  uint64_t v1 = *v0;
  sub_1C277C8C0();
  sub_1C2679A50((uint64_t)v3, v1, &qword_1EBB80D80, 0x1E4F2B448, &qword_1EBB80D88);
  return sub_1C277C910();
}

uint64_t DatabaseChangesQueryInputSignal.beginObservation(from:configurations:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = v2[10];
  uint64_t v7 = v2[11];
  __swift_project_boxed_opaque_existential_1(v2 + 7, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
  uint64_t v9 = MEMORY[0x1E4FBC870];
  uint64_t v19 = MEMORY[0x1E4FBC870];
  uint64_t v10 = *(void *)(a2 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v10; ++i)
    {
      unint64_t v12 = swift_bridgeObjectRetain();
      sub_1C2672244(v12, &qword_1EBB80D80, 0x1E4F2B448, &qword_1EBB80D88, (void (*)(id *, id))sub_1C2692120);
    }
    uint64_t v8 = swift_bridgeObjectRelease();
    uint64_t v9 = v19;
  }
  if (v5)
  {
    MEMORY[0x1F4188790](v8);
    uint64_t v14 = (uint64_t)&v13[4];
    unint64_t v15 = v13 + 8;
    id v16 = v4;
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v15);
    sub_1C267ADF0(v14);
    os_unfair_lock_unlock(v15);
    sub_1C267AE0C(v4, v5);
  }
  uint64_t v17 = sub_1C263E5BC(v9, &qword_1EBB80D80, 0x1E4F2B448, &qword_1EBB80D88);
  swift_bridgeObjectRelease();
  sub_1C266CA60(v17);
  return swift_release();
}

Swift::Void __swiftcall DatabaseChangesQueryInputSignal.stopObservation()()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

void sub_1C26721E4(unint64_t a1)
{
}

void sub_1C2672214(unint64_t a1)
{
}

void sub_1C2672244(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, id))
{
  unint64_t v6 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_1C277C170();
    sub_1C2644ED8(0, a2);
    sub_1C264E7E8(a4, a2);
    sub_1C277BC10();
    unint64_t v6 = (unint64_t)v25[1];
    char v24 = v25[2];
    uint64_t v9 = (uint64_t)v25[3];
    id v10 = v25[4];
    unint64_t v11 = (unint64_t)v25[5];
  }
  else
  {
    id v10 = 0;
    uint64_t v12 = -1 << *(unsigned char *)(a1 + 32);
    char v24 = (void *)(a1 + 56);
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v11 = v14 & *(void *)(a1 + 56);
  }
  int64_t v15 = (unint64_t)(v9 + 64) >> 6;
  if ((v6 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v11)
    {
      uint64_t v16 = (v11 - 1) & v11;
      unint64_t v17 = __clz(__rbit64(v11)) | ((void)v10 << 6);
      int64_t v18 = (char *)v10;
      goto LABEL_29;
    }
    uint64_t v20 = (uint64_t)v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v20 >= v15) {
      goto LABEL_32;
    }
    unint64_t v21 = v24[v20];
    int64_t v18 = (char *)v10 + 1;
    if (!v21)
    {
      int64_t v18 = (char *)v10 + 2;
      if ((uint64_t)v10 + 2 >= v15) {
        goto LABEL_32;
      }
      unint64_t v21 = v24[(void)v18];
      if (!v21)
      {
        int64_t v18 = (char *)v10 + 3;
        if ((uint64_t)v10 + 3 >= v15) {
          goto LABEL_32;
        }
        unint64_t v21 = v24[(void)v18];
        if (!v21)
        {
          int64_t v18 = (char *)v10 + 4;
          if ((uint64_t)v10 + 4 >= v15) {
            goto LABEL_32;
          }
          unint64_t v21 = v24[(void)v18];
          if (!v21)
          {
            int64_t v18 = (char *)v10 + 5;
            if ((uint64_t)v10 + 5 >= v15) {
              goto LABEL_32;
            }
            unint64_t v21 = v24[(void)v18];
            if (!v21)
            {
              unint64_t v22 = (char *)v10 + 6;
              while ((char *)v15 != v22)
              {
                unint64_t v21 = v24[(void)v22++];
                if (v21)
                {
                  int64_t v18 = v22 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1C2648F6C();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v16 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + ((void)v18 << 6);
LABEL_29:
    id v19 = *(id *)(*(void *)(v6 + 48) + 8 * v17);
    if (!v19) {
      goto LABEL_32;
    }
    while (1)
    {
      a5(v25, v19);

      id v10 = v18;
      unint64_t v11 = v16;
      if ((v6 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1C277C200())
      {
        sub_1C2644ED8(0, a2);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v19 = v25[0];
        swift_unknownObjectRelease();
        int64_t v18 = (char *)v10;
        uint64_t v16 = v11;
        if (v19) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_1C26724FC(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_1C2649828(&v13, *(unsigned __int8 *)(*(void *)(v1 + 48) + v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

void sub_1C2672658(uint64_t a1)
{
  int64_t v2 = 0;
  uint64_t v3 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return;
    }
    if (v12 >= v7) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    ++v2;
    if (!v13)
    {
      int64_t v2 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v2);
      if (!v13)
      {
        int64_t v2 = v12 + 2;
        if (v12 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v2);
        if (!v13)
        {
          int64_t v2 = v12 + 3;
          if (v12 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v2);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v9 = __clz(__rbit64(v13)) + (v2 << 6);
LABEL_5:
    int64_t v10 = *(void **)(*(void *)(a1 + 48) + 8 * v9);
    id v11 = v10;
    sub_1C26931A0(&v15, v10);
  }
  int64_t v14 = v12 + 4;
  if (v14 < v7)
  {
    unint64_t v13 = *(void *)(v3 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v2 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v2);
        ++v14;
        if (v13) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v14;
    goto LABEL_22;
  }
LABEL_23:

  swift_release();
}

void sub_1C26727CC(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v6 = *(void **)a1;
  id v7 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
}

uint64_t DatabaseChangesQueryInputSignal.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  swift_release();
  return v0;
}

uint64_t DatabaseChangesQueryInputSignal.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C26728C4()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1C26728F0(uint64_t a1, uint64_t a2)
{
  return DatabaseChangesQueryInputSignal.beginObservation(from:configurations:)(a1, a2);
}

uint64_t sub_1C2672914()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = *(void *)(*(void *)v0 + 88);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 56), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_1C2672974(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C267B0A8(&qword_1EBB82978, a2, (void (*)(uint64_t))type metadata accessor for DatabaseChangesQueryInputSignal);

  return MEMORY[0x1F411FB20](a1, v3);
}

uint64_t sub_1C26729E0(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v6 = a4;
  unint64_t v9 = *(void (**)(id, void *, uint64_t, void *))(a1 + 32);
  if (a4)
  {
    sub_1C2644ED8(0, &qword_1EBB80D80);
    sub_1C2644ED8(0, &qword_1EBB82F38);
    sub_1C264E7E8(&qword_1EBB80D88, &qword_1EBB80D80);
    uint64_t v6 = sub_1C277B760();
  }
  swift_retain();
  id v10 = a2;
  id v11 = a3;
  id v12 = a5;
  v9(v10, a3, v6, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2672B00@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1C263D360(a2, a3);
      id v10 = (char *)sub_1C277A590();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1C277A5B0();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1C277A5A0();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1C2672D64);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1C263CC84(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      unint64_t v17 = (char *)sub_1C277A590();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1C277A5B0();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1C277A5A0();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

void *sub_1C2672D74(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      sub_1C263E704(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      long long v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1C276AF54((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v3;
}

uint64_t sub_1C2672E90(uint64_t a1)
{
  return sub_1C263E5BC(a1, &qword_1EBB80D80, 0x1E4F2B448, &qword_1EBB80D88);
}

uint64_t sub_1C2672EAC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_1C263E704(0, (unint64_t *)&qword_1EBB85EA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      id v9[2] = v5;
      _OWORD v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

void *sub_1C2673040(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C263E704(0, &qword_1EA304270, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  long long v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 56);
  uint64_t v5 = sub_1C267A2C4(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1C2648F6C();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

unint64_t sub_1C2673164(uint64_t a1)
{
  uint64_t v2 = sub_1C277C020();
  return sub_1C2634504(a1, v2, &qword_1EBB80D80);
}

unint64_t sub_1C26731B4(uint64_t a1)
{
  uint64_t v2 = sub_1C277C020();
  return sub_1C2634504(a1, v2, &qword_1EBB84260);
}

unint64_t sub_1C2673204(uint64_t a1)
{
  uint64_t v2 = sub_1C277C240();

  return sub_1C26734C0(a1, v2);
}

unint64_t sub_1C2673248(uint64_t a1)
{
  sub_1C277C8C0();
  sub_1C277C8D0();
  uint64_t v2 = sub_1C277C910();
  return sub_1C2673588(a1, v2);
}

unint64_t sub_1C26732B0(uint64_t a1)
{
  uint64_t v2 = sub_1C277C8B0();

  return sub_1C2673588(a1, v2);
}

unint64_t sub_1C26732F4(uint64_t a1)
{
  sub_1C277B850();
  sub_1C277C8C0();
  sub_1C277B8B0();
  uint64_t v2 = sub_1C277C910();
  swift_bridgeObjectRelease();
  return sub_1C26133D0(a1, v2);
}

unint64_t sub_1C2673384(uint64_t a1)
{
  uint64_t v2 = sub_1C277C020();
  return sub_1C2634504(a1, v2, &qword_1EBB82ED0);
}

unint64_t sub_1C26733D4(uint64_t a1)
{
  sub_1C277AC50();
  sub_1C267B0A8((unint64_t *)&qword_1EBB84150, 255, MEMORY[0x1E4F66DF8]);
  uint64_t v2 = sub_1C277B7B0();

  return sub_1C2673624(a1, v2);
}

unint64_t sub_1C2673470(uint64_t a1)
{
  uint64_t v2 = sub_1C277C020();
  return sub_1C2634504(a1, v2, (unint64_t *)&qword_1EBB85E80);
}

unint64_t sub_1C26734C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1C267BB24(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1C875C160](v9, a1);
      sub_1C265E4DC((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1C2673588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1C2673624(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1C277AC50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    size_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1C267B0A8(&qword_1EBB84158, 255, MEMORY[0x1E4F66DF8]);
      char v15 = sub_1C277B810();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_1C26737E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C267BB80();
  uint64_t v6 = sub_1C277C5D0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      char v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1C262FD34(v24, v35);
      }
      else
      {
        sub_1C263FED0((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1C277C8C0();
      sub_1C277B8B0();
      uint64_t result = sub_1C277C910();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      char v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *char v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1C262FD34(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C2673AE4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C267C468();
  uint64_t result = sub_1C277C5D0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v32 = a2;
    int64_t v8 = 0;
    int64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v18 >= v12) {
          goto LABEL_31;
        }
        unint64_t v19 = v33[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v19 = v33[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v12)
            {
LABEL_31:
              if ((v32 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v33 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v33[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v19 = v33[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = 8 * v17;
      uint64_t v22 = *(void *)(*(void *)(v5 + 48) + v21);
      uint64_t v23 = *(void *)(*(void *)(v5 + 56) + v21);
      sub_1C277C8C0();
      sub_1C277C8D0();
      uint64_t result = sub_1C277C910();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = 8 * v14;
      *(void *)(*(void *)(v7 + 48) + v15) = v22;
      *(void *)(*(void *)(v7 + 56) + v15) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C2673DB0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C267C400();
  uint64_t result = sub_1C277C5D0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    int64_t v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_1C277C8B0();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C2674054(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v46 = sub_1C277AA10();
  uint64_t v5 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  char v45 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_1C267BA20(0, &qword_1EBB84348, MEMORY[0x1E4F66798]);
  int v43 = a2;
  uint64_t v8 = sub_1C277C5D0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v40 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  BOOL v38 = v2;
  int64_t v39 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  unint64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v14 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  uint64_t v42 = v7;
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v39) {
      break;
    }
    int64_t v21 = v40;
    unint64_t v22 = v40[v20];
    ++v16;
    if (!v22)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v39) {
        goto LABEL_34;
      }
      unint64_t v22 = v40[v16];
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v39)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v38;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v22 = v40[v23];
        if (!v22)
        {
          while (1)
          {
            int64_t v16 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v16 >= v39) {
              goto LABEL_34;
            }
            unint64_t v22 = v40[v16];
            ++v23;
            if (v22) {
              goto LABEL_21;
            }
          }
        }
        int64_t v16 = v23;
      }
    }
LABEL_21:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_22:
    uint64_t v24 = *(void **)(*(void *)(v7 + 48) + 8 * v19);
    uint64_t v25 = v5;
    uint64_t v26 = *(void *)(v5 + 72);
    unint64_t v27 = *(void *)(v7 + 56) + v26 * v19;
    if (v43)
    {
      (*v44)(v45, v27, v46);
    }
    else
    {
      (*v41)(v45, v27, v46);
      id v28 = v24;
    }
    sub_1C277B850();
    sub_1C277C8C0();
    sub_1C277B8B0();
    uint64_t v29 = sub_1C277C910();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v30 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v31 = v29 & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v14 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v31) & ~*(void *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v14 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v17 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(void *)(*(void *)(v9 + 48) + 8 * v17) = v24;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v44)(*(void *)(v9 + 56) + v26 * v17, v45, v46);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v42;
    uint64_t v5 = v25;
  }
  swift_release();
  uint64_t v3 = v38;
  int64_t v21 = v40;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v37 = 1 << *(unsigned char *)(v7 + 32);
  if (v37 >= 64) {
    bzero(v21, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v21 = -1 << v37;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_1C267447C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C267BA20(0, &qword_1EBB84350, (void (*)(uint64_t))sub_1C267C184);
  char v34 = a2;
  uint64_t v6 = sub_1C277C5D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v32) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v33 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v32)
        {
LABEL_33:
          swift_release();
          if ((v34 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v33 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v32) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v33 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v20);
    long long v35 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
    if ((v34 & 1) == 0)
    {
      id v30 = v29;
      swift_unknownObjectRetain();
    }
    sub_1C277B850();
    sub_1C277C8C0();
    sub_1C277B8B0();
    uint64_t v14 = sub_1C277C910();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v35;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v34 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C26747CC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C267B984();
  char v38 = a2;
  uint64_t v6 = sub_1C277C5D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    id v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = *(void *)(v5 + 56) + 16 * v21;
    uint64_t v32 = *(void *)v31;
    char v33 = *(unsigned char *)(v31 + 8);
    if ((v38 & 1) == 0)
    {
      id v34 = v30;
      sub_1C2633FC4(v32, v33);
    }
    uint64_t result = sub_1C277C020();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v30;
    uint64_t v19 = *(void *)(v7 + 56) + 16 * v18;
    *(void *)uint64_t v19 = v32;
    *(unsigned char *)(v19 + 8) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C2674ABC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C267B918(0, &qword_1EA3044E0, &qword_1EA3043C8, MEMORY[0x1E4F1AB18], MEMORY[0x1E4FBB718]);
  char v36 = a2;
  uint64_t v6 = sub_1C277C5D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_1C277C8C0();
    sub_1C277B8B0();
    uint64_t result = sub_1C277C910();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C2674E08(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2629600(0, &qword_1EBB830E0, (void (*)(uint64_t))sub_1C267C118);
  char v36 = a2;
  uint64_t v6 = sub_1C277C5D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C277C8C0();
    sub_1C277B8B0();
    uint64_t result = sub_1C277C910();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C2675138(uint64_t a1, char a2)
{
  return sub_1C26757C0(a1, a2, (void (*)(void))sub_1C267C03C);
}

uint64_t sub_1C2675150(uint64_t a1, char a2)
{
  return sub_1C26761F8(a1, a2, (void (*)(void))sub_1C267BF80);
}

uint64_t sub_1C2675168(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2629600(0, (unint64_t *)&unk_1EA304400, (void (*)(uint64_t))sub_1C267BF28);
  char v35 = a2;
  uint64_t v6 = sub_1C277C5D0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (v35)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
      if (v35)
      {
        sub_1C261F308(v24, (uint64_t)v36);
      }
      else
      {
        sub_1C26482E4((uint64_t)v24, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_1C277C8C0();
      sub_1C277B8B0();
      uint64_t result = sub_1C277C910();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = sub_1C261F308(v36, *(void *)(v7 + 56) + 40 * v14);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C2675494(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C267B88C();
  char v36 = a2;
  uint64_t v6 = sub_1C277C5D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C277C8C0();
    sub_1C277B8B0();
    uint64_t result = sub_1C277C910();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C26757A8(uint64_t a1, char a2)
{
  return sub_1C26757C0(a1, a2, (void (*)(void))sub_1C267BE58);
}

uint64_t sub_1C26757C0(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  uint64_t v7 = sub_1C277C5D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  char v36 = v3;
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    int64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    uint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_1C277C020();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  int64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1C2675A98(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C267BDF4();
  char v42 = a2;
  uint64_t v6 = sub_1C277C5D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C277C8C0();
    sub_1C277B8B0();
    uint64_t result = sub_1C277C910();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *uint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C2675DBC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1C277AC50();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1C267B6F8();
  int v46 = a2;
  uint64_t v10 = sub_1C277C5D0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  char v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  int v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    unint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_1C267B0A8((unint64_t *)&qword_1EBB84150, 255, MEMORY[0x1E4F66DF8]);
    uint64_t result = sub_1C277B7B0();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1C26761E0(uint64_t a1, char a2)
{
  return sub_1C26761F8(a1, a2, (void (*)(void))sub_1C267BD38);
}

uint64_t sub_1C26761F8(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  uint64_t v7 = sub_1C277C5D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v3;
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    int64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    unint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    unint64_t v33 = *(void **)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v33;
    }
    uint64_t result = sub_1C277C020();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  int64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1C26764CC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C267B918(0, (unint64_t *)&qword_1EA3043D0, &qword_1EBB83740, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, MEMORY[0x1E4FBB320]);
  char v36 = a2;
  uint64_t v6 = sub_1C277C5D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C277C8C0();
    sub_1C277B8B0();
    uint64_t result = sub_1C277C910();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C2676818(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for PluginFeedItem();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1C2629600(0, &qword_1EBB85940, (void (*)(uint64_t))type metadata accessor for PluginFeedItem);
  int v43 = a2;
  uint64_t v9 = sub_1C277C5D0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    unint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1C267BC50(v30, (uint64_t)v7);
    }
    else
    {
      sub_1C267BBEC(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_1C277C8C0();
    sub_1C277B8B0();
    uint64_t result = sub_1C277C910();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    void *v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1C267BC50((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1C2676BD4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C262FD44();
  uint64_t v6 = sub_1C277C5D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_1C262FD34((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1C267BB24(v25, (uint64_t)&v38);
      sub_1C263FED0(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_1C277C240();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_1C262FD34(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_1C2676EE8()
{
  uint64_t v1 = v0;
  sub_1C267BB80();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1C263FED0(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_1C262FD34(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C26770CC()
{
  uint64_t v1 = v0;
  sub_1C264C1A8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    long long v17 = (void *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    uint64_t v20 = v17[3];
    uint64_t v21 = 8 * v15;
    int64_t v22 = *(void **)(*(void *)(v2 + 56) + v21);
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = *v17;
    v23[1] = v18;
    void v23[2] = v19;
    void v23[3] = v20;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = v22;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2677294()
{
  uint64_t v1 = v0;
  sub_1C267C468();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2677420()
{
  uint64_t v1 = v0;
  sub_1C267C400();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C26775AC()
{
  uint64_t v1 = sub_1C277AA10();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C267BA20(0, &qword_1EBB84348, MEMORY[0x1E4F66798]);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C277C5C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v5 + 48) + 8 * v15);
    unint64_t v18 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(void *)(*(void *)(v7 + 48) + v16) = v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1C2677858()
{
  uint64_t v1 = v0;
  sub_1C267BA20(0, &qword_1EBB84350, (void (*)(uint64_t))sub_1C267C184);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    id v20 = v17;
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2677A30()
{
  uint64_t v1 = v0;
  sub_1C26271C4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    id v20 = (void *)(*(void *)(v4 + 48) + v16);
    *id v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1C263D360(v24, *((unint64_t *)&v24 + 1));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2677BF4()
{
  uint64_t v1 = v0;
  sub_1C267B984();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v22 = v20;
    *(unsigned char *)(v22 + 8) = v21;
    id v23 = v17;
    id result = (void *)sub_1C2633FC4(v20, v21);
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2677DBC()
{
  uint64_t v1 = v0;
  sub_1C267B918(0, &qword_1EA3044E0, &qword_1EA3043C8, MEMORY[0x1E4F1AB18], MEMORY[0x1E4FBB718]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    char v21 = (void *)(*(void *)(v4 + 48) + v16);
    *char v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_retain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2677FA8()
{
  uint64_t v1 = v0;
  sub_1C2629600(0, &qword_1EBB830E0, (void (*)(uint64_t))sub_1C267C118);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    char v21 = (void *)(*(void *)(v4 + 48) + v16);
    *char v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2678178()
{
  return sub_1C2678704((void (*)(void))sub_1C267C03C);
}

id sub_1C2678190()
{
  uint64_t v1 = v0;
  sub_1C267BF80();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2678334()
{
  uint64_t v1 = v0;
  sub_1C2629600(0, (unint64_t *)&unk_1EA304400, (void (*)(uint64_t))sub_1C267BF28);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_1C26482E4(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_1C261F308(v26, *(void *)(v4 + 56) + v20);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C2678538()
{
  uint64_t v1 = v0;
  sub_1C267B88C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C26786EC()
{
  return sub_1C2678704((void (*)(void))sub_1C267BE58);
}

void *sub_1C2678704(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C277C5C0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    uint64_t v19 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C26788B4()
{
  uint64_t v1 = v0;
  sub_1C267BDF4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    id v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2678A6C()
{
  uint64_t v1 = sub_1C277AC50();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C267B6F8();
  int64_t v24 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C277C5C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *int64_t v24 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v25 = v5 + 64;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  uint64_t v28 = v2 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    unint64_t v17 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v17, v1);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v17, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2678CFC()
{
  uint64_t v1 = v0;
  sub_1C267B918(0, (unint64_t *)&qword_1EA3043D0, &qword_1EBB83740, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, MEMORY[0x1E4FBB320]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2678EE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PluginFeedItem();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2629600(0, &qword_1EBB85940, (void (*)(uint64_t))type metadata accessor for PluginFeedItem);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C277C5C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1C267BBEC(*(void *)(v5 + 56) + v21, (uint64_t)v4);
    int64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *int64_t v22 = v19;
    v22[1] = v20;
    sub_1C267BC50((uint64_t)v4, *(void *)(v7 + 56) + v21);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C267916C()
{
  uint64_t v1 = v0;
  sub_1C262FD44();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277C5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_1C267BB24(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_1C263FED0(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_1C262FD34(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1C2679350(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != sub_1C277C1C0()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v4++, 1)) {
      goto LABEL_24;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    if (!v13) {
      break;
    }
LABEL_16:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_17:
    uint64_t v15 = 8 * v11;
    uint64_t v16 = *(void **)(*(void *)(a2 + 56) + v15);
    id v17 = *(id *)(*(void *)(a2 + 48) + v15);
    id v18 = v16;
    uint64_t v19 = sub_1C277C500();

    if (!v19)
    {

      return;
    }
    sub_1C2644ED8(0, &qword_1EBB82F38);
    swift_dynamicCast();
    char v20 = sub_1C277C030();

    if ((v20 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v4 + 1;
  if (v4 + 1 >= v9) {
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    ++v4;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_1C267951C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != sub_1C277C1C0()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_19;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v9) {
      return;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13) {
        break;
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_19:
    uint64_t v15 = 8 * v11;
    uint64_t v16 = *(void **)(*(void *)(a2 + 56) + v15);
    id v17 = *(id *)(*(void *)(a2 + 48) + v15);
    id v18 = v16;
    uint64_t v19 = sub_1C277C500();

    if (!v19)
    {

      return;
    }
    sub_1C2644ED8(0, &qword_1EBB842E0);
    swift_dynamicCast();
    char v20 = sub_1C277C030();

    if ((v20 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v12 + 2;
  if (v14 >= v9) {
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_26:
  __break(1u);
}

void sub_1C2679700(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != sub_1C277C1C0()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_6:
    id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v11);
    char v13 = sub_1C277C210();

    if ((v13 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_19;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
}

void sub_1C2679854(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C2679870(uint64_t a1, uint64_t a2)
{
  sub_1C277C910();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_1C277C8D0();
    }
    unint64_t v17 = *(void *)(v3 + 8 * v10);
    if (!v17) {
      break;
    }
LABEL_16:
    unint64_t v6 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_5:
    char v13 = *(void **)(*(void *)(a2 + 48) + 8 * v12);
    sub_1C277B850();
    sub_1C277C8C0();
    id v14 = v13;
    sub_1C277B8B0();
    uint64_t v15 = sub_1C277C910();

    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v15;
  }
  int64_t v18 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v10);
    ++v18;
    if (v17) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

void sub_1C2679A18(uint64_t a1, uint64_t a2)
{
}

void sub_1C2679A34(uint64_t a1, uint64_t a2)
{
}

void sub_1C2679A50(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  sub_1C277C910();
  int64_t v25 = a3;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C277C170();
    sub_1C2644ED8(0, a3);
    sub_1C264E7E8(a5, a3);
    sub_1C277BC10();
    a2 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    int64_t v10 = v30;
    unint64_t v11 = v31;
  }
  else
  {
    uint64_t v12 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v8 = a2 + 56;
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v11 = v14 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    int64_t v10 = 0;
  }
  uint64_t v15 = 0;
  int64_t v16 = (unint64_t)(v9 + 64) >> 6;
  while (a2 < 0)
  {
    if (!sub_1C277C200()) {
      goto LABEL_26;
    }
    sub_1C2644ED8(0, v25);
    swift_dynamicCast();
    char v20 = v26;
    if (!v26) {
      goto LABEL_26;
    }
    int64_t v19 = v10;
    uint64_t v17 = v11;
LABEL_10:
    uint64_t v22 = sub_1C277C020();

    v15 ^= v22;
    int64_t v10 = v19;
    unint64_t v11 = v17;
  }
  if (v11)
  {
    uint64_t v17 = (v11 - 1) & v11;
    unint64_t v18 = __clz(__rbit64(v11)) | (v10 << 6);
    int64_t v19 = v10;
LABEL_9:
    char v20 = *(void **)(*(void *)(a2 + 48) + 8 * v18);
    uint64_t v26 = v20;
    id v21 = v20;
    if (!v20) {
      goto LABEL_26;
    }
    goto LABEL_10;
  }
  int64_t v19 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v19 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v8 + 8 * v19);
    if (!v23)
    {
      int64_t v19 = v10 + 2;
      if (v10 + 2 >= v16) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v8 + 8 * v19);
      if (!v23)
      {
        int64_t v24 = v10 + 3;
        while (v16 != v24)
        {
          unint64_t v23 = *(void *)(v8 + 8 * v24++);
          if (v23)
          {
            int64_t v19 = v24 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        sub_1C2648F6C();
        sub_1C277C8D0();
        return;
      }
    }
LABEL_22:
    uint64_t v17 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v19 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1C2679CCC(uint64_t a1, uint64_t a2)
{
  sub_1C277C910();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_16;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_19;
    }
    if (v9 >= v7) {
      break;
    }
    uint64_t v11 = *(void *)(v3 + 8 * v9);
    if (!v11)
    {
      int64_t v12 = v9 + 1;
      if (v9 + 1 >= v7) {
        break;
      }
      uint64_t v11 = *(void *)(v3 + 8 * v12);
      if (!v11)
      {
        while (1)
        {
          int64_t v9 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            break;
          }
          if (v9 >= v7) {
            goto LABEL_17;
          }
          uint64_t v11 = *(void *)(v3 + 8 * v9);
          ++v12;
          if (v11) {
            goto LABEL_15;
          }
        }
        __break(1u);
LABEL_19:
        __break(1u);
        JUMPOUT(0x1C267A0CCLL);
      }
      ++v9;
    }
LABEL_15:
    uint64_t v6 = (v11 - 1) & v11;
LABEL_16:
    sub_1C277C8C0();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
    v8 ^= sub_1C277C910();
  }
LABEL_17:
  swift_release();
  return sub_1C277C8D0();
}

uint64_t sub_1C267A12C(uint64_t a1, uint64_t a2)
{
  sub_1C277C910();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_1C277C8D0();
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    if (!v13) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    sub_1C277C8C0();
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    uint64_t v11 = sub_1C277C910();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  int64_t v14 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

void *sub_1C267A2C4(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v27 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v28 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v29 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v18 = *(void *)(a4 + 48) + 56 * v14;
    uint64_t v20 = *(void *)(v18 + 16);
    uint64_t v19 = *(void *)(v18 + 24);
    uint64_t v22 = *(void *)(v18 + 32);
    uint64_t v21 = *(void *)(v18 + 40);
    uint64_t v23 = *(void *)(v18 + 48);
    long long v24 = *(_OWORD *)v18;
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v18;
    *(void *)(v10 + 16) = v20;
    *(void *)(v10 + 24) = v19;
    *(void *)(v10 + 32) = v22;
    *(void *)(v10 + 40) = v21;
    *(void *)(v10 + 48) = v23;
    if (v12 == v9)
    {
      id v26 = (id)v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 56;
    id v25 = (id)v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v29) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v29)
      {
        unint64_t v8 = 0;
        int64_t v11 = v15;
      }
      else
      {
        unint64_t v16 = *(void *)(v5 + 8 * v11);
        if (v16) {
          goto LABEL_14;
        }
        int64_t v17 = v15 + 2;
        if (v15 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          int64_t v15 = v17;
          goto LABEL_18;
        }
        int64_t v11 = v15 + 3;
        if (v15 + 3 < v29)
        {
          unint64_t v16 = *(void *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            int64_t v15 = v11;
            goto LABEL_18;
          }
          int64_t v17 = v15 + 4;
          if (v15 + 4 >= v29)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v15 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v15 >= v29)
              {
                unint64_t v8 = 0;
                int64_t v11 = v29 - 1;
                goto LABEL_37;
              }
              unint64_t v16 = *(void *)(v5 + 8 * v15);
              ++v17;
              if (v16) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v15 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v27;
      uint64_t result = v28;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1C267A538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v22 = a8;
  uint64_t v23 = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(boxed_opaque_existential_1, a6, a8);
  unint64_t v18 = sub_1C26813FC(MEMORY[0x1E4FBC860]);
  sub_1C264E310(0, &qword_1EBB830A0);
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 32) = 0;
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = v18;
  a7[12] = v19;
  sub_1C261F308(&v21, (uint64_t)(a7 + 7));
  a7[2] = a5;
  a7[3] = a1;
  a7[4] = a2;
  a7[5] = a3;
  a7[6] = a4;
  return a7;
}

void sub_1C267A630(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v5 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_1C277C480();
      sub_1C2644ED8(0, &qword_1EBB80D80);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_19;
  }
  if (a3)
  {
LABEL_10:
    if (sub_1C277C4B0() == *(_DWORD *)(a4 + 36))
    {
      sub_1C277C4C0();
      sub_1C2644ED8(0, &qword_1EBB80D80);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      unint64_t v5 = sub_1C2673164((uint64_t)v10);
      char v7 = v6;

      if (v7) {
        goto LABEL_12;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      return;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 64) >> a1) & 1) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  unint64_t v8 = *(void **)(*(void *)(a4 + 48) + 8 * v5);

  id v9 = v8;
}

uint64_t sub_1C267A7FC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  id v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_1C267A8AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for DatabaseChangesQueryInputSignal.QueryObserver();
  uint64_t v13 = swift_allocObject();
  sub_1C264E310(0, &qword_1EBB83098);
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(void *)(v14 + 16) = 0;
  *(void *)(v13 + 16) = v14;
  *(void *)(v13 + 24) = a4;
  int64_t v15 = (void *)swift_allocObject();
  unint64_t v16 = sub_1C267A9D0(a1, a2, a3, (uint64_t)a4, v13, v15, a6, a7);
  id v17 = a4;
  return v16;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void *sub_1C267A9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t Input = type metadata accessor for DatabaseChangesQueryInputSignal.QueryObserver();
  uint64_t v20 = &off_1F1DC6FC0;
  *(void *)&long long v18 = a5;
  unint64_t v15 = sub_1C26813FC(MEMORY[0x1E4FBC860]);
  sub_1C264E310(0, &qword_1EBB830A0);
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 32) = 0;
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = v15;
  a6[12] = v16;
  sub_1C261F308(&v18, (uint64_t)(a6 + 7));
  a6[2] = a4;
  a6[3] = a1;
  a6[4] = a8;
  a6[5] = a2;
  a6[6] = a3;
  return a6;
}

void *sub_1C267AA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v21 = a5;
  uint64_t v15 = *(void *)(a8 - 8);
  MEMORY[0x1F4188790](a1);
  id v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a6, a8);
  return sub_1C267A538(a1, a2, a3, a4, v21, (uint64_t)v17, v18, a8, a9);
}

unint64_t sub_1C267ABC4()
{
  unint64_t result = qword_1EBB82948;
  if (!qword_1EBB82948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82948);
  }
  return result;
}

unint64_t sub_1C267AC18()
{
  unint64_t result = qword_1EBB85FB0;
  if (!qword_1EBB85FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85FB0);
  }
  return result;
}

void sub_1C267AC6C()
{
  if (!qword_1EBB82DC8)
  {
    unint64_t v0 = sub_1C277B7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82DC8);
    }
  }
}

void sub_1C267ACD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C267ABC4();
    unint64_t v7 = a3(a1, &type metadata for DatabaseChangesQueryInputSignal.Anchor.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C267AD38(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C267AC6C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C267AD9C()
{
  unint64_t result = qword_1EBB859A0;
  if (!qword_1EBB859A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB859A0);
  }
  return result;
}

void sub_1C267ADF0(uint64_t a1)
{
  sub_1C26727CC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C267AE0C(void *a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1C267AE54()
{
  unint64_t result = qword_1EBB80D38;
  if (!qword_1EBB80D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB80D38);
  }
  return result;
}

unint64_t sub_1C267AEAC()
{
  unint64_t result = qword_1EBB82968;
  if (!qword_1EBB82968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82968);
  }
  return result;
}

unint64_t sub_1C267AF04()
{
  unint64_t result = qword_1EBB82970;
  if (!qword_1EBB82970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82970);
  }
  return result;
}

unint64_t sub_1C267AF5C()
{
  unint64_t result = qword_1EA3043B0;
  if (!qword_1EA3043B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3043B0);
  }
  return result;
}

unint64_t sub_1C267AFB4()
{
  unint64_t result = qword_1EBB82938;
  if (!qword_1EBB82938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82938);
  }
  return result;
}

unint64_t sub_1C267B00C()
{
  unint64_t result = qword_1EBB82940;
  if (!qword_1EBB82940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82940);
  }
  return result;
}

uint64_t sub_1C267B060(uint64_t a1, uint64_t a2)
{
  return sub_1C267B0A8(&qword_1EBB83D80, a2, (void (*)(uint64_t))type metadata accessor for DatabaseChangesQueryInputSignal);
}

uint64_t sub_1C267B0A8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C267B0F4()
{
  unint64_t result = qword_1EBB82960;
  if (!qword_1EBB82960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82960);
  }
  return result;
}

uint64_t dispatch thunk of DatabaseChangesObserver.startObserving(types:anchor:resultsHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of DatabaseChangesObserver.stopObserving()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for DatabaseChangesQueryInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DatabaseChangesQueryInputSignal);
}

uint64_t dispatch thunk of DatabaseChangesQueryInputSignal.__allocating_init(context:observer:healthStore:changesObserver:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t type metadata accessor for DatabaseChangesQueryInputSignal.QueryObserver()
{
  return self;
}

ValueMetadata *type metadata accessor for DatabaseChangesQueryInputSignal.Anchor()
{
  return &type metadata for DatabaseChangesQueryInputSignal.Anchor;
}

ValueMetadata *type metadata accessor for DatabaseChangesQueryInputSignal.Configuration()
{
  return &type metadata for DatabaseChangesQueryInputSignal.Configuration;
}

void **assignWithCopy for DatabaseChangesQueryInputSignal.QueryObserver.State(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for DatabaseChangesQueryInputSignal.QueryObserver.State(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseChangesQueryInputSignal.QueryObserver.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseChangesQueryInputSignal.QueryObserver.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseChangesQueryInputSignal.QueryObserver.State()
{
  return &type metadata for DatabaseChangesQueryInputSignal.QueryObserver.State;
}

uint64_t _s14HealthPlatform31DatabaseChangesQueryInputSignalC6AnchorVwca_0(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for DatabaseChangesQueryInputSignal.State(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr1F1DC3F91C22SharableModelReferenceVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for DatabaseChangesQueryInputSignal.State()
{
  return &type metadata for DatabaseChangesQueryInputSignal.State;
}

unsigned char *storeEnumTagSinglePayload for DatabaseChangesQueryInputSignal.Anchor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C267B4D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseChangesQueryInputSignal.Anchor.CodingKeys()
{
  return &type metadata for DatabaseChangesQueryInputSignal.Anchor.CodingKeys;
}

unint64_t sub_1C267B50C()
{
  unint64_t result = qword_1EA3043B8;
  if (!qword_1EA3043B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3043B8);
  }
  return result;
}

unint64_t sub_1C267B564()
{
  unint64_t result = qword_1EBB82958;
  if (!qword_1EBB82958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82958);
  }
  return result;
}

unint64_t sub_1C267B5BC()
{
  unint64_t result = qword_1EBB82950;
  if (!qword_1EBB82950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82950);
  }
  return result;
}

uint64_t sub_1C267B610(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F68636E61 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C278A6A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1C267B6F8()
{
  if (!qword_1EBB84330)
  {
    sub_1C277AC50();
    sub_1C277AE90();
    sub_1C267B0A8((unint64_t *)&qword_1EBB84150, 255, MEMORY[0x1E4F66DF8]);
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84330);
    }
  }
}

void sub_1C267B7A8(void **a1)
{
  int v3 = *a1;
  if (*a1)
  {
    objc_msgSend(*(id *)(v1 + 24), sel_stopQuery_, v3);
  }
  *a1 = 0;
}

void sub_1C267B7FC(void **a1)
{
  sub_1C266E0A8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1C267B820()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C267B858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a2, a3, a4);
}

void sub_1C267B88C()
{
  if (!qword_1EA3043C0)
  {
    sub_1C263E704(255, (unint64_t *)&qword_1EBB82E00, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3043C0);
    }
  }
}

void sub_1C267B918(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C2605F28(255, a3, a4, a5);
    unint64_t v6 = sub_1C277C600();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C267B984()
{
  if (!qword_1EBB84358)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85E90);
    sub_1C264E7E8(&qword_1EBB82F88, (unint64_t *)&qword_1EBB85E90);
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84358);
    }
  }
}

void sub_1C267BA20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    type metadata accessor for HKFeatureIdentifier(255);
    a3(255);
    sub_1C267B0A8(&qword_1EBB842A0, 255, type metadata accessor for HKFeatureIdentifier);
    unint64_t v5 = sub_1C277C600();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C267BAD0()
{
  unint64_t result = qword_1EBB82990;
  if (!qword_1EBB82990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82990);
  }
  return result;
}

uint64_t sub_1C267BB24(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C267BB80()
{
  if (!qword_1EBB851E0)
  {
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB851E0);
    }
  }
}

uint64_t sub_1C267BBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PluginFeedItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C267BC50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PluginFeedItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C267BCB4()
{
  if (!qword_1EA3043E0)
  {
    sub_1C2644ED8(255, &qword_1EBB80D80);
    sub_1C277A520();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA3043E0);
    }
  }
}

void sub_1C267BD38()
{
  if (!qword_1EA304490)
  {
    sub_1C2644ED8(255, &qword_1EBB84260);
    sub_1C2644ED8(255, &qword_1EBB842E0);
    sub_1C264E7E8((unint64_t *)&qword_1EBB84268, &qword_1EBB84260);
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304490);
    }
  }
}

void sub_1C267BDF4()
{
  if (!qword_1EBB80DD0)
  {
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB80DD0);
    }
  }
}

void sub_1C267BE58()
{
  if (!qword_1EA3043F0)
  {
    sub_1C2644ED8(255, &qword_1EBB82ED0);
    sub_1C263E704(255, (unint64_t *)&qword_1EBB82E00, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4FBB320]);
    sub_1C264E7E8(&qword_1EA3043F8, &qword_1EBB82ED0);
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3043F0);
    }
  }
}

unint64_t sub_1C267BF28()
{
  unint64_t result = qword_1EA3044C0;
  if (!qword_1EA3044C0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA3044C0);
  }
  return result;
}

void sub_1C267BF80()
{
  if (!qword_1EBB84370)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85E90);
    sub_1C2644ED8(255, &qword_1EBB842D0);
    sub_1C264E7E8(&qword_1EBB82F88, (unint64_t *)&qword_1EBB85E90);
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84370);
    }
  }
}

void sub_1C267C03C()
{
  if (!qword_1EBB84360)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85E90);
    sub_1C2605F28(255, &qword_1EBB84250, (uint64_t (*)(uint64_t))sub_1C264DE8C, MEMORY[0x1E4FBB320]);
    sub_1C264E7E8(&qword_1EBB82F88, (unint64_t *)&qword_1EBB85E90);
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84360);
    }
  }
}

void sub_1C267C118()
{
  if (!qword_1EBB82DE0)
  {
    unint64_t v0 = sub_1C277B7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82DE0);
    }
  }
}

unint64_t sub_1C267C184()
{
  unint64_t result = qword_1EBB83928;
  if (!qword_1EBB83928)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB83928);
  }
  return result;
}

void sub_1C267C1E4()
{
  if (!qword_1EBB83950)
  {
    type metadata accessor for HKFeatureIdentifier(255);
    sub_1C277AA10();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB83950);
    }
  }
}

uint64_t sub_1C267C258(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C2605F28(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C267C2D8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C267C314(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1C266CBD8(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1C267C31C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C266DC2C(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), a2);
}

void sub_1C267C338()
{
  if (!qword_1EBB843F8)
  {
    sub_1C2644ED8(255, &qword_1EBB80D80);
    sub_1C2644ED8(255, &qword_1EBB82F38);
    sub_1C264E7E8(&qword_1EBB80D88, &qword_1EBB80D80);
    unint64_t v0 = sub_1C277B790();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB843F8);
    }
  }
}

uint64_t sub_1C267C3F8()
{
  return sub_1C266D8E0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1C267C400()
{
  if (!qword_1EBB830E8)
  {
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB830E8);
    }
  }
}

void sub_1C267C468()
{
  if (!qword_1EBB830F0)
  {
    type metadata accessor for _HKDataTypeCode(255);
    sub_1C267B0A8((unint64_t *)&unk_1EBB82EF0, 255, type metadata accessor for _HKDataTypeCode);
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB830F0);
    }
  }
}

unint64_t sub_1C267C510(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2681BEC(0, &qword_1EBB84350, (void (*)(uint64_t))sub_1C267C184);
  uint64_t v2 = (void *)sub_1C277C5F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 40);
  while (1)
  {
    long long v11 = *v4;
    id v5 = *((id *)v4 - 1);
    swift_unknownObjectRetain();
    unint64_t result = sub_1C2673160((uint64_t)v5);
    if (v7) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v11;
    uint64_t v8 = v2[2];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      goto LABEL_11;
    }
    v2[2] = v10;
    uint64_t v4 = (_OWORD *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C267C648(uint64_t a1, uint64_t (*a2)(void))
{
  sub_1C2681B70(0, &qword_1EBB82F80, type metadata accessor for HKFeatureIdentifier, MEMORY[0x1E4F66798]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v26 - v7);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2681BEC(0, &qword_1EBB84348, MEMORY[0x1E4F66798]);
  uint64_t v9 = sub_1C277C5F0();
  uint64_t v10 = (void *)v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  uint64_t v12 = (char *)v8 + *(int *)(v5 + 48);
  uint64_t v13 = v9 + 64;
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v26[1] = a1;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = *(void *)(v6 + 72);
  swift_retain();
  while (1)
  {
    sub_1C26817FC(v15, (uint64_t)v8, &qword_1EBB82F80, type metadata accessor for HKFeatureIdentifier, MEMORY[0x1E4F66798]);
    uint64_t v17 = *v8;
    unint64_t result = a2(*v8);
    if (v19) {
      break;
    }
    unint64_t v20 = result;
    *(void *)(v13 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v10[6] + 8 * result) = v17;
    uint64_t v21 = v10[7];
    uint64_t v22 = sub_1C277AA10();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v12, v22);
    uint64_t v23 = v10[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    _OWORD v10[2] = v25;
    v15 += v16;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C267C8B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C268172C(0, &qword_1EA3044E0, &qword_1EA3043C8, MEMORY[0x1E4F1AB18], MEMORY[0x1E4FBB718]);
  uint64_t v2 = (void *)sub_1C277C5F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C2629588(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C267CA00(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2629664(0, &qword_1EBB830E0, (uint64_t)&qword_1EBB82DE0, MEMORY[0x1E4FBAEA0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C2681B08);
  uint64_t v2 = (void *)sub_1C277C5F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C2629588(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C267CB50(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2681B08(0, (unint64_t *)&qword_1EBB851F0, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = sub_1C277C5F0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  uint64_t v7 = MEMORY[0x1E4FBB960];
  while (1)
  {
    sub_1C262DD30(v6, (uint64_t)v16, (uint64_t)&unk_1EA3044D8, v7, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C262DDA0);
    unint64_t result = sub_1C2673204((uint64_t)v16);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v10 = v3[6] + 40 * result;
    long long v11 = v16[0];
    long long v12 = v16[1];
    *(void *)(v10 + 32) = v17;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    unint64_t result = (unint64_t)sub_1C262FD34(&v18, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    long long v3[2] = v15;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C267CCCC(uint64_t a1)
{
  return sub_1C267D300(a1, (void (*)(void))sub_1C267BF80, (uint64_t (*)(id))sub_1C26344B4);
}

unint64_t sub_1C267CCF8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C267C03C();
  uint64_t v2 = (void *)sub_1C277C5F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C26344B4((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C267CE00(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C262DE00(0, (unint64_t *)&qword_1EBB80DD0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1C277C5F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C2629588(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C267CF44(uint64_t a1)
{
  return sub_1C267CF74(a1, (void (*)(void))sub_1C2681934);
}

unint64_t sub_1C267CF5C(uint64_t a1)
{
  return sub_1C267CF74(a1, sub_1C268186C);
}

unint64_t sub_1C267CF74(uint64_t a1, void (*a2)(void))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v3 = (void *)sub_1C277C5F0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C2629588(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    long long v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C267D090(uint64_t a1)
{
  sub_1C2681B70(0, &qword_1EA3044A0, MEMORY[0x1E4F66DF8], MEMORY[0x1E4F66E60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v23 - v5;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C267B6F8();
  uint64_t v7 = sub_1C277C5F0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C26817FC(v13, (uint64_t)v6, &qword_1EA3044A0, MEMORY[0x1E4F66DF8], MEMORY[0x1E4F66E60]);
    unint64_t result = sub_1C26733D4((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_1C277AC50();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C267D2D4(uint64_t a1)
{
  return sub_1C267D300(a1, (void (*)(void))sub_1C267BD38, (uint64_t (*)(id))sub_1C26731B4);
}

unint64_t sub_1C267D300(uint64_t a1, void (*a2)(void), uint64_t (*a3)(id))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v5 = (void *)sub_1C277C5F0();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *v7;
    id v9 = *(v7 - 1);
    id v10 = v8;
    unint64_t result = a3(v9);
    if (v12) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = 8 * result;
    *(void *)(v5[6] + v13) = v9;
    *(void *)(v5[7] + v13) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    uint64_t v5[2] = v16;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C267D41C(uint64_t a1)
{
  sub_1C2681AA4(0, &qword_1EBB85928, (void (*)(uint64_t))type metadata accessor for PluginFeedItem);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2681A30(0, &qword_1EBB85940, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, MEMORY[0x1E4FBBD58]);
  uint64_t v7 = sub_1C277C5F0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C262DD30(v13, (uint64_t)v6, (uint64_t)&qword_1EBB85928, (uint64_t)type metadata accessor for PluginFeedItem, (uint64_t (*)(void, uint64_t, uint64_t))sub_1C2681AA4);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1C2629588(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for PluginFeedItem();
    unint64_t result = sub_1C267BC50(v10, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C267D66C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C268172C(0, (unint64_t *)&qword_1EA3043D0, &qword_1EBB83740, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, MEMORY[0x1E4FBB320]);
  uint64_t v2 = (void *)sub_1C277C5F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C2629588(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1C267D7BC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  sub_1C2681798(0, &qword_1EBB84138, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = sub_1C277AA10();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  BOOL v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66798];
    sub_1C26819C0(a1, &qword_1EBB84138, MEMORY[0x1E4F66798]);
    sub_1C2689D64((uint64_t)a2, (uint64_t)v8);

    return sub_1C26819C0((uint64_t)v8, &qword_1EBB84138, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C268B3D0((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v17;

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C267D9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1C261F308((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C268BBA0(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C26819C0(a1, (unint64_t *)&qword_1EA3044B8, (uint64_t (*)(uint64_t))sub_1C267BF28);
    sub_1C268A25C(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1C26819C0((uint64_t)v9, (unint64_t *)&qword_1EA3044B8, (uint64_t (*)(uint64_t))sub_1C267BF28);
  }
}

uint64_t static InputSignalIdentifier.featureStatus.getter()
{
  return sub_1C277AED0();
}

uint64_t static InputSignalSet.LookupKey.featureStatus.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C277AED0();
  type metadata accessor for FeatureStatusInputSignal();
  return sub_1C277ACD0();
}

uint64_t type metadata accessor for FeatureStatusInputSignal()
{
  return self;
}

uint64_t sub_1C267DB98()
{
  uint64_t v0 = sub_1C277AEE0();
  __swift_allocate_value_buffer(v0, qword_1EBB83AA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB83AA0);
  return sub_1C277AED0();
}

uint64_t FeatureStatusInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

void *FeatureStatusInputSignal.__allocating_init(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1C2680970(a1, a3, a4, a5, v5, ObjectType, a2);
}

void *FeatureStatusInputSignal.__allocating_init(context:observer:makeFeatureStatusManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v12 = (void *)swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();

  return sub_1C2680A2C(a1, a3, a4, a5, a6, v12, ObjectType, a2);
}

void *FeatureStatusInputSignal.init(context:observer:makeFeatureStatusManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1C2680A2C(a1, a3, a4, a5, a6, v6, ObjectType, a2);
}

uint64_t sub_1C267DDB0(uint64_t a1, void *a2)
{
  uint64_t v76 = sub_1C277B130();
  uint64_t v4 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v6 = (char *)v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1C277AA10();
  uint64_t v7 = MEMORY[0x1F4188790](v71);
  uint64_t v70 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  int64_t v79 = (char *)v67 - v10;
  uint64_t v11 = (void *)*a2;
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v77 = a1 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v78 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v75 = v4 + 8;
  uint64_t v68 = v9;
  uint64_t v69 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  v67[1] = v9 + 40;
  uint64_t v72 = v11;
  swift_bridgeObjectRetain();
  uint64_t v81 = a1;
  swift_bridgeObjectRetain();
  int64_t v16 = 0;
  *(void *)&long long v17 = 136315394;
  long long v74 = v17;
  uint64_t v73 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v80 = v6;
  if (v15) {
    goto LABEL_6;
  }
LABEL_7:
  BOOL v20 = __OFADD__(v16++, 1);
  if (!v20)
  {
    if (v16 >= v78) {
      goto LABEL_49;
    }
    unint64_t v21 = *(void *)(v77 + 8 * v16);
    if (v21)
    {
LABEL_17:
      unint64_t v15 = (v21 - 1) & v21;
      for (unint64_t i = __clz(__rbit64(v21)) + (v16 << 6); ; unint64_t i = v18 | (v16 << 6))
      {
        uint64_t v23 = *(void *)(a2[1] + 16);
        id v24 = *(id *)(*(void *)(v81 + 48) + 8 * i);
        uint64_t v25 = v24;
        if (v23)
        {
          sub_1C2673160((uint64_t)v24);
          if (v26)
          {

            if (!v15) {
              goto LABEL_7;
            }
            goto LABEL_6;
          }
        }
        unint64_t v82 = v15;
        int64_t v83 = v16;
        uint64_t v27 = v84;
        uint64_t v28 = (void *)(*(uint64_t (**)(void *))(v84 + 24))(v25);
        uint64_t v30 = v29;
        swift_getObjectType();
        objc_msgSend(v28, sel_registerObserver_, *(void *)(v27 + 16));
        id v31 = v25;
        swift_unknownObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v85 = (void *)a2[1];
        BOOL v33 = v85;
        uint64_t v34 = a2;
        a2[1] = 0x8000000000000000;
        unint64_t v36 = sub_1C2673160((uint64_t)v31);
        uint64_t v37 = v33[2];
        BOOL v38 = (v35 & 1) == 0;
        uint64_t v39 = v37 + v38;
        if (__OFADD__(v37, v38))
        {
          __break(1u);
          goto LABEL_51;
        }
        char v40 = v35;
        if (v33[3] >= v39)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            int v43 = v85;
            if (v35) {
              goto LABEL_28;
            }
          }
          else
          {
            sub_1C2677858();
            int v43 = v85;
            if (v40) {
              goto LABEL_28;
            }
          }
        }
        else
        {
          sub_1C267447C(v39, isUniquelyReferenced_nonNull_native);
          unint64_t v41 = sub_1C2673160((uint64_t)v31);
          if ((v40 & 1) != (v42 & 1)) {
            goto LABEL_56;
          }
          unint64_t v36 = v41;
          int v43 = v85;
          if (v40)
          {
LABEL_28:
            unint64_t v48 = (void *)(v43[7] + 16 * v36);
            swift_unknownObjectRelease();
            *unint64_t v48 = v28;
            v48[1] = v30;
            goto LABEL_29;
          }
        }
        v43[(v36 >> 6) + 8] |= 1 << v36;
        *(void *)(v43[6] + 8 * v36) = v31;
        unint64_t v44 = (void *)(v43[7] + 16 * v36);
        void *v44 = v28;
        v44[1] = v30;
        uint64_t v45 = v43[2];
        BOOL v20 = __OFADD__(v45, 1);
        uint64_t v46 = v45 + 1;
        if (v20) {
          goto LABEL_52;
        }
        v43[2] = v46;
        id v47 = v31;
LABEL_29:
        v34[1] = v43;

        swift_bridgeObjectRelease();
        uint64_t v85 = v28;
        sub_1C277AA70();
        char v49 = *v69;
        (*v69)(v70, v79, v71);
        id v50 = v31;
        uint64_t v51 = v72;
        int v52 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v85 = v51;
        unint64_t v53 = sub_1C2673160((uint64_t)v50);
        unint64_t v55 = v53;
        uint64_t v56 = v51[2];
        BOOL v57 = (v54 & 1) == 0;
        uint64_t v58 = v56 + v57;
        if (__OFADD__(v56, v57)) {
          goto LABEL_54;
        }
        char v59 = v54;
        if (v51[3] >= v58)
        {
          if (v52)
          {
            uint64_t v62 = v85;
            if (v54) {
              goto LABEL_42;
            }
          }
          else
          {
            sub_1C26775AC();
            uint64_t v62 = v85;
            if (v59) {
              goto LABEL_42;
            }
          }
        }
        else
        {
          sub_1C2674054(v58, v52);
          unint64_t v60 = sub_1C2673160((uint64_t)v50);
          if ((v59 & 1) != (v61 & 1)) {
            goto LABEL_56;
          }
          unint64_t v55 = v60;
          uint64_t v62 = v85;
          if (v59)
          {
LABEL_42:
            (*(void (**)(unint64_t, char *, uint64_t))(v68 + 40))(v62[7] + *(void *)(v68 + 72) * v55, v70, v71);
            goto LABEL_43;
          }
        }
        v62[(v55 >> 6) + 8] |= 1 << v55;
        *(void *)(v62[6] + 8 * v55) = v50;
        v49((char *)(v62[7] + *(void *)(v68 + 72) * v55), v70, v71);
        uint64_t v63 = v62[2];
        BOOL v20 = __OFADD__(v63, 1);
        uint64_t v64 = v63 + 1;
        if (v20) {
          goto LABEL_55;
        }
        v62[2] = v64;
        id v65 = v50;
LABEL_43:
        uint64_t v72 = v85;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        a2 = v34;
        unint64_t v15 = v82;
        int64_t v16 = v83;
        if (!v82) {
          goto LABEL_7;
        }
LABEL_6:
        unint64_t v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
      }
    }
    int64_t v22 = v16 + 1;
    if (v16 + 1 >= v78) {
      goto LABEL_49;
    }
    unint64_t v21 = *(void *)(v77 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = v16 + 2;
      if (v16 + 2 >= v78) {
        goto LABEL_49;
      }
      unint64_t v21 = *(void *)(v77 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = v16 + 3;
        if (v16 + 3 < v78)
        {
          unint64_t v21 = *(void *)(v77 + 8 * v22);
          if (v21) {
            goto LABEL_16;
          }
          while (1)
          {
            int64_t v16 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_53;
            }
            if (v16 >= v78) {
              break;
            }
            unint64_t v21 = *(void *)(v77 + 8 * v16);
            ++v22;
            if (v21) {
              goto LABEL_17;
            }
          }
        }
LABEL_49:
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        *a2 = v72;
        return result;
      }
    }
LABEL_16:
    int64_t v16 = v22;
    goto LABEL_17;
  }
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  type metadata accessor for HKFeatureIdentifier(0);
  uint64_t result = sub_1C277C850();
  __break(1u);
  return result;
}

uint64_t sub_1C267E5F8()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 72);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1C2681710(v2, &v7);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v7;
  swift_getObjectType();
  uint64_t v7 = v4;
  sub_1C2680CD4(&qword_1EBB82818, v5, (void (*)(uint64_t))type metadata accessor for FeatureStatusInputSignal);
  sub_1C277AE40();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C267E70C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C2681798(0, &qword_1EBB84138, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t v11 = sub_1C277AA10();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a3, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  sub_1C267D7BC((uint64_t)v10, a2);
  *a4 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C267E860(void *a1, void *a2)
{
  uint64_t v4 = sub_1C277AA10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v9 = a2;
    sub_1C277AA20();
    id v10 = objc_msgSend(a1, sel_featureIdentifier);
    sub_1C267E5F8();
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

id sub_1C267EA68()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t FeatureStatusInputSignal.deinit()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t FeatureStatusInputSignal.__deallocating_deinit()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t (*FeatureStatusInputSignal.Anchor.featureStatusByIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t static FeatureStatusInputSignal.Anchor.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C26059B8(*a1, *a2);
}

uint64_t FeatureStatusInputSignal.Configuration.init(featureIdentifiers:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t FeatureStatusInputSignal.Configuration.identifier.getter()
{
  return sub_1C277AED0();
}

uint64_t FeatureStatusInputSignal.Configuration.featureIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeatureStatusInputSignal.Configuration.featureIdentifiers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*FeatureStatusInputSignal.Configuration.featureIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t static FeatureStatusInputSignal.Configuration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C267070C(*a1, *a2);
}

uint64_t FeatureStatusInputSignal.Configuration.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1C2679870(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t FeatureStatusInputSignal.Configuration.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_1C277C8C0();
  sub_1C2679870((uint64_t)v3, v1);
  return sub_1C277C910();
}

uint64_t sub_1C267EC8C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C267070C(*a1, *a2);
}

uint64_t sub_1C267EC98()
{
  uint64_t v1 = *v0;
  sub_1C277C8C0();
  sub_1C2679870((uint64_t)v3, v1);
  return sub_1C277C910();
}

uint64_t sub_1C267ECE0(uint64_t a1)
{
  return sub_1C2679870(a1, *v1);
}

uint64_t sub_1C267ECE8()
{
  uint64_t v1 = *v0;
  sub_1C277C8C0();
  sub_1C2679870((uint64_t)v3, v1);
  return sub_1C277C910();
}

uint64_t _s14HealthPlatform24FeatureStatusInputSignalC10identifier0A13Orchestration0eF10IdentifierVvgZ_0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBB83AC0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277AEE0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBB83AA0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

Swift::Void __swiftcall FeatureStatusInputSignal.stopObservation()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 72);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1C2680B14(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_1C267EE38(uint64_t a1)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1C26814D0(v2, (void (*)(id, uint64_t, uint64_t))sub_1C2681E2C);
  swift_bridgeObjectRelease();
  unint64_t v3 = sub_1C267C510(MEMORY[0x1E4FBC860]);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v3;
  return result;
}

uint64_t FeatureStatusInputSignal.beginObservation(from:configurations:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 72);
  p_os_unfair_lock_opaque = (unint64_t *)&v1[4]._os_unfair_lock_opaque;
  unint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1C2680B30(p_os_unfair_lock_opaque, &v7);
  os_unfair_lock_unlock(v3);
  unint64_t v4 = v7;
  swift_getObjectType();
  unint64_t v7 = v4;
  sub_1C2680CD4(&qword_1EBB82818, v5, (void (*)(uint64_t))type metadata accessor for FeatureStatusInputSignal);
  sub_1C277AE40();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C267EFD4@<X0>(unint64_t *a1@<X0>, unint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t *a4@<X8>)
{
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1C26814D0(v8, (void (*)(id, uint64_t, uint64_t))sub_1C2681D30);
  swift_bridgeObjectRelease();
  unint64_t v9 = sub_1C267C510(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();
  a1[1] = v9;
  if (a2) {
    unint64_t v10 = a2;
  }
  else {
    unint64_t v10 = sub_1C267C648(MEMORY[0x1E4FBC860], (uint64_t (*)(void))sub_1C2673160);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = v10;
  uint64_t v11 = *(void *)(a3 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    uint64_t v13 = (void *)MEMORY[0x1E4FBC870];
    do
    {
      uint64_t v14 = *(void *)(a3 + 8 * v12++ + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C2701CB4(v14, v13);
      uint64_t v13 = v15;
      swift_bridgeObjectRelease();
    }
    while (v11 != v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC870];
  }
  sub_1C267DDB0((uint64_t)v13, a1);
  swift_bridgeObjectRelease();
  *a4 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C267F154()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1C267F180()
{
  return FeatureStatusInputSignal.beginObservation(from:configurations:)();
}

void sub_1C267F1A4()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 72);
  uint64_t v2 = (uint64_t)&v1[4];
  unint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1C2680B14(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_1C267F208(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C2680CD4(&qword_1EBB82818, a2, (void (*)(uint64_t))type metadata accessor for FeatureStatusInputSignal);

  return MEMORY[0x1F411FB20](a1, v3);
}

uint64_t sub_1C267F274(uint64_t a1, void *a2)
{
  unint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2681798(0, &qword_1EBB84138, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  char v100 = (char *)&v96 - v6;
  uint64_t v7 = sub_1C277AA10();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v102 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v114 = (char *)&v96 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v103 = (char *)&v96 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  id v107 = (char *)&v96 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v119 = (char *)&v96 - v17;
  sub_1C2681798(0, &qword_1EBB84298, (uint64_t (*)(uint64_t))sub_1C267C1E4, v4);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  char v113 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v112 = (void **)((char *)&v96 - v21);
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v101 = a1 + 64;
  uint64_t v23 = -1 << *(unsigned char *)(a1 + 32);
  if (-v23 < 64) {
    uint64_t v24 = ~(-1 << -(char)v23);
  }
  else {
    uint64_t v24 = -1;
  }
  unint64_t v25 = v24 & v22;
  uint64_t v98 = -1 << *(unsigned char *)(a1 + 32);
  char v115 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  unint64_t v116 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  char v99 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v104 = (void (**)(unint64_t, char *, uint64_t))(v8 + 40);
  int64_t v105 = (unint64_t)(63 - v23) >> 6;
  uint64_t v111 = (void (**)(char *, uint64_t))(v8 + 8);
  int64_t v97 = v105 - 1;
  uint64_t v109 = a1;
  swift_bridgeObjectRetain();
  int64_t v26 = 0;
  uint64_t v110 = v8;
  unint64_t v108 = a2;
  while (1)
  {
    if (v25)
    {
      uint64_t v118 = (v25 - 1) & v25;
      unint64_t v28 = __clz(__rbit64(v25)) | (v26 << 6);
      int64_t v29 = v26;
      uint64_t v30 = v113;
LABEL_10:
      uint64_t v31 = *(void *)(v109 + 56);
      unint64_t v32 = *(void **)(*(void *)(v109 + 48) + 8 * v28);
      *(void *)uint64_t v30 = v32;
      uint64_t v33 = v31 + *(void *)(v8 + 72) * v28;
      sub_1C267C1E4();
      uint64_t v35 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(&v30[*(int *)(v34 + 48)], v33, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v30, 0, 1, v35);
      id v36 = v32;
      int64_t v37 = v29;
      goto LABEL_31;
    }
    int64_t v29 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      goto LABEL_65;
    }
    int64_t v37 = v26;
    if (v29 < v105)
    {
      unint64_t v38 = *(void *)(v101 + 8 * v29);
      if (v38) {
        goto LABEL_14;
      }
      int64_t v39 = v26 + 2;
      int64_t v37 = v26 + 1;
      if (v26 + 2 < v105)
      {
        unint64_t v38 = *(void *)(v101 + 8 * v39);
        if (v38) {
          goto LABEL_18;
        }
        int64_t v37 = v26 + 2;
        if (v26 + 3 < v105)
        {
          unint64_t v38 = *(void *)(v101 + 8 * (v26 + 3));
          if (v38)
          {
            int64_t v29 = v26 + 3;
LABEL_14:
            uint64_t v30 = v113;
LABEL_15:
            uint64_t v118 = (v38 - 1) & v38;
            unint64_t v28 = __clz(__rbit64(v38)) + (v29 << 6);
            goto LABEL_10;
          }
          int64_t v39 = v26 + 4;
          int64_t v37 = v26 + 3;
          if (v26 + 4 < v105) {
            break;
          }
        }
      }
    }
LABEL_30:
    sub_1C267C1E4();
    uint64_t v35 = v40;
    uint64_t v30 = v113;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v113, 1, 1, v40);
    uint64_t v118 = 0;
LABEL_31:
    unint64_t v41 = v112;
    sub_1C2681C9C((uint64_t)v30, (uint64_t)v112);
    sub_1C267C1E4();
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v41, 1, v35) == 1) {
      return sub_1C2648F6C();
    }
    int64_t v117 = v37;
    char v42 = (char *)v41 + *(int *)(v35 + 48);
    int v43 = *v41;
    unint64_t v44 = *v116;
    (*v116)(v119, v42, v7);
    uint64_t v45 = *a2;
    if (*(void *)(*a2 + 16))
    {
      unint64_t v46 = sub_1C2673160((uint64_t)v43);
      id v47 = *v115;
      if (v48)
      {
        uint64_t v49 = *(void *)(v45 + 56);
        uint64_t v106 = *(void *)(v8 + 72);
        id v50 = v103;
        v47(v103, v49 + v106 * v46, v7);
        uint64_t v51 = v107;
        v44(v107, v50, v7);
        sub_1C2680CD4(&qword_1EBB83920, 255, MEMORY[0x1E4F66798]);
        id v52 = v43;
        if (sub_1C277B810())
        {
          v47(v102, (unint64_t)v51, v7);
          unint64_t v53 = v108;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v120 = (void *)*v53;
          unint64_t v55 = v120;
          *unint64_t v53 = 0x8000000000000000;
          unint64_t v57 = sub_1C2673160((uint64_t)v52);
          uint64_t v58 = v55[2];
          BOOL v59 = (v56 & 1) == 0;
          uint64_t v60 = v58 + v59;
          if (__OFADD__(v58, v59)) {
            goto LABEL_67;
          }
          char v61 = v56;
          uint64_t v62 = v52;
          if (v55[3] >= v60)
          {
            a2 = v108;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1C26775AC();
            }
          }
          else
          {
            sub_1C2674054(v60, isUniquelyReferenced_nonNull_native);
            unint64_t v63 = sub_1C2673160((uint64_t)v52);
            a2 = v108;
            if ((v61 & 1) != (v64 & 1)) {
              goto LABEL_70;
            }
            unint64_t v57 = v63;
          }
          uint64_t v8 = v110;
          unint64_t v90 = v120;
          if (v61)
          {
            (*v104)(v120[7] + v57 * v106, v102, v7);
          }
          else
          {
            v120[(v57 >> 6) + 8] |= 1 << v57;
            *(void *)(v90[6] + 8 * v57) = v62;
            v44((char *)(v90[7] + v57 * v106), v102, v7);
            uint64_t v91 = v90[2];
            BOOL v78 = __OFADD__(v91, 1);
            uint64_t v92 = v91 + 1;
            if (v78) {
              goto LABEL_68;
            }
            v90[2] = v92;
            id v93 = v62;
          }
          *a2 = v120;

          swift_bridgeObjectRelease();
          uint64_t v89 = v107;
        }
        else
        {
          uint64_t v81 = v108;
          swift_bridgeObjectRetain();
          unint64_t v82 = sub_1C2673160((uint64_t)v52);
          char v84 = v83;
          swift_bridgeObjectRelease();
          if (v84)
          {
            char v85 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v86 = *v81;
            uint64_t v120 = (void *)*v81;
            *uint64_t v81 = 0x8000000000000000;
            if ((v85 & 1) == 0)
            {
              sub_1C26775AC();
              uint64_t v86 = (uint64_t)v120;
            }

            uint64_t v87 = (uint64_t)v100;
            v44(v100, (char *)(*(void *)(v86 + 56) + v82 * v106), v7);
            sub_1C268A744(v82, v86);
            *uint64_t v81 = v86;
            swift_bridgeObjectRelease();
            uint64_t v88 = 0;
          }
          else
          {
            uint64_t v88 = 1;
            uint64_t v87 = (uint64_t)v100;
          }
          (*v99)(v87, v88, 1, v7);

          sub_1C26819C0(v87, &qword_1EBB84138, MEMORY[0x1E4F66798]);
          uint64_t v89 = v107;
          a2 = v108;
        }
        int64_t v27 = v117;
        uint64_t v94 = *v111;
        (*v111)(v89, v7);
        v94(v119, v7);
        unint64_t v25 = v118;
        goto LABEL_7;
      }
    }
    else
    {
      id v47 = *v115;
    }
    v47(v114, (unint64_t)v119, v7);
    id v65 = v43;
    int v66 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v120 = (void *)*a2;
    uint64_t v67 = v120;
    *a2 = 0x8000000000000000;
    unint64_t v69 = sub_1C2673160((uint64_t)v65);
    uint64_t v70 = v67[2];
    BOOL v71 = (v68 & 1) == 0;
    uint64_t v72 = v70 + v71;
    if (__OFADD__(v70, v71))
    {
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    char v73 = v68;
    if (v67[3] >= v72)
    {
      if ((v66 & 1) == 0) {
        sub_1C26775AC();
      }
    }
    else
    {
      sub_1C2674054(v72, v66);
      unint64_t v74 = sub_1C2673160((uint64_t)v65);
      if ((v73 & 1) != (v75 & 1)) {
        goto LABEL_70;
      }
      unint64_t v69 = v74;
    }
    uint64_t v8 = v110;
    uint64_t v76 = v120;
    if (v73)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v110 + 40))(v120[7] + *(void *)(v110 + 72) * v69, v114, v7);
    }
    else
    {
      v120[(v69 >> 6) + 8] |= 1 << v69;
      *(void *)(v76[6] + 8 * v69) = v65;
      v44((char *)(v76[7] + *(void *)(v8 + 72) * v69), v114, v7);
      uint64_t v77 = v76[2];
      BOOL v78 = __OFADD__(v77, 1);
      uint64_t v79 = v77 + 1;
      if (v78) {
        goto LABEL_66;
      }
      v76[2] = v79;
      id v80 = v65;
    }
    *a2 = v120;

    swift_bridgeObjectRelease();
    (*v111)(v119, v7);
    int64_t v27 = v117;
    unint64_t v25 = v118;
LABEL_7:

    int64_t v26 = v27;
  }
  unint64_t v38 = *(void *)(v101 + 8 * v39);
  if (v38)
  {
LABEL_18:
    int64_t v29 = v39;
    goto LABEL_14;
  }
  uint64_t v30 = v113;
  while (1)
  {
    int64_t v29 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v29 >= v105)
    {
      int64_t v37 = v97;
      goto LABEL_30;
    }
    unint64_t v38 = *(void *)(v101 + 8 * v29);
    ++v39;
    if (v38) {
      goto LABEL_15;
    }
  }
LABEL_69:
  __break(1u);
LABEL_70:
  type metadata accessor for HKFeatureIdentifier(0);
  uint64_t result = sub_1C277C850();
  __break(1u);
  return result;
}

uint64_t FeatureStatusInputSignal.Anchor.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBB83AC0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277AEE0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBB83AA0);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t FeatureStatusInputSignal.Anchor.merged(with:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v6 = *v2;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C267F274(v4, &v6);
  *a2 = v6;
  return result;
}

uint64_t FeatureStatusInputSignal.Anchor.hasDifference(from:for:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v5 = sub_1C277AA10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v66 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2680B50();
  uint64_t v75 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &qword_1EBB84138;
  sub_1C2681798(0, &qword_1EBB84138, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v68 = (uint64_t)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v63 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = *a1;
  uint64_t v19 = *a2;
  uint64_t v21 = (char *)&v63 - v20;
  uint64_t v22 = *(void *)(v19 + 56);
  uint64_t v71 = v19 + 56;
  uint64_t v23 = 1 << *(unsigned char *)(v19 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  uint64_t v25 = *v2;
  unint64_t v80 = v24 & v22;
  int64_t v72 = (unint64_t)(v23 + 63) >> 6;
  BOOL v78 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v69 = v6 + 16;
  uint64_t v70 = v6;
  int64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  char v64 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v67 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v76 = v19;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v28 = 0;
  uint64_t v74 = v25;
  uint64_t v79 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v65 = v18;
  while (1)
  {
    if (v80)
    {
      unint64_t v29 = (v80 - 1) & v80;
      unint64_t v30 = __clz(__rbit64(v80)) | (v28 << 6);
      goto LABEL_20;
    }
    int64_t v31 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v31 >= v72) {
      goto LABEL_39;
    }
    unint64_t v32 = *(void *)(v71 + 8 * v31);
    ++v28;
    if (!v32)
    {
      int64_t v28 = v31 + 1;
      if (v31 + 1 >= v72) {
        goto LABEL_39;
      }
      unint64_t v32 = *(void *)(v71 + 8 * v28);
      if (!v32)
      {
        int64_t v28 = v31 + 2;
        if (v31 + 2 >= v72) {
          goto LABEL_39;
        }
        unint64_t v32 = *(void *)(v71 + 8 * v28);
        if (!v32) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v29 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v28 << 6);
LABEL_20:
    uint64_t v34 = *(void **)(*(void *)(v76 + 48) + 8 * v30);
    uint64_t v35 = *(void *)(v25 + 16);
    int64_t v77 = v28;
    unint64_t v80 = v29;
    if (v35)
    {
      id v36 = v34;
      unint64_t v37 = sub_1C2673160((uint64_t)v36);
      if (v38)
      {
        uint64_t v39 = *(void *)(v25 + 56);
        uint64_t v40 = v70;
        (*(void (**)(char *, unint64_t, uint64_t))(v70 + 16))(v21, v39 + *(void *)(v70 + 72) * v37, v5);
        unint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
        v41(v21, 0, 1, v5);
      }
      else
      {
        unint64_t v41 = *v78;
        (*v78)(v21, 1, 1, v5);
      }

      int64_t v26 = v79;
      if (!v18) {
        goto LABEL_30;
      }
    }
    else
    {
      unint64_t v41 = *v78;
      (*v78)(v21, 1, 1, v5);
      id v42 = v34;
      if (!v18) {
        goto LABEL_30;
      }
    }
    if (*(void *)(v18 + 16))
    {
      id v43 = v34;
      unint64_t v44 = sub_1C2673160((uint64_t)v43);
      if (v45)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v70 + 16))(v17, *(void *)(v18 + 56) + *(void *)(v70 + 72) * v44, v5);
        unint64_t v46 = v17;
        uint64_t v47 = 0;
      }
      else
      {
        unint64_t v46 = v17;
        uint64_t v47 = 1;
      }
      v41(v46, v47, 1, v5);

      int64_t v26 = v79;
      goto LABEL_33;
    }
LABEL_30:
    v41(v17, 1, 1, v5);
LABEL_33:
    uint64_t v48 = (uint64_t)&v10[*(int *)(v75 + 48)];
    sub_1C2680BE4((uint64_t)v21, (uint64_t)v10);
    sub_1C2680BE4((uint64_t)v17, v48);
    uint64_t v49 = *v26;
    if ((*v26)(v10, 1, v5) == 1)
    {

      id v50 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66798];
      sub_1C26819C0((uint64_t)v17, v11, MEMORY[0x1E4F66798]);
      uint64_t v51 = v50;
      int64_t v26 = v79;
      sub_1C26819C0((uint64_t)v21, v11, v51);
      if (v49((char *)v48, 1, v5) != 1) {
        goto LABEL_41;
      }
      uint64_t result = sub_1C26819C0((uint64_t)v10, v11, MEMORY[0x1E4F66798]);
      uint64_t v25 = v74;
      int64_t v28 = v77;
    }
    else
    {
      uint64_t v52 = (uint64_t)v21;
      uint64_t v53 = (uint64_t)v17;
      char v54 = v11;
      uint64_t v55 = v68;
      sub_1C2680BE4((uint64_t)v10, v68);
      if (v49((char *)v48, 1, v5) == 1)
      {

        uint64_t v62 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66798];
        sub_1C26819C0(v53, &qword_1EBB84138, MEMORY[0x1E4F66798]);
        sub_1C26819C0(v52, &qword_1EBB84138, v62);
        (*v67)(v55, v5);
LABEL_41:
        sub_1C2680C78((uint64_t)v10);
LABEL_42:
        swift_release();
        return 1;
      }
      char v56 = v66;
      (*v64)(v66, v48, v5);
      sub_1C2680CD4(&qword_1EBB83920, 255, MEMORY[0x1E4F66798]);
      int v73 = sub_1C277B810();

      unint64_t v57 = *v67;
      (*v67)((uint64_t)v56, v5);
      uint64_t v58 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66798];
      BOOL v59 = v54;
      uint64_t v17 = (char *)v53;
      sub_1C26819C0(v53, v59, MEMORY[0x1E4F66798]);
      uint64_t v21 = (char *)v52;
      sub_1C26819C0(v52, v59, v58);
      uint64_t v60 = v55;
      uint64_t v11 = v59;
      v57(v60, v5);
      char v61 = v58;
      int64_t v26 = v79;
      uint64_t result = sub_1C26819C0((uint64_t)v10, v59, v61);
      uint64_t v18 = v65;
      uint64_t v25 = v74;
      int64_t v28 = v77;
      if ((v73 & 1) == 0) {
        goto LABEL_42;
      }
    }
  }
  int64_t v33 = v31 + 3;
  if (v33 >= v72)
  {
LABEL_39:
    swift_release();
    return 0;
  }
  unint64_t v32 = *(void *)(v71 + 8 * v33);
  if (v32)
  {
    int64_t v28 = v33;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v28 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v28 >= v72) {
      goto LABEL_39;
    }
    unint64_t v32 = *(void *)(v71 + 8 * v28);
    ++v33;
    if (v32) {
      goto LABEL_19;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1C2680550@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v6 = *v2;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C267F274(v4, &v6);
  *a2 = v6;
  return result;
}

unint64_t sub_1C26805A8()
{
  return 0xD000000000000019;
}

uint64_t sub_1C26805C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2681688(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C26805F0(uint64_t a1)
{
  unint64_t v2 = sub_1C2680D78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C268062C(uint64_t a1)
{
  unint64_t v2 = sub_1C2680D78();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeatureStatusInputSignal.Anchor.init(from:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v4 = sub_1C267C648(MEMORY[0x1E4FBC860], (uint64_t (*)(void))sub_1C2673160);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  *a2 = v4;
  return result;
}

uint64_t FeatureStatusInputSignal.Anchor.encode(to:)(void *a1)
{
  sub_1C2680D1C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2680D78();
  sub_1C277C9B0();
  sub_1C277C770();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C26807EC@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v4 = sub_1C267C648(MEMORY[0x1E4FBC860], (uint64_t (*)(void))sub_1C2673160);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_1C2680850(void *a1)
{
  sub_1C2680D1C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2680D78();
  sub_1C277C9B0();
  sub_1C277C770();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void *sub_1C2680970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a4;
  uint64_t v14 = (void *)swift_allocObject();

  return sub_1C2680A2C(a1, a2, a3, (uint64_t)sub_1C2681DDC, v13, v14, a6, a7);
}

void *sub_1C2680A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = MEMORY[0x1E4FBC860];
  unint64_t v16 = sub_1C267C648(MEMORY[0x1E4FBC860], (uint64_t (*)(void))sub_1C2673160);
  unint64_t v17 = sub_1C267C510(v15);
  sub_1C2681D44();
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 32) = 0;
  *(void *)(v18 + 16) = v16;
  *(void *)(v18 + 24) = v17;
  a6[8] = a3;
  a6[9] = v18;
  a6[3] = a4;
  a6[4] = a5;
  a6[5] = a1;
  a6[6] = a8;
  a6[7] = a2;
  a6[2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeatureStatusInputSignal.FeatureStatusObserver()), sel_init);
  swift_weakAssign();
  return a6;
}

uint64_t sub_1C2680B14(uint64_t a1)
{
  return sub_1C267EE38(a1);
}

uint64_t sub_1C2680B30@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1C267EFD4(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

void sub_1C2680B50()
{
  if (!qword_1EBB84140)
  {
    sub_1C2681798(255, &qword_1EBB84138, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB84140);
    }
  }
}

uint64_t sub_1C2680BE4(uint64_t a1, uint64_t a2)
{
  sub_1C2681798(0, &qword_1EBB84138, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2680C78(uint64_t a1)
{
  sub_1C2680B50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2680CD4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2680D1C()
{
  if (!qword_1EBB84398)
  {
    sub_1C2680D78();
    unint64_t v0 = sub_1C277C780();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84398);
    }
  }
}

unint64_t sub_1C2680D78()
{
  unint64_t result = qword_1EBB83AE0;
  if (!qword_1EBB83AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83AE0);
  }
  return result;
}

unint64_t sub_1C2680DD0()
{
  unint64_t result = qword_1EBB83AC8;
  if (!qword_1EBB83AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83AC8);
  }
  return result;
}

unint64_t sub_1C2680E28()
{
  unint64_t result = qword_1EBB83AD0;
  if (!qword_1EBB83AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83AD0);
  }
  return result;
}

uint64_t sub_1C2680E7C(uint64_t a1, uint64_t a2)
{
  return sub_1C2680CD4(&qword_1EBB83B38, a2, (void (*)(uint64_t))type metadata accessor for FeatureStatusInputSignal);
}

unint64_t sub_1C2680EC8()
{
  unint64_t result = qword_1EBB83B00;
  if (!qword_1EBB83B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83B00);
  }
  return result;
}

unint64_t sub_1C2680F20()
{
  unint64_t result = qword_1EBB83B28;
  if (!qword_1EBB83B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83B28);
  }
  return result;
}

unint64_t sub_1C2680F78()
{
  unint64_t result = qword_1EBB83B10;
  if (!qword_1EBB83B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83B10);
  }
  return result;
}

unint64_t sub_1C2680FD0()
{
  unint64_t result = qword_1EBB83B18;
  if (!qword_1EBB83B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83B18);
  }
  return result;
}

unint64_t sub_1C2681028()
{
  unint64_t result = qword_1EA304410;
  if (!qword_1EA304410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304410);
  }
  return result;
}

uint64_t method lookup function for FeatureStatusInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeatureStatusInputSignal);
}

uint64_t dispatch thunk of FeatureStatusInputSignal.__allocating_init(context:observer:makeFeatureStatusManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t type metadata accessor for FeatureStatusInputSignal.FeatureStatusObserver()
{
  return self;
}

ValueMetadata *type metadata accessor for FeatureStatusInputSignal.Anchor()
{
  return &type metadata for FeatureStatusInputSignal.Anchor;
}

ValueMetadata *type metadata accessor for FeatureStatusInputSignal.Configuration()
{
  return &type metadata for FeatureStatusInputSignal.Configuration;
}

void *sub_1C26810F0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FeatureStatusInputSignal.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FeatureStatusInputSignal.State(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureStatusInputSignal.State(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for FeatureStatusInputSignal.State()
{
  return &type metadata for FeatureStatusInputSignal.State;
}

unsigned char *storeEnumTagSinglePayload for FeatureStatusInputSignal.Anchor.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C26812BCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusInputSignal.Anchor.CodingKeys()
{
  return &type metadata for FeatureStatusInputSignal.Anchor.CodingKeys;
}

unint64_t sub_1C26812F8()
{
  unint64_t result = qword_1EA304488;
  if (!qword_1EA304488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304488);
  }
  return result;
}

unint64_t sub_1C2681350()
{
  unint64_t result = qword_1EBB83AF0;
  if (!qword_1EBB83AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83AF0);
  }
  return result;
}

unint64_t sub_1C26813A8()
{
  unint64_t result = qword_1EBB83AE8;
  if (!qword_1EBB83AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83AE8);
  }
  return result;
}

unint64_t sub_1C26813FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1C267C468();
    int v3 = (void *)sub_1C277C5F0();
    for (unint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_1C267315C(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      long long v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

void sub_1C26814D0(uint64_t a1, void (*a2)(id, uint64_t, uint64_t))
{
  uint64_t v19 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v7) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v19 + 8 * v16);
    ++v8;
    if (!v17)
    {
      int64_t v8 = v16 + 1;
      if (v16 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v17 = *(void *)(v19 + 8 * v8);
      if (!v17)
      {
        int64_t v8 = v16 + 2;
        if (v16 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v17 = *(void *)(v19 + 8 * v8);
        if (!v17)
        {
          int64_t v8 = v16 + 3;
          if (v16 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v17 = *(void *)(v19 + 8 * v8);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v17 - 1) & v17;
    unint64_t v10 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_5:
    BOOL v11 = *(void **)(*(void *)(a1 + 48) + 8 * v10);
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v10);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    id v15 = v11;
    swift_unknownObjectRetain();
    a2(v15, v13, v14);
    swift_unknownObjectRelease();
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v17 = *(void *)(v19 + 8 * v18);
  if (v17)
  {
    int64_t v8 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v8 >= v7) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v19 + 8 * v8);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1C2681688(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000001C278A840)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1C2681710@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C267E70C(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

void sub_1C268172C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C2681798(255, a3, a4, a5);
    unint64_t v6 = sub_1C277C600();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C2681798(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C26817FC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  sub_1C2681B70(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_1C268186C(uint64_t a1)
{
}

void sub_1C26818A0(uint64_t a1)
{
}

void sub_1C26818D4()
{
  if (!qword_1EBB80858)
  {
    unint64_t v0 = sub_1C277BC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB80858);
    }
  }
}

void sub_1C2681934()
{
  if (!qword_1EBB84340)
  {
    sub_1C262DE00(255, (unint64_t *)&qword_1EBB84238, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = sub_1C277C600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84340);
    }
  }
}

uint64_t sub_1C26819C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2681798(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C2681A30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, MEMORY[0x1E4FBB1A0], v7, MEMORY[0x1E4FBB1B0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2681AA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C2681B08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, uint64_t, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB960], MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB968]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2681B70(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C2681BEC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    type metadata accessor for HKFeatureIdentifier(255);
    a3(255);
    sub_1C2680CD4(&qword_1EBB842A0, 255, type metadata accessor for HKFeatureIdentifier);
    unint64_t v5 = sub_1C277C600();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C2681C9C(uint64_t a1, uint64_t a2)
{
  sub_1C2681798(0, &qword_1EBB84298, (uint64_t (*)(uint64_t))sub_1C267C1E4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1C2681D30(int a1, id a2)
{
  return objc_msgSend(a2, sel_unregisterObserver_, *(void *)(v2 + 16));
}

void sub_1C2681D44()
{
  if (!qword_1EBB83060)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83060);
    }
  }
}

uint64_t sub_1C2681DA4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C2681DDC(uint64_t a1)
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B068]), sel_initWithFeatureIdentifier_healthStore_countryCodeSource_, a1, *(void *)(v1 + 16), 1);
}

uint64_t NSOrderedSet.asLazyArray<A>(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  sub_1C2682180();
  sub_1C2682254(&qword_1EBB83030, (void (*)(uint64_t))sub_1C2682180);
  id v3 = v2;
  sub_1C277C630();
  swift_release();

  return v6;
}

uint64_t sub_1C2681F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C277C0B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v14 - v8;
  sub_1C263FED0(a1, (uint64_t)v15);
  int v10 = swift_dynamicCast();
  BOOL v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  if (v10)
  {
    uint64_t v12 = *(void *)(a2 - 8);
    v11(v9, 0, 1, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a3, v9, a2);
  }
  else
  {
    v11(v9, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1C263FED0(a1, (uint64_t)v15);
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    sub_1C277C2D0();
    sub_1C277B8D0();
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    swift_getDynamicType();
    sub_1C277C9E0();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2682168()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2682178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2681F24(a1, *(void *)(v2 + 16), a2);
}

void sub_1C2682180()
{
  if (!qword_1EBB80F00)
  {
    sub_1C2682214();
    sub_1C2682254(&qword_1EBB82EC0, (void (*)(uint64_t))sub_1C2682214);
    unint64_t v0 = sub_1C277C300();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB80F00);
    }
  }
}

unint64_t sub_1C2682214()
{
  unint64_t result = qword_1EBB82EC8;
  if (!qword_1EBB82EC8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB82EC8);
  }
  return result;
}

uint64_t sub_1C2682254(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t NSOrderedSet.asArray<A>(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C277BB30();
}

uint64_t FeatureStatusFeedItemGeneratorPipeline.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  id v6 = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t FeatureStatusFeedItemGeneratorPipeline.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  return sub_1C2647B18(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
}

id FeatureStatusFeedItemGeneratorPipeline.feedItemPredicate.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for FeatureStatusFeedItemGeneratorPipeline() + 24);
  id v2 = *(id *)v1;
  sub_1C2646704(*(id *)v1, *(void **)(v1 + 8), *(void **)(v1 + 16), *(unsigned char *)(v1 + 24));
  return v2;
}

unint64_t sub_1C268246C()
{
  unint64_t result = qword_1EBB80780;
  if (!qword_1EBB80780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB80780);
  }
  return result;
}

uint64_t FeatureStatusFeedItemGeneratorPipeline.makeFeedItemsPublisher(change:)(uint64_t a1)
{
  uint64_t v2 = sub_1C277AA10();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26827F4();
  uint64_t v20 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2647B18(v19, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeatureStatusFeedItemGeneratorPipeline);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v14 = (v7 + *(unsigned __int8 *)(v3 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = swift_allocObject();
  sub_1C2647BE8((uint64_t)v8, v15 + v13, (uint64_t (*)(void))type metadata accessor for FeatureStatusFeedItemGeneratorPipeline);
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v14, (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1C2682888();
  sub_1C26478EC(&qword_1EBB82B48, (void (*)(uint64_t))sub_1C2682888);
  sub_1C277B4A0();
  sub_1C26478EC((unint64_t *)&qword_1EBB82D90, (void (*)(uint64_t))sub_1C26827F4);
  uint64_t v16 = v20;
  uint64_t v17 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v16);
  return v17;
}

void sub_1C26827F4()
{
  if (!qword_1EBB82D98)
  {
    sub_1C2682888();
    sub_1C26478EC(&qword_1EBB82B48, (void (*)(uint64_t))sub_1C2682888);
    unint64_t v0 = sub_1C277B4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82D98);
    }
  }
}

void sub_1C2682888()
{
  if (!qword_1EBB82B50)
  {
    sub_1C268291C();
    sub_1C26478EC(&qword_1EBB82BE0, (void (*)(uint64_t))sub_1C268291C);
    unint64_t v0 = sub_1C277B250();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82B50);
    }
  }
}

void sub_1C268291C()
{
  if (!qword_1EBB82BE8)
  {
    sub_1C265D8B0();
    sub_1C26478EC(&qword_1EBB82A68, (void (*)(uint64_t))sub_1C265D8B0);
    unint64_t v0 = sub_1C277B290();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82BE8);
    }
  }
}

uint64_t sub_1C26829B0(uint64_t a1, uint64_t a2)
{
  sub_1C268291C();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void *)(a1 + *(int *)(type metadata accessor for FeatureStatusFeedItemGeneratorPipeline() + 28));
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C2748BF8((void (*)(uint64_t))sub_1C2683F34, (uint64_t)v12, v9);
  swift_bridgeObjectRelease();
  uint64_t v15 = v10;
  sub_1C265D8B0();
  sub_1C2647844(0, &qword_1EBB82E18, (uint64_t (*)(uint64_t))sub_1C265D8B0, MEMORY[0x1E4FBB320]);
  sub_1C26478EC(&qword_1EBB82A68, (void (*)(uint64_t))sub_1C265D8B0);
  sub_1C26840B8(&qword_1EBB82E20, &qword_1EBB82E18, (uint64_t (*)(uint64_t))sub_1C265D8B0);
  sub_1C277B2A0();
  sub_1C26478EC(&qword_1EBB82BE0, (void (*)(uint64_t))sub_1C268291C);
  sub_1C277B590();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C2682BEC()
{
  return sub_1C26478A8(&qword_1EBB836B0, &qword_1EBB836B8, MEMORY[0x1E4F1AAE0]);
}

uint64_t sub_1C2682C3C()
{
  return sub_1C2682C80(&qword_1EBB836C0, &qword_1EBB836C8, &qword_1EBB83740, MEMORY[0x1E4FBB320]);
}

uint64_t sub_1C2682C80(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2682CD0(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2682CD0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C2647844(255, a3, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, a4);
    unint64_t v5 = sub_1C277B340();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C2682D48(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1C265D95C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  uint64_t v13 = type metadata accessor for FeatureStatusFeedItemGeneratorPipeline();
  v16[3] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 32))(a2 + *(int *)(v13 + 20), a3, v11, v12);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2682CD0(0, (unint64_t *)&qword_1EBB836A8, &qword_1EBB85780, MEMORY[0x1E4FBB718]);
  sub_1C2682C80(&qword_1EBB836A0, (unint64_t *)&qword_1EBB836A8, &qword_1EBB85780, v14);
  sub_1C277B550();
  swift_release();
  type metadata accessor for PluginFeedItem();
  sub_1C26478EC((unint64_t *)&unk_1EBB82AF0, (void (*)(uint64_t))sub_1C265D95C);
  sub_1C277B4F0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C2682F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2683F54(a1, a2);
}

uint64_t sub_1C2682F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2647B18(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
}

id sub_1C2682FA4(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 24);
  id v3 = *(id *)v2;
  sub_1C2646704(*(id *)v2, *(void **)(v2 + 8), *(void **)(v2 + 16), *(unsigned char *)(v2 + 24));
  return v3;
}

uint64_t sub_1C2683000@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s14HealthPlatform38FeatureStatusFeedItemGeneratorPipelineV15changePublisher7Combine03AnyJ0Vy0A12KitAdditions0cD0Os5NeverOGvg_0();
  *a1 = result;
  return result;
}

uint64_t sub_1C2683028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v24 = a3;
  uint64_t v4 = sub_1C277AA10();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = *(void *)(a2 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26827F4();
  uint64_t v23 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2647B18(v21, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeatureStatusFeedItemGeneratorPipeline);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v4);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v16 = (v9 + *(unsigned __int8 *)(v5 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1C2647BE8((uint64_t)v10, v17 + v15, (uint64_t (*)(void))type metadata accessor for FeatureStatusFeedItemGeneratorPipeline);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v17 + v16, (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_1C2682888();
  sub_1C26478EC(&qword_1EBB82B48, (void (*)(uint64_t))sub_1C2682888);
  sub_1C277B4A0();
  sub_1C26478EC((unint64_t *)&qword_1EBB82D90, (void (*)(uint64_t))sub_1C26827F4);
  uint64_t v18 = v23;
  uint64_t v19 = sub_1C277B4E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v18);
  *uint64_t v24 = v19;
  return result;
}

uint64_t assignWithCopy for FeatureStatusFeedItemGeneratorPipeline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void **)(a1 + v9);
  uint64_t v13 = *(void **)(a2 + v9);
  *uint64_t v10 = v13;
  id v14 = v13;

  uint64_t v15 = type metadata accessor for GeneratorContext();
  unint64_t v16 = (int *)v15;
  if (a1 != a2)
  {
    uint64_t v17 = *(int *)(v15 + 20);
    uint64_t v18 = (void *)((char *)v10 + v17);
    uint64_t v19 = v11 + v17;
    sub_1C2648074((uint64_t)v10 + v17, (uint64_t (*)(void))sub_1C264C860);
    sub_1C264C860();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = *(void **)v19;
      *uint64_t v18 = *(void *)v19;
      id v21 = v20;
    }
    else
    {
      *uint64_t v18 = *(void *)v19;
      v18[1] = *(void *)(v19 + 8);
      v18[2] = *(void *)(v19 + 16);
      uint64_t v22 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
      uint64_t v41 = v19 + v22;
      id v42 = (char *)v18 + v22;
      uint64_t v23 = sub_1C277A840();
      uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v40(v42, v41, v23);
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)v10 + v16[6]) = *(unsigned char *)(v11 + v16[6]);
  __swift_assign_boxed_opaque_existential_1((void *)((char *)v10 + v16[7]), (uint64_t *)(v11 + v16[7]));
  __swift_assign_boxed_opaque_existential_1((void *)((char *)v10 + v16[8]), (uint64_t *)(v11 + v16[8]));
  uint64_t v24 = a3[6];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  id v27 = *(id *)v26;
  int64_t v28 = *(void **)(v26 + 8);
  unint64_t v29 = *(void **)(v26 + 16);
  char v30 = *(unsigned char *)(v26 + 24);
  sub_1C2646704(*(id *)v26, v28, v29, v30);
  int64_t v31 = *(void **)v25;
  unint64_t v32 = *(void **)(v25 + 8);
  int64_t v33 = *(void **)(v25 + 16);
  *(void *)uint64_t v25 = v27;
  *(void *)(v25 + 8) = v28;
  *(void *)(v25 + 16) = v29;
  char v34 = *(unsigned char *)(v25 + 24);
  *(unsigned char *)(v25 + 24) = v30;
  sub_1C2645714(v31, v32, v33, v34);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[8];
  id v36 = (void *)(a1 + v35);
  unint64_t v37 = (void *)(a2 + v35);
  uint64_t v38 = v37[1];
  *id v36 = *v37;
  v36[1] = v38;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    id v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *id v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *id v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

_OWORD *initializeWithTake for FeatureStatusFeedItemGeneratorPipeline(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  int v9 = (int *)type metadata accessor for GeneratorContext();
  uint64_t v10 = v9[5];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  sub_1C264C860();
  uint64_t v14 = v13;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((void *)v11 + 2) = *((void *)v12 + 2);
    uint64_t v15 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    unint64_t v16 = &v11[v15];
    uint64_t v17 = &v12[v15];
    uint64_t v18 = sub_1C277A840();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  v7[v9[6]] = v8[v9[6]];
  uint64_t v19 = v9[7];
  uint64_t v20 = &v7[v19];
  id v21 = &v8[v19];
  long long v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((void *)v20 + 4) = *((void *)v21 + 4);
  uint64_t v23 = v9[8];
  uint64_t v24 = &v7[v23];
  uint64_t v25 = &v8[v23];
  long long v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((void *)v24 + 4) = *((void *)v25 + 4);
  uint64_t v27 = a3[6];
  uint64_t v28 = a3[7];
  unint64_t v29 = (_OWORD *)((char *)a1 + v27);
  char v30 = (_OWORD *)((char *)a2 + v27);
  *unint64_t v29 = *v30;
  *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)((char *)v30 + 9);
  *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for FeatureStatusFeedItemGeneratorPipeline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  int v9 = (void *)(a2 + v7);
  uint64_t v10 = *(void **)(a1 + v7);
  *uint64_t v8 = *v9;

  uint64_t v11 = type metadata accessor for GeneratorContext();
  uint64_t v12 = (int *)v11;
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(v11 + 20);
    uint64_t v14 = (void *)((char *)v8 + v13);
    uint64_t v15 = (void *)((char *)v9 + v13);
    sub_1C2648074((uint64_t)v8 + v13, (uint64_t (*)(void))sub_1C264C860);
    sub_1C264C860();
    uint64_t v17 = v16;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      void v14[2] = v15[2];
      uint64_t v18 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
      uint64_t v19 = (char *)v14 + v18;
      uint64_t v20 = (char *)v15 + v18;
      uint64_t v21 = sub_1C277A840();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      swift_storeEnumTagMultiPayload();
    }
  }
  *((unsigned char *)v8 + v12[6]) = *((unsigned char *)v9 + v12[6]);
  uint64_t v22 = v12[7];
  uint64_t v23 = (char *)v8 + v22;
  uint64_t v24 = (char *)v9 + v22;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8 + v22);
  long long v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((void *)v23 + 4) = *((void *)v24 + 4);
  uint64_t v26 = v12[8];
  uint64_t v27 = (char *)v8 + v26;
  uint64_t v28 = (char *)v9 + v26;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8 + v26);
  long long v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  *((void *)v27 + 4) = *((void *)v28 + 4);
  uint64_t v30 = a3[6];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = *(void *)(v32 + 16);
  char v34 = *(unsigned char *)(v32 + 24);
  uint64_t v35 = *(void **)v31;
  id v36 = *(void **)(v31 + 8);
  unint64_t v37 = *(void **)(v31 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(void *)(v31 + 16) = v33;
  char v38 = *(unsigned char *)(v31 + 24);
  *(unsigned char *)(v31 + 24) = v34;
  sub_1C2645714(v35, v36, v37, v38);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t sub_1C2683BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GeneratorContext();
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C2683C94(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GeneratorContext();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C2683D3C()
{
  uint64_t result = type metadata accessor for GeneratorContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of FeatureStatusFeedItemProvider.feedItemIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeatureStatusFeedItemProvider.associatedHKTypes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeatureStatusFeedItemProvider.contentKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeatureStatusFeedItemProvider.makeFeedItemPublisher(context:featureStatus:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FeatureStatusFeedItemProvider.featureAutomationIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1C2683E60()
{
  uint64_t v1 = *(void *)(type metadata accessor for FeatureStatusFeedItemGeneratorPipeline() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_1C277AA10() - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1C26829B0(v0 + v2, v5);
}

uint64_t sub_1C2683F34(void *a1)
{
  return sub_1C2682D48(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C2683F54(uint64_t a1, uint64_t a2)
{
  sub_1C2647844(0, &qword_1EBB85780, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C2683FE8()
{
  if (!qword_1EBB83698)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66798];
    sub_1C2647844(255, &qword_1EBB83748, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB320]);
    sub_1C26840B8(&qword_1EBB83750, &qword_1EBB83748, v0);
    unint64_t v1 = sub_1C277B280();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB83698);
    }
  }
}

uint64_t sub_1C26840B8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2647844(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id FeedSection.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id FeedSection.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for FeedSection();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id FeedSection.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedSection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t Atomic.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  Atomic.init(_:)(a1);
  return v2;
}

uint64_t Atomic.mutateReturningPrevious(_:)()
{
  return swift_release();
}

uint64_t sub_1C2684310@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (uint64_t)a1 + *(void *)(*a1 + 88);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v5 + 80);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a3, v6, v7);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v6, a2, v7);
  return swift_endAccess();
}

uint64_t sub_1C2684418@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2684310(*(uint64_t **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t method lookup function for Atomic(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Atomic);
}

uint64_t dispatch thunk of Atomic.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t IgnoreEquality.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t IgnoreEquality.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*IgnoreEquality.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t IgnoreEquality.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t static IgnoreEquality.== infix(_:_:)()
{
  return 1;
}

uint64_t IgnoreEquality.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t sub_1C2684554()
{
  return sub_1C277C910();
}

uint64_t sub_1C268458C()
{
  return sub_1C277C910();
}

uint64_t sub_1C26845C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C26845DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t sub_1C26845E4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C2684674(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1C268472C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1C2684758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C26847A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C26847F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C2684848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C2684898(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1C26849F4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C2684C0CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for IgnoreEquality()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C2684C4C(uint64_t a1, int a2)
{
  sub_1C2629308();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_1C262491C(a1, (uint64_t)v6);
  uint64_t v7 = DiskHealthExperienceStore.init(overrideStoreLocation:observeExternalChanges:)((uint64_t)v6, a2);
  swift_retain();
  sub_1C26BDA90();
  swift_release();
  sub_1C2685A3C(a1);
  return v7;
}

id sub_1C2684D0C()
{
  id result = objc_msgSend(self, sel_standardUserDefaults);
  word_1EBB82688 = 257;
  qword_1EBB82670 = 0xD00000000000002ALL;
  *(void *)algn_1EBB82678 = 0x80000001C278A950;
  qword_1EBB82680 = (uint64_t)result;
  return result;
}

void sub_1C2684D70()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)sub_1C277B820();
  id v3 = objc_msgSend(self, sel_transactionWithName_, v2);

  uint64_t v4 = (os_unfair_lock_s *)v0[4];
  uint64_t v5 = (uint64_t *)&v4[4];
  uint64_t v6 = v4 + 6;
  os_unfair_lock_lock(v4 + 6);
  sub_1C262EF60(v5, aBlock);
  os_unfair_lock_unlock(v6);
  uint64_t v7 = (void *)aBlock[0];
  size_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = v7;
  v8[3] = v3;
  v8[4] = v1;
  aBlock[4] = sub_1C26859C8;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C26254FC;
  aBlock[3] = &block_descriptor_4;
  uint64_t v9 = _Block_copy(aBlock);
  id v10 = v7;
  id v11 = v3;
  swift_release();
  objc_msgSend(v10, sel_performBlock_, v9);
  _Block_release(v9);
}

id sub_1C2684F1C(void *a1, void *a2)
{
  if (qword_1EBB80D08 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EBB82670;
  uint64_t v4 = *(void *)algn_1EBB82678;
  uint64_t v6 = (void *)qword_1EBB82680;
  char v7 = word_1EBB82688;
  if (HIBYTE(word_1EBB82688) != 1)
  {
    swift_bridgeObjectRetain();
    id v10 = v6;
    goto LABEL_7;
  }
  size_t v8 = self;
  swift_bridgeObjectRetain();
  id v9 = v6;
  if (objc_msgSend(v8, sel_isAppleInternalInstall))
  {
LABEL_7:
    char v11 = sub_1C26BDF08(v5, v4, v6);

    swift_bridgeObjectRelease();
    if (v11 == 2) {
      char v12 = v7;
    }
    else {
      char v12 = v11;
    }
    if (v12) {
      goto LABEL_11;
    }
    goto LABEL_16;
  }

  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_11:
    if (qword_1EBB85EA8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1C277B130();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EBB85ED8);
    unsigned int v14 = sub_1C277B100();
    os_log_type_t v15 = sub_1C277BD40();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1C2601000, v14, v15, "DaemonHealthExperienceStore - cleanUpManagedObjectContext - reset", v16, 2u);
      uint64_t v17 = &selRef_reset;
LABEL_20:
      MEMORY[0x1C875D230](v16, -1, -1);
      goto LABEL_23;
    }
    uint64_t v17 = &selRef_reset;
    goto LABEL_23;
  }
LABEL_16:
  if (qword_1EBB85EA8 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1C277B130();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EBB85ED8);
  unsigned int v14 = sub_1C277B100();
  os_log_type_t v19 = sub_1C277BD40();
  if (os_log_type_enabled(v14, v19))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_1C2601000, v14, v19, "DaemonHealthExperienceStore - cleanUpManagedObjectContext - refreshAllObjects", v16, 2u);
    uint64_t v17 = &selRef_refreshAllObjects;
    goto LABEL_20;
  }
  uint64_t v17 = &selRef_refreshAllObjects;
LABEL_23:

  [a1 *v17];

  return objc_msgSend(a2, sel_invalidate);
}

uint64_t DaemonHealthExperienceStore.deinit()
{
  sub_1C2685214();
  swift_release();
  swift_release();

  return v0;
}

void sub_1C2685214()
{
  uint64_t v1 = v0;
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277B130();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB86280);
  id v3 = sub_1C277B100();
  os_log_type_t v4 = sub_1C277BD00();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    type metadata accessor for DaemonHealthExperienceStore();
    sub_1C2685A98(0, &qword_1EBB82690, v7, (void (*)(uint64_t))type metadata accessor for DaemonHealthExperienceStore);
    uint64_t v8 = sub_1C277B860();
    uint64_t v11 = sub_1C263FDFC(v8, v9, &v12);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v3, v4, "[%s] deregisterForDebuggingRequests()", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v6, -1, -1);
    MEMORY[0x1C875D230](v5, -1, -1);
  }

  id v10 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EBB82F50 != -1) {
    swift_once();
  }
  objc_msgSend(v10, sel_removeObserver_name_object_, v1, qword_1EBB82F48, 0, v11, v12);
}

void sub_1C2685440()
{
  uint64_t v1 = v0;
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277B130();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB86280);
  id v3 = sub_1C277B100();
  os_log_type_t v4 = sub_1C277BD00();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    type metadata accessor for DaemonHealthExperienceStoreOracle();
    sub_1C2685A98(0, &qword_1EBB80D10, 255, (void (*)(uint64_t))type metadata accessor for DaemonHealthExperienceStoreOracle);
    uint64_t v7 = sub_1C277B860();
    uint64_t v10 = sub_1C263FDFC(v7, v8, &v11);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v3, v4, "[%s] deregisterForDebuggingRequests()", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v6, -1, -1);
    MEMORY[0x1C875D230](v5, -1, -1);
  }

  id v9 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EBB82F50 != -1) {
    swift_once();
  }
  objc_msgSend(v9, sel_removeObserver_name_object_, v1, qword_1EBB82F48, 0, v10, v11);
}

uint64_t DaemonHealthExperienceStore.__deallocating_deinit()
{
  sub_1C2685214();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

void DaemonHealthExperienceStore.debuggingInfoRequested(note:)()
{
  uint64_t v1 = *v0;
  if (qword_1EBB85EA8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277B130();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB85ED8);
  oslog = sub_1C277B100();
  os_log_type_t v3 = sub_1C277BD40();
  if (os_log_type_enabled(oslog, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v9 = v5;
    uint64_t v10 = v1;
    *(_DWORD *)os_log_type_t v4 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v6 = sub_1C277B860();
    uint64_t v10 = sub_1C263FDFC(v6, v7, &v9);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, oslog, v3, "[%s]: debuggingInfoRequested()", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v5, -1, -1);
    MEMORY[0x1C875D230](v4, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1C2685988()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

id sub_1C26859C8()
{
  return sub_1C2684F1C(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t type metadata accessor for DaemonHealthExperienceStore()
{
  return self;
}

uint64_t method lookup function for DaemonHealthExperienceStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DaemonHealthExperienceStore);
}

uint64_t dispatch thunk of DaemonHealthExperienceStore.cleanUpManagedObjectContext()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t sub_1C2685A3C(uint64_t a1)
{
  sub_1C2629308();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2685A98(uint64_t a1, unint64_t *a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a4(a3);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t ProxyPublisherDelegate.publisher.getter()
{
  swift_unknownObjectRetain();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t Publishers.Proxy.receive<A>(subscriber:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v25 = a1;
  uint64_t v26 = a4;
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v10 = a2[3];
  swift_getAssociatedConformanceWitness();
  uint64_t v11 = sub_1C277B300();
  uint64_t v24 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  unsigned int v14 = (char *)&v23 - v13;
  uint64_t v15 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1C875D340](v5);
  if (v18)
  {
    uint64_t v19 = v18;
    v27[0] = a2[2];
    v27[1] = v10;
    void v27[2] = v9;
    uint64_t v28 = a3;
    uint64_t WitnessTable = v8;
    uint64_t v30 = v26;
    uint64_t v20 = _s5ProxyV5InnerCMa();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v25, a3);
    swift_allocObject();
    swift_unknownObjectRetain();
    uint64_t v21 = sub_1C2686D90((uint64_t)v17, v19);
    swift_unknownObjectRelease();
    uint64_t v28 = v20;
    uint64_t WitnessTable = swift_getWitnessTable();
    v27[0] = v21;
    sub_1C277B2D0();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  }
  else
  {
    sub_1C277B360();
    sub_1C277B2D0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v14, 1, 1, v10);
    sub_1C277B2C0();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v11);
  }
}

uint64_t _s5ProxyV5InnerCMa()
{
  return swift_getGenericMetadata();
}

void sub_1C2685E00(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(uint64_t *)((char *)v1 + *(void *)(*v1 + 144));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 16));
  uint64_t v6 = (char *)v1 + *(void *)(*v1 + 176);
  swift_beginAccess();
  if (*v6 & 1) != 0 || (unint64_t v7 = (char *)v2 + *(void *)(*v2 + 184), swift_beginAccess(), (*v7))
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
    return;
  }
  uint64_t v8 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 168));
  swift_beginAccess();
  uint64_t v9 = *v8;
  sub_1C277B330();
  if ((sub_1C277B310() & 1) == 0)
  {
    sub_1C277B330();
    char v10 = sub_1C277B310();
    uint64_t v11 = sub_1C277B330();
    if (v10)
    {
LABEL_7:
      *uint64_t v8 = v11;
      goto LABEL_13;
    }
    if ((sub_1C277B310() & 1) == 0)
    {
      if ((v9 | a1) < 0) {
        goto LABEL_17;
      }
      uint64_t v11 = v9 + a1;
      if (!__OFADD__(v9, a1))
      {
        if ((v11 & 0x8000000000000000) == 0) {
          goto LABEL_7;
        }
        __break(1u);
LABEL_17:
        __break(1u);
        return;
      }
    }
    *uint64_t v8 = sub_1C277B330();
  }
LABEL_13:
  swift_endAccess();
  swift_getWitnessTable();
  PendingValuesInner.lock_sendPendingValuesIfNeeded()();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  if (MEMORY[0x1C875D340](v2 + 2))
  {
    uint64_t v12 = *(void *)(v4 + 112);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t *, uint64_t (*)(), uint64_t *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v14 = *(void *)(v4 + 96);
    swift_retain_n();
    v13(a1, sub_1C268767C, v2, sub_1C26871F4, v2, v14, v12);
    swift_unknownObjectRelease();
    swift_release_n();
  }
}

uint64_t sub_1C2686068()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 104);
  uint64_t v4 = sub_1C277C0B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = *(uint64_t *)((char *)v0 + *(void *)(v1 + 144));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v8 + 16));
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v7, 1, 1, v3);
  uint64_t v9 = (uint64_t)v0 + *(void *)(*v0 + 136);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v9, v7, v4);
  swift_endAccess();
  char v10 = (char *)v0 + *(void *)(*v0 + 176);
  swift_beginAccess();
  *char v10 = 1;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  uint64_t result = MEMORY[0x1C875D340](v0 + 2);
  if (result)
  {
    (*(void (**)(void))(*(void *)(v2 + 112) + 40))(*(void *)(v2 + 96));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C268627C()
{
  uint64_t v1 = sub_1C277C940();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2687704(0, &qword_1EA304570, MEMORY[0x1E4FBC420], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v12 - v6;
  uint64_t v13 = v0;
  sub_1C2687704(0, (unint64_t *)&qword_1EBB85218, (uint64_t (*)(uint64_t))sub_1C264EB14, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C277E480;
  *(void *)(v8 + 32) = 0x65746167656C6564;
  *(void *)(v8 + 40) = 0xE800000000000000;
  uint64_t v9 = MEMORY[0x1C875D340](v0 + 16);
  *(void *)(v8 + 72) = sub_1C277C0B0();
  *(void *)(v8 + 48) = v9;
  uint64_t v10 = sub_1C277C930();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBC430], v1);
  swift_retain();
  return sub_1C277C970();
}

uint64_t sub_1C2686504@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FBC430];
  uint64_t v3 = sub_1C277C940();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1C2686578()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 136);
  uint64_t v2 = sub_1C277C0B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C268665C()
{
  sub_1C2686578();

  return swift_deallocClassInstance();
}

void sub_1C26866B0(uint64_t a1)
{
}

uint64_t sub_1C26866D4()
{
  return swift_retain();
}

uint64_t sub_1C26866F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 136);
  swift_beginAccess();
  uint64_t v4 = sub_1C277C0B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1C2686790(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 136);
  swift_beginAccess();
  uint64_t v4 = sub_1C277C0B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1C2686838())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C26868A0()
{
  return swift_retain();
}

uint64_t sub_1C26868BC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2686914(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(void *)(*(void *)v1 + 160));
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C2686974())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C26869DC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 168);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1C2686A30(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(void *)(*(void *)v1 + 168));
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1C2686A88())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C2686AF0()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 184));
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1C2686B44(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + *(void *)(*(void *)v1 + 184));
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1C2686B9C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C2686C04()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 176));
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1C2686C58(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + *(void *)(*(void *)v1 + 176));
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1C2686CB0())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_1C2686D18()
{
  return 0xD000000000000010;
}

uint64_t sub_1C2686D34()
{
  return sub_1C268627C();
}

uint64_t sub_1C2686D58()
{
  return sub_1C2686068();
}

uint64_t sub_1C2686D7C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return Publishers.Proxy.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1C2686D90(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a2;
  uint64_t v20 = a1;
  uint64_t v3 = *(void *)(*(void *)v2 + 104);
  uint64_t v22 = sub_1C277C0B0();
  uint64_t v4 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v6 = (char *)&v19 - v5;
  uint64_t v21 = v2 + 16;
  swift_unknownObjectWeakInit();
  uint64_t v7 = *(void *)(v3 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v8(v2 + *(void *)(*(void *)v2 + 136), 1, 1, v3);
  uint64_t v9 = *(void *)(*(void *)v2 + 144);
  type metadata accessor for UnfairLock();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = (_DWORD *)swift_slowAlloc();
  *(void *)(v10 + 16) = v11;
  *uint64_t v11 = 0;
  *(void *)(v2 + v9) = v10;
  uint64_t v12 = *(void *)(*(void *)v2 + 152);
  type metadata accessor for RecursiveUnfairLock();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = (void *)swift_slowAlloc();
  *(void *)(v13 + 16) = v14;
  *(void *)(v2 + v12) = v13;
  *uint64_t v14 = 0;
  uint64_t v15 = *(void *)(*(void *)v2 + 160);
  *(void *)(v2 + v15) = sub_1C277B740();
  uint64_t v16 = *(void *)(*(void *)v2 + 168);
  *(void *)(v2 + v16) = sub_1C277B320();
  *(unsigned char *)(v2 + *(void *)(*(void *)v2 + 176)) = 0;
  *(unsigned char *)(v2 + *(void *)(*(void *)v2 + 184)) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v6, v20, v3);
  v8((uint64_t)v6, 0, 1, v3);
  uint64_t v17 = v2 + *(void *)(*(void *)v2 + 136);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v17, v6, v22);
  swift_endAccess();
  swift_unknownObjectWeakAssign();
  return v2;
}

uint64_t sub_1C268707C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t dispatch thunk of ProxyPublisherDelegate.receiveRequest(demand:sendValue:sendCompletion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of ProxyPublisherDelegate.receiveCancellation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t type metadata accessor for Publishers.Proxy()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C26870DC()
{
  uint64_t result = sub_1C277C0B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C26871B4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 120);
}

uint64_t sub_1C26871BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C26871D8()
{
  return swift_getWitnessTable();
}

void sub_1C26871F8()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(uint64_t *)((char *)v0 + *(void *)(*v0 + 144));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  uint64_t v4 = (char *)v0 + *(void *)(*v0 + 184);
  swift_beginAccess();
  if ((*v4 & 1) == 0)
  {
    *uint64_t v4 = 1;
    uint64_t v15 = (char *)v1 + *(void *)(*v1 + 176);
    swift_beginAccess();
    if ((*v15 & 1) == 0)
    {
      swift_getWitnessTable();
      PendingValuesInner.lock_sendPendingValuesIfNeeded()();
      goto LABEL_14;
    }
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1C277B130();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBB85FD0);
    swift_retain_n();
    uint64_t v6 = sub_1C277B100();
    os_log_type_t v7 = sub_1C277BD40();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      v21[0] = v9;
      *(_DWORD *)uint64_t v8 = 136446466;
      uint64_t v22 = v2;
      swift_getMetatypeMetadata();
      uint64_t v17 = sub_1C277B860();
      uint64_t v22 = sub_1C263FDFC(v17, v18, v21);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2082;
      uint64_t v22 = MEMORY[0x1C875D340](v1 + 2);
      sub_1C277C0B0();
      uint64_t v19 = sub_1C277B860();
      uint64_t v22 = sub_1C263FDFC(v19, v20, v21);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v14 = "[%{public}s]: delegate called completion, but we're already cancelled. Delegate: %{public}s";
      goto LABEL_11;
    }
LABEL_12:

    swift_release_n();
    goto LABEL_14;
  }
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C277B130();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBB86280);
  swift_retain_n();
  uint64_t v6 = sub_1C277B100();
  os_log_type_t v7 = sub_1C277BD20();
  if (!os_log_type_enabled(v6, v7)) {
    goto LABEL_12;
  }
  uint64_t v8 = swift_slowAlloc();
  uint64_t v9 = swift_slowAlloc();
  uint64_t v22 = v9;
  *(_DWORD *)uint64_t v8 = 136446466;
  swift_getMetatypeMetadata();
  uint64_t v10 = sub_1C277B860();
  sub_1C263FDFC(v10, v11, &v22);
  sub_1C277C0D0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 12) = 2082;
  MEMORY[0x1C875D340](v1 + 2);
  sub_1C277C0B0();
  uint64_t v12 = sub_1C277B860();
  v21[1] = sub_1C263FDFC(v12, v13, &v22);
  sub_1C277C0D0();
  swift_release_n();
  swift_bridgeObjectRelease();
  uint64_t v14 = "[%{public}s: Delegate called completion more than once! Delegate is %{public}s";
LABEL_11:
  _os_log_impl(&dword_1C2601000, v6, v7, v14, (uint8_t *)v8, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1C875D230](v9, -1, -1);
  MEMORY[0x1C875D230](v8, -1, -1);

LABEL_14:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
}

uint64_t sub_1C268767C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t WitnessTable = swift_getWitnessTable();

  return PendingValuesInner.enqueue(_:)(a1, v3, WitnessTable);
}

void sub_1C2687704(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C268776C(uint64_t a1)
{
}

id static NSOperationQueue.userInteractive.getter()
{
  return sub_1C2607128(&qword_1EA303EE0, (void **)&qword_1EA304578);
}

void static NSOperationQueue.userInteractive.setter(void *a1)
{
}

uint64_t (*static NSOperationQueue.userInteractive.modify())()
{
  if (qword_1EA303EE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void static NSOperationQueue.userInitiated.setter(void *a1)
{
}

uint64_t (*static NSOperationQueue.userInitiated.modify())()
{
  if (qword_1EBB85118 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void static NSOperationQueue.utility.setter(void *a1)
{
}

uint64_t (*static NSOperationQueue.utility.modify())()
{
  if (qword_1EBB85130 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1C26879BC(uint64_t a1)
{
}

id static NSOperationQueue.background.getter()
{
  return sub_1C2607128(&qword_1EA303EE8, (void **)&qword_1EA304580);
}

void static NSOperationQueue.background.setter(void *a1)
{
}

void sub_1C2687A2C(void *a1, void *a2, void **a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v5 = *a3;
  *a3 = a1;
}

uint64_t (*static NSOperationQueue.background.modify())()
{
  if (qword_1EA303EE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t PluginFeedItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.uniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.userInterface.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1C263D4D4(v1, *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return v1;
}

uint64_t PluginFeedItem.userInterface.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = sub_1C263CCDC(*(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32));
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 32) = a3;
  return result;
}

uint64_t (*PluginFeedItem.userInterface.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.usesPlatformView.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t (*PluginFeedItem.usesPlatformView.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.actionHandlerClassName.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*PluginFeedItem.actionHandlerClassName.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.actionHandlerUserData.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_1C2641B44(v1, *(void *)(v0 + 64));
  return v1;
}

uint64_t (*PluginFeedItem.actionHandlerUserData.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.baseAutomationIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*PluginFeedItem.baseAutomationIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.userData.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  sub_1C2641B44(v1, *(void *)(v0 + 96));
  return v1;
}

uint64_t PluginFeedItem.userData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C2641B58(*(void *)(v2 + 88), *(void *)(v2 + 96));
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*PluginFeedItem.userData.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.relevantDateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PluginFeedItem();
  return sub_1C26447BC(v1 + *(int *)(v3 + 44), a1, (uint64_t (*)(void))sub_1C263D4EC);
}

uint64_t PluginFeedItem.relevantDateInterval.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PluginFeedItem() + 44);

  return sub_1C2687E88(a1, v3);
}

uint64_t sub_1C2687E88(uint64_t a1, uint64_t a2)
{
  sub_1C263D4EC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*PluginFeedItem.relevantDateInterval.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.contentKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PluginFeedItem();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t PluginFeedItem.contentKind.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for PluginFeedItem();
  *(unsigned char *)(v1 + *(int *)(result + 48)) = v2;
  return result;
}

uint64_t (*PluginFeedItem.contentKind.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.associatedHKTypes.getter()
{
  type metadata accessor for PluginFeedItem();

  return swift_bridgeObjectRetain();
}

uint64_t (*PluginFeedItem.associatedHKTypes.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.associatedSharableModelReferences.getter()
{
  type metadata accessor for PluginFeedItem();

  return swift_bridgeObjectRetain();
}

uint64_t PluginFeedItem.associatedSharableModelReferences.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PluginFeedItem() + 56);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PluginFeedItem.associatedSharableModelReferences.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.categoryIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.categoryIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for PluginFeedItem() + 60));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.categoryIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.featureTags.getter()
{
  type metadata accessor for PluginFeedItem();

  return swift_bridgeObjectRetain();
}

uint64_t PluginFeedItem.featureTags.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PluginFeedItem() + 64);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PluginFeedItem.featureTags.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.keywords.getter()
{
  type metadata accessor for PluginFeedItem();

  return swift_bridgeObjectRetain();
}

void *PluginFeedItem.sourceProfile.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 72));
  id v2 = v1;
  return v1;
}

void PluginFeedItem.sourceProfile.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PluginFeedItem() + 72);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*PluginFeedItem.sourceProfile.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.localizedCategoryName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.localizedCategoryName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for PluginFeedItem() + 76));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.localizedCategoryName.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.localizedTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 80));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*PluginFeedItem.localizedTitle.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.localizedDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.localizedDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for PluginFeedItem() + 84));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.localizedDescription.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.sortHint.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 88));
}

uint64_t (*PluginFeedItem.sortHint.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.searchSectionHint.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 92));
}

uint64_t PluginFeedItem.searchSectionHint.setter(char a1)
{
  uint64_t result = type metadata accessor for PluginFeedItem();
  *(unsigned char *)(v1 + *(int *)(result + 92)) = a1;
  return result;
}

uint64_t (*PluginFeedItem.searchSectionHint.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.indexForSearch.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 96));
}

uint64_t (*PluginFeedItem.indexForSearch.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.hideInDiscover.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 100));
}

uint64_t PluginFeedItem.hideInDiscover.setter(char a1)
{
  uint64_t result = type metadata accessor for PluginFeedItem();
  *(unsigned char *)(v1 + *(int *)(result + 100)) = a1;
  return result;
}

uint64_t (*PluginFeedItem.hideInDiscover.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.pinnedContentIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 104));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.pinnedContentIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for PluginFeedItem() + 104));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.pinnedContentIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C268889C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for PluginFeedItem() + 108));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1C26903AC;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;

  return sub_1C26121B4(v4);
}

uint64_t sub_1C2688930(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C2690384;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for PluginFeedItem() + 108));
  uint64_t v8 = *v7;
  sub_1C26121B4(v3);
  uint64_t result = sub_1C261AE94(v8);
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t PluginFeedItem.afterCommit.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 108));
  sub_1C26121B4(v1);
  return v1;
}

uint64_t PluginFeedItem.afterCommit.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for PluginFeedItem() + 108));
  uint64_t result = sub_1C261AE94(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.afterCommit.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.hostViewStyle.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PluginFeedItem();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 112));
  return result;
}

uint64_t PluginFeedItem.hostViewStyle.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for PluginFeedItem();
  *(unsigned char *)(v1 + *(int *)(result + 112)) = v2;
  return result;
}

uint64_t (*PluginFeedItem.hostViewStyle.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.addFeatureTag<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getDynamicType();
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 16))(a2);
  uint64_t v8 = v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  uint64_t v11 = v10;
  uint64_t v12 = *(int *)(type metadata accessor for PluginFeedItem() + 64);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)(v3 + v12);
  *(void *)(v3 + v12) = 0x8000000000000000;
  sub_1C2626D14(v9, v11, v6, v8, isUniquelyReferenced_nonNull_native);
  *(void *)(v3 + v12) = v15;
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t PluginFeedItem.numberOfTags.getter()
{
  return *(void *)(*(void *)(v0 + *(int *)(type metadata accessor for PluginFeedItem() + 64)) + 16);
}

Swift::Void __swiftcall PluginFeedItem.removeAllTags()()
{
  uint64_t v1 = *(int *)(type metadata accessor for PluginFeedItem() + 64);
  swift_bridgeObjectRelease();
  *(void *)(v0 + v1) = MEMORY[0x1E4FBC868];
}

Swift::Void __swiftcall PluginFeedItem.removeTag(name:)(Swift::String name)
{
  object = name._object;
  uint64_t countAndFlagsBits = name._countAndFlagsBits;
  type metadata accessor for PluginFeedItem();
  sub_1C2689F00(countAndFlagsBits, (uint64_t)object, &v4);
  long long v3 = v4;

  sub_1C2641B58(v3, *((unint64_t *)&v3 + 1));
}

uint64_t UserInterface.init(hostingControllerClass:)()
{
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v1 = NSStringFromClass(ObjCClassFromMetadata);
  uint64_t v2 = sub_1C277B850();

  return v2;
}

uint64_t UserInterface.init(viewClass:)()
{
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v1 = NSStringFromClass(ObjCClassFromMetadata);
  uint64_t v2 = sub_1C277B850();

  return v2;
}

uint64_t UserInterface.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 6:
      uint64_t result = sub_1C277C8D0();
      break;
    default:
      sub_1C277C8D0();
      uint64_t result = sub_1C277B8B0();
      break;
  }
  return result;
}

uint64_t UserInterface.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  sub_1C277C8C0();
  UserInterface.hash(into:)((uint64_t)v7, a1, a2, a3);
  return sub_1C277C910();
}

uint64_t sub_1C2688F38(uint64_t a1, uint64_t a2)
{
  return _s14HealthPlatform13UserInterfaceO2eeoiySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1C2688F54()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1C277C8C0();
  UserInterface.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_1C277C910();
}

uint64_t sub_1C2688FB0(uint64_t a1)
{
  return UserInterface.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_1C2688FBC()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1C277C8C0();
  UserInterface.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_1C277C910();
}

uint64_t PluginFeedItem.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  v35[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = type metadata accessor for RelevantDateInterval();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C263D4EC(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1C277B8B0();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v1 + 16);
  uint64_t v12 = *(void *)(v2 + 24);
  char v13 = *(unsigned char *)(v2 + 32);
  sub_1C263D4D4(*(void *)(v2 + 16), v12, v13);
  UserInterface.hash(into:)(a1, v11, v12, v13);
  sub_1C263CCDC(v11, v12, v13);
  unint64_t v14 = *(void *)(v2 + 96);
  if (v14 >> 60 == 15) {
    goto LABEL_8;
  }
  uint64_t v15 = *(void *)(v2 + 88);
  uint64_t v16 = self;
  sub_1C263D360(v15, v14);
  uint64_t v17 = (void *)sub_1C277A770();
  v35[0] = 0;
  id v18 = objc_msgSend(v16, sel_JSONObjectWithData_options_error_, v17, 0, v35);

  if (v18)
  {
    id v19 = v35[0];
    sub_1C277C110();
    swift_unknownObjectRelease();
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
    if (swift_dynamicCast())
    {
      unint64_t v20 = (void *)v34[1];
      sub_1C277C8E0();
      id v21 = v20;
      sub_1C277C040();

      sub_1C2641B58(v15, v14);
      goto LABEL_8;
    }
    sub_1C277C8E0();
  }
  else
  {
    id v22 = v35[0];
    uint64_t v23 = sub_1C277A620();
    v34[0] = v4;
    uint64_t v24 = (void *)v23;

    swift_willThrow();
    sub_1C277A790();
    uint64_t v25 = v24;
    uint64_t v4 = v34[0];
  }
  sub_1C2641B58(v15, v14);
LABEL_8:
  uint64_t v26 = (int *)type metadata accessor for PluginFeedItem();
  sub_1C26447BC(v2 + v26[11], (uint64_t)v10, (uint64_t (*)(void))sub_1C263D4EC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1C277C8E0();
  }
  else
  {
    sub_1C268F220((uint64_t)v10, (uint64_t)v7);
    sub_1C277C8E0();
    sub_1C277A520();
    sub_1C265146C(&qword_1EBB83200, MEMORY[0x1E4F26E60]);
    sub_1C277B7C0();
    sub_1C277C900();
    sub_1C277C900();
    sub_1C2690438((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RelevantDateInterval);
  }
  LOBYTE(v35[0]) = *(unsigned char *)(v2 + v26[12]);
  ContentKind.rawValue.getter();
  sub_1C277B8B0();
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + v26[15] + 8))
  {
    sub_1C277C8E0();
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C277C8E0();
  }
  if (*(void *)(v2 + v26[26] + 8))
  {
    sub_1C277C8E0();
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C277C8E0();
  }
  uint64_t v27 = *(void *)(v2 + v26[13]);
  swift_bridgeObjectRetain();
  sub_1C2679A34(a1, v27);
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v2 + v26[16]);
  swift_bridgeObjectRetain();
  sub_1C268C12C(a1, v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v2 + v26[17]);
  swift_bridgeObjectRetain();
  sub_1C267A12C(a1, v29);
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + v26[19] + 8))
  {
    sub_1C277C8E0();
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C277C8E0();
  }
  if (*(void *)(v2 + v26[20] + 8))
  {
    sub_1C277C8E0();
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C277C8E0();
  }
  if (*(void *)(v2 + v26[21] + 8))
  {
    sub_1C277C8E0();
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C277C8E0();
  }
  sub_1C277C8D0();
  sub_1C277C8E0();
  if (*(unsigned char *)(v2 + v26[25]) != 2) {
    sub_1C277C8E0();
  }
  sub_1C277C8E0();
  if (*(unsigned char *)(v2 + v26[23]) == 13)
  {
    sub_1C277C8E0();
  }
  else
  {
    sub_1C277C8E0();
    sub_1C277C8F0();
  }
  uint64_t v30 = *(void **)(v2 + v26[18]);
  sub_1C277C8D0();
  if (v30)
  {
    id v31 = v30;
    sub_1C277C040();
  }
  sub_1C277B8B0();
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v2 + v26[14]);
  swift_bridgeObjectRetain();
  sub_1C267A12C(a1, v32);
  return swift_bridgeObjectRelease();
}

uint64_t PluginFeedItem.hashValue.getter()
{
  sub_1C277C8C0();
  PluginFeedItem.hash(into:)((uint64_t)v1);
  return sub_1C277C910();
}

uint64_t sub_1C26897CC()
{
  sub_1C277C8C0();
  PluginFeedItem.hash(into:)((uint64_t)v1);
  return sub_1C277C910();
}

uint64_t sub_1C2689810()
{
  sub_1C277C8C0();
  PluginFeedItem.hash(into:)((uint64_t)v1);
  return sub_1C277C910();
}

uint64_t PluginFeedItem.cachedObject<A>(using:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v5 = *(void *)(v2 + 96);
  if (v5 >> 60 == 15)
  {
    if (qword_1EBB85990 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1C277B130();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBB85970);
    uint64_t v7 = sub_1C277B100();
    os_log_type_t v8 = sub_1C277BD10();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1C2601000, v7, v8, "Unable to decode cached user data because there isn't anything stored.", v9, 2u);
      MEMORY[0x1C875D230](v9, -1, -1);
    }

    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
    return v10(a2, 1, 1, a1);
  }
  else
  {
    uint64_t v12 = *(void *)(v2 + 88);
    sub_1C263D360(v12, *(void *)(v2 + 96));
    sub_1C277A480();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 0, 1, a1);
    return sub_1C2641B58(v12, v5);
  }
}

double sub_1C2689C60@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C2629588(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C2676EE8();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1C262FD34((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1C268A368(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1C2689D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C2673160(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *char v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C26775AC();
      uint64_t v9 = v19;
    }

    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = sub_1C277AA10();
    uint64_t v18 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a2, v10 + *(void *)(v18 + 72) * v6, v11);
    sub_1C268A744(v6, v9);
    *char v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = sub_1C277AA10();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

double sub_1C2689F00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C2629588(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C2677A30();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    *a3 = *(_OWORD *)(*(void *)(v11 + 56) + 16 * v8);
    sub_1C268A970(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = xmmword_1C277FB70;
  }
  return result;
}

uint64_t sub_1C2689FE8(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1C26344B4(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C2677BF4();
    uint64_t v7 = v10;
  }

  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  sub_1C268AB48(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C268A0C4(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C2629588(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 1;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *char v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C2677DBC();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1C268AD04(v6, v9);
  *char v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C268A194(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1C26344B4(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C2678178();
    uint64_t v7 = v10;
  }

  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1C268AEDC(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

double sub_1C268A25C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C2629588(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C2678334();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1C261F308((long long *)(*(void *)(v11 + 56) + 40 * v8), a3);
    sub_1C268B090(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1C268A368(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1C277C130();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C277C8C0();
        swift_bridgeObjectRetain();
        sub_1C277B8B0();
        uint64_t v10 = sub_1C277C910();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C268A540(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1C277C130();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C277C8C0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C277B8B0();
        sub_1C277B8B0();
        uint64_t v9 = sub_1C277C910();
        swift_bridgeObjectRelease();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 32 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 32 * v6);
          if (v3 != v6 || v12 >= v13 + 2)
          {
            long long v14 = v13[1];
            *uint64_t v12 = *v13;
            v12[1] = v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (void *)(v15 + 8 * v3);
          uint64_t v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
          {
            *uint64_t v16 = *v17;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C268A744(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1C277C130();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        uint64_t v9 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        sub_1C277B850();
        sub_1C277C8C0();
        id v10 = v9;
        sub_1C277B8B0();
        uint64_t v11 = sub_1C277C910();

        double result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v12 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        long long v14 = (void *)(v13 + 8 * v3);
        uint64_t v15 = (void *)(v13 + 8 * v6);
        if (v3 != v6 || v14 >= v15 + 1) {
          *long long v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(sub_1C277AA10() - 8) + 72);
        int64_t v18 = v17 * v3;
        double result = v16 + v17 * v3;
        int64_t v19 = v17 * v6;
        unint64_t v20 = v16 + v17 * v6 + v17;
        if (v18 < v19 || result >= v20)
        {
          double result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v18 == v19) {
            goto LABEL_6;
          }
          double result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    BOOL v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *BOOL v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C268A970(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1C277C130();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C277C8C0();
        swift_bridgeObjectRetain();
        sub_1C277B8B0();
        uint64_t v9 = sub_1C277C910();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1C268AB48(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1C277C130();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1C277C020();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (_OWORD *)(v18 + 16 * v3);
            uint64_t v20 = (_OWORD *)(v18 + 16 * v6);
            if (16 * v3 != 16 * v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              _OWORD *v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *BOOL v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1C268AD04(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1C277C130();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C277C8C0();
        swift_bridgeObjectRetain();
        sub_1C277B8B0();
        uint64_t v9 = sub_1C277C910();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1C268AEDC(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1C277C130();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1C277C020();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (void *)(v18 + 8 * v3);
            uint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              void *v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *BOOL v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1C268B090(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1C277C130();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C277C8C0();
        swift_bridgeObjectRetain();
        sub_1C277B8B0();
        uint64_t v11 = sub_1C277C910();
        double result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *uint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          uint64_t v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_1C268B27C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  long long v10 = (void *)*v4;
  unint64_t v12 = sub_1C2629588(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C2676EE8();
      goto LABEL_7;
    }
    sub_1C26737E8(v15, a4 & 1);
    unint64_t v21 = sub_1C2629588(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    double result = (_OWORD *)sub_1C277C850();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    return sub_1C262FD34(a1, v19);
  }
LABEL_13:
  sub_1C26E7504(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

id sub_1C268B3D0(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1C2673160((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1C26775AC();
      goto LABEL_7;
    }
    sub_1C2674054(v12, a3 & 1);
    unint64_t v23 = sub_1C2673160((uint64_t)a2);
    if ((v13 & 1) == (v24 & 1))
    {
      unint64_t v9 = v23;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for HKFeatureIdentifier(0);
    id result = (id)sub_1C277C850();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    uint64_t v16 = v15[7];
    uint64_t v17 = sub_1C277AA10();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
    uint64_t v20 = v17;
    uint64_t v21 = v16 + *(void *)(v18 + 72) * v9;
    return (id)v19(v21, a1, v20);
  }
LABEL_13:
  sub_1C26E7570(v9, (uint64_t)a2, a1, v15);

  return a2;
}

id sub_1C268B540(uint64_t a1, char a2, void *a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v9 = (void *)*v4;
  unint64_t v11 = sub_1C26344B4((uint64_t)a3);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v15 = v10;
  uint64_t v16 = v9[3];
  if (v16 < v14 || (a4 & 1) == 0)
  {
    if (v16 >= v14 && (a4 & 1) == 0)
    {
      sub_1C2677BF4();
      goto LABEL_9;
    }
    sub_1C26747CC(v14, a4 & 1);
    unint64_t v17 = sub_1C26344B4((uint64_t)a3);
    if ((v15 & 1) == (v18 & 1))
    {
      unint64_t v11 = v17;
      goto LABEL_9;
    }
LABEL_15:
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E90);
    id result = (id)sub_1C277C850();
    __break(1u);
    return result;
  }
LABEL_9:
  int v19 = a2 & 1;
  uint64_t v20 = *v5;
  if (v15)
  {
    BOOL v21 = v19 != 0;
    uint64_t v22 = v20[7] + 16 * v11;
    id result = (id)sub_1C2690340(*(void *)v22, *(unsigned char *)(v22 + 8));
    *(void *)uint64_t v22 = a1;
    *(unsigned char *)(v22 + 8) = v21;
  }
  else
  {
    sub_1C26E761C(v11, (uint64_t)a3, a1, v19, v20);
    return a3;
  }
  return result;
}

uint64_t sub_1C268B6A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v12 = sub_1C2629588(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C2677DBC();
    goto LABEL_7;
  }
  sub_1C2674ABC(v15, a4 & 1);
  unint64_t v21 = sub_1C2629588(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C277C850();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C26E766C(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C268B7E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v12 = sub_1C2629588(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C2677FA8();
    goto LABEL_7;
  }
  sub_1C2674E08(v15, a4 & 1);
  unint64_t v21 = sub_1C2629588(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C277C850();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C26E766C(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

void sub_1C268B920(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1C26344B4((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1C2678190();
    goto LABEL_7;
  }
  sub_1C2675150(v12, a3 & 1);
  unint64_t v17 = sub_1C26344B4((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_15:
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E90);
    sub_1C277C850();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C26E76B4(v9, (uint64_t)a2, a1, v15);

  id v19 = a2;
}

id sub_1C268BA60(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1C26344B4((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1C2678178();
    goto LABEL_7;
  }
  sub_1C2675138(v12, a3 & 1);
  unint64_t v18 = sub_1C26344B4((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_15:
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E90);
    id result = (id)sub_1C277C850();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C26E76FC(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_1C268BBA0(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C2629588(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C2678334();
      goto LABEL_7;
    }
    sub_1C2675168(v15, a4 & 1);
    unint64_t v21 = sub_1C2629588(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1C277C850();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    __swift_destroy_boxed_opaque_existential_0(v19);
    return sub_1C261F308(a1, v19);
  }
LABEL_13:
  sub_1C26E7700(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

id sub_1C268BCF8(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1C2673384((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1C26786EC();
    goto LABEL_7;
  }
  sub_1C26757A8(v12, a3 & 1);
  unint64_t v18 = sub_1C2673384((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_15:
    sub_1C2644ED8(0, &qword_1EBB82ED0);
    id result = (id)sub_1C277C850();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C26E76FC(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_1C268BE38(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1C277AC50();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  BOOL v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1C26733D4(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1C2678A6C();
    goto LABEL_7;
  }
  sub_1C2675DBC(v17, a3 & 1);
  unint64_t v23 = sub_1C26733D4(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_1C277C850();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1C26E7770(v14, (uint64_t)v11, a1, v20);
}

_OWORD *sub_1C268BFE0(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1C2673204(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1C267916C();
      goto LABEL_7;
    }
    sub_1C2676BD4(v13, a3 & 1);
    unint64_t v19 = sub_1C2673204(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1C267BB24(a2, (uint64_t)v21);
      return sub_1C26E7828(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_1C277C850();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);

  return sub_1C262FD34(a1, v17);
}

uint64_t sub_1C268C12C(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v15 >= v6) {
      goto LABEL_19;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v15);
    ++v9;
    if (!v16)
    {
      int64_t v9 = v15 + 1;
      if (v15 + 1 >= v6) {
        goto LABEL_19;
      }
      unint64_t v16 = *(void *)(v18 + 8 * v9);
      if (!v16) {
        break;
      }
    }
LABEL_18:
    unint64_t v5 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    BOOL v12 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v11);
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    swift_bridgeObjectRetain();
    sub_1C263D360(v13, v14);
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
    sub_1C277A790();
    sub_1C263CC84(v13, v14);
    uint64_t result = sub_1C277C910();
    v8 ^= result;
  }
  int64_t v17 = v15 + 2;
  if (v17 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_1C277C8D0();
  }
  unint64_t v16 = *(void *)(v18 + 8 * v17);
  if (v16)
  {
    int64_t v9 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_19;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1C268C2FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1C2672B00((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1C268C3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1C277A590();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1C277A5B0();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C277A5A0();
  sub_1C2672B00(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1C268C48C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1C268C6F4);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1C263D360(a3, a4);
                  sub_1C263D360(a1, a2);
                  char v17 = sub_1C268C3D4((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_1C263CC84(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1C263D360(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1C268C3D4(v21, v22, v20, a3, a4);
                  sub_1C263CC84(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1C263D360(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1C263D360(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1C268C2FC(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_1C263CC84(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s14HealthPlatform13UserInterfaceO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_30;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a6 != 2) {
        goto LABEL_30;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a6 != 3) {
        goto LABEL_30;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 4:
      if (a6 != 4) {
        goto LABEL_30;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 5:
      if (a6 != 5) {
        goto LABEL_30;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 6:
      if (a6 != 6 || a5 | a4) {
        goto LABEL_30;
      }
      uint64_t result = 1;
      break;
    default:
      if (a6)
      {
LABEL_30:
        uint64_t result = 0;
      }
      else if (a1 == a4 && a2 == a5)
      {
        uint64_t result = 1;
      }
      else
      {
LABEL_26:
        uint64_t result = sub_1C277C7E0();
      }
      break;
  }
  return result;
}

uint64_t sub_1C268C86C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  v25[4] = *(id *)MEMORY[0x1E4F143B8];
  if (a2 >> 60 != 15)
  {
    if (a4 >> 60 == 15) {
      goto LABEL_5;
    }
    uint64_t v9 = self;
    sub_1C2641B44(a1, a2);
    sub_1C2641B44(a3, a4);
    uint64_t v10 = (void *)sub_1C277A770();
    v25[0] = 0;
    id v11 = objc_msgSend(v9, sel_JSONObjectWithData_options_error_, v10, 0, v25);

    if (v11)
    {
      id v12 = v25[0];
      sub_1C277C110();
      swift_unknownObjectRelease();
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
      if (swift_dynamicCast()) {
        uint64_t v13 = v24;
      }
      else {
        uint64_t v13 = 0;
      }
      uint64_t v14 = (void *)sub_1C277A770();
      v25[0] = 0;
      id v15 = objc_msgSend(v9, sel_JSONObjectWithData_options_error_, v14, 0, v25);

      if (v15)
      {
        id v16 = v25[0];
        sub_1C277C110();
        swift_unknownObjectRelease();
        if (swift_dynamicCast()) {
          id v17 = v24;
        }
        else {
          id v17 = 0;
        }
        if (v13)
        {
          if (v17)
          {
            id v18 = v17;
            id v19 = v13;
            char v5 = sub_1C277C030();

            sub_1C2641B58(a1, a2);
            sub_1C2641B58(a3, a4);

            return v5 & 1;
          }
          id v17 = v13;
          sub_1C2641B58(a1, a2);
          sub_1C2641B58(a3, a4);
        }
        else
        {
          sub_1C2641B58(a1, a2);
          sub_1C2641B58(a3, a4);
          if (!v17) {
            goto LABEL_3;
          }
        }

LABEL_5:
        char v5 = 0;
        return v5 & 1;
      }
      id v22 = v25[0];
      uint64_t v21 = (void *)sub_1C277A620();

      swift_willThrow();
    }
    else
    {
      id v20 = v25[0];
      uint64_t v21 = (void *)sub_1C277A620();

      swift_willThrow();
    }
    sub_1C2641B44(a1, a2);
    sub_1C2641B44(a3, a4);
    char v5 = sub_1C268C48C(a1, a2, a3, a4);
    sub_1C2641B58(a3, a4);

    sub_1C2641B58(a3, a4);
    sub_1C2641B58(a1, a2);
    sub_1C2641B58(a1, a2);
    return v5 & 1;
  }
  if (a4 >> 60 != 15) {
    goto LABEL_5;
  }
LABEL_3:
  char v5 = 1;
  return v5 & 1;
}

uint64_t _s14HealthPlatform14PluginFeedItemV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v224 = type metadata accessor for RelevantDateInterval();
  uint64_t v4 = *(void *)(v224 - 8);
  MEMORY[0x1F4188790](v224);
  uint64_t v219 = (uint64_t)&v218 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C263D4EC(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v220 = (uint64_t)&v218 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26903D4();
  uint64_t v221 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v218 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = (int *)type metadata accessor for PluginFeedItem();
  uint64_t v11 = MEMORY[0x1F4188790](v225);
  uint64_t v239 = (uint64_t)&v218 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v242 = (uint64_t)&v218 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v240 = (uint64_t)&v218 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v241 = (uint64_t)&v218 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v246 = (char *)&v218 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v245 = (uint64_t)&v218 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v243 = (uint64_t)&v218 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v244 = (uint64_t)&v218 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v238 = (uint64_t)&v218 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v251 = (uint64_t)&v218 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v237 = (uint64_t)&v218 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v34 = MEMORY[0x1F4188790](v33);
  v235 = (char *)&v218 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v37 = MEMORY[0x1F4188790](v36);
  uint64_t v247 = (uint64_t)&v218 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v248 = (uint64_t)&v218 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  uint64_t v249 = (uint64_t)&v218 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  v233 = (char *)&v218 - v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v250 = (uint64_t)&v218 - v46;
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  uint64_t v252 = (uint64_t)&v218 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  uint64_t v50 = MEMORY[0x1F4188790](v49);
  uint64_t v231 = (uint64_t)&v218 - v51;
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  uint64_t v230 = (uint64_t)&v218 - v53;
  uint64_t v54 = MEMORY[0x1F4188790](v52);
  uint64_t v55 = MEMORY[0x1F4188790](v54);
  uint64_t v227 = (uint64_t)&v218 - v56;
  uint64_t v57 = MEMORY[0x1F4188790](v55);
  uint64_t v58 = MEMORY[0x1F4188790](v57);
  uint64_t v253 = (uint64_t)&v218 - v59;
  uint64_t v60 = MEMORY[0x1F4188790](v58);
  v228 = (char *)&v218 - v61;
  uint64_t v62 = MEMORY[0x1F4188790](v60);
  uint64_t v254 = (uint64_t)&v218 - v63;
  uint64_t v64 = MEMORY[0x1F4188790](v62);
  uint64_t v255 = (uint64_t)&v218 - v65;
  uint64_t v66 = MEMORY[0x1F4188790](v64);
  uint64_t v256 = (uint64_t)&v218 - v67;
  uint64_t v68 = MEMORY[0x1F4188790](v66);
  uint64_t v257 = (uint64_t)&v218 - v69;
  uint64_t v70 = MEMORY[0x1F4188790](v68);
  int64_t v72 = (char *)&v218 - v71;
  uint64_t v73 = MEMORY[0x1F4188790](v70);
  uint64_t v75 = (char *)&v218 - v74;
  uint64_t v76 = MEMORY[0x1F4188790](v73);
  BOOL v78 = (char *)&v218 - v77;
  uint64_t v79 = MEMORY[0x1F4188790](v76);
  uint64_t v81 = (char *)&v218 - v80;
  uint64_t v82 = MEMORY[0x1F4188790](v79);
  char v84 = (char *)&v218 - v83;
  MEMORY[0x1F4188790](v82);
  uint64_t v86 = (char *)&v218 - v85;
  uint64_t v87 = a1[1];
  uint64_t v88 = a2[1];
  BOOL v89 = *a1 == *a2;
  uint64_t v236 = v90;
  uint64_t v234 = v91;
  uint64_t v232 = v92;
  uint64_t v229 = v93;
  uint64_t v226 = v94;
  v223 = v10;
  uint64_t v222 = v4;
  if (v89 && v87 == v88)
  {
    sub_1C26447BC((uint64_t)a1, (uint64_t)&v218 - v85, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C26447BC((uint64_t)a2, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  }
  else
  {
    char v95 = sub_1C277C7E0();
    sub_1C26447BC((uint64_t)a1, (uint64_t)v86, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C26447BC((uint64_t)a2, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    if ((v95 & 1) == 0)
    {
      sub_1C2690438((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C2690438((uint64_t)v84, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C26447BC((uint64_t)a1, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C26447BC((uint64_t)a2, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      goto LABEL_15;
    }
  }
  char v96 = _s14HealthPlatform13UserInterfaceO2eeoiySbAC_ACtFZ_0(*((void *)v86 + 2), *((void *)v86 + 3), v86[32], *((void *)v84 + 2), *((void *)v84 + 3), v84[32]);
  sub_1C2690438((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438((uint64_t)v84, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C26447BC((uint64_t)a1, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C26447BC((uint64_t)a2, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  if ((v96 & 1) == 0)
  {
LABEL_15:
    sub_1C2690438((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C26447BC((uint64_t)a1, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C26447BC((uint64_t)a2, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    goto LABEL_16;
  }
  char v97 = sub_1C268C86C(*((void *)v81 + 11), *((void *)v81 + 12), *((void *)v78 + 11), *((void *)v78 + 12));
  sub_1C2690438((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C26447BC((uint64_t)a1, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C26447BC((uint64_t)a2, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  if ((v97 & 1) == 0)
  {
LABEL_16:
    sub_1C2690438((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v108 = v244;
    int64_t v105 = v235;
    uint64_t v110 = v233;
    uint64_t v109 = (uint64_t)v228;
    uint64_t v117 = v255;
LABEL_17:
    uint64_t v106 = v257;
    sub_1C26447BC((uint64_t)a1, v257, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v107 = v256;
    sub_1C26447BC((uint64_t)a2, v256, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    goto LABEL_18;
  }
  uint64_t v98 = v225[11];
  uint64_t v99 = (uint64_t)&v72[v98];
  uint64_t v100 = (uint64_t)v223;
  uint64_t v101 = (uint64_t)&v223[*(int *)(v221 + 48)];
  sub_1C26447BC((uint64_t)&v75[v98], (uint64_t)v223, (uint64_t (*)(void))sub_1C263D4EC);
  sub_1C26447BC(v99, v101, (uint64_t (*)(void))sub_1C263D4EC);
  uint64_t v102 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v222 + 48);
  uint64_t v103 = v224;
  if (v102(v100, 1, v224) != 1)
  {
    uint64_t v152 = v220;
    sub_1C26447BC(v100, v220, (uint64_t (*)(void))sub_1C263D4EC);
    if (v102(v101, 1, v103) != 1)
    {
      uint64_t v154 = v219;
      sub_1C268F220(v101, v219);
      char v155 = sub_1C277A4E0();
      int64_t v105 = v235;
      if ((v155 & 1) != 0 && *(double *)(v152 + *(int *)(v224 + 20)) == *(double *)(v154 + *(int *)(v224 + 20)))
      {
        uint64_t v156 = *(int *)(v224 + 24);
        double v157 = *(double *)(v152 + v156);
        double v158 = *(double *)(v154 + v156);
        sub_1C2690438(v154, (uint64_t (*)(void))type metadata accessor for RelevantDateInterval);
        sub_1C2690438((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
        sub_1C2690438((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
        sub_1C2690438(v152, (uint64_t (*)(void))type metadata accessor for RelevantDateInterval);
        sub_1C2690438(v100, (uint64_t (*)(void))sub_1C263D4EC);
        uint64_t v106 = v257;
        sub_1C26447BC((uint64_t)a1, v257, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
        uint64_t v107 = v256;
        sub_1C26447BC((uint64_t)a2, v256, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
        uint64_t v108 = v244;
        uint64_t v109 = (uint64_t)v228;
        uint64_t v117 = v255;
        uint64_t v110 = v233;
        if (v157 == v158) {
          goto LABEL_11;
        }
LABEL_18:
        sub_1C2690438(v107, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
        sub_1C2690438(v106, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
        sub_1C26447BC((uint64_t)a1, v117, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
        uint64_t v118 = v254;
        sub_1C26447BC((uint64_t)a2, v254, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
        uint64_t v119 = v105;
        goto LABEL_19;
      }
      sub_1C2690438(v154, (uint64_t (*)(void))type metadata accessor for RelevantDateInterval);
      sub_1C2690438((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C2690438((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C2690438(v152, (uint64_t (*)(void))type metadata accessor for RelevantDateInterval);
      uint64_t v153 = (uint64_t (*)(void))sub_1C263D4EC;
      goto LABEL_48;
    }
    sub_1C2690438((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v152, (uint64_t (*)(void))type metadata accessor for RelevantDateInterval);
    int64_t v105 = v235;
LABEL_42:
    uint64_t v153 = (uint64_t (*)(void))sub_1C26903D4;
LABEL_48:
    sub_1C2690438(v100, v153);
    uint64_t v108 = v244;
    uint64_t v109 = (uint64_t)v228;
    uint64_t v117 = v255;
    uint64_t v110 = v233;
    goto LABEL_17;
  }
  sub_1C2690438((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  unsigned int v104 = v102(v101, 1, v103);
  int64_t v105 = v235;
  if (v104 != 1) {
    goto LABEL_42;
  }
  sub_1C2690438(v100, (uint64_t (*)(void))sub_1C263D4EC);
  uint64_t v106 = v257;
  sub_1C26447BC((uint64_t)a1, v257, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v107 = v256;
  sub_1C26447BC((uint64_t)a2, v256, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v108 = v244;
  uint64_t v109 = (uint64_t)v228;
  uint64_t v110 = v233;
LABEL_11:
  uint64_t v111 = v225[12];
  char v112 = *(unsigned char *)(v106 + v111);
  LOBYTE(v111) = *(unsigned char *)(v107 + v111);
  char v259 = v112;
  char v258 = v111;
  unint64_t v113 = ContentKind.rawValue.getter();
  uint64_t v115 = v114;
  if (v113 == ContentKind.rawValue.getter() && v115 == v116)
  {
    swift_bridgeObjectRelease_n();
    sub_1C2690438(v256, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v257, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v117 = v255;
    sub_1C26447BC((uint64_t)a1, v255, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v118 = v254;
    sub_1C26447BC((uint64_t)a2, v254, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v119 = v105;
    goto LABEL_50;
  }
  LODWORD(v228) = sub_1C277C7E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2690438(v256, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438(v257, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v117 = v255;
  sub_1C26447BC((uint64_t)a1, v255, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v118 = v254;
  sub_1C26447BC((uint64_t)a2, v254, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v119 = v105;
  if ((v228 & 1) == 0)
  {
LABEL_19:
    sub_1C2690438(v118, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v117, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v120 = v253;
LABEL_20:
    sub_1C26447BC((uint64_t)a1, v109, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C26447BC((uint64_t)a2, v120, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    goto LABEL_21;
  }
LABEL_50:
  uint64_t v159 = v225[15];
  uint64_t v160 = (void *)(v117 + v159);
  uint64_t v161 = *(void *)(v117 + v159 + 8);
  uint64_t v162 = (void *)(v118 + v159);
  uint64_t v163 = v117;
  uint64_t v164 = v162[1];
  uint64_t v165 = v118;
  if (!v161)
  {
    swift_bridgeObjectRetain();
    sub_1C2690438(v118, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v163, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v120 = v253;
    if (!v164) {
      goto LABEL_56;
    }
    goto LABEL_58;
  }
  uint64_t v120 = v253;
  if (!v164)
  {
    uint64_t v166 = v165;
    swift_bridgeObjectRetain();
    sub_1C2690438(v166, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v255, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
LABEL_58:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (*v160 == *v162 && v161 == v164)
  {
    swift_bridgeObjectRetain();
    sub_1C2690438(v254, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v255, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRelease();
LABEL_56:
    sub_1C26447BC((uint64_t)a1, v109, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C26447BC((uint64_t)a2, v120, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    goto LABEL_60;
  }
  char v167 = sub_1C277C7E0();
  swift_bridgeObjectRetain();
  sub_1C2690438(v254, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v120 = v253;
  sub_1C2690438(v255, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  swift_bridgeObjectRelease();
  sub_1C26447BC((uint64_t)a1, v109, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C26447BC((uint64_t)a2, v120, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  if ((v167 & 1) == 0)
  {
LABEL_21:
    sub_1C2690438(v120, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v109, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
LABEL_22:
    uint64_t v121 = (uint64_t)v110;
    uint64_t v122 = v226;
    sub_1C26447BC((uint64_t)a1, v226, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v123 = v227;
    sub_1C26447BC((uint64_t)a2, v227, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    goto LABEL_23;
  }
LABEL_60:
  uint64_t v168 = v225[26];
  uint64_t v169 = (void *)(v109 + v168);
  uint64_t v170 = *(void *)(v109 + v168 + 8);
  id v171 = (void *)(v120 + v168);
  uint64_t v172 = v171[1];
  if (!v170)
  {
    swift_bridgeObjectRetain();
    sub_1C2690438(v120, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v109, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    if (!v172) {
      goto LABEL_66;
    }
    goto LABEL_68;
  }
  if (!v172)
  {
    swift_bridgeObjectRetain();
    sub_1C2690438(v120, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v109, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
LABEL_68:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if (*v169 == *v171 && v170 == v172)
  {
    swift_bridgeObjectRetain();
    sub_1C2690438(v120, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v109, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRelease();
LABEL_66:
    uint64_t v121 = (uint64_t)v110;
    uint64_t v122 = v226;
    sub_1C26447BC((uint64_t)a1, v226, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v123 = v227;
    sub_1C26447BC((uint64_t)a2, v227, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    goto LABEL_70;
  }
  uint64_t v121 = (uint64_t)v110;
  uint64_t v173 = v109;
  char v174 = sub_1C277C7E0();
  swift_bridgeObjectRetain();
  sub_1C2690438(v253, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438(v173, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  swift_bridgeObjectRelease();
  uint64_t v122 = v226;
  sub_1C26447BC((uint64_t)a1, v226, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v123 = v227;
  sub_1C26447BC((uint64_t)a2, v227, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  if ((v174 & 1) == 0)
  {
LABEL_23:
    uint64_t v124 = (uint64_t)v119;
    sub_1C2690438(v122, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v123, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v125 = v229;
    sub_1C26447BC((uint64_t)a1, v229, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v126 = v230;
    sub_1C26447BC((uint64_t)a2, v230, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
LABEL_24:
    uint64_t v127 = v245;
    sub_1C2690438(v125, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v126, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v128 = v231;
    sub_1C26447BC((uint64_t)a1, v231, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v129 = v232;
    sub_1C26447BC((uint64_t)a2, v232, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
LABEL_25:
    sub_1C2690438(v128, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v129, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v130 = v252;
    sub_1C26447BC((uint64_t)a1, v252, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v131 = v250;
    sub_1C26447BC((uint64_t)a2, v250, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v132 = v121;
LABEL_26:
    sub_1C2690438(v131, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v130, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v133 = v127;
    uint64_t v134 = v124;
    uint64_t v135 = v108;
    uint64_t v136 = v251;
LABEL_27:
    sub_1C26447BC((uint64_t)a1, v132, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v137 = v249;
    sub_1C26447BC((uint64_t)a2, v249, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v138 = v243;
    goto LABEL_28;
  }
LABEL_70:
  uint64_t v124 = (uint64_t)v119;
  long long v175 = v225;
  char v176 = sub_1C26717D4(*(void *)(v122 + v225[13]), *(void *)(v123 + v225[13]));
  sub_1C2690438(v122, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438(v123, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v125 = v229;
  sub_1C26447BC((uint64_t)a1, v229, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v126 = v230;
  sub_1C26447BC((uint64_t)a2, v230, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  if ((v176 & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v127 = v245;
  LODWORD(v257) = sub_1C266EC30(*(void *)(v125 + v175[16]), *(void *)(v126 + v175[16]));
  sub_1C2690438(v125, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438(v126, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v128 = v231;
  sub_1C26447BC((uint64_t)a1, v231, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v129 = v232;
  sub_1C26447BC((uint64_t)a2, v232, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  if ((v257 & 1) == 0) {
    goto LABEL_25;
  }
  LODWORD(v257) = sub_1C267154C(*(void *)(v128 + v225[17]), *(void *)(v129 + v225[17]));
  sub_1C2690438(v128, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438(v129, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v130 = v252;
  sub_1C26447BC((uint64_t)a1, v252, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v131 = v250;
  sub_1C26447BC((uint64_t)a2, v250, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v132 = v121;
  if ((v257 & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v177 = v225[19];
  v178 = (void *)(v130 + v177);
  uint64_t v179 = *(void *)(v130 + v177 + 8);
  v180 = (void *)(v131 + v177);
  uint64_t v181 = v180[1];
  uint64_t v136 = v251;
  if (!v179)
  {
    swift_bridgeObjectRetain();
    sub_1C2690438(v131, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v252, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v133 = v127;
    uint64_t v134 = v124;
    if (!v181) {
      goto LABEL_80;
    }
    swift_bridgeObjectRelease();
    goto LABEL_82;
  }
  if (!v181)
  {
    swift_bridgeObjectRetain();
    sub_1C2690438(v131, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v252, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRelease();
    uint64_t v133 = v127;
    uint64_t v134 = v124;
LABEL_82:
    uint64_t v135 = v108;
    goto LABEL_27;
  }
  uint64_t v133 = v127;
  if (*v178 == *v180 && v179 == v181)
  {
    swift_bridgeObjectRetain();
    sub_1C2690438(v250, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v252, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRelease();
    uint64_t v134 = v124;
LABEL_80:
    sub_1C26447BC((uint64_t)a1, v132, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v137 = v249;
    sub_1C26447BC((uint64_t)a2, v249, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v135 = v108;
    uint64_t v138 = v243;
    goto LABEL_84;
  }
  LODWORD(v257) = sub_1C277C7E0();
  swift_bridgeObjectRetain();
  sub_1C2690438(v250, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v136 = v251;
  sub_1C2690438(v252, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  swift_bridgeObjectRelease();
  sub_1C26447BC((uint64_t)a1, v132, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v137 = v249;
  sub_1C26447BC((uint64_t)a2, v249, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v134 = v124;
  uint64_t v135 = v108;
  uint64_t v138 = v243;
  if ((v257 & 1) == 0)
  {
LABEL_28:
    sub_1C2690438(v137, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v132, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
LABEL_29:
    uint64_t v139 = v248;
    sub_1C26447BC((uint64_t)a1, v248, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v140 = v247;
    sub_1C26447BC((uint64_t)a2, v247, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    goto LABEL_30;
  }
LABEL_84:
  uint64_t v182 = v225[20];
  v183 = (void *)(v132 + v182);
  uint64_t v184 = *(void *)(v132 + v182 + 8);
  v185 = (void *)(v137 + v182);
  uint64_t v186 = v185[1];
  if (!v184)
  {
    swift_bridgeObjectRetain();
    sub_1C2690438(v249, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v132, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    if (!v186) {
      goto LABEL_90;
    }
    goto LABEL_92;
  }
  if (!v186)
  {
    uint64_t v257 = v184;
    swift_bridgeObjectRetain();
    sub_1C2690438(v137, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v132, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
LABEL_92:
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if (*v183 == *v185 && v184 == v186)
  {
    swift_bridgeObjectRetain();
    sub_1C2690438(v249, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v132, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRelease();
LABEL_90:
    uint64_t v139 = v248;
    sub_1C26447BC((uint64_t)a1, v248, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v140 = v247;
    sub_1C26447BC((uint64_t)a2, v247, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    goto LABEL_94;
  }
  LODWORD(v257) = sub_1C277C7E0();
  swift_bridgeObjectRetain();
  sub_1C2690438(v249, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v136 = v251;
  sub_1C2690438(v132, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  swift_bridgeObjectRelease();
  uint64_t v139 = v248;
  sub_1C26447BC((uint64_t)a1, v248, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v140 = v247;
  sub_1C26447BC((uint64_t)a2, v247, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  if ((v257 & 1) == 0)
  {
LABEL_30:
    sub_1C2690438(v140, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v139, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
LABEL_31:
    uint64_t v141 = v234;
    sub_1C26447BC((uint64_t)a1, v234, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C26447BC((uint64_t)a2, v134, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v142 = (uint64_t)v246;
    goto LABEL_32;
  }
LABEL_94:
  uint64_t v187 = v225[21];
  v188 = (void *)(v139 + v187);
  uint64_t v189 = *(void *)(v139 + v187 + 8);
  v190 = (void *)(v140 + v187);
  uint64_t v191 = v190[1];
  if (!v189)
  {
    swift_bridgeObjectRetain();
    sub_1C2690438(v247, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v248, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    if (!v191) {
      goto LABEL_100;
    }
    goto LABEL_102;
  }
  if (!v191)
  {
    swift_bridgeObjectRetain();
    sub_1C2690438(v247, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v248, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
LABEL_102:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  if (*v188 == *v190 && v189 == v191)
  {
    swift_bridgeObjectRetain();
    sub_1C2690438(v247, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v248, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRelease();
LABEL_100:
    uint64_t v141 = v234;
    sub_1C26447BC((uint64_t)a1, v234, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C26447BC((uint64_t)a2, v134, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v142 = (uint64_t)v246;
    goto LABEL_104;
  }
  LODWORD(v257) = sub_1C277C7E0();
  swift_bridgeObjectRetain();
  sub_1C2690438(v247, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438(v248, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  swift_bridgeObjectRelease();
  uint64_t v141 = v234;
  sub_1C26447BC((uint64_t)a1, v234, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C26447BC((uint64_t)a2, v134, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v136 = v251;
  uint64_t v142 = (uint64_t)v246;
  if ((v257 & 1) == 0)
  {
LABEL_32:
    sub_1C2690438(v134, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v141, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v143 = v236;
    sub_1C26447BC((uint64_t)a1, v236, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v144 = v237;
    sub_1C26447BC((uint64_t)a2, v237, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
LABEL_33:
    sub_1C2690438(v144, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v143, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C26447BC((uint64_t)a1, v136, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v145 = v238;
    sub_1C26447BC((uint64_t)a2, v238, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    goto LABEL_34;
  }
LABEL_104:
  v192 = v225;
  uint64_t v257 = *(void *)(v141 + v225[22]);
  sub_1C2690438(v141, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v193 = *(void *)(v134 + v192[22]);
  sub_1C2690438(v134, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v143 = v236;
  sub_1C26447BC((uint64_t)a1, v236, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v144 = v237;
  sub_1C26447BC((uint64_t)a2, v237, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  BOOL v89 = v257 == v193;
  uint64_t v136 = v251;
  if (!v89) {
    goto LABEL_33;
  }
  v194 = v225;
  LODWORD(v257) = *(unsigned __int8 *)(v143 + v225[24]);
  sub_1C2690438(v143, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  LODWORD(v194) = *(unsigned __int8 *)(v144 + v194[24]);
  sub_1C2690438(v144, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C26447BC((uint64_t)a1, v251, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v145 = v238;
  sub_1C26447BC((uint64_t)a2, v238, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  BOOL v89 = v257 == v194;
  uint64_t v136 = v251;
  if (v89)
  {
    v195 = v225;
    uint64_t v196 = v145;
    int v197 = *(unsigned __int8 *)(v251 + v225[25]);
    sub_1C2690438(v251, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    int v198 = *(unsigned __int8 *)(v196 + v195[25]);
    sub_1C2690438(v196, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    if (v197 == 2)
    {
      uint64_t v146 = v242;
      uint64_t v138 = v243;
      uint64_t v133 = v245;
      uint64_t v142 = (uint64_t)v246;
      uint64_t v135 = v244;
      if (v198 != 2) {
        goto LABEL_35;
      }
      sub_1C26447BC((uint64_t)a1, v244, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C26447BC((uint64_t)a2, v138, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    }
    else
    {
      uint64_t v146 = v242;
      uint64_t v138 = v243;
      uint64_t v133 = v245;
      uint64_t v142 = (uint64_t)v246;
      uint64_t v135 = v244;
      if (v198 == 2) {
        goto LABEL_35;
      }
      sub_1C26447BC((uint64_t)a1, v244, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C26447BC((uint64_t)a2, v138, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      if (((((v197 & 1) == 0) ^ v198) & 1) == 0) {
        goto LABEL_36;
      }
    }
    uint64_t v199 = v225[23];
    int v200 = *(unsigned __int8 *)(v135 + v199);
    int v201 = *(unsigned __int8 *)(v138 + v199);
    if (v200 == 13)
    {
      sub_1C2690438(v243, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C2690438(v244, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      uint64_t v146 = v242;
      uint64_t v133 = v245;
      uint64_t v142 = (uint64_t)v246;
      if (v201 != 13) {
        goto LABEL_37;
      }
      sub_1C26447BC((uint64_t)a1, v245, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C26447BC((uint64_t)a2, v142, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    }
    else
    {
      uint64_t v146 = v242;
      uint64_t v138 = v243;
      uint64_t v133 = v245;
      uint64_t v142 = (uint64_t)v246;
      uint64_t v135 = v244;
      if (v201 == 13) {
        goto LABEL_36;
      }
      sub_1C2690438(v243, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C2690438(v135, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C26447BC((uint64_t)a1, v133, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C26447BC((uint64_t)a2, v142, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      if (v200 != v201) {
        goto LABEL_38;
      }
    }
    uint64_t v202 = v225[18];
    v203 = *(void **)(v133 + v202);
    v204 = *(void **)(v142 + v202);
    if (v203)
    {
      uint64_t v146 = v242;
      uint64_t v133 = v245;
      uint64_t v142 = (uint64_t)v246;
      if (!v204) {
        goto LABEL_38;
      }
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
      id v205 = v203;
      id v206 = v204;
      char v207 = sub_1C277C030();

      if ((v207 & 1) == 0) {
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t v146 = v242;
      uint64_t v133 = v245;
      uint64_t v142 = (uint64_t)v246;
      if (v204) {
        goto LABEL_38;
      }
    }
    sub_1C2690438(v133, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C2690438(v142, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v208 = v241;
    sub_1C26447BC((uint64_t)a1, v241, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v209 = v240;
    sub_1C26447BC((uint64_t)a2, v240, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v210 = v225[28];
    int v211 = *(unsigned __int8 *)(v208 + v210);
    int v212 = *(unsigned __int8 *)(v209 + v210);
    if (v211) {
      uint64_t v213 = 0x656D6F7268436F6ELL;
    }
    else {
      uint64_t v213 = 0x656D6F726863;
    }
    if (v211) {
      unint64_t v214 = 0xE800000000000000;
    }
    else {
      unint64_t v214 = 0xE600000000000000;
    }
    if (v212) {
      uint64_t v215 = 0x656D6F7268436F6ELL;
    }
    else {
      uint64_t v215 = 0x656D6F726863;
    }
    if (v212) {
      unint64_t v216 = 0xE800000000000000;
    }
    else {
      unint64_t v216 = 0xE600000000000000;
    }
    if (v213 == v215 && v214 == v216)
    {
      swift_bridgeObjectRelease_n();
      sub_1C2690438(v240, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C2690438(v241, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      uint64_t v146 = v242;
      sub_1C26447BC((uint64_t)a1, v242, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      uint64_t v149 = v239;
      sub_1C26447BC((uint64_t)a2, v239, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    }
    else
    {
      char v217 = sub_1C277C7E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C2690438(v240, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C2690438(v241, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      uint64_t v146 = v242;
      sub_1C26447BC((uint64_t)a1, v242, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      uint64_t v149 = v239;
      sub_1C26447BC((uint64_t)a2, v239, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      char v150 = 0;
      if ((v217 & 1) == 0) {
        goto LABEL_39;
      }
    }
    char v150 = sub_1C267154C(*(void *)(v146 + v225[14]), *(void *)(v149 + v225[14]));
    goto LABEL_39;
  }
LABEL_34:
  sub_1C2690438(v145, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438(v136, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v146 = v242;
LABEL_35:
  sub_1C26447BC((uint64_t)a1, v135, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C26447BC((uint64_t)a2, v138, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
LABEL_36:
  sub_1C2690438(v138, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438(v135, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
LABEL_37:
  sub_1C26447BC((uint64_t)a1, v133, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C26447BC((uint64_t)a2, v142, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
LABEL_38:
  sub_1C2690438(v133, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438(v142, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v147 = v241;
  sub_1C26447BC((uint64_t)a1, v241, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v148 = v240;
  sub_1C26447BC((uint64_t)a2, v240, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438(v148, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438(v147, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C26447BC((uint64_t)a1, v146, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v149 = v239;
  sub_1C26447BC((uint64_t)a2, v239, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  char v150 = 0;
LABEL_39:
  sub_1C2690438(v146, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  sub_1C2690438(v149, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  return v150 & 1;
}

uint64_t sub_1C268F220(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RelevantDateInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C268F288()
{
  unint64_t result = qword_1EA304588;
  if (!qword_1EA304588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304588);
  }
  return result;
}

uint64_t sub_1C268F2DC()
{
  return sub_1C265146C(&qword_1EA304590, (void (*)(uint64_t))type metadata accessor for PluginFeedItem);
}

uint64_t assignWithCopy for PluginFeedItem(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 32);
  sub_1C263D4D4(v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_1C263CCDC(v9, v10, v11);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)(a2 + 56);
  unint64_t v13 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) >> 60 == 15)
  {
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *v12;
      sub_1C263D360(*v12, *(void *)(a2 + 64));
      *(void *)(a1 + 56) = v14;
      *(void *)(a1 + 64) = v13;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v13 >> 60 == 15)
  {
    sub_1C2664EEC(a1 + 56);
LABEL_6:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v12;
    goto LABEL_8;
  }
  uint64_t v15 = *v12;
  sub_1C263D360(*v12, *(void *)(a2 + 64));
  uint64_t v16 = *(void *)(a1 + 56);
  unint64_t v17 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v15;
  *(void *)(a1 + 64) = v13;
  sub_1C263CC84(v16, v17);
LABEL_8:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t *)(a2 + 88);
  unint64_t v19 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96) >> 60 == 15)
  {
    if (v19 >> 60 != 15)
    {
      uint64_t v20 = *v18;
      sub_1C263D360(*v18, *(void *)(a2 + 96));
      *(void *)(a1 + 88) = v20;
      *(void *)(a1 + 96) = v19;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v19 >> 60 == 15)
  {
    sub_1C2664EEC(a1 + 88);
LABEL_13:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v18;
    goto LABEL_15;
  }
  uint64_t v21 = *v18;
  sub_1C263D360(*v18, *(void *)(a2 + 96));
  uint64_t v22 = *(void *)(a1 + 88);
  unint64_t v23 = *(void *)(a1 + 96);
  *(void *)(a1 + 88) = v21;
  *(void *)(a1 + 96) = v19;
  sub_1C263CC84(v22, v23);
LABEL_15:
  uint64_t v24 = a3[11];
  uint64_t v25 = (char *)(a1 + v24);
  uint64_t v26 = (char *)(a2 + v24);
  uint64_t v27 = type metadata accessor for RelevantDateInterval();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      uint64_t v32 = sub_1C277A520();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v25, v26, v32);
      *(void *)&v25[*(int *)(v27 + 20)] = *(void *)&v26[*(int *)(v27 + 20)];
      *(void *)&v25[*(int *)(v27 + 24)] = *(void *)&v26[*(int *)(v27 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v31)
  {
    sub_1C2690438((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for RelevantDateInterval);
LABEL_20:
    sub_1C263D4EC(0);
    memcpy(v25, v26, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_21;
  }
  uint64_t v61 = sub_1C277A520();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 24))(v25, v26, v61);
  *(void *)&v25[*(int *)(v27 + 20)] = *(void *)&v26[*(int *)(v27 + 20)];
  *(void *)&v25[*(int *)(v27 + 24)] = *(void *)&v26[*(int *)(v27 + 24)];
LABEL_21:
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[15];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  *uint64_t v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[18];
  uint64_t v38 = *(void **)(a1 + v37);
  uint64_t v39 = *(void **)(a2 + v37);
  *(void *)(a1 + v37) = v39;
  id v40 = v39;

  uint64_t v41 = a3[19];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[20];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  *uint64_t v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[21];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  uint64_t v50 = a3[26];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (void *)(a2 + v50);
  void *v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[27];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = a2 + v53;
  uint64_t v56 = *(void *)(a1 + v53);
  uint64_t v57 = *(void *)(a2 + v53);
  if (!v56)
  {
    if (v57)
    {
      uint64_t v59 = *(void *)(v55 + 8);
      *uint64_t v54 = v57;
      v54[1] = v59;
      swift_retain();
      goto LABEL_28;
    }
LABEL_27:
    *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
    goto LABEL_28;
  }
  if (!v57)
  {
    swift_release();
    goto LABEL_27;
  }
  uint64_t v58 = *(void *)(v55 + 8);
  *uint64_t v54 = v57;
  v54[1] = v58;
  swift_retain();
  swift_release();
LABEL_28:
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  return a1;
}

uint64_t initializeWithTake for PluginFeedItem(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = a3[11];
  unsigned __int8 v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v10 = type metadata accessor for RelevantDateInterval();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1C263D4EC(0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1C277A520();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    *(void *)&v8[*(int *)(v10 + 20)] = *(void *)&v9[*(int *)(v10 + 20)];
    *(void *)&v8[*(int *)(v10 + 24)] = *(void *)&v9[*(int *)(v10 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  uint64_t v16 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  uint64_t v18 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v19 = a3[23];
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v20 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v21 = a3[27];
  *(_OWORD *)(a1 + a3[26]) = *(_OWORD *)(a2 + a3[26]);
  uint64_t v22 = (void *)(a1 + v21);
  unint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *v23;
  if (*v23)
  {
    uint64_t v25 = v23[1];
    *uint64_t v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  }
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  return a1;
}

uint64_t assignWithTake for PluginFeedItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1C263CCDC(v8, v9, v10);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = (_OWORD *)(a2 + 56);
  unint64_t v13 = *(void *)(a1 + 64);
  if (v13 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v14 = *(void *)(a2 + 64);
  if (v14 >> 60 == 15)
  {
    sub_1C2664EEC(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *v12;
    goto LABEL_6;
  }
  uint64_t v15 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)v12;
  *(void *)(a1 + 64) = v14;
  sub_1C263CC84(v15, v13);
LABEL_6:
  uint64_t v16 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = (_OWORD *)(a2 + 88);
  unint64_t v18 = *(void *)(a1 + 96);
  if (v18 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 88) = *v17;
    goto LABEL_11;
  }
  unint64_t v19 = *(void *)(a2 + 96);
  if (v19 >> 60 == 15)
  {
    sub_1C2664EEC(a1 + 88);
    goto LABEL_9;
  }
  uint64_t v20 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)v17;
  *(void *)(a1 + 96) = v19;
  sub_1C263CC84(v20, v18);
LABEL_11:
  uint64_t v21 = a3[11];
  uint64_t v22 = (char *)(a1 + v21);
  unint64_t v23 = (char *)(a2 + v21);
  uint64_t v24 = type metadata accessor for RelevantDateInterval();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      uint64_t v29 = sub_1C277A520();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v22, v23, v29);
      *(void *)&v22[*(int *)(v24 + 20)] = *(void *)&v23[*(int *)(v24 + 20)];
      *(void *)&v22[*(int *)(v24 + 24)] = *(void *)&v23[*(int *)(v24 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v28)
  {
    sub_1C2690438((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for RelevantDateInterval);
LABEL_16:
    sub_1C263D4EC(0);
    memcpy(v22, v23, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v69 = sub_1C277A520();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 40))(v22, v23, v69);
  *(void *)&v22[*(int *)(v24 + 20)] = *(void *)&v23[*(int *)(v24 + 20)];
  *(void *)&v22[*(int *)(v24 + 24)] = *(void *)&v23[*(int *)(v24 + 24)];
LABEL_17:
  uint64_t v31 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[15];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)(a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  void *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[18];
  uint64_t v38 = *(void **)(a1 + v37);
  *(void *)(a1 + v37) = *(void *)(a2 + v37);

  uint64_t v39 = a3[19];
  id v40 = (void *)(a1 + v39);
  uint64_t v41 = (uint64_t *)(a2 + v39);
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  void *v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[20];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (uint64_t *)(a2 + v44);
  uint64_t v48 = *v46;
  uint64_t v47 = v46[1];
  *uint64_t v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  uint64_t v49 = a3[21];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (uint64_t *)(a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  *uint64_t v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[23];
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v54) = *(unsigned char *)(a2 + v54);
  uint64_t v55 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v55) = *(unsigned char *)(a2 + v55);
  uint64_t v56 = a3[26];
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = (uint64_t *)(a2 + v56);
  uint64_t v60 = *v58;
  uint64_t v59 = v58[1];
  *uint64_t v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  uint64_t v61 = a3[27];
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = a2 + v61;
  uint64_t v64 = *(void *)(a1 + v61);
  uint64_t v65 = *(void *)(a2 + v61);
  if (!v64)
  {
    if (v65)
    {
      uint64_t v67 = *(void *)(v63 + 8);
      *uint64_t v62 = v65;
      v62[1] = v67;
      goto LABEL_24;
    }
LABEL_23:
    *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
    goto LABEL_24;
  }
  if (!v65)
  {
    swift_release();
    goto LABEL_23;
  }
  uint64_t v66 = *(void *)(v63 + 8);
  *uint64_t v62 = v65;
  v62[1] = v66;
  swift_release();
LABEL_24:
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  return a1;
}

uint64_t sub_1C268FF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C263D4EC(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C269001C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C263D4EC(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C26900C4()
{
  sub_1C263D4EC(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t assignWithCopy for UserInterface(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C263D4D4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C263CCDC(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for UserInterface(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C263CCDC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserInterface(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UserInterface(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C2690328(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(void *)__n128 result = a2 - 6;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_1C2690340(uint64_t a1, char a2)
{
  if (a2) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C269034C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2690384()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C26903AC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1C26903D4()
{
  if (!qword_1EBB857E8)
  {
    sub_1C263D4EC(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB857E8);
    }
  }
}

uint64_t sub_1C2690438(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C269049C()
{
  uint64_t result = sub_1C277B850();
  qword_1EBB82778 = result;
  unk_1EBB82780 = v1;
  return result;
}

unint64_t static UserDefaultsKeys.healthKitDatabaseIdentifierKey.getter()
{
  return 0xD00000000000002FLL;
}

unint64_t static UserDefaultsKeys.primaryProfileSignificantChangesEnabledDate.getter()
{
  return 0xD00000000000003CLL;
}

ValueMetadata *type metadata accessor for UserDefaultsKeys()
{
  return &type metadata for UserDefaultsKeys;
}

void *sub_1C2690514(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C269053C(a1, a2, a3, a4, &qword_1EBB83148);
}

void *sub_1C2690528(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C269053C(a1, a2, a3, a4, &qword_1EBB83150);
}

void *sub_1C269053C(void *result, int64_t a2, char a3, void *a4, unint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_1C2640614(0, a5);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 1;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 5);
      unint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
          memmove(v14, a4 + 4, 32 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C269A168(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1C2690660(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2641054(0, &qword_1EBB831C0, (uint64_t (*)(uint64_t))sub_1C265D540, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C2699F88(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C269079C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2603EE8(a1, a2, a3, a4, &qword_1EBB843B0, (uint64_t (*)(uint64_t))sub_1C269B190);
}

void *sub_1C26907BC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2640614(0, &qword_1EA304270);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C269A258(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C26908F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C2640DB8(a1, a2, a3, a4, &qword_1EA3042A8, type metadata accessor for UnprotectedNotificationContentState, type metadata accessor for UnprotectedNotificationContentState, type metadata accessor for UnprotectedNotificationContentState);
}

uint64_t sub_1C269093C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C2640DB8(a1, a2, a3, a4, &qword_1EA3042B0, type metadata accessor for ProtectedNotificationContentState, type metadata accessor for ProtectedNotificationContentState, type metadata accessor for ProtectedNotificationContentState);
}

void *sub_1C2690984(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2603EE8(a1, a2, a3, a4, &qword_1EBB831C8, (uint64_t (*)(uint64_t))sub_1C264DE8C);
}

void *sub_1C26909A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2640614(0, &qword_1EA304290);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C269A8A0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C2690AC0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C269B44C(0, &qword_1EA304618, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C269A350(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C2690BE8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2603EE8(a1, a2, a3, a4, &qword_1EA3045F8, (uint64_t (*)(uint64_t))sub_1C269B3EC);
}

void *sub_1C2690C08(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2603EE8(a1, a2, a3, a4, &qword_1EA3045B0, (uint64_t (*)(uint64_t))sub_1C269AE78);
}

void *sub_1C2690C28(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2640614(0, &qword_1EBB83138);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C269A074(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C2690D44(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2603EE8(a1, a2, a3, a4, &qword_1EBB83128, (uint64_t (*)(uint64_t))sub_1C269AE04);
}

uint64_t sub_1C2690D64(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C2640DB8(a1, a2, a3, a4, &qword_1EBB85950, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(void))type metadata accessor for PluginFeedItem, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
}

void *sub_1C2690DAC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2640614(0, &qword_1EBB85958);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C269AD0C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C2690ED8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2643254(0, &qword_1EBB83168, &qword_1EBB829B8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C269A46C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2691010(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C277C1D0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for DataType();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C277C1C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2693A80(v7, result + 1, (void (*)(void))sub_1C269B7FC, (void (*)(void))type metadata accessor for DataType, (void (*)(void))sub_1C269B7FC);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C26948A8(v26, (void (*)(void))sub_1C269B7FC);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C2734FA0(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C020();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      type metadata accessor for DataType();
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C277C030();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C277C030();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C26436B4((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_1C269B7FC, (void (*)(void))type metadata accessor for DataType, (void (*)(void))sub_1C269B7FC, (void (*)(uint64_t))sub_1C273F708);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C2691330(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C277C1D0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for Keyword();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C277C1C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2693A80(v7, result + 1, (void (*)(void))sub_1C269B768, (void (*)(void))type metadata accessor for Keyword, (void (*)(void))sub_1C269B768);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C26948A8(v26, (void (*)(void))sub_1C269B768);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C2734FA0(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C020();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      type metadata accessor for Keyword();
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C277C030();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C277C030();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C26436B4((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_1C269B768, (void (*)(void))type metadata accessor for Keyword, (void (*)(void))sub_1C269B768, (void (*)(uint64_t))sub_1C273F8D0);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C2691650(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1C277C8C0();
  swift_bridgeObjectRetain();
  sub_1C277B8B0();
  uint64_t v8 = sub_1C277C910();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1C277C7E0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1C277C7E0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1C269648C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1C2691800(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C277C1D0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for SharableModelReference();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C277C1C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2693A80(v7, result + 1, (void (*)(void))sub_1C269B674, (void (*)(void))type metadata accessor for SharableModelReference, (void (*)(void))sub_1C269B674);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C26948A8(v26, (void (*)(void))sub_1C269B674);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C2734FA0(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C020();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      type metadata accessor for SharableModelReference();
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C277C030();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        BOOL v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C277C030();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C26436B4((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_1C269B674, (void (*)(void))type metadata accessor for SharableModelReference, (void (*)(void))sub_1C269B674, (void (*)(uint64_t))sub_1C273FD30);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C2691B20(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C277C1D0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85150);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C277C1C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2693CE4(v7, result + 1, &qword_1EBB80F20, (unint64_t *)&qword_1EBB85150, 0x1E4F1C118, &qword_1EBB85158);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C2694B48(v26, &qword_1EBB80F20, (unint64_t *)&qword_1EBB85150, 0x1E4F1C118, &qword_1EBB85158);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C2734FA0(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C020();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85150);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C277C030();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        BOOL v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C277C030();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C2696628((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C2691E00(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C277C1D0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for FeedItem();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C277C1C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2693A80(v7, result + 1, (void (*)(void))sub_1C269B4C0, (void (*)(void))type metadata accessor for FeedItem, (void (*)(void))sub_1C269B4C0);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C26948A8(v26, (void (*)(void))sub_1C269B4C0);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C2734FA0(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C020();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      type metadata accessor for FeedItem();
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C277C030();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        BOOL v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C277C030();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C26436B4((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_1C269B4C0, (void (*)(void))type metadata accessor for FeedItem, (void (*)(void))sub_1C269B4C0, (void (*)(uint64_t))sub_1C273FF24);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C2692120(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C277C1D0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C2644ED8(0, &qword_1EBB80D80);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C277C1C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2693CE4(v7, result + 1, &qword_1EBB83028, &qword_1EBB80D80, 0x1E4F2B448, &qword_1EBB80D88);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C2694B48(v26, &qword_1EBB83028, &qword_1EBB80D80, 0x1E4F2B448, &qword_1EBB80D88);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C2734FA0(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C020();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C2644ED8(0, &qword_1EBB80D80);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C277C030();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        BOOL v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C277C030();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C26967F8((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C2692400(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1C277B850();
  sub_1C277C8C0();
  swift_bridgeObjectRetain();
  sub_1C277B8B0();
  uint64_t v7 = sub_1C277C910();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v24 = a2;
    sub_1C26969C8((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = sub_1C277B850();
  uint64_t v12 = v11;
  if (v10 == sub_1C277B850() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = sub_1C277B850();
        uint64_t v19 = v18;
        if (v17 == sub_1C277B850() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = sub_1C277C7E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_1C26926EC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C277C1D0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C2644ED8(0, &qword_1EBB80DB0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C277C1C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2693CE4(v7, result + 1, &qword_1EA304598, &qword_1EBB80DB0, 0x1E4F2B5D8, &qword_1EBB82F98);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C2694B48(v26, &qword_1EA304598, &qword_1EBB80DB0, 0x1E4F2B5D8, &qword_1EBB82F98);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C2734FA0(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C020();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C2644ED8(0, &qword_1EBB80DB0);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C277C030();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C277C030();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C2696CB8((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C26929CC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  sub_1C277C8C0();
  sub_1C269B088((uint64_t)a2, (uint64_t)&v56);
  sub_1C269B088((uint64_t)&v56, (uint64_t)&v58);
  uint64_t v43 = a1;
  if (v58)
  {
    sub_1C277C8D0();
    swift_bridgeObjectRetain();
    sub_1C269B0E4(&v56);
    sub_1C277C040();
    sub_1C269B110(&v56);
  }
  else
  {
    sub_1C277C8D0();
    swift_bridgeObjectRetain();
  }
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v12 = a2[5];
  uint64_t v11 = a2[6];
  swift_bridgeObjectRetain();
  uint64_t v49 = v7;
  sub_1C277B8B0();
  uint64_t v48 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v47 = v9;
  sub_1C277B8B0();
  uint64_t v46 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v45 = v12;
  sub_1C277B8B0();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1C277C910();
  uint64_t v14 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v15 = v13 & ~v14;
  uint64_t v53 = v6 + 56;
  uint64_t v41 = v3;
  uint64_t v42 = (uint64_t)a2;
  if (((*(void *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v54 = *v41;
    *uint64_t v41 = 0x8000000000000000;
    sub_1C265D7F0((id *)v42);
    sub_1C2696E88(v42, v15, isUniquelyReferenced_nonNull_native);
    *uint64_t v41 = v54;
    swift_bridgeObjectRelease();
    long long v31 = *(_OWORD *)(v42 + 16);
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v42;
    *(_OWORD *)(v43 + 16) = v31;
    *(_OWORD *)(v43 + 32) = *(_OWORD *)(v42 + 32);
    *(void *)(v43 + 48) = *(void *)(v42 + 48);
    return 1;
  }
  uint64_t v44 = v11;
  uint64_t v52 = ~v14;
  uint64_t v50 = v6;
  while (1)
  {
    uint64_t v17 = *(void *)(v6 + 48) + 56 * v15;
    uint64_t v19 = *(void **)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 24);
    uint64_t v23 = *(void *)(v17 + 32);
    uint64_t v22 = *(void *)(v17 + 40);
    uint64_t v24 = *(void *)(v17 + 48);
    if (*(void *)v17)
    {
      sub_1C269B088((uint64_t)&v56, (uint64_t)&v57);
      if (!v57) {
        goto LABEL_7;
      }
      uint64_t v51 = v22;
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
      sub_1C269B0E4(&v56);
      id v25 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v26 = v25;
      char v27 = sub_1C277C030();
      sub_1C269B110(&v56);

      if ((v27 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v19 = v26;
        uint64_t v6 = v50;
LABEL_29:

        goto LABEL_7;
      }
    }
    else
    {
      sub_1C269B088((uint64_t)&v56, (uint64_t)v55);
      if (v55[0]) {
        goto LABEL_7;
      }
      uint64_t v51 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    BOOL v28 = v18 == v49 && v20 == v48;
    if (!v28 && (sub_1C277C7E0() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v50;
      goto LABEL_29;
    }
    BOOL v29 = v21 == v47 && v23 == v46;
    uint64_t v6 = v50;
    if (!v29 && (sub_1C277C7E0() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    if (v51 == v45 && v24 == v44)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_33;
    }
    char v16 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v16) {
      break;
    }
LABEL_7:
    unint64_t v15 = (v15 + 1) & v52;
    if (((*(void *)(v53 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRelease();
LABEL_33:
  sub_1C269B13C((void **)v42);
  uint64_t v33 = *(void *)(*v41 + 48) + 56 * v15;
  uint64_t v35 = *(void *)(v33 + 16);
  uint64_t v34 = *(void *)(v33 + 24);
  uint64_t v37 = *(void *)(v33 + 32);
  uint64_t v36 = *(void *)(v33 + 40);
  uint64_t v38 = *(void *)(v33 + 48);
  long long v39 = *(_OWORD *)v33;
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v33;
  *(void *)(v43 + 16) = v35;
  *(void *)(v43 + 24) = v34;
  *(void *)(v43 + 32) = v37;
  *(void *)(v43 + 40) = v36;
  *(void *)(v43 + 48) = v38;
  id v40 = (id)v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_1C2692E7C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C277A8A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1C2642C1C(&qword_1EBB84F38, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1C277B7B0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    BOOL v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    char v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1C2642C1C(&qword_1EA3045D0, MEMORY[0x1E4F27990]);
      char v21 = sub_1C277B810();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C26972B0((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1C26931A0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1C277C8C0();
  sub_1C277C8D0();
  swift_bridgeObjectRetain();
  if (a2)
  {
    id v7 = a2;
    sub_1C277C040();
  }
  uint64_t v8 = sub_1C277C910();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  char v21 = v3;
  if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v21;
    *char v21 = 0x8000000000000000;
    id v20 = a2;
    sub_1C2697550(a2, v10, isUniquelyReferenced_nonNull_native);
    *char v21 = v22;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  uint64_t v11 = ~v9;
  while (1)
  {
    uint64_t v12 = *(void **)(*(void *)(v6 + 48) + 8 * v10);
    if (v12) {
      break;
    }
    if (!a2) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      goto LABEL_12;
    }
  }
  if (!a2) {
    goto LABEL_6;
  }
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
  id v13 = a2;
  id v14 = v12;
  char v15 = sub_1C277C030();

  if ((v15 & 1) == 0) {
    goto LABEL_6;
  }

LABEL_11:
  swift_bridgeObjectRelease();
  char v16 = *(void **)(*(void *)(*v21 + 48) + 8 * v10);
  *a1 = v16;
  id v17 = v16;
  return 0;
}

uint64_t sub_1C2693384(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C277C1D0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C2644ED8(0, &qword_1EBB84260);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C277C1C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2693CE4(v7, result + 1, &qword_1EBB842E8, &qword_1EBB84260, 0x1E4F2B3B8, (unint64_t *)&qword_1EBB84268);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C2694B48(v26, &qword_1EBB842E8, &qword_1EBB84260, 0x1E4F2B3B8, (unint64_t *)&qword_1EBB84268);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C2734FA0(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C020();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C2644ED8(0, &qword_1EBB84260);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C277C030();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C277C030();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C2697718((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C2693664(unsigned char *a1, char a2)
{
  uint64_t v4 = a2 & 1;
  uint64_t v5 = *v2;
  sub_1C277C8C0();
  sub_1C277C8D0();
  uint64_t v6 = sub_1C277C910();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C26978E8(v4, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if ((((v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while ((((v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0);
  }
  uint64_t result = 0;
  LOBYTE(v4) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = v4;
  return result;
}

uint64_t sub_1C26937A0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C277C1D0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB82FE0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C277C1C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2693CE4(v7, result + 1, &qword_1EA3045A8, (unint64_t *)&qword_1EBB82FE0, 0x1E4F2B4B8, &qword_1EBB82FF0);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C2694B48(v26, &qword_1EA3045A8, (unint64_t *)&qword_1EBB82FE0, 0x1E4F2B4B8, &qword_1EBB82FF0);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C2734FA0(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C020();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB82FE0);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C277C030();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C277C030();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C2697A50((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C2693A80(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void), void (*a5)(void))
{
  if (a2)
  {
    a3(0);
    uint64_t v7 = sub_1C277C290();
    uint64_t v20 = v7;
    sub_1C277C170();
    if (sub_1C277C200())
    {
      a4(0);
      do
      {
        swift_dynamicCast();
        uint64_t v7 = v20;
        unint64_t v14 = *(void *)(v20 + 16);
        if (*(void *)(v20 + 24) <= v14)
        {
          sub_1C26948A8(v14 + 1, a5);
          uint64_t v7 = v20;
        }
        uint64_t result = sub_1C277C020();
        uint64_t v9 = v7 + 56;
        uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
        unint64_t v11 = result & ~v10;
        unint64_t v12 = v11 >> 6;
        if (((-1 << v11) & ~*(void *)(v7 + 56 + 8 * (v11 >> 6))) != 0)
        {
          unint64_t v13 = __clz(__rbit64((-1 << v11) & ~*(void *)(v7 + 56 + 8 * (v11 >> 6)))) | v11 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v15 = 0;
          unint64_t v16 = (unint64_t)(63 - v10) >> 6;
          do
          {
            if (++v12 == v16 && (v15 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v17 = v12 == v16;
            if (v12 == v16) {
              unint64_t v12 = 0;
            }
            v15 |= v17;
            uint64_t v18 = *(void *)(v9 + 8 * v12);
          }
          while (v18 == -1);
          unint64_t v13 = __clz(__rbit64(~v18)) + (v12 << 6);
        }
        *(void *)(v9 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        *(void *)(*(void *)(v7 + 48) + 8 * v13) = v19;
        ++*(void *)(v7 + 16);
      }
      while (sub_1C277C200());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v7;
}

uint64_t sub_1C2693C80(uint64_t a1, uint64_t a2)
{
  return sub_1C2693A80(a1, a2, (void (*)(void))sub_1C269AF60, (void (*)(void))type metadata accessor for EncodedFeatureTag, (void (*)(void))sub_1C269AF60);
}

uint64_t sub_1C2693CC0(uint64_t a1, uint64_t a2)
{
  return sub_1C2693CE4(a1, a2, &qword_1EBB80F20, (unint64_t *)&qword_1EBB85150, 0x1E4F1C118, &qword_1EBB85158);
}

uint64_t sub_1C2693CE4(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  if (a2)
  {
    sub_1C269B5E8(0, a3, a4, a5, a6);
    uint64_t v10 = sub_1C277C290();
    uint64_t v23 = v10;
    sub_1C277C170();
    if (sub_1C277C200())
    {
      sub_1C2644ED8(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v10 = v23;
        unint64_t v17 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v17)
        {
          sub_1C2694B48(v17 + 1, a3, a4, a5, a6);
          uint64_t v10 = v23;
        }
        uint64_t result = sub_1C277C020();
        uint64_t v12 = v10 + 56;
        uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
        unint64_t v14 = result & ~v13;
        unint64_t v15 = v14 >> 6;
        if (((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v15 == v19;
            if (v15 == v19) {
              unint64_t v15 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          unint64_t v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(void *)(*(void *)(v10 + 48) + 8 * v16) = v22;
        ++*(void *)(v10 + 16);
      }
      while (sub_1C277C200());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v10;
}

uint64_t sub_1C2693F0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C261E8D8();
  uint64_t v3 = sub_1C277C280();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1C277C8C0();
      sub_1C277B8B0();
      uint64_t result = sub_1C277C910();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}