void sub_25B10A904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  _Block_object_dispose(&a53, 8);
  _Unwind_Resume(a1);
}

id STRPLogCoding()
{
  if (STRPLogCoding_onceToken[0] != -1) {
    dispatch_once(STRPLogCoding_onceToken, &__block_literal_global);
  }
  v0 = (void *)STRPLogCoding___logObj;
  return v0;
}

uint64_t __STRPLogCoding_block_invoke()
{
  STRPLogCoding___logObj = (uint64_t)os_log_create("com.apple.replicatorengine", "Coding");
  return MEMORY[0x270F9A758]();
}

void type metadata accessor for Name(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ProtocolVersion(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ProtocolVersion(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_25B10C2D8()
{
  uint64_t v0 = sub_25B2908F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  char v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25B2908C0();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_25B290360();
  MEMORY[0x270FA5388](v5 - 8);
  sub_25B10CB64();
  sub_25B290340();
  v7[1] = MEMORY[0x263F8EE78];
  sub_25B10C80C((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
  sub_25B10CBE8();
  sub_25B290A00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v0);
  uint64_t result = sub_25B290920();
  qword_26A4D9EF8 = result;
  return result;
}

void sub_25B10C508(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_25B10C514(uint64_t a1, uint64_t a2)
{
  return sub_25B10C984(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_25B10C538(uint64_t a1, uint64_t a2)
{
  return sub_25B10C984(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_25B10C558(uint64_t a1, id *a2)
{
  uint64_t result = sub_25B2905A0();
  *a2 = 0;
  return result;
}

uint64_t sub_25B10C5D0(uint64_t a1, id *a2)
{
  char v3 = sub_25B2905B0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_25B10C650@<X0>(uint64_t *a1@<X8>)
{
  sub_25B2905C0();
  uint64_t v2 = sub_25B290590();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

_DWORD *sub_25B10C694@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

BOOL sub_25B10C6A4(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25B10C6C0(uint64_t a1)
{
  uint64_t v2 = sub_25B10C80C(&qword_26A4DA440, type metadata accessor for Name);
  uint64_t v3 = sub_25B10C80C(&qword_26A4DA448, type metadata accessor for Name);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_25B10C77C()
{
  return sub_25B10C80C(&qword_26A4DA368, type metadata accessor for Name);
}

uint64_t sub_25B10C7C4()
{
  return sub_25B10C80C(&qword_26A4DA370, type metadata accessor for Name);
}

uint64_t sub_25B10C80C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B10C854@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25B290590();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_25B10C89C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25B2905C0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25B10C8C8(uint64_t a1)
{
  uint64_t v2 = sub_25B10C80C(&qword_26A4DA480, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_25B10C80C(&qword_26A4DA488, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_25B10C984(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_25B2905C0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_25B10C9C8()
{
  sub_25B2905C0();
  sub_25B290630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B10CA1C()
{
  sub_25B2905C0();
  sub_25B291210();
  sub_25B290630();
  uint64_t v0 = sub_25B291260();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25B10CA90()
{
  uint64_t v0 = sub_25B2905C0();
  uint64_t v2 = v1;
  if (v0 == sub_25B2905C0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_25B290FB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_25B10CB1C()
{
  return sub_25B10C80C(&qword_26A4DA378, type metadata accessor for Name);
}

unint64_t sub_25B10CB64()
{
  unint64_t result = qword_26A4D9B70;
  if (!qword_26A4D9B70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A4D9B70);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_25B10CBE8()
{
  unint64_t result = qword_26A4D9B20;
  if (!qword_26A4D9B20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26A4D9B10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9B20);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void type metadata accessor for nw_listener_state_t(uint64_t a1)
{
}

void type metadata accessor for nw_connection_state_t(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void sub_25B10CCC8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_25B10CD10()
{
  return sub_25B10C80C(&qword_26A4DA468, type metadata accessor for FileAttributeKey);
}

uint64_t sub_25B10CD58()
{
  return sub_25B10C80C(&qword_26A4DA470, type metadata accessor for FileAttributeKey);
}

uint64_t sub_25B10CDA0()
{
  return sub_25B10C80C(&qword_26A4DA478, type metadata accessor for FileAttributeKey);
}

uint64_t TimedHandshakeTask.handshakeDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  char v5 = *(unsigned char *)(v1 + 48);
  *(void *)a1 = *(void *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 56);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void TimedHandshakeTask.schedule.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 80);
  *(void *)a1 = *(void *)(v1 + 72);
  *(unsigned char *)(a1 + 8) = v2;
}

void *TimedHandshakeTask.__allocating_init(handshakeDescriptor:schedule:handler:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  v8 = sub_25B10D36C(a1, a2, a3, a4);
  swift_release();
  return v8;
}

void *TimedHandshakeTask.init(handshakeDescriptor:schedule:handler:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = sub_25B10D36C(a1, a2, a3, a4);
  swift_release();
  return v4;
}

double sub_25B10CF08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  if (!*((unsigned char *)v2 + 8))
  {
    if (v3)
    {
      if (v3 != 1) {
        goto LABEL_5;
      }
      return 5.0;
    }
    return 0.15;
  }
  if (*((unsigned char *)v2 + 8) != 1) {
    return 900.0;
  }
  if (v3)
  {
    if (v3 != 1)
    {
LABEL_5:
      sub_25B10CF08(a1, a2);
      return result;
    }
    return 5.0;
  }
  return 1.0;
}

Swift::Void __swiftcall TimedHandshakeTask.cancel()()
{
  uint64_t v1 = *(NSObject **)(v0 + 88);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_25B10DC0C;
  *(void *)(v2 + 24) = v0;
  v4[4] = sub_25B10DC24;
  v4[5] = v2;
  v4[0] = MEMORY[0x263EF8330];
  v4[1] = 1107296256;
  v4[2] = sub_25B10D184;
  v4[3] = &block_descriptor;
  uint64_t v3 = _Block_copy(v4);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v1) {
    __break(1u);
  }
}

uint64_t sub_25B10D0CC(uint64_t a1)
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(a1 + 96) + 24);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_25B10DCD0(v2);
  os_unfair_lock_unlock(v1 + 4);
  swift_release();
  return swift_release();
}

uint64_t sub_25B10D15C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_25B10D184(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t TimedHandshakeTask.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t TimedHandshakeTask.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_25B10D24C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 24);
  uint64_t v5 = *(void *)(*v1 + 32);
  uint64_t v4 = *(void *)(*v1 + 40);
  char v6 = *(unsigned char *)(*v1 + 48);
  *(void *)a1 = *(void *)(*v1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v2 + 56);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_25B10D2A4(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(*(void *)v1 + 80);
  *(void *)a1 = *(void *)(*(void *)v1 + 72);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_25B10D2BC@<X0>(long long *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  char v9 = *((unsigned char *)a2 + 8);
  uint64_t v12 = *a2;
  char v13 = v9;
  swift_allocObject();
  v10 = sub_25B10D36C(a1, (uint64_t)&v12, a3, a4);
  uint64_t result = swift_release();
  *a5 = v10;
  return result;
}

void sub_25B10D348()
{
}

void *sub_25B10D36C(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v78 = a3;
  uint64_t v79 = a4;
  uint64_t v65 = *v4;
  uint64_t v8 = sub_25B290000();
  uint64_t v69 = *(void *)(v8 - 8);
  uint64_t v70 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  v80 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v73 = (char *)&v65 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v71 = (char *)&v65 - v14;
  MEMORY[0x270FA5388](v13);
  v81 = (char *)&v65 - v15;
  uint64_t v75 = sub_25B2908F0();
  uint64_t v16 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_25B2908C0();
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_25B290360();
  MEMORY[0x270FA5388](v20 - 8);
  long long v77 = *a1;
  uint64_t v76 = *((void *)a1 + 2);
  v72 = (void (*)(char *, uint64_t))*((void *)a1 + 3);
  int v68 = *((unsigned __int8 *)a1 + 32);
  uint64_t v67 = *((void *)a1 + 5);
  uint64_t v66 = *((void *)a1 + 6);
  uint64_t v21 = *(void *)a2;
  LODWORD(a1) = *(unsigned __int8 *)(a2 + 8);
  unint64_t v74 = sub_25B10CB64();
  sub_25B290350();
  v83 = (char *)MEMORY[0x263F8EE78];
  sub_25B10DD84((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
  sub_25B10CBE8();
  v22 = v81;
  sub_25B290A00();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F8F138], v75);
  uint64_t v24 = v69;
  uint64_t v23 = v70;
  v4[11] = sub_25B290920();
  uint64_t v75 = type metadata accessor for BasicTimer();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  unint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v26 = swift_allocObject();
  *(_DWORD *)(v26 + 16) = 0;
  *(void *)(v25 + 24) = v26;
  v5[12] = v25;
  *((_OWORD *)v5 + 1) = v77;
  v28 = v71;
  v27 = v72;
  v5[4] = v76;
  v5[5] = v27;
  *((unsigned char *)v5 + 48) = v68;
  uint64_t v29 = v66;
  v5[7] = v67;
  v5[8] = v29;
  v5[9] = v21;
  *((unsigned char *)v5 + 80) = (_BYTE)a1;
  uint64_t v30 = sub_25B28FFD0();
  *(void *)&long long v77 = v21;
  v83 = (char *)v21;
  LODWORD(v76) = a1;
  char v84 = (char)a1;
  sub_25B10CF08(v30, v31);
  v32 = v28;
  sub_25B28FF60();
  v33 = *(void (**)(char *, uint64_t))(v24 + 8);
  v33(v32, v23);
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_25B290190();
  __swift_project_value_buffer(v34, (uint64_t)qword_26A4EB150);
  v35 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  v36 = v73;
  v35(v73, v22, v23);
  v37 = v80;
  v35(v80, v22, v23);
  swift_retain_n();
  v38 = sub_25B290160();
  os_log_type_t v39 = sub_25B2908A0();
  int v40 = v39;
  BOOL v41 = os_log_type_enabled(v38, v39);
  v72 = v33;
  if (v41)
  {
    uint64_t v42 = swift_slowAlloc();
    v71 = (char *)swift_slowAlloc();
    v83 = v71;
    *(_DWORD *)uint64_t v42 = 136315650;
    LODWORD(v69) = v40;
    uint64_t v82 = (uint64_t)v5;
    swift_retain();
    uint64_t v43 = sub_25B290600();
    uint64_t v82 = sub_25B288E98(v43, v44, (uint64_t *)&v83);
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2082;
    sub_25B10DD84((unint64_t *)&qword_26A4DB020, MEMORY[0x263F07490]);
    uint64_t v45 = sub_25B290DB0();
    uint64_t v82 = sub_25B288E98(v45, v46, (uint64_t *)&v83);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    v33(v36, v23);
    *(_WORD *)(v42 + 22) = 2050;
    v47 = v80;
    sub_25B28FFA0();
    uint64_t v82 = v48;
    sub_25B2909C0();
    v33(v47, v23);
    _os_log_impl(&dword_25B107000, v38, (os_log_type_t)v69, "%s scheduling timed handshake task at: %{public}s in %{public}fs", (uint8_t *)v42, 0x20u);
    v49 = v71;
    swift_arrayDestroy();
    MEMORY[0x261160890](v49, -1, -1);
    MEMORY[0x261160890](v42, -1, -1);
  }
  else
  {
    swift_release_n();
    v33(v36, v23);
    v33(v37, v23);
  }

  uint64_t v50 = v23;
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = 0;
  uint64_t v52 = swift_allocObject();
  *(_DWORD *)(v52 + 16) = 0;
  *(void *)(v51 + 24) = v52;
  v5[12] = v51;
  swift_release();
  uint64_t v53 = v5[12];
  v83 = (char *)v77;
  char v84 = v76;
  uint64_t v54 = swift_retain();
  double v56 = sub_25B10CF08(v54, v55);
  uint64_t v57 = v5[11];
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = v78;
  uint64_t v59 = v79;
  *(void *)(v58 + 24) = v79;
  v60 = *(os_unfair_lock_s **)(v53 + 24);
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  *(&v65 - 6) = v53;
  *((double *)&v65 - 5) = v56;
  *(&v65 - 4) = v57;
  *(&v65 - 3) = (uint64_t)sub_25B10DC24;
  *(&v65 - 2) = v58;
  MEMORY[0x270FA5388](v61);
  *(&v65 - 2) = (uint64_t)sub_25B10DD5C;
  *(&v65 - 1) = v62;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v60 + 4);
  sub_25B10DDCC(v63);
  os_unfair_lock_unlock(v60 + 4);
  swift_release();
  swift_release();
  swift_release();
  v72(v81, v50);
  return v5;
}

uint64_t sub_25B10DC0C()
{
  return sub_25B10D0CC(v0);
}

uint64_t sub_25B10DC14()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B10DC24()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t type metadata accessor for TimedHandshakeTask()
{
  return self;
}

uint64_t method lookup function for TimedHandshakeTask(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TimedHandshakeTask);
}

uint64_t dispatch thunk of TimedHandshakeTask.__allocating_init(handshakeDescriptor:schedule:handler:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_25B10DCB4()
{
  return sub_25B1BD600();
}

uint64_t sub_25B10DCD0(uint64_t a1)
{
  return sub_25B1BE198(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_25B10DD24()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_25B10DD5C()
{
  sub_25B1BD518(*(double *)(v0 + 24), *(void *)(v0 + 16), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_25B10DD84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B10DDCC(uint64_t a1)
{
  return sub_25B10DCD0(a1);
}

uint64_t sub_25B10DDE4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_12:
        __break(1u);
      }
      uint64_t v6 = (int)v6;
LABEL_6:
      if (v6 == 16)
      {
        sub_25B10E048();
        sub_25B28FCB0();
        sub_25B290050();
        sub_25B10DFF0(a1, a2);
        uint64_t v10 = sub_25B290080();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a3, 0, 1, v10);
      }
      else
      {
LABEL_8:
        sub_25B10DFF0(a1, a2);
        uint64_t v12 = sub_25B290080();
        uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
        return v13(a3, 1, 1, v12);
      }
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_25B10DFF0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

unint64_t sub_25B10E048()
{
  unint64_t result = qword_26B33F1F8;
  if (!qword_26B33F1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B33F1F8);
  }
  return result;
}

uint64_t ProtocolVersion.current.getter()
{
  return *(void *)v0;
}

uint64_t ProtocolVersion.current.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ProtocolVersion.current.modify())()
{
  return nullsub_1;
}

uint64_t ProtocolVersion.minimum.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t ProtocolVersion.minimum.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*ProtocolVersion.minimum.modify())()
{
  return nullsub_1;
}

uint64_t ProtocolVersion.init(current:minimum:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

BOOL ProtocolVersion.isCompatible(with:)(void *a1)
{
  return *v1 >= a1[1] && *a1 >= v1[1];
}

unint64_t ProtocolVersion.highestCompatibleProtocolVersion(with:)(unint64_t *a1)
{
  unint64_t v2 = *a1;
  BOOL v4 = *v1 < a1[1] || v2 < v1[1];
  if (*v1 < v2) {
    unint64_t v2 = *v1;
  }
  if (v4) {
    return 0;
  }
  else {
    return v2;
  }
}

Swift::UInt64_optional __swiftcall ProtocolVersion.highestCompatibleProtocolVersion(with:)(Swift::UInt64 with)
{
  BOOL v3 = v1[1] > with || *v1 < with;
  if (v3) {
    with = 0;
  }
  result.value = with;
  result.is_nil = v3;
  return result;
}

uint64_t ProtocolVersion.description.getter()
{
  return 0x3A746E6572727563;
}

BOOL ProtocolVersion.supportsClientDefinedIDsInRecordMetadata.getter()
{
  return *v0 > 0xDuLL;
}

uint64_t ProtocolVersion.hash(into:)()
{
  return sub_25B291250();
}

BOOL static ProtocolVersion.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

BOOL sub_25B10E2D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s16ReplicatorEngine29NetworkMessagingCriticalErrorO9hashValueSivg_0()
{
  return sub_25B291260();
}

uint64_t sub_25B10E334()
{
  return sub_25B291220();
}

uint64_t sub_25B10E360()
{
  return sub_25B291260();
}

uint64_t sub_25B10E3A4()
{
  if (*v0) {
    return 0x6D756D696E696DLL;
  }
  else {
    return 0x746E6572727563;
  }
}

uint64_t sub_25B10E3D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B10ED3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B10E400()
{
  return 0;
}

void sub_25B10E40C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_25B10E418(uint64_t a1)
{
  unint64_t v2 = sub_25B10E640();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B10E454(uint64_t a1)
{
  unint64_t v2 = sub_25B10E640();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ProtocolVersion.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9CD0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B10E640();
  sub_25B291290();
  char v11 = 0;
  sub_25B290D80();
  if (!v2)
  {
    char v10 = 1;
    sub_25B290D80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_25B10E640()
{
  unint64_t result = qword_26A4D93B0;
  if (!qword_26A4D93B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D93B0);
  }
  return result;
}

uint64_t ProtocolVersion.hashValue.getter()
{
  return sub_25B291260();
}

uint64_t ProtocolVersion.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9C78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B10E640();
  sub_25B291280();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_25B290CE0();
    char v13 = 1;
    uint64_t v10 = sub_25B290CE0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_25B10E88C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ProtocolVersion.init(from:)(a1, a2);
}

uint64_t sub_25B10E8A4(void *a1)
{
  return ProtocolVersion.encode(to:)(a1);
}

uint64_t sub_25B10E8BC()
{
  return sub_25B291260();
}

uint64_t sub_25B10E918()
{
  return sub_25B291250();
}

uint64_t sub_25B10E954()
{
  return sub_25B291260();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_25B10EA00()
{
  unint64_t result = qword_26A4DA550;
  if (!qword_26A4DA550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA550);
  }
  return result;
}

BOOL sub_25B10EA54(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

ValueMetadata *type metadata accessor for ProtocolVersion()
{
  return &type metadata for ProtocolVersion;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ProtocolVersion.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ProtocolVersion.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B10EBE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_25B10EC10(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25B10EC18(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ProtocolVersion.CodingKeys()
{
  return &type metadata for ProtocolVersion.CodingKeys;
}

unint64_t sub_25B10EC38()
{
  unint64_t result = qword_26A4DA558;
  if (!qword_26A4DA558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA558);
  }
  return result;
}

unint64_t sub_25B10EC90()
{
  unint64_t result = qword_26A4D93C0;
  if (!qword_26A4D93C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D93C0);
  }
  return result;
}

unint64_t sub_25B10ECE8()
{
  unint64_t result = qword_26A4D93B8;
  if (!qword_26A4D93B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D93B8);
  }
  return result;
}

uint64_t sub_25B10ED3C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E6572727563 && a2 == 0xE700000000000000;
  if (v2 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D756D696E696DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25B10EE30()
{
  sub_25B290900();
  return v1;
}

void sub_25B10EE90(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 288);
}

uint64_t sub_25B10EE9C(char a1)
{
  uint64_t v3 = sub_25B290320();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25B290360();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(void *)(v1 + 72);
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_25B10F198;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_0;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_25B290340();
  v14[1] = MEMORY[0x263F8EE78];
  sub_25B116E3C((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_25B10F160()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_25B10F198()
{
  if (*(unsigned char *)(v0 + 16) == 1) {
    sub_25B10F1D0();
  }
  else {
    sub_25B10F3AC();
  }
}

void sub_25B10F1D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v6 = *(void **)(v1 + 72);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  if (*(unsigned char *)(v1 + 288)) {
    return;
  }
  if (qword_26A4D98D8 != -1) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v8 = sub_25B290190();
  __swift_project_value_buffer(v8, (uint64_t)qword_26A4EB1A8);
  uint64_t v9 = sub_25B290160();
  os_log_type_t v10 = sub_25B2908A0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_25B107000, v9, v10, "Enabling IDS zone advertiser", v11, 2u);
    MEMORY[0x261160890](v11, -1, -1);
  }

  *(unsigned char *)(v1 + 288) = 1;
  sub_25B110054();
  sub_25B112808();
}

uint64_t sub_25B10F3AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v6 = *(void **)(v1 + 72);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  if (*(unsigned char *)(v1 + 288) != 1) {
    return result;
  }
  if (qword_26A4D98D8 != -1) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v9 = sub_25B290190();
  __swift_project_value_buffer(v9, (uint64_t)qword_26A4EB1A8);
  os_log_type_t v10 = sub_25B290160();
  os_log_type_t v11 = sub_25B2908A0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_25B107000, v10, v11, "Disabling IDS zone advertiser", v12, 2u);
    MEMORY[0x261160890](v12, -1, -1);
  }

  *(unsigned char *)(v1 + 288) = 0;
  return sub_25B113158();
}

uint64_t sub_25B10F584(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t (*sub_25B10F5E0(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  sub_25B290900();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_25B10F668;
}

uint64_t sub_25B10F668(uint64_t a1)
{
  return sub_25B10EE9C(*(unsigned char *)(a1 + 8));
}

uint64_t sub_25B10F690()
{
  uint64_t v0 = sub_25B290310();
  __swift_allocate_value_buffer(v0, qword_26A4D9448);
  *(void *)__swift_project_value_buffer(v0, (uint64_t)qword_26A4D9448) = 500;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);
  return v1();
}

uint64_t sub_25B10F720()
{
  if (*(void *)(v0 + 56))
  {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  else
  {
    uint64_t v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99E0);
    sub_25B116394((unint64_t *)&qword_26A4D99D8, &qword_26A4D99E0);
    uint64_t v1 = sub_25B290240();
    *(void *)(v2 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_25B10F7D4(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return swift_release();
}

uint64_t (*sub_25B10F7E4(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = sub_25B10F720();
  return sub_25B10F82C;
}

uint64_t sub_25B10F82C(void *a1)
{
  *(void *)(a1[1] + 56) = *a1;
  return swift_release();
}

uint64_t IDSZoneAdvertiser.__allocating_init(idsServiceName:firstLockStateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  IDSZoneAdvertiser.init(idsServiceName:firstLockStateProvider:)(a1, a2, a3);
  return v6;
}

uint64_t IDSZoneAdvertiser.init(idsServiceName:firstLockStateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v26 = (void *)a3;
  uint64_t v28 = a2;
  uint64_t v27 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B50);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v29 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9938);
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v30 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_25B2908F0();
  uint64_t v8 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  os_log_type_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25B2908C0();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_25B290360();
  MEMORY[0x270FA5388](v12 - 8);
  *(void *)(v3 + 56) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99E0);
  swift_allocObject();
  *(void *)(v3 + 64) = sub_25B290220();
  sub_25B10CB64();
  sub_25B290350();
  v35[0] = MEMORY[0x263F8EE78];
  sub_25B116E3C((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
  sub_25B116394((unint64_t *)&qword_26A4D9B20, (uint64_t *)&unk_26A4D9B10);
  sub_25B290A00();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F138], v25);
  *(void *)(v3 + 72) = sub_25B290920();
  sub_25B10FEBC((uint64_t)v35);
  sub_25B10FEE0((uint64_t)v35, v3 + 80);
  *(_WORD *)(v3 + 264) = 0;
  *(void *)(v3 + 272) = 0;
  *(void *)(v3 + 280) = 0;
  *(unsigned char *)(v3 + 288) = 0;
  sub_25B10FEE0((uint64_t)v35, v3 + 296);
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(void *)(v3 + 480) = 0;
  uint64_t v13 = MEMORY[0x263F8EE88];
  *(void *)(v3 + 520) = MEMORY[0x263F8EE88];
  *(void *)(v3 + 528) = v13;
  char v14 = v26;
  sub_25B10FF48((uint64_t)v26, v3 + 16);
  uint64_t v15 = v28;
  *(void *)(v3 + 504) = v27;
  *(void *)(v3 + 512) = v15;
  uint64_t v16 = v14[3];
  uint64_t v17 = v14[4];
  __swift_project_boxed_opaque_existential_1(v14, v16);
  uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  v18 = *(void **)(v3 + 72);
  id v34 = v18;
  uint64_t v19 = sub_25B2908E0();
  uint64_t v20 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v29, 1, 1, v19);
  id v21 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99A0);
  sub_25B116394(&qword_26A4D9998, &qword_26A4D99A0);
  sub_25B116E3C((unint64_t *)&unk_26A4D9B60, (void (*)(uint64_t))sub_25B10CB64);
  v22 = v30;
  sub_25B290260();
  sub_25B116DE0(v20, (uint64_t *)&unk_26A4D9B50);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_25B116394(&qword_26A4D9930, (uint64_t *)&unk_26A4D9938);
  uint64_t v23 = v31;
  sub_25B290270();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v23);
  swift_beginAccess();
  sub_25B2901F0();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v4;
}

double sub_25B10FEBC(uint64_t a1)
{
  *(void *)(a1 + 176) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_25B10FEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D97C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B10FF48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_25B10FFAC()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B10FFE4(unsigned __int8 *a1)
{
  int v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (v1) {
      sub_25B110054();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_25B11004C(unsigned __int8 *a1)
{
  return sub_25B10FFE4(a1);
}

void sub_25B110054()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v0 + 72);
  *uint64_t v5 = v6;
  unint64_t v7 = *MEMORY[0x263F8F0E0];
  id v21 = *(void (**)(void *, unint64_t, uint64_t))(v3 + 104);
  v21(v5, v7, v2);
  id v20 = v6;
  LOBYTE(v6) = sub_25B290440();
  uint64_t v8 = *(void (**)(void *, uint64_t))(v3 + 8);
  v8(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_5;
  }
  unsigned int v19 = v7;
  unint64_t v7 = v1 + 264;
  if (*(unsigned char *)(v1 + 288) != 1) {
    return;
  }
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), v9);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10) & 1) == 0) {
    return;
  }
  if (qword_26A4D98D8 != -1) {
    goto LABEL_14;
  }
LABEL_5:
  uint64_t v11 = sub_25B290190();
  __swift_project_value_buffer(v11, (uint64_t)qword_26A4EB1A8);
  uint64_t v12 = sub_25B290160();
  os_log_type_t v13 = sub_25B2908A0();
  if (os_log_type_enabled(v12, v13))
  {
    char v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v14 = 0;
    _os_log_impl(&dword_25B107000, v12, v13, "Activating IDS zone advertiser", v14, 2u);
    MEMORY[0x261160890](v14, -1, -1);
  }

  sub_25B110304(*(char **)(v1 + 504), *(char **)(v1 + 512));
  if (*(unsigned char *)v7 == 1) {
    sub_25B1134B0();
  }
  if (*(unsigned char *)(v7 + 1) == 1)
  {
    uint64_t v16 = v20;
    uint64_t v15 = v21;
    *uint64_t v5 = v20;
    v15(v5, v19, v2);
    id v17 = v16;
    LOBYTE(v16) = sub_25B290440();
    v8(v5, v2);
    if (v16)
    {
      *(unsigned char *)(v1 + 265) = 1;
      sub_25B112808();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_25B110304(char *a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9DA0);
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9DA8);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  MEMORY[0x270FA5388](v8);
  double v56 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B50);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9E00);
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_25B290410();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unsigned int v19 = (char **)((char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v20 = *(void **)(v3 + 72);
  *unsigned int v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F8F0E0], v16);
  id v21 = v20;
  LOBYTE(v20) = sub_25B290440();
  uint64_t v22 = (*(uint64_t (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (qword_26A4D9DD8 != -1) {
LABEL_9:
  }
    uint64_t v22 = swift_once();
  uint64_t v23 = qword_26A4D9DD0;
  MEMORY[0x270FA5388](v22);
  *(&v50 - 2) = a1;
  *(&v50 - 1) = a2;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v23 + 24));
  sub_25B116314((uint64_t *)(v23 + 16), v61);
  os_unfair_lock_unlock((os_unfair_lock_t)(v23 + 24));
  uint64_t v24 = v61[0];
  swift_release();
  uint64_t v25 = *(void **)(v3 + 496);
  *(void *)(v3 + 496) = v24;

  uint64_t v26 = *(void **)(v3 + 496);
  if (v26)
  {
    id v27 = v26;
    uint64_t v28 = sub_25B1C16C0();

    v61[0] = v28;
    id v62 = v21;
    uint64_t v29 = sub_25B2908E0();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
    uint64_t v53 = v30 + 56;
    uint64_t v54 = v31;
    v31((uint64_t)v12, 1, 1, v29);
    id v32 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9E28);
    unint64_t v33 = sub_25B10CB64();
    sub_25B116394(&qword_26A4D9E20, &qword_26A4D9E28);
    sub_25B116E3C((unint64_t *)&unk_26A4D9B60, (void (*)(uint64_t))sub_25B10CB64);
    unint64_t v55 = v33;
    uint64_t v34 = (uint64_t)v12;
    sub_25B290260();
    sub_25B116DE0((uint64_t)v12, (uint64_t *)&unk_26A4D9B50);

    swift_release();
    uint64_t v35 = swift_allocObject();
    swift_weakInit();
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_25B116330;
    *(void *)(v36 + 24) = v35;
    sub_25B116394(&qword_26A4D9DF8, &qword_26A4D9E00);
    uint64_t v37 = v60;
    sub_25B290270();
    swift_release();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v15, v37);
    swift_beginAccess();
    sub_25B2901F0();
    swift_endAccess();
    swift_release();
    v38 = *(void **)(v3 + 496);
    if (v38)
    {
      id v39 = v38;
      uint64_t v40 = sub_25B1C16E4();

      v61[0] = v40;
      id v62 = v32;
      v54(v34, 1, 1, v29);
      id v41 = v32;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E38);
      sub_25B116394(&qword_26A4D9E30, (uint64_t *)&unk_26A4D9E38);
      uint64_t v42 = v56;
      sub_25B290260();
      sub_25B116DE0(v34, (uint64_t *)&unk_26A4D9B50);

      swift_release();
      swift_allocObject();
      swift_weakInit();
      sub_25B116394(&qword_26A4D9E08, &qword_26A4D9DA8);
      uint64_t v43 = v58;
      sub_25B290270();
      swift_release();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v42, v43);
      swift_beginAccess();
      sub_25B2901F0();
      swift_endAccess();
      swift_release();
      unint64_t v44 = *(void **)(v3 + 496);
      if (v44)
      {
        id v45 = v44;
        uint64_t v46 = sub_25B1C17C8();

        v61[0] = v46;
        id v62 = v41;
        v54(v34, 1, 1, v29);
        id v47 = v41;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9E18);
        sub_25B116394(&qword_26A4D9E10, &qword_26A4D9E18);
        uint64_t v48 = v50;
        sub_25B290260();
        sub_25B116DE0(v34, (uint64_t *)&unk_26A4D9B50);

        swift_release();
        swift_allocObject();
        swift_weakInit();
        sub_25B116394(&qword_26A4D9DF0, &qword_26A4D9DA0);
        uint64_t v49 = v52;
        sub_25B290270();
        swift_release();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v49);
        swift_beginAccess();
        sub_25B2901F0();
        swift_endAccess();
        swift_release();
      }
    }
  }
}

uint64_t sub_25B110C00(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_25B110C74(a1, a2);
    return swift_release();
  }
  return result;
}

void sub_25B110C74(uint64_t a1, uint64_t a2)
{
  uint64_t v66 = a2;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  uint64_t v4 = MEMORY[0x270FA5388](v64);
  uint64_t v63 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v67 = (uint64_t)&v53 - v6;
  uint64_t v7 = type metadata accessor for Message();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  int v68 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v65 = (uint64_t)&v53 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v53 - v12;
  uint64_t v14 = sub_25B290410();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (uint64_t *)((char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = v2;
  uint64_t v18 = *(void **)(v2 + 72);
  *uint64_t v17 = v18;
  unsigned int v19 = *(void (**)(void))(v15 + 104);
  unsigned int v60 = *MEMORY[0x263F8F0E0];
  uint64_t v59 = v19;
  v19(v17);
  id v58 = v18;
  char v20 = sub_25B290440();
  uint64_t v21 = *(void *)(v15 + 8);
  uint64_t v61 = v15 + 8;
  uint64_t v62 = v14;
  ((void (*)(void *, uint64_t))v21)(v17, v14);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  double v56 = (void (*)(void *, uint64_t))v21;
  uint64_t v22 = (void *)(a1 + *(int *)(v7 + 24));
  uint64_t v21 = v7;
  if (*v22 == 0xD000000000000014 && v22[1] == 0x800000025B29C160 || (sub_25B290FB0() & 1) != 0)
  {
    uint64_t v55 = v15 + 104;
    if (qword_26A4D98D8 == -1)
    {
LABEL_6:
      uint64_t v23 = sub_25B290190();
      uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_26A4EB1A8);
      uint64_t v65 = a1;
      sub_25B116D14(a1, (uint64_t)v13);
      uint64_t v25 = v67;
      sub_25B116D78(v66, v67);
      uint64_t v26 = sub_25B290160();
      os_log_type_t v27 = sub_25B2908A0();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = swift_slowAlloc();
        uint64_t v66 = v24;
        uint64_t v29 = v28;
        uint64_t v53 = swift_slowAlloc();
        *(void *)&v89[0] = v53;
        *(_DWORD *)uint64_t v29 = 136446466;
        uint64_t v54 = v21;
        uint64_t v30 = Message.description.getter();
        v83[0] = sub_25B288E98(v30, v31, (uint64_t *)v89);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B116C7C((uint64_t)v13);
        *(_WORD *)(v29 + 12) = 2082;
        sub_25B116D78(v25, v63);
        uint64_t v32 = sub_25B290600();
        v83[0] = sub_25B288E98(v32, v33, (uint64_t *)v89);
        sub_25B2909C0();
        uint64_t v21 = v54;
        swift_bridgeObjectRelease();
        sub_25B116DE0(v25, &qword_26A4D9160);
        _os_log_impl(&dword_25B107000, v26, v27, "IDS zone advertiser got message %{public}s and url %{public}s", (uint8_t *)v29, 0x16u);
        uint64_t v34 = v53;
        swift_arrayDestroy();
        MEMORY[0x261160890](v34, -1, -1);
        MEMORY[0x261160890](v29, -1, -1);
      }
      else
      {
        sub_25B116C7C((uint64_t)v13);
        sub_25B116DE0(v25, &qword_26A4D9160);
      }

      uint64_t v35 = *(void *)(v65 + *(int *)(v21 + 32));
      type metadata accessor for OPACKCoder();
      sub_25B284F38(v88);
      sub_25B116E84((uint64_t)v88, (uint64_t)v86);
      uint64_t v36 = MEMORY[0x263F8EE78];
      unint64_t v37 = sub_25B20D420(MEMORY[0x263F8EE78]);
      v85[0] = v36;
      v85[1] = v37;
      v86[4] = v35;
      char v87 = 0;
      v84[3] = &type metadata for PropertyListTypeDecoder.RootDecoder;
      v84[4] = sub_25B116EE0();
      v84[0] = swift_allocObject();
      sub_25B116F7C((uint64_t)v85, v84[0] + 16);
      ZoneVersionAdvertisement.init(from:)(v84, (uint64_t)v89);
      sub_25B116FD8((uint64_t)v85);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
      long long v77 = v89[8];
      long long v78 = v89[9];
      long long v79 = v89[10];
      uint64_t v80 = v90;
      long long v73 = v89[4];
      long long v74 = v89[5];
      long long v75 = v89[6];
      long long v76 = v89[7];
      long long v69 = v89[0];
      long long v70 = v89[1];
      long long v71 = v89[2];
      long long v72 = v89[3];
      uint64_t v48 = v58;
      id v47 = (void (*)(void *, void, uint64_t))v59;
      *uint64_t v17 = v58;
      uint64_t v49 = v62;
      v47(v17, v60, v62);
      id v50 = v48;
      char v51 = sub_25B290440();
      v56(v17, v49);
      if (v51)
      {
        v81[8] = v77;
        v81[9] = v78;
        v81[10] = v79;
        uint64_t v82 = v80;
        v81[4] = v73;
        v81[5] = v74;
        v81[6] = v75;
        v81[7] = v76;
        v81[0] = v69;
        v81[1] = v70;
        v81[2] = v71;
        v81[3] = v72;
        nullsub_1(v81);
        uint64_t v52 = v57;
        sub_25B10FEE0(v57 + 296, (uint64_t)v83);
        sub_25B10FEE0((uint64_t)v81, v52 + 296);
        sub_25B114244((uint64_t)&v69);
        sub_25B11702C(v83, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
        sub_25B112808();
        sub_25B11677C((uint64_t)&v69);
      }
      else
      {
        __break(1u);
      }
      return;
    }
LABEL_19:
    swift_once();
    goto LABEL_6;
  }
  if (qword_26A4D98D8 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_25B290190();
  __swift_project_value_buffer(v38, (uint64_t)qword_26A4EB1A8);
  uint64_t v39 = v65;
  sub_25B116D14(a1, v65);
  uint64_t v40 = sub_25B290160();
  os_log_type_t v41 = sub_25B290880();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 136446210;
    *(void *)&v89[0] = v43;
    unint64_t v44 = (uint64_t *)(v39 + *(int *)(v21 + 24));
    uint64_t v45 = *v44;
    unint64_t v46 = v44[1];
    swift_bridgeObjectRetain();
    v83[0] = sub_25B288E98(v45, v46, (uint64_t *)v89);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B116C7C(v39);
    _os_log_impl(&dword_25B107000, v40, v41, "IDS zone advertiser ignoring unexpected message of type \"%{public}s\"", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v43, -1, -1);
    MEMORY[0x261160890](v42, -1, -1);
  }
  else
  {
    sub_25B116C7C(v39);
  }
}

uint64_t sub_25B111680()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_25B1169E0();
    return swift_release();
  }
  return result;
}

uint64_t sub_25B1116D8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  char v5 = *((unsigned char *)a1 + 32);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v7[0] = v1;
    v7[1] = v2;
    void v7[2] = v3;
    v7[3] = v4;
    char v8 = v5;
    sub_25B111764((uint64_t)v7);
    return swift_release();
  }
  return result;
}

void sub_25B111764(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25B290410();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (void *)((char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  uint64_t v13 = *(void **)(v2 + 72);
  *uint64_t v7 = v13;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v14 = v13;
  LOBYTE(v13) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v13)
  {
    if (qword_26A4D98D8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v15 = sub_25B290190();
  __swift_project_value_buffer(v15, (uint64_t)qword_26A4EB1A8);
  sub_25B1163D8(v9, v8);
  sub_25B1163D8(v9, v8);
  uint64_t v16 = sub_25B290160();
  os_log_type_t v17 = sub_25B2908A0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v24 = v2;
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v30 = v23;
    *(_DWORD *)uint64_t v18 = 136446210;
    v22[1] = v18 + 4;
    uint64_t v25 = v9;
    uint64_t v26 = v8;
    uint64_t v27 = v11;
    uint64_t v28 = v10;
    char v29 = v12;
    sub_25B1163D8(v9, v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA560);
    uint64_t v19 = sub_25B290600();
    uint64_t v25 = sub_25B288E98(v19, v20, &v30);
    sub_25B2909C0();
    uint64_t v2 = v24;
    swift_bridgeObjectRelease();
    sub_25B11641C(v9, v8);
    sub_25B11641C(v9, v8);
    _os_log_impl(&dword_25B107000, v16, v17, "IDS zone advertiser didUpdatePairedDevice to %{public}s; sending latest advertisment",
      v18,
      0xCu);
    uint64_t v21 = v23;
    swift_arrayDestroy();
    MEMORY[0x261160890](v21, -1, -1);
    MEMORY[0x261160890](v18, -1, -1);
  }
  else
  {
    sub_25B11641C(v9, v8);
    sub_25B11641C(v9, v8);
  }

  *(unsigned char *)(v2 + 264) = 1;
  sub_25B1134B0();
}

void sub_25B111AB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (void *)v1[9];
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  uint64_t v8 = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    uint64_t v9 = swift_once();
    goto LABEL_4;
  }
  uint64_t v8 = v1[60];
  uint64_t v9 = v1[61];
  if (v9)
  {
LABEL_11:
    swift_bridgeObjectRetain();
    return;
  }
  if (qword_26A4D9F00 != -1) {
    goto LABEL_13;
  }
LABEL_4:
  MEMORY[0x270FA5388](v9);
  v17[-4] = v8;
  v17[-3] = 0;
  v17[-2] = sub_25B114588;
  v17[-1] = v1;
  sub_25B290900();
  if (qword_26A4D98D8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_25B290190();
  __swift_project_value_buffer(v10, (uint64_t)qword_26A4EB1A8);
  swift_retain_n();
  uint64_t v11 = sub_25B290160();
  os_log_type_t v12 = sub_25B2908A0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v18 = v14;
    *(_DWORD *)uint64_t v13 = 136446210;
    uint64_t v15 = sub_25B111AB8();
    v17[1] = sub_25B288E98(v15, v16, &v18);
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v11, v12, "Found local device ID: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v14, -1, -1);
    MEMORY[0x261160890](v13, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  if (v1[61])
  {
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_25B111E10(uint64_t a1)
{
  uint64_t v2 = IDSCopyLocalDeviceUniqueID();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = sub_25B2905C0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  *(void *)(a1 + 480) = v4;
  *(void *)(a1 + 488) = v6;
  return swift_bridgeObjectRelease();
}

uint64_t IDSZoneAdvertiser.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();

  sub_25B10FEE0(v0 + 80, (uint64_t)v2);
  sub_25B11702C(v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
  swift_release();
  swift_release();
  sub_25B10FEE0(v0 + 296, (uint64_t)v3);
  sub_25B11702C(v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25B111F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B111FF0(a15, a16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25B111FF0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25B10DFF0(a1, a2);
  }
  return a1;
}

uint64_t IDSZoneAdvertiser.__deallocating_deinit()
{
  IDSZoneAdvertiser.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_25B112038()
{
  return sub_25B10F720();
}

uint64_t sub_25B11205C()
{
  sub_25B290900();
  return v1;
}

uint64_t sub_25B1120BC(char a1)
{
  return sub_25B10EE9C(a1);
}

uint64_t (*sub_25B1120E0(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = *v1;
  sub_25B290900();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_25B10F668;
}

uint64_t sub_25B112168(uint64_t a1)
{
  return IDSZoneAdvertiser.advertise(_:)(a1);
}

uint64_t IDSZoneAdvertiser.advertise(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_25B290320();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25B290360();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *(_OWORD *)(a1 + 128);
  long long v13 = *(_OWORD *)(a1 + 160);
  v30[9] = *(_OWORD *)(a1 + 144);
  v30[10] = v13;
  long long v14 = *(_OWORD *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 96);
  long long v16 = *(_OWORD *)(a1 + 112);
  v30[5] = *(_OWORD *)(a1 + 80);
  v30[6] = v15;
  uint64_t v31 = *(void *)(a1 + 176);
  v30[7] = v16;
  v30[8] = v12;
  long long v17 = *(_OWORD *)(a1 + 16);
  v30[0] = *(_OWORD *)a1;
  v30[1] = v17;
  long long v18 = *(_OWORD *)(a1 + 48);
  v30[2] = *(_OWORD *)(a1 + 32);
  v30[3] = v18;
  v30[4] = v14;
  v28[0] = v1[9];
  uint64_t v19 = swift_allocObject();
  long long v20 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v19 + 152) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v19 + 168) = v20;
  *(_OWORD *)(v19 + 184) = *(_OWORD *)(a1 + 160);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v19 + 88) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v19 + 104) = v21;
  long long v22 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v19 + 120) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v19 + 136) = v22;
  long long v23 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 40) = v23;
  long long v24 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v19 + 56) = *(_OWORD *)(a1 + 32);
  *(void *)(v19 + 16) = v1;
  uint64_t v25 = *(void *)(a1 + 176);
  *(_OWORD *)(v19 + 72) = v24;
  *(void *)(v19 + 200) = v25;
  *(void *)(v19 + 208) = v3;
  aBlock[4] = sub_25B114234;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_10;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  sub_25B114244((uint64_t)v30);
  sub_25B290340();
  v28[1] = MEMORY[0x263F8EE78];
  sub_25B116E3C((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v11, v7, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

void sub_25B112540()
{
}

Swift::Void __swiftcall IDSZoneAdvertiser.subscribe()()
{
  uint64_t v1 = sub_25B290320();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25B290360();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = *(void *)(v0 + 72);
  aBlock[4] = sub_25B114358;
  uint64_t v12 = v0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_13;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_25B290340();
  v10[1] = MEMORY[0x263F8EE78];
  sub_25B116E3C((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
}

void sub_25B112808()
{
  uint64_t v3 = v0;
  uint64_t v4 = sub_25B290410();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint8_t **)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v3 + 72);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v9 = v8;
  LOBYTE(v8) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_25B10FEE0(v3 + 296, (uint64_t)v37);
  sub_25B10FEE0((uint64_t)v37, (uint64_t)&v38);
  if (sub_25B116460((uint64_t)&v38) == 1) {
    return;
  }
  uint64_t v2 = v31;
  uint64_t v1 = (unsigned __int8 *)(v3 + 265);
  if (*(unsigned char *)(v3 + 265) != 1 || *(unsigned char *)(v3 + 288) != 1)
  {
    sub_25B10FEE0((uint64_t)v37, (uint64_t)v36);
    sub_25B114244((uint64_t)v36);
    if (qword_26A4D98D8 == -1)
    {
LABEL_10:
      uint64_t v16 = sub_25B290190();
      __swift_project_value_buffer(v16, (uint64_t)qword_26A4EB1A8);
      swift_retain();
      sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B1170A0);
      swift_retain();
      sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B1170A0);
      long long v17 = sub_25B290160();
      os_log_type_t v18 = sub_25B2908A0();
      if (!os_log_type_enabled(v17, v18))
      {
        sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
        swift_release_n();
        sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
        sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);

        return;
      }
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(void *)&v31[0] = v20;
      *(_DWORD *)uint64_t v19 = 67240706;
      v35[0] = *v1;
      sub_25B2909C0();
      *(_WORD *)(v19 + 8) = 1026;
      int v21 = v1[23];
      swift_release();
      v35[0] = v21;
      sub_25B2909C0();
      swift_release();
      *(_WORD *)(v19 + 14) = 2082;
      *(void *)&v34[0] = 0;
      *((void *)&v34[0] + 1) = 0xE000000000000000;
      sub_25B10FEE0((uint64_t)v37, (uint64_t)v35);
      sub_25B114244((uint64_t)v35);
      sub_25B290AA0();
      v33[0] = v34[0];
      sub_25B290650();
      long long v22 = v47;
      v2[32] = v46;
      v2[33] = v22;
      v2[34] = v48;
      long long v23 = v43;
      v2[28] = v42;
      v2[29] = v23;
      long long v24 = v45;
      v2[30] = v44;
      v2[31] = v24;
      long long v25 = v39;
      v2[24] = v38;
      v2[25] = v25;
      long long v26 = v41;
      v2[26] = v40;
      v2[27] = v26;
      sub_25B290B90();
      sub_25B290650();
      type metadata accessor for ZoneVersion();
      swift_bridgeObjectRetain();
      sub_25B2904E0();
      sub_25B290650();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
      *(void *)&v34[0] = sub_25B288E98(*(uint64_t *)&v33[0], *((unint64_t *)&v33[0] + 1), (uint64_t *)v31);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
      sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
      _os_log_impl(&dword_25B107000, v17, v18, "received advertisement, but _queue_subscribed:%{BOOL,public}d _queue_enabled:%{BOOL,public}d so ignoring:%{public}s", (uint8_t *)v19, 0x18u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v20, -1, -1);
      MEMORY[0x261160890](v19, -1, -1);

      goto LABEL_15;
    }
LABEL_18:
    swift_once();
    goto LABEL_10;
  }
  sub_25B10FEE0((uint64_t)v37, (uint64_t)v35);
  sub_25B114244((uint64_t)v35);
  if (qword_26A4D98D8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_25B290190();
  __swift_project_value_buffer(v10, (uint64_t)qword_26A4EB1A8);
  sub_25B10FEE0((uint64_t)v37, (uint64_t)v36);
  sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B1170A0);
  sub_25B114244((uint64_t)v36);
  uint64_t v11 = sub_25B290160();
  os_log_type_t v12 = sub_25B2908A0();
  if (os_log_type_enabled(v11, v12))
  {
    long long v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = v29;
    uint64_t v28 = v13;
    *(_DWORD *)long long v13 = 136446210;
    uint64_t v27 = v13 + 4;
    *(void *)&v33[0] = 0;
    *((void *)&v33[0] + 1) = 0xE000000000000000;
    sub_25B10FEE0((uint64_t)v37, (uint64_t)v34);
    sub_25B114244((uint64_t)v34);
    sub_25B290AA0();
    v31[0] = v33[0];
    sub_25B290650();
    v33[8] = v46;
    v33[9] = v47;
    v33[10] = v48;
    v33[4] = v42;
    v33[5] = v43;
    v33[6] = v44;
    v33[7] = v45;
    v33[0] = v38;
    v33[1] = v39;
    v33[2] = v40;
    v33[3] = v41;
    sub_25B290B90();
    sub_25B290650();
    type metadata accessor for ZoneVersion();
    swift_bridgeObjectRetain();
    sub_25B2904E0();
    sub_25B290650();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
    *(void *)&v33[0] = sub_25B288E98(*(uint64_t *)&v31[0], *((unint64_t *)&v31[0] + 1), &v30);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
    sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
    long long v14 = v28;
    _os_log_impl(&dword_25B107000, v11, v12, "subscribed, enabled, and got advertisement:%{public}s", v28, 0xCu);
    uint64_t v15 = v29;
    swift_arrayDestroy();
    MEMORY[0x261160890](v15, -1, -1);
    MEMORY[0x261160890](v14, -1, -1);
  }
  else
  {
    sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
    sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
  }

  sub_25B10FEBC((uint64_t)v33);
  sub_25B10FEE0(v3 + 296, (uint64_t)v34);
  sub_25B10FEE0((uint64_t)v33, v3 + 296);
  sub_25B11702C(v34, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
  v31[8] = v46;
  v31[9] = v47;
  v31[10] = v48;
  uint64_t v32 = v49;
  v31[4] = v42;
  v31[5] = v43;
  v31[6] = v44;
  v31[7] = v45;
  v31[0] = v38;
  v31[1] = v39;
  v31[2] = v40;
  v31[3] = v41;
  sub_25B290210();
LABEL_15:
  sub_25B11702C(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
}

uint64_t sub_25B113158()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + 72);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_4;
  }
  if (*(unsigned char *)(v1 + 288)) {
    return result;
  }
  if (qword_26A4D98D8 != -1) {
    goto LABEL_13;
  }
LABEL_4:
  uint64_t v9 = sub_25B290190();
  __swift_project_value_buffer(v9, (uint64_t)qword_26A4EB1A8);
  uint64_t v10 = sub_25B290160();
  os_log_type_t v11 = sub_25B2908A0();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v12 = 0;
    _os_log_impl(&dword_25B107000, v10, v11, "Deactivating IDS zone advertiser", v12, 2u);
    MEMORY[0x261160890](v12, -1, -1);
  }

  long long v13 = *(void **)(v1 + 496);
  *(void *)(v1 + 496) = 0;

  swift_beginAccess();
  *(void *)(v1 + 528) = MEMORY[0x263F8EE88];
  swift_bridgeObjectRelease();
  sub_25B10FEE0(v1 + 80, (uint64_t)v19);
  sub_25B10FEE0((uint64_t)v19, (uint64_t)&v20);
  if (sub_25B116460((uint64_t)&v20) != 1)
  {
    sub_25B11702C(v19, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B1170A0);
    sub_25B1172F8((uint64_t)&v20);
    unint64_t v14 = sub_25B20D224(MEMORY[0x263F8EE78]);
    v17[8] = v28;
    v17[9] = v29;
    v17[10] = v30;
    v17[4] = v24;
    v17[5] = v25;
    v17[6] = v26;
    v17[7] = v27;
    v17[0] = v20;
    v17[1] = v21;
    void v17[2] = v22;
    v17[3] = v23;
    unint64_t v18 = v14;
    v15[8] = v28;
    v15[9] = v29;
    v15[10] = v30;
    unint64_t v16 = v14;
    v15[4] = v24;
    v15[5] = v25;
    v15[6] = v26;
    v15[7] = v27;
    v15[0] = v20;
    v15[1] = v21;
    v15[2] = v22;
    v15[3] = v23;
    sub_25B113740(v15, 1);
    sub_25B11702C(v19, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
    sub_25B11677C((uint64_t)v17);
    *(unsigned char *)(v1 + 264) = 1;
  }
  if (*(void *)(v1 + 272))
  {
    swift_retain();
    sub_25B2907B0();
    swift_release();
  }
  *(void *)(v1 + 272) = 0;
  return swift_release();
}

void sub_25B1134B0()
{
  uint64_t v1 = sub_25B290410();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (void *)((char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + 72);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F0E0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_7;
  }
  if (*(unsigned char *)(v0 + 288) == 1)
  {
    if (*(unsigned char *)(v0 + 264) == 1)
    {
      sub_25B10FEE0(v0 + 80, (uint64_t)v14);
      sub_25B10FEE0((uint64_t)v14, (uint64_t)v15);
      if (sub_25B116460((uint64_t)v15) != 1)
      {
        *(unsigned char *)(v0 + 264) = 0;
        v11[8] = v15[8];
        v11[9] = v15[9];
        v11[10] = v15[10];
        uint64_t v12 = v16;
        v11[4] = v15[4];
        v11[5] = v15[5];
        v11[6] = v15[6];
        v11[7] = v15[7];
        v11[0] = v15[0];
        v11[1] = v15[1];
        v11[2] = v15[2];
        v11[3] = v15[3];
        sub_25B10FEE0((uint64_t)v14, (uint64_t)v13);
        sub_25B114244((uint64_t)v13);
        sub_25B113740(v11, 0);
        sub_25B11702C(v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
      }
    }
    return;
  }
  if (qword_26A4D98D8 != -1) {
    goto LABEL_12;
  }
LABEL_7:
  uint64_t v7 = sub_25B290190();
  __swift_project_value_buffer(v7, (uint64_t)qword_26A4EB1A8);
  uint64_t v8 = sub_25B290160();
  os_log_type_t v9 = sub_25B2908A0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_25B107000, v8, v9, "advertiser will advertise when enabled", v10, 2u);
    MEMORY[0x261160890](v10, -1, -1);
  }
}

uint64_t sub_25B113740(long long *a1, char a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9B28);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25B290410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v11 = (void *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v12 = a1[9];
  long long v36 = a1[8];
  long long v37 = v12;
  long long v38 = a1[10];
  uint64_t v39 = *((void *)a1 + 22);
  long long v13 = a1[5];
  long long v32 = a1[4];
  long long v33 = v13;
  long long v14 = a1[7];
  long long v34 = a1[6];
  long long v35 = v14;
  long long v15 = a1[1];
  long long v28 = *a1;
  long long v29 = v15;
  long long v16 = a1[3];
  long long v30 = a1[2];
  long long v31 = v16;
  long long v17 = *(void **)(v2 + 72);
  *os_log_type_t v11 = v17;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  id v18 = v17;
  LOBYTE(v17) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v17)
  {
    if (*(void *)(v2 + 280))
    {
      swift_retain();
      sub_25B2907B0();
      swift_release();
    }
    uint64_t v20 = sub_25B2907A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    uint64_t v22 = swift_allocObject();
    long long v23 = v37;
    *(_OWORD *)(v22 + 168) = v36;
    *(_OWORD *)(v22 + 184) = v23;
    *(_OWORD *)(v22 + 200) = v38;
    long long v24 = v33;
    *(_OWORD *)(v22 + 104) = v32;
    *(_OWORD *)(v22 + 120) = v24;
    long long v25 = v35;
    *(_OWORD *)(v22 + 136) = v34;
    *(_OWORD *)(v22 + 152) = v25;
    long long v26 = v29;
    *(_OWORD *)(v22 + 40) = v28;
    *(_OWORD *)(v22 + 56) = v26;
    long long v27 = v31;
    *(_OWORD *)(v22 + 72) = v30;
    *(void *)(v22 + 16) = 0;
    *(void *)(v22 + 24) = 0;
    *(void *)(v22 + 32) = v21;
    *(void *)(v22 + 216) = v39;
    *(_OWORD *)(v22 + 88) = v27;
    *(unsigned char *)(v22 + 224) = a2 & 1;
    sub_25B114244((uint64_t)&v28);
    *(void *)(v2 + 280) = sub_25B115F94((uint64_t)v7, (uint64_t)&unk_26A4DA570, v22);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_25B113A24(uint64_t a1)
{
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(unsigned char *)(a1 + 265) & 1) == 0)
  {
    uint64_t v6 = *(void **)(a1 + 72);
    *uint64_t v5 = v6;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
    id v7 = v6;
    LOBYTE(v6) = sub_25B290440();
    (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    if (v6)
    {
      *(unsigned char *)(a1 + 265) = 1;
      sub_25B112808();
    }
    else
    {
      __break(1u);
    }
  }
}

void *sub_25B113B44(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 144);
  long long v89 = *(_OWORD *)(a2 + 128);
  long long v90 = v4;
  long long v91 = *(_OWORD *)(a2 + 160);
  uint64_t v92 = *(void *)(a2 + 176);
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v85 = *(_OWORD *)(a2 + 64);
  long long v86 = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  long long v87 = *(_OWORD *)(a2 + 96);
  long long v88 = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  long long v81 = *(_OWORD *)a2;
  long long v82 = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  long long v83 = *(_OWORD *)(a2 + 32);
  long long v84 = v8;
  uint64_t v9 = sub_25B290320();
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  MEMORY[0x270FA5388](v9);
  os_log_type_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25B290360();
  uint64_t v39 = *(void *)(v12 - 8);
  uint64_t v40 = v12;
  MEMORY[0x270FA5388](v12);
  long long v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25B2903E0();
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  id v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v36 - v19;
  sub_25B10FEE0(a1 + 80, (uint64_t)v93);
  v94[8] = v89;
  v94[9] = v90;
  v94[10] = v91;
  uint64_t v95 = v92;
  v94[4] = v85;
  v94[5] = v86;
  v94[6] = v87;
  v94[7] = v88;
  v94[0] = v81;
  v94[1] = v82;
  v94[2] = v83;
  v94[3] = v84;
  nullsub_1(v94);
  sub_25B10FEE0((uint64_t)v93, (uint64_t)v96);
  int v21 = sub_25B116460((uint64_t)v96);
  uint64_t v43 = v15;
  if (v21 == 1)
  {
    sub_25B10FEE0((uint64_t)v93, (uint64_t)&v68);
    sub_25B10FEE0((uint64_t)v94, (uint64_t)&v80);
    sub_25B114244(a2);
    sub_25B117154((uint64_t)&v68);
  }
  else
  {
    sub_25B10FEE0((uint64_t)v93, (uint64_t)&v68);
    long long v65 = v76;
    long long v66 = v77;
    long long v67 = v78;
    long long v61 = v72;
    long long v62 = v73;
    long long v63 = v74;
    long long v64 = v75;
    long long v57 = v68;
    long long v58 = v69;
    long long v59 = v70;
    long long v60 = v71;
    long long v22 = *(_OWORD *)(a2 + 144);
    v56[8] = *(_OWORD *)(a2 + 128);
    v56[9] = v22;
    v56[10] = *(_OWORD *)(a2 + 160);
    long long v23 = *(_OWORD *)(a2 + 80);
    v56[4] = *(_OWORD *)(a2 + 64);
    v56[5] = v23;
    long long v24 = *(_OWORD *)(a2 + 112);
    v56[6] = *(_OWORD *)(a2 + 96);
    v56[7] = v24;
    long long v25 = *(_OWORD *)(a2 + 16);
    v56[0] = *(_OWORD *)a2;
    v56[1] = v25;
    long long v26 = *(_OWORD *)(a2 + 48);
    v56[2] = *(_OWORD *)(a2 + 32);
    v56[3] = v26;
    long long v52 = v76;
    long long v53 = v77;
    long long v54 = v78;
    long long v48 = v72;
    long long v49 = v73;
    long long v50 = v74;
    long long v51 = v75;
    long long v44 = v68;
    long long v45 = v69;
    uint64_t v27 = v79;
    long long v46 = v70;
    long long v47 = v71;
    sub_25B11702C(v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B1170A0);
    sub_25B11702C(v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B1170A0);
    sub_25B114244(a2);
    if (_s16ReplicatorEngine24ZoneVersionAdvertisementV16DeviceDescriptorV2eeoiySbAE_AEtFZ_0((uint64_t)&v44, (uint64_t)v56))
    {
      char v28 = sub_25B1B7CA8(v27, *(void *)(a2 + 176));
      sub_25B11677C(a2);
      long long v52 = v65;
      long long v53 = v66;
      long long v54 = v67;
      long long v48 = v61;
      long long v49 = v62;
      long long v50 = v63;
      long long v51 = v64;
      long long v44 = v57;
      long long v45 = v58;
      long long v46 = v59;
      long long v47 = v60;
      uint64_t v55 = v27;
      sub_25B11677C((uint64_t)&v44);
      uint64_t result = sub_25B11702C(v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
      if (v28) {
        return result;
      }
    }
    else
    {
      sub_25B11677C(a2);
      long long v52 = v65;
      long long v53 = v66;
      long long v54 = v67;
      long long v48 = v61;
      long long v49 = v62;
      long long v50 = v63;
      long long v51 = v64;
      long long v44 = v57;
      long long v45 = v58;
      long long v46 = v59;
      long long v47 = v60;
      uint64_t v55 = v27;
      sub_25B11677C((uint64_t)&v44);
      sub_25B11702C(v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
    }
    uint64_t v15 = v43;
  }
  sub_25B10FEE0(a1 + 80, (uint64_t)&v68);
  sub_25B10FEE0((uint64_t)v94, a1 + 80);
  sub_25B114244(a2);
  uint64_t result = sub_25B11702C(&v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
  if ((*(unsigned char *)(a1 + 264) & 1) == 0)
  {
    *(unsigned char *)(a1 + 264) = 1;
    uint64_t v36 = *(void *)(a1 + 72);
    long long v37 = v11;
    sub_25B2903C0();
    if (qword_26A4D9460 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_25B290310();
    uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_26A4D9448);
    MEMORY[0x26115ED60](v18, v31);
    long long v32 = *(void (**)(char *, uint64_t))(v38 + 8);
    v32(v18, v15);
    *(void *)&long long v46 = sub_25B117290;
    *((void *)&v46 + 1) = a1;
    *(void *)&long long v44 = MEMORY[0x263EF8330];
    *((void *)&v44 + 1) = 1107296256;
    *(void *)&long long v45 = sub_25B10F584;
    *((void *)&v45 + 1) = &block_descriptor_94;
    long long v33 = _Block_copy(&v44);
    swift_retain();
    sub_25B290340();
    *(void *)&long long v57 = MEMORY[0x263F8EE78];
    sub_25B116E3C((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
    long long v34 = v37;
    uint64_t v35 = v42;
    sub_25B290A00();
    MEMORY[0x26115F210](v20, v14, v34, v33);
    _Block_release(v33);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v35);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v40);
    v32(v20, v43);
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_25B11422C()
{
  return objectdestroy_6Tm(216);
}

void *sub_25B114234()
{
  return sub_25B113B44(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_25B114244(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  unint64_t v3 = *(void *)(a1 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25B1142EC(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_25B1142EC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25B114300(a1, a2);
  }
  return a1;
}

uint64_t sub_25B114300(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

void sub_25B114358()
{
  sub_25B113A24(v0);
}

uint64_t sub_25B114360@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B290900();
  *a1 = v3;
  return result;
}

uint64_t sub_25B1143C8(char *a1)
{
  return sub_25B10EE9C(*a1);
}

uint64_t sub_25B1143F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25B10F720();
  *a1 = result;
  return result;
}

uint64_t sub_25B11441C(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 56) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for IDSZoneAdvertiser()
{
  return self;
}

uint64_t method lookup function for IDSZoneAdvertiser(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for IDSZoneAdvertiser);
}

uint64_t dispatch thunk of IDSZoneAdvertiser.isEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of IDSZoneAdvertiser.isEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of IDSZoneAdvertiser.isEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of IDSZoneAdvertiser.zoneVersionPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of IDSZoneAdvertiser.zoneVersionPublisher.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of IDSZoneAdvertiser.zoneVersionPublisher.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of IDSZoneAdvertiser.__allocating_init(idsServiceName:firstLockStateProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 520))();
}

uint64_t sub_25B114588()
{
  return sub_25B111E10(v0);
}

void sub_25B114590()
{
  sub_25B197B84(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void))(v0 + 32));
}

uint64_t sub_25B1145B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 424) = a6;
  *(void *)(v6 + 408) = a4;
  *(void *)(v6 + 416) = a5;
  return MEMORY[0x270FA2498](sub_25B1145D4, 0, 0);
}

uint64_t sub_25B1145D4()
{
  uint64_t v46 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v44 = Strong;
    if (qword_26A4D98D8 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void *)(v0 + 416);
    uint64_t v3 = sub_25B290190();
    __swift_project_value_buffer(v3, (uint64_t)qword_26A4EB1A8);
    sub_25B114244(v2);
    sub_25B114244(v2);
    long long v4 = sub_25B290160();
    os_log_type_t v5 = sub_25B2908A0();
    BOOL v6 = os_log_type_enabled(v4, v5);
    long long v7 = *(_OWORD **)(v0 + 416);
    if (v6)
    {
      long long v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v45[0] = v42;
      *(_DWORD *)long long v8 = 136446210;
      long long v10 = v7[1];
      long long v9 = v7[2];
      *(_OWORD *)(v0 + 16) = *v7;
      *(_OWORD *)(v0 + 32) = v10;
      *(_OWORD *)(v0 + 48) = v9;
      long long v11 = v7[6];
      long long v13 = v7[3];
      long long v12 = v7[4];
      *(_OWORD *)(v0 + 96) = v7[5];
      *(_OWORD *)(v0 + 112) = v11;
      *(_OWORD *)(v0 + 64) = v13;
      *(_OWORD *)(v0 + 80) = v12;
      long long v14 = v7[10];
      long long v16 = v7[7];
      long long v15 = v7[8];
      *(_OWORD *)(v0 + 160) = v7[9];
      *(_OWORD *)(v0 + 176) = v14;
      *(_OWORD *)(v0 + 128) = v16;
      *(_OWORD *)(v0 + 144) = v15;
      v45[1] = 0;
      v45[2] = 0xE000000000000000;
      sub_25B114244((uint64_t)v7);
      sub_25B290AA0();
      *(void *)(v0 + 392) = 0;
      *(void *)(v0 + 400) = 0xE000000000000000;
      sub_25B290650();
      long long v17 = *(_OWORD *)(v0 + 160);
      *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 144);
      *(_OWORD *)(v0 + 336) = v17;
      *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 176);
      long long v18 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 272) = v18;
      long long v19 = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v0 + 304) = v19;
      long long v20 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 16);
      *(_OWORD *)(v0 + 208) = v20;
      long long v21 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 240) = v21;
      sub_25B290B90();
      sub_25B290650();
      type metadata accessor for ZoneVersion();
      swift_bridgeObjectRetain();
      sub_25B2904E0();
      sub_25B290650();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B11677C((uint64_t)v7);
      *(void *)(v0 + 192) = sub_25B288E98(*(void *)(v0 + 392), *(void *)(v0 + 400), v45);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B11677C((uint64_t)v7);
      sub_25B11677C((uint64_t)v7);
      _os_log_impl(&dword_25B107000, v4, v5, "advertiser advertising %{public}s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v42, -1, -1);
      MEMORY[0x261160890](v8, -1, -1);
    }
    else
    {
      sub_25B11677C(*(void *)(v0 + 416));
      sub_25B11677C((uint64_t)v7);
    }

    uint64_t v22 = *(void *)(v0 + 416);
    type = *(NSObject **)(v44 + 72);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v44;
    long long v24 = *(_OWORD *)(v22 + 32);
    long long v25 = *(_OWORD *)(v22 + 48);
    long long v26 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)(v23 + 24) = *(_OWORD *)v22;
    *(_OWORD *)(v23 + 72) = v25;
    *(_OWORD *)(v23 + 56) = v24;
    *(_OWORD *)(v23 + 40) = v26;
    long long v27 = *(_OWORD *)(v22 + 96);
    long long v28 = *(_OWORD *)(v22 + 112);
    long long v29 = *(_OWORD *)(v22 + 80);
    *(_OWORD *)(v23 + 88) = *(_OWORD *)(v22 + 64);
    *(_OWORD *)(v23 + 136) = v28;
    *(_OWORD *)(v23 + 120) = v27;
    *(_OWORD *)(v23 + 104) = v29;
    long long v31 = *(_OWORD *)(v22 + 144);
    long long v30 = *(_OWORD *)(v22 + 160);
    uint64_t v32 = *(void *)(v22 + 176);
    *(_OWORD *)(v23 + 152) = *(_OWORD *)(v22 + 128);
    *(void *)(v23 + 200) = v32;
    *(_OWORD *)(v23 + 184) = v30;
    *(_OWORD *)(v23 + 168) = v31;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_25B1168C8;
    *(void *)(v33 + 24) = v23;
    *(void *)(v0 + 224) = sub_25B1168E4;
    *(void *)(v0 + 232) = v33;
    uint64_t v34 = MEMORY[0x263EF8330];
    *(void *)(v0 + 192) = MEMORY[0x263EF8330];
    *(void *)(v0 + 200) = 1107296256;
    *(void *)(v0 + 208) = sub_25B10D184;
    *(void *)(v0 + 216) = &block_descriptor_75;
    uint64_t v35 = _Block_copy((const void *)(v0 + 192));
    sub_25B114244(v22);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(type, v35);
    _Block_release(v35);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
      return result;
    }
    if (*(unsigned char *)(v0 + 424) != 1) {
      goto LABEL_11;
    }
    uint64_t v38 = *(NSObject **)(v44 + 72);
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = sub_25B1168EC;
    *(void *)(v39 + 24) = v44;
    *(void *)(v0 + 224) = sub_25B117398;
    *(void *)(v0 + 232) = v39;
    *(void *)(v0 + 192) = v34;
    *(void *)(v0 + 200) = 1107296256;
    *(void *)(v0 + 208) = sub_25B10D184;
    *(void *)(v0 + 216) = &block_descriptor_82;
    uint64_t v40 = _Block_copy((const void *)(v0 + 192));
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v38, v40);
    swift_release();
    _Block_release(v40);
    LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    if (v38)
    {
      __break(1u);
LABEL_11:
      swift_release();
      swift_release();
    }
  }
  uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

void sub_25B114BC8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 144);
  v7[8] = *(_OWORD *)(a2 + 128);
  v7[9] = v2;
  v7[10] = *(_OWORD *)(a2 + 160);
  uint64_t v8 = *(void *)(a2 + 176);
  long long v3 = *(_OWORD *)(a2 + 80);
  void v7[4] = *(_OWORD *)(a2 + 64);
  v7[5] = v3;
  long long v4 = *(_OWORD *)(a2 + 112);
  v7[6] = *(_OWORD *)(a2 + 96);
  v7[7] = v4;
  long long v5 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  void v7[2] = *(_OWORD *)(a2 + 32);
  v7[3] = v6;
  sub_25B114E28(v7);
}

void sub_25B114E28(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25B290080();
  uint64_t v140 = *(void *)(v4 - 8);
  id v141 = (id)v4;
  MEMORY[0x270FA5388](v4);
  v139 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = (int *)type metadata accessor for Message();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v142 = (uint64_t)&v127 - v13;
  uint64_t v14 = sub_25B290410();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  long long v17 = (uint64_t *)((char *)&v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v18 = a1[9];
  long long v157 = a1[8];
  long long v158 = v18;
  long long v159 = a1[10];
  uint64_t v160 = *((void *)a1 + 22);
  long long v19 = a1[5];
  long long v153 = a1[4];
  long long v154 = v19;
  long long v20 = a1[7];
  long long v155 = a1[6];
  long long v156 = v20;
  long long v21 = a1[1];
  long long v149 = *a1;
  long long v150 = v21;
  long long v22 = a1[3];
  long long v151 = a1[2];
  long long v152 = v22;
  uint64_t v23 = *(void **)(v2 + 72);
  *long long v17 = v23;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F0E0], v14);
  id v24 = v23;
  LOBYTE(v23) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v23 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    swift_once();
LABEL_6:
    uint64_t v37 = sub_25B290190();
    __swift_project_value_buffer(v37, (uint64_t)qword_26A4EB1A8);
    swift_retain_n();
    uint64_t v38 = sub_25B290160();
    os_log_type_t v39 = sub_25B290880();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      id v41 = (id)swift_slowAlloc();
      id v144 = v41;
      *(_DWORD *)uint64_t v40 = 136446210;
      sub_25B111AB8();
      uint64_t v161 = sub_25B288E98(v42, v43, (uint64_t *)&v144);
      sub_25B2909C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v38, v39, "(%{public}s) Cannot send advertisement as we have no IDS service wrapper", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v41, -1, -1);
      MEMORY[0x261160890](v40, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return;
  }
  long long v25 = *(void **)(v2 + 496);
  uint64_t v26 = v2;
  if (!v25)
  {
    if (qword_26A4D98D8 == -1) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
  v147 = &type metadata for ZoneVersionAdvertisement;
  unint64_t v148 = sub_25B116904();
  id v27 = (id)swift_allocObject();
  id v144 = v27;
  long long v28 = v158;
  *((_OWORD *)v27 + 9) = v157;
  *((_OWORD *)v27 + 10) = v28;
  *((_OWORD *)v27 + 11) = v159;
  *((void *)v27 + 24) = v160;
  long long v29 = v154;
  *((_OWORD *)v27 + 5) = v153;
  *((_OWORD *)v27 + 6) = v29;
  long long v30 = v156;
  *((_OWORD *)v27 + 7) = v155;
  *((_OWORD *)v27 + 8) = v30;
  long long v31 = v150;
  *((_OWORD *)v27 + 1) = v149;
  *((_OWORD *)v27 + 2) = v31;
  long long v32 = v152;
  *((_OWORD *)v27 + 3) = v151;
  *((_OWORD *)v27 + 4) = v32;
  type metadata accessor for PropertyListTypeEncoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 15;
  *(unsigned char *)(inited + 24) = 0;
  uint64_t v34 = v25;
  sub_25B114244((uint64_t)&v149);
  uint64_t v35 = v143;
  uint64_t v36 = (void *)sub_25B281964(&v144);
  if (v35)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v144);
    return;
  }
  uint64_t v137 = sub_25B2851A4(v36);
  unint64_t v138 = v44;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v144);
  uint64_t v143 = 0;
  uint64_t v45 = v140;
  v136 = v34;
  v132 = *(NSObject **)(v140 + 56);
  uint64_t v46 = (uint64_t)v141;
  ((void (*)(char *, uint64_t, uint64_t, id))v132)(v8, 1, 1, v141);
  uint64_t v135 = v26;
  sub_25B111AB8();
  id v133 = v48;
  v134 = v47;
  sub_25B114300(v137, v138);
  long long v49 = v139;
  sub_25B290070();
  uint64_t v50 = (uint64_t)&v12[v9[5]];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v132)(v50, 1, 1, v46);
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v12, v49, v46);
  sub_25B116B94((uint64_t)v8, v50);
  long long v51 = &v12[v9[6]];
  *(void *)long long v51 = 0xD000000000000014;
  *((void *)v51 + 1) = 0x800000025B29C160;
  long long v52 = &v12[v9[7]];
  id v53 = v133;
  *(void *)long long v52 = v134;
  *((void *)v52 + 1) = v53;
  *(void *)&v12[v9[8]] = 15;
  long long v54 = &v12[v9[9]];
  unint64_t v55 = v138;
  *(void *)long long v54 = v137;
  *((void *)v54 + 1) = v55;
  uint64_t v56 = (uint64_t)v12;
  uint64_t v57 = v142;
  uint64_t v58 = sub_25B116BFC(v56, v142);
  long long v59 = *(os_unfair_lock_s **)&v136[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceLock];
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  *(&v127 - 2) = v61;
  MEMORY[0x270FA5388](v60);
  *(&v127 - 2) = (uint64_t)sub_25B116C60;
  *(&v127 - 1) = v62;
  swift_retain();
  os_unfair_lock_lock(v59 + 4);
  uint64_t v63 = v143;
  sub_25B10DCD0(v64);
  if (!v63)
  {
    os_unfair_lock_unlock(v59 + 4);
    swift_release();
    uint64_t v65 = v145;
    if (v145)
    {
      id v66 = v144;
      v139 = v146;
      v134 = v147;
      int v67 = v148;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91C0);
      uint64_t v68 = swift_initStackObject();
      *(_OWORD *)(v68 + 16) = xmmword_25B292C10;
      id v141 = v66;
      *(void *)(v68 + 32) = v66;
      *(void *)(v68 + 40) = v65;
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_25B227BD0(v68);
      swift_setDeallocating();
      uint64_t v70 = swift_arrayDestroy();
      MEMORY[0x270FA5388](v70);
      *(&v127 - 4) = v71;
      *(&v127 - 3) = v57;
      *(&v127 - 2) = v69;
      *((unsigned char *)&v127 - 8) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA588);
      sub_25B290900();
      uint64_t v143 = 0;
      swift_bridgeObjectRelease();
      id v133 = v144;
      int v131 = v145;
      if (qword_26A4D98D8 != -1) {
        swift_once();
      }
      uint64_t v72 = sub_25B290190();
      long long v73 = __swift_project_value_buffer(v72, (uint64_t)qword_26A4EB1A8);
      swift_retain();
      uint64_t v74 = (uint64_t)v141;
      long long v75 = v139;
      long long v76 = v134;
      sub_25B1163D8((uint64_t)v141, v65);
      swift_retain();
      sub_25B1163D8(v74, v65);
      long long v77 = sub_25B290160();
      os_log_type_t v78 = sub_25B2908A0();
      int v79 = v78;
      BOOL v80 = os_log_type_enabled(v77, v78);
      v132 = v73;
      if (v80)
      {
        uint64_t v81 = swift_slowAlloc();
        LODWORD(v140) = v67;
        long long v82 = v76;
        uint64_t v83 = v81;
        uint64_t v130 = swift_slowAlloc();
        uint64_t v161 = v130;
        *(_DWORD *)uint64_t v83 = 136446466;
        int v129 = v79;
        sub_25B111AB8();
        id v144 = (id)sub_25B288E98(v84, v85, &v161);
        sub_25B2909C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v83 + 12) = 2080;
        os_log_t v128 = v77;
        long long v86 = v75;
        uint64_t v87 = (uint64_t)v141;
        id v144 = v141;
        uint64_t v145 = v65;
        v146 = v86;
        v147 = v82;
        LOBYTE(v148) = v140;
        uint64_t v88 = PairedDevice.description.getter();
        id v144 = (id)sub_25B288E98(v88, v89, &v161);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B11641C(v87, v65);
        uint64_t v90 = v65;
        sub_25B11641C(v87, v65);
        os_log_t v91 = v128;
        _os_log_impl(&dword_25B107000, v128, (os_log_type_t)v129, "(%{public}s) Sending advertisement to %s", (uint8_t *)v83, 0x16u);
        uint64_t v92 = v130;
        swift_arrayDestroy();
        MEMORY[0x261160890](v92, -1, -1);
        uint64_t v93 = v83;
        long long v76 = v82;
        int v67 = v140;
        MEMORY[0x261160890](v93, -1, -1);

        uint64_t v94 = v87;
      }
      else
      {
        swift_release_n();
        uint64_t v94 = (uint64_t)v141;
        sub_25B11641C((uint64_t)v141, v65);
        uint64_t v90 = v65;
        sub_25B11641C(v94, v65);
      }
      if (v131)
      {
        id v104 = v133;
        sub_25B116CFC(v133, 1);
        swift_retain();
        sub_25B116CFC(v104, 1);
        swift_retain();
        sub_25B1163D8(v94, v90);
        sub_25B116CFC(v104, 1);
        uint64_t v105 = v94;
        v106 = sub_25B290160();
        os_log_type_t v107 = sub_25B290880();
        int v108 = v107;
        if (os_log_type_enabled(v106, v107))
        {
          uint64_t v109 = swift_slowAlloc();
          LODWORD(v140) = v67;
          v110 = v76;
          uint64_t v111 = v109;
          id v141 = (id)swift_slowAlloc();
          uint64_t v161 = (uint64_t)v141;
          *(_DWORD *)uint64_t v111 = 136446722;
          LODWORD(v135) = v108;
          v132 = v106;
          sub_25B111AB8();
          id v144 = (id)sub_25B288E98(v112, v113, &v161);
          sub_25B2909C0();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v111 + 12) = 2080;
          id v144 = (id)v105;
          uint64_t v145 = v90;
          v146 = v139;
          v147 = v110;
          LOBYTE(v148) = v140;
          uint64_t v114 = PairedDevice.description.getter();
          id v144 = (id)sub_25B288E98(v114, v115, &v161);
          sub_25B2909C0();
          swift_bridgeObjectRelease();
          sub_25B11641C(v105, v90);
          sub_25B11641C(v105, v90);
          *(_WORD *)(v111 + 22) = 2082;
          id v116 = v133;
          id v144 = v133;
          id v117 = v133;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
          uint64_t v118 = sub_25B290600();
          id v144 = (id)sub_25B288E98(v118, v119, &v161);
          sub_25B2909C0();
          swift_bridgeObjectRelease();
          sub_25B116D08(v116, 1);
          sub_25B116D08(v116, 1);
          os_log_t v120 = v132;
          _os_log_impl(&dword_25B107000, v132, (os_log_type_t)v135, "(%{public}s) Error sending advertisement to %s: %{public}s", (uint8_t *)v111, 0x20u);
          uint64_t v121 = (uint64_t)v141;
          swift_arrayDestroy();
          MEMORY[0x261160890](v121, -1, -1);
          MEMORY[0x261160890](v111, -1, -1);

          sub_25B116D08(v116, 1);
          v122 = v116;
        }
        else
        {

          id v126 = v133;
          sub_25B116D08(v133, 1);
          sub_25B116D08(v126, 1);

          sub_25B11641C(v105, v90);
          sub_25B11641C(v105, v90);
          swift_release_n();
          v122 = v126;
        }
        sub_25B116D08(v122, 1);
        goto LABEL_32;
      }
      sub_25B11641C(v94, v90);
      swift_retain_n();
      v96 = sub_25B290160();
      os_log_type_t v97 = sub_25B2908A0();
      if (!os_log_type_enabled(v96, v97))
      {
        swift_release_n();
        goto LABEL_31;
      }
      v99 = (uint8_t *)swift_slowAlloc();
      id v100 = (id)swift_slowAlloc();
      id v144 = v100;
      *(_DWORD *)v99 = 136446210;
      sub_25B111AB8();
      uint64_t v161 = sub_25B288E98(v123, v124, (uint64_t *)&v144);
      sub_25B2909C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      v103 = "(%{public}s) Sucessfully sent advertisement";
    }
    else
    {
      if (qword_26A4D98D8 != -1) {
        swift_once();
      }
      uint64_t v95 = sub_25B290190();
      __swift_project_value_buffer(v95, (uint64_t)qword_26A4EB1A8);
      swift_retain_n();
      v96 = sub_25B290160();
      os_log_type_t v97 = sub_25B2908A0();
      if (!os_log_type_enabled(v96, v97))
      {
        swift_release_n();

        sub_25B10DFF0(v137, v138);
        uint64_t v125 = v57;
LABEL_33:
        sub_25B116C7C(v125);
        return;
      }
      uint64_t v98 = swift_slowAlloc();
      uint64_t v143 = 0;
      v99 = (uint8_t *)v98;
      id v100 = (id)swift_slowAlloc();
      id v144 = v100;
      *(_DWORD *)v99 = 136446210;
      sub_25B111AB8();
      uint64_t v161 = sub_25B288E98(v101, v102, (uint64_t *)&v144);
      sub_25B2909C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      v103 = "(%{public}s) No current paired device, so couldn't send advertisement";
    }
    _os_log_impl(&dword_25B107000, v96, v97, v103, v99, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v100, -1, -1);
    MEMORY[0x261160890](v99, -1, -1);
LABEL_31:

LABEL_32:
    sub_25B10DFF0(v137, v138);
    uint64_t v125 = v142;
    goto LABEL_33;
  }
  os_unfair_lock_unlock(v59 + 4);
  __break(1u);
}

uint64_t sub_25B115E60(uint64_t a1)
{
  if (qword_26A4D98D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B290190();
  __swift_project_value_buffer(v2, (uint64_t)qword_26A4EB1A8);
  long long v3 = sub_25B290160();
  os_log_type_t v4 = sub_25B2908A0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_25B107000, v3, v4, "advertisement task is shutting down", v5, 2u);
    MEMORY[0x261160890](v5, -1, -1);
  }

  if (*(void *)(a1 + 280))
  {
    swift_retain();
    sub_25B2907B0();
    swift_release();
  }
  *(void *)(a1 + 280) = 0;
  return swift_release();
}

uint64_t sub_25B115F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B2907A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_25B290790();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_25B116DE0(a1, &qword_26A4D9B28);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25B290770();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_25B116140(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  os_log_type_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *os_log_type_t v4 = v2;
  v4[1] = sub_25B11621C;
  return v6(a1);
}

uint64_t sub_25B11621C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25B116314@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25B1C187C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_25B116330(uint64_t a1, uint64_t a2)
{
  return sub_25B110C00(a1, a2);
}

uint64_t sub_25B116338(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA590);
  return v3(a1, a1 + *(int *)(v4 + 48));
}

uint64_t sub_25B116384()
{
  return sub_25B111680();
}

uint64_t sub_25B11638C(uint64_t *a1)
{
  return sub_25B1116D8(a1);
}

uint64_t sub_25B116394(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B1163D8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_25B11641C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25B116460(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_25B116478()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 160);
  if (v1 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v0 + 152), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 225, 7);
}

uint64_t sub_25B116510()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = v0 + 40;
  char v4 = *(unsigned char *)(v0 + 224);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_25B1165D0;
  *(unsigned char *)(v5 + 424) = v4;
  *(void *)(v5 + 408) = v2;
  *(void *)(v5 + 416) = v3;
  return MEMORY[0x270FA2498](sub_25B1145D4, 0, 0);
}

uint64_t sub_25B1165D0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25B1166C4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25B1165D0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A4DA578 + dword_26A4DA578);
  return v6(a1, v4);
}

uint64_t sub_25B11677C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  unint64_t v3 = *(void *)(a1 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B111FF0(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25B116824()
{
  return objectdestroy_6Tm(208);
}

uint64_t objectdestroy_6Tm(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(v1 + 144);
  if (v3 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v1 + 136), v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

void sub_25B1168C8()
{
  sub_25B114BC8(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_25B1168D4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B1168E4()
{
  return sub_25B10D15C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_25B1168EC()
{
  return sub_25B115E60(v0);
}

uint64_t sub_25B1168F4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_25B116904()
{
  unint64_t result = qword_26A4D97B0;
  if (!qword_26A4D97B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D97B0);
  }
  return result;
}

uint64_t sub_25B116958()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 136);
  if (v1 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v0 + 128), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 200, 7);
}

void sub_25B1169E0()
{
  uint64_t v1 = sub_25B290410();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + 72);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F0E0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    if (qword_26A4D98D8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = sub_25B290190();
  __swift_project_value_buffer(v7, (uint64_t)qword_26A4EB1A8);
  uint64_t v8 = sub_25B290160();
  os_log_type_t v9 = sub_25B2908A0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_25B107000, v8, v9, "IDS zone advertiser devicesDidChange", v10, 2u);
    MEMORY[0x261160890](v10, -1, -1);
  }
}

uint64_t sub_25B116B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B116BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Message();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B116C60@<X0>(uint64_t a1@<X8>)
{
  return sub_25B1C17EC(*(void *)(v1 + 16), a1);
}

uint64_t sub_25B116C7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Message();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B116CD8@<X0>(uint64_t a1@<X8>)
{
  return sub_25B1C2384(*(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), a1);
}

id sub_25B116CFC(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

void sub_25B116D08(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_25B116D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Message();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B116D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B116DE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25B116E3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B116E84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_25B116EE0()
{
  unint64_t result = qword_26B33F338;
  if (!qword_26B33F338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B33F338);
  }
  return result;
}

uint64_t sub_25B116F34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return MEMORY[0x270FA0238](v0, 73, 7);
}

uint64_t sub_25B116F7C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25B116FD8(uint64_t a1)
{
  return a1;
}

void *sub_25B11702C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22]);
  return a1;
}

uint64_t sub_25B1170A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B1142EC(a15, a16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_25B117154(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 184);
  uint64_t v3 = *(void *)(a1 + 192);
  uint64_t v4 = *(void *)(a1 + 200);
  uint64_t v5 = *(void *)(a1 + 208);
  uint64_t v6 = *(void *)(a1 + 216);
  uint64_t v7 = *(void *)(a1 + 224);
  uint64_t v8 = *(void *)(a1 + 232);
  uint64_t v9 = *(void *)(a1 + 240);
  long long v14 = *(_OWORD *)(a1 + 248);
  long long v13 = *(_OWORD *)(a1 + 264);
  long long v12 = *(_OWORD *)(a1 + 280);
  long long v11 = *(_OWORD *)(a1 + 296);
  sub_25B111F3C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120));
  sub_25B111F3C(v2, v3, v4, v5, v6, v7, v8, v9, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((unint64_t *)&v11 + 1));
  return a1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_25B1172F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  unint64_t v3 = *(void *)(a1 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25B1142EC(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_25B11739C(unsigned char *a1@<X8>)
{
}

BOOL static PublicationMethod.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PublicationMethod.hash(into:)()
{
  return sub_25B291220();
}

uint64_t PublicationMethod.hashValue.getter()
{
  return sub_25B291260();
}

unint64_t sub_25B117474()
{
  unint64_t result = qword_26A4DA598;
  if (!qword_26A4DA598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A4DA598);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PublicationMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B117594);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PublicationMethod()
{
  return &type metadata for PublicationMethod;
}

uint64_t sub_25B1175CC()
{
  sub_25B290900();
  return v1;
}

void sub_25B117634(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled);
}

uint64_t sub_25B117648(char a1)
{
  uint64_t v3 = sub_25B290320();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25B290360();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(void *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_25B11794C;
  void aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_1;
  long long v12 = _Block_copy(aBlock);
  swift_retain();
  sub_25B290340();
  v14[1] = MEMORY[0x263F8EE78];
  sub_25B11892C((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_25B117914()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_25B11794C()
{
  if (*(unsigned char *)(v0 + 16) == 1) {
    sub_25B11799C();
  }
  else {
    sub_25B117BBC();
  }
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

void sub_25B11799C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned int v6 = *(void **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_25B290440();
  uint64_t v9 = *(void (**)(void *, uint64_t))(v3 + 8);
  uint64_t v8 = v3 + 8;
  v9(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v8 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled)) {
    return;
  }
  if (qword_26A4D98C0 != -1) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v10 = sub_25B290190();
  __swift_project_value_buffer(v10, (uint64_t)qword_26A4EB150);
  uint64_t v11 = sub_25B290160();
  os_log_type_t v12 = sub_25B2908A0();
  if (os_log_type_enabled(v11, v12))
  {
    long long v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v13 = 0;
    _os_log_impl(&dword_25B107000, v11, v12, "Enabling zone advertiser", v13, 2u);
    MEMORY[0x261160890](v13, -1, -1);
  }

  long long v14 = (void *)(v1
                 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_incomingAdvertisementsByRemoteDevice);
  swift_beginAccess();
  *long long v14 = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + v8) = 1;
  sub_25B118A1C();
}

uint64_t sub_25B117BBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned int v6 = *(void **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_25B290440();
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t))(v3 + 8);
  uint64_t v8 = v3 + 8;
  uint64_t result = v9(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v8 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled) != 1) {
    return result;
  }
  if (qword_26A4D98C0 != -1) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v11 = sub_25B290190();
  __swift_project_value_buffer(v11, (uint64_t)qword_26A4EB150);
  os_log_type_t v12 = sub_25B290160();
  os_log_type_t v13 = sub_25B2908A0();
  if (os_log_type_enabled(v12, v13))
  {
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    _os_log_impl(&dword_25B107000, v12, v13, "Disabling zone advertiser", v14, 2u);
    MEMORY[0x261160890](v14, -1, -1);
  }

  *(unsigned char *)(v1 + v8) = 0;
  return sub_25B119618();
}

uint64_t (*sub_25B117DA4(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  sub_25B290900();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_25B117E34;
}

uint64_t sub_25B117E34(uint64_t a1)
{
  return sub_25B117648(*(unsigned char *)(a1 + 8));
}

uint64_t sub_25B117E5C()
{
  uint64_t v0 = sub_25B290310();
  __swift_allocate_value_buffer(v0, qword_26A4D96E8);
  *(void *)__swift_project_value_buffer(v0, (uint64_t)qword_26A4D96E8) = 500;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);
  return v1();
}

uint64_t sub_25B117EEC()
{
  uint64_t v1 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher);
  }
  else
  {
    uint64_t v3 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99E0);
    sub_25B116394((unint64_t *)&qword_26A4D99D8, &qword_26A4D99E0);
    uint64_t v2 = sub_25B290240();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_25B117FB0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher) = a1;
  return swift_release();
}

uint64_t (*sub_25B117FC8(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = sub_25B117EEC();
  return sub_25B118010;
}

uint64_t sub_25B118010(void *a1)
{
  *(void *)(a1[1] + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher) = *a1;
  return swift_release();
}

uint64_t StatusKitZoneAdvertiser.__allocating_init(key:firstLockStateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  StatusKitZoneAdvertiser.init(key:firstLockStateProvider:)(a1, a2, a3);
  return v6;
}

uint64_t StatusKitZoneAdvertiser.init(key:firstLockStateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  os_log_type_t v39 = (void *)a3;
  uint64_t v38 = a2;
  uint64_t v37 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B50);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v40 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9938);
  uint64_t v43 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  id v41 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_25B290150();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  long long v32 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9280);
  uint64_t v35 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  long long v31 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_25B2908F0();
  uint64_t v10 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  os_log_type_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25B2908C0();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_25B290360();
  MEMORY[0x270FA5388](v14 - 8);
  *(void *)(v3 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher) = 0;
  uint64_t v15 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__zoneVersionPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99E0);
  swift_allocObject();
  *(void *)(v3 + v15) = sub_25B290220();
  uint64_t v29 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue;
  sub_25B10CB64();
  sub_25B290350();
  v46[0] = MEMORY[0x263F8EE78];
  sub_25B11892C((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
  sub_25B116394((unint64_t *)&qword_26A4D9B20, (uint64_t *)&unk_26A4D9B10);
  sub_25B290A00();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F8F138], v30);
  *(void *)(v3 + v29) = sub_25B290920();
  *(void *)(v3 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_client) = 0;
  uint64_t v16 = v3 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_latestAdvertisement;
  sub_25B10FEBC((uint64_t)v46);
  sub_25B10FEE0((uint64_t)v46, v16);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscribed) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscriptionTask) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementTask) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled) = 0;
  *(void *)(v4
            + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_incomingAdvertisementsByRemoteDevice) = MEMORY[0x263F8EE80];
  *(void *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_subscriptions) = MEMORY[0x263F8EE88];
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, *MEMORY[0x263F526D8], v34);
  sub_25B1188D8();
  sub_25B116904();
  long long v17 = v31;
  sub_25B290130();
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_key, v17, v36);
  long long v18 = v39;
  sub_25B10FF48((uint64_t)v39, v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_firstLockStateProvider);
  uint64_t v19 = v18[3];
  uint64_t v20 = v18[4];
  __swift_project_boxed_opaque_existential_1(v18, v19);
  uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  id v45 = *(id *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  id v21 = v45;
  uint64_t v22 = sub_25B2908E0();
  uint64_t v23 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v40, 1, 1, v22);
  id v24 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99A0);
  sub_25B116394(&qword_26A4D9998, &qword_26A4D99A0);
  sub_25B11892C((unint64_t *)&unk_26A4D9B60, (void (*)(uint64_t))sub_25B10CB64);
  long long v25 = v41;
  sub_25B290260();
  sub_25B116DE0(v23, (uint64_t *)&unk_26A4D9B50);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_25B116394(&qword_26A4D9930, (uint64_t *)&unk_26A4D9938);
  uint64_t v26 = v42;
  sub_25B290270();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v26);
  swift_beginAccess();
  sub_25B2901F0();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return v4;
}

unint64_t sub_25B1188D8()
{
  unint64_t result = qword_26A4D97C0;
  if (!qword_26A4D97C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D97C0);
  }
  return result;
}

uint64_t sub_25B11892C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B118974()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B1189AC(unsigned __int8 *a1)
{
  int v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (v1) {
      sub_25B118A1C();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_25B118A14(unsigned __int8 *a1)
{
  return sub_25B1189AC(a1);
}

void sub_25B118A1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_5;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled) != 1) {
    return;
  }
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_firstLockStateProvider + 24);
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_firstLockStateProvider + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_firstLockStateProvider), v8);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9) & 1) == 0) {
    return;
  }
  if (qword_26A4D98C0 != -1) {
    goto LABEL_13;
  }
LABEL_5:
  uint64_t v10 = sub_25B290190();
  __swift_project_value_buffer(v10, (uint64_t)qword_26A4EB150);
  uint64_t v11 = sub_25B290160();
  os_log_type_t v12 = sub_25B2908A0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_25B107000, v11, v12, "Activating zone advertiser", v13, 2u);
    MEMORY[0x261160890](v13, -1, -1);
  }

  sub_25B2900D0();
  swift_allocObject();
  *(void *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_client) = sub_25B2900C0();
  swift_release();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending) == 1) {
    sub_25B119998();
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscribed) == 1) {
    sub_25B119C70();
  }
}

uint64_t StatusKitZoneAdvertiser.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_key;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9280);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_firstLockStateProvider);
  swift_release();
  swift_release();

  swift_release();
  sub_25B10FEE0(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_latestAdvertisement, (uint64_t)v4);
  sub_25B11702C(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StatusKitZoneAdvertiser.__deallocating_deinit()
{
  StatusKitZoneAdvertiser.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_25B118E28()
{
  return sub_25B117EEC();
}

uint64_t sub_25B118E4C()
{
  sub_25B290900();
  return v1;
}

uint64_t sub_25B118EB4(char a1)
{
  return sub_25B117648(a1);
}

uint64_t (*sub_25B118ED8(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = *v1;
  sub_25B290900();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_25B117E34;
}

uint64_t sub_25B118F68(uint64_t a1)
{
  return StatusKitZoneAdvertiser.advertise(_:)(a1);
}

uint64_t StatusKitZoneAdvertiser.advertise(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_25B290320();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25B290360();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *(_OWORD *)(a1 + 128);
  long long v13 = *(_OWORD *)(a1 + 160);
  v30[9] = *(_OWORD *)(a1 + 144);
  v30[10] = v13;
  long long v14 = *(_OWORD *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 96);
  long long v16 = *(_OWORD *)(a1 + 112);
  v30[5] = *(_OWORD *)(a1 + 80);
  v30[6] = v15;
  uint64_t v31 = *(void *)(a1 + 176);
  v30[7] = v16;
  v30[8] = v12;
  long long v17 = *(_OWORD *)(a1 + 16);
  v30[0] = *(_OWORD *)a1;
  v30[1] = v17;
  long long v18 = *(_OWORD *)(a1 + 48);
  v30[2] = *(_OWORD *)(a1 + 32);
  v30[3] = v18;
  v30[4] = v14;
  v28[0] = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  uint64_t v19 = swift_allocObject();
  long long v20 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v19 + 152) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v19 + 168) = v20;
  *(_OWORD *)(v19 + 184) = *(_OWORD *)(a1 + 160);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v19 + 88) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v19 + 104) = v21;
  long long v22 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v19 + 120) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v19 + 136) = v22;
  long long v23 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 40) = v23;
  long long v24 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v19 + 56) = *(_OWORD *)(a1 + 32);
  *(void *)(v19 + 16) = v1;
  uint64_t v25 = *(void *)(a1 + 176);
  *(_OWORD *)(v19 + 72) = v24;
  *(void *)(v19 + 200) = v25;
  *(void *)(v19 + 208) = v3;
  aBlock[4] = sub_25B11CC94;
  void aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_10_0;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  sub_25B114244((uint64_t)v30);
  sub_25B290340();
  v28[1] = MEMORY[0x263F8EE78];
  sub_25B11892C((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v11, v7, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

void sub_25B119348()
{
}

Swift::Void __swiftcall StatusKitZoneAdvertiser.subscribe()()
{
  uint64_t v1 = sub_25B290320();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25B290360();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = *(void *)(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  aBlock[4] = sub_25B11CCA4;
  uint64_t v12 = v0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_13_0;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_25B290340();
  v10[1] = MEMORY[0x263F8EE78];
  sub_25B11892C((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
}

uint64_t sub_25B119618()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled)) {
    return result;
  }
  if (qword_26A4D98C0 != -1) {
    goto LABEL_14;
  }
LABEL_4:
  uint64_t v9 = sub_25B290190();
  __swift_project_value_buffer(v9, (uint64_t)qword_26A4EB150);
  uint64_t v10 = sub_25B290160();
  os_log_type_t v11 = sub_25B2908A0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_25B107000, v10, v11, "Deactivating zone advertiser", v12, 2u);
    MEMORY[0x261160890](v12, -1, -1);
  }

  sub_25B10FEE0(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_latestAdvertisement, (uint64_t)v20);
  sub_25B10FEE0((uint64_t)v20, (uint64_t)&v21);
  if (sub_25B116460((uint64_t)&v21) != 1)
  {
    uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_client);
    if (v13)
    {
      sub_25B11702C(v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B1170A0);
      swift_retain();
      sub_25B1172F8((uint64_t)&v21);
      unint64_t v14 = sub_25B20D224(MEMORY[0x263F8EE78]);
      v18[8] = v29;
      v18[9] = v30;
      v18[10] = v31;
      v18[4] = v25;
      v18[5] = v26;
      v18[6] = v27;
      v18[7] = v28;
      v18[0] = v21;
      v18[1] = v22;
      v18[2] = v23;
      v18[3] = v24;
      unint64_t v19 = v14;
      v16[8] = v29;
      v16[9] = v30;
      v16[10] = v31;
      unint64_t v17 = v14;
      v16[4] = v25;
      v16[5] = v26;
      v16[6] = v27;
      v16[7] = v28;
      v16[0] = v21;
      v16[1] = v22;
      v16[2] = v23;
      v16[3] = v24;
      sub_25B11A060(v16, v13, 1);
      swift_release();
      sub_25B11702C(v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
      sub_25B11677C((uint64_t)v18);
      *(unsigned char *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending) = 1;
    }
  }
  uint64_t v15 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscriptionTask;
  if (*(void *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscriptionTask))
  {
    swift_retain();
    sub_25B2907B0();
    swift_release();
  }
  *(void *)(v1 + v15) = 0;
  swift_release();
  *(void *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_client) = 0;
  return swift_release();
}

void sub_25B119998()
{
  uint64_t v1 = sub_25B290410();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (void *)((char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F0E0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_8;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled) == 1)
  {
    uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_client);
    if (v7)
    {
      uint64_t v8 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending;
      if (*(unsigned char *)(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending) == 1)
      {
        sub_25B10FEE0(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_latestAdvertisement, (uint64_t)v15);
        sub_25B10FEE0((uint64_t)v15, (uint64_t)v16);
        if (sub_25B116460((uint64_t)v16) != 1)
        {
          *(unsigned char *)(v0 + v8) = 0;
          v13[8] = v16[8];
          v13[9] = v16[9];
          v13[10] = v16[10];
          uint64_t v14 = v17;
          v13[4] = v16[4];
          v13[5] = v16[5];
          v13[6] = v16[6];
          v13[7] = v16[7];
          v13[0] = v16[0];
          v13[1] = v16[1];
          v13[2] = v16[2];
          v13[3] = v16[3];
          swift_retain();
          sub_25B11702C(v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B1170A0);
          sub_25B11A060(v13, v7, 0);
          swift_release();
          sub_25B11702C(v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
        }
      }
    }
    return;
  }
  if (qword_26A4D98C0 != -1) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v9 = sub_25B290190();
  __swift_project_value_buffer(v9, (uint64_t)qword_26A4EB150);
  uint64_t v10 = sub_25B290160();
  os_log_type_t v11 = sub_25B2908A0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_25B107000, v10, v11, "Zone advertiser will advertise when enabled", v12, 2u);
    MEMORY[0x261160890](v12, -1, -1);
  }
}

uint64_t sub_25B119C70()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9B28);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25B290410();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint8_t **)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  void *v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F0E0], v5);
  id v10 = v9;
  LOBYTE(v9) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_client);
  if (!v8) {
    return result;
  }
  uint64_t v12 = qword_26A4D98C0;
  swift_retain();
  if (v12 != -1) {
    goto LABEL_10;
  }
LABEL_4:
  uint64_t v13 = sub_25B290190();
  __swift_project_value_buffer(v13, (uint64_t)qword_26A4EB150);
  swift_retain_n();
  uint64_t v14 = sub_25B290160();
  os_log_type_t v15 = sub_25B2908A0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    long long v25 = v4;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446210;
    uint64_t v27 = v18;
    long long v24 = v17 + 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9280);
    sub_25B116394(&qword_26A4D9278, &qword_26A4D9280);
    uint64_t v19 = sub_25B290DB0();
    uint64_t v26 = sub_25B288E98(v19, v20, &v27);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_25B107000, v14, v15, "Zone advertiser subscribing to %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v18, -1, -1);
    long long v21 = v17;
    uint64_t v4 = v25;
    MEMORY[0x261160890](v21, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  uint64_t v22 = sub_25B2907A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v4, 1, 1, v22);
  long long v23 = (void *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = v8;
  v23[5] = v1;
  swift_retain();
  swift_retain();
  *(void *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscriptionTask) = sub_25B115F94((uint64_t)v4, (uint64_t)&unk_26A4DA5A8, (uint64_t)v23);
  swift_release();
  return swift_release();
}

uint64_t sub_25B11A060(long long *a1, uint64_t a2, int a3)
{
  int v53 = a3;
  uint64_t v54 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9B28);
  MEMORY[0x270FA5388](v5 - 8);
  long long v52 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_25B2900F0();
  uint64_t v7 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_25B290110();
  uint64_t v10 = *(void *)(v51 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v51);
  uint64_t v50 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v49 - v13;
  uint64_t v15 = sub_25B290410();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (uint64_t *)((char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v19 = a1[9];
  long long v63 = a1[8];
  long long v64 = v19;
  long long v65 = a1[10];
  uint64_t v66 = *((void *)a1 + 22);
  long long v20 = a1[5];
  long long v59 = a1[4];
  long long v60 = v20;
  long long v21 = a1[7];
  long long v61 = a1[6];
  long long v62 = v21;
  long long v22 = a1[1];
  long long v55 = *a1;
  long long v23 = a1[2];
  long long v24 = a1[3];
  long long v56 = v22;
  long long v57 = v23;
  long long v58 = v24;
  long long v25 = *(void **)(v3 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  void *v18 = v25;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F8F0E0], v15);
  id v26 = v25;
  LOBYTE(v25) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if (v25)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9D08);
    uint64_t v28 = sub_25B2900E0();
    uint64_t v29 = *(void *)(v28 - 8);
    unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_25B292C10;
    (*(void (**)(unint64_t, void, uint64_t))(v29 + 104))(v31 + v30, *MEMORY[0x263F52628], v28);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F52638], v49);
    sub_25B290100();
    uint64_t v32 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementTask;
    uint64_t v33 = v14;
    if (*(void *)(v3 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementTask))
    {
      swift_retain();
      sub_25B2907B0();
      swift_release();
    }
    uint64_t v34 = sub_25B2907A0();
    uint64_t v35 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v52, 1, 1, v34);
    uint64_t v36 = swift_allocObject();
    swift_weakInit();
    uint64_t v37 = v50;
    uint64_t v38 = v51;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v50, v33, v51);
    unint64_t v39 = (*(unsigned __int8 *)(v10 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v40 = swift_allocObject();
    uint64_t v49 = (uint64_t)v33;
    uint64_t v41 = v40;
    long long v42 = v64;
    *(_OWORD *)(v40 + 168) = v63;
    *(_OWORD *)(v40 + 184) = v42;
    *(_OWORD *)(v40 + 200) = v65;
    long long v43 = v60;
    *(_OWORD *)(v40 + 104) = v59;
    *(_OWORD *)(v40 + 120) = v43;
    long long v44 = v62;
    *(_OWORD *)(v40 + 136) = v61;
    *(_OWORD *)(v40 + 152) = v44;
    long long v45 = v56;
    *(_OWORD *)(v40 + 40) = v55;
    *(_OWORD *)(v40 + 56) = v45;
    long long v46 = v58;
    *(_OWORD *)(v40 + 72) = v57;
    *(void *)(v40 + 16) = 0;
    *(void *)(v40 + 24) = 0;
    *(void *)(v40 + 32) = v36;
    uint64_t v47 = v66;
    *(_OWORD *)(v40 + 88) = v46;
    uint64_t v48 = v54;
    *(void *)(v40 + 216) = v47;
    *(void *)(v40 + 224) = v48;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v40 + v39, v37, v38);
    *(unsigned char *)(v41 + v39 + v11) = v53 & 1;
    sub_25B114244((uint64_t)&v55);
    swift_retain();
    *(void *)(v3 + v32) = sub_25B115F94(v35, (uint64_t)&unk_26A4DA5B8, v41);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v49, v38);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_25B11A630(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscribed) & 1) == 0)
  {
    *(unsigned char *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscribed) = 1;
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled) == 1)
    {
      sub_25B119C70();
    }
    else
    {
      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v1 = sub_25B290190();
      __swift_project_value_buffer(v1, (uint64_t)qword_26A4EB150);
      swift_retain_n();
      uint64_t v2 = sub_25B290160();
      os_log_type_t v3 = sub_25B2908A0();
      if (os_log_type_enabled(v2, v3))
      {
        uint64_t v4 = (uint8_t *)swift_slowAlloc();
        uint64_t v5 = swift_slowAlloc();
        *(_DWORD *)uint64_t v4 = 136446210;
        uint64_t v8 = v5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9280);
        sub_25B116394(&qword_26A4D9278, &qword_26A4D9280);
        uint64_t v6 = sub_25B290DB0();
        sub_25B288E98(v6, v7, &v8);
        sub_25B2909C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25B107000, v2, v3, "Zone advertiser will subscribe when enabled to %{public}s", v4, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261160890](v5, -1, -1);
        MEMORY[0x261160890](v4, -1, -1);
      }
      else
      {

        swift_release_n();
      }
    }
  }
}

uint64_t sub_25B11A860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a5;
  uint64_t v7 = sub_25B290320();
  v5[14] = v7;
  v5[15] = *(void *)(v7 - 8);
  v5[16] = swift_task_alloc();
  uint64_t v8 = sub_25B290360();
  v5[17] = v8;
  v5[18] = *(void *)(v8 - 8);
  v5[19] = swift_task_alloc();
  uint64_t v9 = sub_25B290310();
  v5[20] = v9;
  v5[21] = *(void *)(v9 - 8);
  v5[22] = swift_task_alloc();
  uint64_t v10 = sub_25B2903E0();
  v5[23] = v10;
  v5[24] = *(void *)(v10 - 8);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9260);
  v5[27] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v5[28] = v12;
  v5[29] = *(void *)(v12 + 64);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9168);
  v5[32] = v13;
  v5[33] = *(void *)(v13 - 8);
  v5[34] = swift_task_alloc();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9270);
  v5[35] = v14;
  v5[36] = *(void *)(v14 - 8);
  uint64_t v15 = swift_task_alloc();
  v5[37] = v15;
  uint64_t v16 = a5 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_key;
  uint64_t v17 = (void *)swift_task_alloc();
  v5[38] = v17;
  unint64_t v18 = sub_25B1188D8();
  unint64_t v19 = sub_25B116904();
  *uint64_t v17 = v5;
  v17[1] = sub_25B11ABFC;
  return MEMORY[0x270F479A0](v15, v16, &type metadata for ZoneVersionAdvertisement, v18, v19);
}

uint64_t sub_25B11ABFC()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25B11BA70;
  }
  else {
    uint64_t v2 = sub_25B11AD10;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25B11AD10()
{
  sub_25B290120();
  *(void *)(v0 + 320) = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue;
  *(_DWORD *)(v0 + 352) = *MEMORY[0x263F8F018];
  uint64_t v1 = sub_25B116394(&qword_26A4D9268, &qword_26A4D9168);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25B11AE14;
  uint64_t v3 = *(void *)(v0 + 256);
  return MEMORY[0x270FA1E80](v0 + 72, v3, v1);
}

uint64_t sub_25B11AE14()
{
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25B11B730;
  }
  else {
    uint64_t v2 = sub_25B11AF28;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25B11AF28()
{
  *(void *)(v0 + 344) = *(void *)(v0 + 72);
  return MEMORY[0x270FA2498](sub_25B11AF4C, 0, 0);
}

uint64_t sub_25B11AF4C()
{
  long long v59 = v0;
  uint64_t v1 = v0[43];
  if (v1)
  {
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_25B290190();
    __swift_project_value_buffer(v2, (uint64_t)qword_26A4EB150);
    swift_bridgeObjectRetain_n();
    uint64_t v3 = sub_25B290160();
    os_log_type_t v4 = sub_25B2908A0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = v0[27];
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      v58[0] = v7;
      *(_DWORD *)uint64_t v6 = 136446210;
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v9 = MEMORY[0x26115F080](v8, v5);
      unint64_t v11 = v10;
      swift_bridgeObjectRelease();
      *(void *)(v6 + 4) = sub_25B288E98(v9, v11, v58);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v3, v4, "Zone advertiser received new zone versions: %{public}s", (uint8_t *)v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v7, -1, -1);
      MEMORY[0x261160890](v6, -1, -1);

      uint64_t v12 = *(void *)(v1 + 16);
      if (v12) {
        goto LABEL_6;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v12 = *(void *)(v1 + 16);
      if (v12)
      {
LABEL_6:
        uint64_t v13 = (char *)v0 + 356;
        uint64_t v14 = v0[28];
        uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
        uint64_t v16 = v1 + ((v15 + 32) & ~v15);
        uint64_t v53 = *(void *)(v14 + 72);
        uint64_t v17 = *(void (**)(void, void, void))(v14 + 16);
        uint64_t v39 = (v15 + 24) & ~v15;
        long long v52 = v17;
        do
        {
          uint64_t v57 = v12;
          uint64_t v18 = v0[31];
          uint64_t v19 = v0[13];
          v17(v18, v16, v0[27]);
          uint64_t v20 = swift_task_alloc();
          *(void *)(v20 + 16) = v19;
          *(void *)(v20 + 24) = v18;
          sub_25B290900();
          swift_task_dealloc();
          if (*v13 == 1)
          {
            unsigned int v47 = *((_DWORD *)v0 + 88);
            uint64_t v55 = v0[31];
            uint64_t v41 = v0[30];
            uint64_t v42 = v0[28];
            uint64_t v54 = v0[27];
            uint64_t v44 = v0[26];
            uint64_t v21 = v0[25];
            uint64_t v56 = v0[24];
            long long v23 = (void *)v0[22];
            uint64_t v22 = v0[23];
            uint64_t v25 = v0[20];
            uint64_t v24 = v0[21];
            uint64_t v43 = v0[19];
            uint64_t v50 = v0[18];
            uint64_t v51 = v0[17];
            uint64_t v45 = v0[16];
            uint64_t v49 = v0[15];
            uint64_t v46 = v0[14];
            uint64_t v40 = v0[13];
            sub_25B2903C0();
            *long long v23 = 5;
            (*(void (**)(void *, void, uint64_t))(v24 + 104))(v23, v47, v25);
            MEMORY[0x26115ED60](v21, v23);
            (*(void (**)(void *, uint64_t))(v24 + 8))(v23, v25);
            uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
            v48(v21, v22);
            v17(v41, v55, v54);
            uint64_t v26 = swift_allocObject();
            *(void *)(v26 + 16) = v40;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v26 + v39, v41, v54);
            v0[6] = sub_25B11DE54;
            v0[7] = v26;
            v0[2] = MEMORY[0x263EF8330];
            v0[3] = 1107296256;
            v0[4] = sub_25B10F584;
            v0[5] = &block_descriptor_58;
            uint64_t v27 = _Block_copy(v0 + 2);
            swift_retain();
            sub_25B290340();
            v0[12] = MEMORY[0x263F8EE78];
            sub_25B11892C((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
            sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
            sub_25B290A00();
            MEMORY[0x26115F210](v44, v43, v45, v27);
            _Block_release(v27);
            (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v45, v46);
            (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v43, v51);
            v48(v44, v22);
            uint64_t v13 = (char *)v0 + 356;
            (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v55, v54);
            swift_release();
          }
          else
          {
            (*(void (**)(void, void))(v0[28] + 8))(v0[31], v0[27]);
          }
          v16 += v53;
          uint64_t v12 = v57 - 1;
          uint64_t v17 = v52;
        }
        while (v57 != 1);
        swift_bridgeObjectRelease();
LABEL_19:
        uint64_t v36 = sub_25B116394(&qword_26A4D9268, &qword_26A4D9168);
        uint64_t v37 = (void *)swift_task_alloc();
        v0[41] = v37;
        void *v37 = v0;
        v37[1] = sub_25B11AE14;
        uint64_t v38 = v0[32];
        return MEMORY[0x270FA1E80](v0 + 9, v38, v36);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_25B290160();
    os_log_type_t v34 = sub_25B2908A0();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_25B107000, v33, v34, "Zone advertiser payload is empty; ignoring", v35, 2u);
      MEMORY[0x261160890](v35, -1, -1);
    }

    goto LABEL_19;
  }
  uint64_t v29 = v0[36];
  uint64_t v28 = v0[37];
  uint64_t v30 = v0[35];
  (*(void (**)(void, void))(v0[33] + 8))(v0[34], v0[32]);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_25B11B730()
{
  *(void *)(v0 + 80) = *(void *)(v0 + 336);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
  swift_willThrowTypedImpl();
  return MEMORY[0x270FA2498](sub_25B11B7BC, 0, 0);
}

uint64_t sub_25B11B7BC()
{
  uint64_t v18 = v0;
  uint64_t v2 = v0[36];
  uint64_t v1 = v0[37];
  uint64_t v3 = v0[35];
  (*(void (**)(void, void))(v0[33] + 8))(v0[34], v0[32]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  os_log_type_t v4 = (void *)v0[42];
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_25B290190();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A4EB150);
  id v6 = v4;
  id v7 = v4;
  uint64_t v8 = sub_25B290160();
  os_log_type_t v9 = sub_25B290880();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = v11;
    *(_DWORD *)unint64_t v10 = 136446210;
    v0[11] = v4;
    id v12 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
    uint64_t v13 = sub_25B290600();
    v0[8] = sub_25B288E98(v13, v14, &v17);
    sub_25B2909C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_25B107000, v8, v9, "Zone advertiser failed to subscribe: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v11, -1, -1);
    MEMORY[0x261160890](v10, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_25B11BA70()
{
  uint64_t v15 = v0;
  uint64_t v1 = (void *)v0[39];
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B290190();
  __swift_project_value_buffer(v2, (uint64_t)qword_26A4EB150);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_25B290160();
  os_log_type_t v6 = sub_25B290880();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)id v7 = 136446210;
    v0[11] = v1;
    id v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
    uint64_t v10 = sub_25B290600();
    v0[8] = sub_25B288E98(v10, v11, &v14);
    sub_25B2909C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_25B107000, v5, v6, "Zone advertiser failed to subscribe: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v8, -1, -1);
    MEMORY[0x261160890](v7, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

void sub_25B11BCF0(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9260);
  sub_25B290090();
  v121[8] = v105;
  v121[9] = v106;
  v121[10] = v107;
  v121[4] = v101;
  v121[5] = v102;
  v121[6] = v103;
  v121[7] = v104;
  v121[0] = v97;
  v121[1] = v98;
  v121[2] = v99;
  uint64_t v122 = v108;
  v121[3] = v100;
  sub_25B1172F8((uint64_t)v121);
  sub_25B11677C((uint64_t)v121);
  long long v4 = v121[0];
  swift_bridgeObjectRetain();
  sub_25B11DEBC((uint64_t)v121);
  uint64_t v5 = (uint64_t *)(a1
                 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_incomingAdvertisementsByRemoteDevice);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (!*(void *)(*v5 + 16)) {
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_25B18A634(v4, *((uint64_t *)&v4 + 1));
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_25B290190();
    __swift_project_value_buffer(v24, (uint64_t)qword_26A4EB150);
    uint64_t v25 = sub_25B290160();
    os_log_type_t v26 = sub_25B2908A0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_25B107000, v25, v26, "Zone advertiser payload is new; publishing", v27, 2u);
      MEMORY[0x261160890](v27, -1, -1);
    }

    sub_25B290090();
    long long v105 = v93;
    long long v106 = v94;
    long long v107 = v95;
    uint64_t v108 = v96;
    long long v101 = v89;
    long long v102 = v90;
    long long v103 = v91;
    long long v104 = v92;
    long long v97 = v85;
    long long v98 = v86;
    long long v99 = v87;
    long long v100 = v88;
    sub_25B1172F8((uint64_t)&v97);
    sub_25B11677C((uint64_t)&v97);
    long long v28 = v97;
    swift_bridgeObjectRetain();
    sub_25B11DEBC((uint64_t)&v97);
    sub_25B290090();
    long long v117 = v81;
    long long v118 = v82;
    long long v119 = v83;
    uint64_t v120 = v84;
    long long v113 = v77;
    long long v114 = v78;
    long long v115 = v79;
    long long v116 = v80;
    long long v109 = v73;
    long long v110 = v74;
    long long v111 = v75;
    long long v112 = v76;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v49 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    sub_25B22018C((uint64_t)&v109, v28, *((uint64_t *)&v28 + 1), isUniquelyReferenced_nonNull_native);
    *uint64_t v5 = v49;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_23;
  }
  uint64_t v9 = *(void *)(v6 + 56) + 184 * v7;
  long long v11 = *(_OWORD *)(v9 + 32);
  long long v10 = *(_OWORD *)(v9 + 48);
  long long v12 = *(_OWORD *)(v9 + 16);
  long long v73 = *(_OWORD *)v9;
  long long v74 = v12;
  long long v75 = v11;
  long long v76 = v10;
  long long v13 = *(_OWORD *)(v9 + 64);
  long long v14 = *(_OWORD *)(v9 + 80);
  long long v15 = *(_OWORD *)(v9 + 112);
  long long v79 = *(_OWORD *)(v9 + 96);
  long long v80 = v15;
  long long v77 = v13;
  long long v78 = v14;
  long long v16 = *(_OWORD *)(v9 + 128);
  long long v17 = *(_OWORD *)(v9 + 144);
  long long v18 = *(_OWORD *)(v9 + 160);
  uint64_t v84 = *(void *)(v9 + 176);
  long long v82 = v17;
  long long v83 = v18;
  long long v81 = v16;
  sub_25B114244((uint64_t)&v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B290090();
  long long v93 = v117;
  long long v94 = v118;
  long long v95 = v119;
  long long v89 = v113;
  long long v90 = v114;
  long long v91 = v115;
  long long v92 = v116;
  long long v85 = v109;
  long long v86 = v110;
  long long v87 = v111;
  long long v88 = v112;
  long long v69 = v81;
  long long v70 = v82;
  long long v71 = v83;
  long long v65 = v77;
  long long v66 = v78;
  long long v67 = v79;
  long long v68 = v80;
  long long v61 = v73;
  long long v62 = v74;
  long long v63 = v75;
  long long v64 = v76;
  long long v57 = v117;
  long long v58 = v118;
  long long v59 = v119;
  long long v53 = v113;
  long long v54 = v114;
  long long v55 = v115;
  long long v56 = v116;
  uint64_t v96 = v120;
  long long v49 = v109;
  long long v50 = v110;
  long long v51 = v111;
  long long v52 = v112;
  if ((_s16ReplicatorEngine24ZoneVersionAdvertisementV16DeviceDescriptorV2eeoiySbAE_AEtFZ_0((uint64_t)&v61, (uint64_t)&v49) & 1) == 0)
  {
    sub_25B11677C((uint64_t)&v85);
    goto LABEL_18;
  }
  char v19 = sub_25B1B7CA8(v84, v96);
  sub_25B11677C((uint64_t)&v85);
  if ((v19 & 1) == 0)
  {
LABEL_18:
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_25B290190();
    __swift_project_value_buffer(v30, (uint64_t)qword_26A4EB150);
    uint64_t v31 = sub_25B290160();
    os_log_type_t v32 = sub_25B2908A0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl(&dword_25B107000, v31, v32, "Zone advertiser payload has changed; publishing", v33, 2u);
      MEMORY[0x261160890](v33, -1, -1);
    }

    sub_25B290090();
    long long v69 = v57;
    long long v70 = v58;
    long long v71 = v59;
    uint64_t v72 = v60;
    long long v65 = v53;
    long long v66 = v54;
    long long v67 = v55;
    long long v68 = v56;
    long long v61 = v49;
    long long v62 = v50;
    long long v63 = v51;
    long long v64 = v52;
    sub_25B1172F8((uint64_t)&v61);
    sub_25B11677C((uint64_t)&v61);
    long long v34 = v61;
    swift_bridgeObjectRetain();
    sub_25B11DEBC((uint64_t)&v61);
    sub_25B290090();
    long long v117 = v45;
    long long v118 = v46;
    long long v119 = v47;
    uint64_t v120 = v48;
    long long v113 = v41;
    long long v114 = v42;
    long long v115 = v43;
    long long v116 = v44;
    long long v109 = v37;
    long long v110 = v38;
    long long v111 = v39;
    long long v112 = v40;
    swift_beginAccess();
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    sub_25B22018C((uint64_t)&v109, v34, *((uint64_t *)&v34 + 1), v35);
    *uint64_t v5 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_25B11677C((uint64_t)&v73);
LABEL_23:
    *a2 = 1;
    return;
  }
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_25B290190();
  __swift_project_value_buffer(v20, (uint64_t)qword_26A4EB150);
  uint64_t v21 = sub_25B290160();
  os_log_type_t v22 = sub_25B2908A0();
  if (os_log_type_enabled(v21, v22))
  {
    long long v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v23 = 0;
    _os_log_impl(&dword_25B107000, v21, v22, "Zone advertiser payload has not changed; ignoring", v23, 2u);
    MEMORY[0x261160890](v23, -1, -1);
  }
  sub_25B11677C((uint64_t)&v73);

  *a2 = 0;
}

uint64_t sub_25B11C42C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9260);
  sub_25B290090();
  v13[8] = v9;
  v13[9] = v10;
  v13[10] = v11;
  v13[4] = v5;
  v13[5] = v6;
  v13[6] = v7;
  v13[7] = v8;
  v13[0] = v1;
  v13[1] = v2;
  v13[2] = v3;
  v13[3] = v4;
  uint64_t v14 = v12;
  sub_25B290210();
  return sub_25B11677C((uint64_t)v13);
}

void *sub_25B11C504(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 144);
  long long v90 = *(_OWORD *)(a2 + 128);
  long long v91 = v4;
  long long v92 = *(_OWORD *)(a2 + 160);
  uint64_t v93 = *(void *)(a2 + 176);
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v86 = *(_OWORD *)(a2 + 64);
  long long v87 = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  long long v88 = *(_OWORD *)(a2 + 96);
  long long v89 = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  long long v82 = *(_OWORD *)a2;
  long long v83 = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  long long v84 = *(_OWORD *)(a2 + 32);
  long long v85 = v8;
  uint64_t v9 = sub_25B290320();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  MEMORY[0x270FA5388](v9);
  long long v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25B290360();
  uint64_t v40 = *(void *)(v12 - 8);
  uint64_t v41 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25B2903E0();
  uint64_t v39 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  long long v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v37 - v19;
  uint64_t v21 = a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_latestAdvertisement;
  sub_25B10FEE0(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_latestAdvertisement, (uint64_t)v94);
  v95[8] = v90;
  v95[9] = v91;
  v95[10] = v92;
  uint64_t v96 = v93;
  v95[4] = v86;
  v95[5] = v87;
  v95[6] = v88;
  v95[7] = v89;
  v95[0] = v82;
  v95[1] = v83;
  v95[2] = v84;
  v95[3] = v85;
  nullsub_1(v95);
  sub_25B10FEE0((uint64_t)v94, (uint64_t)v97);
  int v22 = sub_25B116460((uint64_t)v97);
  uint64_t v44 = v15;
  if (v22 == 1)
  {
    sub_25B10FEE0((uint64_t)v94, (uint64_t)&v69);
    sub_25B10FEE0((uint64_t)v95, (uint64_t)&v81);
    sub_25B114244(a2);
    sub_25B117154((uint64_t)&v69);
  }
  else
  {
    sub_25B10FEE0((uint64_t)v94, (uint64_t)&v69);
    long long v66 = v77;
    long long v67 = v78;
    long long v68 = v79;
    long long v62 = v73;
    long long v63 = v74;
    long long v64 = v75;
    long long v65 = v76;
    long long v58 = v69;
    long long v59 = v70;
    long long v60 = v71;
    long long v61 = v72;
    long long v23 = *(_OWORD *)(a2 + 144);
    v57[8] = *(_OWORD *)(a2 + 128);
    v57[9] = v23;
    v57[10] = *(_OWORD *)(a2 + 160);
    long long v24 = *(_OWORD *)(a2 + 80);
    v57[4] = *(_OWORD *)(a2 + 64);
    v57[5] = v24;
    long long v25 = *(_OWORD *)(a2 + 112);
    v57[6] = *(_OWORD *)(a2 + 96);
    v57[7] = v25;
    long long v26 = *(_OWORD *)(a2 + 16);
    v57[0] = *(_OWORD *)a2;
    v57[1] = v26;
    long long v27 = *(_OWORD *)(a2 + 48);
    v57[2] = *(_OWORD *)(a2 + 32);
    v57[3] = v27;
    long long v53 = v77;
    long long v54 = v78;
    long long v55 = v79;
    long long v49 = v73;
    long long v50 = v74;
    long long v51 = v75;
    long long v52 = v76;
    long long v45 = v69;
    long long v46 = v70;
    uint64_t v28 = v80;
    long long v47 = v71;
    long long v48 = v72;
    sub_25B11702C(v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B1170A0);
    sub_25B11702C(v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B1170A0);
    sub_25B114244(a2);
    if (_s16ReplicatorEngine24ZoneVersionAdvertisementV16DeviceDescriptorV2eeoiySbAE_AEtFZ_0((uint64_t)&v45, (uint64_t)v57))
    {
      char v29 = sub_25B1B7CA8(v28, *(void *)(a2 + 176));
      sub_25B11677C(a2);
      long long v53 = v66;
      long long v54 = v67;
      long long v55 = v68;
      long long v49 = v62;
      long long v50 = v63;
      long long v51 = v64;
      long long v52 = v65;
      long long v45 = v58;
      long long v46 = v59;
      long long v47 = v60;
      long long v48 = v61;
      uint64_t v56 = v28;
      sub_25B11677C((uint64_t)&v45);
      uint64_t result = sub_25B11702C(v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
      if (v29) {
        return result;
      }
    }
    else
    {
      sub_25B11677C(a2);
      long long v53 = v66;
      long long v54 = v67;
      long long v55 = v68;
      long long v49 = v62;
      long long v50 = v63;
      long long v51 = v64;
      long long v52 = v65;
      long long v45 = v58;
      long long v46 = v59;
      long long v47 = v60;
      long long v48 = v61;
      uint64_t v56 = v28;
      sub_25B11677C((uint64_t)&v45);
      sub_25B11702C(v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
    }
    uint64_t v15 = v44;
  }
  sub_25B10FEE0(v21, (uint64_t)&v69);
  sub_25B10FEE0((uint64_t)v95, v21);
  sub_25B114244(a2);
  uint64_t result = sub_25B11702C(&v69, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending) & 1) == 0)
  {
    *(unsigned char *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending) = 1;
    uint64_t v37 = *(void *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
    long long v38 = v11;
    sub_25B2903C0();
    if (qword_26A4D9708 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_25B290310();
    uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_26A4D96E8);
    MEMORY[0x26115ED60](v18, v32);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v39 + 8);
    v33(v18, v15);
    *(void *)&long long v47 = sub_25B11DF5C;
    *((void *)&v47 + 1) = a1;
    *(void *)&long long v45 = MEMORY[0x263EF8330];
    *((void *)&v45 + 1) = 1107296256;
    *(void *)&long long v46 = sub_25B10F584;
    *((void *)&v46 + 1) = &block_descriptor_61;
    long long v34 = _Block_copy(&v45);
    swift_retain();
    sub_25B290340();
    *(void *)&long long v58 = MEMORY[0x263F8EE78];
    sub_25B11892C((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
    char v35 = v38;
    uint64_t v36 = v43;
    sub_25B290A00();
    MEMORY[0x26115F210](v20, v14, v35, v34);
    _Block_release(v34);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v36);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v41);
    v33(v20, v44);
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_25B11CC04()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 144);
  if (v1 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v0 + 136), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 216, 7);
}

void *sub_25B11CC94()
{
  return sub_25B11C504(*(void *)(v0 + 16), v0 + 24);
}

void sub_25B11CCA4()
{
  sub_25B11A630(v0);
}

uint64_t sub_25B11CCAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B290900();
  *a1 = v3;
  return result;
}

uint64_t sub_25B11CD1C(char *a1)
{
  return sub_25B117648(*a1);
}

uint64_t sub_25B11CD44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25B117EEC();
  *a1 = result;
  return result;
}

uint64_t sub_25B11CD70(void *a1, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_25B11CDBC()
{
  return type metadata accessor for StatusKitZoneAdvertiser();
}

uint64_t type metadata accessor for StatusKitZoneAdvertiser()
{
  uint64_t result = qword_26A4D9760;
  if (!qword_26A4D9760) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25B11CE10()
{
  sub_25B11CFFC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for StatusKitZoneAdvertiser(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StatusKitZoneAdvertiser);
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.isEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.isEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.isEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.zoneVersionPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.zoneVersionPublisher.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.zoneVersionPublisher.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.__allocating_init(key:firstLockStateProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 456))();
}

void sub_25B11CFFC()
{
  if (!qword_26A4D9288)
  {
    sub_25B1188D8();
    sub_25B116904();
    unint64_t v0 = sub_25B290140();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A4D9288);
    }
  }
}

uint64_t sub_25B11D064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 760) = a8;
  *(void *)(v8 + 688) = a7;
  *(void *)(v8 + 680) = a6;
  *(void *)(v8 + 672) = a5;
  *(void *)(v8 + 664) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9258);
  *(void *)(v8 + 696) = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9250);
  *(void *)(v8 + 704) = v9;
  *(void *)(v8 + 712) = *(void *)(v9 - 8);
  *(void *)(v8 + 720) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25B11D168, 0, 0);
}

uint64_t sub_25B11D168()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 728) = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v3 = *(void *)(v0 + 672);
    uint64_t v4 = sub_25B290190();
    *(void *)(v0 + 736) = __swift_project_value_buffer(v4, (uint64_t)qword_26A4EB150);
    sub_25B114244(v3);
    sub_25B114244(v3);
    long long v5 = sub_25B290160();
    os_log_type_t v6 = sub_25B2908A0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *(_OWORD **)(v0 + 672);
    if (v7)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v44 = v42;
      *(_DWORD *)uint64_t v9 = 136446210;
      long long v11 = v8[1];
      long long v10 = v8[2];
      *(_OWORD *)(v0 + 200) = *v8;
      *(_OWORD *)(v0 + 216) = v11;
      *(_OWORD *)(v0 + 232) = v10;
      long long v12 = v8[6];
      long long v14 = v8[3];
      long long v13 = v8[4];
      *(_OWORD *)(v0 + 280) = v8[5];
      *(_OWORD *)(v0 + 296) = v12;
      *(_OWORD *)(v0 + 248) = v14;
      *(_OWORD *)(v0 + 264) = v13;
      long long v15 = v8[10];
      long long v17 = v8[7];
      long long v16 = v8[8];
      *(_OWORD *)(v0 + 344) = v8[9];
      *(_OWORD *)(v0 + 360) = v15;
      *(_OWORD *)(v0 + 312) = v17;
      *(_OWORD *)(v0 + 328) = v16;
      sub_25B114244((uint64_t)v8);
      sub_25B290AA0();
      *(void *)(v0 + 624) = 0;
      *(void *)(v0 + 632) = 0xE000000000000000;
      sub_25B290650();
      long long v18 = *(_OWORD *)(v0 + 344);
      *(_OWORD *)(v0 + 504) = *(_OWORD *)(v0 + 328);
      *(_OWORD *)(v0 + 520) = v18;
      *(_OWORD *)(v0 + 536) = *(_OWORD *)(v0 + 360);
      long long v19 = *(_OWORD *)(v0 + 280);
      *(_OWORD *)(v0 + 440) = *(_OWORD *)(v0 + 264);
      *(_OWORD *)(v0 + 456) = v19;
      long long v20 = *(_OWORD *)(v0 + 312);
      *(_OWORD *)(v0 + 472) = *(_OWORD *)(v0 + 296);
      *(_OWORD *)(v0 + 488) = v20;
      long long v21 = *(_OWORD *)(v0 + 216);
      *(_OWORD *)(v0 + 376) = *(_OWORD *)(v0 + 200);
      *(_OWORD *)(v0 + 392) = v21;
      long long v22 = *(_OWORD *)(v0 + 248);
      *(_OWORD *)(v0 + 408) = *(_OWORD *)(v0 + 232);
      *(_OWORD *)(v0 + 424) = v22;
      sub_25B290B90();
      sub_25B290650();
      type metadata accessor for ZoneVersion();
      swift_bridgeObjectRetain();
      sub_25B2904E0();
      sub_25B290650();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B11677C((uint64_t)v8);
      *(void *)(v0 + 656) = sub_25B288E98(*(void *)(v0 + 624), *(void *)(v0 + 632), &v44);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B11677C((uint64_t)v8);
      sub_25B11677C((uint64_t)v8);
      _os_log_impl(&dword_25B107000, v5, v6, "Zone advertiser advertising %{public}s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v42, -1, -1);
      MEMORY[0x261160890](v9, -1, -1);
    }
    else
    {
      sub_25B11677C(*(void *)(v0 + 672));
      sub_25B11677C((uint64_t)v8);
    }

    long long v25 = *(long long **)(v0 + 672);
    long long v26 = v25[3];
    long long v28 = *v25;
    long long v27 = v25[1];
    *(_OWORD *)(v0 + 48) = v25[2];
    *(_OWORD *)(v0 + 64) = v26;
    *(_OWORD *)(v0 + 16) = v28;
    *(_OWORD *)(v0 + 32) = v27;
    long long v29 = v25[7];
    long long v31 = v25[4];
    long long v30 = v25[5];
    *(_OWORD *)(v0 + 112) = v25[6];
    *(_OWORD *)(v0 + 128) = v29;
    *(_OWORD *)(v0 + 80) = v31;
    *(_OWORD *)(v0 + 96) = v30;
    long long v33 = v25[9];
    long long v32 = v25[10];
    long long v34 = v25[8];
    *(void *)(v0 + 192) = *((void *)v25 + 22);
    *(_OWORD *)(v0 + 160) = v33;
    *(_OWORD *)(v0 + 176) = v32;
    *(_OWORD *)(v0 + 144) = v34;
    uint64_t v35 = v2 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_key;
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 744) = v36;
    unint64_t v37 = sub_25B1188D8();
    unint64_t v38 = sub_25B116904();
    sub_25B11E1D4();
    void *v36 = v0;
    v36[1] = sub_25B11D618;
    uint64_t v39 = *(void *)(v0 + 696);
    uint64_t v40 = *(void *)(v0 + 688);
    uint64_t v41 = *(void *)(v0 + 720);
    return MEMORY[0x270F47998](v41, v39, v0 + 16, v35, v40, &type metadata for ZoneVersionAdvertisement, v37, v38);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    long long v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
}

uint64_t sub_25B11D618()
{
  uint64_t v2 = *v1;
  (*v1)[94] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_25B11D914;
  }
  else
  {
    uint64_t v4 = v2[90];
    uint64_t v5 = v2[89];
    uint64_t v6 = v2[88];
    sub_25B116DE0(v2[87], &qword_26A4D9258);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_25B11D768;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_25B11D768()
{
  if (*((unsigned char *)v0 + 760) == 1)
  {
    uint64_t v1 = v0[91];
    uint64_t v2 = *(NSObject **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = sub_25B11E228;
    *(void *)(v3 + 24) = v1;
    v0[73] = sub_25B1168E4;
    v0[74] = v3;
    v0[69] = MEMORY[0x263EF8330];
    v0[70] = 1107296256;
    v0[71] = sub_25B10D184;
    v0[72] = &block_descriptor_73;
    uint64_t v4 = _Block_copy(v0 + 69);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v2, v4);
    swift_release();
    _Block_release(v4);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  swift_release();
LABEL_5:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_25B11D914()
{
  long long v16 = v0;
  uint64_t v1 = (void *)v0[94];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_25B290160();
  os_log_type_t v5 = sub_25B290880();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[94];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    v0[81] = v6;
    id v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
    uint64_t v10 = sub_25B290600();
    v0[80] = sub_25B288E98(v10, v11, &v15);
    sub_25B2909C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_25B107000, v4, v5, "Zone advertiser failed to advertise: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v8, -1, -1);
    MEMORY[0x261160890](v7, -1, -1);

    swift_release();
  }
  else
  {
    long long v12 = (void *)v0[94];
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  long long v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_25B11DB24(uint64_t a1)
{
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B290190();
  __swift_project_value_buffer(v2, (uint64_t)qword_26A4EB150);
  id v3 = sub_25B290160();
  os_log_type_t v4 = sub_25B2908A0();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v5 = 0;
    _os_log_impl(&dword_25B107000, v3, v4, "Zone advertiser advertisement task is shutting down", v5, 2u);
    MEMORY[0x261160890](v5, -1, -1);
  }

  uint64_t v6 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementTask;
  if (*(void *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementTask))
  {
    swift_retain();
    sub_25B2907B0();
    swift_release();
  }
  *(void *)(a1 + v6) = 0;
  return swift_release();
}

uint64_t sub_25B11DC60()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25B11DCA8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_25B1165D0;
  return sub_25B11A860(a1, v4, v5, v7, v6);
}

void sub_25B11DD68(unsigned char *a1@<X8>)
{
  sub_25B11BCF0(*(void *)(v1 + 16), a1);
}

uint64_t sub_25B11DD84()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9260);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_25B11DE54()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9260);
  return sub_25B11C42C();
}

uint64_t sub_25B11DEBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  unint64_t v3 = *(void *)(a1 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B111FF0(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25B11DF60()
{
  uint64_t v1 = sub_25B290110();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(v0 + 160);
  if (v5 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v0 + 152), v5);
  }
  uint64_t v6 = (v3 + 232) & ~v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v6, v1);
  return MEMORY[0x270FA0238](v0, v4 + v6 + 1, v3 | 7);
}

uint64_t sub_25B11E098(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_25B290110() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)(v1 + 5);
  uint64_t v10 = v1[28];
  uint64_t v11 = (uint64_t)v1 + v5;
  char v12 = *((unsigned char *)v1 + v5 + *(void *)(v4 + 64));
  long long v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *long long v13 = v2;
  v13[1] = sub_25B11E280;
  return sub_25B11D064(a1, v6, v7, v8, v9, v10, v11, v12);
}

unint64_t sub_25B11E1D4()
{
  unint64_t result = qword_26A4D97B8;
  if (!qword_26A4D97B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D97B8);
  }
  return result;
}

uint64_t sub_25B11E228()
{
  return sub_25B11DB24(v0);
}

uint64_t sub_25B11E230()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_25B11E240(unsigned char *a1@<X8>)
{
}

uint64_t static RecordDestination.== infix(_:_:)(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a1)
  {
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = swift_bridgeObjectRetain();
      char v4 = sub_25B11E308(v3, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v4 & 1;
    }
    return 0;
  }
  if (v2) {
    return 0;
  }
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t sub_25B11E308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      long long v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      long long v31 = v7;
      long long v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      long long v30 = (void (**)(char *, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        long long v19 = v9;
        long long v20 = v9;
        long long v21 = v32;
        v32(v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        uint64_t v9 = v20;
        sub_25B11FEE0((unint64_t *)&qword_26A4DA8D0);
        char v23 = sub_25B290580();
        long long v24 = *v30;
        (*v30)(v17, v4);
        v24(v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t RecordDestination.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (!*v1) {
    return sub_25B291220();
  }
  sub_25B291220();
  return sub_25B11F318(a1, v3);
}

uint64_t sub_25B11E584()
{
  return 0;
}

uint64_t sub_25B11E590@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_25B11E5C0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_25B11E5CC(uint64_t a1)
{
  unint64_t v2 = sub_25B11F5CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B11E608(uint64_t a1)
{
  unint64_t v2 = sub_25B11F5CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B11E644()
{
  if (*v0) {
    return 7105633;
  }
  else {
    return 0x697463656C6C6F63;
  }
}

uint64_t sub_25B11E67C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B11FDF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B11E6A4(uint64_t a1)
{
  unint64_t v2 = sub_25B11F578();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B11E6E0(uint64_t a1)
{
  unint64_t v2 = sub_25B11F578();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B11E71C()
{
  return 1;
}

uint64_t sub_25B11E724()
{
  return sub_25B291260();
}

uint64_t sub_25B11E768()
{
  return sub_25B291220();
}

uint64_t sub_25B11E790()
{
  return sub_25B291260();
}

uint64_t sub_25B11E7D0()
{
  return 12383;
}

uint64_t sub_25B11E7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25B290FB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25B11E85C(uint64_t a1)
{
  unint64_t v2 = sub_25B11F620();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B11E898(uint64_t a1)
{
  unint64_t v2 = sub_25B11F620();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RecordDestination.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA5C0);
  uint64_t v18 = *(void *)(v3 - 8);
  uint64_t v19 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v17 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA5C8);
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA5D0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B11F578();
  sub_25B291290();
  if (v12)
  {
    char v23 = 0;
    sub_25B11F620();
    sub_25B290D10();
    uint64_t v22 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AA8);
    sub_25B11F674((unint64_t *)&qword_26A4D9AB0, (unint64_t *)&unk_26A4D9210);
    uint64_t v13 = v21;
    sub_25B290D60();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v13);
  }
  else
  {
    char v24 = 1;
    sub_25B11F5CC();
    uint64_t v15 = v17;
    sub_25B290D10();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t RecordDestination.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_25B291210();
  sub_25B291220();
  if (v1) {
    sub_25B11F318((uint64_t)v3, v1);
  }
  return sub_25B291260();
}

uint64_t RecordDestination.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  long long v25 = a2;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA5F0);
  uint64_t v26 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA5F8);
  uint64_t v24 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA600);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  long long v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_25B11F578();
  uint64_t v13 = v28;
  sub_25B291280();
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v14 = v26;
  uint64_t v28 = v9;
  uint64_t v15 = sub_25B290CF0();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v17 = sub_25B290AF0();
    swift_allocError();
    uint64_t v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F360);
    *uint64_t v19 = &type metadata for RecordDestination;
    sub_25B290C50();
    sub_25B290AD0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x263F8DCB0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v8);
LABEL_7:
    uint64_t v20 = (uint64_t)v27;
    return __swift_destroy_boxed_opaque_existential_1(v20);
  }
  if (*(unsigned char *)(v15 + 32))
  {
    char v31 = 1;
    sub_25B11F5CC();
    sub_25B290C40();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v8);
    uint64_t v16 = 0;
  }
  else
  {
    char v30 = 0;
    sub_25B11F620();
    sub_25B290C40();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AA8);
    sub_25B11F674(&qword_26A4DA608, &qword_26A4D9228);
    sub_25B290CC0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v8);
    uint64_t v16 = v29;
  }
  uint64_t v20 = (uint64_t)v27;
  *long long v25 = v16;
  return __swift_destroy_boxed_opaque_existential_1(v20);
}

uint64_t sub_25B11F130@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RecordDestination.init(from:)(a1, a2);
}

uint64_t sub_25B11F148(void *a1)
{
  return RecordDestination.encode(to:)(a1);
}

uint64_t sub_25B11F160(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a1)
  {
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = swift_bridgeObjectRetain();
      char v4 = sub_25B11E308(v3, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v4 & 1;
    }
    return 0;
  }
  if (v2) {
    return 0;
  }
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t sub_25B11F1E4()
{
  uint64_t v1 = *v0;
  sub_25B291210();
  sub_25B291220();
  if (v1) {
    sub_25B11F318((uint64_t)v3, v1);
  }
  return sub_25B291260();
}

uint64_t sub_25B11F248(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (!*v1) {
    return sub_25B291220();
  }
  sub_25B291220();
  return sub_25B11F318(a1, v3);
}

uint64_t sub_25B11F2B8()
{
  uint64_t v1 = *v0;
  sub_25B291210();
  sub_25B291220();
  if (v1) {
    sub_25B11F318((uint64_t)v3, v1);
  }
  return sub_25B291260();
}

uint64_t sub_25B11F318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v27 = a1;
  sub_25B291220();
  if (v11)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    unint64_t v15 = v12 + 40;
    uint64_t v16 = v12;
    uint64_t v17 = (uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    long long v25 = v13;
    uint64_t v18 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v26 = v16;
    uint64_t v19 = *(void *)(v16 + 56);
    unint64_t v22 = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = v19;
    while (1)
    {
      v25(v10, v14, v4);
      uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v10, 0, 1, v4);
      uint64_t result = (*v17)(v10, 1, v4);
      if (result == 1) {
        break;
      }
      (*v24)(v7, v10, v4);
      sub_25B11FEE0(&qword_26A4D9220);
      sub_25B290540();
      (*v18)(v7, v4);
      v14 += v23;
      if (!--v11) {
        return v20(v10, 1, 1, v4);
      }
    }
  }
  else
  {
    uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v20(v10, 1, 1, v4);
  }
  return result;
}

unint64_t sub_25B11F578()
{
  unint64_t result = qword_26A4DA5D8;
  if (!qword_26A4DA5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA5D8);
  }
  return result;
}

unint64_t sub_25B11F5CC()
{
  unint64_t result = qword_26A4DA5E0;
  if (!qword_26A4DA5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA5E0);
  }
  return result;
}

unint64_t sub_25B11F620()
{
  unint64_t result = qword_26A4DA5E8;
  if (!qword_26A4DA5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA5E8);
  }
  return result;
}

uint64_t sub_25B11F674(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4D9AA8);
    sub_25B11FEE0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25B11F6F8()
{
  unint64_t result = qword_26A4DA610;
  if (!qword_26A4DA610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA610);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for RecordDestination(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for RecordDestination()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for RecordDestination(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for RecordDestination(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordDestination(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RecordDestination(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_25B11F8A4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_25B11F8BC(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for RecordDestination()
{
  return &type metadata for RecordDestination;
}

unsigned char *storeEnumTagSinglePayload for RecordDestination.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B11F9B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordDestination.CodingKeys()
{
  return &type metadata for RecordDestination.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RecordDestination.CollectionCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for RecordDestination.CollectionCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B11FAE0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B11FB08()
{
  return 0;
}

ValueMetadata *type metadata accessor for RecordDestination.CollectionCodingKeys()
{
  return &type metadata for RecordDestination.CollectionCodingKeys;
}

ValueMetadata *type metadata accessor for RecordDestination.AllCodingKeys()
{
  return &type metadata for RecordDestination.AllCodingKeys;
}

unint64_t sub_25B11FB34()
{
  unint64_t result = qword_26A4DA618;
  if (!qword_26A4DA618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA618);
  }
  return result;
}

unint64_t sub_25B11FB8C()
{
  unint64_t result = qword_26A4DA620;
  if (!qword_26A4DA620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA620);
  }
  return result;
}

unint64_t sub_25B11FBE4()
{
  unint64_t result = qword_26A4DA628;
  if (!qword_26A4DA628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA628);
  }
  return result;
}

unint64_t sub_25B11FC3C()
{
  unint64_t result = qword_26A4DA630;
  if (!qword_26A4DA630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA630);
  }
  return result;
}

unint64_t sub_25B11FC94()
{
  unint64_t result = qword_26A4DA638;
  if (!qword_26A4DA638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA638);
  }
  return result;
}

unint64_t sub_25B11FCEC()
{
  unint64_t result = qword_26A4DA640;
  if (!qword_26A4DA640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA640);
  }
  return result;
}

unint64_t sub_25B11FD44()
{
  unint64_t result = qword_26A4DA648;
  if (!qword_26A4DA648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA648);
  }
  return result;
}

unint64_t sub_25B11FD9C()
{
  unint64_t result = qword_26A4DA650;
  if (!qword_26A4DA650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA650);
  }
  return result;
}

uint64_t sub_25B11FDF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697463656C6C6F63 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7105633 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25B11FEE0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25B290080();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double static DefaultSuspensionPolicy.defaultDiscardInterval.getter()
{
  return 1209600.0;
}

double static DefaultSuspensionPolicy.defaultUnpairInterval.getter()
{
  return 15552000.0;
}

ReplicatorEngine::DefaultSuspensionPolicy __swiftcall DefaultSuspensionPolicy.init(discardInterval:unpairInterval:)(Swift::Double discardInterval, Swift::Double unpairInterval)
{
  *BOOL v2 = discardInterval;
  v2[1] = unpairInterval;
  result.unpairInterval = unpairInterval;
  result.discardInterval = discardInterval;
  return result;
}

uint64_t DefaultSuspensionPolicy.discardDate(for:hasRecordsFromRemoteDevice:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + *(int *)(type metadata accessor for PairingRelationship() + 32);
  uint64_t v6 = *(void *)v5;
  unint64_t v7 = *(void *)(v5 + 8);
  if (v7)
  {
    sub_25B120090(*(void *)v5, *(void *)(v5 + 8));
    sub_25B1200A4(v6, v7);
    sub_25B1200A4(0, 0);
  }
  else
  {
    sub_25B1200A4(*(void *)v5, 0);
    sub_25B1200A4(0, 0);
    if (a2)
    {
      sub_25B28FF60();
      uint64_t v8 = sub_25B290000();
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
      uint64_t v10 = v8;
      uint64_t v11 = a3;
      uint64_t v12 = 0;
      goto LABEL_6;
    }
  }
  uint64_t v13 = sub_25B290000();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  uint64_t v10 = v13;
  uint64_t v11 = a3;
  uint64_t v12 = 1;
LABEL_6:
  return v9(v11, v12, 1, v10);
}

uint64_t sub_25B120090(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_25B1200A4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t DefaultSuspensionPolicy.unpairDate(for:hasRecordsFromRemoteDevice:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for PairingRelationship() + 32);
  uint64_t v4 = *(void *)v3;
  unint64_t v5 = *(void *)(v3 + 8);
  if (v5 == 2)
  {
    sub_25B1200A4(*(void *)v3, 2uLL);
    sub_25B1200A4(0, 2uLL);
    sub_25B28FF60();
    uint64_t v6 = sub_25B290000();
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a2;
    uint64_t v10 = 0;
  }
  else
  {
    sub_25B120090(*(void *)v3, *(void *)(v3 + 8));
    sub_25B1200A4(v4, v5);
    sub_25B1200A4(0, 2uLL);
    uint64_t v11 = sub_25B290000();
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a2;
    uint64_t v10 = 1;
  }
  return v7(v9, v10, 1, v8);
}

uint64_t sub_25B1201E8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + *(int *)(type metadata accessor for PairingRelationship() + 32);
  uint64_t v6 = *(void *)v5;
  unint64_t v7 = *(void *)(v5 + 8);
  if (v7)
  {
    sub_25B120090(*(void *)v5, *(void *)(v5 + 8));
    sub_25B1200A4(v6, v7);
    sub_25B1200A4(0, 0);
  }
  else
  {
    sub_25B1200A4(*(void *)v5, 0);
    sub_25B1200A4(0, 0);
    if (a2)
    {
      sub_25B28FF60();
      uint64_t v8 = sub_25B290000();
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
      uint64_t v10 = v8;
      uint64_t v11 = a3;
      uint64_t v12 = 0;
      goto LABEL_6;
    }
  }
  uint64_t v13 = sub_25B290000();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  uint64_t v10 = v13;
  uint64_t v11 = a3;
  uint64_t v12 = 1;
LABEL_6:
  return v9(v11, v12, 1, v10);
}

uint64_t sub_25B120328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for PairingRelationship() + 32);
  uint64_t v4 = *(void *)v3;
  unint64_t v5 = *(void *)(v3 + 8);
  if (v5 == 2)
  {
    sub_25B1200A4(*(void *)v3, 2uLL);
    sub_25B1200A4(0, 2uLL);
    sub_25B28FF60();
    uint64_t v6 = sub_25B290000();
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a2;
    uint64_t v10 = 0;
  }
  else
  {
    sub_25B120090(*(void *)v3, *(void *)(v3 + 8));
    sub_25B1200A4(v4, v5);
    sub_25B1200A4(0, 2uLL);
    uint64_t v11 = sub_25B290000();
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a2;
    uint64_t v10 = 1;
  }
  return v7(v9, v10, 1, v8);
}

ValueMetadata *type metadata accessor for DefaultSuspensionPolicy()
{
  return &type metadata for DefaultSuspensionPolicy;
}

uint64_t sub_25B12046C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    unint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

double static Replicator.Constants.protocolVersion.getter@<D0>(_OWORD *a1@<X8>)
{
  *(void *)&double result = 15;
  *a1 = xmmword_25B293210;
  return result;
}

uint64_t sub_25B1204D4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v0 - 8);
  BOOL v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_25B290080();
  __swift_allocate_value_buffer(v3, qword_26A4EB1D8);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_26A4EB1D8);
  sub_25B290010();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

unint64_t sub_25B120604()
{
  unint64_t result = sub_25B227934((uint64_t)&unk_2708D3C98);
  qword_26A4EB1F0 = result;
  return result;
}

uint64_t sub_25B12063C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v15 = *a4;
  uint64_t v14 = a4[1];
  if (MEMORY[0x261160990](v7 + 16))
  {
    uint64_t v21 = a6;
    uint64_t v16 = *(void *)(v7 + 24);
    uint64_t ObjectType = swift_getObjectType();
    v22[0] = v15;
    v22[1] = v14;
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 24))(a1, a2, a3, v22, a5, v21, ObjectType, v16);
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v19 = type metadata accessor for PrioritizedRecordValue();
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    return v20(a7, 1, 1, v19);
  }
}

uint64_t sub_25B120774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = MEMORY[0x261160990](v5 + 16);
  if (result)
  {
    uint64_t v12 = *(void *)(v5 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 32))(a1, a2, a3, a4, a5, ObjectType, v12);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_25B120834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = MEMORY[0x261160990](v4 + 16);
  if (result)
  {
    uint64_t v10 = *(void *)(v4 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 40))(a1, a2, a3, a4, ObjectType, v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_25B1208EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned char *a6@<X8>)
{
  uint64_t result = MEMORY[0x261160990](v6 + 16);
  if (result)
  {
    uint64_t v14 = *(void *)(v6 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 48))(a1, a2, a3, a4, a5, ObjectType, v14);
    return swift_unknownObjectRelease();
  }
  else
  {
    *a6 = 0;
  }
  return result;
}

uint64_t sub_25B1209C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!MEMORY[0x261160990](v4 + 16)) {
    return sub_25B290640();
  }
  uint64_t v9 = *(void *)(v4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a3, a4, ObjectType, v9);
  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_25B120A88()
{
  sub_25B1802A8(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_25B120AC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MEMORY[0x261160990](v1 + 16);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  else
  {
    *a1 = 0;
  }
  return result;
}

uint64_t sub_25B120B48@<X0>(void *a1@<X8>)
{
  uint64_t result = MEMORY[0x261160990](v1 + 16);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
  }
  return result;
}

void Replicator.deviceType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 96);
}

__n128 Replicator.screenDescriptor.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 136);
  char v3 = *(unsigned char *)(v1 + 137);
  __n128 result = *(__n128 *)(v1 + 104);
  long long v5 = *(_OWORD *)(v1 + 120);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 33) = v3;
  return result;
}

uint64_t sub_25B120C10()
{
  if (*(void *)(v0 + 152))
  {
    uint64_t v1 = *(void *)(v0 + 152);
  }
  else
  {
    uint64_t v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE0);
    sub_25B116394(&qword_26A4D9F48, &qword_26A4D9EE0);
    uint64_t v1 = sub_25B290240();
    *(void *)(v2 + 152) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_25B120CC4(uint64_t a1)
{
  *(void *)(v1 + 152) = a1;
  return swift_release();
}

uint64_t (*sub_25B120CD4(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = sub_25B120C10();
  return sub_25B120D1C;
}

uint64_t sub_25B120D1C(void *a1)
{
  *(void *)(a1[1] + 152) = *a1;
  return swift_release();
}

uint64_t sub_25B120D2C()
{
  if (*(void *)(v0 + 168))
  {
    uint64_t v1 = *(void *)(v0 + 168);
  }
  else
  {
    uint64_t v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99E8);
    sub_25B116394(&qword_26A4DA658, &qword_26A4D99E8);
    uint64_t v1 = sub_25B290240();
    *(void *)(v2 + 168) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_25B120DE0(uint64_t a1)
{
  *(void *)(v1 + 168) = a1;
  return swift_release();
}

uint64_t (*sub_25B120DF0(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = sub_25B120D2C();
  return sub_25B120E38;
}

uint64_t sub_25B120E38(void *a1)
{
  *(void *)(a1[1] + 168) = *a1;
  return swift_release();
}

uint64_t sub_25B120E48@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_25B10FF48(v1 + 192, a1);
}

uint64_t sub_25B120E94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25B290080();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t (*sub_25B120EFC())()
{
  return j__swift_endAccess;
}

uint64_t sub_25B120F54()
{
  return sub_25B12C724();
}

void sub_25B120F6C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 600);
}

uint64_t sub_25B120F78(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(NSObject **)(v2 + 232);
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_25B1212E4;
  *(void *)(v6 + 24) = v5;
  v9[4] = sub_25B1168E4;
  v9[5] = v6;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  void v9[2] = sub_25B10D184;
  v9[3] = &block_descriptor_2;
  uint64_t v7 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B1210D4(char a1, uint64_t a2)
{
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_25B290190();
  __swift_project_value_buffer(v4, (uint64_t)qword_26A4EB150);
  uint64_t v5 = sub_25B290160();
  os_log_type_t v6 = sub_25B2908A0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67240192;
    sub_25B2909C0();
    _os_log_impl(&dword_25B107000, v5, v6, "Replicator state changed to enabled: %{BOOL,public}d", v7, 8u);
    MEMORY[0x261160890](v7, -1, -1);
  }

  *(unsigned char *)(a2 + 600) = a1 & 1;
  swift_beginAccess();
  uint64_t v8 = *(void *)(a2 + 368);
  uint64_t v9 = *(void *)(a2 + 376);
  __swift_mutable_project_boxed_opaque_existential_1(a2 + 344, v8);
  (*(void (**)(void, uint64_t, uint64_t))(v9 + 24))(a1 & 1, v8, v9);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v10 = *(void *)(a2 + 216);
  uint64_t v11 = *(void *)(a2 + 224);
  __swift_mutable_project_boxed_opaque_existential_1(a2 + 192, v10);
  (*(void (**)(void, uint64_t))(*(void *)(v11 + 16) + 32))(a1 & 1, v10);
  uint64_t result = swift_endAccess();
  if ((a1 & 1) == 0) {
    return sub_25B121318();
  }
  return result;
}

uint64_t sub_25B1212AC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B1212E4()
{
  return sub_25B1210D4(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25B1212F0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_25B121318()
{
  uint64_t v1 = type metadata accessor for PairingRelationship();
  uint64_t v46 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EF0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v10 = sub_25B290410();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (int64_t *)((char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v0 + 232);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F8F0E0], v10);
  id v15 = v14;
  char v16 = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if ((v16 & 1) == 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v48 = v0;
  swift_beginAccess();
  uint64_t v47 = v0 + 192;
  sub_25B10FF48(v0 + 192, (uint64_t)v50);
  uint64_t v19 = v51;
  uint64_t v18 = v52;
  __swift_project_boxed_opaque_existential_1(v50, v51);
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v18 + 8) + 8) + 32))(v19);
  uint64_t v21 = sub_25B176138(v20, (uint64_t (*)(char *, unint64_t, uint64_t))sub_25B176DC4);
  swift_bridgeObjectRelease();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  int64_t v22 = 0;
  uint64_t v23 = *(void *)(v21 + 64);
  uint64_t v44 = v21 + 64;
  uint64_t v24 = 1 << *(unsigned char *)(v21 + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & v23;
  int64_t v45 = (unint64_t)(v24 + 63) >> 6;
  int64_t v43 = v45 - 1;
  if ((v25 & v23) == 0) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v30 = __clz(__rbit64(v26));
  v26 &= v26 - 1;
  unint64_t v31 = v30 | (v22 << 6);
  while (2)
  {
    uint64_t v32 = *(void *)(v21 + 48);
    uint64_t v33 = sub_25B290080();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v7, v32 + *(void *)(*(void *)(v33 - 8) + 72) * v31, v33);
    uint64_t v34 = *(void *)(v21 + 56) + *(void *)(v46 + 72) * v31;
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
    sub_25B1806D0(v34, (uint64_t)&v7[*(int *)(v35 + 48)], (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v7, 0, 1, v35);
    while (1)
    {
      sub_25B187574((uint64_t)v7, (uint64_t)v9, &qword_26A4D9EF0);
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v9, 1, v40) == 1)
      {
        swift_release();
        sub_25B10FF48(v47, (uint64_t)v50);
        uint64_t v42 = v51;
        uint64_t v41 = v52;
        __swift_project_boxed_opaque_existential_1(v50, v51);
        uint64_t v49 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v41 + 8) + 8) + 32))(v42);
        sub_25B290210();
        swift_bridgeObjectRelease();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      }
      sub_25B18095C((uint64_t)&v9[*(int *)(v40 + 48)], (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      sub_25B130988((uint64_t)v3);
      sub_25B10FF48(v47, (uint64_t)v50);
      uint64_t v28 = v51;
      uint64_t v27 = v52;
      __swift_project_boxed_opaque_existential_1(v50, v51);
      (*(void (**)(char *, uint64_t))(*(void *)(v27 + 16) + 96))(v3, v28);
      sub_25B180A5C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      uint64_t v29 = sub_25B290080();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v9, v29);
      if (v26) {
        goto LABEL_7;
      }
LABEL_9:
      int64_t v36 = v22 + 1;
      if (__OFADD__(v22, 1))
      {
        __break(1u);
        goto LABEL_30;
      }
      if (v36 < v45)
      {
        unint64_t v37 = *(void *)(v44 + 8 * v36);
        if (v37) {
          goto LABEL_12;
        }
        int64_t v38 = v22 + 2;
        ++v22;
        if (v36 + 1 < v45)
        {
          unint64_t v37 = *(void *)(v44 + 8 * v38);
          if (v37) {
            goto LABEL_15;
          }
          int64_t v22 = v36 + 1;
          if (v36 + 2 < v45)
          {
            unint64_t v37 = *(void *)(v44 + 8 * (v36 + 2));
            if (v37)
            {
              v36 += 2;
              goto LABEL_12;
            }
            int64_t v38 = v36 + 3;
            int64_t v22 = v36 + 2;
            if (v36 + 3 < v45) {
              break;
            }
          }
        }
      }
LABEL_26:
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v7, 1, 1, v39);
      unint64_t v26 = 0;
    }
    unint64_t v37 = *(void *)(v44 + 8 * v38);
    if (v37)
    {
LABEL_15:
      int64_t v36 = v38;
LABEL_12:
      unint64_t v26 = (v37 - 1) & v37;
      unint64_t v31 = __clz(__rbit64(v37)) + (v36 << 6);
      int64_t v22 = v36;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v36 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v36 >= v45)
    {
      int64_t v22 = v43;
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v44 + 8 * v36);
    ++v38;
    if (v37) {
      goto LABEL_12;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void (*sub_25B121988(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x48uLL);
  *a1 = v4;
  uint64_t v5 = *(void *)(v1 + 232);
  void v4[6] = v2;
  v4[7] = v5;
  sub_25B290900();
  *((unsigned char *)v4 + 64) = *(unsigned char *)v4;
  return sub_25B121A24;
}

void sub_25B121A24(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  char v3 = *(unsigned char *)(*(void *)a1 + 64);
  uint64_t v5 = *(void *)(*(void *)a1 + 48);
  uint64_t isEscapingClosureAtFileLocation = *(void *)(*(void *)a1 + 56);
  if (a2)
  {
    uint64_t v6 = swift_allocObject();
    *(unsigned char *)(v6 + 16) = v3;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = swift_allocObject();
    char v3 = v7;
    *(void *)(v7 + 16) = sub_25B1877D4;
    *(void *)(v7 + 24) = v6;
    v2[4] = sub_25B117398;
    v2[5] = v7;
    *uint64_t v2 = MEMORY[0x263EF8330];
    v2[1] = 1107296256;
    v2[2] = sub_25B10D184;
    v2[3] = &block_descriptor_15;
    uint64_t v8 = _Block_copy(v2);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)isEscapingClosureAtFileLocation, v8);
    _Block_release(v8);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_25B1877D4;
  *(void *)(v10 + 24) = v9;
  v2[4] = sub_25B117398;
  v2[5] = v10;
  *uint64_t v2 = MEMORY[0x263EF8330];
  v2[1] = 1107296256;
  v2[2] = sub_25B10D184;
  v2[3] = &block_descriptor_26;
  uint64_t v11 = _Block_copy(v2);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)isEscapingClosureAtFileLocation, v11);
  _Block_release(v11);
  char v12 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v12)
  {
    __break(1u);
    return;
  }
LABEL_5:
  free(v2);
}

uint64_t sub_25B121CA8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B121CB8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t Replicator.__allocating_init(syncService:metadataStore:replicationPolicy:suspensionPolicy:deviceType:screenDescriptor:zoneVersionAdvertiser:handshakeScheduler:pinnedIdentityManager:permittedRemoteDeviceTypes:personaMonitor:localDeviceIdentifier:activeWatchIDSIDProvider:reconciliationQueryingAttempts:reconciliationQueryingDelay:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, long long *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19)
{
  swift_allocObject();
  uint64_t v23 = sub_25B17AFD4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 1, a18, a19 & 1);
  swift_unknownObjectRelease();
  return v23;
}

uint64_t Replicator.init(syncService:metadataStore:replicationPolicy:suspensionPolicy:deviceType:screenDescriptor:zoneVersionAdvertiser:handshakeScheduler:pinnedIdentityManager:permittedRemoteDeviceTypes:personaMonitor:localDeviceIdentifier:activeWatchIDSIDProvider:reconciliationQueryingAttempts:reconciliationQueryingDelay:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, long long *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19)
{
  uint64_t v19 = sub_25B17AFD4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 1, a18, a19 & 1);
  swift_unknownObjectRelease();
  return v19;
}

uint64_t sub_25B121E2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290320();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_25B290360();
  uint64_t v6 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v0 + 232);
  uint64_t v28 = sub_25B17B78C;
  uint64_t v29 = v0;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  unint64_t v26 = sub_25B10F584;
  uint64_t v27 = &block_descriptor_29;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_retain();
  sub_25B290340();
  v22[0] = MEMORY[0x263F8EE78];
  sub_25B1875E0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v8, v5, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v21);
  swift_release();
  uint64_t v10 = *(void *)(v0 + 184);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
  sub_25B10FF48(v0 + 16, (uint64_t)&aBlock);
  uint64_t active = type metadata accessor for ActiveWatchPairingEnforcer();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = sub_25B17AEB0(v1, &aBlock, v13);
  uint64_t v27 = (void *)active;
  uint64_t v28 = (uint64_t (*)())&off_2708D6FF8;
  *(void *)&long long aBlock = v14;
  swift_beginAccess();
  swift_retain();
  sub_25B185B64((uint64_t)&aBlock, v1 + 56, &qword_26A4D9DE8);
  swift_endAccess();
  sub_25B187628(v1 + 56, (uint64_t)&aBlock, &qword_26A4D9DE8);
  if (!v27) {
    return sub_25B116DE0((uint64_t)&aBlock, &qword_26A4D9DE8);
  }
  sub_25B10FF48((uint64_t)&aBlock, (uint64_t)v22);
  sub_25B116DE0((uint64_t)&aBlock, &qword_26A4D9DE8);
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v16 + 16);
  swift_retain();
  v18(sub_25B17B7CC, v17, v15, v16);
  swift_release_n();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t sub_25B12224C(uint64_t a1)
{
  uint64_t v2 = a1 + 192;
  swift_beginAccess();
  sub_25B10FF48(v2, (uint64_t)v16);
  uint64_t v3 = v17;
  uint64_t v4 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v4 + 8) + 8) + 32))(v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  sub_25B1224B0();
  sub_25B122B58();
  sub_25B122E6C();
  sub_25B12386C();
  sub_25B124070();
  sub_25B1253D4();
  sub_25B128800();
  sub_25B128CA0();
  sub_25B1290FC(2);
  sub_25B12946C();
  uint64_t v6 = *(void *)(a1 + 184);
  uint64_t ObjectType = swift_getObjectType();
  v16[0] = *(void *)(a1 + 144);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE0);
  sub_25B116394(&qword_26A4D9F48, &qword_26A4D9EE0);
  uint64_t v8 = sub_25B290240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 64))(v8, ObjectType, v6);
  uint64_t v9 = *(unsigned __int8 *)(a1 + 600);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 368);
  uint64_t v11 = *(void *)(a1 + 376);
  __swift_mutable_project_boxed_opaque_existential_1(a1 + 344, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(v9, v10, v11);
  swift_endAccess();
  if (*(unsigned char *)(a1 + 600))
  {
    sub_25B10FF48(v2, (uint64_t)v16);
    uint64_t v13 = v17;
    uint64_t v12 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v12 + 8) + 8) + 32))(v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    v16[0] = v5;
    sub_25B290210();
    LOBYTE(v12) = sub_25B1B8748(v5, v14);
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      v16[0] = v14;
      sub_25B290210();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_25B121318();
  }
}

uint64_t sub_25B1224B0()
{
  uint64_t v1 = v0;
  uint64_t v61 = sub_25B290080();
  uint64_t v2 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  long long v60 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v4 = MEMORY[0x270FA5388](v59);
  long long v58 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  long long v57 = (char *)&v49 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v56 = (char *)&v49 - v8;
  uint64_t v9 = sub_25B290410();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v1 + 232);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F8F0E0], v9);
  id v14 = v13;
  char v15 = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) == 0) {
    goto LABEL_25;
  }
  swift_beginAccess();
  sub_25B10FF48(v1 + 192, (uint64_t)v67);
  uint64_t v17 = v68;
  uint64_t v18 = v69;
  __swift_project_boxed_opaque_existential_1(v67, v68);
  long long v66 = xmmword_25B293210;
  MutableMetadataStoring.removeIncompatiblePairingRelationships(protocolVersion:)((unint64_t *)&v66, v17, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  uint64_t v54 = v1 + 192;
  sub_25B10FF48(v1 + 192, (uint64_t)v67);
  uint64_t v20 = v68;
  uint64_t v19 = v69;
  __swift_project_boxed_opaque_existential_1(v67, v68);
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v19 + 8) + 8) + 32))(v20);
  swift_retain();
  uint64_t v22 = sub_25B186DF0(v21, v1, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_25B17B80C);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  int64_t v23 = 0;
  uint64_t v24 = *(void *)(v22 + 64);
  uint64_t v49 = v22 + 64;
  uint64_t v62 = v22;
  uint64_t v25 = 1 << *(unsigned char *)(v22 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & v24;
  int64_t v50 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v53 = v2 + 16;
  uint64_t v52 = v2 + 32;
  uint64_t v51 = v2 + 8;
  uint64_t v55 = v2;
  uint64_t v28 = v61;
  while (1)
  {
    if (v27)
    {
      uint64_t v63 = (v27 - 1) & v27;
      int64_t v64 = v23;
      unint64_t v29 = __clz(__rbit64(v27)) | (v23 << 6);
      goto LABEL_6;
    }
    int64_t v45 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v45 >= v50) {
      return swift_release();
    }
    unint64_t v46 = *(void *)(v49 + 8 * v45);
    int64_t v47 = v23 + 1;
    if (!v46)
    {
      int64_t v47 = v23 + 2;
      if (v23 + 2 >= v50) {
        return swift_release();
      }
      unint64_t v46 = *(void *)(v49 + 8 * v47);
      if (!v46)
      {
        int64_t v47 = v23 + 3;
        if (v23 + 3 >= v50) {
          return swift_release();
        }
        unint64_t v46 = *(void *)(v49 + 8 * v47);
        if (!v46) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v63 = (v46 - 1) & v46;
    int64_t v64 = v47;
    unint64_t v29 = __clz(__rbit64(v46)) + (v47 << 6);
LABEL_6:
    uint64_t v30 = v62;
    unint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    uint64_t v32 = v56;
    v31(v56, *(void *)(v62 + 48) + *(void *)(v2 + 72) * v29, v28);
    uint64_t v33 = *(void *)(v30 + 56);
    uint64_t v34 = v33 + *(void *)(*(void *)(type metadata accessor for PairingRelationship() - 8) + 72) * v29;
    uint64_t v35 = v59;
    uint64_t v36 = (uint64_t)&v32[*(int *)(v59 + 48)];
    sub_25B1806D0(v34, v36, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v37 = (uint64_t)v57;
    uint64_t v38 = (uint64_t)&v57[*(int *)(v35 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v57, v32, v28);
    sub_25B18095C(v36, v38, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B10FF48(v54, (uint64_t)v67);
    uint64_t v39 = v68;
    uint64_t v65 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    uint64_t v40 = v58;
    uint64_t v41 = (uint64_t)&v58[*(int *)(v35 + 48)];
    v31(v58, v37, v28);
    sub_25B1806D0(v38, v41, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v42 = v60;
    v31(v60, v41, v28);
    sub_25B180A5C(v41, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v43 = v39;
    uint64_t v2 = v55;
    (*(void (**)(char *, uint64_t))(*(void *)(v65 + 16) + 96))(v42, v43);
    uint64_t v44 = *(void (**)(char *, uint64_t))(v2 + 8);
    v44(v42, v28);
    sub_25B116DE0(v37, &qword_26A4D9EE8);
    v44(v40, v28);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    unint64_t v27 = v63;
    int64_t v23 = v64;
  }
  uint64_t v48 = v23 + 4;
  if (v23 + 4 >= v50) {
    return swift_release();
  }
  unint64_t v46 = *(void *)(v49 + 8 * v48);
  if (v46)
  {
    int64_t v47 = v23 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v47 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      break;
    }
    if (v47 >= v50) {
      return swift_release();
    }
    unint64_t v46 = *(void *)(v49 + 8 * v47);
    ++v48;
    if (v46) {
      goto LABEL_21;
    }
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25B122B58()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B50);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9918);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0[51];
  uint64_t v9 = v0[52];
  __swift_project_boxed_opaque_existential_1(v0 + 48, v8);
  v14[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  uint64_t v10 = (void *)v0[29];
  id v15 = v10;
  uint64_t v11 = sub_25B2908E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
  id v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9980);
  sub_25B10CB64();
  sub_25B116394(&qword_26A4D9978, &qword_26A4D9980);
  sub_25B1875E0((unint64_t *)&unk_26A4D9B60, (void (*)(uint64_t))sub_25B10CB64);
  sub_25B290260();
  sub_25B116DE0((uint64_t)v3, (uint64_t *)&unk_26A4D9B50);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_25B116394(&qword_26A4D9910, &qword_26A4D9918);
  sub_25B290270();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_beginAccess();
  sub_25B2901F0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_25B122E6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290000();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v81 = (char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v79 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  long long v84 = (void (*)(char *, uint64_t))((char *)v79 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v79 - v12;
  MEMORY[0x270FA5388](v11);
  long long v87 = (char *)v79 - v14;
  uint64_t v15 = sub_25B290410();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (void *)((char *)v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = (void *)v1[29];
  void *v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F8F0E0], v15);
  id v20 = v19;
  LOBYTE(v19) = sub_25B290440();
  uint64_t v21 = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    uint64_t v83 = v3;
    id v80 = v20;
    uint64_t v22 = v1[74];
    int64_t v23 = *(os_unfair_lock_s **)(v22 + 24);
    MEMORY[0x270FA5388](v21);
    v79[-2] = sub_25B10DCB4;
    v79[-1] = v22;
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v23 + 4);
    sub_25B10DCD0(v24);
    uint64_t v82 = 0;
    os_unfair_lock_unlock(v23 + 4);
    swift_release();
    swift_release();
    if (qword_26A4D98C0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v25 = sub_25B290190();
  uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_26A4EB150);
  swift_retain();
  unint64_t v27 = sub_25B290160();
  os_log_type_t v28 = sub_25B2908A0();
  BOOL v29 = os_log_type_enabled(v27, v28);
  long long v85 = v13;
  uint64_t v86 = v2;
  if (v29)
  {
    v79[1] = v26;
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v90[0] = v31;
    *(_DWORD *)uint64_t v30 = 136446210;
    uint64_t v32 = v8;
    uint64_t v33 = v1[66];
    unint64_t v34 = v1[67];
    swift_bridgeObjectRetain();
    uint64_t v35 = v33;
    uint64_t v8 = v32;
    v89[1] = sub_25B288E98(v35, v34, v90);
    uint64_t v13 = v85;
    sub_25B2909C0();
    swift_release();
    uint64_t v2 = v86;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v27, v28, "(%{public}s) Starting suspension timer", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v31, -1, -1);
    MEMORY[0x261160890](v30, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v36 = v83;
  uint64_t v37 = v87;
  sub_25B28FFD0();
  swift_beginAccess();
  sub_25B10FF48((uint64_t)(v1 + 24), (uint64_t)v90);
  uint64_t v38 = v91;
  uint64_t v39 = v92;
  __swift_project_boxed_opaque_existential_1(v90, v91);
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v39 + 8) + 8) + 32))(v38);
  uint64_t v41 = (uint64_t)v84;
  uint64_t v42 = sub_25B28FF40();
  MEMORY[0x270FA5388](v42);
  v79[-2] = v1;
  v79[-1] = v37;
  uint64_t v43 = v82;
  sub_25B212D80(v41, (void (*)(uint64_t, char *))sub_25B180F10, v40, (uint64_t)v13);
  uint64_t v83 = v43;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
  sub_25B28FF40();
  LOBYTE(v40) = sub_25B28FF80();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v36 + 8);
  v44(v8, v2);
  if (v40)
  {
    int64_t v45 = v81;
    unint64_t v46 = v1;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v81, v13, v2);
    swift_retain();
    int64_t v47 = sub_25B290160();
    os_log_type_t v48 = sub_25B2908A0();
    BOOL v49 = os_log_type_enabled(v47, v48);
    long long v84 = v44;
    if (v49)
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      v89[0] = v51;
      *(_DWORD *)uint64_t v50 = 136446466;
      uint64_t v52 = v46[66];
      unint64_t v53 = v46[67];
      swift_bridgeObjectRetain();
      uint64_t v88 = sub_25B288E98(v52, v53, v89);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      sub_25B1875E0((unint64_t *)&qword_26A4DB020, MEMORY[0x263F07490]);
      uint64_t v54 = v81;
      uint64_t v55 = sub_25B290DB0();
      uint64_t v88 = sub_25B288E98(v55, v56, v89);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      v84(v54, v86);
      _os_log_impl(&dword_25B107000, v47, v48, "(%{public}s) Suspension timer will fire at %s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v51, -1, -1);
      uint64_t v57 = v50;
      uint64_t v2 = v86;
      MEMORY[0x261160890](v57, -1, -1);
    }
    else
    {
      swift_release();
      v44(v45, v2);
    }

    uint64_t v67 = v46[74];
    swift_retain();
    uint64_t v68 = v85;
    sub_25B28FFA0();
    uint64_t v70 = v69;
    uint64_t v71 = swift_allocObject();
    uint64_t v72 = swift_weakInit();
    long long v73 = *(os_unfair_lock_s **)(v67 + 24);
    uint64_t v74 = MEMORY[0x270FA5388](v72);
    v79[-6] = v67;
    v79[-5] = v70;
    v79[-4] = v80;
    v79[-3] = sub_25B180F2C;
    v79[-2] = v71;
    MEMORY[0x270FA5388](v74);
    v79[-2] = sub_25B180F34;
    v79[-1] = v75;
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v73 + 4);
    sub_25B10DDCC(v76);
    os_unfair_lock_unlock(v73 + 4);
    swift_release();
    swift_release();
    swift_release();
    long long v77 = v84;
    v84(v68, v2);
    v77(v87, v2);
    return swift_release();
  }
  else
  {
    swift_retain_n();
    long long v58 = sub_25B290160();
    os_log_type_t v59 = sub_25B2908A0();
    if (os_log_type_enabled(v58, v59))
    {
      long long v60 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      long long v84 = v44;
      uint64_t v62 = v61;
      v89[0] = v61;
      *(_DWORD *)long long v60 = 136446210;
      uint64_t v63 = v1[66];
      unint64_t v64 = v1[67];
      swift_bridgeObjectRetain();
      uint64_t v88 = sub_25B288E98(v63, v64, v89);
      sub_25B2909C0();
      swift_release_n();
      uint64_t v2 = v86;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v58, v59, "(%{public}s) No suspension work to perform", v60, 0xCu);
      swift_arrayDestroy();
      uint64_t v65 = v62;
      uint64_t v44 = v84;
      MEMORY[0x261160890](v65, -1, -1);
      MEMORY[0x261160890](v60, -1, -1);

      long long v66 = v85;
    }
    else
    {
      swift_release_n();

      long long v66 = v13;
    }
    v44(v66, v2);
    return ((uint64_t (*)(char *, uint64_t))v44)(v87, v2);
  }
}

uint64_t sub_25B12386C()
{
  uint64_t v1 = v0;
  uint64_t v63 = type metadata accessor for PairingRelationship();
  MEMORY[0x270FA5388](v63);
  uint64_t v3 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v65 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25B290080();
  uint64_t v66 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25B290410();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v1 + 232);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F8F0E0], v9);
  id v14 = v13;
  uint64_t v15 = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v15)
  {
    swift_beginAccess();
    sub_25B10FF48(v1 + 192, (uint64_t)&v71);
    uint64_t v16 = *((void *)&v72 + 1);
    uint64_t v17 = v73;
    __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v72 + 1));
    uint64_t v15 = MetadataStoring.orphanedRecordIDs()(v16, *(void *)(v17 + 8));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    if (*(void *)(v15 + 16))
    {
      if (qword_26A4D98C0 == -1) {
        goto LABEL_4;
      }
      goto LABEL_41;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_40:
  __break(1u);
LABEL_41:
  swift_once();
LABEL_4:
  uint64_t v18 = sub_25B290190();
  __swift_project_value_buffer(v18, (uint64_t)qword_26A4EB150);
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_25B290160();
  os_log_type_t v20 = sub_25B2908A0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 134349056;
    *(void *)&long long v71 = *(void *)(v15 + 16);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v19, v20, "Discarding %{public}ld orphaned records", v21, 0xCu);
    MEMORY[0x261160890](v21, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v82 = (char *)MEMORY[0x263F8EE88];
  uint64_t v23 = *(void *)(v15 + 16);
  uint64_t v59 = v1;
  if (v23)
  {
    uint64_t v24 = *(void *)(type metadata accessor for Record.ID(0) - 8);
    uint64_t v25 = (void *)(v15 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80)));
    uint64_t v26 = *(void *)(v24 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_25B16CD38((uint64_t)&v82, v25, v1);
      uint64_t v25 = (void *)((char *)v25 + v26);
      --v23;
    }
    while (v23);
    unint64_t v27 = v8;
    swift_bridgeObjectRelease_n();
    uint64_t v8 = v82;
  }
  else
  {
    unint64_t v27 = v8;
    swift_bridgeObjectRelease();
    uint64_t v8 = (char *)MEMORY[0x263F8EE88];
  }
  uint64_t v15 = (uint64_t)&v71;
  sub_25B290070();
  uint64_t v28 = sub_25B290020();
  uint64_t v30 = v29;
  uint64_t v31 = v66 + 8;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v27, v6);
  long long v70 = xmmword_25B293210;
  char v69 = 0;
  memset(v67, 0, sizeof(v67));
  __int16 v68 = 256;
  DeviceDescriptor.init(id:name:protocolVersion:deviceType:screenDescriptor:zones:messageTypes:idsIdentityBlob:marketingName:productType:personaID:)(v28, v30, 0x446E776F6E6B6E55, 0xED00006563697665, (uint64_t *)&v70, &v69, v67, MEMORY[0x263F8EE78], &v71, MEMORY[0x263F8EE78], 0, 0xF000000000000000, 0, 0, 0);
  int64_t v32 = 0;
  uint64_t v33 = *((void *)v8 + 7);
  unint64_t v56 = v8 + 56;
  uint64_t v34 = 1 << v8[32];
  uint64_t v35 = -1;
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  uint64_t v1 = v35 & v33;
  unint64_t v64 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 48);
  uint64_t v60 = v31 + 40;
  uint64_t v61 = v31 + 8;
  int64_t v57 = (unint64_t)(v34 + 63) >> 6;
  long long v58 = (void (**)(char *, char *, uint64_t))(v31 + 24);
  uint64_t v62 = v6;
  if ((v35 & v33) != 0)
  {
LABEL_16:
    unint64_t v36 = __clz(__rbit64(v1));
    v1 &= v1 - 1;
    unint64_t v37 = v36 | (v32 << 6);
    uint64_t v38 = v65;
    goto LABEL_28;
  }
  while (1)
  {
    BOOL v39 = __OFADD__(v32++, 1);
    uint64_t v38 = v65;
    if (v39)
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v32 >= v57) {
      goto LABEL_36;
    }
    unint64_t v40 = *(void *)&v56[8 * v32];
    if (!v40) {
      break;
    }
LABEL_27:
    uint64_t v1 = (v40 - 1) & v40;
    unint64_t v37 = __clz(__rbit64(v40)) + (v32 << 6);
LABEL_28:
    uint64_t v42 = v8;
    uint64_t v43 = v66;
    unint64_t v44 = *((void *)v8 + 6) + *(void *)(v66 + 72) * v37;
    uint64_t v45 = v62;
    (*(void (**)(char *, unint64_t, uint64_t))(v66 + 16))(v38, v44, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v38, 0, 1, v45);
    unint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
    uint64_t v6 = v45;
    if (v46(v38, 1, v45) == 1) {
      goto LABEL_37;
    }
    (*v58)(v3, v38, v45);
    uint64_t v47 = v63;
    sub_25B1172F8((uint64_t)&v71);
    sub_25B28FFD0();
    sub_25B28FFD0();
    sub_25B28FFD0();
    os_log_type_t v48 = &v3[*(int *)(v47 + 20)];
    long long v49 = v80;
    *((_OWORD *)v48 + 8) = v79;
    *((_OWORD *)v48 + 9) = v49;
    *((_OWORD *)v48 + 10) = v81;
    long long v50 = v76;
    *((_OWORD *)v48 + 4) = v75;
    *((_OWORD *)v48 + 5) = v50;
    long long v51 = v78;
    *((_OWORD *)v48 + 6) = v77;
    *((_OWORD *)v48 + 7) = v51;
    long long v52 = v72;
    *(_OWORD *)os_log_type_t v48 = v71;
    *((_OWORD *)v48 + 1) = v52;
    long long v53 = v74;
    *((_OWORD *)v48 + 2) = v73;
    *((_OWORD *)v48 + 3) = v53;
    uint64_t v54 = &v3[*(int *)(v47 + 32)];
    *(void *)uint64_t v54 = 0;
    *((void *)v54 + 1) = 0;
    sub_25B130988((uint64_t)v3);
    sub_25B180A5C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v8 = v42;
    if (v1) {
      goto LABEL_16;
    }
  }
  int64_t v41 = v32 + 1;
  if (v32 + 1 >= v57) {
    goto LABEL_36;
  }
  unint64_t v40 = *(void *)&v56[8 * v41];
  if (v40) {
    goto LABEL_26;
  }
  int64_t v41 = v32 + 2;
  if (v32 + 2 >= v57) {
    goto LABEL_36;
  }
  unint64_t v40 = *(void *)&v56[8 * v41];
  if (v40)
  {
LABEL_26:
    int64_t v32 = v41;
    goto LABEL_27;
  }
  int64_t v41 = v32 + 3;
  if (v32 + 3 < v57)
  {
    unint64_t v40 = *(void *)&v56[8 * v41];
    if (!v40)
    {
      while (1)
      {
        int64_t v32 = v41 + 1;
        if (__OFADD__(v41, 1)) {
          goto LABEL_39;
        }
        if (v32 >= v57) {
          goto LABEL_36;
        }
        unint64_t v40 = *(void *)&v56[8 * v32];
        ++v41;
        if (v40) {
          goto LABEL_27;
        }
      }
    }
    goto LABEL_26;
  }
LABEL_36:
  (*v64)(v65, 1, 1, v6);
LABEL_37:
  swift_release();
  return sub_25B11DEBC((uint64_t)&v71);
}

uint64_t sub_25B124070()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v118 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25B290080();
  uint64_t v128 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  long long v158 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v118 - v8;
  MEMORY[0x270FA5388](v7);
  long long v151 = (char *)&v118 - v10;
  uint64_t v132 = type metadata accessor for PairingRelationship();
  uint64_t v131 = *(void *)(v132 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v132);
  uint64_t v13 = (char *)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v118 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D93A8);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v137 = (uint64_t)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = type metadata accessor for RecordMetadata();
  uint64_t v161 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  uint64_t v135 = (uint64_t)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Record.ID(0);
  uint64_t v148 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19 - 8);
  int v129 = (char *)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_25B290410();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (id *)((char *)&v118 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = (void *)v0[29];
  *uint64_t v24 = v25;
  uint64_t v26 = *(void (**)(void))(v22 + 104);
  unsigned int v121 = *MEMORY[0x263F8F0E0];
  uint64_t v122 = v22 + 104;
  uint64_t v120 = (void (*)(void *, void, uint64_t))v26;
  v26(v24);
  id v118 = v25;
  uint64_t v27 = sub_25B290440();
  uint64_t v29 = *(uint64_t (**)(void *, uint64_t))(v22 + 8);
  uint64_t v28 = v22 + 8;
  uint64_t v123 = v24;
  uint64_t v125 = v21;
  uint64_t v124 = v28;
  long long v119 = v29;
  v29(v24, v21);
  if ((v27 & 1) == 0)
  {
LABEL_74:
    __break(1u);
LABEL_75:
    swift_once();
LABEL_4:
    uint64_t v35 = sub_25B290190();
    __swift_project_value_buffer(v35, (uint64_t)qword_26A4EB150);
    swift_bridgeObjectRetain();
    unint64_t v36 = sub_25B290160();
    os_log_type_t v37 = sub_25B2908A0();
    BOOL v38 = os_log_type_enabled(v36, v37);
    long long v149 = v3;
    uint64_t v39 = (uint64_t)v129;
    if (v38)
    {
      unint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v40 = 134217984;
      uint64_t v162 = *(void *)(v27 + 16);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v36, v37, "Deleting %ld expired local records", v40, 0xCu);
      int64_t v41 = v40;
      uint64_t v3 = v149;
      MEMORY[0x261160890](v41, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v43 = v161;
    unint64_t v44 = v139 + 30;
    unint64_t v143 = v27 + ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80));
    swift_bridgeObjectRetain();
    id v144 = v44;
    swift_beginAccess();
    unint64_t v45 = 0;
    v134 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
    uint64_t v160 = (char **)(v128 + 16);
    unint64_t v150 = v128 + 56;
    uint64_t v142 = (unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48);
    id v141 = (void (**)(char *, char *, uint64_t))(v128 + 32);
    long long v159 = (void (**)(char *, uint64_t))(v128 + 8);
    uint64_t v154 = v28 + 64;
    long long v156 = v13 + 8;
    uint64_t v161 = MEMORY[0x263F8EE88];
    long long v152 = v13;
    uint64_t v157 = v28;
    uint64_t v140 = v27;
    while (1)
    {
      if (v45 >= *(void *)(v27 + 16))
      {
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      sub_25B1806D0(v143 + *(void *)(v148 + 72) * v45, v39, type metadata accessor for Record.ID);
      uint64_t v46 = *v144;
      if (*(void *)(*v144 + 16))
      {
        unint64_t v153 = v45;
        uint64_t v47 = (void *)v39;
        uint64_t v50 = v39 + 32;
        uint64_t v48 = *(void *)(v39 + 32);
        uint64_t v49 = *(void *)(v50 + 8);
        uint64_t v52 = v47[2];
        uint64_t v51 = v47[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v53 = sub_25B18A768(v52, v51, v48, v49);
        if (v54)
        {
          uint64_t v55 = *(void *)(*(void *)(v46 + 56) + 8 * v53);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_25B10FF48(v138, (uint64_t)&v162);
          uint64_t v56 = v163;
          uint64_t v57 = v164;
          __swift_project_boxed_opaque_existential_1(&v162, v163);
          uint64_t v58 = *(void *)(v57 + 8);
          uint64_t v59 = v137;
          MetadataStoring.metadata(for:)(v47, v56, v58, v137);
          uint64_t v60 = v136;
          if ((*v134)(v59, 1, v136) == 1)
          {
            sub_25B180A5C((uint64_t)v47, type metadata accessor for Record.ID);
            swift_release();
            sub_25B116DE0(v59, &qword_26A4D93A8);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v162);
            uint64_t v28 = v157;
            uint64_t v39 = (uint64_t)v47;
            uint64_t v27 = v140;
            unint64_t v45 = v153;
          }
          else
          {
            uint64_t v133 = v55;
            uint64_t v61 = v135;
            sub_25B18095C(v59, v135, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v162);
            uint64_t v62 = *(void *)(v61 + *(int *)(v60 + 28));
            uint64_t v63 = v132;
            uint64_t v64 = v131;
            uint64_t v65 = (uint64_t)v130;
            uint64_t v28 = v157;
            if (!v62)
            {
              uint64_t v83 = 1 << *(unsigned char *)(v157 + 32);
              if (v83 < 64) {
                uint64_t v84 = ~(-1 << v83);
              }
              else {
                uint64_t v84 = -1;
              }
              unint64_t v85 = v84 & *(void *)(v157 + 64);
              long long v155 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((unint64_t)(v83 + 63) >> 6);
              swift_bridgeObjectRetain();
              uint64_t v28 = 0;
              uint64_t v27 = (uint64_t)v139;
              if (v85)
              {
LABEL_33:
                unint64_t v86 = __clz(__rbit64(v85));
                v85 &= v85 - 1;
                unint64_t v87 = v86 | (v28 << 6);
                goto LABEL_34;
              }
              while (1)
              {
                uint64_t v88 = v28 + 1;
                if (__OFADD__(v28, 1))
                {
                  __break(1u);
                  goto LABEL_72;
                }
                if (v88 >= (uint64_t)v155) {
                  goto LABEL_60;
                }
                unint64_t v89 = *(void *)(v154 + 8 * v88);
                ++v28;
                if (!v89)
                {
                  uint64_t v28 = v88 + 1;
                  if (v88 + 1 >= (uint64_t)v155) {
                    goto LABEL_60;
                  }
                  unint64_t v89 = *(void *)(v154 + 8 * v28);
                  if (!v89)
                  {
                    uint64_t v28 = v88 + 2;
                    if (v88 + 2 >= (uint64_t)v155) {
                      goto LABEL_60;
                    }
                    unint64_t v89 = *(void *)(v154 + 8 * v28);
                    if (!v89)
                    {
                      uint64_t v28 = v88 + 3;
                      if (v88 + 3 >= (uint64_t)v155) {
                        goto LABEL_60;
                      }
                      unint64_t v89 = *(void *)(v154 + 8 * v28);
                      if (!v89)
                      {
                        uint64_t v90 = v88 + 4;
                        if (v90 >= (uint64_t)v155)
                        {
LABEL_60:
                          uint64_t v28 = v157;
                          swift_release();
                          goto LABEL_65;
                        }
                        unint64_t v89 = *(void *)(v154 + 8 * v90);
                        if (!v89)
                        {
                          while (1)
                          {
                            uint64_t v28 = v90 + 1;
                            if (__OFADD__(v90, 1)) {
                              break;
                            }
                            if (v28 >= (uint64_t)v155) {
                              goto LABEL_60;
                            }
                            unint64_t v89 = *(void *)(v154 + 8 * v28);
                            ++v90;
                            if (v89) {
                              goto LABEL_51;
                            }
                          }
LABEL_73:
                          __break(1u);
                          goto LABEL_74;
                        }
                        uint64_t v28 = v90;
                      }
                    }
                  }
                }
LABEL_51:
                unint64_t v85 = (v89 - 1) & v89;
                unint64_t v87 = __clz(__rbit64(v89)) + (v28 << 6);
LABEL_34:
                sub_25B1806D0(*(void *)(v157 + 56) + *(void *)(v64 + 72) * v87, v65, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                sub_25B18095C(v65, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                if (*(void *)&v156[*(int *)(v63 + 32)])
                {
                  v147 = *v160;
                  ((void (*)(char *, char *, uint64_t))v147)(v151, v13, v4);
                  uint64_t v91 = v161;
                  sub_25B1875E0(&qword_26A4D9220, MEMORY[0x263F07508]);
                  swift_bridgeObjectRetain();
                  uint64_t v92 = sub_25B290530();
                  uint64_t v93 = -1 << *(unsigned char *)(v91 + 32);
                  unint64_t v94 = v92 & ~v93;
                  uint64_t v95 = v91 + 56;
                  if ((*(void *)(v91 + 56 + ((v94 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v94))
                  {
                    uint64_t v96 = ~v93;
                    uint64_t v97 = *(void *)(v128 + 72);
                    while (1)
                    {
                      ((void (*)(char *, unint64_t, uint64_t))v147)(v9, *(void *)(v161 + 48) + v97 * v94, v4);
                      sub_25B1875E0((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
                      char v98 = sub_25B290580();
                      long long v99 = *v159;
                      (*v159)(v9, v4);
                      if (v98) {
                        break;
                      }
                      unint64_t v94 = (v94 + 1) & v96;
                      if (((*(void *)(v95 + ((v94 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v94) & 1) == 0) {
                        goto LABEL_56;
                      }
                    }
                    swift_bridgeObjectRelease();
                    v99(v151, v4);
                  }
                  else
                  {
LABEL_56:
                    uint64_t v100 = v161;
                    swift_bridgeObjectRelease();
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    long long v102 = v151;
                    ((void (*)(char *, char *, uint64_t))v147)(v9, v151, v4);
                    uint64_t v162 = v100;
                    sub_25B21AE74((uint64_t)v9, v94, isUniquelyReferenced_nonNull_native);
                    uint64_t v161 = v162;
                    swift_bridgeObjectRelease();
                    (*v159)(v102, v4);
                  }
                  uint64_t v13 = v152;
                  sub_25B180A5C((uint64_t)v152, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                  uint64_t v27 = (uint64_t)v139;
                  uint64_t v3 = v149;
                  uint64_t v63 = v132;
                  uint64_t v64 = v131;
                  uint64_t v65 = (uint64_t)v130;
                  if (v85) {
                    goto LABEL_33;
                  }
                }
                else
                {
                  sub_25B180A5C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                  if (v85) {
                    goto LABEL_33;
                  }
                }
              }
            }
            uint64_t v66 = *(char **)(v62 + 16);
            unint64_t v127 = v150 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
            uint64_t v27 = (uint64_t)v139;
            v147 = v66;
            if (v66)
            {
              uint64_t v146 = v62
                   + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80));
              uint64_t v67 = *(void *)(v128 + 72);
              __int16 v68 = *(void (**)(char *, uint64_t, uint64_t))(v128 + 16);
              uint64_t v126 = v62;
              swift_bridgeObjectRetain();
              char v69 = 0;
              do
              {
                v68(v3, v146 + v67 * (void)v69, v4);
                long long v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v150;
                (*(void (**)(char *, void, uint64_t, uint64_t))v150)(v3, 0, 1, v4);
                if ((*v142)(v3, 1, v4) == 1)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v27 = (uint64_t)v139;
                  uint64_t v28 = v157;
                  goto LABEL_65;
                }
                long long v155 = v74;
                (*v141)(v158, v3, v4);
                uint64_t v75 = v161;
                sub_25B1875E0(&qword_26A4D9220, MEMORY[0x263F07508]);
                swift_bridgeObjectRetain();
                uint64_t v76 = sub_25B290530();
                uint64_t v77 = -1 << *(unsigned char *)(v75 + 32);
                unint64_t v78 = v76 & ~v77;
                uint64_t v79 = v75 + 56;
                if ((*(void *)(v75 + 56 + ((v78 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v78))
                {
                  uint64_t v80 = ~v77;
                  while (1)
                  {
                    v68(v9, *(void *)(v161 + 48) + v78 * v67, v4);
                    sub_25B1875E0((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
                    char v81 = sub_25B290580();
                    uint64_t v82 = *v159;
                    (*v159)(v9, v4);
                    if (v81) {
                      break;
                    }
                    unint64_t v78 = (v78 + 1) & v80;
                    if (((*(void *)(v79 + ((v78 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v78) & 1) == 0) {
                      goto LABEL_20;
                    }
                  }
                  swift_bridgeObjectRelease();
                  v82(v158, v4);
                }
                else
                {
LABEL_20:
                  uint64_t v70 = v161;
                  swift_bridgeObjectRelease();
                  char v71 = swift_isUniquelyReferenced_nonNull_native();
                  long long v72 = v158;
                  v68(v9, (uint64_t)v158, v4);
                  uint64_t v162 = v70;
                  sub_25B21AE74((uint64_t)v9, v78, v71);
                  uint64_t v161 = v162;
                  swift_bridgeObjectRelease();
                  (*v159)(v72, v4);
                }
                ++v69;
                uint64_t v3 = v149;
                uint64_t v13 = v152;
                long long v73 = v155;
              }
              while (v69 != v147);
              uint64_t v27 = (uint64_t)v139;
              uint64_t v28 = v157;
            }
            else
            {
              long long v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v150;
              swift_bridgeObjectRetain();
            }
            v73(v3, 1, 1, v4);
            swift_bridgeObjectRelease();
LABEL_65:
            uint64_t v162 = v27;
            uint64_t v103 = v133;
            if (MEMORY[0x261160990](v133 + 16))
            {
              uint64_t v104 = *(void *)(v103 + 24);
              uint64_t ObjectType = swift_getObjectType();
              long long v155 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 40);
              uint64_t v106 = type metadata accessor for Replicator();
              uint64_t v107 = (uint64_t)v129;
              ((void (*)(uint64_t *, char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))v155)(&v162, v129, v106, &protocol witness table for Replicator, ObjectType, v104);
              uint64_t v13 = v152;
              swift_release();
              swift_unknownObjectRelease();
            }
            else
            {
              swift_release();
              uint64_t v107 = (uint64_t)v129;
            }
            unint64_t v45 = v153;
            sub_25B180A5C(v135, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
            sub_25B180A5C(v107, type metadata accessor for Record.ID);
            uint64_t v39 = v107;
            uint64_t v27 = v140;
          }
          goto LABEL_11;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v28 = v157;
        uint64_t v39 = (uint64_t)v47;
        uint64_t v27 = v140;
        unint64_t v45 = v153;
      }
      sub_25B180A5C(v39, type metadata accessor for Record.ID);
LABEL_11:
      if (++v45 == v145)
      {
        swift_bridgeObjectRelease();
        sub_25B10FF48(v138, (uint64_t)&v162);
        uint64_t v108 = v163;
        uint64_t v109 = v164;
        __swift_project_boxed_opaque_existential_1(&v162, v163);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v109 + 16) + 112))(v27, v108);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v162);
        swift_bridgeObjectRelease();
        long long v110 = v123;
        long long v111 = v118;
        *uint64_t v123 = v118;
        uint64_t v112 = v125;
        v120(v110, v121, v125);
        id v113 = v111;
        LOBYTE(v111) = sub_25B290440();
        uint64_t result = v119(v110, v112);
        if (v111)
        {
          long long v114 = v139;
          uint64_t v115 = v139[63];
          uint64_t v116 = v139[64];
          __swift_project_boxed_opaque_existential_1(v139 + 60, v115);
          long long v117 = *(void (**)(uint64_t (*)(uint64_t, unint64_t), void *, uint64_t, uint64_t))(v116 + 8);
          swift_retain();
          v117(sub_25B185BD0, v114, v115, v116);
          swift_bridgeObjectRelease();
          return swift_release();
        }
        else
        {
          __break(1u);
        }
        return result;
      }
    }
  }
  uint64_t v130 = v15;
  v139 = v0;
  uint64_t v30 = (uint64_t)(v0 + 24);
  swift_beginAccess();
  sub_25B10FF48((uint64_t)(v0 + 24), (uint64_t)&v162);
  uint64_t v32 = v163;
  uint64_t v31 = v164;
  __swift_project_boxed_opaque_existential_1(&v162, v163);
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v31 + 8) + 8) + 32))(v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v162);
  uint64_t v138 = v30;
  sub_25B10FF48(v30, (uint64_t)&v162);
  uint64_t v33 = v163;
  uint64_t v34 = v164;
  __swift_project_boxed_opaque_existential_1(&v162, v163);
  uint64_t v27 = MetadataStoring.expiredRecordIDs()(v33, *(void *)(v34 + 8));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v162);
  uint64_t v145 = *(void *)(v27 + 16);
  if (v145)
  {
    if (qword_26A4D98C0 == -1) {
      goto LABEL_4;
    }
    goto LABEL_75;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1253D4()
{
  void (*v156)(uint64_t *__return_ptr, uint64_t *, void *, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v157;
  unsigned int (**v158)(void, void, void);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  NSObject *v162;
  os_log_type_t v163;
  uint8_t *v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  unsigned int (**v172)(uint64_t, uint64_t, uint64_t);
  uint64_t v173;
  unsigned int (*v174)(uint64_t, uint64_t, uint64_t);
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  int v188;
  BOOL v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t (*v197)(uint64_t, uint64_t, uint64_t);
  uint64_t v198;
  char *v199;
  char v200;
  uint64_t v201;
  void (*v202)(uint64_t, uint64_t);
  uint64_t v203;
  uint64_t v204;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  unint64_t v209;
  unint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void *v213;
  uint64_t v214;
  void *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  int v220;
  BOOL v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t (*v229)(uint64_t, uint64_t, uint64_t);
  uint64_t v230;
  char *v231;
  char v232;
  uint64_t v233;
  void (*v234)(uint64_t, uint64_t);
  uint64_t v235;
  uint64_t v236;
  int v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  void *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unsigned int v247;
  BOOL v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  unsigned int (*v256)(uint64_t, uint64_t, uint64_t);
  uint64_t v257;
  char *v258;
  char v259;
  void (*v260)(uint64_t, uint64_t);
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t *v264;
  uint64_t *v265;
  void *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  int v273;
  BOOL v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t (*v282)(uint64_t, uint64_t, uint64_t);
  uint64_t v283;
  char *v284;
  char v285;
  void (*v286)(uint64_t, uint64_t);
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  NSObject *v295;
  os_log_type_t v296;
  uint8_t *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  NSObject *v302;
  os_log_type_t v303;
  uint8_t *v304;
  uint64_t v305;
  uint64_t v306;
  size_t v307;
  uint64_t *v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  void (**v313)(uint64_t, uint64_t, uint64_t);
  uint64_t v314;
  char *v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  uint64_t v320;
  int64_t v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  uint64_t v325;
  long long v326;
  char *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  int64_t v338;
  uint64_t v339;
  unint64_t v340;
  void (**v341)(uint64_t, uint64_t, uint64_t);
  void (**v342)(char *, uint64_t, uint64_t);
  char *v343;
  uint64_t v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  void *v349;
  void *v350;
  uint64_t (**v351)(uint64_t, uint64_t, uint64_t);
  char *v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  void (**v357)(uint64_t, uint64_t);
  void *v358;
  uint64_t v359;
  uint64_t v360;
  void *v361;
  uint64_t v362;
  void *v363;
  void *v364;
  unsigned int (**v365)(void, void, void);
  void *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  unsigned int (*v374)(void, void, void);
  unint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  unint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  char v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  char v389;
  char v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  unint64_t v396;

  uint64_t v1 = v0;
  v360 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9880);
  uint64_t v2 = MEMORY[0x270FA5388](v360);
  uint64_t v4 = (char *)&v310 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  v329 = (uint64_t)&v310 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v310 - v8;
  MEMORY[0x270FA5388](v7);
  v337 = (uint64_t)&v310 - v10;
  v367 = sub_25B290080();
  uint64_t v11 = *(void *)(v367 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v367);
  v343 = (char *)&v310 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v315 = (char *)&v310 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v312 = (char *)&v310 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v324 = (char *)&v310 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v316 = (char *)&v310 - v21;
  MEMORY[0x270FA5388](v20);
  v346 = (uint64_t)&v310 - v22;
  uint64_t v23 = type metadata accessor for Record.ID.Ownership(0);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  v323 = (uint64_t)&v310 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v328 = (uint64_t)&v310 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v310 = (uint64_t)&v310 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v314 = (uint64_t)&v310 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  v322 = (uint64_t)&v310 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  v334 = (uint64_t)&v310 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v336 = (uint64_t)&v310 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v311 = (uint64_t)&v310 - v39;
  MEMORY[0x270FA5388](v38);
  v318 = (uint64_t)&v310 - v40;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D93A8);
  MEMORY[0x270FA5388](v41 - 8);
  uint64_t v43 = (char *)&v310 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v355 = type metadata accessor for RecordMetadata();
  uint64_t v44 = *(void *)(v355 - 8);
  uint64_t v45 = MEMORY[0x270FA5388](v355);
  v317 = (uint64_t)&v310 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  v354 = (uint64_t)&v310 - v47;
  v372 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v48 = MEMORY[0x270FA5388](v372);
  v371 = (uint64_t)&v310 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  v370 = (uint64_t)&v310 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  v369 = (uint64_t)&v310 - v53;
  MEMORY[0x270FA5388](v52);
  v368 = (uint64_t)&v310 - v54;
  v362 = type metadata accessor for Record.ID(0);
  v379 = *(void *)(v362 - 8);
  uint64_t v55 = MEMORY[0x270FA5388](v362);
  v319 = (char *)&v310 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  v350 = (uint64_t *)((char *)&v310 - v58);
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  v349 = (uint64_t *)((char *)&v310 - v60);
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  v358 = (uint64_t *)((char *)&v310 - v62);
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  v333 = (char *)&v310 - v64;
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  v364 = (uint64_t *)((char *)&v310 - v66);
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  v361 = (uint64_t *)((char *)&v310 - v68);
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  v366 = (uint64_t *)((char *)&v310 - v70);
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  v335 = (uint64_t)&v310 - v72;
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  v363 = (uint64_t *)((char *)&v310 - v74);
  MEMORY[0x270FA5388](v73);
  v383 = (uint64_t)&v310 - v75;
  uint64_t v76 = type metadata accessor for PairingRelationship();
  v331 = *(void *)(v76 - 8);
  uint64_t v77 = MEMORY[0x270FA5388](v76 - 8);
  v356 = (uint64_t)&v310 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v77);
  v330 = (uint64_t)&v310 - v79;
  uint64_t v80 = sub_25B290410();
  uint64_t v81 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v83 = (uint64_t *)((char *)&v310 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v84 = *(void **)(v1 + 232);
  void *v83 = v84;
  (*(void (**)(void *, void, uint64_t))(v81 + 104))(v83, *MEMORY[0x263F8F0E0], v80);
  id v85 = v84;
  LOBYTE(v84) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v81 + 8))(v83, v80);
  if ((v84 & 1) == 0) {
    goto LABEL_227;
  }
  swift_beginAccess();
  v359 = v1 + 192;
  sub_25B10FF48(v1 + 192, (uint64_t)&v386);
  uint64_t v87 = v387;
  uint64_t v86 = v388;
  __swift_project_boxed_opaque_existential_1(&v386, v387);
  uint64_t v88 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v86 + 8) + 8) + 32))(v87);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v386);
  uint64_t v89 = *(void *)(v88 + 64);
  v320 = v88 + 64;
  uint64_t v90 = 1 << *(unsigned char *)(v88 + 32);
  if (v90 < 64) {
    uint64_t v91 = ~(-1 << v90);
  }
  else {
    uint64_t v91 = -1;
  }
  v395 = MEMORY[0x263F8EE88];
  v396 = MEMORY[0x263F8EE78];
  v340 = v91 & v89;
  v378 = v1 + 240;
  v321 = (unint64_t)(v90 + 63) >> 6;
  v394 = MEMORY[0x263F8EE88];
  v373 = v44;
  v351 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  v365 = (unsigned int (**)(void, void, void))(v11 + 48);
  v313 = (void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v341 = (void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v357 = (void (**)(uint64_t, uint64_t))(v11 + 8);
  v327 = &v385;
  v342 = (void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v332 = v88;
  swift_bridgeObjectRetain();
  int64_t v92 = 0;
  v339 = 0;
  *(void *)&long long v93 = 136315138;
  v326 = v93;
  v325 = MEMORY[0x263F8EE58] + 8;
  uint64_t v94 = v379;
  v344 = v1;
  v345 = v4;
  v353 = v9;
  v352 = v43;
  while (1)
  {
    if (v340)
    {
      unint64_t v95 = __clz(__rbit64(v340));
      v340 &= v340 - 1;
      v338 = v92;
      unint64_t v96 = v95 | (v92 << 6);
    }
    else
    {
      BOOL v97 = __OFADD__(v92, 1);
      int64_t v98 = v92 + 1;
      if (v97) {
        goto LABEL_225;
      }
      if (v98 >= v321) {
        goto LABEL_201;
      }
      unint64_t v99 = *(void *)(v320 + 8 * v98);
      if (!v99)
      {
        int64_t v100 = v98 + 1;
        if (v98 + 1 >= v321) {
          goto LABEL_201;
        }
        unint64_t v99 = *(void *)(v320 + 8 * v100);
        if (!v99)
        {
          int64_t v100 = v98 + 2;
          if (v98 + 2 >= v321) {
            goto LABEL_201;
          }
          unint64_t v99 = *(void *)(v320 + 8 * v100);
          if (!v99)
          {
            int64_t v100 = v98 + 3;
            if (v98 + 3 >= v321) {
              goto LABEL_201;
            }
            unint64_t v99 = *(void *)(v320 + 8 * v100);
            if (!v99)
            {
              int64_t v100 = v98 + 4;
              if (v98 + 4 >= v321) {
                goto LABEL_201;
              }
              unint64_t v99 = *(void *)(v320 + 8 * v100);
              if (!v99)
              {
                while (1)
                {
                  int64_t v98 = v100 + 1;
                  if (__OFADD__(v100, 1)) {
                    goto LABEL_228;
                  }
                  if (v98 >= v321) {
                    break;
                  }
                  unint64_t v99 = *(void *)(v320 + 8 * v98);
                  ++v100;
                  if (v99) {
                    goto LABEL_21;
                  }
                }
LABEL_201:
                swift_release();
                if (*(void *)(v396 + 16))
                {
                  if (qword_26A4D98C0 != -1) {
                    goto LABEL_229;
                  }
                  goto LABEL_203;
                }
LABEL_212:
                swift_bridgeObjectRelease();
                goto LABEL_215;
              }
            }
          }
        }
        int64_t v98 = v100;
      }
LABEL_21:
      v340 = (v99 - 1) & v99;
      v338 = v98;
      unint64_t v96 = __clz(__rbit64(v99)) + (v98 << 6);
    }
    uint64_t v101 = v330;
    sub_25B1806D0(*(void *)(v332 + 56) + *(void *)(v331 + 72) * v96, v330, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v102 = v356;
    sub_25B18095C(v101, v356, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B10FF48(v359, (uint64_t)&v391);
    uint64_t v104 = v392;
    uint64_t v103 = v393;
    __swift_project_boxed_opaque_existential_1(&v391, v392);
    uint64_t v105 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v103 + 8) + 8) + 24))(v104);
    MEMORY[0x270FA5388](v105);
    *(&v310 - 2) = v102;
    uint64_t v106 = v339;
    uint64_t v107 = sub_25B222E74((uint64_t)sub_25B1870E0, (uint64_t)(&v310 - 4), v105);
    v339 = v106;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v391);
    int64_t v108 = *(void *)(v107 + 16);
    if (v108)
    {
      v386 = MEMORY[0x263F8EE78];
      sub_25B2240E0(0, v108, 0);
      uint64_t v110 = sub_25B1A7EF0(v107);
      uint64_t v111 = 0;
      uint64_t v112 = v107 + 64;
      char v113 = *(unsigned char *)(v107 + 32);
      v375 = v109;
      v348 = v107 + 88;
      v377 = v107;
      v374 = (unsigned int (*)(void, void, void))v108;
      v376 = v107 + 64;
      while (1)
      {
        if (v110 < 0 || v110 >= 1 << v113) {
          goto LABEL_206;
        }
        unint64_t v116 = (unint64_t)v110 >> 6;
        if ((*(void *)(v112 + 8 * ((unint64_t)v110 >> 6)) & (1 << v110)) == 0) {
          goto LABEL_207;
        }
        if (*(_DWORD *)(v107 + 36) != v109) {
          goto LABEL_208;
        }
        v381 = v109;
        v380 = v111;
        uint64_t v117 = v372;
        uint64_t v118 = v368;
        uint64_t v119 = v368 + *(int *)(v372 + 48);
        uint64_t v120 = *(void *)(v107 + 48);
        v382 = *(void *)(v94 + 72);
        sub_25B1806D0(v120 + v382 * v110, v368, type metadata accessor for Record.ID);
        sub_25B1806D0(*(void *)(v107 + 56) + *(void *)(v373 + 72) * v110, v119, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        uint64_t v121 = v369;
        sub_25B1806D0(v118, v369, type metadata accessor for Record.ID);
        sub_25B1806D0(v119, v121 + *(int *)(v117 + 48), (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        uint64_t v122 = v121;
        uint64_t v123 = v370;
        sub_25B187574(v122, v370, &qword_26A4D9860);
        sub_25B116DE0(v118, &qword_26A4D9860);
        uint64_t v124 = *(int *)(v117 + 48);
        uint64_t v125 = v371;
        uint64_t v126 = v371 + v124;
        uint64_t v127 = v123 + v124;
        sub_25B1806D0(v123, v371, type metadata accessor for Record.ID);
        sub_25B1806D0(v127, v126, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        sub_25B18095C(v125, v383, type metadata accessor for Record.ID);
        sub_25B180A5C(v126, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        sub_25B116DE0(v123, &qword_26A4D9860);
        uint64_t v128 = v386;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25B2240E0(0, *(void *)(v128 + 16) + 1, 1);
          uint64_t v128 = v386;
        }
        unint64_t v130 = *(void *)(v128 + 16);
        unint64_t v129 = *(void *)(v128 + 24);
        uint64_t v107 = v377;
        if (v130 >= v129 >> 1)
        {
          sub_25B2240E0(v129 > 1, v130 + 1, 1);
          uint64_t v128 = v386;
        }
        *(void *)(v128 + 16) = v130 + 1;
        uint64_t v94 = v379;
        sub_25B18095C(v383, v128+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ v130 * v382, type metadata accessor for Record.ID);
        char v113 = *(unsigned char *)(v107 + 32);
        unint64_t v114 = 1 << v113;
        if (v110 >= 1 << v113) {
          goto LABEL_209;
        }
        uint64_t v112 = v376;
        uint64_t v131 = *(void *)(v376 + 8 * v116);
        if ((v131 & (1 << v110)) == 0) {
          goto LABEL_210;
        }
        if (*(_DWORD *)(v107 + 36) != v381) {
          goto LABEL_211;
        }
        unint64_t v132 = v131 & (-2 << (v110 & 0x3F));
        if (v132)
        {
          unint64_t v114 = __clz(__rbit64(v132)) | v110 & 0xFFFFFFFFFFFFFFC0;
          uint64_t v115 = v374;
        }
        else
        {
          unint64_t v133 = v116 + 1;
          unint64_t v134 = (v114 + 63) >> 6;
          uint64_t v115 = v374;
          if (v116 + 1 < v134)
          {
            unint64_t v135 = *(void *)(v376 + 8 * v133);
            if (!v135)
            {
              unint64_t v133 = v116 + 2;
              if (v116 + 2 >= v134) {
                goto LABEL_25;
              }
              unint64_t v135 = *(void *)(v376 + 8 * v133);
              if (!v135)
              {
                while (v134 - 3 != v116)
                {
                  unint64_t v135 = *(void *)(v348 + 8 * v116++);
                  if (v135)
                  {
                    unint64_t v133 = v116 + 2;
                    goto LABEL_40;
                  }
                }
                goto LABEL_25;
              }
            }
LABEL_40:
            unint64_t v114 = __clz(__rbit64(v135)) + (v133 << 6);
          }
        }
LABEL_25:
        uint64_t v111 = v380 + 1;
        unint64_t v109 = v375;
        uint64_t v110 = v114;
        if ((unsigned int (*)(void, void, void))(v380 + 1) == v115)
        {
          swift_release();
          goto LABEL_48;
        }
      }
    }
    swift_release();
    uint64_t v128 = MEMORY[0x263F8EE78];
LABEL_48:
    unint64_t v136 = *(void *)(v128 + 16);
    uint64_t v137 = v363;
    if (v136) {
      break;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    sub_25B180A5C(v356, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    int64_t v92 = v338;
  }
  v381 = v128 + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80));
  swift_beginAccess();
  unint64_t v138 = 0;
  v375 = v136;
  while (1)
  {
    if (v138 >= *(void *)(v128 + 16))
    {
      __break(1u);
LABEL_206:
      __break(1u);
LABEL_207:
      __break(1u);
LABEL_208:
      __break(1u);
LABEL_209:
      __break(1u);
LABEL_210:
      __break(1u);
LABEL_211:
      __break(1u);
      goto LABEL_212;
    }
    v382 = *(void *)(v94 + 72);
    sub_25B1806D0(v381 + v382 * v138, (uint64_t)v137, type metadata accessor for Record.ID);
    uint64_t v139 = *(void *)v378;
    if (!*(void *)(*(void *)v378 + 16)) {
      goto LABEL_51;
    }
    uint64_t v141 = v137[4];
    uint64_t v140 = v137[5];
    uint64_t v143 = v137[2];
    uint64_t v142 = v137[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v144 = sub_25B18A768(v143, v142, v141, v140);
    if (v145) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_51:
    sub_25B180A5C((uint64_t)v137, type metadata accessor for Record.ID);
LABEL_52:
    if (++v138 == v136) {
      goto LABEL_6;
    }
  }
  uint64_t v146 = *(void *)(*(void *)(v139 + 56) + 8 * v144);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B10FF48(v359, (uint64_t)&v386);
  uint64_t v148 = v387;
  uint64_t v147 = v388;
  __swift_project_boxed_opaque_existential_1(&v386, v387);
  uint64_t v149 = *(void *)(v147 + 8);
  uint64_t v150 = (uint64_t)v352;
  MetadataStoring.metadata(for:)(v137, v148, v149, (uint64_t)v352);
  int v151 = (*v351)(v150, 1, v355);
  uint64_t v152 = v367;
  if (v151 == 1)
  {
    sub_25B180A5C((uint64_t)v137, type metadata accessor for Record.ID);
    swift_release();
    sub_25B116DE0(v150, &qword_26A4D93A8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v386);
LABEL_194:
    unint64_t v136 = v375;
    goto LABEL_52;
  }
  sub_25B18095C(v150, v354, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v386);
  v386 = v344;
  uint64_t v153 = MEMORY[0x261160990](v146 + 16);
  v376 = v146;
  if (v153)
  {
    uint64_t v154 = *(void *)(v146 + 24);
    uint64_t ObjectType = swift_getObjectType();
    long long v156 = *(void (**)(uint64_t *__return_ptr, uint64_t *, void *, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v154 + 48);
    uint64_t v157 = type metadata accessor for Replicator();
    v156(&v384, &v386, v363, v356, v157, &protocol witness table for Replicator, ObjectType, v154);
    swift_unknownObjectRelease();
    long long v158 = v365;
    long long v159 = v382;
    switch((char)v384)
    {
      case 1:
        uint64_t v137 = v363;
        sub_25B180A5C((uint64_t)v363, type metadata accessor for Record.ID);
        swift_release();
        goto LABEL_193;
      case 2:
        v169 = v366;
        sub_25B1806D0((uint64_t)v363, (uint64_t)v366, type metadata accessor for Record.ID);
        v170 = v395;
        sub_25B291210();
        v348 = v170;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25B290630();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25B290630();
        sub_25B290630();
        v171 = v367;
        swift_bridgeObjectRelease();
        v172 = v365;
        swift_bridgeObjectRelease();
        v347 = (uint64_t)v169 + *(int *)(v362 + 24);
        v173 = v318;
        sub_25B1806D0(v347, v318, type metadata accessor for Record.ID.Ownership);
        v174 = *v172;
        if ((*v172)(v173, 1, v171) == 1)
        {
          sub_25B291220();
        }
        else
        {
          v182 = v346;
          (*v341)(v346, v173, v171);
          sub_25B291220();
          sub_25B1875E0(&qword_26A4D9220, MEMORY[0x263F07508]);
          sub_25B290540();
          (*v357)(v182, v171);
        }
        v183 = v333;
        v374 = v174;
        v184 = sub_25B291260();
        v185 = v348;
        v186 = -1 << *(unsigned char *)(v348 + 32);
        v187 = v184 & ~v186;
        v380 = v348 + 56;
        if (((*(void *)(v348 + 56 + ((v187 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v187) & 1) == 0) {
          goto LABEL_95;
        }
        v377 = ~v186;
        do
        {
          sub_25B1806D0(*(void *)(v185 + 48) + v187 * v159, (uint64_t)v183, type metadata accessor for Record.ID);
          v189 = *v183 == *v366 && v183[1] == v366[1];
          if (v189 || (sub_25B290FB0() & 1) != 0)
          {
            if ((v190 = v183[4], v191 = v183[5], v193 = v366[4], v192 = v366[5], v183[2] == v366[2])
              && v183[3] == v366[3]
              || (sub_25B290FB0() & 1) != 0)
            {
              if (v190 == v193 && v191 == v192 || (sub_25B290FB0() & 1) != 0)
              {
                v194 = v159;
                v195 = (uint64_t)v353;
                v196 = (uint64_t)&v353[*(int *)(v360 + 48)];
                sub_25B1806D0((uint64_t)v183 + *(int *)(v362 + 24), (uint64_t)v353, type metadata accessor for Record.ID.Ownership);
                sub_25B1806D0(v347, v196, type metadata accessor for Record.ID.Ownership);
                uint64_t v152 = v367;
                v197 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v374;
                if (v374(v195, 1, v367) == 1)
                {
                  v188 = v197(v196, 1, v152);
                  long long v159 = v194;
                  if (v188 == 1) {
                    goto LABEL_162;
                  }
                }
                else
                {
                  v198 = v334;
                  sub_25B1806D0(v195, v334, type metadata accessor for Record.ID.Ownership);
                  if (v197(v196, 1, v152) != 1)
                  {
                    v199 = v324;
                    (*v341)((uint64_t)v324, v196, v152);
                    v200 = sub_25B290030();
                    v201 = v198;
                    v202 = *v357;
                    (*v357)((uint64_t)v199, v152);
                    v203 = v201;
                    v183 = v333;
                    v202(v203, v152);
                    long long v159 = v382;
                    if (v200)
                    {
LABEL_162:
                      sub_25B180A5C((uint64_t)v353, type metadata accessor for Record.ID.Ownership);
                      sub_25B180A5C((uint64_t)v183, type metadata accessor for Record.ID);
                      swift_bridgeObjectRelease();
                      v265 = (uint64_t *)&v390;
                      goto LABEL_196;
                    }
                    sub_25B180A5C((uint64_t)v353, type metadata accessor for Record.ID.Ownership);
                    goto LABEL_77;
                  }
                  (*v357)(v198, v152);
                  long long v159 = v194;
                }
                sub_25B116DE0((uint64_t)v353, &qword_26A4D9880);
LABEL_77:
                v185 = v348;
              }
            }
          }
          sub_25B180A5C((uint64_t)v183, type metadata accessor for Record.ID);
          v187 = (v187 + 1) & v377;
        }
        while (((*(void *)(v380 + ((v187 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v187) & 1) != 0);
LABEL_95:
        swift_bridgeObjectRelease();
        v204 = v395;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_25B1806D0((uint64_t)v366, (uint64_t)v361, type metadata accessor for Record.ID);
        v384 = v204;
        v395 = 0x8000000000000000;
        if (*(void *)(v204 + 24) <= *(void *)(v204 + 16))
        {
          v212 = v367;
          v213 = v364;
          if (isUniquelyReferenced_nonNull_native) {
            sub_25B21A3F8();
          }
          else {
            sub_25B21C198();
          }
          v377 = v384;
          sub_25B291210();
          v238 = v361;
          swift_bridgeObjectRetain();
          sub_25B290630();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_25B290630();
          sub_25B290630();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v348 = (uint64_t)v238 + *(int *)(v362 + 24);
          v239 = v311;
          sub_25B1806D0(v348, v311, type metadata accessor for Record.ID.Ownership);
          if (v374(v239, 1, v212) == 1)
          {
            sub_25B291220();
          }
          else
          {
            v242 = v346;
            (*v341)(v346, v239, v212);
            sub_25B291220();
            sub_25B1875E0(&qword_26A4D9220, MEMORY[0x263F07508]);
            sub_25B290540();
            (*v357)(v242, v212);
          }
          v243 = sub_25B291260();
          v244 = v377;
          v245 = -1 << *(unsigned char *)(v377 + 32);
          v187 = v243 & ~v245;
          v347 = v377 + 56;
          if (((*(void *)(v377 + 56 + ((v187 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v187) & 1) == 0) {
            goto LABEL_160;
          }
          v380 = ~v245;
          v246 = v347;
          while (1)
          {
            sub_25B1806D0(*(void *)(v244 + 48) + v187 * v159, (uint64_t)v213, type metadata accessor for Record.ID);
            v248 = *v213 == *v361 && v213[1] == v361[1];
            if (!v248 && (sub_25B290FB0() & 1) == 0) {
              goto LABEL_143;
            }
            v249 = v364[4];
            v250 = v364[5];
            v251 = v361[4];
            v252 = v361[5];
            if ((v364[2] != v361[2] || v364[3] != v361[3]) && (sub_25B290FB0() & 1) == 0) {
              goto LABEL_143;
            }
            if ((v249 != v251 || v250 != v252) && (sub_25B290FB0() & 1) == 0) {
              goto LABEL_143;
            }
            v253 = v337;
            v254 = v337 + *(int *)(v360 + 48);
            sub_25B1806D0((uint64_t)v364 + *(int *)(v362 + 24), v337, type metadata accessor for Record.ID.Ownership);
            sub_25B1806D0(v348, v254, type metadata accessor for Record.ID.Ownership);
            v255 = v367;
            v256 = v374;
            if (v374(v253, 1, v367) == 1) {
              break;
            }
            v257 = v336;
            sub_25B1806D0(v253, v336, type metadata accessor for Record.ID.Ownership);
            if (v256(v254, 1, v255) == 1)
            {
              (*v357)(v257, v255);
              v244 = v377;
              v246 = v347;
LABEL_142:
              sub_25B116DE0(v253, &qword_26A4D9880);
              goto LABEL_143;
            }
            v258 = v316;
            (*v341)((uint64_t)v316, v254, v255);
            v259 = sub_25B290030();
            v260 = *v357;
            (*v357)((uint64_t)v258, v255);
            v260(v336, v255);
            long long v159 = v382;
            v244 = v377;
            v246 = v347;
            if (v259)
            {
LABEL_230:
              sub_25B180A5C(v253, type metadata accessor for Record.ID.Ownership);
              v309 = (uint64_t *)&v389;
LABEL_232:
              sub_25B180A5C(*(v309 - 32), type metadata accessor for Record.ID);
              sub_25B291180();
              __break(1u);
              JUMPOUT(0x25B1287F0);
            }
            sub_25B180A5C(v253, type metadata accessor for Record.ID.Ownership);
LABEL_143:
            v213 = v364;
            sub_25B180A5C((uint64_t)v364, type metadata accessor for Record.ID);
            v187 = (v187 + 1) & v380;
            if (((*(void *)(v246 + ((v187 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v187) & 1) == 0) {
              goto LABEL_160;
            }
          }
          v247 = v256(v254, 1, v255);
          v244 = v377;
          if (v247 == 1) {
            goto LABEL_230;
          }
          goto LABEL_142;
        }
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_25B1A1EE4();
        }
LABEL_160:
        v261 = v384;
        *(void *)(v384 + ((v187 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v187;
        sub_25B18095C((uint64_t)v361, *(void *)(v261 + 48) + v187 * v159, type metadata accessor for Record.ID);
        v262 = *(void *)(v261 + 16);
        BOOL v97 = __OFADD__(v262, 1);
        v263 = v262 + 1;
        if (!v97)
        {
          *(void *)(v261 + 16) = v263;
          v395 = v261;
          swift_bridgeObjectRelease();
          v264 = (uint64_t *)&v390;
          goto LABEL_190;
        }
        __break(1u);
LABEL_225:
        __break(1u);
LABEL_226:
        __break(1u);
LABEL_227:
        __break(1u);
LABEL_228:
        __break(1u);
LABEL_229:
        swift_once();
LABEL_203:
        v293 = sub_25B290190();
        __swift_project_value_buffer(v293, (uint64_t)qword_26A4EB150);
        v294 = v396;
        swift_bridgeObjectRetain();
        v295 = sub_25B290160();
        v296 = sub_25B2908A0();
        if (os_log_type_enabled(v295, v296))
        {
          v297 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v297 = 134217984;
          v386 = *(void *)(v294 + 16);
          sub_25B2909C0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25B107000, v295, v296, "Detected %ld invalid remote records", v297, 0xCu);
          MEMORY[0x261160890](v297, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease();
        }
        sub_25B10FF48(v359, (uint64_t)&v386);
        v298 = v387;
        v299 = v388;
        __swift_project_boxed_opaque_existential_1(&v386, v387);
        swift_beginAccess();
        (*(void (**)(unint64_t, uint64_t))(*(void *)(v299 + 16) + 104))(v396, v298);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v386);
LABEL_215:
        if (*(void *)(v395 + 16))
        {
          if (qword_26A4D98C0 != -1) {
            swift_once();
          }
          v300 = sub_25B290190();
          __swift_project_value_buffer(v300, (uint64_t)qword_26A4EB150);
          v301 = v395;
          swift_bridgeObjectRetain();
          v302 = sub_25B290160();
          v303 = sub_25B2908A0();
          if (os_log_type_enabled(v302, v303))
          {
            v304 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v304 = 134217984;
            v386 = *(void *)(v301 + 16);
            sub_25B2909C0();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_25B107000, v302, v303, "Detected %ld invalid local records", v304, 0xCu);
            MEMORY[0x261160890](v304, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease();
          }
          sub_25B10FF48(v359, (uint64_t)&v386);
          v305 = v387;
          v306 = v388;
          __swift_project_boxed_opaque_existential_1(&v386, v387);
          swift_beginAccess();
          v307 = sub_25B2254CC(v395);
          swift_bridgeObjectRelease();
          (*(void (**)(size_t, uint64_t))(*(void *)(v306 + 16) + 112))(v307, v305);
          swift_release();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v386);
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        return swift_bridgeObjectRelease();
      case 3:
        v175 = v362;
        v176 = (uint64_t)v363;
        v177 = v322;
        sub_25B1806D0((uint64_t)v363 + *(int *)(v362 + 24), v322, type metadata accessor for Record.ID.Ownership);
        v374 = *v158;
        if (v374(v177, 1, v152) == 1)
        {
          v178 = v358;
          sub_25B1806D0(v176, (uint64_t)v358, type metadata accessor for Record.ID);
          v179 = v395;
          sub_25B291210();
          v348 = v179;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_25B290630();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_25B290630();
          sub_25B290630();
          v180 = v367;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v347 = (uint64_t)v178 + *(int *)(v175 + 24);
          v181 = v314;
          sub_25B1806D0(v347, v314, type metadata accessor for Record.ID.Ownership);
          if (v374(v181, 1, v180) == 1)
          {
            sub_25B291220();
          }
          else
          {
            v214 = v346;
            (*v341)(v346, v181, v180);
            sub_25B291220();
            sub_25B1875E0(&qword_26A4D9220, MEMORY[0x263F07508]);
            sub_25B290540();
            (*v357)(v214, v180);
          }
          v215 = v319;
          v216 = sub_25B291260();
          v217 = v348;
          v218 = -1 << *(unsigned char *)(v348 + 32);
          v219 = v216 & ~v218;
          v380 = v348 + 56;
          if ((*(void *)(v348 + 56 + ((v219 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v219))
          {
            v377 = ~v218;
            do
            {
              sub_25B1806D0(*(void *)(v217 + 48) + v219 * v159, (uint64_t)v215, type metadata accessor for Record.ID);
              v221 = *v215 == *v358 && v215[1] == v358[1];
              if (!v221 && (sub_25B290FB0() & 1) == 0) {
                goto LABEL_113;
              }
              v222 = v215[4];
              v223 = v215[5];
              v225 = v358[4];
              v224 = v358[5];
              if ((v215[2] != v358[2] || v215[3] != v358[3]) && (sub_25B290FB0() & 1) == 0) {
                goto LABEL_113;
              }
              if ((v222 != v225 || v223 != v224) && (sub_25B290FB0() & 1) == 0) {
                goto LABEL_113;
              }
              v226 = v159;
              v227 = (uint64_t)v345;
              v228 = (uint64_t)&v345[*(int *)(v360 + 48)];
              sub_25B1806D0((uint64_t)v215 + *(int *)(v362 + 24), (uint64_t)v345, type metadata accessor for Record.ID.Ownership);
              sub_25B1806D0(v347, v228, type metadata accessor for Record.ID.Ownership);
              uint64_t v152 = v367;
              v229 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v374;
              if (v374(v227, 1, v367) == 1)
              {
                v220 = v229(v228, 1, v152);
                long long v159 = v226;
                if (v220 == 1) {
                  goto LABEL_195;
                }
              }
              else
              {
                v230 = v323;
                sub_25B1806D0(v227, v323, type metadata accessor for Record.ID.Ownership);
                if (v229(v228, 1, v152) != 1)
                {
                  v231 = v315;
                  (*v341)((uint64_t)v315, v228, v152);
                  v232 = sub_25B290030();
                  v233 = v230;
                  v234 = *v357;
                  (*v357)((uint64_t)v231, v152);
                  v235 = v233;
                  v215 = v319;
                  v234(v235, v152);
                  long long v159 = v382;
                  if (v232)
                  {
LABEL_195:
                    sub_25B180A5C((uint64_t)v345, type metadata accessor for Record.ID.Ownership);
                    sub_25B180A5C((uint64_t)v215, type metadata accessor for Record.ID);
                    swift_bridgeObjectRelease();
                    v265 = &v387;
LABEL_196:
                    sub_25B180A5C(*(v265 - 32), type metadata accessor for Record.ID);
LABEL_191:
                    uint64_t v94 = v379;
                    goto LABEL_192;
                  }
                  sub_25B180A5C((uint64_t)v345, type metadata accessor for Record.ID.Ownership);
                  goto LABEL_112;
                }
                (*v357)(v230, v152);
                long long v159 = v226;
              }
              sub_25B116DE0((uint64_t)v345, &qword_26A4D9880);
LABEL_112:
              v217 = v348;
LABEL_113:
              sub_25B180A5C((uint64_t)v215, type metadata accessor for Record.ID);
              v219 = (v219 + 1) & v377;
            }
            while (((*(void *)(v380 + ((v219 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v219) & 1) != 0);
          }
          swift_bridgeObjectRelease();
          v236 = v395;
          v237 = swift_isUniquelyReferenced_nonNull_native();
          sub_25B1806D0((uint64_t)v358, (uint64_t)v349, type metadata accessor for Record.ID);
          v384 = v236;
          v395 = 0x8000000000000000;
          if (*(void *)(v236 + 24) > *(void *)(v236 + 16))
          {
            if ((v237 & 1) == 0) {
              sub_25B1A1EE4();
            }
            goto LABEL_188;
          }
          v240 = v367;
          v241 = v350;
          if (v237) {
            sub_25B21A3F8();
          }
          else {
            sub_25B21C198();
          }
          v377 = v384;
          sub_25B291210();
          v266 = v349;
          swift_bridgeObjectRetain();
          sub_25B290630();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_25B290630();
          sub_25B290630();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v348 = (uint64_t)v266 + *(int *)(v362 + 24);
          v267 = v310;
          sub_25B1806D0(v348, v310, type metadata accessor for Record.ID.Ownership);
          if (v374(v267, 1, v240) == 1)
          {
            sub_25B291220();
          }
          else
          {
            v268 = v346;
            (*v341)(v346, v267, v240);
            sub_25B291220();
            sub_25B1875E0(&qword_26A4D9220, MEMORY[0x263F07508]);
            sub_25B290540();
            (*v357)(v268, v240);
          }
          v269 = sub_25B291260();
          v270 = v377;
          v271 = -1 << *(unsigned char *)(v377 + 32);
          v219 = v269 & ~v271;
          v347 = v377 + 56;
          if (((*(void *)(v377 + 56 + ((v219 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v219) & 1) == 0)
          {
LABEL_188:
            v287 = v384;
            *(void *)(v384 + ((v219 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v219;
            sub_25B18095C((uint64_t)v349, *(void *)(v287 + 48) + v219 * v159, type metadata accessor for Record.ID);
            v288 = *(void *)(v287 + 16);
            BOOL v97 = __OFADD__(v288, 1);
            v289 = v288 + 1;
            if (v97) {
              goto LABEL_226;
            }
            *(void *)(v287 + 16) = v289;
            v395 = v287;
            swift_bridgeObjectRelease();
            v264 = &v387;
LABEL_190:
            sub_25B180A5C(*(v264 - 32), type metadata accessor for Record.ID);
            uint64_t v152 = v367;
            goto LABEL_191;
          }
          v380 = ~v271;
          v272 = v347;
          while (1)
          {
            sub_25B1806D0(*(void *)(v270 + 48) + v219 * v159, (uint64_t)v241, type metadata accessor for Record.ID);
            v274 = *v241 == *v349 && v241[1] == v349[1];
            if (v274 || (sub_25B290FB0() & 1) != 0)
            {
              if ((v275 = v350[4], v276 = v350[5], v277 = v349[4], v278 = v349[5], v350[2] == v349[2])
                && v350[3] == v349[3]
                || (sub_25B290FB0() & 1) != 0)
              {
                if (v275 == v277 && v276 == v278 || (sub_25B290FB0() & 1) != 0)
                {
                  v279 = v329;
                  v280 = v329 + *(int *)(v360 + 48);
                  sub_25B1806D0((uint64_t)v350 + *(int *)(v362 + 24), v329, type metadata accessor for Record.ID.Ownership);
                  sub_25B1806D0(v348, v280, type metadata accessor for Record.ID.Ownership);
                  v281 = v367;
                  v282 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v374;
                  if (v374(v279, 1, v367) == 1)
                  {
                    v273 = v282(v280, 1, v281);
                    v270 = v377;
                    if (v273 == 1) {
                      goto LABEL_231;
                    }
                  }
                  else
                  {
                    v283 = v328;
                    sub_25B1806D0(v279, v328, type metadata accessor for Record.ID.Ownership);
                    if (v282(v280, 1, v281) != 1)
                    {
                      v284 = v312;
                      (*v341)((uint64_t)v312, v280, v281);
                      v285 = sub_25B290030();
                      v286 = *v357;
                      (*v357)((uint64_t)v284, v281);
                      v286(v328, v281);
                      long long v159 = v382;
                      v270 = v377;
                      v272 = v347;
                      if (v285)
                      {
LABEL_231:
                        sub_25B180A5C(v279, type metadata accessor for Record.ID.Ownership);
                        v309 = &v382;
                        goto LABEL_232;
                      }
                      sub_25B180A5C(v279, type metadata accessor for Record.ID.Ownership);
                      goto LABEL_171;
                    }
                    (*v357)(v283, v281);
                    v270 = v377;
                    v272 = v347;
                  }
                  sub_25B116DE0(v279, &qword_26A4D9880);
                }
              }
            }
LABEL_171:
            v241 = v350;
            sub_25B180A5C((uint64_t)v350, type metadata accessor for Record.ID);
            v219 = (v219 + 1) & v380;
            if (((*(void *)(v272 + ((v219 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v219) & 1) == 0) {
              goto LABEL_188;
            }
          }
        }
        if (qword_26A4DA030 != -1) {
          swift_once();
        }
        v206 = __swift_project_value_buffer(v152, (uint64_t)qword_26A4EB1D8);
        v207 = v354;
        (*v313)(v354 + *(int *)(v355 + 24), v206, v152);
        sub_25B1806D0(v207, v317, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        v208 = v396;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v208 = sub_25B21833C(0, *(void *)(v208 + 16) + 1, 1, v208);
        }
        v210 = *(void *)(v208 + 16);
        v209 = *(void *)(v208 + 24);
        v211 = v373;
        if (v210 >= v209 >> 1)
        {
          v292 = sub_25B21833C(v209 > 1, v210 + 1, 1, v208);
          v211 = v373;
          v208 = v292;
        }
        *(void *)(v208 + 16) = v210 + 1;
        sub_25B18095C(v317, v208+ ((*(unsigned __int8 *)(v211 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80))+ *(void *)(v211 + 72) * v210, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        v396 = v208;
        sub_25B180A5C(v322, type metadata accessor for Record.ID.Ownership);
        break;
      default:
        goto LABEL_60;
    }
  }
  else
  {
LABEL_60:
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v160 = sub_25B290190();
    __swift_project_value_buffer(v160, (uint64_t)qword_26A4EB150);
    uint64_t v161 = v335;
    sub_25B1806D0((uint64_t)v363, v335, type metadata accessor for Record.ID);
    uint64_t v162 = sub_25B290160();
    uint64_t v163 = sub_25B290890();
    if (os_log_type_enabled(v162, v163))
    {
      uint64_t v164 = (uint8_t *)swift_slowAlloc();
      v165 = swift_slowAlloc();
      v386 = v165;
      *(_DWORD *)uint64_t v164 = v326;
      v166 = Record.ID.description.getter();
      v384 = sub_25B288E98(v166, v167, &v386);
      uint64_t v94 = v379;
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B180A5C(v161, type metadata accessor for Record.ID);
      _os_log_impl(&dword_25B107000, v162, v163, "Unable to validate %s: dataSource failed to provide result", v164, 0xCu);
      swift_arrayDestroy();
      v168 = v165;
      uint64_t v152 = v367;
      MEMORY[0x261160890](v168, -1, -1);
      MEMORY[0x261160890](v164, -1, -1);
    }
    else
    {
      sub_25B180A5C(v161, type metadata accessor for Record.ID);
    }
  }
LABEL_192:
  v290 = v343;
  (*v342)(v343, v356, v152);
  v291 = v346;
  sub_25B218F4C(v346, v290);
  swift_release();
  (*v357)(v291, v152);
  uint64_t v137 = v363;
  sub_25B180A5C((uint64_t)v363, type metadata accessor for Record.ID);
LABEL_193:
  sub_25B180A5C(v354, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  goto LABEL_194;
}

uint64_t sub_25B128800()
{
  uint64_t v1 = v0;
  uint64_t v28 = *v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B50);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9928);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25B290410();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = (void *)v1[29];
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F8F0E0], v9);
  id v14 = v13;
  char v15 = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v15)
  {
    swift_beginAccess();
    sub_25B10FF48((uint64_t)(v1 + 43), (uint64_t)v31);
    uint64_t v17 = v32;
    uint64_t v18 = v33;
    __swift_project_boxed_opaque_existential_1(v31, v32);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
    id v29 = v14;
    uint64_t v30 = v19;
    uint64_t v20 = sub_25B2908E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 1, 1, v20);
    id v21 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9990);
    sub_25B10CB64();
    sub_25B116394(&qword_26A4D9988, &qword_26A4D9990);
    sub_25B1875E0((unint64_t *)&unk_26A4D9B60, (void (*)(uint64_t))sub_25B10CB64);
    sub_25B290260();
    sub_25B116DE0((uint64_t)v4, (uint64_t *)&unk_26A4D9B50);

    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = v28;
    *(void *)(v23 + 16) = v22;
    *(void *)(v23 + 24) = v24;
    sub_25B116394(&qword_26A4D9920, &qword_26A4D9928);
    sub_25B290270();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_beginAccess();
    sub_25B2901F0();
    swift_endAccess();
    swift_release();
    sub_25B10FF48((uint64_t)(v1 + 43), (uint64_t)v31);
    uint64_t v25 = v32;
    uint64_t v26 = v33;
    __swift_project_boxed_opaque_existential_1(v31, v32);
    (*(void (**)(uint64_t, uint64_t))(v26 + 48))(v25, v26);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B128CA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B50);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9F20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25B290410();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v1 + 232);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F8F0E0], v9);
  id v14 = v13;
  char v15 = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v15)
  {
    sub_25B187628(v1 + 424, (uint64_t)&v26, (uint64_t *)&unk_26A4D9F08);
    if (v27)
    {
      sub_25B180BD4(&v26, (uint64_t)v28);
      uint64_t v17 = v29;
      uint64_t v18 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
      id v25 = v14;
      *(void *)&long long v26 = v19;
      uint64_t v20 = sub_25B2908E0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 1, 1, v20);
      id v21 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA730);
      sub_25B10CB64();
      sub_25B116394(&qword_26A4DA738, &qword_26A4DA730);
      sub_25B1875E0((unint64_t *)&unk_26A4D9B60, (void (*)(uint64_t))sub_25B10CB64);
      sub_25B290260();
      sub_25B116DE0((uint64_t)v4, (uint64_t *)&unk_26A4D9B50);

      swift_release();
      swift_allocObject();
      swift_weakInit();
      sub_25B116394(&qword_26A4DA740, &qword_26A4D9F20);
      sub_25B290270();
      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_beginAccess();
      sub_25B2901F0();
      swift_endAccess();
      swift_release();
      uint64_t v22 = v29;
      uint64_t v23 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    }
    else
    {
      return sub_25B116DE0((uint64_t)&v26, (uint64_t *)&unk_26A4D9F08);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_25B1290FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25B290410();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v8 = *(void **)(v2 + 232);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v9 = v8;
  LOBYTE(v8) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    if (qword_26A4D98C0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v10 = sub_25B290190();
  __swift_project_value_buffer(v10, (uint64_t)qword_26A4EB150);
  uint64_t v11 = sub_25B290160();
  os_log_type_t v12 = sub_25B2908A0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_25B107000, v11, v12, "Reconciling devices", v13, 2u);
    MEMORY[0x261160890](v13, -1, -1);
  }

  swift_beginAccess();
  if (*(unsigned char *)(v2 + 616))
  {
    *(void *)(v2 + 608) = a1;
    *(unsigned char *)(v2 + 616) = 0;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v2;
    *(void *)(v14 + 24) = a1;
    swift_retain();
    sub_25B1420A8((unint64_t)sub_25B180604, v14);
    swift_release();
  }
  else
  {
    uint64_t v15 = a1 & ~*(void *)(v2 + 608);
    uint64_t v16 = sub_25B290160();
    os_log_type_t v17 = sub_25B2908A0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    if (v15)
    {
      if (v18)
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl(&dword_25B107000, v16, v17, "Device reconciliation already in process with insufficient options; updating options and abandoning",
          v20,
          2u);
        MEMORY[0x261160890](v20, -1, -1);
      }

      uint64_t v22 = sub_25B120EFC();
      if ((*(unsigned char *)(v21 + 8) & 1) == 0 && (a1 & ~*(void *)v21) != 0) {
        *(void *)v21 |= a1;
      }
      ((void (*)(unsigned char *, void))v22)(v24, 0);
    }
    else
    {
      if (v18)
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v19 = 0;
        _os_log_impl(&dword_25B107000, v16, v17, "Device reconciliation already in process; abandoning", v19, 2u);
        MEMORY[0x261160890](v19, -1, -1);
      }
    }
  }
}

uint64_t sub_25B12946C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v133 = (uint64_t)v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v4 = MEMORY[0x270FA5388](v132);
  unint64_t v135 = (char *)v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v137 = (uint64_t)v114 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v131 = (uint64_t)v114 - v8;
  uint64_t v134 = sub_25B290000();
  int64_t v136 = *(void *)(v134 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v134);
  unint64_t v116 = (char *)v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v114 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v123 = (char *)v114 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v122 = (uint8_t *)v114 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v127 = (char *)v114 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (uint8_t *)v114 - v20;
  uint64_t v22 = sub_25B290410();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  id v25 = (void *)((char *)v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v26 = (void *)v1[29];
  *id v25 = v26;
  (*(void (**)(void *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x263F8F0E0], v22);
  uint64_t v27 = v26;
  char v28 = sub_25B290440();
  uint64_t v29 = (*(uint64_t (**)(void *, uint64_t))(v23 + 8))(v25, v22);
  if ((v28 & 1) == 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v30 = v1[73];
  uint64_t v31 = *(os_unfair_lock_s **)(v30 + 24);
  MEMORY[0x270FA5388](v29);
  v114[-2] = sub_25B10DCB4;
  v114[-1] = v30;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v31 + 4);
  sub_25B10DDCC(v32);
  v114[1] = 0;
  os_unfair_lock_unlock(v31 + 4);
  swift_release();
  swift_release();
  if (qword_26A4D98C0 != -1) {
LABEL_46:
  }
    swift_once();
  uint64_t v33 = sub_25B290190();
  uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_26A4EB150);
  swift_retain();
  uint64_t v117 = v34;
  uint64_t v35 = sub_25B290160();
  os_log_type_t v36 = sub_25B2908A0();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v120 = v21;
  uint64_t v115 = v27;
  uint64_t v118 = v13;
  if (v37)
  {
    uint64_t v38 = v35;
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v140[0] = v39;
    *(_DWORD *)uint64_t v21 = 136446210;
    os_log_type_t v40 = v36;
    uint64_t v41 = v1[66];
    unint64_t v42 = v1[67];
    swift_bridgeObjectRetain();
    uint64_t v139 = sub_25B288E98(v41, v42, v140);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v38, v40, "(%{public}s) Starting expiration timer", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v39, -1, -1);
    MEMORY[0x261160890](v21, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v43 = (uint64_t)v135;
  uint64_t v119 = v1;
  swift_beginAccess();
  sub_25B10FF48((uint64_t)(v1 + 24), (uint64_t)v140);
  uint64_t v45 = v141;
  uint64_t v44 = v142;
  __swift_project_boxed_opaque_existential_1(v140, v141);
  uint64_t v13 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v44 + 8) + 8) + 24))(v45);
  sub_25B28FF40();
  uint64_t v46 = *((void *)v13 + 8);
  uint64_t v128 = v13 + 64;
  uint64_t v47 = 1 << v13[32];
  uint64_t v48 = -1;
  if (v47 < 64) {
    uint64_t v48 = ~(-1 << v47);
  }
  unint64_t v49 = v48 & v46;
  int64_t v129 = (unint64_t)(v47 + 63) >> 6;
  uint64_t v27 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48);
  uint64_t v125 = (void (**)(uint8_t *, char *, uint64_t))(v136 + 32);
  uint64_t v124 = (void (**)(char *, uint8_t *, uint64_t))(v136 + 16);
  uint64_t v126 = (uint8_t *)(v136 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v51 = 0;
  uint64_t v1 = &qword_26A4D9860;
  uint64_t v52 = v134;
  uint64_t v121 = v13;
  while (1)
  {
    if (v49)
    {
      unint64_t v135 = (char *)((v49 - 1) & v49);
      int64_t v136 = v51;
      unint64_t v53 = __clz(__rbit64(v49)) | (v51 << 6);
      goto LABEL_31;
    }
    int64_t v54 = v51 + 1;
    if (__OFADD__(v51, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v54 >= v129)
    {
LABEL_36:
      swift_release();
      uint64_t v80 = v120;
      (*v125)(v120, v127, v52);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v140);
      uint64_t v81 = v118;
      sub_25B28FF40();
      char v82 = sub_25B28FF80();
      uint64_t v83 = *(void (**)(char *, uint64_t))v126;
      (*(void (**)(char *, uint64_t))v126)(v81, v52);
      if (v82)
      {
        uint64_t v84 = v116;
        (*v124)(v116, v80, v52);
        id v85 = v119;
        swift_retain();
        uint64_t v86 = v52;
        uint64_t v87 = sub_25B290160();
        os_log_type_t v88 = sub_25B2908A0();
        if (os_log_type_enabled(v87, v88))
        {
          uint64_t v89 = swift_slowAlloc();
          uint64_t v137 = swift_slowAlloc();
          v140[0] = v137;
          *(_DWORD *)uint64_t v89 = 136446466;
          uint64_t v90 = v85[66];
          uint64_t v91 = v86;
          unint64_t v92 = v85[67];
          swift_bridgeObjectRetain();
          uint64_t v138 = sub_25B288E98(v90, v92, v140);
          sub_25B2909C0();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v89 + 12) = 2080;
          sub_25B1875E0((unint64_t *)&qword_26A4DB020, MEMORY[0x263F07490]);
          long long v93 = v116;
          uint64_t v94 = sub_25B290DB0();
          uint64_t v138 = sub_25B288E98(v94, v95, v140);
          sub_25B2909C0();
          swift_bridgeObjectRelease();
          v83(v93, v91);
          _os_log_impl(&dword_25B107000, v87, v88, "(%{public}s) Expiration timer will fire at %s", (uint8_t *)v89, 0x16u);
          uint64_t v96 = v137;
          swift_arrayDestroy();
          MEMORY[0x261160890](v96, -1, -1);
          MEMORY[0x261160890](v89, -1, -1);
        }
        else
        {
          swift_release();
          v83(v84, v86);
        }

        uint64_t v104 = v85[73];
        swift_retain();
        uint64_t v105 = v120;
        sub_25B28FFA0();
        uint64_t v107 = v106;
        uint64_t v108 = swift_allocObject();
        uint64_t v109 = swift_weakInit();
        uint64_t v110 = *(os_unfair_lock_s **)(v104 + 24);
        uint64_t v111 = MEMORY[0x270FA5388](v109);
        v114[-6] = v104;
        v114[-5] = v107;
        v114[-4] = v115;
        v114[-3] = sub_25B185BC8;
        v114[-2] = v108;
        MEMORY[0x270FA5388](v111);
        v114[-2] = sub_25B180F34;
        v114[-1] = v112;
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v110 + 4);
        sub_25B10DDCC(v113);
        os_unfair_lock_unlock(v110 + 4);
        swift_release();
        swift_release();
        swift_release();
        v83((char *)v105, v134);
        return swift_release();
      }
      else
      {
        BOOL v97 = v119;
        swift_retain_n();
        int64_t v98 = sub_25B290160();
        os_log_type_t v99 = sub_25B2908A0();
        if (os_log_type_enabled(v98, v99))
        {
          int64_t v100 = (uint8_t *)swift_slowAlloc();
          uint64_t v101 = swift_slowAlloc();
          v140[0] = v101;
          *(_DWORD *)int64_t v100 = 136446210;
          uint64_t v102 = v97[66];
          unint64_t v103 = v97[67];
          swift_bridgeObjectRetain();
          uint64_t v138 = sub_25B288E98(v102, v103, v140);
          sub_25B2909C0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25B107000, v98, v99, "(%{public}s) No records to expire", v100, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x261160890](v101, -1, -1);
          MEMORY[0x261160890](v100, -1, -1);

          return ((uint64_t (*)(uint8_t *, uint64_t))v83)(v120, v134);
        }
        else
        {
          swift_release_n();

          return ((uint64_t (*)(uint8_t *, uint64_t))v83)(v80, v52);
        }
      }
    }
    unint64_t v55 = *(void *)&v128[8 * v54];
    int64_t v56 = v51 + 1;
    if (!v55)
    {
      int64_t v56 = v51 + 2;
      if (v51 + 2 >= v129) {
        goto LABEL_36;
      }
      unint64_t v55 = *(void *)&v128[8 * v56];
      if (!v55)
      {
        int64_t v56 = v51 + 3;
        if (v51 + 3 >= v129) {
          goto LABEL_36;
        }
        unint64_t v55 = *(void *)&v128[8 * v56];
        if (!v55)
        {
          int64_t v56 = v51 + 4;
          if (v51 + 4 >= v129) {
            goto LABEL_36;
          }
          unint64_t v55 = *(void *)&v128[8 * v56];
          if (!v55)
          {
            int64_t v56 = v51 + 5;
            if (v51 + 5 >= v129) {
              goto LABEL_36;
            }
            unint64_t v55 = *(void *)&v128[8 * v56];
            if (!v55) {
              break;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v135 = (char *)((v55 - 1) & v55);
    int64_t v136 = v56;
    unint64_t v53 = __clz(__rbit64(v55)) + (v56 << 6);
LABEL_31:
    uint64_t v58 = *((void *)v13 + 6);
    uint64_t v59 = type metadata accessor for Record.ID(0);
    uint64_t v60 = v131;
    sub_25B1806D0(v58 + *(void *)(*(void *)(v59 - 8) + 72) * v53, v131, type metadata accessor for Record.ID);
    uint64_t v61 = *((void *)v13 + 7);
    uint64_t v62 = (int *)(type metadata accessor for RecordMetadata() - 8);
    uint64_t v63 = v61 + *(void *)(*(void *)v62 + 72) * v53;
    uint64_t v64 = v132;
    uint64_t v21 = (uint8_t *)type metadata accessor for RecordMetadata;
    sub_25B1806D0(v63, v60 + *(int *)(v132 + 48), (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v65 = v60;
    uint64_t v66 = v137;
    sub_25B187574(v65, v137, v1);
    uint64_t v67 = *(int *)(v64 + 48);
    uint64_t v68 = v43 + v67;
    uint64_t v69 = v66 + v67;
    sub_25B1806D0(v66, v43, type metadata accessor for Record.ID);
    sub_25B1806D0(v69, v68, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v70 = v133;
    sub_25B187628(v68 + v62[10], v133, &qword_26A4D91F8);
    sub_25B180A5C(v68, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v52 = v134;
    if ((*v27)(v70, 1, v134) == 1)
    {
      sub_25B116DE0(v70, &qword_26A4D91F8);
      sub_25B180A5C(v43, type metadata accessor for Record.ID);
    }
    else
    {
      unint64_t v130 = *v125;
      uint64_t v71 = v122;
      v130(v122, (char *)v70, v52);
      sub_25B180A5C(v43, type metadata accessor for Record.ID);
      sub_25B1875E0(&qword_26A4DB030, MEMORY[0x263F07490]);
      uint64_t v72 = v127;
      if (sub_25B290560()) {
        uint64_t v73 = (uint8_t *)v72;
      }
      else {
        uint64_t v73 = v71;
      }
      uint64_t v74 = v1;
      uint64_t v75 = v27;
      uint64_t v76 = v123;
      (*v124)(v123, v73, v52);
      uint64_t v21 = v126;
      uint64_t v77 = *(void (**)(char *, uint64_t))v126;
      (*(void (**)(char *, uint64_t))v126)(v72, v52);
      uint64_t v78 = (char *)v71;
      uint64_t v13 = v121;
      v77(v78, v52);
      uint64_t v79 = v76;
      uint64_t v27 = v75;
      uint64_t v1 = v74;
      v130((uint8_t *)v72, v79, v52);
    }
    uint64_t result = sub_25B116DE0(v137, v1);
    unint64_t v49 = (unint64_t)v135;
    int64_t v51 = v136;
  }
  uint64_t v57 = v51 + 6;
  if (v51 + 6 >= v129) {
    goto LABEL_36;
  }
  unint64_t v55 = *(void *)&v128[8 * v57];
  if (v55)
  {
    int64_t v56 = v51 + 6;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v56 = v57 + 1;
    if (__OFADD__(v57, 1)) {
      break;
    }
    if (v56 >= v129) {
      goto LABEL_36;
    }
    unint64_t v55 = *(void *)&v128[8 * v56];
    ++v57;
    if (v55) {
      goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25B12A404()
{
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v0 = MEMORY[0x270FA5388](v63);
  uint64_t v62 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v61 = (uint64_t)&v50 - v3;
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v60 = (char *)&v50 - v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v59 = (char *)&v50 - v6;
  uint64_t v7 = type metadata accessor for PairingRelationship();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (!Strong) {
    return v12;
  }
  uint64_t v13 = Strong;
  uint64_t v14 = Strong + 192;
  swift_beginAccess();
  sub_25B10FF48(v14, (uint64_t)v69);
  uint64_t v16 = v70;
  uint64_t v15 = v71;
  __swift_project_boxed_opaque_existential_1(v69, v70);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v15 + 8) + 8) + 32))(v16);
  uint64_t v18 = sub_25B176138(v17, (uint64_t (*)(char *, unint64_t, uint64_t))sub_25B176924);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  int64_t v19 = *(void *)(v18 + 16);
  if (!v19)
  {
LABEL_26:
    swift_release();
    swift_release();
    return v12;
  }
  uint64_t v52 = v13;
  v69[0] = v12;
  sub_25B22411C(0, v19, 0);
  uint64_t result = sub_25B1A7EF0(v18);
  uint64_t v22 = result;
  uint64_t v23 = 0;
  uint64_t v24 = v18 + 64;
  char v25 = *(unsigned char *)(v18 + 32);
  uint64_t v51 = v18 + 88;
  uint64_t v58 = v8;
  uint64_t v57 = v10;
  uint64_t v56 = v18;
  int64_t v53 = v19;
  uint64_t v54 = v21;
  uint64_t v55 = v18 + 64;
  while ((v22 & 0x8000000000000000) == 0 && v22 < 1 << v25)
  {
    if ((*(void *)(v24 + 8 * ((unint64_t)v22 >> 6)) & (1 << v22)) == 0) {
      goto LABEL_29;
    }
    if (*(_DWORD *)(v18 + 36) != v21) {
      goto LABEL_30;
    }
    uint64_t v65 = 1 << v22;
    unint64_t v66 = (unint64_t)v22 >> 6;
    uint64_t v64 = v23;
    uint64_t v28 = v63;
    uint64_t v29 = (uint64_t)v59;
    uint64_t v30 = (uint64_t)&v59[*(int *)(v63 + 48)];
    uint64_t v31 = *(void *)(v18 + 48);
    uint64_t v32 = sub_25B290080();
    uint64_t v67 = *(void *)(v32 - 8);
    uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16);
    v33(v29, v31 + *(void *)(v67 + 72) * v22, v32);
    uint64_t v34 = *(void *)(v18 + 56);
    uint64_t v68 = *(void *)(v8 + 72);
    sub_25B1806D0(v34 + v68 * v22, v30, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v35 = (uint64_t)v60;
    v33((uint64_t)v60, v29, v32);
    sub_25B1806D0(v30, v35 + *(int *)(v28 + 48), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v36 = v61;
    sub_25B187574(v35, v61, &qword_26A4D9EE8);
    sub_25B116DE0(v29, &qword_26A4D9EE8);
    uint64_t v37 = *(int *)(v28 + 48);
    uint64_t v38 = v62;
    uint64_t v39 = (uint64_t)&v62[v37];
    uint64_t v40 = v36 + v37;
    v33((uint64_t)v62, v36, v32);
    uint64_t v41 = (uint64_t)v57;
    sub_25B1806D0(v40, v39, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B18095C(v39, v41, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v38, v32);
    sub_25B116DE0(v36, &qword_26A4D9EE8);
    uint64_t v12 = v69[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25B22411C(0, *(void *)(v12 + 16) + 1, 1);
      uint64_t v12 = v69[0];
    }
    unint64_t v43 = *(void *)(v12 + 16);
    unint64_t v42 = *(void *)(v12 + 24);
    uint64_t v8 = v58;
    if (v43 >= v42 >> 1)
    {
      sub_25B22411C(v42 > 1, v43 + 1, 1);
      uint64_t v12 = v69[0];
    }
    *(void *)(v12 + 16) = v43 + 1;
    uint64_t result = sub_25B18095C(v41, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ v43 * v68, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v18 = v56;
    char v25 = *(unsigned char *)(v56 + 32);
    unint64_t v26 = 1 << v25;
    if (v22 >= 1 << v25) {
      goto LABEL_31;
    }
    uint64_t v24 = v55;
    unint64_t v44 = v66;
    uint64_t v45 = *(void *)(v55 + 8 * v66);
    if ((v45 & v65) == 0) {
      goto LABEL_32;
    }
    LODWORD(v21) = v54;
    if (*(_DWORD *)(v56 + 36) != v54) {
      goto LABEL_33;
    }
    unint64_t v46 = v45 & (-2 << (v22 & 0x3F));
    if (v46)
    {
      unint64_t v26 = __clz(__rbit64(v46)) | v22 & 0xFFFFFFFFFFFFFFC0;
      int64_t v27 = v53;
    }
    else
    {
      unint64_t v47 = v66 + 1;
      unint64_t v48 = (v26 + 63) >> 6;
      int64_t v27 = v53;
      if (v66 + 1 < v48)
      {
        unint64_t v49 = *(void *)(v55 + 8 * v47);
        if (!v49)
        {
          unint64_t v47 = v66 + 2;
          if (v66 + 2 >= v48) {
            goto LABEL_5;
          }
          unint64_t v49 = *(void *)(v55 + 8 * v47);
          if (!v49)
          {
            while (v48 - 3 != v44)
            {
              unint64_t v49 = *(void *)(v51 + 8 * v44++);
              if (v49)
              {
                unint64_t v47 = v44 + 2;
                goto LABEL_20;
              }
            }
            goto LABEL_5;
          }
        }
LABEL_20:
        unint64_t v26 = __clz(__rbit64(v49)) + (v47 << 6);
      }
    }
LABEL_5:
    uint64_t v23 = v64 + 1;
    uint64_t v22 = v26;
    if (v64 + 1 == v27) {
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_25B12AA78(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v30 = MEMORY[0x263F8EE78];
  sub_25B2240C0(0, v1, 0);
  uint64_t v2 = v30;
  uint64_t result = sub_25B1A7EF0(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  uint64_t v24 = a1 + 80;
  int64_t v25 = v1;
  uint64_t v9 = a1;
  int v26 = v5;
  uint64_t v27 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v9 + 32))
  {
    unint64_t v12 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v9 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v13 = (uint64_t *)(*(void *)(v9 + 48) + 32 * v6);
    uint64_t v14 = v13[1];
    uint64_t v15 = v13[3];
    uint64_t v28 = v13[2];
    uint64_t v29 = *v13;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v17 = *(void *)(v30 + 16);
    unint64_t v16 = *(void *)(v30 + 24);
    if (v17 >= v16 >> 1) {
      uint64_t result = sub_25B2240C0(v16 > 1, v17 + 1, 1);
    }
    *(void *)(v30 + 16) = v17 + 1;
    uint64_t v18 = (void *)(v30 + 32 * v17);
    v18[4] = v29;
    v18[5] = v14;
    v18[6] = v28;
    v18[7] = v15;
    int64_t v10 = 1 << *(unsigned char *)(v9 + 32);
    if (v6 >= v10) {
      goto LABEL_25;
    }
    uint64_t v8 = v27;
    uint64_t v19 = *(void *)(v27 + 8 * v12);
    if ((v19 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v26;
    if (*(_DWORD *)(v9 + 36) != v26) {
      goto LABEL_27;
    }
    unint64_t v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      int64_t v10 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v11 = v25;
    }
    else
    {
      unint64_t v21 = v12 + 1;
      unint64_t v22 = (unint64_t)(v10 + 63) >> 6;
      int64_t v11 = v25;
      if (v12 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          int64_t v10 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v12)
          {
            unint64_t v23 = *(void *)(v24 + 8 * v12++);
            if (v23)
            {
              unint64_t v21 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v10;
    if (v7 == v11) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25B12ACA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(BOOL, unint64_t, uint64_t), uint64_t (*a4)(uint64_t))
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (!v4) {
    return v5;
  }
  uint64_t v7 = a1;
  uint64_t v38 = MEMORY[0x263F8EE78];
  a3(0, v4, 0);
  uint64_t v5 = v38;
  uint64_t result = a4(v7);
  uint64_t v10 = result;
  uint64_t v11 = 0;
  uint64_t v12 = v7 + 64;
  uint64_t v29 = v7 + 80;
  unint64_t v30 = v4;
  int v31 = v9;
  uint64_t v32 = v7 + 64;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(v7 + 32))
  {
    unint64_t v15 = (unint64_t)v10 >> 6;
    if ((*(void *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v7 + 36) != v9) {
      goto LABEL_24;
    }
    uint64_t v33 = v11;
    unint64_t v16 = (uint64_t *)(*(void *)(v7 + 56) + 48 * v10);
    uint64_t v17 = v16[1];
    uint64_t v18 = v16[3];
    uint64_t v36 = v16[2];
    uint64_t v37 = *v16;
    uint64_t v34 = v16[5];
    uint64_t v35 = v16[4];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = v7;
    unint64_t v21 = *(void *)(v38 + 16);
    unint64_t v20 = *(void *)(v38 + 24);
    if (v21 >= v20 >> 1) {
      uint64_t result = a3(v20 > 1, v21 + 1, 1);
    }
    *(void *)(v38 + 16) = v21 + 1;
    unint64_t v22 = (void *)(v38 + 48 * v21);
    v22[4] = v37;
    v22[5] = v17;
    v22[6] = v36;
    v22[7] = v18;
    v22[8] = v35;
    v22[9] = v34;
    int64_t v13 = 1 << *(unsigned char *)(v19 + 32);
    if (v10 >= v13) {
      goto LABEL_25;
    }
    uint64_t v12 = v32;
    uint64_t v23 = *(void *)(v32 + 8 * v15);
    if ((v23 & (1 << v10)) == 0) {
      goto LABEL_26;
    }
    uint64_t v7 = v19;
    int v9 = v31;
    if (*(_DWORD *)(v19 + 36) != v31) {
      goto LABEL_27;
    }
    unint64_t v24 = v23 & (-2 << (v10 & 0x3F));
    if (v24)
    {
      int64_t v13 = __clz(__rbit64(v24)) | v10 & 0xFFFFFFFFFFFFFFC0;
      unint64_t v14 = v30;
    }
    else
    {
      unint64_t v25 = v15 + 1;
      unint64_t v26 = (unint64_t)(v13 + 63) >> 6;
      unint64_t v14 = v30;
      if (v15 + 1 < v26)
      {
        unint64_t v27 = *(void *)(v32 + 8 * v25);
        if (v27)
        {
LABEL_20:
          int64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        }
        else
        {
          while (v26 - 2 != v15)
          {
            unint64_t v27 = *(void *)(v29 + 8 * v15++);
            if (v27)
            {
              unint64_t v25 = v15 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v11 = v33 + 1;
    uint64_t v10 = v13;
    if (v33 + 1 == v14) {
      return v5;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25B12AF18(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_25B224214(0, v1, 0);
  uint64_t v2 = v26;
  uint64_t result = sub_25B1A7EF0(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v22 = v1;
  int v23 = v5;
  uint64_t v24 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v6);
    uint64_t v13 = v12[1];
    uint64_t v25 = *v12;
    unint64_t v15 = *(void *)(v26 + 16);
    unint64_t v14 = *(void *)(v26 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_25B224214(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v26 + 16) = v15 + 1;
    uint64_t v16 = v26 + 16 * v15;
    *(void *)(v16 + 32) = v25;
    *(void *)(v16 + 40) = v13;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v17 = *(void *)(v24 + 8 * v11);
    if ((v17 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23) {
      goto LABEL_27;
    }
    unint64_t v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      int64_t v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v22;
    }
    else
    {
      unint64_t v19 = v11 + 1;
      unint64_t v20 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v22;
      if (v11 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v24 + 8 * v19);
        if (v21)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            unint64_t v21 = *(void *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              unint64_t v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25B12B124()
{
  v189 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v149 = *((void *)v189 - 1);
  uint64_t v1 = MEMORY[0x270FA5388](v189);
  uint64_t v144 = (uint64_t)&v129 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v150 = (char *)&v129 - v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v129 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EF0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  int64_t v10 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v146 = (char *)&v129 - v11;
  uint64_t v12 = sub_25B290410();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (uint64_t *)((char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(v0 + 232);
  *unint64_t v15 = v16;
  uint64_t v17 = *(void (**)(void))(v13 + 104);
  LODWORD(v148) = *MEMORY[0x263F8F0E0];
  int v151 = (void (*)(void *, uint64_t, uint64_t))v17;
  v17(v15);
  id v140 = v16;
  LOBYTE(v16) = sub_25B290440();
  uint64_t v143 = *(char **)(v13 + 8);
  uint64_t result = ((uint64_t (*)(void *, uint64_t))v143)(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  char v145 = v6;
  if (*(unsigned char *)(v0 + 472)) {
    return result;
  }
  uint64_t v19 = v0;
  uint64_t v20 = *(void *)(v0 + 184);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(ObjectType, v20);
  if (!v23)
  {
    if (qword_26A4D98C0 == -1)
    {
LABEL_10:
      uint64_t v29 = sub_25B290190();
      __swift_project_value_buffer(v29, (uint64_t)qword_26A4EB150);
      unint64_t v30 = sub_25B290160();
      os_log_type_t v31 = sub_25B2908A0();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl(&dword_25B107000, v30, v31, "Delaying migration until we have a valid local device ID", v32, 2u);
        MEMORY[0x261160890](v32, -1, -1);
      }

      sub_25B1802D0();
      swift_allocError();
      return swift_willThrow();
    }
LABEL_57:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v138 = v10;
  uint64_t v134 = v22;
  uint64_t v135 = v23;
  *(unsigned char *)(v0 + 472) = 1;
  swift_beginAccess();
  sub_25B10FF48(v0 + 192, (uint64_t)&v178);
  uint64_t v24 = *((void *)&v179 + 1);
  uint64_t v25 = v180;
  __swift_project_boxed_opaque_existential_1(&v178, *((uint64_t *)&v179 + 1));
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v25 + 8) + 8) + 8))(v24);
  unint64_t v141 = v27;
  if (!v27)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v178);
    swift_beginAccess();
    uint64_t v33 = *(void *)(v19 + 216);
    uint64_t v34 = *(void *)(v19 + 224);
    __swift_mutable_project_boxed_opaque_existential_1(v19 + 192, v33);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 + 16) + 16))(v134, v135, v33);
    return swift_endAccess();
  }
  uint64_t v28 = v26;
  uint64_t v137 = v19 + 192;
  uint64_t v130 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v178);
  uint64_t v142 = v28;
  if (v28 == v134 && v141 == v135 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_25B18A4FC();
  if (v36)
  {
    uint64_t v136 = v36;
    uint64_t v139 = v35;
  }
  else
  {
    id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB0]), sel_init);
    id v38 = objc_msgSend(v37, sel_hostName);
    uint64_t v139 = sub_25B2905C0();
    uint64_t v136 = v39;
  }
  uint64_t v40 = (uint64_t)v138;
  uint64_t v41 = v148;
  unint64_t v42 = v140;
  long long v155 = xmmword_25B293210;
  uint64_t v43 = v130;
  LOBYTE(v152[0]) = *(unsigned char *)(v130 + 96);
  char v44 = *(unsigned char *)(v130 + 136);
  char v45 = *(unsigned char *)(v130 + 137);
  long long v46 = *(_OWORD *)(v130 + 120);
  long long v167 = *(_OWORD *)(v130 + 104);
  long long v168 = v46;
  LOBYTE(v169) = v44;
  BYTE1(v169) = v45;
  *unint64_t v15 = v140;
  v151(v15, v41, v12);
  id v140 = v42;
  LOBYTE(v42) = sub_25B290440();
  unint64_t v47 = (uint64_t (*)(void *, uint64_t))v143;
  uint64_t result = ((uint64_t (*)(void *, uint64_t))v143)(v15, v12);
  if ((v42 & 1) == 0)
  {
    __break(1u);
    goto LABEL_59;
  }
  swift_beginAccess();
  swift_retain();
  uint64_t v48 = swift_bridgeObjectRetain();
  uint64_t v49 = v147;
  *(void *)&long long v133 = sub_25B17BCD4(v48, v43);
  uint64_t v147 = v49;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v50 = v140;
  *unint64_t v15 = v140;
  v151(v15, v148, v12);
  id v51 = v50;
  LOBYTE(v50) = sub_25B290440();
  uint64_t result = v47(v15, v12);
  if ((v50 & 1) == 0)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  swift_beginAccess();
  swift_retain();
  uint64_t v52 = swift_bridgeObjectRetain();
  uint64_t v53 = v147;
  uint64_t v54 = sub_25B186DF0(v52, v43, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_25B17C13C);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v55 = sub_25B12ACA4(v54, (uint64_t)&v166, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_25B224158, sub_25B1A7EF0);
  uint64_t v147 = v53;
  swift_release();
  uint64_t v56 = *(void *)(v43 + 624);
  unint64_t v57 = *(void *)(v43 + 632);
  sub_25B1142EC(v56, v57);
  uint64_t v58 = sub_25B18A4FC();
  uint64_t v60 = v59;
  *(void *)&long long v128 = sub_25B18A4FC();
  *((void *)&v128 + 1) = v61;
  *(void *)&long long v127 = v58;
  *((void *)&v127 + 1) = v60;
  DeviceDescriptor.init(id:name:protocolVersion:deviceType:screenDescriptor:zones:messageTypes:idsIdentityBlob:marketingName:productType:personaID:)(v134, v135, v139, v136, (uint64_t *)&v155, (char *)v152, (uint64_t *)&v167, v133, &v178, v55, v56, v57, v127, v128, 0);
  long long v175 = v186;
  long long v176 = v187;
  long long v177 = v188;
  long long v171 = v182;
  long long v172 = v183;
  long long v173 = v184;
  long long v174 = v185;
  long long v167 = v178;
  long long v168 = v179;
  long long v169 = v180;
  long long v170 = v181;
  uint64_t v62 = v137;
  sub_25B10FF48(v137, (uint64_t)&v155);
  uint64_t v64 = *((void *)&v156 + 1);
  uint64_t v63 = v157;
  __swift_project_boxed_opaque_existential_1(&v155, *((uint64_t *)&v156 + 1));
  uint64_t v65 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v63 + 8) + 8) + 32))(v64);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v155);
  uint64_t v148 = 0;
  uint64_t v67 = *(void *)(v65 + 64);
  uint64_t v131 = v65 + 64;
  id v140 = (id)v65;
  uint64_t v68 = 1 << *(unsigned char *)(v65 + 32);
  uint64_t v69 = -1;
  if (v68 < 64) {
    uint64_t v69 = ~(-1 << v68);
  }
  unint64_t v70 = v69 & v67;
  uint64_t v72 = (uint64_t)v145;
  uint64_t v71 = (uint64_t)v146;
  uint64_t v143 = v145 + 8;
  uint64_t v136 = (unint64_t)(v68 + 63) >> 6;
  uint64_t v129 = v136 - 1;
  *(void *)&long long v66 = 136315650;
  long long v133 = v66;
  uint64_t v132 = MEMORY[0x263F8EE58] + 8;
  uint64_t v73 = v189;
  while (1)
  {
    if (v70)
    {
      int v151 = (void (*)(void *, uint64_t, uint64_t))((v70 - 1) & v70);
      unint64_t v77 = __clz(__rbit64(v70)) | (v148 << 6);
LABEL_26:
      uint64_t v78 = v140;
      uint64_t v79 = *((void *)v140 + 6);
      uint64_t v80 = sub_25B290080();
      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v40, v79 + *(void *)(*(void *)(v80 - 8) + 72) * v77, v80);
      uint64_t v81 = v78[7] + *(void *)(v149 + 72) * v77;
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
      sub_25B1806D0(v81, v40 + *(int *)(v82 + 48), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v40, 0, 1, v82);
      goto LABEL_45;
    }
    uint64_t v83 = v148 + 1;
    if (__OFADD__(v148, 1)) {
      goto LABEL_56;
    }
    if (v83 < v136)
    {
      unint64_t v84 = *(void *)(v131 + 8 * v83);
      if (v84) {
        goto LABEL_30;
      }
      uint64_t v85 = v148 + 2;
      ++v148;
      if (v83 + 1 < v136)
      {
        unint64_t v84 = *(void *)(v131 + 8 * v85);
        if (v84) {
          goto LABEL_33;
        }
        uint64_t v148 = v83 + 1;
        if (v83 + 2 < v136)
        {
          unint64_t v84 = *(void *)(v131 + 8 * (v83 + 2));
          if (v84)
          {
            v83 += 2;
            goto LABEL_30;
          }
          uint64_t v85 = v83 + 3;
          uint64_t v148 = v83 + 2;
          if (v83 + 3 < v136) {
            break;
          }
        }
      }
    }
LABEL_44:
    uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v40, 1, 1, v86);
    int v151 = 0;
LABEL_45:
    sub_25B187574(v40, v71, &qword_26A4D9EF0);
    uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 48))(v71, 1, v87) == 1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_beginAccess();
      uint64_t v125 = *(void *)(v130 + 216);
      uint64_t v126 = *(void *)(v130 + 224);
      __swift_mutable_project_boxed_opaque_existential_1(v62, v125);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v126 + 16) + 16))(v134, v135, v125);
      swift_endAccess();
      return sub_25B11DEBC((uint64_t)&v167);
    }
    sub_25B18095C(v71 + *(int *)(v87 + 48), v72, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    if (*(void *)&v143[v73[8]] == 2)
    {
      uint64_t v88 = sub_25B290080();
      uint64_t v89 = *(void (**)(char *, uint64_t))(*(void *)(v88 - 8) + 16);
      uint64_t v90 = v150;
      uint64_t v139 = v88;
      v89(v150, v72);
      uint64_t v91 = (long long *)(v72 + v73[5]);
      long long v92 = v91[9];
      long long v163 = v91[8];
      long long v164 = v92;
      long long v165 = v91[10];
      long long v93 = v91[5];
      long long v159 = v91[4];
      long long v160 = v93;
      long long v94 = v91[7];
      long long v161 = v91[6];
      long long v162 = v94;
      long long v95 = v91[3];
      long long v157 = v91[2];
      long long v158 = v95;
      long long v96 = v91[1];
      long long v155 = *v91;
      long long v156 = v96;
      uint64_t v97 = v73[6];
      uint64_t v98 = v72 + v97;
      os_log_type_t v99 = &v90[v97];
      uint64_t v100 = v72;
      uint64_t v101 = sub_25B290000();
      uint64_t v102 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v101 - 8) + 16);
      v102(v99, v98, v101);
      v102(&v90[v189[7]], v100 + v189[7], v101);
      v102(&v90[v189[9]], v100 + v189[9], v101);
      uint64_t v73 = v189;
      unint64_t v103 = (long long *)&v90[v189[5]];
      long long v104 = v164;
      v103[8] = v163;
      v103[9] = v104;
      v103[10] = v165;
      long long v105 = v160;
      v103[4] = v159;
      v103[5] = v105;
      long long v106 = v162;
      v103[6] = v161;
      v103[7] = v106;
      long long v107 = v156;
      long long *v103 = v155;
      v103[1] = v107;
      long long v108 = v158;
      v103[2] = v157;
      v103[3] = v108;
      uint64_t v109 = &v90[v73[8]];
      unint64_t v110 = v141;
      *(void *)uint64_t v109 = v142;
      *((void *)v109 + 1) = v110;
      sub_25B1172F8((uint64_t)&v155);
      uint64_t v111 = qword_26A4D98C0;
      swift_bridgeObjectRetain();
      if (v111 != -1) {
        swift_once();
      }
      uint64_t v112 = sub_25B290190();
      __swift_project_value_buffer(v112, (uint64_t)qword_26A4EB150);
      uint64_t v113 = v144;
      sub_25B1806D0(v100, v144, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      swift_bridgeObjectRetain();
      sub_25B1172F8((uint64_t)&v167);
      swift_bridgeObjectRetain();
      sub_25B1172F8((uint64_t)&v167);
      unint64_t v114 = sub_25B290160();
      os_log_type_t v115 = sub_25B2908A0();
      if (os_log_type_enabled(v114, v115))
      {
        uint64_t v116 = swift_slowAlloc();
        uint64_t v117 = swift_slowAlloc();
        v152[0] = v117;
        *(_DWORD *)uint64_t v116 = v133;
        sub_25B1875E0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
        uint64_t v118 = sub_25B290DB0();
        *(void *)(v116 + 4) = sub_25B288E98(v118, v119, v152);
        swift_bridgeObjectRelease();
        sub_25B180A5C(v113, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        *(_WORD *)(v116 + 12) = 2080;
        long long v120 = v167;
        swift_bridgeObjectRetain();
        *(void *)(v116 + 14) = sub_25B288E98(v120, *((unint64_t *)&v120 + 1), v152);
        swift_bridgeObjectRelease();
        sub_25B11DEBC((uint64_t)&v167);
        sub_25B11DEBC((uint64_t)&v167);
        *(_WORD *)(v116 + 22) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v116 + 24) = sub_25B288E98(v142, v110, v152);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25B107000, v114, v115, "Initiating migration for relationship %s. Current local ID: %s; stored local ID: %s",
          (uint8_t *)v116,
          0x20u);
        swift_arrayDestroy();
        MEMORY[0x261160890](v117, -1, -1);
        uint64_t v121 = v116;
        uint64_t v73 = v189;
        MEMORY[0x261160890](v121, -1, -1);
      }
      else
      {
        sub_25B180A5C(v113, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        sub_25B11DEBC((uint64_t)&v167);
        sub_25B11DEBC((uint64_t)&v167);

        swift_bridgeObjectRelease_n();
      }
      uint64_t v62 = v137;
      uint64_t v40 = (uint64_t)v138;
      sub_25B10FF48(v137, (uint64_t)v152);
      uint64_t v122 = v153;
      uint64_t v123 = v154;
      __swift_project_boxed_opaque_existential_1(v152, v153);
      uint64_t v124 = (uint64_t)v150;
      (*(void (**)(char *, uint64_t))(*(void *)(v123 + 16) + 88))(v150, v122);
      sub_25B180A5C(v124, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v72 = (uint64_t)v145;
      sub_25B180A5C((uint64_t)v145, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v152);
      uint64_t v71 = (uint64_t)v146;
    }
    else
    {
      sub_25B10FF48(v62, (uint64_t)&v155);
      uint64_t v74 = *((void *)&v156 + 1);
      uint64_t v75 = v157;
      __swift_project_boxed_opaque_existential_1(&v155, *((uint64_t *)&v156 + 1));
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v75 + 16) + 96))(v72, v74);
      sub_25B180A5C(v72, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v155);
    }
    uint64_t v76 = sub_25B290080();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v76 - 8) + 8))(v71, v76);
    unint64_t v70 = (unint64_t)v151;
  }
  unint64_t v84 = *(void *)(v131 + 8 * v85);
  if (v84)
  {
LABEL_33:
    uint64_t v83 = v85;
LABEL_30:
    int v151 = (void (*)(void *, uint64_t, uint64_t))((v84 - 1) & v84);
    unint64_t v77 = __clz(__rbit64(v84)) + (v83 << 6);
    uint64_t v148 = v83;
    goto LABEL_26;
  }
  while (1)
  {
    uint64_t v83 = v85 + 1;
    if (__OFADD__(v85, 1)) {
      break;
    }
    if (v83 >= v136)
    {
      uint64_t v148 = v129;
      goto LABEL_44;
    }
    unint64_t v84 = *(void *)(v131 + 8 * v83);
    ++v85;
    if (v84) {
      goto LABEL_30;
    }
  }
LABEL_60:
  __break(1u);
  return result;
}

uint64_t Replicator.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_25B116DE0(v0 + 56, &qword_26A4D9DE8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 192);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 264);
  __swift_destroy_boxed_opaque_existential_1(v0 + 304);
  __swift_destroy_boxed_opaque_existential_1(v0 + 344);
  __swift_destroy_boxed_opaque_existential_1(v0 + 384);
  sub_25B116DE0(v0 + 424, (uint64_t *)&unk_26A4D9F08);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 480);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_25B111FF0(*(void *)(v0 + 624), *(void *)(v0 + 632));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t Replicator.__deallocating_deinit()
{
  Replicator.deinit();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall Replicator.set(messageTypes:)(Swift::OpaquePointer messageTypes)
{
  uint64_t v3 = v1[29];
  uint64_t v4 = (Swift::OpaquePointer *)swift_allocObject();
  v4[2]._rawValue = v1;
  v4[3]._rawValue = messageTypes._rawValue;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25B1B7434(0xD000000000000014, 0x800000025B29C280, v3, (uint64_t)sub_25B17B804, (uint64_t)v4, 0.0);
  swift_release();
}

uint64_t sub_25B12C3C8(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)(a3 + 640);
  swift_beginAccess();
  *(void *)(a3 + 640) = MEMORY[0x263F8EE80];
  uint64_t v8 = swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a4 + 16);
  if (!v9) {
    return a1(v8);
  }
  uint64_t v35 = a1;
  swift_bridgeObjectRetain();
  int64_t v10 = (uint64_t *)(a4 + 72);
  uint64_t v36 = v7;
  while (1)
  {
    uint64_t v13 = *(v10 - 5);
    uint64_t v12 = *(v10 - 4);
    uint64_t v15 = *(v10 - 3);
    uint64_t v14 = *(v10 - 2);
    uint64_t v16 = *v10;
    uint64_t v37 = v9;
    uint64_t v38 = *(v10 - 1);
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v7;
    uint64_t v39 = (void *)*v7;
    *uint64_t v7 = 0x8000000000000000;
    unint64_t v20 = sub_25B18A6AC(v13, v12, v15, v14);
    uint64_t v21 = *(void *)(v18 + 16);
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      break;
    }
    char v24 = v19;
    if (*(void *)(v18 + 24) >= v23)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v27 = v38;
        uint64_t v28 = v39;
        if (v19) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_25B1929E4();
        uint64_t v27 = v38;
        uint64_t v28 = v39;
        if (v24) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_25B18C134(v23, isUniquelyReferenced_nonNull_native);
      unint64_t v25 = sub_25B18A6AC(v13, v12, v15, v14);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_20;
      }
      unint64_t v20 = v25;
      uint64_t v27 = v38;
      uint64_t v28 = v39;
      if (v24)
      {
LABEL_3:
        uint64_t v11 = (uint64_t *)(v28[7] + 48 * v20);
        *uint64_t v11 = v13;
        v11[1] = v12;
        v11[2] = v15;
        v11[3] = v14;
        v11[4] = v27;
        v11[5] = v16;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    v28[(v20 >> 6) + 8] |= 1 << v20;
    uint64_t v29 = (uint64_t *)(v28[6] + 32 * v20);
    *uint64_t v29 = v13;
    v29[1] = v12;
    v29[2] = v15;
    v29[3] = v14;
    unint64_t v30 = (uint64_t *)(v28[7] + 48 * v20);
    *unint64_t v30 = v13;
    v30[1] = v12;
    v30[2] = v15;
    v30[3] = v14;
    v30[4] = v27;
    v30[5] = v16;
    uint64_t v31 = v28[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_19;
    }
    void v28[2] = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_4:
    v10 += 6;
    uint64_t v7 = v36;
    void *v36 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v9 = v37 - 1;
    if (v37 == 1)
    {
      uint64_t v8 = swift_bridgeObjectRelease();
      a1 = v35;
      return a1(v8);
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t sub_25B12C660(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(v3 + 232);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25B1B7434(0xD000000000000014, 0x800000025B29C280, v4, (uint64_t)sub_25B187BC0, v5, 0.0);
  return swift_release();
}

uint64_t Replicator.isAllowListEnabled.getter()
{
  return sub_25B12C724();
}

uint64_t sub_25B12C724()
{
  sub_25B290900();
  return v1;
}

uint64_t Replicator.isAllowListEnabled.setter(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(NSObject **)(v2 + 232);
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_25B17C4C8;
  *(void *)(v6 + 24) = v5;
  v9[4] = sub_25B117398;
  v9[5] = v6;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  void v9[2] = sub_25B10D184;
  v9[3] = &block_descriptor_45;
  uint64_t v7 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B12C8CC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = a1 + 192;
  swift_beginAccess();
  sub_25B10FF48(v3, (uint64_t)v7);
  uint64_t v5 = v8;
  uint64_t v4 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  *a2 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v4 + 8) + 8) + 40))(v5) & 1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t sub_25B12C96C(char a1, uint64_t a2)
{
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_25B290190();
  __swift_project_value_buffer(v4, (uint64_t)qword_26A4EB150);
  uint64_t v5 = sub_25B290160();
  os_log_type_t v6 = sub_25B2908A0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67240192;
    LODWORD(v15[0]) = a1 & 1;
    sub_25B2909C0();
    _os_log_impl(&dword_25B107000, v5, v6, "Allow List state changed to enabled: %{BOOL,public}d", v7, 8u);
    MEMORY[0x261160890](v7, -1, -1);
  }

  swift_beginAccess();
  uint64_t v8 = *(void *)(a2 + 216);
  uint64_t v9 = *(void *)(a2 + 224);
  __swift_mutable_project_boxed_opaque_existential_1(a2 + 192, v8);
  (*(void (**)(void, uint64_t))(*(void *)(v9 + 16) + 48))(a1 & 1, v8);
  uint64_t v10 = *(void *)(a2 + 216);
  uint64_t v11 = *(void *)(a2 + 224);
  __swift_mutable_project_boxed_opaque_existential_1(a2 + 192, v10);
  (*(void (**)(void, uint64_t))(*(void *)(v11 + 16) + 64))(MEMORY[0x263F8EE88], v10);
  swift_endAccess();
  sub_25B10FF48(a2 + 192, (uint64_t)v15);
  uint64_t v13 = v16;
  uint64_t v12 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v12 + 8) + 8) + 32))(v13);
  sub_25B290210();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

void (*Replicator.isAllowListEnabled.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x48uLL);
  *a1 = v4;
  uint64_t v5 = *(void *)(v1 + 232);
  void v4[6] = v2;
  v4[7] = v5;
  sub_25B290900();
  *((unsigned char *)v4 + 64) = *(unsigned char *)v4;
  return sub_25B12CC18;
}

void sub_25B12CC18(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  char v3 = *(unsigned char *)(*(void *)a1 + 64);
  uint64_t v5 = *(void *)(*(void *)a1 + 48);
  uint64_t isEscapingClosureAtFileLocation = *(void *)(*(void *)a1 + 56);
  if (a2)
  {
    uint64_t v6 = swift_allocObject();
    *(unsigned char *)(v6 + 16) = v3;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = swift_allocObject();
    char v3 = v7;
    *(void *)(v7 + 16) = sub_25B1877D8;
    *(void *)(v7 + 24) = v6;
    v2[4] = sub_25B117398;
    v2[5] = v7;
    *uint64_t v2 = MEMORY[0x263EF8330];
    v2[1] = 1107296256;
    v2[2] = sub_25B10D184;
    v2[3] = &block_descriptor_58_0;
    uint64_t v8 = _Block_copy(v2);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)isEscapingClosureAtFileLocation, v8);
    _Block_release(v8);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_25B1877D8;
  *(void *)(v10 + 24) = v9;
  v2[4] = sub_25B117398;
  v2[5] = v10;
  *uint64_t v2 = MEMORY[0x263EF8330];
  v2[1] = 1107296256;
  v2[2] = sub_25B10D184;
  v2[3] = &block_descriptor_69;
  uint64_t v11 = _Block_copy(v2);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)isEscapingClosureAtFileLocation, v11);
  _Block_release(v11);
  char v12 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v12)
  {
    __break(1u);
    return;
  }
LABEL_5:
  free(v2);
}

uint64_t Replicator.allowList.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA660);
  sub_25B290900();
  return v1;
}

uint64_t sub_25B12CF08@<X0>(void *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA660);
  uint64_t result = sub_25B290900();
  *a1 = v3;
  return result;
}

uint64_t Replicator.allowList.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(NSObject **)(v2 + 232);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_25B17C550;
  *(void *)(v6 + 24) = v5;
  v9[4] = sub_25B117398;
  v9[5] = v6;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  void v9[2] = sub_25B10D184;
  v9[3] = &block_descriptor_79;
  uint64_t v7 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B12D0D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1 + 192;
  swift_beginAccess();
  sub_25B10FF48(v3, (uint64_t)v7);
  uint64_t v5 = v8;
  uint64_t v4 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  *a2 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v4 + 8) + 8) + 48))(v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t sub_25B12D170(uint64_t a1, uint64_t a2)
{
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_25B290190();
  __swift_project_value_buffer(v3, (uint64_t)qword_26A4EB150);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_25B290160();
  os_log_type_t v5 = sub_25B2908A0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    v19[0] = v7;
    *(_DWORD *)uint64_t v6 = 136446210;
    sub_25B290080();
    sub_25B1875E0(&qword_26A4D9220, MEMORY[0x263F07508]);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_25B290820();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_25B288E98(v8, v10, v19);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v4, v5, "Allow List updated: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v7, -1, -1);
    MEMORY[0x261160890](v6, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t v11 = *(void *)(a2 + 216);
  uint64_t v12 = *(void *)(a2 + 224);
  __swift_mutable_project_boxed_opaque_existential_1(a2 + 192, v11);
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 64);
  uint64_t v15 = swift_bridgeObjectRetain();
  v14(v15, v11, v13);
  swift_endAccess();
  sub_25B10FF48(a2 + 192, (uint64_t)v19);
  uint64_t v17 = v20;
  uint64_t v16 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v16 + 8) + 8) + 32))(v17);
  sub_25B290210();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

void (*Replicator.allowList.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x48uLL);
  *a1 = v4;
  uint64_t v5 = *(void *)(v1 + 232);
  v4[7] = v2;
  v4[8] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA660);
  sub_25B290900();
  return sub_25B12D4E8;
}

void sub_25B12D4E8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 48);
  uint64_t v5 = *(void *)(*(void *)a1 + 56);
  uint64_t v4 = *(NSObject **)(*(void *)a1 + 64);
  if ((a2 & 1) == 0)
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v3;
    *(void *)(v10 + 24) = v5;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_25B1877DC;
    *(void *)(v11 + 24) = v10;
    v2[4] = sub_25B117398;
    v2[5] = v11;
    *uint64_t v2 = MEMORY[0x263EF8330];
    v2[1] = 1107296256;
    v2[2] = sub_25B10D184;
    v2[3] = &block_descriptor_102;
    uint64_t v12 = _Block_copy(v2);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v4, v12);
    _Block_release(v12);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      goto LABEL_5;
    }
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v5;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_25B1877DC;
  *(void *)(v7 + 24) = v6;
  v2[4] = sub_25B117398;
  v2[5] = v7;
  *uint64_t v2 = MEMORY[0x263EF8330];
  v2[1] = 1107296256;
  v2[2] = sub_25B10D184;
  v2[3] = &block_descriptor_91;
  uint64_t v8 = _Block_copy(v2);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v8);
  _Block_release(v8);
  char v9 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
LABEL_5:
  free(v2);
}

uint64_t sub_25B12D784()
{
  return sub_25B139078();
}

uint64_t sub_25B12D79C(char a1)
{
  return Replicator.isAllowListEnabled.setter(a1);
}

uint64_t (*sub_25B12D7C0(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Replicator.isAllowListEnabled.modify(v2);
  return sub_25B12D81C;
}

uint64_t sub_25B12D820()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA660);
  sub_25B290900();
  return v1;
}

uint64_t sub_25B12D88C(uint64_t a1)
{
  return Replicator.allowList.setter(a1);
}

uint64_t (*sub_25B12D8B0(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Replicator.allowList.modify(v2);
  return sub_25B12D81C;
}

uint64_t Replicator.pairingRelationships(filter:)()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9F50);
  sub_25B290900();
  return v1;
}

uint64_t sub_25B12D980@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = a2 + 192;
  if (a1)
  {
    swift_beginAccess();
    sub_25B10FF48(v4, (uint64_t)v12);
    uint64_t v9 = v13;
    uint64_t v8 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v8 + 8) + 8) + 32))(v9);
    uint64_t v7 = sub_25B1762A4(v10, (uint64_t (*)(char *, unint64_t, uint64_t))sub_25B176410);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    sub_25B10FF48(v4, (uint64_t)v12);
    uint64_t v6 = v13;
    uint64_t v5 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v5 + 8) + 8) + 32))(v6);
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  *a3 = v7;
  return result;
}

uint64_t Replicator.pairingRelationship(relationshipID:)(uint64_t a1)
{
  return sub_25B133EA0(a1, &qword_26A4D9610);
}

uint64_t Replicator.pairingRelationship(remoteDeviceID:)()
{
  return sub_25B290900();
}

uint64_t sub_25B12DB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 192;
  swift_beginAccess();
  sub_25B10FF48(v7, (uint64_t)v11);
  uint64_t v8 = v12;
  uint64_t v9 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  MetadataStoring.pairingRelationship(remoteDeviceID:)(a2, a3, v8, *(void *)(v9 + 8), a4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t Replicator.resolveProtocolVersion(for:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA668);
  sub_25B290900();
  return v1;
}

unint64_t sub_25B12DC54(uint64_t a1)
{
  uint64_t v3 = sub_25B290410();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v1 + 232);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F0E0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_25B290440();
  unint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    uint64_t v10 = a1 + *(int *)(type metadata accessor for PairingRelationship() + 20);
    unint64_t result = *(void *)(v10 + 32);
    unint64_t v11 = *(void *)(v10 + 40);
    if (v11 <= 4)
    {
      if (result <= 0xF)
      {
        if (result < 4) {
          return 0;
        }
      }
      else
      {
        return 15;
      }
    }
    else
    {
      if (result >= 0xF) {
        unint64_t result = 15;
      }
      if (result < v11) {
        return 0;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B12DDBC()
{
  return sub_25B120C10();
}

uint64_t sub_25B12DDE0()
{
  return sub_25B120D2C();
}

uint64_t sub_25B12DE04()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9F50);
  sub_25B290900();
  return v1;
}

uint64_t sub_25B12DE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B1394AC(a1, a2, a3, &qword_26A4D9610);
}

uint64_t sub_25B12DE98()
{
  return sub_25B290900();
}

uint64_t sub_25B12DF0C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA668);
  sub_25B290900();
  return v1;
}

uint64_t sub_25B12DF80(uint64_t a1)
{
  return Replicator.unavailable(relationshipID:)(a1);
}

uint64_t Replicator.unavailable(relationshipID:)(uint64_t a1)
{
  uint64_t v3 = sub_25B290080();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = *(NSObject **)(v1 + 232);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_25B17C738;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_25B117398;
  void aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10D184;
  aBlock[3] = &block_descriptor_112;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t Replicator.pair(with:completion:)(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v8 = a1[9];
  v24[8] = a1[8];
  v24[9] = v8;
  v24[10] = a1[10];
  long long v9 = a1[5];
  v24[4] = a1[4];
  v24[5] = v9;
  long long v10 = a1[7];
  v24[6] = a1[6];
  v24[7] = v10;
  long long v11 = a1[1];
  v24[0] = *a1;
  v24[1] = v11;
  long long v12 = a1[3];
  v24[2] = a1[2];
  v24[3] = v12;
  uint64_t v13 = *(NSObject **)(v3 + 232);
  uint64_t v14 = swift_allocObject();
  long long v15 = a1[9];
  *(_OWORD *)(v14 + 144) = a1[8];
  *(_OWORD *)(v14 + 160) = v15;
  *(_OWORD *)(v14 + 176) = a1[10];
  long long v16 = a1[5];
  *(_OWORD *)(v14 + 80) = a1[4];
  *(_OWORD *)(v14 + 96) = v16;
  long long v17 = a1[7];
  *(_OWORD *)(v14 + 112) = a1[6];
  *(_OWORD *)(v14 + 128) = v17;
  long long v18 = a1[1];
  *(_OWORD *)(v14 + 16) = *a1;
  *(_OWORD *)(v14 + 32) = v18;
  long long v19 = a1[3];
  *(_OWORD *)(v14 + 48) = a1[2];
  *(_OWORD *)(v14 + 64) = v19;
  *(void *)(v14 + 192) = v4;
  *(void *)(v14 + 200) = a2;
  *(void *)(v14 + 208) = a3;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_25B17C804;
  *(void *)(v20 + 24) = v14;
  v23[4] = sub_25B117398;
  v23[5] = v20;
  v23[0] = MEMORY[0x263EF8330];
  v23[1] = 1107296256;
  v23[2] = sub_25B10D184;
  v23[3] = &block_descriptor_122;
  uint64_t v21 = _Block_copy(v23);
  sub_25B1172F8((uint64_t)v24);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v13, v21);
  _Block_release(v21);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B12E39C(uint64_t a1, void *a2, void (*a3)(void, void), uint64_t a4)
{
  LOBYTE(v26[0]) = *(unsigned char *)(a1 + 48);
  uint64_t v8 = sub_25B290600();
  unint64_t v10 = v9;
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_25B290190();
  __swift_project_value_buffer(v11, (uint64_t)qword_26A4EB150);
  swift_retain_n();
  swift_bridgeObjectRetain();
  long long v12 = sub_25B290160();
  os_log_type_t v13 = sub_25B2908A0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v23 = v8;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(void *)&v26[0] = v24;
    *(_DWORD *)uint64_t v14 = 136446466;
    uint64_t v15 = a2[66];
    uint64_t v25 = a4;
    unint64_t v16 = a2[67];
    swift_bridgeObjectRetain();
    sub_25B288E98(v15, v16, (uint64_t *)v26);
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_25B288E98(v23, v10, (uint64_t *)v26);
    a4 = v25;
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v12, v13, "(%{public}s) [Replicator.pair()] performing immediate pairing with unknown device of type %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v24, -1, -1);
    MEMORY[0x261160890](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  long long v17 = *(_OWORD *)(a1 + 144);
  v26[8] = *(_OWORD *)(a1 + 128);
  v26[9] = v17;
  v26[10] = *(_OWORD *)(a1 + 160);
  long long v18 = *(_OWORD *)(a1 + 80);
  v26[4] = *(_OWORD *)(a1 + 64);
  v26[5] = v18;
  long long v19 = *(_OWORD *)(a1 + 112);
  v26[6] = *(_OWORD *)(a1 + 96);
  v26[7] = v19;
  long long v20 = *(_OWORD *)(a1 + 16);
  v26[0] = *(_OWORD *)a1;
  v26[1] = v20;
  long long v21 = *(_OWORD *)(a1 + 48);
  v26[2] = *(_OWORD *)(a1 + 32);
  v26[3] = v21;
  swift_retain();
  sub_25B17D784((uint64_t)v26, a2, a3, a4);
  return swift_release();
}

uint64_t Replicator.pair(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v10 = *(NSObject **)(v5 + 232);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v5;
  void v11[3] = a1;
  v11[4] = a2;
  v11[5] = a3;
  v11[6] = a4;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_25B17C840;
  *(void *)(v12 + 24) = v11;
  v15[4] = sub_25B117398;
  v15[5] = v12;
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 1107296256;
  v15[2] = sub_25B10D184;
  void v15[3] = &block_descriptor_132;
  os_log_type_t v13 = _Block_copy(v15);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v10) {
    __break(1u);
  }
  return result;
}

void sub_25B12E7CC(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void, void), void *a5)
{
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_25B290190();
  __swift_project_value_buffer(v10, (uint64_t)qword_26A4EB150);
  swift_retain();
  uint64_t v11 = sub_25B290160();
  os_log_type_t v12 = sub_25B2908A0();
  if (os_log_type_enabled(v11, v12))
  {
    long long v21 = a5;
    os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = v14;
    *(_DWORD *)os_log_type_t v13 = 136446210;
    unint64_t v20 = a3;
    uint64_t v15 = a2;
    unint64_t v16 = a4;
    uint64_t v17 = *(void *)(a1 + 528);
    unint64_t v18 = *(void *)(a1 + 536);
    swift_bridgeObjectRetain();
    uint64_t v19 = v17;
    a4 = v16;
    a2 = v15;
    sub_25B288E98(v19, v18, &v22);
    a5 = v21;
    sub_25B2909C0();
    swift_release();
    a3 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v11, v12, "(%{public}s) [Replicator.pair()] performing immediate pairing with known device", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v14, -1, -1);
    MEMORY[0x261160890](v13, -1, -1);
  }
  else
  {

    swift_release();
  }
  sub_25B12F1EC(a2, a3, a4, a5);
}

void sub_25B12E9C4(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v6 = sub_25B290320();
  uint64_t v50 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v48 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_25B290360();
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  long long v46 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25B290410();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v12 = (uint64_t *)((char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v13 = (void *)a3[29];
  *os_log_type_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F8F0E0], v9);
  id v14 = v13;
  char v15 = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v15)
  {
    if (qword_26A4D98C0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v16 = sub_25B290190();
  __swift_project_value_buffer(v16, (uint64_t)qword_26A4EB150);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_25B290160();
  os_log_type_t v18 = sub_25B2908A0();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v51 = (uint64_t)v14;
  if (v19)
  {
    uint64_t v45 = v6;
    unint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(void *)&long long v54 = v21;
    *(_DWORD *)unint64_t v20 = 136446210;
    swift_bridgeObjectRetain();
    aBlock[0] = sub_25B288E98(a1, a2, (uint64_t *)&v54);
    uint64_t v6 = v45;
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v17, v18, "Pairing with device: %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v21, -1, -1);
    MEMORY[0x261160890](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v57 = 0;
  long long v55 = 0u;
  long long v56 = 0u;
  long long v54 = 0u;
  sub_25B167714(a3, a1, a2, (uint64_t *)&v54, (uint64_t)nullsub_1, 0, (char *)aBlock);
  char v22 = aBlock[0];
  if (LOBYTE(aBlock[0]) != 8)
  {
    sub_25B11641C(v54, *((uint64_t *)&v54 + 1));
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = nullsub_1;
    *(void *)(v31 + 24) = 0;
    *(unsigned char *)(v31 + 32) = v22;
    aBlock[4] = (uint64_t)sub_25B184B3C;
    void aBlock[5] = v31;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_25B10F584;
    aBlock[3] = (uint64_t)&block_descriptor_1489;
    BOOL v32 = _Block_copy(aBlock);
    uint64_t v33 = v46;
    sub_25B290340();
    uint64_t v53 = MEMORY[0x263F8EE78];
    sub_25B1875E0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
    uint64_t v34 = v48;
    sub_25B290A00();
    MEMORY[0x26115F250](0, v33, v34, v32);
    _Block_release(v32);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v6);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v49);
    goto LABEL_10;
  }
  uint64_t v23 = *((void *)&v54 + 1);
  if (*((void *)&v54 + 1))
  {
    uint64_t v25 = *((void *)&v56 + 1);
    uint64_t v24 = v57;
    uint64_t v27 = *((void *)&v55 + 1);
    char v26 = v56;
    uint64_t v28 = v55;
    uint64_t v29 = v54;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = a3;
    *(void *)(v30 + 24) = v29;
    *(void *)(v30 + 32) = v23;
    *(void *)(v30 + 40) = v28;
    *(void *)(v30 + 48) = v27;
    *(unsigned char *)(v30 + 56) = v26;
    *(_DWORD *)(v30 + 57) = aBlock[0];
    *(_DWORD *)(v30 + 60) = *(_DWORD *)((char *)aBlock + 3);
    *(void *)(v30 + 64) = v25;
    *(void *)(v30 + 72) = v24;
    swift_retain();
    sub_25B1B7434(0xD000000000000013, 0x800000025B29C8C0, v51, (uint64_t)sub_25B184B00, v30, 0.0);
LABEL_10:
    swift_release();
    return;
  }
  uint64_t v51 = a1;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v35 = sub_25B290160();
  os_log_type_t v36 = sub_25B290880();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    aBlock[0] = v38;
    *(_DWORD *)uint64_t v37 = 136315394;
    if (a3[32])
    {
      uint64_t v39 = a3[31];
      unint64_t v40 = a3[32];
    }
    else
    {
      uint64_t v41 = a3[23];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(ObjectType, v41);
      if (v44) {
        uint64_t v39 = v43;
      }
      else {
        uint64_t v39 = 0xD000000000000016;
      }
      if (v44) {
        unint64_t v40 = v44;
      }
      else {
        unint64_t v40 = 0x800000025B29C2A0;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_25B288E98(v39, v40, aBlock);
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_25B288E98(v51, a2, aBlock);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v35, v36, "%s Cannot pair with a device that has no handshakeDescriptor: %s, privacy: .public)", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v38, -1, -1);
    MEMORY[0x261160890](v37, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

void sub_25B12F1EC(uint64_t a1, unint64_t a2, void (*a3)(void, void), id a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_25B290320();
  uint64_t v60 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v58 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_25B290360();
  uint64_t v57 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  long long v56 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25B290410();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (void (**)(void, void))((char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = (void *)v5[29];
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8F0E0], v13);
  id v61 = v17;
  LOBYTE(v17) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    if (qword_26A4D98C0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v18 = sub_25B290190();
  __swift_project_value_buffer(v18, (uint64_t)qword_26A4EB150);
  swift_bridgeObjectRetain_n();
  BOOL v19 = sub_25B290160();
  os_log_type_t v20 = sub_25B2908A0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v55 = v10;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    long long v54 = v5;
    uint64_t v53 = a3;
    id v23 = a4;
    uint64_t v24 = (uint8_t *)v22;
    uint64_t v25 = swift_slowAlloc();
    *(void *)&long long v64 = v25;
    *(_DWORD *)uint64_t v24 = 136446210;
    swift_bridgeObjectRetain();
    aBlock[0] = sub_25B288E98(a1, a2, (uint64_t *)&v64);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v19, v20, "Pairing with device: %{public}s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v25, -1, -1);
    char v26 = v24;
    a4 = v23;
    a3 = v53;
    uint64_t v5 = v54;
    MEMORY[0x261160890](v26, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v67 = 0;
  long long v65 = 0u;
  long long v66 = 0u;
  long long v64 = 0u;
  sub_25B167714(v5, a1, a2, (uint64_t *)&v64, (uint64_t)a3, (uint64_t)a4, (char *)aBlock);
  char v27 = aBlock[0];
  if (LOBYTE(aBlock[0]) == 8)
  {
    uint64_t v28 = *((void *)&v64 + 1);
    if (*((void *)&v64 + 1))
    {
      uint64_t v30 = *((void *)&v66 + 1);
      uint64_t v29 = v67;
      uint64_t v32 = *((void *)&v65 + 1);
      char v31 = v66;
      uint64_t v33 = v65;
      uint64_t v34 = v64;
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v5;
      *(void *)(v35 + 24) = v34;
      *(void *)(v35 + 32) = v28;
      *(void *)(v35 + 40) = v33;
      *(void *)(v35 + 48) = v32;
      *(unsigned char *)(v35 + 56) = v31;
      *(_DWORD *)(v35 + 57) = aBlock[0];
      *(_DWORD *)(v35 + 60) = *(_DWORD *)((char *)aBlock + 3);
      *(void *)(v35 + 64) = v30;
      *(void *)(v35 + 72) = v29;
      swift_retain();
      sub_25B1B7434(0xD000000000000013, 0x800000025B29C8C0, (uint64_t)v61, (uint64_t)sub_25B184B00, v35, 0.0);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      uint64_t v41 = sub_25B290160();
      os_log_type_t v42 = sub_25B290880();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v60 = a1;
        id v61 = a4;
        uint64_t v43 = swift_slowAlloc();
        uint64_t v59 = swift_slowAlloc();
        aBlock[0] = v59;
        *(_DWORD *)uint64_t v43 = 136315394;
        if (v5[32])
        {
          uint64_t v44 = v5[31];
          unint64_t v45 = v5[32];
        }
        else
        {
          uint64_t v46 = v5[23];
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(ObjectType, v46);
          if (v49) {
            uint64_t v44 = v48;
          }
          else {
            uint64_t v44 = 0xD000000000000016;
          }
          if (v49) {
            unint64_t v45 = v49;
          }
          else {
            unint64_t v45 = 0x800000025B29C2A0;
          }
        }
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_25B288E98(v44, v45, aBlock);
        sub_25B2909C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_25B288E98(v60, a2, aBlock);
        sub_25B2909C0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25B107000, v41, v42, "%s Cannot pair with a device that has no handshakeDescriptor: %s, privacy: .public)", (uint8_t *)v43, 0x16u);
        uint64_t v50 = v59;
        swift_arrayDestroy();
        MEMORY[0x261160890](v50, -1, -1);
        MEMORY[0x261160890](v43, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      sub_25B182988();
      uint64_t v51 = (void *)swift_allocError();
      *uint64_t v52 = 1;
      a3(v51, 1);
    }
  }
  else
  {
    sub_25B11641C(v64, *((uint64_t *)&v64 + 1));
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = a3;
    *(void *)(v36 + 24) = a4;
    *(unsigned char *)(v36 + 32) = v27;
    aBlock[4] = (uint64_t)sub_25B187BC4;
    void aBlock[5] = v36;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_25B10F584;
    aBlock[3] = (uint64_t)&block_descriptor_1503;
    uint64_t v37 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v38 = v56;
    sub_25B290340();
    uint64_t v63 = MEMORY[0x263F8EE78];
    sub_25B1875E0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
    uint64_t v39 = v58;
    uint64_t v40 = v55;
    sub_25B290A00();
    MEMORY[0x26115F250](0, v38, v39, v37);
    _Block_release(v37);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v59);
    swift_release();
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Replicator.unpair(remoteDeviceID:)(Swift::String remoteDeviceID)
{
}

uint64_t sub_25B12FACC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v35 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PairingRelationship();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v33 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v34 = (uint64_t)&v31 - v12;
  uint64_t v13 = sub_25B290410();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)(v3 + 232);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8F0E0], v13);
  id v32 = v17;
  LOBYTE(v17) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_5;
  }
  swift_beginAccess();
  sub_25B10FF48(v3 + 192, (uint64_t)v36);
  uint64_t v18 = v37;
  uint64_t v19 = v38;
  __swift_project_boxed_opaque_existential_1(v36, v37);
  MetadataStoring.pairingRelationship(remoteDeviceID:)(v35, a2, v18, *(void *)(v19 + 8), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_25B116DE0((uint64_t)v7, &qword_26A4D9610);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    sub_25B182988();
    swift_allocError();
    *os_log_type_t v20 = 1;
    return swift_willThrow();
  }
  sub_25B18095C((uint64_t)v7, v34, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  if (qword_26A4D98C0 != -1) {
    goto LABEL_10;
  }
LABEL_5:
  uint64_t v22 = sub_25B290190();
  __swift_project_value_buffer(v22, (uint64_t)qword_26A4EB150);
  swift_bridgeObjectRetain_n();
  id v23 = sub_25B290160();
  os_log_type_t v24 = sub_25B2908A0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v36[0] = v26;
    *(_DWORD *)uint64_t v25 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_25B288E98(v35, a2, v36);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v23, v24, "Unpairing device: %{public}s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v26, -1, -1);
    MEMORY[0x261160890](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v27 = v34;
  uint64_t v28 = v33;
  sub_25B1806D0(v34, v33, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  unint64_t v29 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v3;
  sub_25B18095C(v28, v30 + v29, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  swift_retain();
  sub_25B1B7434(0xD000000000000015, 0x800000025B29CA10, (uint64_t)v32, (uint64_t)sub_25B18736C, v30, 0.0);
  swift_release();
  return sub_25B180A5C(v27, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
}

Swift::Void __swiftcall Replicator.removePairingRelationship(remoteDeviceID:)(Swift::String remoteDeviceID)
{
  uint64_t v2 = v1;
  object = remoteDeviceID._object;
  uint64_t countAndFlagsBits = remoteDeviceID._countAndFlagsBits;
  uint64_t v5 = *(NSObject **)(v2 + 232);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v2;
  v6[3] = countAndFlagsBits;
  v6[4] = object;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_25B17C8AC;
  *(void *)(v7 + 24) = v6;
  v9[4] = sub_25B117398;
  v9[5] = v7;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  void v9[2] = sub_25B10D184;
  v9[3] = &block_descriptor_142;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v5) {
    __break(1u);
  }
}

uint64_t sub_25B130190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v4 = sub_25B290410();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PairingRelationship();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  uint64_t v15 = a1 + 192;
  swift_beginAccess();
  sub_25B10FF48(a1 + 192, (uint64_t)v27);
  uint64_t v17 = v28;
  uint64_t v16 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  MetadataStoring.pairingRelationship(remoteDeviceID:)(v25, v26, v17, *(void *)(v16 + 8), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_25B116DE0((uint64_t)v10, &qword_26A4D9610);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    sub_25B18095C((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    uint64_t v19 = *(void **)(v24 + 232);
    *uint64_t v7 = v19;
    (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
    id v20 = v19;
    LOBYTE(v19) = sub_25B290440();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
    if (v19)
    {
      sub_25B130988((uint64_t)v14);
      sub_25B10FF48(v15, (uint64_t)v27);
      uint64_t v21 = v28;
      uint64_t v22 = v29;
      __swift_project_boxed_opaque_existential_1(v27, v28);
      (*(void (**)(char *, uint64_t))(*(void *)(v22 + 16) + 96))(v14, v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      return sub_25B180A5C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t Replicator._queue_removePairingRelationship(relationship:)(uint64_t a1)
{
  uint64_t v3 = sub_25B290410();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *(void **)(v1 + 232);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F0E0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    sub_25B130988(a1);
    swift_beginAccess();
    sub_25B10FF48(v1 + 192, (uint64_t)v13);
    uint64_t v10 = v14;
    uint64_t v11 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 + 16) + 96))(a1, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Replicator._queue_removePairingRelationship(relationshipID:)(uint64_t a1)
{
  uint64_t v33 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PairingRelationship();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v32 = (uint64_t)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25B290410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (void *)((char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(v1 + 232);
  *uint64_t v11 = v12;
  uint64_t v13 = *(void (**)(void))(v9 + 104);
  unsigned int v31 = *MEMORY[0x263F8F0E0];
  uint64_t v30 = v13;
  v13(v11);
  id v29 = v12;
  char v14 = sub_25B290440();
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t))(v9 + 8);
  uint64_t result = v15(v11, v8);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  v27[1] = v1;
  uint64_t v28 = v15;
  uint64_t v17 = v1 + 192;
  swift_beginAccess();
  sub_25B10FF48(v1 + 192, (uint64_t)v34);
  uint64_t v18 = v35;
  uint64_t v19 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  MetadataStoring.pairingRelationship(relationshipID:)(v33, v18, *(void *)(v19 + 8), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_25B116DE0((uint64_t)v4, &qword_26A4D9610);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
  uint64_t v20 = (uint64_t)v4;
  uint64_t v21 = v32;
  sub_25B18095C(v20, v32, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  uint64_t v23 = v29;
  uint64_t v22 = (void (*)(void *, void, uint64_t))v30;
  *uint64_t v11 = v29;
  v22(v11, v31, v8);
  id v24 = v23;
  LOBYTE(v23) = sub_25B290440();
  uint64_t result = v28(v11, v8);
  if ((v23 & 1) == 0) {
    goto LABEL_8;
  }
  sub_25B130988(v21);
  sub_25B10FF48(v17, (uint64_t)v34);
  uint64_t v25 = v35;
  uint64_t v26 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 + 16) + 96))(v21, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_25B180A5C(v21, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
}

uint64_t sub_25B130988(uint64_t a1)
{
  uint64_t v300 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA720);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  v287 = (char *)v274 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  v305 = (char *)v274 - v5;
  unint64_t v6 = sub_25B290080();
  uint64_t v317 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  v288 = (char *)v274 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  v318 = (char *)v274 - v10;
  MEMORY[0x270FA5388](v9);
  v320 = (char *)v274 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  v286 = (char *)v274 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  v297 = (char *)v274 - v15;
  uint64_t v314 = type metadata accessor for RecordMetadata();
  uint64_t v316 = *(void *)(v314 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v314);
  uint64_t v285 = (uint64_t)v274 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v298 = (char *)v274 - v19;
  MEMORY[0x270FA5388](v18);
  v312 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)v274 - v20);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D93A8);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v309 = (uint64_t)v274 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v304 = (uint64_t)v274 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v319 = (uint64_t)v274 - v26;
  v295 = (void (**)(char *, uint64_t, unint64_t))type metadata accessor for Record.ID(0);
  uint64_t v330 = (uint64_t)*(v295 - 1);
  uint64_t v27 = MEMORY[0x270FA5388](v295);
  v307 = (char *)v274 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  v284 = (char *)v274 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  v279 = (void *)((char *)v274 - v32);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v278 = (uint64_t)v274 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v306 = (void *)((char *)v274 - v36);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v324 = (void *)((char *)v274 - v38);
  MEMORY[0x270FA5388](v37);
  uint64_t v40 = (char *)v274 - v39;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB170);
  uint64_t v42 = MEMORY[0x270FA5388](v41 - 8);
  v315 = (char *)v274 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v313 = (uint64_t)v274 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v321 = (uint64_t)v274 - v47;
  MEMORY[0x270FA5388](v46);
  uint64_t v49 = (uint64_t)v274 - v48;
  uint64_t v50 = type metadata accessor for MetadataRecordPredicate();
  uint64_t v51 = MEMORY[0x270FA5388](v50);
  uint64_t v290 = (uint64_t)v274 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v51);
  uint64_t v289 = (uint64_t)v274 - v53;
  v329 = (void (**)(uint64_t, unint64_t))type metadata accessor for PairingRelationship();
  uint64_t v54 = MEMORY[0x270FA5388](v329);
  uint64_t v328 = (uint64_t)v274 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v54);
  uint64_t v57 = (uint64_t)v274 - v56;
  uint64_t v58 = sub_25B290410();
  uint64_t v59 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  id v61 = (void *)((char *)v274 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v301 = v1;
  uint64_t v62 = *(void **)(v1 + 232);
  *id v61 = v62;
  (*(void (**)(void *, void, uint64_t))(v59 + 104))(v61, *MEMORY[0x263F8F0E0], v58);
  id v63 = v62;
  LOBYTE(v62) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v59 + 8))(v61, v58);
  if (v62)
  {
    uint64_t v331 = v50;
    if (qword_26A4D98C0 == -1) {
      goto LABEL_3;
    }
    goto LABEL_162;
  }
  while (1)
  {
    __break(1u);
LABEL_162:
    swift_once();
LABEL_3:
    uint64_t v64 = sub_25B290190();
    uint64_t v65 = __swift_project_value_buffer(v64, (uint64_t)qword_26A4EB150);
    sub_25B1806D0(v300, v57, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v66 = v301;
    swift_retain();
    uint64_t v283 = v65;
    uint64_t v67 = sub_25B290160();
    os_log_type_t v68 = sub_25B2908A0();
    BOOL v69 = os_log_type_enabled(v67, v68);
    unint64_t v325 = v6;
    if (v69)
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v327 = swift_slowAlloc();
      uint64_t v334 = v327;
      *(_DWORD *)uint64_t v70 = 136446466;
      uint64_t v71 = *(void *)(v66 + 528);
      unint64_t v72 = *(void *)(v66 + 536);
      swift_bridgeObjectRetain();
      uint64_t v333 = sub_25B288E98(v71, v72, &v334);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v70 + 12) = 2082;
      sub_25B1806D0(v57, v328, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v73 = sub_25B290600();
      uint64_t v333 = sub_25B288E98(v73, v74, &v334);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B180A5C(v57, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      _os_log_impl(&dword_25B107000, v67, v68, "(%{public}s) Discarding data for pairing relationship: %{public}s", (uint8_t *)v70, 0x16u);
      uint64_t v75 = v327;
      swift_arrayDestroy();
      MEMORY[0x261160890](v75, -1, -1);
      uint64_t v76 = v70;
      unint64_t v6 = v325;
      MEMORY[0x261160890](v76, -1, -1);
    }
    else
    {
      swift_release();
      sub_25B180A5C(v57, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    }

    uint64_t v77 = v331;
    uint64_t v78 = v289;
    uint64_t v79 = v289 + *(int *)(v331 + 32);
    v329 = (void (**)(uint64_t, unint64_t))type metadata accessor for PairingRelationship;
    uint64_t v80 = v300;
    sub_25B1806D0(v300, v79, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    *(_WORD *)uint64_t v78 = 256;
    *(unsigned char *)(v78 + 2) = 2;
    *(void *)(v78 + 8) = 0;
    uint64_t v81 = v66 + 192;
    swift_beginAccess();
    sub_25B10FF48(v66 + 192, (uint64_t)&v334);
    uint64_t v82 = v335;
    uint64_t v83 = v336;
    __swift_project_boxed_opaque_existential_1(&v334, v335);
    uint64_t v84 = MetadataStoring.recordVersions(matching:)(v78, v82, *(void *)(v83 + 8));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
    uint64_t v85 = v290;
    sub_25B1806D0(v80, v290 + *(int *)(v77 + 32), (uint64_t (*)(void))v329);
    *(_WORD *)uint64_t v85 = 1;
    *(unsigned char *)(v85 + 2) = 1;
    *(void *)(v85 + 8) = 0;
    uint64_t v327 = v81;
    sub_25B10FF48(v81, (uint64_t)&v334);
    uint64_t v86 = v335;
    uint64_t v87 = v336;
    __swift_project_boxed_opaque_existential_1(&v334, v335);
    uint64_t v308 = MetadataStoring.recordVersions(matching:)(v85, v86, *(void *)(v87 + 8));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
    uint64_t v322 = 0;
    uint64_t v88 = *(void *)(v84 + 64);
    uint64_t v299 = v84 + 64;
    uint64_t v311 = v84;
    uint64_t v89 = 1 << *(unsigned char *)(v84 + 32);
    uint64_t v90 = -1;
    if (v89 < 64) {
      uint64_t v90 = ~(-1 << v89);
    }
    unint64_t v91 = v90 & v88;
    uint64_t v328 = v317 + 16;
    v323 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v316 + 48);
    os_log_t v303 = (os_log_t)(v316 + 56);
    v329 = (void (**)(uint64_t, unint64_t))(v317 + 8);
    int64_t v302 = (unint64_t)(v89 + 63) >> 6;
    v296 = (unsigned int (**)(uint64_t, uint64_t, unint64_t))(v302 - 1);
    uint64_t v326 = MEMORY[0x263F8EE80];
    long long v310 = xmmword_25B292C10;
    while (1)
    {
      uint64_t v100 = v321;
      if (v91)
      {
        unint64_t v101 = __clz(__rbit64(v91));
        v91 &= v91 - 1;
        unint64_t v102 = v101 | (v322 << 6);
        uint64_t v57 = v314;
        goto LABEL_14;
      }
      int64_t v107 = v322 + 1;
      uint64_t v57 = v314;
      if (__OFADD__(v322, 1)) {
        goto LABEL_157;
      }
      if (v107 >= v302) {
        goto LABEL_32;
      }
      unint64_t v108 = *(void *)(v299 + 8 * v107);
      if (v108) {
        goto LABEL_18;
      }
      uint64_t v109 = v322 + 2;
      ++v322;
      if (v107 + 1 >= v302) {
        goto LABEL_32;
      }
      unint64_t v108 = *(void *)(v299 + 8 * v109);
      if (v108) {
        goto LABEL_21;
      }
      uint64_t v322 = v107 + 1;
      if (v107 + 2 >= v302) {
        goto LABEL_32;
      }
      unint64_t v108 = *(void *)(v299 + 8 * (v107 + 2));
      if (v108)
      {
        v107 += 2;
LABEL_18:
        unint64_t v91 = (v108 - 1) & v108;
        unint64_t v102 = __clz(__rbit64(v108)) + (v107 << 6);
        uint64_t v322 = v107;
LABEL_14:
        uint64_t v103 = v311;
        sub_25B1806D0(*(void *)(v311 + 48) + *(void *)(v330 + 72) * v102, v321, type metadata accessor for Record.ID);
        uint64_t v104 = v317;
        unint64_t v105 = *(void *)(v103 + 56) + *(void *)(v317 + 72) * v102;
        uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA728);
        (*(void (**)(uint64_t, unint64_t, unint64_t))(v104 + 16))(v100 + *(int *)(v106 + 48), v105, v6);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v100, 0, 1, v106);
        goto LABEL_33;
      }
      uint64_t v109 = v107 + 3;
      uint64_t v322 = v107 + 2;
      if (v107 + 3 >= v302) {
        goto LABEL_32;
      }
      unint64_t v108 = *(void *)(v299 + 8 * v109);
      if (v108)
      {
LABEL_21:
        int64_t v107 = v109;
        goto LABEL_18;
      }
      while (1)
      {
        int64_t v107 = v109 + 1;
        if (__OFADD__(v109, 1))
        {
          __break(1u);
          goto LABEL_164;
        }
        if (v107 >= v302) {
          break;
        }
        unint64_t v108 = *(void *)(v299 + 8 * v107);
        ++v109;
        if (v108) {
          goto LABEL_18;
        }
      }
      uint64_t v322 = (uint64_t)v296;
LABEL_32:
      uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA728);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v100, 1, 1, v110);
      unint64_t v91 = 0;
LABEL_33:
      sub_25B187574(v100, v49, &qword_26A4DB170);
      uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA728);
      uint64_t v112 = *(void *)(v111 - 8);
      uint64_t v113 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v112 + 48);
      unsigned int v114 = v113(v49, 1, v111);
      uint64_t v331 = v111;
      if (v114 == 1)
      {
        v312 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v113;
        swift_release();
        uint64_t v139 = 0;
        uint64_t v140 = 1 << *(unsigned char *)(v308 + 32);
        if (v140 < 64) {
          uint64_t v141 = ~(-1 << v140);
        }
        else {
          uint64_t v141 = -1;
        }
        unint64_t v142 = v141 & *(void *)(v308 + 64);
        unint64_t v143 = (unint64_t)(v140 + 63) >> 6;
        uint64_t v311 = v112 + 56;
        uint64_t v299 = v317 + 56;
        v296 = (unsigned int (**)(uint64_t, uint64_t, unint64_t))(v317 + 48);
        v295 = (void (**)(char *, uint64_t, unint64_t))(v317 + 32);
        v281 = &v333;
        v275 = (void *)(v143 - 1);
        uint64_t v304 = v143;
        v276 = (void *)(v143 - 5);
        int64_t v302 = v308 + 64;
        uint64_t v282 = v308 + 104;
        *(void *)&long long v138 = 136446466;
        long long v280 = v138;
        uint64_t v277 = MEMORY[0x263F8EE58] + 8;
        uint64_t v144 = v300;
        uint64_t v49 = (uint64_t)v297;
        uint64_t v40 = v298;
        char v145 = v306;
        uint64_t v146 = (uint64_t)v315;
        if (v142)
        {
LABEL_54:
          uint64_t v322 = (v142 - 1) & v142;
          v324 = v139;
          unint64_t v147 = __clz(__rbit64(v142)) | ((void)v139 << 6);
          goto LABEL_55;
        }
        while (2)
        {
          uint64_t v157 = (uint64_t)v139 + 1;
          if (__OFADD__(v139, 1)) {
            goto LABEL_158;
          }
          if (v157 >= v304)
          {
            v324 = v139;
            uint64_t v322 = 0;
            uint64_t v150 = 1;
          }
          else
          {
            unint64_t v158 = *(void *)(v302 + 8 * v157);
            if (v158) {
              goto LABEL_66;
            }
            if ((uint64_t)v139 + 2 >= v304)
            {
              uint64_t v322 = 0;
              uint64_t v150 = 1;
              v324 = (void *)((char *)v139 + 1);
            }
            else
            {
              unint64_t v158 = *(void *)(v302 + 8 * ((void)v139 + 2));
              if (v158)
              {
                uint64_t v157 = (uint64_t)v139 + 2;
                goto LABEL_66;
              }
              if ((uint64_t)v139 + 3 >= v304)
              {
                uint64_t v322 = 0;
                uint64_t v150 = 1;
                v324 = (void *)((char *)v139 + 2);
              }
              else
              {
                unint64_t v158 = *(void *)(v302 + 8 * ((void)v139 + 3));
                if (v158)
                {
                  uint64_t v157 = (uint64_t)v139 + 3;
LABEL_66:
                  uint64_t v322 = (v158 - 1) & v158;
                  unint64_t v147 = __clz(__rbit64(v158)) + (v157 << 6);
                  v324 = (void *)v157;
LABEL_55:
                  uint64_t v148 = v308;
                  sub_25B1806D0(*(void *)(v308 + 48) + *(void *)(v330 + 72) * v147, v146, type metadata accessor for Record.ID);
                  unint64_t v149 = *(void *)(v148 + 56) + *(void *)(v317 + 72) * v147;
                  uint64_t v111 = v331;
                  (*(void (**)(uint64_t, unint64_t, unint64_t))(v317 + 16))(v146 + *(int *)(v331 + 48), v149, v6);
                  uint64_t v150 = 0;
                  goto LABEL_56;
                }
                uint64_t v157 = (uint64_t)v139 + 4;
                if ((uint64_t)v139 + 4 >= v304)
                {
                  uint64_t v322 = 0;
                  uint64_t v150 = 1;
                  v324 = (void *)((char *)v139 + 3);
                }
                else
                {
                  unint64_t v158 = *(void *)(v302 + 8 * v157);
                  if (v158) {
                    goto LABEL_66;
                  }
                  while (v276 != v139)
                  {
                    unint64_t v158 = *(void *)(v282 + 8 * (void)v139);
                    uint64_t v139 = (void *)((char *)v139 + 1);
                    if (v158)
                    {
                      uint64_t v157 = (uint64_t)v139 + 4;
                      goto LABEL_66;
                    }
                  }
                  uint64_t v322 = 0;
                  uint64_t v150 = 1;
                  v324 = v275;
                }
              }
            }
          }
LABEL_56:
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v311)(v146, v150, 1, v111);
          uint64_t v151 = v313;
          sub_25B187574(v146, v313, &qword_26A4DB170);
          if (v312(v151, 1, v111) != 1)
          {
            uint64_t v321 = v151 + *(int *)(v111 + 48);
            sub_25B18095C(v151, (uint64_t)v145, type metadata accessor for Record.ID);
            sub_25B10FF48(v327, (uint64_t)&v334);
            uint64_t v152 = v335;
            uint64_t v153 = v336;
            __swift_project_boxed_opaque_existential_1(&v334, v335);
            uint64_t v154 = *(void *)(v153 + 8);
            uint64_t v155 = v309;
            MetadataStoring.metadata(for:)(v145, v152, v154, v309);
            if ((*v323)(v155, 1, v57) == 1)
            {
              sub_25B180A5C((uint64_t)v145, type metadata accessor for Record.ID);
              sub_25B116DE0(v155, &qword_26A4D93A8);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
              goto LABEL_61;
            }
            sub_25B18095C(v155, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
            uint64_t v156 = *(void *)&v40[*(int *)(v57 + 28)];
            if (!v156)
            {
              sub_25B180A5C((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
              char v145 = v306;
              sub_25B180A5C((uint64_t)v306, type metadata accessor for Record.ID);
              goto LABEL_61;
            }
            uint64_t v159 = sub_25B1875E0(&qword_26A4D9220, MEMORY[0x263F07508]);
            swift_bridgeObjectRetain();
            uint64_t v293 = v159;
            uint64_t v319 = sub_25B290830();
            long long v160 = *(NSObject **)(v156 + 16);
            char v145 = v306;
            uint64_t v161 = v156;
            uint64_t v146 = (uint64_t)v315;
            uint64_t v111 = v331;
            v292 = v160;
            v274[2] = v161;
            if (v160)
            {
              v274[1] = v299 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
              uint64_t v162 = v144;
              long long v163 = 0;
              unint64_t v291 = v161
                   + ((*(unsigned __int8 *)(v317 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v317 + 80));
              uint64_t v164 = *(void *)(v317 + 72);
              long long v165 = *(void (**)(uint64_t, unint64_t, unint64_t))(v317 + 16);
              do
              {
                os_log_t v303 = v163;
                v165(v49, v291 + v164 * (void)v163, v6);
                v294 = *(void (**)(uint64_t, void, uint64_t, unint64_t))v299;
                v294(v49, 0, 1, v6);
                if ((*v296)(v49, 1, v6) == 1)
                {
                  uint64_t v57 = v314;
                  uint64_t v144 = v162;
                  goto LABEL_91;
                }
                (*v295)(v320, v49, v6);
                uint64_t v171 = v319;
                swift_bridgeObjectRetain();
                uint64_t v172 = sub_25B290530();
                uint64_t v173 = -1 << *(unsigned char *)(v171 + 32);
                unint64_t v174 = v172 & ~v173;
                uint64_t v175 = v171 + 56;
                if ((*(void *)(v171 + 56 + ((v174 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v174))
                {
                  uint64_t v176 = ~v173;
                  while (1)
                  {
                    unint64_t v177 = *(void *)(v171 + 48) + v174 * v164;
                    long long v178 = v318;
                    unint64_t v179 = v325;
                    v165((uint64_t)v318, v177, v325);
                    sub_25B1875E0((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
                    char v180 = sub_25B290580();
                    long long v181 = *v329;
                    (*v329)((uint64_t)v178, v179);
                    if (v180) {
                      break;
                    }
                    unint64_t v174 = (v174 + 1) & v176;
                    uint64_t v171 = v319;
                    if (((*(void *)(v175 + ((v174 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v174) & 1) == 0) {
                      goto LABEL_74;
                    }
                  }
                  swift_bridgeObjectRelease();
                  unint64_t v6 = v325;
                  v181((uint64_t)v320, v325);
                }
                else
                {
LABEL_74:
                  swift_bridgeObjectRelease();
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v167 = (uint64_t)v318;
                  long long v168 = v320;
                  unint64_t v169 = v325;
                  v165((uint64_t)v318, (unint64_t)v320, v325);
                  uint64_t v334 = v171;
                  char v170 = isUniquelyReferenced_nonNull_native;
                  unint64_t v6 = v169;
                  sub_25B21AE74(v167, v174, v170);
                  uint64_t v319 = v334;
                  swift_bridgeObjectRelease();
                  (*v329)((uint64_t)v168, v169);
                }
                long long v163 = ((char *)&v303->isa + 1);
                uint64_t v162 = v300;
                uint64_t v49 = (uint64_t)v297;
                uint64_t v40 = v298;
                char v145 = v306;
                uint64_t v146 = (uint64_t)v315;
                uint64_t v111 = v331;
              }
              while (((char *)&v303->isa + 1) != v292);
              uint64_t v57 = v314;
              uint64_t v144 = v300;
              long long v182 = v294;
            }
            else
            {
              long long v182 = *(void (**)(uint64_t, void, uint64_t, unint64_t))v299;
            }
            v294 = v182;
            v182(v49, 1, 1, v6);
LABEL_91:
            swift_bridgeObjectRelease();
            if (sub_25B2107A0(v144, v319))
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D00);
              uint64_t v183 = v317;
              unint64_t v184 = (*(unsigned __int8 *)(v317 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v317 + 80);
              os_log_t v303 = *(os_log_t *)(v317 + 72);
              uint64_t v185 = swift_allocObject();
              *(_OWORD *)(v185 + 16) = v310;
              v292 = v185;
              uint64_t v186 = v144;
              long long v188 = *(void (**)(unint64_t, uint64_t, unint64_t))(v183 + 16);
              unint64_t v187 = v185 + v184;
              v188(v185 + v184, v186, v6);
              uint64_t v189 = sub_25B290830();
              v190 = v286;
              unint64_t v291 = v187;
              v188((unint64_t)v286, v187, v6);
              v294((uint64_t)v190, 0, 1, v6);
              if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v183 + 48))(v190, 1, v6) != 1)
              {
                (*v295)(v288, (uint64_t)v190, v6);
                swift_bridgeObjectRetain();
                uint64_t v191 = sub_25B290530();
                uint64_t v192 = -1 << *(unsigned char *)(v189 + 32);
                unint64_t v193 = v191 & ~v192;
                if ((*(void *)(v189 + 56 + ((v193 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v193))
                {
                  uint64_t v194 = ~v192;
                  while (1)
                  {
                    v195 = v318;
                    unint64_t v196 = v325;
                    v188((unint64_t)v318, *(void *)(v189 + 48) + v193 * (void)v303, v325);
                    sub_25B1875E0((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
                    char v197 = sub_25B290580();
                    v198 = *v329;
                    (*v329)((uint64_t)v195, v196);
                    if (v197) {
                      break;
                    }
                    unint64_t v193 = (v193 + 1) & v194;
                    if (((*(void *)(v189 + 56 + ((v193 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v193) & 1) == 0) {
                      goto LABEL_97;
                    }
                  }
                  swift_bridgeObjectRelease();
                  unint64_t v6 = v325;
                  v198((uint64_t)v288, v325);
                }
                else
                {
LABEL_97:
                  swift_bridgeObjectRelease();
                  char v199 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v200 = (uint64_t)v318;
                  v201 = v288;
                  unint64_t v202 = v325;
                  v188((unint64_t)v318, (uint64_t)v288, v325);
                  uint64_t v334 = v189;
                  unint64_t v203 = v193;
                  unint64_t v6 = v202;
                  sub_25B21AE74(v200, v203, v199);
                  uint64_t v189 = v334;
                  swift_bridgeObjectRelease();
                  (*v329)((uint64_t)v201, v202);
                }
                uint64_t v57 = v314;
                v294((uint64_t)v286, 1, 1, v6);
                uint64_t v40 = v298;
              }
              uint64_t v204 = (uint64_t)v284;
              swift_setDeallocating();
              swift_arrayDestroy();
              swift_deallocClassInstance();
              if (*(void *)(v189 + 16) <= *(void *)(v319 + 16) >> 3)
              {
                uint64_t v334 = v319;
                sub_25B1A4044(v189);
                swift_bridgeObjectRelease();
                uint64_t v205 = v334;
              }
              else
              {
                uint64_t v205 = sub_25B1A4714(v189, v319);
                swift_bridgeObjectRelease();
              }
              uint64_t v206 = (uint64_t)v306;
              uint64_t v207 = v301;
              if (*(void *)(v205 + 16))
              {
                sub_25B1806D0((uint64_t)v306, v204, type metadata accessor for Record.ID);
                swift_retain();
                v208 = sub_25B290160();
                os_log_type_t v209 = sub_25B2908A0();
                int v210 = v209;
                if (os_log_type_enabled(v208, v209))
                {
                  uint64_t v211 = swift_slowAlloc();
                  uint64_t v319 = swift_slowAlloc();
                  uint64_t v334 = v319;
                  *(_DWORD *)uint64_t v211 = v280;
                  os_log_t v303 = v208;
                  uint64_t v212 = *(void *)(v207 + 528);
                  unint64_t v213 = *(void *)(v207 + 536);
                  swift_bridgeObjectRetain();
                  uint64_t v214 = v212;
                  unint64_t v6 = v325;
                  uint64_t v332 = sub_25B288E98(v214, v213, &v334);
                  LODWORD(v294) = v210;
                  sub_25B2909C0();
                  swift_release();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v211 + 12) = 2082;
                  uint64_t v215 = Record.ID.description.getter();
                  uint64_t v332 = sub_25B288E98(v215, v216, &v334);
                  uint64_t v40 = v298;
                  sub_25B2909C0();
                  swift_bridgeObjectRelease();
                  sub_25B180A5C(v204, type metadata accessor for Record.ID);
                  v208 = v303;
                  _os_log_impl(&dword_25B107000, v303, (os_log_type_t)v294, "(%{public}s) Removing destination from record ID: %{public}s", (uint8_t *)v211, 0x16u);
                  uint64_t v217 = v319;
                  swift_arrayDestroy();
                  MEMORY[0x261160890](v217, -1, -1);
                  MEMORY[0x261160890](v211, -1, -1);
                }
                else
                {
                  swift_release();
                  sub_25B180A5C(v204, type metadata accessor for Record.ID);
                }

                uint64_t v227 = v285;
                sub_25B1806D0((uint64_t)v40, v285, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
                size_t v228 = sub_25B225398(v205);
                swift_bridgeObjectRelease();
                uint64_t v229 = *(int *)(v57 + 28);
                swift_bridgeObjectRelease();
                *(void *)(v227 + v229) = v228;
                sub_25B10FF48(v327, (uint64_t)&v334);
                uint64_t v230 = v335;
                uint64_t v231 = v336;
                __swift_project_boxed_opaque_existential_1(&v334, v335);
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9D20);
                unint64_t v232 = (*(unsigned __int8 *)(v316 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v316 + 80);
                uint64_t v233 = swift_allocObject();
                *(_OWORD *)(v233 + 16) = v310;
                sub_25B1806D0(v227, v233 + v232, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
                uint64_t v40 = v298;
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v231 + 16) + 104))(v233, v230);
                swift_bridgeObjectRelease();
                sub_25B180A5C((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
                char v145 = v306;
                sub_25B180A5C((uint64_t)v306, type metadata accessor for Record.ID);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
                sub_25B180A5C(v227, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
                uint64_t v144 = v300;
              }
              else
              {
                swift_bridgeObjectRelease();
                uint64_t v218 = v278;
                sub_25B1806D0(v206, v278, type metadata accessor for Record.ID);
                swift_retain();
                v219 = sub_25B290160();
                os_log_type_t v220 = sub_25B2908A0();
                if (os_log_type_enabled(v219, v220))
                {
                  uint64_t v221 = swift_slowAlloc();
                  uint64_t v319 = swift_slowAlloc();
                  uint64_t v334 = v319;
                  *(_DWORD *)uint64_t v221 = v280;
                  uint64_t v222 = *(void *)(v207 + 528);
                  unint64_t v223 = *(void *)(v207 + 536);
                  swift_bridgeObjectRetain();
                  uint64_t v332 = sub_25B288E98(v222, v223, &v334);
                  sub_25B2909C0();
                  swift_release();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v221 + 12) = 2082;
                  uint64_t v224 = Record.ID.description.getter();
                  uint64_t v332 = sub_25B288E98(v224, v225, &v334);
                  uint64_t v40 = v298;
                  sub_25B2909C0();
                  swift_bridgeObjectRelease();
                  sub_25B180A5C(v218, type metadata accessor for Record.ID);
                  _os_log_impl(&dword_25B107000, v219, v220, "(%{public}s) Removing record ID: %{public}s", (uint8_t *)v221, 0x16u);
                  uint64_t v226 = v319;
                  swift_arrayDestroy();
                  MEMORY[0x261160890](v226, -1, -1);
                  MEMORY[0x261160890](v221, -1, -1);
                }
                else
                {
                  swift_release();
                  sub_25B180A5C(v218, type metadata accessor for Record.ID);
                }

                uint64_t v234 = (uint64_t)v306;
                v235 = v279;
                sub_25B1806D0((uint64_t)v306, (uint64_t)v279, type metadata accessor for Record.ID);
                uint64_t v236 = v285;
                sub_25B1806D0((uint64_t)v40, v285, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
                uint64_t v237 = v326;
                char v238 = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v334 = v237;
                sub_25B220344(v236, v235, v238);
                uint64_t v326 = v334;
                swift_bridgeObjectRelease();
                sub_25B180A5C((uint64_t)v235, type metadata accessor for Record.ID);
                sub_25B10FF48(v327, (uint64_t)&v334);
                uint64_t v240 = v335;
                uint64_t v239 = v336;
                __swift_project_boxed_opaque_existential_1(&v334, v335);
                __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D58);
                unint64_t v241 = (*(unsigned __int8 *)(v330 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v330 + 80);
                uint64_t v242 = swift_allocObject();
                *(_OWORD *)(v242 + 16) = v310;
                sub_25B1806D0(v234, v242 + v241, type metadata accessor for Record.ID);
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v239 + 16) + 112))(v242, v240);
                char v145 = (void *)v234;
                uint64_t v40 = v298;
                swift_bridgeObjectRelease();
                sub_25B180A5C((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
                sub_25B180A5C(v234, type metadata accessor for Record.ID);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
                uint64_t v144 = v300;
                unint64_t v6 = v325;
              }
              uint64_t v49 = (uint64_t)v297;
LABEL_61:
              uint64_t v146 = (uint64_t)v315;
              uint64_t v111 = v331;
            }
            else
            {
              swift_bridgeObjectRelease();
              sub_25B180A5C((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
              sub_25B180A5C((uint64_t)v145, type metadata accessor for Record.ID);
            }
            (*v329)(v321, v6);
            uint64_t v139 = v324;
            unint64_t v142 = v322;
            if (v322) {
              goto LABEL_54;
            }
            continue;
          }
          break;
        }
        swift_release();
        uint64_t v243 = v326;
        uint64_t v244 = v326 + 64;
        uint64_t v245 = 1 << *(unsigned char *)(v326 + 32);
        uint64_t v246 = -1;
        if (v245 < 64) {
          uint64_t v246 = ~(-1 << v245);
        }
        uint64_t v49 = v246 & *(void *)(v326 + 64);
        v329 = (void (**)(uint64_t, unint64_t))(v301 + 240);
        swift_beginAccess();
        uint64_t v247 = 0;
        unint64_t v248 = (unint64_t)(v245 + 63) >> 6;
        uint64_t v327 = v244;
        uint64_t v328 = v248;
        unint64_t v325 = v248 - 5;
        v323 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v248 - 1);
        v324 = (void *)(v244 + 40);
        v249 = &qword_26A4D9860;
        uint64_t v250 = (uint64_t)v305;
        v251 = v307;
        unint64_t v6 = (unint64_t)v287;
        while (2)
        {
          if (v49)
          {
            unint64_t v252 = __clz(__rbit64(v49));
            v49 &= v49 - 1;
            unint64_t v253 = v252 | (v247 << 6);
            goto LABEL_129;
          }
          uint64_t v255 = v247 + 1;
          if (__OFADD__(v247, 1)) {
            goto LABEL_159;
          }
          if (v255 >= v328)
          {
            v257 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v247;
          }
          else
          {
            unint64_t v256 = *(void *)(v327 + 8 * v255);
            if (v256)
            {
LABEL_133:
              uint64_t v49 = (v256 - 1) & v256;
              unint64_t v253 = __clz(__rbit64(v256)) + (v255 << 6);
              uint64_t v247 = v255;
LABEL_129:
              sub_25B1806D0(*(void *)(v243 + 48) + *(void *)(v330 + 72) * v253, v6, type metadata accessor for Record.ID);
              uint64_t v254 = *(void *)(v243 + 56) + *(void *)(v316 + 72) * v253;
              uint64_t v40 = (char *)__swift_instantiateConcreteTypeFromMangledName(v249);
              sub_25B1806D0(v254, v6 + *((int *)v40 + 12), (uint64_t (*)(void))type metadata accessor for RecordMetadata);
              (*(void (**)(unint64_t, void, uint64_t, char *))(*((void *)v40 - 1) + 56))(v6, 0, 1, v40);
LABEL_136:
              sub_25B187574(v6, v250, &qword_26A4DA720);
              uint64_t v259 = __swift_instantiateConcreteTypeFromMangledName(v249);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v259 - 8) + 48))(v250, 1, v259) == 1)
              {
                swift_release();
                sub_25B180A5C(v290, (uint64_t (*)(void))type metadata accessor for MetadataRecordPredicate);
                return sub_25B180A5C(v289, (uint64_t (*)(void))type metadata accessor for MetadataRecordPredicate);
              }
              uint64_t v57 = *(int *)(v259 + 48);
              sub_25B18095C(v250, (uint64_t)v251, type metadata accessor for Record.ID);
              v260 = *v329;
              if (*((void *)*v329 + 2))
              {
                uint64_t v331 = v247;
                v261 = v249;
                unint64_t v262 = v6;
                uint64_t v40 = (char *)v251[4];
                uint64_t v263 = v251[5];
                v264 = v251;
                uint64_t v265 = v251[3];
                uint64_t v266 = v264[2];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                unint64_t v267 = sub_25B18A768(v266, v265, (uint64_t)v40, v263);
                if (v268)
                {
                  uint64_t v40 = *(char **)(*((void *)v260 + 7) + 8 * v267);
                  swift_retain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v332 = v301;
                  if (MEMORY[0x261160990](v40 + 16))
                  {
                    uint64_t v269 = *((void *)v40 + 3);
                    uint64_t ObjectType = swift_getObjectType();
                    v271 = *(void (**)(uint64_t *, char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v269 + 40);
                    uint64_t v272 = type metadata accessor for Replicator();
                    v271(&v332, v307, v272, &protocol witness table for Replicator, ObjectType, v269);
                    swift_release();
                    swift_unknownObjectRelease();
                  }
                  else
                  {
                    swift_release();
                  }
                  unint64_t v6 = v262;
                  uint64_t v250 = (uint64_t)v305;
                  v249 = v261;
                  v251 = v307;
                }
                else
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  unint64_t v6 = v262;
                  uint64_t v250 = (uint64_t)v305;
                  v251 = v307;
                  v249 = v261;
                }
                uint64_t v247 = v331;
              }
              sub_25B180A5C((uint64_t)v251, type metadata accessor for Record.ID);
              sub_25B180A5C(v250 + v57, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
              uint64_t v243 = v326;
              continue;
            }
            v257 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v247 + 1);
            if (v247 + 2 < v328)
            {
              unint64_t v256 = *(void *)(v327 + 8 * (v247 + 2));
              if (v256)
              {
                uint64_t v255 = v247 + 2;
                goto LABEL_133;
              }
              v257 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v247 + 2);
              if (v247 + 3 < v328)
              {
                unint64_t v256 = *(void *)(v327 + 8 * (v247 + 3));
                if (v256)
                {
                  uint64_t v255 = v247 + 3;
                  goto LABEL_133;
                }
                uint64_t v255 = v247 + 4;
                v257 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v247 + 3);
                if (v247 + 4 < v328)
                {
                  unint64_t v256 = *(void *)(v327 + 8 * v255);
                  if (v256) {
                    goto LABEL_133;
                  }
                  while (v325 != v247)
                  {
                    unint64_t v256 = v324[v247++];
                    if (v256)
                    {
                      uint64_t v255 = v247 + 4;
                      goto LABEL_133;
                    }
                  }
                  v257 = v323;
                }
              }
            }
          }
          break;
        }
        uint64_t v258 = __swift_instantiateConcreteTypeFromMangledName(v249);
        (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v258 - 8) + 56))(v6, 1, 1, v258);
        uint64_t v49 = 0;
        uint64_t v247 = (uint64_t)v257;
        goto LABEL_136;
      }
      sub_25B18095C(v49, (uint64_t)v40, type metadata accessor for Record.ID);
      os_log_type_t v115 = v324;
      sub_25B1806D0((uint64_t)v40, (uint64_t)v324, type metadata accessor for Record.ID);
      sub_25B10FF48(v327, (uint64_t)&v334);
      uint64_t v116 = v335;
      uint64_t v117 = v336;
      __swift_project_boxed_opaque_existential_1(&v334, v335);
      uint64_t v118 = *(void *)(v117 + 8);
      uint64_t v119 = v319;
      MetadataStoring.metadata(for:)(v40, v116, v118, v319);
      if ((*v323)(v119, 1, v57) != 1) {
        break;
      }
      sub_25B116DE0(v119, &qword_26A4D93A8);
      uint64_t v120 = v326;
      swift_bridgeObjectRetain();
      unint64_t v121 = sub_25B18A8D0(v115);
      char v123 = v122;
      swift_bridgeObjectRelease();
      if (v123)
      {
        int v124 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v332 = v120;
        uint64_t v93 = v331;
        if (!v124)
        {
          sub_25B193098();
          uint64_t v120 = v332;
        }
        sub_25B180A5C(*(void *)(v120 + 48) + *(void *)(v330 + 72) * v121, type metadata accessor for Record.ID);
        uint64_t v94 = v304;
        sub_25B18095C(*(void *)(v120 + 56) + *(void *)(v316 + 72) * v121, v304, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        uint64_t v326 = v120;
        sub_25B21DCF8(v121, v120);
        swift_bridgeObjectRelease();
        uint64_t v92 = 0;
      }
      else
      {
        uint64_t v92 = 1;
        uint64_t v93 = v331;
        uint64_t v94 = v304;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v303->isa)(v94, v92, 1, v57);
      sub_25B180A5C((uint64_t)v115, type metadata accessor for Record.ID);
      sub_25B116DE0(v94, &qword_26A4D93A8);
LABEL_11:
      uint64_t v95 = v49 + *(int *)(v93 + 48);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
      sub_25B10FF48(v327, (uint64_t)&v334);
      uint64_t v96 = v335;
      uint64_t v97 = v336;
      __swift_project_boxed_opaque_existential_1(&v334, v335);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D58);
      unint64_t v98 = (*(unsigned __int8 *)(v330 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v330 + 80);
      uint64_t v99 = swift_allocObject();
      *(_OWORD *)(v99 + 16) = v310;
      sub_25B1806D0((uint64_t)v40, v99 + v98, type metadata accessor for Record.ID);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v97 + 16) + 112))(v99, v96);
      swift_bridgeObjectRelease();
      sub_25B180A5C((uint64_t)v40, type metadata accessor for Record.ID);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
      unint64_t v6 = v325;
      (*v329)(v95, v325);
    }
    uint64_t v57 = (uint64_t)v312;
    sub_25B18095C(v119, (uint64_t)v312, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v125 = v326;
    int v126 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v332 = v125;
    unint64_t v6 = sub_25B18A8D0(v115);
    uint64_t v128 = *(void *)(v125 + 16);
    BOOL v129 = (v127 & 1) == 0;
    uint64_t v130 = v128 + v129;
    if (__OFADD__(v128, v129))
    {
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
      goto LABEL_160;
    }
    char v131 = v127;
    if (*(void *)(v125 + 24) < v130) {
      break;
    }
    uint64_t v93 = v331;
    if ((v126 & 1) == 0) {
      sub_25B193098();
    }
LABEL_45:
    uint64_t v134 = (void *)v332;
    uint64_t v326 = v332;
    if (v131)
    {
      sub_25B187120(v57, *(void *)(v332 + 56) + *(void *)(v316 + 72) * v6, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
LABEL_49:
      swift_bridgeObjectRelease();
      sub_25B180A5C((uint64_t)v324, type metadata accessor for Record.ID);
      goto LABEL_11;
    }
    *(void *)(v332 + 8 * (v6 >> 6) + 64) |= 1 << v6;
    sub_25B1806D0((uint64_t)v324, v134[6] + *(void *)(v330 + 72) * v6, type metadata accessor for Record.ID);
    sub_25B18095C(v57, v134[7] + *(void *)(v316 + 72) * v6, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v135 = v134[2];
    BOOL v136 = __OFADD__(v135, 1);
    uint64_t v137 = v135 + 1;
    if (!v136)
    {
      v134[2] = v137;
      goto LABEL_49;
    }
LABEL_160:
    __break(1u);
  }
  sub_25B18D018(v130, v126);
  unint64_t v132 = sub_25B18A8D0(v324);
  uint64_t v93 = v331;
  if ((v131 & 1) == (v133 & 1))
  {
    unint64_t v6 = v132;
    goto LABEL_45;
  }
LABEL_164:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

Swift::Void __swiftcall Replicator.readvertiseIfNecessary()()
{
  uint64_t v1 = *(NSObject **)(v0 + 232);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_25B17C8C8;
  *(void *)(v2 + 24) = v0;
  v4[4] = sub_25B117398;
  v4[5] = v2;
  v4[0] = MEMORY[0x263EF8330];
  v4[1] = 1107296256;
  v4[2] = sub_25B10D184;
  v4[3] = &block_descriptor_149;
  uint64_t v3 = _Block_copy(v4);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v1) {
    __break(1u);
  }
}

uint64_t sub_25B133624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Replicator.pair(with:completion:)(a1, a2, a3, a4);
}

uint64_t sub_25B133648(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  return Replicator.pair(with:completion:)(a1, a2, a3);
}

uint64_t sub_25B13366C()
{
  return sub_25B290900();
}

void sub_25B1336C8(uint64_t a1, uint64_t a2)
{
}

void sub_25B1336EC()
{
}

Swift::Void __swiftcall Replicator.validateRecords()()
{
  uint64_t v1 = sub_25B290320();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25B290360();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = *(void *)(v0 + 232);
  aBlock[4] = sub_25B17C8E0;
  uint64_t v12 = v0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_152;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_25B290340();
  v10[1] = MEMORY[0x263F8EE78];
  sub_25B1875E0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
}

unint64_t Replicator.localDeviceIdentifier.getter()
{
  if (v0[32])
  {
    unint64_t v1 = v0[31];
  }
  else
  {
    uint64_t v2 = v0[23];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    if (v5) {
      unint64_t v1 = v4;
    }
    else {
      unint64_t v1 = 0xD000000000000016;
    }
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Replicator.localDeviceDescriptor.getter()
{
  return sub_25B290900();
}

uint64_t sub_25B133AA0@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v4 = sub_25B290410();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v1[32])
  {
    uint64_t v8 = v1[31];
    unint64_t v48 = v1[32];
    uint64_t v49 = v8;
  }
  else
  {
    uint64_t v9 = v1[23];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
    unint64_t v13 = 0x800000025B29C2A0;
    unint64_t v14 = 0xD000000000000016;
    if (v12)
    {
      unint64_t v14 = v11;
      unint64_t v13 = v12;
    }
    unint64_t v48 = v13;
    uint64_t v49 = v14;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_25B18A4FC();
  if (v16)
  {
    uint64_t v46 = v16;
    uint64_t v47 = v15;
  }
  else
  {
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB0]), sel_init);
    id v18 = objc_msgSend(v17, sel_hostName);
    uint64_t v47 = sub_25B2905C0();
    uint64_t v46 = v19;
  }
  long long v56 = xmmword_25B293210;
  char v55 = *(unsigned char *)(v2 + 96);
  char v20 = *(unsigned char *)(v2 + 136);
  char v21 = *(unsigned char *)(v2 + 137);
  long long v22 = *(_OWORD *)(v2 + 120);
  v52[0] = *(_OWORD *)(v2 + 104);
  v52[1] = v22;
  char v53 = v20;
  char v54 = v21;
  uint64_t v23 = *(void **)(v2 + 232);
  *uint64_t v7 = v23;
  uint64_t v24 = *MEMORY[0x263F8F0E0];
  uint64_t v50 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 104);
  v50(v7, v24, v4);
  id v25 = v23;
  char v26 = sub_25B290440();
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t))(v5 + 8);
  uint64_t result = v27(v7, v4);
  if (v26)
  {
    uint64_t v45 = a1;
    swift_beginAccess();
    swift_retain();
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v44 = sub_25B17BCD4(v29, v2);
    swift_bridgeObjectRelease();
    swift_release();
    *uint64_t v7 = v25;
    v50(v7, v24, v4);
    id v30 = v25;
    char v31 = sub_25B290440();
    uint64_t result = v27(v7, v4);
    if (v31)
    {
      swift_beginAccess();
      swift_retain();
      uint64_t v32 = swift_bridgeObjectRetain();
      uint64_t v33 = sub_25B186DF0(v32, v2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_25B17C13C);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v34 = sub_25B12ACA4(v33, (uint64_t)v51, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_25B224158, sub_25B1A7EF0);
      swift_release();
      uint64_t v35 = *(void *)(v2 + 624);
      unint64_t v36 = *(void *)(v2 + 632);
      sub_25B1142EC(v35, v36);
      uint64_t v37 = sub_25B18A4FC();
      uint64_t v39 = v38;
      *(void *)&long long v42 = sub_25B18A4FC();
      *((void *)&v42 + 1) = v40;
      *(void *)&long long v41 = v37;
      *((void *)&v41 + 1) = v39;
      return DeviceDescriptor.init(id:name:protocolVersion:deviceType:screenDescriptor:zones:messageTypes:idsIdentityBlob:marketingName:productType:personaID:)(v49, v48, v47, v46, (uint64_t *)&v56, &v55, (uint64_t *)v52, v44, v45, v34, v35, v36, v41, v42, 0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Replicator.metadata(for:)(uint64_t a1)
{
  return sub_25B133EA0(a1, &qword_26A4D93A8);
}

uint64_t sub_25B133EA0(uint64_t a1, uint64_t *a2)
{
  return sub_25B290900();
}

uint64_t sub_25B133F00(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, void))
{
  uint64_t v5 = a1 + 192;
  swift_beginAccess();
  sub_25B10FF48(v5, (uint64_t)v9);
  uint64_t v6 = v10;
  uint64_t v7 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  a3(a2, v6, *(void *)(v7 + 8));
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t Replicator.metadata(for:)()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9A50);
  sub_25B290900();
  return v1;
}

uint64_t sub_25B134024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11 = a1 + 192;
  swift_beginAccess();
  sub_25B10FF48(v11, (uint64_t)v16);
  uint64_t v12 = v17;
  uint64_t v13 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  v15[0] = a2;
  v15[1] = a3;
  v15[2] = a4;
  void v15[3] = a5;
  *a6 = MetadataStoring.metadata(for:)(v15, v12, *(void *)(v13 + 8));
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t Replicator.clientDefinedID(for:)()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E80);
  sub_25B290900();
  return v1;
}

uint64_t sub_25B13414C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = a1 + 192;
  swift_beginAccess();
  sub_25B10FF48(v5, (uint64_t)v10);
  uint64_t v6 = v11;
  uint64_t v7 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  *a3 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v7 + 8) + 8) + 56))(a2, v6);
  a3[1] = v8;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t Replicator.zoneIDs(for:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9DB0);
  sub_25B290900();
  return v1;
}

uint64_t sub_25B134270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = a1 + 192;
  swift_beginAccess();
  sub_25B10FF48(v7, (uint64_t)v13);
  uint64_t v8 = v14;
  uint64_t v9 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  uint64_t v10 = MetadataStoring.zones()(v8, *(void *)(v9 + 8));
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_25B17DB04(v10, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  *a4 = v11;
  return result;
}

uint64_t Replicator.add(recordStubs:destination:schedule:)(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = *a2;
  uint64_t v8 = *a3;
  char v9 = *((unsigned char *)a3 + 8);
  uint64_t v10 = *(void *)(v3 + 232);
  uint64_t result = sub_25B290900();
  if (!v4)
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v5;
    *(void *)(v12 + 24) = a1;
    *(void *)(v12 + 32) = v7;
    *(void *)(v12 + 40) = v8;
    *(unsigned char *)(v12 + 48) = v9;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_25B1B7434(0xD000000000000016, 0x800000025B29C2C0, v10, (uint64_t)sub_25B17CA1C, v12, 0.0);
    return swift_release();
  }
  return result;
}

uint64_t sub_25B134454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v20[0] = a3;
  void v20[2] = a2;
  uint64_t v4 = type metadata accessor for RecordStub();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.ID(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_25B2240E0(0, v12, 0);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v15 = *(void *)(v5 + 72);
    uint64_t v13 = v22;
    uint64_t v21 = v15;
    do
    {
      sub_25B1806D0(v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RecordStub);
      sub_25B1806D0((uint64_t)v7, (uint64_t)v11, type metadata accessor for Record.ID);
      sub_25B180A5C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RecordStub);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25B2240E0(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v15 = v21;
        uint64_t v13 = v22;
      }
      unint64_t v17 = *(void *)(v13 + 16);
      unint64_t v16 = *(void *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_25B2240E0(v16 > 1, v17 + 1, 1);
        uint64_t v15 = v21;
        uint64_t v13 = v22;
      }
      *(void *)(v13 + 16) = v17 + 1;
      sub_25B18095C((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v17, type metadata accessor for Record.ID);
      v14 += v15;
      --v12;
    }
    while (v12);
  }
  uint64_t v18 = v20[1];
  sub_25B134708(v13);
  if (!v18)
  {
    uint64_t v22 = v20[0];
    sub_25B134F50(v13, &v22);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B134708(uint64_t a1)
{
  uint64_t v57 = a1;
  uint64_t v2 = sub_25B290080();
  uint64_t v58 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v52 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  char v53 = (char *)&v49 - v5;
  uint64_t v6 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Record.ID(0);
  os_log_t v54 = *(os_log_t *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v55 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v51 = (uint64_t)&v49 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v49 - v14;
  uint64_t v16 = sub_25B290410();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (uint64_t *)((char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v50 = (uint64_t (*)(uint64_t))v1;
  char v20 = *(void **)(v1 + 232);
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F8F0E0], v16);
  id v21 = v20;
  LOBYTE(v20) = sub_25B290440();
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t))(v17 + 8);
  uint64_t v22 = v17 + 8;
  uint64_t result = v23(v19, v16);
  if ((v20 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_9;
  }
  uint64_t v25 = *(void *)(v57 + 16);
  if (!v25) {
    return result;
  }
  uint64_t v26 = v57 + ((LOBYTE(v54[10].isa) + 32) & ~(unint64_t)LOBYTE(v54[10].isa));
  uint64_t v27 = (unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
  Class isa = v54[9].isa;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_25B1806D0(v26, (uint64_t)v15, type metadata accessor for Record.ID);
    sub_25B1806D0((uint64_t)&v15[*(int *)(v9 + 24)], (uint64_t)v8, type metadata accessor for Record.ID.Ownership);
    if ((*v27)(v8, 1, v2) != 1) {
      break;
    }
    sub_25B180A5C((uint64_t)v15, type metadata accessor for Record.ID);
    v26 += (uint64_t)isa;
    if (!--v25) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = v58;
  uint64_t v9 = (uint64_t)v53;
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v53, v8, v2);
  if (qword_26A4D98C0 != -1) {
    goto LABEL_14;
  }
LABEL_9:
  uint64_t v29 = sub_25B290190();
  __swift_project_value_buffer(v29, (uint64_t)qword_26A4EB150);
  uint64_t v30 = v51;
  sub_25B1806D0((uint64_t)v15, v51, type metadata accessor for Record.ID);
  char v31 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v52, v9, v2);
  sub_25B1806D0((uint64_t)v15, v55, type metadata accessor for Record.ID);
  uint64_t v32 = v50;
  swift_retain();
  uint64_t v33 = sub_25B290160();
  os_log_type_t v34 = sub_25B290890();
  int v35 = v34;
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    uint64_t v61 = v57;
    *(_DWORD *)uint64_t v36 = 136446978;
    LODWORD(v56) = v35;
    uint64_t v37 = *((void *)v32 + 66);
    os_log_t v54 = v33;
    unint64_t v38 = *((void *)v32 + 67);
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_25B288E98(v37, v38, &v61);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2082;
    uint64_t v49 = *(void *)(v30 + 32);
    uint64_t v50 = (uint64_t (*)(uint64_t))(v36 + 14);
    uint64_t v59 = 0;
    unint64_t v60 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B290AA0();
    swift_bridgeObjectRelease();
    uint64_t v59 = 540697705;
    unint64_t v60 = 0xE400000000000000;
    swift_bridgeObjectRetain();
    sub_25B290650();
    swift_bridgeObjectRelease();
    sub_25B290650();
    swift_bridgeObjectRetain();
    sub_25B290650();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v59 = sub_25B288E98(v59, v60, &v61);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    uint64_t v50 = type metadata accessor for Record.ID;
    sub_25B180A5C(v30, type metadata accessor for Record.ID);
    *(_WORD *)(v36 + 22) = 2082;
    sub_25B1875E0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
    uint64_t v39 = v52;
    uint64_t v40 = sub_25B290DB0();
    uint64_t v59 = sub_25B288E98(v40, v41, &v61);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    long long v42 = *(void (**)(char *, uint64_t))(v58 + 8);
    v42(v39, v2);
    *(_WORD *)(v36 + 32) = 2082;
    uint64_t v43 = v55;
    uint64_t v44 = Record.ID.description.getter();
    uint64_t v59 = sub_25B288E98(v44, v45, &v61);
    uint64_t v9 = (uint64_t)v53;
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B180A5C(v43, v50);
    os_log_t v46 = v54;
    _os_log_impl(&dword_25B107000, v54, (os_log_type_t)v56, "(%{public}s) Ownership verification failed: record in zone %{public}s is owned by relationship %{public}s: %{public}s", (uint8_t *)v36, 0x2Au);
    uint64_t v47 = v57;
    swift_arrayDestroy();
    MEMORY[0x261160890](v47, -1, -1);
    MEMORY[0x261160890](v36, -1, -1);
  }
  else
  {
    swift_release();
    sub_25B180A5C(v30, type metadata accessor for Record.ID);
    long long v42 = *(void (**)(char *, uint64_t))(v22 + 8);
    v42(v31, v2);
    sub_25B180A5C(v55, type metadata accessor for Record.ID);
  }
  sub_25B182988();
  swift_allocError();
  *unint64_t v48 = 0;
  swift_willThrow();
  v42((char *)v9, v2);
  return sub_25B180A5C((uint64_t)v15, type metadata accessor for Record.ID);
}

uint64_t sub_25B134F50(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = type metadata accessor for Record.ID(0);
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (uint64_t *)((char *)&v51 - v10);
  uint64_t v12 = sub_25B290410();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t *)((char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = *a2;
  uint64_t v16 = *(void **)(v2 + 232);
  *uint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F0E0], v12);
  id v17 = v16;
  LOBYTE(v16) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    uint64_t result = a1;
    uint64_t v19 = *(void *)(a1 + 16);
    if (!v19) {
      return result;
    }
    uint64_t v51 = v3;
    uint64_t v52 = v9;
    uint64_t v53 = v2;
    uint64_t v54 = result;
    char v20 = (uint64_t *)(v2 + 240);
    uint64_t v21 = v55;
    uint64_t v22 = result + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v23 = *(void *)(v21 + 72);
    while (1)
    {
      sub_25B1806D0(v22, (uint64_t)v11, type metadata accessor for Record.ID);
      uint64_t v24 = *v20;
      if (!*(void *)(*v20 + 16)) {
        break;
      }
      uint64_t v25 = v11[4];
      uint64_t v26 = v11[5];
      uint64_t v28 = v11[2];
      uint64_t v27 = v11[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v29 = sub_25B18A768(v28, v27, v25, v26);
      if ((v30 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      }
      uint64_t v31 = *(void *)(*(void *)(v24 + 56) + 8 * v29);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v56)
      {
        if (MEMORY[0x261160990](v31 + 16))
        {
          uint64_t v32 = *(void *)(v31 + 24);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v32 + 8))(&v57, ObjectType, v32);
          swift_unknownObjectRelease();
          if (v57 == 1)
          {
            swift_bridgeObjectRelease();
            if (qword_26A4D98C0 != -1) {
              swift_once();
            }
            uint64_t v34 = sub_25B290190();
            __swift_project_value_buffer(v34, (uint64_t)qword_26A4EB150);
            uint64_t v35 = v53;
            swift_retain();
            uint64_t v36 = sub_25B290160();
            os_log_type_t v37 = sub_25B290890();
            if (os_log_type_enabled(v36, v37))
            {
              unint64_t v38 = (uint8_t *)swift_slowAlloc();
              uint64_t v39 = swift_slowAlloc();
              uint64_t v58 = v39;
              *(_DWORD *)unint64_t v38 = 136446210;
              uint64_t v56 = (uint64_t)(v38 + 4);
              uint64_t v40 = *(void *)(v35 + 528);
              unint64_t v41 = *(void *)(v35 + 536);
              swift_bridgeObjectRetain();
              uint64_t v60 = sub_25B288E98(v40, v41, &v58);
              sub_25B2909C0();
              swift_release();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_25B107000, v36, v37, "(%{public}s) Destination verification failed: a record sent to a collection cannot be advertised", v38, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x261160890](v39, -1, -1);
              MEMORY[0x261160890](v38, -1, -1);
            }
            else
            {

              swift_release();
            }
            sub_25B182988();
            swift_allocError();
            *uint64_t v50 = 0;
            swift_willThrow();
            swift_release();
            return sub_25B180A5C((uint64_t)v11, type metadata accessor for Record.ID);
          }
        }
      }
      sub_25B180A5C((uint64_t)v11, type metadata accessor for Record.ID);
      swift_release();
      v22 += v23;
      if (!--v19) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v52;
    uint64_t v12 = v53;
    if (qword_26A4D98C0 != -1) {
      goto LABEL_27;
    }
  }
  else
  {
    __break(1u);
LABEL_27:
    swift_once();
  }
  uint64_t v42 = sub_25B290190();
  __swift_project_value_buffer(v42, (uint64_t)qword_26A4EB150);
  sub_25B1806D0((uint64_t)v11, (uint64_t)v9, type metadata accessor for Record.ID);
  swift_retain();
  uint64_t v43 = sub_25B290160();
  os_log_type_t v44 = sub_25B290890();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    uint64_t v60 = v56;
    *(_DWORD *)uint64_t v45 = 136446466;
    uint64_t v46 = *(void *)(v12 + 528);
    unint64_t v47 = *(void *)(v12 + 536);
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_25B288E98(v46, v47, &v60);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2082;
    uint64_t v54 = *((void *)v9 + 4);
    uint64_t v55 = v45 + 14;
    uint64_t v58 = 0;
    unint64_t v59 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B290AA0();
    swift_bridgeObjectRelease();
    uint64_t v58 = 540697705;
    unint64_t v59 = 0xE400000000000000;
    swift_bridgeObjectRetain();
    sub_25B290650();
    swift_bridgeObjectRelease();
    sub_25B290650();
    swift_bridgeObjectRetain();
    sub_25B290650();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v58 = sub_25B288E98(v58, v59, &v60);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B180A5C((uint64_t)v9, type metadata accessor for Record.ID);
    _os_log_impl(&dword_25B107000, v43, v44, "(%{public}s) Destination verification failed: zone %{public}s does not exist", (uint8_t *)v45, 0x16u);
    uint64_t v48 = v56;
    swift_arrayDestroy();
    MEMORY[0x261160890](v48, -1, -1);
    MEMORY[0x261160890](v45, -1, -1);
  }
  else
  {
    swift_release();
    sub_25B180A5C((uint64_t)v9, type metadata accessor for Record.ID);
  }

  sub_25B182988();
  swift_allocError();
  unsigned char *v49 = 0;
  swift_willThrow();
  return sub_25B180A5C((uint64_t)v11, type metadata accessor for Record.ID);
}

uint64_t sub_25B135748(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v103 = (uint64_t)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v120 = (uint64_t)&v89 - v11;
  uint64_t v119 = sub_25B290080();
  unint64_t v128 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  uint64_t v118 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Record.ID(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v117 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for RecordMetadata();
  uint64_t v115 = *(void *)(v116 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v116);
  id v17 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  unsigned int v114 = (char *)&v89 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v89 - v20;
  uint64_t v113 = type metadata accessor for RecordStub();
  uint64_t v22 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  unint64_t v121 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_25B290410();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (uint64_t *)((char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = *a2;
  uint64_t v102 = *(void *)a3;
  int v101 = *(unsigned __int8 *)(a3 + 8);
  unint64_t v29 = (void *)v4[29];
  *uint64_t v27 = v29;
  char v30 = *(void (**)(void))(v25 + 104);
  unsigned int v98 = *MEMORY[0x263F8F0E0];
  uint64_t v99 = v25 + 104;
  uint64_t v97 = (void (*)(void *, void, uint64_t))v30;
  v30(v27);
  id v95 = v29;
  LOBYTE(v29) = sub_25B290440();
  uint64_t v32 = *(uint64_t (**)(void *, uint64_t))(v25 + 8);
  uint64_t v31 = v25 + 8;
  uint64_t v100 = v27;
  uint64_t v96 = v32;
  uint64_t result = v32(v27, v24);
  if ((v29 & 1) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v112 = v28;
  uint64_t v130 = v28;
  uint64_t v34 = sub_25B16B4D0(a1, &v130);
  uint64_t v35 = v34;
  uint64_t v36 = *(void *)(a1 + 16);
  if (v36)
  {
    uint64_t v90 = v34;
    uint64_t v110 = v21;
    uint64_t v91 = v31;
    uint64_t v92 = v24;
    uint64_t v94 = v4;
    uint64_t v37 = a1;
    uint64_t v38 = a1 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    uint64_t v93 = v37;
    swift_bridgeObjectRetain();
    uint64_t v109 = v4 + 30;
    swift_beginAccess();
    int v105 = 0;
    int v104 = 0;
    uint64_t v108 = *(void *)(v22 + 72);
    int64_t v107 = (void (**)(char *, char *, uint64_t))(v128 + 16);
    uint64_t v106 = (void (**)(uint64_t, char *, uint64_t))(v128 + 32);
    unint64_t v39 = MEMORY[0x263F8EE78];
    uint64_t v40 = v121;
    uint64_t v111 = v17;
    uint64_t v41 = (uint64_t)v117;
    while (1)
    {
      uint64_t v125 = v36;
      uint64_t v127 = v38;
      unint64_t v128 = v39;
      sub_25B1806D0(v38, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for RecordStub);
      sub_25B1806D0((uint64_t)v40, v41, type metadata accessor for Record.ID);
      uint64_t v43 = v113;
      os_log_type_t v44 = (uint64_t *)&v40[*(int *)(v113 + 20)];
      uint64_t v46 = *v44;
      uint64_t v45 = v44[1];
      unint64_t v47 = v118;
      uint64_t v48 = v119;
      (*v107)(v118, &v40[*(int *)(v113 + 24)], v119);
      int v124 = &v40[*(int *)(v43 + 28)];
      uint64_t v49 = v120;
      sub_25B187628((uint64_t)v124, v120, &qword_26A4D91F8);
      uint64_t v126 = *(void *)&v40[*(int *)(v43 + 32)];
      uint64_t v50 = (int *)v116;
      uint64_t v51 = *(int *)(v116 + 20);
      uint64_t v52 = (uint64_t)v114;
      uint64_t v53 = (uint64_t)&v114[*(int *)(v116 + 32)];
      uint64_t v54 = sub_25B290000();
      uint64_t v122 = *(void *)(v54 - 8);
      uint64_t v123 = v54;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 56))(v53, 1, 1);
      sub_25B18095C(v41, v52, type metadata accessor for Record.ID);
      type metadata accessor for RecordMetadata.ClientDefinedID();
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = v46;
      *(void *)(v55 + 24) = v45;
      *(void *)(v52 + v51) = v55;
      uint64_t v56 = v48;
      uint64_t v57 = (uint64_t)v111;
      (*v106)(v52 + v50[6], v47, v56);
      *(void *)(v52 + v50[7]) = v112;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v58 = v49;
      unint64_t v39 = v128;
      sub_25B185B64(v58, v53, &qword_26A4D91F8);
      *(void *)(v52 + v50[9]) = v126;
      uint64_t v59 = (uint64_t)v110;
      sub_25B18095C(v52, (uint64_t)v110, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      sub_25B1806D0(v59, v57, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v39 = sub_25B21833C(0, *(void *)(v39 + 16) + 1, 1, v39);
      }
      unint64_t v61 = *(void *)(v39 + 16);
      unint64_t v60 = *(void *)(v39 + 24);
      uint64_t v40 = v121;
      if (v61 >= v60 >> 1) {
        unint64_t v39 = sub_25B21833C(v60 > 1, v61 + 1, 1, v39);
      }
      *(void *)(v39 + 16) = v61 + 1;
      sub_25B18095C(v57, v39+ ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))+ *(void *)(v115 + 72) * v61, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t v62 = *v109;
      if (*(void *)(*v109 + 16))
      {
        uint64_t v64 = *((void *)v40 + 4);
        uint64_t v63 = *((void *)v40 + 5);
        uint64_t v65 = *((void *)v40 + 2);
        uint64_t v66 = *((void *)v40 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v67 = sub_25B18A768(v65, v66, v64, v63);
        if (v68)
        {
          uint64_t v69 = *(void *)(*(void *)(v62 + 56) + 8 * v67);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (MEMORY[0x261160990](v69 + 16))
          {
            uint64_t v70 = *(void *)(v69 + 24);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v70 + 8))(&v130, ObjectType, v70);
            swift_release();
            swift_unknownObjectRelease();
            int v72 = v130;
          }
          else
          {
            swift_release();
            int v72 = 0;
          }
          uint64_t v73 = (uint64_t)v124;
          uint64_t v42 = v125;
          uint64_t v75 = v122;
          uint64_t v74 = v123;
          sub_25B180A5C(v59, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
          v104 |= v72;
          uint64_t v76 = v103;
          sub_25B187628(v73, v103, &qword_26A4D91F8);
          sub_25B180A5C((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for RecordStub);
          BOOL v77 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v76, 1, v74) != 1;
          v105 |= v77;
          sub_25B116DE0(v76, &qword_26A4D91F8);
          goto LABEL_6;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_25B180A5C(v59, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      sub_25B180A5C((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for RecordStub);
      uint64_t v42 = v125;
LABEL_6:
      uint64_t v38 = v127 + v108;
      uint64_t v36 = v42 - 1;
      if (!v36)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = v94;
        uint64_t v24 = v92;
        char v78 = v105;
        uint64_t v35 = v90;
        char v79 = v104;
        goto LABEL_19;
      }
    }
  }
  char v78 = 0;
  char v79 = 0;
  unint64_t v39 = MEMORY[0x263F8EE78];
LABEL_19:
  swift_beginAccess();
  sub_25B10FF48((uint64_t)(v4 + 24), (uint64_t)&v130);
  uint64_t v80 = v132;
  uint64_t v81 = v133;
  __swift_project_boxed_opaque_existential_1(&v130, v132);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v81 + 16) + 104))(v39, v80);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v130);
  if (*(void *)(v35 + 16))
  {
    size_t v82 = sub_25B225398(v35);
    swift_bridgeObjectRelease();
    size_t v129 = v82;
    uint64_t v130 = v102;
    char v131 = v101;
    sub_25B138D84((uint64_t *)&v129, &v130);
    uint64_t result = swift_release();
    if ((v79 & 1) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    if ((v79 & 1) == 0)
    {
LABEL_21:
      if ((v78 & 1) == 0) {
        return result;
      }
      return sub_25B12946C();
    }
  }
  uint64_t v83 = v100;
  uint64_t v84 = v95;
  *uint64_t v100 = v95;
  v97(v83, v98, v24);
  id v85 = v84;
  LOBYTE(v84) = sub_25B290440();
  uint64_t result = v96(v83, v24);
  if ((v84 & 1) == 0)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  uint64_t v86 = v4[63];
  uint64_t v87 = v4[64];
  __swift_project_boxed_opaque_existential_1(v4 + 60, v86);
  uint64_t v88 = *(void (**)(uint64_t (*)(uint64_t, unint64_t), void *, uint64_t, uint64_t))(v87 + 8);
  swift_retain();
  v88(sub_25B185BD0, v4, v86, v87);
  uint64_t result = swift_release();
  if (v78) {
    return sub_25B12946C();
  }
  return result;
}

uint64_t Replicator.delete(recordIDs:schedule:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)(v2 + 232);
  uint64_t result = sub_25B290900();
  if (!v3)
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v4;
    *(void *)(v10 + 24) = a1;
    *(void *)(v10 + 32) = v6;
    *(unsigned char *)(v10 + 40) = v7;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_25B1B7434(0xD000000000000018, 0x800000025B29C2E0, v8, (uint64_t)sub_25B17CADC, v10, 0.0);
    return swift_release();
  }
  return result;
}

uint64_t sub_25B1363E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D93A8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v131 = (uint64_t)v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RecordMetadata();
  uint64_t v124 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v130 = (uint64_t)v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Record.ID(0);
  uint64_t v123 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v133 = (void *)((char *)v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v12 = MEMORY[0x270FA5388](v146);
  char v145 = (char *)v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v144 = (char *)v115 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  unint64_t v143 = (char *)v115 - v17;
  MEMORY[0x270FA5388](v16);
  unint64_t v142 = (char *)v115 - v18;
  uint64_t v19 = sub_25B290080();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v151 = v19;
  uint64_t v152 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_25B290410();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (void *)((char *)v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v126 = *(void *)a2;
  int v125 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v27 = (void *)v3[29];
  *uint64_t v26 = v27;
  uint64_t v28 = *(void (**)(void))(v24 + 104);
  unsigned int v119 = *MEMORY[0x263F8F0E0];
  uint64_t v118 = (void (*)(void *, void, uint64_t))v28;
  v28(v26);
  id v116 = v27;
  LOBYTE(v27) = sub_25B290440();
  unint64_t v29 = *(uint64_t (**)(void *, uint64_t))(v24 + 8);
  uint64_t v120 = v26;
  uint64_t v122 = v23;
  uint64_t v121 = v24 + 8;
  uint64_t v117 = v29;
  uint64_t result = v29(v26, v23);
  if ((v27 & 1) == 0) {
    goto LABEL_59;
  }
  v115[1] = v24 + 104;
  uint64_t v128 = a1;
  swift_beginAccess();
  uint64_t v132 = v3 + 24;
  sub_25B10FF48((uint64_t)(v3 + 24), (uint64_t)&v155);
  uint64_t v31 = v157;
  uint64_t v32 = v158;
  __swift_project_boxed_opaque_existential_1(&v155, v157);
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v32 + 8) + 8) + 32))(v31);
  uint64_t v34 = sub_25B176138(v33, (uint64_t (*)(char *, unint64_t, uint64_t))sub_25B176DC4);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v155);
  int64_t v35 = *(void *)(v34 + 16);
  uint64_t v129 = v8;
  uint64_t v127 = v3;
  if (v35)
  {
    uint64_t v155 = MEMORY[0x263F8EE78];
    sub_25B224084(0, v35, 0);
    uint64_t result = sub_25B1A7EF0(v34);
    uint64_t v37 = result;
    uint64_t v38 = 0;
    uint64_t v39 = v34 + 64;
    uint64_t v139 = v152 + 16;
    uint64_t v138 = v152 + 8;
    uint64_t v137 = v152 + 32;
    char v40 = *(unsigned char *)(v34 + 32);
    v115[0] = v34 + 88;
    uint64_t v141 = v22;
    uint64_t v140 = v34;
    int64_t v134 = v35;
    uint64_t v135 = v36;
    uint64_t v136 = v34 + 64;
    uint64_t v41 = v151;
    uint64_t v42 = (uint64_t)v144;
    while (1)
    {
      if (v37 < 0 || v37 >= 1 << v40)
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
        return result;
      }
      if ((*(void *)(v39 + 8 * ((unint64_t)v37 >> 6)) & (1 << v37)) == 0) {
        goto LABEL_54;
      }
      if (*(_DWORD *)(v34 + 36) != v36) {
        goto LABEL_55;
      }
      uint64_t v148 = 1 << v37;
      unint64_t v149 = (unint64_t)v37 >> 6;
      uint64_t v147 = v38;
      uint64_t v45 = v146;
      uint64_t v46 = (uint64_t)v142;
      uint64_t v47 = (uint64_t)&v142[*(int *)(v146 + 48)];
      uint64_t v48 = *(void *)(v34 + 48);
      uint64_t v150 = *(void *)(v152 + 72);
      uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 16);
      v49(v142, v48 + v150 * v37, v41);
      uint64_t v50 = *(void *)(v34 + 56);
      uint64_t v51 = type metadata accessor for PairingRelationship();
      sub_25B1806D0(v50 + *(void *)(*(void *)(v51 - 8) + 72) * v37, v47, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v52 = (uint64_t)v143;
      v49(v143, v46, v41);
      sub_25B1806D0(v47, v52 + *(int *)(v45 + 48), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      sub_25B187574(v52, v42, &qword_26A4D9EE8);
      sub_25B116DE0(v46, &qword_26A4D9EE8);
      uint64_t v53 = *(int *)(v45 + 48);
      uint64_t v54 = v145;
      uint64_t v55 = (uint64_t)&v145[v53];
      uint64_t v56 = v42 + v53;
      v49(v145, v42, v41);
      uint64_t v57 = v56;
      uint64_t v58 = v141;
      sub_25B1806D0(v57, v55, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      v49(v58, v55, v41);
      sub_25B180A5C(v55, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      (*(void (**)(char *, uint64_t))(v152 + 8))(v54, v41);
      sub_25B116DE0(v42, &qword_26A4D9EE8);
      uint64_t v59 = v155;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25B224084(0, *(void *)(v59 + 16) + 1, 1);
        uint64_t v59 = v155;
      }
      unint64_t v61 = *(void *)(v59 + 16);
      unint64_t v60 = *(void *)(v59 + 24);
      uint64_t v34 = v140;
      if (v61 >= v60 >> 1)
      {
        sub_25B224084(v60 > 1, v61 + 1, 1);
        uint64_t v59 = v155;
      }
      *(void *)(v59 + 16) = v61 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v152 + 32))(v59+ ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80))+ v61 * v150, v58, v151);
      uint64_t v155 = v59;
      char v40 = *(unsigned char *)(v34 + 32);
      unint64_t v43 = 1 << v40;
      if (v37 >= 1 << v40) {
        goto LABEL_56;
      }
      uint64_t v39 = v136;
      unint64_t v62 = v149;
      uint64_t v63 = *(void *)(v136 + 8 * v149);
      if ((v63 & v148) == 0) {
        goto LABEL_57;
      }
      LODWORD(v36) = v135;
      if (*(_DWORD *)(v34 + 36) != v135) {
        goto LABEL_58;
      }
      unint64_t v64 = v63 & (-2 << (v37 & 0x3F));
      if (v64)
      {
        unint64_t v43 = __clz(__rbit64(v64)) | v37 & 0xFFFFFFFFFFFFFFC0;
        int64_t v44 = v134;
      }
      else
      {
        unint64_t v65 = v149 + 1;
        unint64_t v66 = (v43 + 63) >> 6;
        int64_t v44 = v134;
        if (v149 + 1 < v66)
        {
          unint64_t v67 = *(void *)(v136 + 8 * v65);
          if (!v67)
          {
            unint64_t v65 = v149 + 2;
            if (v149 + 2 >= v66) {
              goto LABEL_5;
            }
            unint64_t v67 = *(void *)(v136 + 8 * v65);
            if (!v67)
            {
              while (v66 - 3 != v62)
              {
                unint64_t v67 = *(void *)(v115[0] + 8 * v62++);
                if (v67)
                {
                  unint64_t v65 = v62 + 2;
                  goto LABEL_20;
                }
              }
              goto LABEL_5;
            }
          }
LABEL_20:
          unint64_t v43 = __clz(__rbit64(v67)) + (v65 << 6);
        }
      }
LABEL_5:
      uint64_t v38 = v147 + 1;
      uint64_t v37 = v43;
      if (v147 + 1 == v44)
      {
        swift_release();
        uint64_t v3 = v127;
        goto LABEL_28;
      }
    }
  }
  swift_release();
  uint64_t v59 = MEMORY[0x263F8EE78];
LABEL_28:
  uint64_t v68 = sub_25B227C68(v59);
  swift_bridgeObjectRelease();
  uint64_t v154 = MEMORY[0x263F8EE88];
  uint64_t v69 = v128;
  uint64_t v70 = *(void *)(v128 + 16);
  uint64_t v71 = v133;
  if (v70)
  {
    uint64_t v151 = v68;
    int v72 = v3 + 30;
    uint64_t v73 = v123;
    unint64_t v74 = (*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    LODWORD(v150) = 0;
    uint64_t v75 = 0;
    uint64_t v76 = *(void *)(v73 + 72);
    uint64_t v152 = v124 + 48;
    uint64_t v77 = v69 + v74;
    uint64_t v148 = v69 + v74;
    unint64_t v149 = v70 - 1;
    while (1)
    {
      uint64_t v78 = v77 + v76 * v75;
      uint64_t v79 = v75;
      while (1)
      {
        sub_25B1806D0(v78, (uint64_t)v71, type metadata accessor for Record.ID);
        uint64_t v80 = *v72;
        if (!*(void *)(*v72 + 16)) {
          goto LABEL_41;
        }
        uint64_t v81 = v71[4];
        uint64_t v82 = v71[5];
        id v85 = v71 + 2;
        uint64_t v84 = v71[2];
        uint64_t v83 = v85[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v86 = sub_25B18A768(v84, v83, v81, v82);
        if ((v87 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v71 = v133;
LABEL_41:
          sub_25B180A5C((uint64_t)v71, type metadata accessor for Record.ID);
          goto LABEL_32;
        }
        uint64_t v88 = *(void *)(*(void *)(v80 + 56) + 8 * v86);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (MEMORY[0x261160990](v88 + 16))
        {
          uint64_t v89 = *(void *)(v88 + 24);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v89 + 8))(&v155, ObjectType, v89);
          swift_unknownObjectRelease();
          if (v155 == 1) {
            break;
          }
        }
        sub_25B10FF48((uint64_t)v132, (uint64_t)&v155);
        uint64_t v91 = v157;
        uint64_t v92 = v158;
        __swift_project_boxed_opaque_existential_1(&v155, v157);
        uint64_t v93 = *(void *)(v92 + 8);
        uint64_t v94 = v131;
        uint64_t v71 = v133;
        MetadataStoring.metadata(for:)(v133, v91, v93, v131);
        uint64_t v95 = v94;
        uint64_t v96 = v94;
        uint64_t v97 = v129;
        int v98 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))v152)(v96, 1, v129);
        uint64_t v99 = v130;
        if (v98 != 1)
        {
          sub_25B18095C(v95, v130, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v155);
          if (!*(void *)(v99 + *(int *)(v97 + 28)))
          {
            swift_release();
            sub_25B180A5C(v99, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
            uint64_t v71 = v133;
            sub_25B180A5C((uint64_t)v133, type metadata accessor for Record.ID);
            swift_bridgeObjectRelease();
            uint64_t v154 = v151;
            swift_bridgeObjectRetain();
            goto LABEL_32;
          }
          uint64_t v100 = swift_bridgeObjectRetain();
          uint64_t v101 = sub_25B227C68(v100);
          swift_bridgeObjectRelease();
          sub_25B16C9D8(v101);
          swift_release();
          sub_25B180A5C(v99, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
          uint64_t v71 = v133;
          goto LABEL_41;
        }
        sub_25B180A5C((uint64_t)v71, type metadata accessor for Record.ID);
        swift_release();
        sub_25B116DE0(v95, &qword_26A4D93A8);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v155);
LABEL_32:
        ++v79;
        v78 += v76;
        if (v70 == v79) {
          goto LABEL_44;
        }
      }
      uint64_t v71 = v133;
      sub_25B180A5C((uint64_t)v133, type metadata accessor for Record.ID);
      swift_release();
      uint64_t v75 = v79 + 1;
      LODWORD(v150) = 1;
      uint64_t v77 = v148;
      if (v149 == v79)
      {
LABEL_44:
        swift_bridgeObjectRelease();
        uint64_t v102 = v128;
        uint64_t v3 = v127;
        char v103 = v150;
        goto LABEL_46;
      }
    }
  }
  char v103 = 0;
  uint64_t v102 = v128;
LABEL_46:
  swift_bridgeObjectRelease();
  sub_25B10FF48((uint64_t)v132, (uint64_t)&v155);
  uint64_t v104 = v157;
  uint64_t v105 = v158;
  __swift_project_boxed_opaque_existential_1(&v155, v157);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v105 + 16) + 112))(v102, v104);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v155);
  if (*(void *)(v154 + 16))
  {
    size_t v106 = sub_25B225398(v154);
    swift_bridgeObjectRelease();
    size_t v153 = v106;
    uint64_t v155 = v126;
    char v156 = v125;
    sub_25B138D84((uint64_t *)&v153, &v155);
    uint64_t result = swift_release();
    if ((v103 & 1) == 0) {
      return result;
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    if ((v103 & 1) == 0) {
      return result;
    }
  }
  int64_t v107 = v120;
  uint64_t v108 = v116;
  *uint64_t v120 = v116;
  uint64_t v109 = v122;
  v118(v107, v119, v122);
  id v110 = v108;
  LOBYTE(v108) = sub_25B290440();
  uint64_t result = v117(v107, v109);
  if ((v108 & 1) == 0) {
    goto LABEL_60;
  }
  uint64_t v111 = v3[63];
  uint64_t v112 = v3[64];
  __swift_project_boxed_opaque_existential_1(v3 + 60, v111);
  uint64_t v113 = v3;
  unsigned int v114 = *(void (**)(uint64_t (*)(uint64_t, unint64_t), void *, uint64_t, uint64_t))(v112 + 8);
  swift_retain();
  v114(sub_25B185BD0, v113, v111, v112);
  return swift_release();
}

uint64_t Replicator.set(dataSource:for:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = *a3;
  uint64_t v6 = a3[1];
  uint64_t v9 = a3[2];
  uint64_t v8 = a3[3];
  uint64_t v10 = *(void *)(v3 + 232);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v3;
  void v11[3] = a1;
  v11[4] = a2;
  v11[5] = v7;
  v11[6] = v6;
  v11[7] = v9;
  v11[8] = v8;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_25B1B7434(0xD000000000000013, 0x800000025B29C300, v10, (uint64_t)sub_25B17CB40, (uint64_t)v11, 0.0);
  return swift_release();
}

uint64_t sub_25B137370(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v108 = a2;
  uint64_t v109 = a1;
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v6 = MEMORY[0x270FA5388](v106);
  uint64_t v105 = (uint64_t)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v104 = (uint64_t)&v81 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v103 = (uint64_t)&v81 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v102 = (char *)&v81 - v12;
  uint64_t v13 = type metadata accessor for Record.ID(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_25B290410();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = a3[1];
  uint64_t v93 = *a3;
  uint64_t v94 = a3[2];
  uint64_t v92 = a3[3];
  uint64_t v22 = (void *)v4[29];
  *uint64_t v20 = v22;
  unsigned int v23 = *MEMORY[0x263F8F0E0];
  uint64_t v24 = v18 + 104;
  uint64_t v25 = *MEMORY[0x263F8F0E0];
  uint64_t v91 = *(void (**)(void *, uint64_t, uint64_t))(v18 + 104);
  v91(v20, v25, v17);
  id v89 = v22;
  LOBYTE(v22) = sub_25B290440();
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t))(v18 + 8);
  uint64_t v26 = v18 + 8;
  uint64_t v90 = v27;
  uint64_t result = v27(v20, v17);
  if ((v22 & 1) == 0) {
    goto LABEL_44;
  }
  unsigned int v88 = v23;
  if (!v109) {
    goto LABEL_7;
  }
  uint64_t v87 = v17;
  unint64_t v29 = v4 + 30;
  uint64_t v30 = v109;
  swift_beginAccess();
  uint64_t v31 = v4[30];
  uint64_t v14 = v21;
  uint64_t v32 = *(void *)(v31 + 16);
  uint64_t v17 = v30;
  swift_unknownObjectRetain();
  uint64_t v16 = (char *)v92;
  if (!v32) {
    goto LABEL_33;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v33 = sub_25B18A768(v93, v14, v94, (uint64_t)v16);
  if ((v34 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  uint64_t v21 = *(void *)(*(void *)(v31 + 56) + 8 * v33);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = MEMORY[0x261160990](v21 + 16);
  swift_release();
  if (!v35)
  {
LABEL_33:
    type metadata accessor for Replicator.WeakSource();
    uint64_t v71 = swift_allocObject();
    *(void *)(v71 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(void *)(v71 + 24) = v108;
    swift_unknownObjectWeakAssign();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v111 = *v29;
    *unint64_t v29 = 0x8000000000000000;
    sub_25B220A74(v71, v93, v14, v94, (uint64_t)v16, isUniquelyReferenced_nonNull_native);
    *unint64_t v29 = v111;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_unknownObjectRelease();
    uint64_t v17 = v87;
    goto LABEL_36;
  }
  swift_unknownObjectRelease();
  sub_25B290BC0();
  __break(1u);
LABEL_7:
  uint64_t v101 = v16;
  uint64_t v86 = v24;
  swift_beginAccess();
  id v85 = v4 + 24;
  sub_25B10FF48((uint64_t)(v4 + 24), (uint64_t)&v112);
  uint64_t v36 = v113;
  uint64_t v37 = v114;
  __swift_project_boxed_opaque_existential_1(&v112, v113);
  v110[0] = v93;
  v110[1] = v21;
  v110[2] = v94;
  v110[3] = v92;
  uint64_t v38 = MetadataStoring.metadata(for:)(v110, v36, *(void *)(v37 + 8));
  int64_t v39 = *(void *)(v38 + 16);
  if (v39)
  {
    uint64_t v82 = v20;
    uint64_t v83 = v26;
    uint64_t v87 = v17;
    uint64_t v84 = v4;
    v110[0] = MEMORY[0x263F8EE78];
    sub_25B2240E0(0, v39, 0);
    uint64_t result = sub_25B1A7EF0(v38);
    uint64_t v41 = result;
    uint64_t v42 = 0;
    uint64_t v43 = v38 + 64;
    char v44 = *(unsigned char *)(v38 + 32);
    uint64_t v81 = v38 + 88;
    uint64_t v95 = v21;
    uint64_t v100 = v14;
    uint64_t v99 = v38;
    int64_t v98 = v39;
    uint64_t v96 = v40;
    uint64_t v97 = v38 + 64;
    uint64_t v45 = (uint64_t)v102;
    while (1)
    {
      if (v41 < 0 || v41 >= 1 << v44)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        return result;
      }
      unint64_t v48 = (unint64_t)v41 >> 6;
      if ((*(void *)(v43 + 8 * ((unint64_t)v41 >> 6)) & (1 << v41)) == 0) {
        goto LABEL_39;
      }
      if (*(_DWORD *)(v38 + 36) != v40) {
        goto LABEL_40;
      }
      uint64_t v107 = v42;
      uint64_t v108 = 1 << v41;
      uint64_t v49 = v106;
      uint64_t v50 = v45 + *(int *)(v106 + 48);
      uint64_t v51 = *(void *)(v38 + 48);
      uint64_t v109 = *(void *)(v14 + 72);
      sub_25B1806D0(v51 + v109 * v41, v45, type metadata accessor for Record.ID);
      uint64_t v52 = *(void *)(v38 + 56);
      uint64_t v53 = type metadata accessor for RecordMetadata();
      sub_25B1806D0(v52 + *(void *)(*(void *)(v53 - 8) + 72) * v41, v50, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t v54 = v103;
      sub_25B1806D0(v45, v103, type metadata accessor for Record.ID);
      sub_25B1806D0(v50, v54 + *(int *)(v49 + 48), (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t v55 = v104;
      sub_25B187574(v54, v104, &qword_26A4D9860);
      sub_25B116DE0(v45, &qword_26A4D9860);
      uint64_t v56 = *(int *)(v49 + 48);
      uint64_t v57 = v105;
      uint64_t v58 = v105 + v56;
      uint64_t v59 = v55 + v56;
      sub_25B1806D0(v55, v105, type metadata accessor for Record.ID);
      sub_25B1806D0(v59, v58, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t v60 = v57;
      uint64_t v61 = (uint64_t)v101;
      sub_25B18095C(v60, (uint64_t)v101, type metadata accessor for Record.ID);
      sub_25B180A5C(v58, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      sub_25B116DE0(v55, &qword_26A4D9860);
      uint64_t v62 = v110[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25B2240E0(0, *(void *)(v62 + 16) + 1, 1);
        uint64_t v62 = v110[0];
      }
      unint64_t v64 = *(void *)(v62 + 16);
      unint64_t v63 = *(void *)(v62 + 24);
      int64_t v65 = v98;
      if (v64 >= v63 >> 1)
      {
        sub_25B2240E0(v63 > 1, v64 + 1, 1);
        uint64_t v62 = v110[0];
      }
      *(void *)(v62 + 16) = v64 + 1;
      uint64_t v14 = v100;
      uint64_t result = sub_25B18095C(v61, v62+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ v64 * v109, type metadata accessor for Record.ID);
      uint64_t v38 = v99;
      char v44 = *(unsigned char *)(v99 + 32);
      unint64_t v46 = 1 << v44;
      if (v41 >= 1 << v44) {
        goto LABEL_41;
      }
      uint64_t v43 = v97;
      uint64_t v66 = *(void *)(v97 + 8 * v48);
      if ((v66 & v108) == 0) {
        goto LABEL_42;
      }
      LODWORD(v40) = v96;
      if (*(_DWORD *)(v99 + 36) != v96) {
        goto LABEL_43;
      }
      unint64_t v67 = v66 & (-2 << (v41 & 0x3F));
      if (v67)
      {
        unint64_t v46 = __clz(__rbit64(v67)) | v41 & 0xFFFFFFFFFFFFFFC0;
        uint64_t v21 = v95;
        uint64_t v47 = v107;
      }
      else
      {
        unint64_t v68 = v48 + 1;
        unint64_t v69 = (v46 + 63) >> 6;
        uint64_t v21 = v95;
        uint64_t v47 = v107;
        if (v48 + 1 < v69)
        {
          unint64_t v70 = *(void *)(v97 + 8 * v68);
          if (!v70)
          {
            unint64_t v68 = v48 + 2;
            if (v48 + 2 >= v69) {
              goto LABEL_10;
            }
            unint64_t v70 = *(void *)(v97 + 8 * v68);
            if (!v70)
            {
              while (v69 - 3 != v48)
              {
                unint64_t v70 = *(void *)(v81 + 8 * v48++);
                if (v70)
                {
                  unint64_t v68 = v48 + 2;
                  goto LABEL_25;
                }
              }
              goto LABEL_10;
            }
          }
LABEL_25:
          unint64_t v46 = __clz(__rbit64(v70)) + (v68 << 6);
        }
      }
LABEL_10:
      uint64_t v42 = v47 + 1;
      uint64_t v41 = v46;
      if (v42 == v65)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = v84;
        uint64_t v17 = v87;
        uint64_t v20 = v82;
        goto LABEL_35;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v62 = MEMORY[0x263F8EE78];
LABEL_35:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v112);
  sub_25B10FF48((uint64_t)v85, (uint64_t)&v112);
  uint64_t v73 = v113;
  uint64_t v74 = v114;
  __swift_project_boxed_opaque_existential_1(&v112, v113);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 + 16) + 112))(v62, v73);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v112);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v75 = v92;
  swift_bridgeObjectRetain();
  sub_25B21CDAC(v93, v21, v94, v75);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_36:
  uint64_t v76 = v89;
  *uint64_t v20 = v89;
  v91(v20, v88, v17);
  id v77 = v76;
  LOBYTE(v76) = sub_25B290440();
  uint64_t result = v90(v20, v17);
  if ((v76 & 1) == 0) {
    goto LABEL_45;
  }
  uint64_t v78 = v4[63];
  uint64_t v79 = v4[64];
  __swift_project_boxed_opaque_existential_1(v4 + 60, v78);
  uint64_t v80 = *(void (**)(uint64_t (*)(uint64_t, unint64_t), void *, uint64_t, uint64_t))(v79 + 8);
  swift_retain();
  v80(sub_25B185BD0, v4, v78, v79);
  return swift_release();
}

Swift::Void __swiftcall Replicator.set(clientID:enabled:)(Swift::String clientID, Swift::Bool enabled)
{
  object = clientID._object;
  uint64_t countAndFlagsBits = clientID._countAndFlagsBits;
  uint64_t v6 = *(void *)(v2 + 232);
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = enabled;
  *(void *)(v7 + 24) = countAndFlagsBits;
  *(void *)(v7 + 32) = object;
  *(void *)(v7 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_25B1B7434(0xD000000000000020, 0x800000025B29C320, v6, (uint64_t)sub_25B17CB48, v7, 0.0);
  swift_release();
}

uint64_t sub_25B137F10(uint64_t (*a1)(uint64_t), uint64_t a2, char a3, uint64_t *a4, unint64_t a5, void *a6)
{
  uint64_t v97 = a6;
  v92[1] = a2;
  uint64_t v93 = a1;
  uint64_t v96 = sub_25B290410();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v94 = (void *)((char *)v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v10 = MEMORY[0x270FA5388](v112);
  uint64_t v111 = (uint64_t)v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v110 = (uint64_t)v92 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v109 = (uint64_t)v92 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v108 = (uint64_t)v92 - v16;
  uint64_t v17 = type metadata accessor for Record.ID(0);
  uint64_t v122 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v121 = (uint64_t)v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) == 0)
  {
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_25B290190();
    uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_26A4EB150);
    swift_bridgeObjectRetain_n();
    uint64_t v104 = v25;
    uint64_t v26 = sub_25B290160();
    os_log_type_t v27 = sub_25B2908A0();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v29 = MEMORY[0x263F8EE58];
    if (v28)
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v124 = v31;
      *(_DWORD *)uint64_t v30 = 136446210;
      swift_bridgeObjectRetain();
      v123[0] = sub_25B288E98((uint64_t)a4, a5, &v124);
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25B107000, v26, v27, "Disabling client %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v31, -1, -1);
      MEMORY[0x261160890](v30, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v33 = v97;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_25B218D9C(v123, (uint64_t)a4, a5);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = sub_25B17DE3C(v34, (uint64_t)a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_25B12AA78(v35);
    uint64_t v107 = 0;
    swift_release();
    uint64_t v102 = *(void *)(v36 + 16);
    if (!v102)
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = v33;
      goto LABEL_47;
    }
    uint64_t v103 = v36 + 32;
    uint64_t v106 = v33 + 24;
    swift_beginAccess();
    a5 = 0;
    *(void *)&long long v37 = 136446210;
    long long v99 = v37;
    uint64_t v98 = v29 + 8;
    uint64_t v101 = v36;
    while (1)
    {
      if (a5 >= *(void *)(v36 + 16)) {
        goto LABEL_55;
      }
      unint64_t v105 = a5;
      uint64_t v40 = (uint64_t *)(v103 + 32 * a5);
      uint64_t v41 = *v40;
      uint64_t v42 = v40[1];
      a4 = (uint64_t *)v40[2];
      uint64_t v43 = v40[3];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      char v44 = sub_25B290160();
      os_log_type_t v45 = sub_25B2908A0();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        v123[0] = v47;
        *(_DWORD *)uint64_t v46 = v99;
        uint64_t v124 = 0;
        unint64_t v125 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25B290AA0();
        swift_bridgeObjectRelease();
        uint64_t v124 = 540697705;
        unint64_t v125 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        sub_25B290650();
        swift_bridgeObjectRelease();
        sub_25B290650();
        swift_bridgeObjectRetain();
        sub_25B290650();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        *(void *)(v46 + 4) = sub_25B288E98(v124, v125, v123);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25B107000, v44, v45, "Removing all remote records in zone %{public}s", (uint8_t *)v46, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261160890](v47, -1, -1);
        MEMORY[0x261160890](v46, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_25B10FF48((uint64_t)v106, (uint64_t)&v124);
      uint64_t v49 = v126;
      uint64_t v48 = v127;
      __swift_project_boxed_opaque_existential_1(&v124, v126);
      v123[0] = v41;
      v123[1] = v42;
      v123[2] = (uint64_t)a4;
      v123[3] = v43;
      uint64_t v50 = MetadataStoring.metadata(for:)(v123, v49, *(void *)(v48 + 8));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v51 = v107;
      uint64_t v52 = sub_25B1762A4(v50, (uint64_t (*)(char *, unint64_t, uint64_t))sub_25B17786C);
      uint64_t v107 = v51;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
      int64_t v53 = *(void *)(v52 + 16);
      if (!v53)
      {
        swift_release();
        uint64_t v74 = MEMORY[0x263F8EE78];
        goto LABEL_15;
      }
      uint64_t v124 = MEMORY[0x263F8EE78];
      sub_25B2240E0(0, v53, 0);
      a5 = sub_25B1A7EF0(v52);
      uint64_t v55 = 0;
      uint64_t v56 = v52 + 64;
      char v57 = *(unsigned char *)(v52 + 32);
      uint64_t v114 = v54;
      uint64_t v100 = v52 + 88;
      uint64_t v116 = v52;
      int64_t v113 = v53;
      uint64_t v115 = v52 + 64;
      do
      {
        if ((a5 & 0x8000000000000000) != 0 || (uint64_t)a5 >= 1 << v57)
        {
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        unint64_t v61 = a5 >> 6;
        if ((*(void *)(v56 + 8 * (a5 >> 6)) & (1 << a5)) == 0) {
          goto LABEL_50;
        }
        if (*(_DWORD *)(v52 + 36) != v54) {
          goto LABEL_51;
        }
        uint64_t v119 = 1 << a5;
        uint64_t v118 = v54;
        uint64_t v117 = v55;
        uint64_t v62 = v112;
        uint64_t v63 = v108;
        uint64_t v64 = v108 + *(int *)(v112 + 48);
        uint64_t v65 = *(void *)(v52 + 48);
        uint64_t v120 = *(void *)(v122 + 72);
        sub_25B1806D0(v65 + v120 * a5, v108, type metadata accessor for Record.ID);
        uint64_t v66 = *(void *)(v52 + 56);
        uint64_t v67 = type metadata accessor for RecordMetadata();
        sub_25B1806D0(v66 + *(void *)(*(void *)(v67 - 8) + 72) * a5, v64, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        uint64_t v68 = v109;
        sub_25B1806D0(v63, v109, type metadata accessor for Record.ID);
        sub_25B1806D0(v64, v68 + *(int *)(v62 + 48), (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        uint64_t v69 = v110;
        a4 = &qword_26A4D9860;
        sub_25B187574(v68, v110, &qword_26A4D9860);
        sub_25B116DE0(v63, &qword_26A4D9860);
        uint64_t v70 = *(int *)(v62 + 48);
        uint64_t v71 = v111;
        uint64_t v72 = v111 + v70;
        uint64_t v73 = v69 + v70;
        sub_25B1806D0(v69, v111, type metadata accessor for Record.ID);
        sub_25B1806D0(v73, v72, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        sub_25B18095C(v71, v121, type metadata accessor for Record.ID);
        sub_25B180A5C(v72, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        sub_25B116DE0(v69, &qword_26A4D9860);
        uint64_t v74 = v124;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25B2240E0(0, *(void *)(v74 + 16) + 1, 1);
          uint64_t v74 = v124;
        }
        unint64_t v76 = *(void *)(v74 + 16);
        unint64_t v75 = *(void *)(v74 + 24);
        if (v76 >= v75 >> 1)
        {
          sub_25B2240E0(v75 > 1, v76 + 1, 1);
          uint64_t v74 = v124;
        }
        *(void *)(v74 + 16) = v76 + 1;
        sub_25B18095C(v121, v74+ ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80))+ v76 * v120, type metadata accessor for Record.ID);
        uint64_t v52 = v116;
        char v57 = *(unsigned char *)(v116 + 32);
        unint64_t v58 = 1 << v57;
        if ((uint64_t)a5 >= 1 << v57) {
          goto LABEL_52;
        }
        uint64_t v56 = v115;
        uint64_t v77 = *(void *)(v115 + 8 * v61);
        if ((v77 & v119) == 0) {
          goto LABEL_53;
        }
        if (*(_DWORD *)(v116 + 36) != v118) {
          goto LABEL_54;
        }
        unint64_t v78 = v77 & (-2 << (a5 & 0x3F));
        if (v78)
        {
          unint64_t v58 = __clz(__rbit64(v78)) | a5 & 0xFFFFFFFFFFFFFFC0;
          int64_t v59 = v113;
          uint64_t v60 = v117;
          goto LABEL_23;
        }
        unint64_t v79 = v61 + 1;
        unint64_t v80 = (v58 + 63) >> 6;
        int64_t v59 = v113;
        uint64_t v60 = v117;
        if (v61 + 1 < v80)
        {
          unint64_t v81 = *(void *)(v115 + 8 * v79);
          if (v81) {
            goto LABEL_38;
          }
          unint64_t v79 = v61 + 2;
          if (v61 + 2 < v80)
          {
            unint64_t v81 = *(void *)(v115 + 8 * v79);
            if (!v81)
            {
              do
              {
                if (v80 - 3 == v61) {
                  goto LABEL_23;
                }
                unint64_t v81 = *(void *)(v100 + 8 * v61++);
              }
              while (!v81);
              unint64_t v79 = v61 + 2;
            }
LABEL_38:
            unint64_t v58 = __clz(__rbit64(v81)) + (v79 << 6);
          }
        }
LABEL_23:
        uint64_t v55 = v60 + 1;
        uint64_t v54 = v114;
        a5 = v58;
      }
      while (v55 != v59);
      swift_release();
LABEL_15:
      a5 = v105 + 1;
      sub_25B10FF48((uint64_t)v106, (uint64_t)&v124);
      uint64_t v39 = v126;
      uint64_t v38 = v127;
      __swift_project_boxed_opaque_existential_1(&v124, v126);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 + 16) + 112))(v74, v39);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
      uint64_t v36 = v101;
      if (a5 == v102)
      {
        swift_bridgeObjectRelease();
        uint64_t v32 = v97;
        goto LABEL_47;
      }
    }
  }
  if (qword_26A4D98C0 != -1) {
    goto LABEL_57;
  }
  while (1)
  {
    uint64_t v19 = sub_25B290190();
    __swift_project_value_buffer(v19, (uint64_t)qword_26A4EB150);
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_25B290160();
    os_log_type_t v21 = sub_25B2908A0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v124 = v23;
      *(_DWORD *)uint64_t v22 = 136446210;
      swift_bridgeObjectRetain();
      v123[0] = sub_25B288E98((uint64_t)a4, a5, &v124);
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25B107000, v20, v21, "Enabling client %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v23, -1, -1);
      MEMORY[0x261160890](v22, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v32 = v97;
    swift_beginAccess();
    sub_25B1A5994((uint64_t)a4, a5);
    swift_endAccess();
    swift_bridgeObjectRelease();
LABEL_47:
    uint64_t v82 = (void *)v32[29];
    uint64_t v83 = v94;
    *uint64_t v94 = v82;
    uint64_t v84 = v95;
    uint64_t v85 = v96;
    (*(void (**)(void *, void, uint64_t))(v95 + 104))(v83, *MEMORY[0x263F8F0E0], v96);
    id v86 = v82;
    LOBYTE(v82) = sub_25B290440();
    (*(void (**)(void *, uint64_t))(v84 + 8))(v83, v85);
    if (v82) {
      break;
    }
LABEL_56:
    __break(1u);
LABEL_57:
    swift_once();
  }
  uint64_t v87 = v32[63];
  uint64_t v88 = v32[64];
  __swift_project_boxed_opaque_existential_1(v32 + 60, v87);
  id v89 = *(void (**)(uint64_t (*)(uint64_t, unint64_t), void *, uint64_t, uint64_t))(v88 + 8);
  swift_retain();
  v89(sub_25B185BD0, v32, v87, v88);
  swift_release();
  v123[0] = 0;
  uint64_t v124 = 0;
  LOBYTE(v125) = 0;
  uint64_t v90 = sub_25B138D84(v123, &v124);
  return v93(v90);
}

uint64_t sub_25B138D84(uint64_t *a1, uint64_t *a2)
{
  uint64_t v5 = sub_25B290410();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *a1;
  uint64_t v24 = *a2;
  int v23 = *((unsigned __int8 *)a2 + 8);
  uint64_t v10 = (void *)v2[29];
  void *v8 = v10;
  uint64_t v11 = *MEMORY[0x263F8F0E0];
  uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 104);
  v12(v8, v11, v5);
  id v13 = v10;
  LOBYTE(v10) = sub_25B290440();
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t))(v6 + 8);
  uint64_t result = v25(v8, v5);
  if (v10)
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v2;
    *(void *)(v15 + 24) = v9;
    *(void *)(v15 + 32) = v24;
    *(unsigned char *)(v15 + 40) = v23;
    void *v8 = v13;
    v12(v8, v11, v5);
    swift_bridgeObjectRetain();
    id v16 = v13;
    swift_retain();
    char v17 = sub_25B290440();
    uint64_t result = v25(v8, v5);
    if (v17)
    {
      uint64_t v18 = v2[63];
      uint64_t v19 = v2[64];
      __swift_project_boxed_opaque_existential_1(v2 + 60, v18);
      uint64_t v20 = (void *)swift_allocObject();
      void v20[2] = v2;
      void v20[3] = sub_25B18704C;
      v20[4] = v15;
      os_log_type_t v21 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v19 + 8);
      swift_retain();
      swift_retain();
      v21(sub_25B187C10, v20, v18, v19);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall Replicator.sync()()
{
  uint64_t v1 = *(void *)(v0 + 232);
  swift_retain();
  sub_25B1B7434(0x676E69636E7953, 0xE700000000000000, v1, (uint64_t)sub_25B17CB58, v0, 0.0);
  swift_release();
}

uint64_t sub_25B139060()
{
  return sub_25B139078();
}

uint64_t sub_25B139078()
{
  sub_25B290900();
  return v1;
}

uint64_t sub_25B1390C8(char a1)
{
  return sub_25B120F78(a1);
}

uint64_t (*sub_25B1390EC(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_25B121988(v2);
  return sub_25B12D81C;
}

void sub_25B139148(void *a1)
{
  unsigned __int8 v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void sub_25B139190(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)v1 + 96);
}

unint64_t sub_25B1391A0()
{
  return Replicator.localDeviceIdentifier.getter();
}

uint64_t sub_25B1391C4()
{
  return sub_25B290900();
}

uint64_t sub_25B13921C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  return Replicator.add(recordStubs:destination:schedule:)(a1, a2, a3);
}

uint64_t sub_25B139240(uint64_t a1, uint64_t *a2)
{
  return Replicator.delete(recordIDs:schedule:)(a1, a2);
}

uint64_t sub_25B139264(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *v3;
  uint64_t v8 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v10 = a3[2];
  uint64_t v9 = a3[3];
  uint64_t v11 = *(void *)(v6 + 232);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v6;
  void v12[3] = a1;
  v12[4] = a2;
  v12[5] = v8;
  v12[6] = v7;
  v12[7] = v10;
  v12[8] = v9;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_25B1B7434(0xD000000000000013, 0x800000025B29C300, v11, (uint64_t)sub_25B17CB40, (uint64_t)v12, 0.0);
  return swift_release();
}

uint64_t sub_25B139350(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(v7 + 232);
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a1;
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_25B1B7434(0xD000000000000020, 0x800000025B29C320, v8, (uint64_t)sub_25B187ACC, v9, 0.0);
  return swift_release();
}

uint64_t sub_25B139414()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 232);
  swift_retain();
  sub_25B1B7434(0x676E69636E7953, 0xE700000000000000, v2, (uint64_t)sub_25B17CB58, v1, 0.0);
  return swift_release();
}

uint64_t sub_25B13948C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B1394AC(a1, a2, a3, &qword_26A4D93A8);
}

uint64_t sub_25B1394AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_25B290900();
}

uint64_t sub_25B13950C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E80);
  sub_25B290900();
  return v1;
}

uint64_t sub_25B13957C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9A50);
  sub_25B290900();
  return v1;
}

uint64_t sub_25B1395FC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9DB0);
  sub_25B290900();
  return v1;
}

uint64_t sub_25B139670()
{
  return sub_25B121E2C();
}

void sub_25B139694()
{
}

uint64_t sub_25B1396B8()
{
  return 0x746163696C706552;
}

uint64_t Replicator.stateCaptureTitle.getter()
{
  return 0x746163696C706552;
}

uint64_t sub_25B1396F0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A80);
  sub_25B290900();
  return v1;
}

uint64_t Replicator.captureState(identifier:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A80);
  sub_25B290900();
  return v1;
}

Swift::Void __swiftcall Replicator.retryStuckRemotePairings()()
{
  uint64_t v1 = *(NSObject **)(v0 + 232);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_25B17CB7C;
  *(void *)(v2 + 24) = v0;
  v4[4] = sub_25B117398;
  v4[5] = v2;
  v4[0] = MEMORY[0x263EF8330];
  v4[1] = 1107296256;
  v4[2] = sub_25B10D184;
  v4[3] = &block_descriptor_171;
  uint64_t v3 = _Block_copy(v4);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v1) {
    __break(1u);
  }
}

uint64_t sub_25B13990C(void *a1)
{
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v2 = MEMORY[0x270FA5388](v90);
  id v89 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v88 = (uint64_t)&v82 - v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v87 = (char *)&v82 - v7;
  MEMORY[0x270FA5388](v6);
  id v86 = (char *)&v82 - v8;
  swift_beginAccess();
  sub_25B10FF48((uint64_t)(a1 + 24), (uint64_t)&v100);
  uint64_t v9 = *((void *)&v101 + 1);
  uint64_t v10 = v102;
  __swift_project_boxed_opaque_existential_1(&v100, *((uint64_t *)&v101 + 1));
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v10 + 8) + 8) + 32))(v9);
  uint64_t v12 = sub_25B1762A4(v11, (uint64_t (*)(char *, unint64_t, uint64_t))sub_25B177330);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v100);
  int64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v91 = v12;
  if (!v13)
  {
LABEL_28:
    unint64_t v99 = v14;
    if (qword_26A4D98C0 != -1) {
      goto LABEL_49;
    }
    goto LABEL_29;
  }
  uint64_t v82 = a1;
  uint64_t v111 = MEMORY[0x263F8EE78];
  sub_25B224188(0, v13, 0);
  uint64_t v15 = sub_25B1A7EF0(v12);
  if (v15 < 0) {
    goto LABEL_48;
  }
  unint64_t v17 = v15;
  if (v15 >= 1 << *(unsigned char *)(v12 + 32)) {
    goto LABEL_48;
  }
  uint64_t v18 = 0;
  uint64_t v19 = v12 + 64;
  uint64_t v92 = v12 + 80;
  int64_t v83 = v13;
  uint64_t v84 = v16;
  uint64_t v85 = v12 + 64;
  while (1)
  {
    unint64_t v20 = v17 >> 6;
    if ((*(void *)(v19 + 8 * (v17 >> 6)) & (1 << v17)) == 0) {
      break;
    }
    if (*(_DWORD *)(v12 + 36) != v16) {
      goto LABEL_44;
    }
    uint64_t v94 = 1 << v17;
    uint64_t v93 = v18;
    uint64_t v21 = v90;
    uint64_t v22 = (uint64_t)v86;
    uint64_t v23 = (uint64_t)&v86[*(int *)(v90 + 48)];
    uint64_t v24 = *(void *)(v12 + 48);
    uint64_t v25 = sub_25B290080();
    uint64_t v98 = *(void *)(v25 - 8);
    uint64_t v26 = v24 + *(void *)(v98 + 72) * v17;
    os_log_type_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16);
    uint64_t v95 = v25;
    v27(v22, v26, v25);
    uint64_t v28 = *(void *)(v12 + 56);
    uint64_t v29 = (int *)(type metadata accessor for PairingRelationship() - 8);
    uint64_t v30 = *(void *)(*(void *)v29 + 72);
    unint64_t v99 = v17;
    uint64_t v31 = v28 + v30 * v17;
    uint64_t v32 = v23;
    sub_25B1806D0(v31, v23, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v33 = (uint64_t)v87;
    v27((uint64_t)v87, v22, v25);
    sub_25B1806D0(v32, v33 + *(int *)(v21 + 48), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v34 = v88;
    sub_25B187574(v33, v88, &qword_26A4D9EE8);
    sub_25B116DE0(v22, &qword_26A4D9EE8);
    uint64_t v35 = *(int *)(v21 + 48);
    uint64_t v36 = v89;
    uint64_t v37 = (uint64_t)&v89[v35];
    uint64_t v38 = v34 + v35;
    uint64_t v39 = v95;
    v27((uint64_t)v89, v34, v95);
    sub_25B1806D0(v38, v37, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v40 = (long long *)(v37 + v29[7]);
    long long v41 = v40[9];
    long long v108 = v40[8];
    long long v109 = v41;
    long long v110 = v40[10];
    long long v42 = v40[5];
    long long v104 = v40[4];
    long long v105 = v42;
    long long v43 = v40[7];
    long long v106 = v40[6];
    long long v107 = v43;
    long long v44 = v40[2];
    long long v103 = v40[3];
    long long v102 = v44;
    long long v45 = *v40;
    long long v101 = v40[1];
    long long v100 = v45;
    sub_25B1172F8((uint64_t)&v100);
    sub_25B180A5C(v37, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v46 = *((void *)&v100 + 1);
    a1 = (void *)v100;
    long long v47 = v102;
    char v48 = v103;
    uint64_t v49 = *((void *)&v110 + 1);
    uint64_t v96 = v110;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B11DEBC((uint64_t)&v100);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v36, v39);
    sub_25B116DE0(v34, &qword_26A4D9EE8);
    uint64_t v14 = v111;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v97 = *((void *)&v47 + 1);
    char v51 = v48;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_25B224188(0, *(void *)(v14 + 16) + 1, 1);
      uint64_t v14 = v111;
    }
    unint64_t v53 = *(void *)(v14 + 16);
    unint64_t v52 = *(void *)(v14 + 24);
    uint64_t v54 = v99;
    if (v53 >= v52 >> 1)
    {
      sub_25B224188(v52 > 1, v53 + 1, 1);
      uint64_t v14 = v111;
    }
    *(void *)(v14 + 16) = v53 + 1;
    unint64_t v55 = v14 + 56 * v53;
    *(void *)(v55 + 32) = a1;
    *(void *)(v55 + 40) = v46;
    *(void *)(v55 + 48) = v96;
    *(void *)(v55 + 56) = v49;
    *(unsigned char *)(v55 + 64) = v51;
    uint64_t v56 = v97;
    *(void *)(v55 + 72) = v47;
    *(void *)(v55 + 80) = v56;
    uint64_t v12 = v91;
    uint64_t v57 = 1 << *(unsigned char *)(v91 + 32);
    if (v54 >= v57) {
      goto LABEL_45;
    }
    uint64_t v19 = v85;
    uint64_t v58 = *(void *)(v85 + 8 * v20);
    if ((v58 & v94) == 0) {
      goto LABEL_46;
    }
    LODWORD(v16) = v84;
    if (*(_DWORD *)(v91 + 36) != v84) {
      goto LABEL_47;
    }
    unint64_t v59 = v58 & (-2 << (v54 & 0x3F));
    if (v59)
    {
      unint64_t v17 = __clz(__rbit64(v59)) | v54 & 0xFFFFFFFFFFFFFFC0;
      int64_t v60 = v83;
      goto LABEL_23;
    }
    unint64_t v61 = v20 + 1;
    unint64_t v62 = (unint64_t)(v57 + 63) >> 6;
    int64_t v60 = v83;
    if (v20 + 1 < v62)
    {
      unint64_t v63 = *(void *)(v85 + 8 * v61);
      if (v63)
      {
LABEL_21:
        unint64_t v17 = __clz(__rbit64(v63)) + (v61 << 6);
        goto LABEL_23;
      }
      while (v62 - 2 != v20)
      {
        unint64_t v63 = *(void *)(v92 + 8 * v20++);
        if (v63)
        {
          unint64_t v61 = v20 + 1;
          goto LABEL_21;
        }
      }
    }
    unint64_t v17 = 1 << *(unsigned char *)(v91 + 32);
LABEL_23:
    uint64_t v18 = v93 + 1;
    if (v93 + 1 == v60)
    {
      a1 = v82;
      goto LABEL_28;
    }
    if ((v17 & 0x8000000000000000) != 0 || (uint64_t)v17 >= v57) {
      goto LABEL_48;
    }
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  swift_once();
LABEL_29:
  uint64_t v64 = sub_25B290190();
  __swift_project_value_buffer(v64, (uint64_t)qword_26A4EB150);
  swift_retain_n();
  uint64_t v65 = v99;
  swift_bridgeObjectRetain_n();
  uint64_t v66 = sub_25B290160();
  os_log_type_t v67 = sub_25B2908A0();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    *(void *)&long long v100 = v69;
    *(_DWORD *)uint64_t v68 = 136380931;
    if (a1[32])
    {
      uint64_t v70 = a1[31];
      unint64_t v71 = a1[32];
    }
    else
    {
      uint64_t v72 = a1[23];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v74 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 8))(ObjectType, v72);
      if (v75) {
        uint64_t v70 = v74;
      }
      else {
        uint64_t v70 = 0xD000000000000016;
      }
      if (v75) {
        unint64_t v71 = v75;
      }
      else {
        unint64_t v71 = 0x800000025B29C2A0;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v111 = sub_25B288E98(v70, v71, (uint64_t *)&v100);
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2082;
    uint64_t v65 = v99;
    uint64_t v76 = swift_bridgeObjectRetain();
    uint64_t v77 = MEMORY[0x26115F080](v76, &type metadata for HandshakeDescriptor);
    unint64_t v79 = v78;
    swift_bridgeObjectRelease();
    uint64_t v111 = sub_25B288E98(v77, v79, (uint64_t *)&v100);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v66, v67, "(%{private}s) Attempting to handshake with stuck pairings: %{public}s", (uint8_t *)v68, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v69, -1, -1);
    MEMORY[0x261160890](v68, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  uint64_t v80 = *(void *)(v91 + 16);
  swift_release();
  if (v80) {
    sub_25B13A258(v65);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B13A258(uint64_t a1)
{
  uint64_t v21 = a1;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t (**)(void *, uint64_t))((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (void *)v1[29];
  *uint64_t v5 = v6;
  uint64_t v7 = *MEMORY[0x263F8F0E0];
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  v8(v5, v7, v2);
  id v9 = v6;
  LOBYTE(v6) = sub_25B290440();
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t))(v3 + 8);
  uint64_t result = v10(v5, v2);
  if (v6)
  {
    uint64_t v12 = swift_allocObject();
    unint64_t v20 = v10;
    uint64_t v13 = v21;
    *(void *)(v12 + 16) = v1;
    *(void *)(v12 + 24) = v13;
    *uint64_t v5 = v9;
    v8(v5, v7, v2);
    id v14 = v9;
    swift_retain();
    swift_bridgeObjectRetain();
    char v15 = sub_25B290440();
    uint64_t result = v20(v5, v2);
    if (v15)
    {
      uint64_t v16 = v1[63];
      uint64_t v17 = v1[64];
      __swift_project_boxed_opaque_existential_1(v1 + 60, v16);
      uint64_t v18 = (void *)swift_allocObject();
      v18[2] = v1;
      v18[3] = sub_25B186288;
      v18[4] = v12;
      uint64_t v19 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v17 + 8);
      swift_retain();
      swift_retain();
      v19(sub_25B187C10, v18, v16, v17);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_25B13A49C()
{
}

uint64_t Replicator.syncService(_:didReceiveMessage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B17E004(a3);
}

uint64_t sub_25B13A4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25B28FEA0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_25B13A59C(a2, (uint64_t)v5);
  return sub_25B116DE0((uint64_t)v5, &qword_26A4D9160);
}

void sub_25B13A59C(uint64_t a1, uint64_t a2)
{
  uint64_t v191 = a2;
  uint64_t v211 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v3 - 8);
  char v180 = (char *)&v177 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB070);
  MEMORY[0x270FA5388](v5 - 8);
  os_log_t v208 = (os_log_t)((char *)&v177 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v205 = (uint64_t)&v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PairingRelationship();
  uint64_t v203 = *(void *)(v9 - 8);
  uint64_t v204 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v202 = (uint64_t)&v177 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Message();
  uint64_t v190 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v181 = (uint64_t)&v177 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v179 = (uint64_t)&v177 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v182 = (uint64_t)&v177 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v192 = (uint64_t)&v177 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v189 = (char *)&v177 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  os_log_t v197 = (os_log_t)((char *)&v177 - v22);
  uint64_t v200 = sub_25B290080();
  uint64_t v207 = *(void *)(v200 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v200);
  unint64_t v193 = (char *)&v177 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  v201 = (char *)&v177 - v25;
  uint64_t v26 = type metadata accessor for ReplicatorMessage.Sync(0);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v196 = (uint64_t)&v177 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v185 = (uint64_t)&v177 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  MEMORY[0x270FA5388](v184);
  uint64_t v187 = (uint64_t)&v177 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  MEMORY[0x270FA5388](v183);
  uint64_t v186 = (uint64_t)&v177 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = type metadata accessor for ReplicatorMessage.Handshake(0);
  uint64_t v32 = MEMORY[0x270FA5388](v194);
  uint64_t v195 = (uint64_t)&v177 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v198 = (uint64_t)&v177 - v34;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA6C0);
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v37 = (char *)&v177 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = type metadata accessor for ReplicatorMessage(0);
  uint64_t v38 = *(void *)(v210 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v210);
  long long v188 = (char *)&v177 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v199 = (uint64_t)&v177 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  long long v45 = (char *)&v177 - v44;
  MEMORY[0x270FA5388](v43);
  uint64_t v206 = (uint64_t)&v177 - v46;
  uint64_t v47 = sub_25B290410();
  uint64_t v48 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v50 = (uint64_t *)((char *)&v177 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v209 = v2;
  char v51 = *(void **)(v2 + 232);
  *uint64_t v50 = v51;
  (*(void (**)(void *, void, uint64_t))(v48 + 104))(v50, *MEMORY[0x263F8F0E0], v47);
  id v52 = v51;
  uint64_t v53 = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v48 + 8))(v50, v47);
  if ((v53 & 1) == 0)
  {
    __break(1u);
    swift_once();
    uint64_t v58 = sub_25B290190();
    __swift_project_value_buffer(v58, (uint64_t)qword_26A4EB150);
    swift_retain();
    unint64_t v59 = sub_25B290160();
    os_log_type_t v60 = sub_25B290880();
    if (os_log_type_enabled(v59, v60))
    {
      unint64_t v61 = (uint8_t *)swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      *(void *)(v53 + 176) = v62;
      *(_DWORD *)unint64_t v61 = 136380675;
      uint64_t v63 = *(void *)(v11 + 528);
      unint64_t v64 = *(void *)(v11 + 536);
      swift_bridgeObjectRetain();
      *(void *)&long long v213 = sub_25B288E98(v63, v64, (uint64_t *)&v224);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v59, v60, "(%{private}s) Sync message could not be decoded", v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v62, -1, -1);
      MEMORY[0x261160890](v61, -1, -1);
    }
    else
    {

      swift_release();
    }
    return;
  }
  uint64_t v54 = *(int *)(v11 + 32);
  uint64_t v55 = *(void *)(v211 + v54);
  type metadata accessor for OPACKCoder();
  sub_25B284F38(v235);
  uint64_t v178 = v54;
  sub_25B116E84((uint64_t)v235, (uint64_t)&v225);
  uint64_t v56 = MEMORY[0x263F8EE78];
  unint64_t v57 = sub_25B20D420(MEMORY[0x263F8EE78]);
  *(void *)&long long v224 = v56;
  *((void *)&v224 + 1) = v57;
  *(void *)&long long v227 = v55;
  BYTE8(v227) = 0;
  *((void *)&v214 + 1) = &type metadata for PropertyListTypeDecoder.RootDecoder;
  *(void *)&long long v215 = sub_25B116EE0();
  *(void *)&long long v213 = swift_allocObject();
  sub_25B116F7C((uint64_t)&v224, v213 + 16);
  sub_25B25C440(&v213, (uint64_t)v37);
  sub_25B116FD8((uint64_t)&v224);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v235);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v37, 0, 1, v210);
  uint64_t v65 = (uint64_t)v37;
  uint64_t v66 = v206;
  sub_25B18095C(v65, v206, type metadata accessor for ReplicatorMessage);
  sub_25B1806D0(v66, (uint64_t)v45, type metadata accessor for ReplicatorMessage);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v177 = v11;
  if (EnumCaseMultiPayload)
  {
    uint64_t v69 = v207;
    os_log_t v68 = v208;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v70 = v196;
      sub_25B18095C((uint64_t)v45, v196, type metadata accessor for ReplicatorMessage.Sync);
      uint64_t v71 = v209;
      if (*(unsigned char *)(v209 + 600) == 1) {
        sub_25B13EC64(v70, v191);
      }
      sub_25B180A5C(v70, type metadata accessor for ReplicatorMessage.Sync);
      goto LABEL_32;
    }
    os_log_t v89 = v197;
    sub_25B187628(v211 + *(int *)(v11 + 20), (uint64_t)v197, &qword_26B33F200);
    uint64_t v90 = v200;
    int v91 = (*(uint64_t (**)(os_log_t, uint64_t, uint64_t))(v69 + 48))(v89, 1, v200);
    uint64_t v71 = v209;
    if (v91 == 1)
    {
      sub_25B116DE0((uint64_t)v89, &qword_26B33F200);
      goto LABEL_32;
    }
    (*(void (**)(char *, os_log_t, uint64_t))(v69 + 32))(v201, v89, v90);
    uint64_t v92 = v90;
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v93 = sub_25B290190();
    __swift_project_value_buffer(v93, (uint64_t)qword_26A4EB150);
    uint64_t v94 = v192;
    sub_25B1806D0(v211, v192, (uint64_t (*)(void))type metadata accessor for Message);
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v193, v201, v90);
    swift_retain_n();
    uint64_t v95 = sub_25B290160();
    os_log_type_t v96 = sub_25B2908A0();
    int v97 = v96;
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v98 = swift_slowAlloc();
      os_log_t v197 = v95;
      uint64_t v99 = v98;
      uint64_t v198 = swift_slowAlloc();
      *(void *)&long long v224 = v198;
      *(_DWORD *)uint64_t v99 = 136381187;
      uint64_t v100 = *(void *)(v71 + 528);
      unint64_t v101 = *(void *)(v71 + 536);
      swift_bridgeObjectRetain();
      *(void *)&long long v213 = sub_25B288E98(v100, v101, (uint64_t *)&v224);
      sub_25B2909C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v99 + 12) = 2080;
      sub_25B1875E0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
      LODWORD(v196) = v97;
      uint64_t v102 = v92;
      uint64_t v103 = sub_25B290DB0();
      *(void *)&long long v213 = sub_25B288E98(v103, v104, (uint64_t *)&v224);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B180A5C(v94, (uint64_t (*)(void))type metadata accessor for Message);
      *(_WORD *)(v99 + 22) = 2082;
      long long v105 = v193;
      uint64_t v71 = v209;
      uint64_t v106 = sub_25B290DB0();
      *(void *)&long long v213 = sub_25B288E98(v106, v107, (uint64_t *)&v224);
      uint64_t v66 = v206;
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      long long v108 = *(void (**)(char *, uint64_t))(v207 + 8);
      v108(v105, v92);
      os_log_t v109 = v197;
      _os_log_impl(&dword_25B107000, v197, (os_log_type_t)v196, "(%{private}s) Received ack with ID %s for %{public}s)", (uint8_t *)v99, 0x20u);
      uint64_t v110 = v198;
      swift_arrayDestroy();
      MEMORY[0x261160890](v110, -1, -1);
      MEMORY[0x261160890](v99, -1, -1);

      v108(v201, v102);
      uint64_t v69 = v207;
    }
    else
    {

      uint64_t v126 = *(void (**)(char *, uint64_t))(v69 + 8);
      v126(v193, v92);
      sub_25B180A5C(v94, (uint64_t (*)(void))type metadata accessor for Message);
      swift_release_n();
      v126(v201, v92);
    }
    goto LABEL_29;
  }
  uint64_t v72 = v198;
  sub_25B18095C((uint64_t)v45, v198, type metadata accessor for ReplicatorMessage.Handshake);
  uint64_t v73 = v195;
  sub_25B1806D0(v72, v195, type metadata accessor for ReplicatorMessage.Handshake);
  int v74 = swift_getEnumCaseMultiPayload();
  uint64_t v69 = v207;
  os_log_t v68 = v208;
  if (v74)
  {
    uint64_t v71 = v209;
    if (v74 != 1)
    {
      uint64_t v125 = v185;
      sub_25B18095C(v73, v185, type metadata accessor for ReplicatorMessage.Handshake.Complete);
      if (*(unsigned char *)(v71 + 600) == 1) {
        sub_25B13D5AC(v125);
      }
      sub_25B180A5C(v125, type metadata accessor for ReplicatorMessage.Handshake.Complete);
      sub_25B180A5C(v72, type metadata accessor for ReplicatorMessage.Handshake);
      goto LABEL_32;
    }
    uint64_t v75 = v187;
    sub_25B18095C(v73, v187, type metadata accessor for ReplicatorMessage.Handshake.Response);
    uint64_t v76 = (long long *)(v75 + *(int *)(v184 + 24));
    long long v77 = v76[8];
    long long v78 = v76[6];
    long long v231 = v76[7];
    long long v232 = v77;
    long long v79 = v76[8];
    long long v80 = v76[10];
    long long v233 = v76[9];
    long long v234 = v80;
    long long v81 = v76[4];
    long long v82 = v76[2];
    long long v227 = v76[3];
    long long v228 = v81;
    long long v83 = v76[4];
    long long v84 = v76[6];
    long long v229 = v76[5];
    long long v230 = v84;
    long long v85 = *v76;
    long long v86 = v76[2];
    long long v225 = v76[1];
    long long v226 = v86;
    long long v87 = *v76;
    long long v221 = v79;
    long long v222 = v233;
    long long v223 = v76[10];
    long long v224 = v87;
    long long v217 = v83;
    long long v218 = v229;
    long long v219 = v78;
    long long v220 = v231;
    long long v213 = v85;
    long long v214 = v225;
    long long v215 = v82;
    long long v216 = v227;
    sub_25B1172F8((uint64_t)&v224);
    char v88 = sub_25B13C188((uint64_t)&v213);
    sub_25B11DEBC((uint64_t)&v224);
    if (v88) {
      sub_25B13CED8(v75, *(void *)(v211 + v178));
    }
    else {
      sub_25B13D1E8(v75);
    }
    sub_25B180A5C(v75, type metadata accessor for ReplicatorMessage.Handshake.Response);
    sub_25B180A5C(v72, type metadata accessor for ReplicatorMessage.Handshake);
LABEL_29:
    os_log_t v68 = v208;
    goto LABEL_32;
  }
  uint64_t v111 = v186;
  sub_25B18095C(v73, v186, type metadata accessor for ReplicatorMessage.Handshake.Request);
  uint64_t v112 = (long long *)(v111 + *(int *)(v183 + 24));
  long long v113 = v112[8];
  long long v114 = v112[6];
  long long v231 = v112[7];
  long long v232 = v113;
  long long v115 = v112[8];
  long long v116 = v112[10];
  long long v233 = v112[9];
  long long v234 = v116;
  long long v117 = v112[4];
  long long v118 = v112[2];
  long long v227 = v112[3];
  long long v228 = v117;
  long long v119 = v112[4];
  long long v120 = v112[6];
  long long v229 = v112[5];
  long long v230 = v120;
  long long v121 = *v112;
  long long v122 = v112[2];
  long long v225 = v112[1];
  long long v226 = v122;
  long long v123 = *v112;
  long long v221 = v115;
  long long v222 = v233;
  long long v223 = v112[10];
  long long v224 = v123;
  long long v217 = v119;
  long long v218 = v229;
  long long v219 = v114;
  long long v220 = v231;
  long long v213 = v121;
  long long v214 = v225;
  long long v215 = v118;
  long long v216 = v227;
  sub_25B1172F8((uint64_t)&v224);
  uint64_t v71 = v209;
  char v124 = sub_25B13C188((uint64_t)&v213);
  sub_25B11DEBC((uint64_t)&v224);
  if (v124) {
    sub_25B13C310(v111, *(void *)(v211 + v178));
  }
  else {
    sub_25B13C620(v111);
  }
  sub_25B180A5C(v111, type metadata accessor for ReplicatorMessage.Handshake.Request);
  sub_25B180A5C(v72, type metadata accessor for ReplicatorMessage.Handshake);
  uint64_t v69 = v207;
LABEL_32:
  swift_beginAccess();
  sub_25B10FF48(v71 + 192, (uint64_t)&v224);
  uint64_t v127 = *((void *)&v225 + 1);
  uint64_t v128 = v226;
  __swift_project_boxed_opaque_existential_1(&v224, *((uint64_t *)&v225 + 1));
  uint64_t v129 = *(void *)(v128 + 8);
  uint64_t v130 = v205;
  MetadataStoring.pairingRelationship(remoteDeviceID:)(*(void *)(v211 + *(int *)(v177 + 28)), *(void *)(v211 + *(int *)(v177 + 28) + 8), v127, v129, v205);
  uint64_t v131 = v204;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v203 + 48))(v130, 1, v204) == 1)
  {
    sub_25B180A5C(v66, type metadata accessor for ReplicatorMessage);
    sub_25B116DE0(v130, &qword_26A4D9610);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v224);
  }
  else
  {
    uint64_t v132 = v130;
    uint64_t v133 = v202;
    sub_25B18095C(v132, v202, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v224);
    int64_t v134 = (_OWORD *)(v133 + *(int *)(v131 + 20));
    if (*((void *)v134 + 4) < 7uLL
      || (sub_25B1806D0(v66, v199, type metadata accessor for ReplicatorMessage),
          swift_getEnumCaseMultiPayload() > 1))
    {
      uint64_t v139 = v133;
    }
    else
    {
      sub_25B180A5C(v199, type metadata accessor for ReplicatorMessage);
      uint64_t v135 = (uint64_t)v68;
      uint64_t v136 = (uint64_t)v188;
      swift_storeEnumTagMultiPayload();
      uint64_t v137 = (uint64_t)v189;
      uint64_t v138 = v200;
      (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v189, v211, v200);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v137, 0, 1, v138);
      sub_25B141908(v136, v133, v137, v135);
      sub_25B116DE0(v137, &qword_26B33F200);
      sub_25B180A5C(v136, type metadata accessor for ReplicatorMessage);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v190 + 56))(v135, 0, 1, v177);
      sub_25B18095C(v135, v182, (uint64_t (*)(void))type metadata accessor for Message);
      uint64_t v66 = v206;
      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v140 = sub_25B290190();
      __swift_project_value_buffer(v140, (uint64_t)qword_26A4EB150);
      uint64_t v141 = v211;
      uint64_t v142 = v179;
      sub_25B1806D0(v211, v179, (uint64_t (*)(void))type metadata accessor for Message);
      uint64_t v143 = v141;
      uint64_t v144 = v181;
      sub_25B1806D0(v143, v181, (uint64_t (*)(void))type metadata accessor for Message);
      swift_retain();
      char v145 = sub_25B290160();
      os_log_type_t v146 = sub_25B2908A0();
      int v147 = v146;
      if (os_log_type_enabled(v145, v146))
      {
        uint64_t v148 = swift_slowAlloc();
        uint64_t v211 = swift_slowAlloc();
        *(void *)&long long v224 = v211;
        *(_DWORD *)uint64_t v148 = 136381187;
        LODWORD(v210) = v147;
        uint64_t v149 = *(void *)(v71 + 528);
        unint64_t v150 = *(void *)(v71 + 536);
        swift_bridgeObjectRetain();
        *(void *)&long long v213 = sub_25B288E98(v149, v150, (uint64_t *)&v224);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v148 + 12) = 2080;
        sub_25B1875E0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
        uint64_t v151 = sub_25B290DB0();
        *(void *)&long long v213 = sub_25B288E98(v151, v152, (uint64_t *)&v224);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B180A5C(v142, (uint64_t (*)(void))type metadata accessor for Message);
        *(_WORD *)(v148 + 22) = 2082;
        uint64_t v153 = *(int *)(v177 + 28);
        os_log_t v208 = v145;
        uint64_t v154 = v181;
        uint64_t v155 = (uint64_t *)(v181 + v153);
        uint64_t v156 = *v155;
        unint64_t v157 = v155[1];
        swift_bridgeObjectRetain();
        uint64_t v158 = v156;
        uint64_t v66 = v206;
        *(void *)&long long v213 = sub_25B288E98(v158, v157, (uint64_t *)&v224);
        sub_25B2909C0();
        uint64_t v71 = v209;
        swift_bridgeObjectRelease();
        sub_25B180A5C(v154, (uint64_t (*)(void))type metadata accessor for Message);
        char v145 = v208;
        _os_log_impl(&dword_25B107000, v208, (os_log_type_t)v210, "(%{private}s) Sending ack for ID %s to %{public}s)", (uint8_t *)v148, 0x20u);
        uint64_t v159 = v211;
        swift_arrayDestroy();
        MEMORY[0x261160890](v159, -1, -1);
        MEMORY[0x261160890](v148, -1, -1);
      }
      else
      {
        swift_release();
        sub_25B180A5C(v142, (uint64_t (*)(void))type metadata accessor for Message);
        sub_25B180A5C(v144, (uint64_t (*)(void))type metadata accessor for Message);
      }

      uint64_t v160 = *(void *)(v71 + 184);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v162 = sub_25B28FEA0();
      uint64_t v163 = (uint64_t)v180;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v162 - 8) + 56))(v180, 1, 1, v162);
      long long v164 = v134[8];
      long long v165 = v134[6];
      long long v231 = v134[7];
      long long v232 = v164;
      long long v166 = v134[8];
      long long v167 = v134[10];
      long long v233 = v134[9];
      long long v234 = v167;
      long long v168 = v134[4];
      long long v169 = v134[2];
      long long v227 = v134[3];
      long long v228 = v168;
      long long v170 = v134[4];
      long long v171 = v134[6];
      long long v229 = v134[5];
      long long v230 = v171;
      long long v172 = *v134;
      long long v173 = v134[2];
      long long v225 = v134[1];
      long long v226 = v173;
      long long v174 = *v134;
      long long v221 = v166;
      long long v222 = v233;
      long long v223 = v134[10];
      long long v224 = v174;
      long long v217 = v170;
      long long v218 = v229;
      long long v219 = v165;
      long long v220 = v231;
      long long v213 = v172;
      long long v214 = v225;
      long long v215 = v169;
      long long v216 = v227;
      char v212 = 0;
      uint64_t v175 = *(void (**)(uint64_t, uint64_t, long long *, char *, void, void, uint64_t, uint64_t))(v160 + 40);
      sub_25B1172F8((uint64_t)&v224);
      uint64_t v176 = v182;
      v175(v182, v163, &v213, &v212, 0, 0, ObjectType, v160);
      sub_25B11DEBC((uint64_t)&v224);
      sub_25B116DE0(v163, &qword_26A4D9160);
      sub_25B180A5C(v176, (uint64_t (*)(void))type metadata accessor for Message);
      uint64_t v139 = v202;
    }
    sub_25B180A5C(v139, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B180A5C(v66, type metadata accessor for ReplicatorMessage);
  }
}

uint64_t Replicator.syncService(_:didReceiveMessage:url:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25B17E4F8(a3, a4);
}

uint64_t sub_25B13BEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25B28FEA0();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a3, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  sub_25B13A59C(a2, (uint64_t)v7);
  return sub_25B116DE0((uint64_t)v7, &qword_26A4D9160);
}

uint64_t Replicator.syncService(_:shouldAcceptIncomingMessage:)()
{
  sub_25B290900();
  return v1;
}

uint64_t sub_25B13C038@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  if (*(void *)(a2 + 176) == result)
  {
    uint64_t v6 = (uint64_t *)(a3 + *(int *)(type metadata accessor for Message() + 24));
    uint64_t result = *v6;
    if (*v6 == 0x7065526574617453 && v6[1] == 0xEF726F746163696CLL)
    {
      char v5 = 1;
    }
    else
    {
      uint64_t result = sub_25B290FB0();
      char v5 = result & 1;
    }
  }
  else
  {
    char v5 = 0;
  }
  *a4 = v5;
  return result;
}

uint64_t sub_25B13C104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B17E004(a3);
}

uint64_t sub_25B13C10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25B17E4F8(a3, a4);
}

uint64_t sub_25B13C118()
{
  sub_25B290900();
  return v1;
}

uint64_t sub_25B13C188(uint64_t a1)
{
  uint64_t v3 = sub_25B290410();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void **)(v1 + 232);
  *uint64_t v6 = v8;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F0E0], v3);
  id v9 = v8;
  LOBYTE(v8) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v8)
  {
    if (*(unsigned char *)(v1 + 600) == 1)
    {
      if (v7 <= 7)
      {
        swift_beginAccess();
        uint64_t v12 = *(void *)(v1 + 648);
        swift_bridgeObjectRetain();
        char v11 = sub_25B2109B4(0xD000000000000011, 0x800000025B29C8A0, v12);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v11 = 0;
      }
    }
    else
    {
      char v11 = 1;
    }
    return v11 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B13C310(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v3 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = sub_25B290410();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (void *)v2[29];
  *id v9 = v10;
  char v11 = *(void (**)(void))(v7 + 104);
  unsigned int v24 = *MEMORY[0x263F8F0E0];
  uint64_t v23 = (void (*)(void *, void, uint64_t))v11;
  v11(v9);
  id v12 = v10;
  LOBYTE(v10) = sub_25B290440();
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t))(v7 + 8);
  uint64_t result = v22(v9, v6);
  if (v10)
  {
    sub_25B1806D0(v25, (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Request);
    unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v2;
    sub_25B18095C((uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for ReplicatorMessage.Handshake.Request);
    *(void *)(v15 + ((v5 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    *id v9 = v12;
    v23(v9, v24, v6);
    id v16 = v12;
    swift_retain();
    LOBYTE(v14) = sub_25B290440();
    uint64_t result = v22(v9, v6);
    if (v14)
    {
      uint64_t v17 = v2[63];
      uint64_t v18 = v2[64];
      __swift_project_boxed_opaque_existential_1(v2 + 60, v17);
      uint64_t v19 = (void *)swift_allocObject();
      v19[2] = v2;
      uint64_t v19[3] = sub_25B180AC0;
      v19[4] = v15;
      uint64_t v20 = *(void (**)(uint64_t (*)(uint64_t, unint64_t), void *, uint64_t, uint64_t))(v18 + 8);
      swift_retain();
      swift_retain();
      v20(sub_25B180B18, v19, v17, v18);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25B13C620(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PairingRelationship();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  uint64_t v7 = MEMORY[0x270FA5388](v78);
  *(void *)&long long v76 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v72 - v9;
  uint64_t v11 = sub_25B290410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (uint64_t *)((char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = (void *)v2[29];
  *unint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  id v16 = v15;
  LOBYTE(v15) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    if (qword_26A4D98C0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v17 = sub_25B290190();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_26A4EB150);
  sub_25B1806D0(a1, (uint64_t)v10, type metadata accessor for ReplicatorMessage.Handshake.Request);
  swift_retain();
  *((void *)&v76 + 1) = v18;
  uint64_t v19 = sub_25B290160();
  os_log_type_t v20 = sub_25B2908A0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v77 = a1;
  uint64_t v74 = v4;
  uint64_t v75 = v6;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    *(void *)&v93[0] = v73;
    *(_DWORD *)uint64_t v22 = 136446466;
    uint64_t v23 = v2[66];
    unint64_t v24 = v2[67];
    swift_bridgeObjectRetain();
    *(void *)&long long v83 = sub_25B288E98(v23, v24, (uint64_t *)v93);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    sub_25B1806D0((uint64_t)v10, v76, type metadata accessor for ReplicatorMessage.Handshake.Request);
    uint64_t v25 = v78;
    uint64_t v26 = sub_25B290600();
    *(void *)&long long v83 = sub_25B288E98(v26, v27, (uint64_t *)v93);
    sub_25B2909C0();
    a1 = v77;
    swift_bridgeObjectRelease();
    sub_25B180A5C((uint64_t)v10, type metadata accessor for ReplicatorMessage.Handshake.Request);
    _os_log_impl(&dword_25B107000, v19, v20, "(%{public}s) Received handshake request: %s", (uint8_t *)v22, 0x16u);
    uint64_t v28 = v73;
    swift_arrayDestroy();
    MEMORY[0x261160890](v28, -1, -1);
    MEMORY[0x261160890](v22, -1, -1);
  }
  else
  {
    swift_release();
    sub_25B180A5C((uint64_t)v10, type metadata accessor for ReplicatorMessage.Handshake.Request);

    uint64_t v25 = v78;
  }
  uint64_t v29 = a1 + *(int *)(v25 + 24);
  uint64_t v30 = *(void *)v29;
  uint64_t v31 = *(void *)(v29 + 8);
  if (v2[32])
  {
    unint64_t v32 = v2[32];
    if (v30 != v2[31]) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v33 = v2[23];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(ObjectType, v33);
    if (v36) {
      unint64_t v37 = v35;
    }
    else {
      unint64_t v37 = 0xD000000000000016;
    }
    if (v36) {
      unint64_t v32 = v36;
    }
    else {
      unint64_t v32 = 0x800000025B29C2A0;
    }
    if (v30 != v37) {
      goto LABEL_18;
    }
  }
  if (v32 == v31)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_18:
  char v38 = sub_25B290FB0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v38)
  {
    swift_retain();
    uint64_t v39 = sub_25B290160();
    os_log_type_t v40 = sub_25B2908A0();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(void *)&v93[0] = v42;
      *(_DWORD *)uint64_t v41 = 136446210;
      *((void *)&v76 + 1) = v41 + 4;
      uint64_t v43 = v2[66];
      unint64_t v44 = v2[67];
      swift_bridgeObjectRetain();
      *(void *)&long long v83 = sub_25B288E98(v43, v44, (uint64_t *)v93);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v39, v40, "(%{public}s) Sending new handshake request to lower-ordered device", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v42, -1, -1);
      MEMORY[0x261160890](v41, -1, -1);
    }
    else
    {

      swift_release();
    }
    long long v52 = *(_OWORD *)(v29 + 144);
    long long v53 = *(_OWORD *)(v29 + 112);
    long long v100 = *(_OWORD *)(v29 + 128);
    long long v101 = v52;
    long long v54 = *(_OWORD *)(v29 + 144);
    long long v102 = *(_OWORD *)(v29 + 160);
    long long v55 = *(_OWORD *)(v29 + 80);
    long long v56 = *(_OWORD *)(v29 + 48);
    long long v96 = *(_OWORD *)(v29 + 64);
    long long v97 = v55;
    long long v57 = *(_OWORD *)(v29 + 112);
    long long v58 = *(_OWORD *)(v29 + 80);
    long long v98 = *(_OWORD *)(v29 + 96);
    long long v99 = v57;
    long long v59 = *(_OWORD *)(v29 + 16);
    v93[0] = *(_OWORD *)v29;
    v93[1] = v59;
    long long v60 = *(_OWORD *)(v29 + 48);
    long long v94 = *(_OWORD *)(v29 + 32);
    long long v95 = v60;
    long long v86 = v96;
    long long v87 = v58;
    *(_OWORD *)long long v85 = v94;
    *(_OWORD *)&v85[16] = v56;
    long long v61 = *(_OWORD *)(v29 + 160);
    long long v91 = v54;
    long long v92 = v61;
    long long v89 = v53;
    long long v90 = v100;
    long long v88 = v98;
    uint64_t v62 = *((void *)&v93[0] + 1);
    uint64_t v73 = *(void *)&v93[0];
    long long v76 = v94;
    char v63 = v95;
    long long v64 = v102;
    long long v83 = v93[0];
    long long v84 = v59;
    uint64_t v65 = (uint64_t *)(v77 + *(int *)(v78 + 20));
    unint64_t v67 = v65[1];
    uint64_t v81 = *v65;
    uint64_t v66 = v81;
    unint64_t v82 = v67;
    sub_25B1172F8((uint64_t)v93);
    sub_25B120090(v66, v67);
    uint64_t v68 = (uint64_t)v75;
    sub_25B148078(&v83, (uint64_t)&v81, 0, 1, (uint64_t)v75);
    sub_25B1200A4(v66, v67);
    sub_25B11DEBC((uint64_t)v93);
    *(void *)&long long v83 = v73;
    *((void *)&v83 + 1) = v62;
    long long v84 = v64;
    v85[0] = v63;
    *(_OWORD *)&v85[8] = v76;
    uint64_t v69 = (uint64_t *)(v68 + *(int *)(v74 + 32));
    unint64_t v71 = v69[1];
    uint64_t v81 = *v69;
    uint64_t v70 = v81;
    unint64_t v82 = v71;
    uint64_t v79 = 0;
    char v80 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B120090(v70, v71);
    sub_25B145D20(&v83, &v81, &v79);
    sub_25B1200A4(v70, v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_25B180A5C(v68, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  }
LABEL_21:
  swift_retain();
  long long v45 = sub_25B290160();
  os_log_type_t v46 = sub_25B2908A0();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    *(void *)&v93[0] = v48;
    *(_DWORD *)uint64_t v47 = 136446210;
    uint64_t v49 = v2[66];
    unint64_t v50 = v2[67];
    swift_bridgeObjectRetain();
    *(void *)&long long v83 = sub_25B288E98(v49, v50, (uint64_t *)v93);
    sub_25B2909C0();
    swift_release();
    a1 = v77;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v45, v46, "(%{public}s) Sending handshake response to higher-ordered device", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v48, -1, -1);
    MEMORY[0x261160890](v47, -1, -1);
  }
  else
  {

    swift_release();
  }
  return sub_25B1530AC(a1);
}

uint64_t sub_25B13CED8(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v3 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = sub_25B290410();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (void *)v2[29];
  *uint64_t v9 = v10;
  uint64_t v11 = *(void (**)(void))(v7 + 104);
  unsigned int v24 = *MEMORY[0x263F8F0E0];
  uint64_t v23 = (void (*)(void *, void, uint64_t))v11;
  v11(v9);
  id v12 = v10;
  LOBYTE(v10) = sub_25B290440();
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t))(v7 + 8);
  uint64_t result = v22(v9, v6);
  if (v10)
  {
    sub_25B1806D0(v25, (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Response);
    unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v2;
    sub_25B18095C((uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for ReplicatorMessage.Handshake.Response);
    *(void *)(v15 + ((v5 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    *uint64_t v9 = v12;
    v23(v9, v24, v6);
    id v16 = v12;
    swift_retain();
    LOBYTE(v14) = sub_25B290440();
    uint64_t result = v22(v9, v6);
    if (v14)
    {
      uint64_t v17 = v2[63];
      uint64_t v18 = v2[64];
      __swift_project_boxed_opaque_existential_1(v2 + 60, v17);
      uint64_t v19 = (void *)swift_allocObject();
      v19[2] = v2;
      uint64_t v19[3] = sub_25B183EF4;
      v19[4] = v15;
      os_log_type_t v20 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v18 + 8);
      swift_retain();
      swift_retain();
      v20(sub_25B187C10, v19, v17, v18);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25B13D1E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_25B290410();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = (void *)v2[29];
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F8F0E0], v10);
  id v15 = v14;
  char v16 = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v16)
  {
    if (qword_26A4D98C0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v17 = sub_25B290190();
  __swift_project_value_buffer(v17, (uint64_t)qword_26A4EB150);
  sub_25B1806D0(a1, (uint64_t)v9, type metadata accessor for ReplicatorMessage.Handshake.Response);
  swift_retain();
  uint64_t v18 = sub_25B290160();
  os_log_type_t v19 = sub_25B2908A0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v30 = a1;
    uint64_t v22 = v21;
    uint64_t v32 = v21;
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v29 = v4;
    uint64_t v23 = v2[66];
    unint64_t v24 = v2[67];
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_25B288E98(v23, v24, &v32);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    sub_25B1806D0((uint64_t)v9, (uint64_t)v7, type metadata accessor for ReplicatorMessage.Handshake.Response);
    uint64_t v25 = sub_25B290600();
    uint64_t v31 = sub_25B288E98(v25, v26, &v32);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B180A5C((uint64_t)v9, type metadata accessor for ReplicatorMessage.Handshake.Response);
    _os_log_impl(&dword_25B107000, v18, v19, "(%{public}s) Received handshake response: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    uint64_t v27 = v22;
    a1 = v30;
    MEMORY[0x261160890](v27, -1, -1);
    MEMORY[0x261160890](v20, -1, -1);
  }
  else
  {
    swift_release();
    sub_25B180A5C((uint64_t)v9, type metadata accessor for ReplicatorMessage.Handshake.Response);
  }

  return sub_25B1533E0(a1);
}

void sub_25B13D5AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v187 = a1;
  uint64_t v3 = sub_25B290320();
  uint64_t v167 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v166 = (char *)&v154 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25B290360();
  uint64_t v165 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v164 = (char *)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v168 = (uint64_t)&v154 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v177 = (os_log_t)type metadata accessor for PairingRelationship();
  Class isa = v177[-1].isa;
  uint64_t v9 = MEMORY[0x270FA5388](v177);
  uint64_t v158 = (uint64_t)&v154 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v180 = (uint64_t)&v154 - v12;
  uint64_t v163 = v13;
  MEMORY[0x270FA5388](v11);
  uint64_t v169 = (uint64_t)&v154 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB280);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v184 = (char *)&v154 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = type metadata accessor for Replicator.Session(0);
  uint64_t v183 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v185 - 8);
  MEMORY[0x270FA5388](v185);
  uint64_t v18 = (char *)&v154 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
  uint64_t v161 = *(void *)(v182 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v182);
  uint64_t v160 = (char *)&v154 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v159 = (uint64_t)&v154 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v181 = (uint64_t)&v154 - v24;
  uint64_t v162 = v25;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v154 - v26;
  uint64_t v28 = sub_25B290410();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (uint64_t *)((char *)&v154 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = (void *)v1[29];
  *uint64_t v31 = v32;
  uint64_t v33 = *(void (**)(void))(v29 + 104);
  unsigned int v173 = *MEMORY[0x263F8F0E0];
  long long v174 = (uint64_t (*)(uint64_t))(v29 + 104);
  long long v172 = (void (*)(void *, void, uint64_t))v33;
  v33(v31);
  id v170 = v32;
  LOBYTE(v32) = sub_25B290440();
  uint64_t v34 = *(void (**)(void *, uint64_t))(v29 + 8);
  uint64_t v175 = (uint64_t *)(v29 + 8);
  uint64_t v176 = v28;
  long long v171 = v34;
  v34(v31, v28);
  if (v32)
  {
    uint64_t v156 = v5;
    if (qword_26A4D98C0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v35 = sub_25B290190();
  uint64_t v36 = __swift_project_value_buffer(v35, (uint64_t)qword_26A4EB150);
  sub_25B1806D0(v187, (uint64_t)v27, type metadata accessor for ReplicatorMessage.Handshake.Complete);
  swift_retain();
  uint64_t v186 = v36;
  unint64_t v37 = sub_25B290160();
  os_log_type_t v38 = sub_25B2908A0();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v157 = v3;
  if (v39)
  {
    uint64_t v40 = swift_slowAlloc();
    uint64_t v178 = v18;
    uint64_t v41 = v40;
    uint64_t v155 = swift_slowAlloc();
    *(void *)&long long v201 = v155;
    *(_DWORD *)uint64_t v41 = 136446466;
    uint64_t v42 = v2[66];
    unint64_t v43 = v2[67];
    swift_bridgeObjectRetain();
    *(void *)&long long v190 = sub_25B288E98(v42, v43, (uint64_t *)&v201);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2080;
    sub_25B1806D0((uint64_t)v27, v181, type metadata accessor for ReplicatorMessage.Handshake.Complete);
    uint64_t v44 = sub_25B290600();
    *(void *)&long long v190 = sub_25B288E98(v44, v45, (uint64_t *)&v201);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B180A5C((uint64_t)v27, type metadata accessor for ReplicatorMessage.Handshake.Complete);
    _os_log_impl(&dword_25B107000, v37, v38, "(%{public}s) Received handshake complete %s", (uint8_t *)v41, 0x16u);
    uint64_t v46 = v155;
    swift_arrayDestroy();
    MEMORY[0x261160890](v46, -1, -1);
    uint64_t v47 = v41;
    uint64_t v18 = v178;
    MEMORY[0x261160890](v47, -1, -1);
  }
  else
  {
    swift_release();
    sub_25B180A5C((uint64_t)v27, type metadata accessor for ReplicatorMessage.Handshake.Complete);
  }

  uint64_t v49 = v183;
  uint64_t v48 = (uint64_t)v184;
  swift_beginAccess();
  uint64_t v50 = v2[71];
  uint64_t v51 = v185;
  if (!*(void *)(v50 + 16))
  {
    v49[7](v48, 1, 1, v185);
LABEL_12:
    sub_25B116DE0(v48, &qword_26A4DB280);
    swift_retain();
    long long v55 = sub_25B290160();
    os_log_type_t v56 = sub_25B290880();
    if (os_log_type_enabled(v55, v56))
    {
      long long v57 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      *(void *)&long long v201 = v58;
      *(_DWORD *)long long v57 = 136446210;
      long long v59 = v2;
      uint64_t v60 = v2[66];
      unint64_t v61 = v59[67];
      swift_bridgeObjectRetain();
      *(void *)&long long v190 = sub_25B288E98(v60, v61, (uint64_t *)&v201);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v55, v56, "(%{public}s) No session established", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v58, -1, -1);
      MEMORY[0x261160890](v57, -1, -1);

      return;
    }

    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  unint64_t v52 = sub_25B18A93C(v187);
  if (v53)
  {
    sub_25B1806D0(*(void *)(v50 + 56) + (void)v49[9] * v52, v48, type metadata accessor for Replicator.Session);
    uint64_t v54 = 0;
  }
  else
  {
    uint64_t v54 = 1;
  }
  v49[7](v48, v54, 1, v51);
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v49[6])(v48, 1, v51) == 1) {
    goto LABEL_12;
  }
  sub_25B18095C(v48, (uint64_t)v18, type metadata accessor for Replicator.Session);
  uint64_t v62 = v170;
  *uint64_t v31 = v170;
  uint64_t v63 = v176;
  v172(v31, v173, v176);
  long long v64 = v62;
  LOBYTE(v62) = sub_25B290440();
  v171(v31, v63);
  if (v62)
  {
    swift_beginAccess();
    sub_25B10FF48((uint64_t)(v2 + 24), (uint64_t)&v201);
    uint64_t v65 = *((void *)&v202 + 1);
    uint64_t v66 = v203;
    __swift_project_boxed_opaque_existential_1(&v201, *((uint64_t *)&v202 + 1));
    uint64_t v67 = *(void *)(v66 + 8);
    uint64_t v68 = v168;
    MetadataStoring.pairingRelationship(remoteDeviceID:)(*(void *)&v18[*(int *)(v51 + 20)], *(void *)&v18[*(int *)(v51 + 20) + 8], v65, v67, v168);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v201);
    os_log_t v69 = v177;
    if ((*((unsigned int (**)(uint64_t, uint64_t, os_log_t))isa + 6))(v68, 1, v177) != 1)
    {
      uint64_t v183 = v64;
      uint64_t v178 = v18;
      uint64_t v77 = v169;
      sub_25B18095C(v68, v169, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v78 = (long long *)(v77 + SHIDWORD(v69[2].isa));
      long long v79 = v78[9];
      long long v80 = v78[7];
      long long v209 = v78[8];
      long long v210 = v79;
      long long v81 = v78[9];
      long long v211 = v78[10];
      long long v82 = v78[5];
      long long v83 = v78[3];
      long long v205 = v78[4];
      long long v206 = v82;
      long long v84 = v78[7];
      long long v85 = v78[5];
      long long v207 = v78[6];
      long long v208 = v84;
      long long v86 = v78[3];
      long long v87 = v78[1];
      long long v203 = v78[2];
      long long v204 = v86;
      long long v88 = v78[1];
      long long v201 = *v78;
      long long v202 = v88;
      long long v194 = v205;
      long long v195 = v85;
      long long v192 = v203;
      long long v193 = v83;
      uint64_t v175 = (uint64_t *)v78;
      long long v89 = v78[10];
      long long v199 = v81;
      long long v200 = v89;
      long long v197 = v80;
      long long v198 = v209;
      long long v196 = v207;
      long long v190 = v201;
      long long v191 = v87;
      uint64_t v90 = v182;
      uint64_t v91 = v187;
      long long v92 = (void *)(v187 + *(int *)(v182 + 20));
      unint64_t v94 = v92[1];
      v189[0] = *v92;
      uint64_t v93 = v189[0];
      v189[1] = v94;
      sub_25B1172F8((uint64_t)&v201);
      sub_25B120090(v93, v94);
      uint64_t v95 = v180;
      sub_25B148078(&v190, (uint64_t)v189, 0, 1, v180);
      sub_25B1200A4(v93, v94);
      sub_25B11DEBC((uint64_t)&v201);
      sub_25B180A5C(v95, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v176 = *(int *)(v90 + 24);
      uint64_t v96 = sub_25B17E214(*(void *)(v91 + v176), v77);
      sub_25B10FF48((uint64_t)(v2 + 24), (uint64_t)&v190);
      uint64_t v185 = (uint64_t)v2;
      uint64_t v97 = *((void *)&v191 + 1);
      uint64_t v98 = v192;
      __swift_project_boxed_opaque_existential_1(&v190, *((uint64_t *)&v191 + 1));
      uint64_t v99 = *(void *)(v91 + *(int *)(v90 + 28));
      swift_beginAccess();
      uint64_t v100 = swift_bridgeObjectRetain();
      long long v101 = sub_25B2259F0(v100);
      swift_bridgeObjectRelease();
      uint64_t v102 = *(void *)(v98 + 8);
      uint64_t v103 = v185;
      uint64_t v184 = (char *)MetadataStoring.mismatchedRecordIDs(for:remoteRecordVersions:zoneIDs:disabledClientIDs:)(v77, v99, v96, v101, v97, v102);
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v190);
      uint64_t v104 = v158;
      sub_25B1806D0(v77, v158, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      swift_retain();
      long long v105 = sub_25B290160();
      os_log_type_t v106 = sub_25B2908A0();
      if (os_log_type_enabled(v105, v106))
      {
        uint64_t v107 = swift_slowAlloc();
        uint64_t v108 = swift_slowAlloc();
        *(void *)&long long v190 = v108;
        *(_DWORD *)uint64_t v107 = 136446466;
        uint64_t v109 = *(void *)(v103 + 528);
        unint64_t v110 = *(void *)(v185 + 536);
        swift_bridgeObjectRetain();
        uint64_t v188 = sub_25B288E98(v109, v110, (uint64_t *)&v190);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v107 + 12) = 2082;
        sub_25B1806D0(v104, v180, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v111 = sub_25B290600();
        uint64_t v188 = sub_25B288E98(v111, v112, (uint64_t *)&v190);
        sub_25B2909C0();
        uint64_t v103 = v185;
        swift_bridgeObjectRelease();
        sub_25B180A5C(v104, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        _os_log_impl(&dword_25B107000, v105, v106, "(%{public}s) [Handle Complete] Found pairing relationship: %{public}s", (uint8_t *)v107, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261160890](v108, -1, -1);
        MEMORY[0x261160890](v107, -1, -1);
      }
      else
      {
        swift_release();
        sub_25B180A5C(v104, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      }

      uint64_t v113 = v159;
      uint64_t v114 = (uint64_t)v160;
      uint64_t v115 = v180;
      if (*(void *)(*(void *)(v187 + v176) + 16))
      {
        uint64_t v116 = v187;
        sub_25B1806D0(v187, v159, type metadata accessor for ReplicatorMessage.Handshake.Complete);
        sub_25B1806D0(v116, v114, type metadata accessor for ReplicatorMessage.Handshake.Complete);
        swift_retain();
        long long v117 = sub_25B290160();
        os_log_type_t v118 = sub_25B2908A0();
        os_log_t v177 = v117;
        if (os_log_type_enabled(v117, v118))
        {
          uint64_t v119 = swift_slowAlloc();
          uint64_t v176 = swift_slowAlloc();
          *(void *)&long long v190 = v176;
          *(_DWORD *)uint64_t v119 = 136446722;
          uint64_t v120 = *(void *)(v103 + 528);
          unint64_t v121 = *(void *)(v185 + 536);
          swift_bridgeObjectRetain();
          uint64_t v188 = sub_25B288E98(v120, v121, (uint64_t *)&v190);
          sub_25B2909C0();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v119 + 12) = 2050;
          uint64_t v122 = v113;
          uint64_t v123 = *(void *)(*(void *)(v113 + *(int *)(v182 + 24)) + 16);
          long long v174 = type metadata accessor for ReplicatorMessage.Handshake.Complete;
          sub_25B180A5C(v122, type metadata accessor for ReplicatorMessage.Handshake.Complete);
          uint64_t v188 = v123;
          sub_25B2909C0();
          *(_WORD *)(v119 + 22) = 2082;
          uint64_t v124 = swift_bridgeObjectRetain();
          uint64_t v125 = MEMORY[0x26115F080](v124, MEMORY[0x263F8D310]);
          unint64_t v127 = v126;
          swift_bridgeObjectRelease();
          uint64_t v188 = sub_25B288E98(v125, v127, (uint64_t *)&v190);
          uint64_t v103 = v185;
          sub_25B2909C0();
          uint64_t v115 = v180;
          swift_bridgeObjectRelease();
          sub_25B180A5C(v114, v174);
          os_log_t v128 = v177;
          _os_log_impl(&dword_25B107000, v177, v118, "(%{public}s) [Handle Complete] Found mismatched zones (%{public}ld): %{public}s", (uint8_t *)v119, 0x20u);
          uint64_t v129 = v176;
          swift_arrayDestroy();
          MEMORY[0x261160890](v129, -1, -1);
          MEMORY[0x261160890](v119, -1, -1);
        }
        else
        {
          sub_25B180A5C(v113, type metadata accessor for ReplicatorMessage.Handshake.Complete);
          swift_release();
          sub_25B180A5C(v114, type metadata accessor for ReplicatorMessage.Handshake.Complete);
        }
      }
      uint64_t v130 = (uint64_t)v184;
      if (*((void *)v184 + 2))
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        uint64_t v131 = sub_25B290160();
        os_log_type_t v132 = sub_25B2908A0();
        if (os_log_type_enabled(v131, v132))
        {
          uint64_t v133 = swift_slowAlloc();
          uint64_t v134 = swift_slowAlloc();
          *(void *)&long long v190 = v134;
          *(_DWORD *)uint64_t v133 = 136446722;
          uint64_t v135 = *(void *)(v103 + 528);
          unint64_t v136 = *(void *)(v185 + 536);
          swift_bridgeObjectRetain();
          uint64_t v188 = sub_25B288E98(v135, v136, (uint64_t *)&v190);
          sub_25B2909C0();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v133 + 12) = 2050;
          uint64_t v188 = *(void *)(v130 + 16);
          sub_25B2909C0();
          *(_WORD *)(v133 + 22) = 2082;
          uint64_t v137 = type metadata accessor for Record.ID(0);
          uint64_t v138 = swift_bridgeObjectRetain();
          uint64_t v139 = MEMORY[0x26115F080](v138, v137);
          unint64_t v141 = v140;
          swift_bridgeObjectRelease();
          uint64_t v142 = v139;
          uint64_t v103 = v185;
          uint64_t v188 = sub_25B288E98(v142, v141, (uint64_t *)&v190);
          sub_25B2909C0();
          swift_bridgeObjectRelease_n();
          uint64_t v130 = (uint64_t)v184;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25B107000, v131, v132, "(%{public}s) [Handle Complete] Found mismatched records (%{public}ld): %{public}s", (uint8_t *)v133, 0x20u);
          swift_arrayDestroy();
          uint64_t v143 = v134;
          uint64_t v115 = v180;
          MEMORY[0x261160890](v143, -1, -1);
          MEMORY[0x261160890](v133, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_release();
        }
      }
      uint64_t v144 = v187;
      sub_25B153898(v130, v187);
      swift_bridgeObjectRelease();
      sub_25B15768C(*v175, v175[1]);
      sub_25B122E6C();
      uint64_t v145 = v181;
      sub_25B1806D0(v144, v181, type metadata accessor for ReplicatorMessage.Handshake.Complete);
      uint64_t v146 = v169;
      sub_25B1806D0(v169, v115, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      unint64_t v147 = (*(unsigned __int8 *)(v161 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80);
      unint64_t v148 = (v162 + *((unsigned __int8 *)isa + 80) + v147) & ~(unint64_t)*((unsigned __int8 *)isa + 80);
      uint64_t v149 = swift_allocObject();
      *(void *)(v149 + 16) = v103;
      sub_25B18095C(v145, v149 + v147, type metadata accessor for ReplicatorMessage.Handshake.Complete);
      sub_25B18095C(v115, v149 + v148, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      *(void *)&long long v192 = sub_25B185A30;
      *((void *)&v192 + 1) = v149;
      *(void *)&long long v190 = MEMORY[0x263EF8330];
      *((void *)&v190 + 1) = 1107296256;
      *(void *)&long long v191 = sub_25B10F584;
      *((void *)&v191 + 1) = &block_descriptor_1535;
      unint64_t v150 = _Block_copy(&v190);
      swift_retain();
      uint64_t v151 = v164;
      sub_25B290340();
      uint64_t v188 = MEMORY[0x263F8EE78];
      sub_25B1875E0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
      sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
      unint64_t v152 = v166;
      uint64_t v153 = v157;
      sub_25B290A00();
      MEMORY[0x26115F250](0, v151, v152, v150);
      _Block_release(v150);
      (*(void (**)(char *, uint64_t))(v167 + 8))(v152, v153);
      (*(void (**)(char *, uint64_t))(v165 + 8))(v151, v156);
      sub_25B180A5C(v146, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      sub_25B180A5C((uint64_t)v178, type metadata accessor for Replicator.Session);
LABEL_32:
      swift_release();
      return;
    }
    sub_25B116DE0(v68, &qword_26A4D9610);
    swift_retain_n();
    uint64_t v70 = sub_25B290160();
    os_log_type_t v71 = sub_25B290880();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      *(void *)&long long v201 = v73;
      *(_DWORD *)uint64_t v72 = 136446210;
      uint64_t v178 = v18;
      uint64_t v74 = v2;
      uint64_t v75 = v2[66];
      unint64_t v76 = v74[67];
      swift_bridgeObjectRetain();
      *(void *)&long long v190 = sub_25B288E98(v75, v76, (uint64_t *)&v201);
      sub_25B2909C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v70, v71, "(%{public}s) No pairing relationship established", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v73, -1, -1);
      MEMORY[0x261160890](v72, -1, -1);

      sub_25B180A5C((uint64_t)v178, type metadata accessor for Replicator.Session);
    }
    else
    {
      swift_release_n();

      sub_25B180A5C((uint64_t)v18, type metadata accessor for Replicator.Session);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_25B13EC64(uint64_t a1, uint64_t a2)
{
  void (*v160)(uint64_t *__return_ptr, void **, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  NSObject *v163;
  os_log_type_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  const char *v168;
  uint64_t *v169;
  unint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  NSObject *v174;
  os_log_type_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  unint64_t v182;
  const char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t *v187;
  int *v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  void *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  void (*v223)(void **, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  unint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  id v233;
  void *v234;
  unsigned int v235;
  id v236;
  id v237;
  void *v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  id v275;
  void (*v276)(void *, uint64_t);
  void (*v277)(void *, void, uint64_t);
  unsigned int v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t *v283;
  uint64_t (*v284)(void);
  uint64_t v285;
  unint64_t v286;
  uint64_t v287;
  uint64_t v288;
  void *v289;
  uint64_t v290;
  unint64_t v291;
  uint64_t v292[8];
  void *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;

  uint64_t v3 = v2;
  v264 = a2;
  uint64_t v289 = (void *)a1;
  v297 = *MEMORY[0x263EF8340];
  unint64_t v262 = sub_25B28FEA0();
  v261 = *(void *)(v262 - 8);
  MEMORY[0x270FA5388](v262);
  v260 = (char *)&v243 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v253 = type metadata accessor for Record.Value(0);
  MEMORY[0x270FA5388](v253);
  uint64_t v254 = (char *)&v243 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v259 = (uint64_t)&v243 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v252 = (uint64_t)&v243 - v9;
  v251 = type metadata accessor for Record(0);
  MEMORY[0x270FA5388](v251);
  uint64_t v11 = (char *)&v243 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v248 = (uint64_t)&v243 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v255 = type metadata accessor for RecordMetadata();
  uint64_t v250 = *(void *)(v255 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v255);
  v249 = (char *)&v243 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  unint64_t v256 = (uint64_t)&v243 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v243 - v18;
  uint64_t v20 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v265 = (uint64_t)&v243 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v270 = sub_25B290080();
  uint64_t v269 = *(void *)(v270 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v270);
  uint64_t v247 = (char *)&v243 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v263 = (uint64_t)&v243 - v24;
  unint64_t v267 = type metadata accessor for Record.ID(0);
  v257 = *(void *)(v267 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v267);
  uint64_t v246 = (uint64_t)&v243 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v258 = (uint64_t)&v243 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v266 = (char *)&v243 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v272 = (uint64_t *)((char *)&v243 - v31);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v32 - 8);
  v274 = (uint64_t)&v243 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v282 = type metadata accessor for PairingRelationship();
  v273 = *(void *)(v282 - 8);
  MEMORY[0x270FA5388](v282);
  uint64_t v35 = (char *)&v243 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB280);
  MEMORY[0x270FA5388](v36 - 8);
  v287 = (uint64_t)&v243 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v288 = type metadata accessor for Replicator.Session(0);
  v286 = *(void *)(v288 - 8);
  MEMORY[0x270FA5388](v288);
  BOOL v39 = (char *)&v243 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v284 = (uint64_t (*)(void))type metadata accessor for ReplicatorMessage.Sync(0);
  uint64_t v40 = MEMORY[0x270FA5388](v284);
  uint64_t v283 = (uint64_t *)((char *)&v243 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v40);
  unint64_t v43 = (char *)&v243 - v42;
  uint64_t v44 = sub_25B290410();
  uint64_t v45 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v47 = (uint64_t *)((char *)&v243 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = (void *)v2[29];
  void *v47 = v48;
  uint64_t v49 = *(void (**)(void))(v45 + 104);
  uint64_t v278 = *MEMORY[0x263F8F0E0];
  v279 = v45 + 104;
  uint64_t v277 = (void (*)(void *, void, uint64_t))v49;
  v49(v47);
  v275 = v48;
  LOBYTE(v48) = sub_25B290440();
  uint64_t v50 = *(void (**)(void *, uint64_t))(v45 + 8);
  v281 = v44;
  long long v280 = v45 + 8;
  v276 = v50;
  v50(v47, v44);
  if (v48)
  {
    uint64_t v245 = v11;
    if (qword_26A4D98C0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v51 = sub_25B290190();
  uint64_t v52 = __swift_project_value_buffer(v51, (uint64_t)qword_26A4EB150);
  sub_25B1806D0((uint64_t)v289, (uint64_t)v43, type metadata accessor for ReplicatorMessage.Sync);
  swift_retain();
  uint64_t v285 = v52;
  char v53 = sub_25B290160();
  os_log_type_t v54 = sub_25B2908A0();
  BOOL v55 = os_log_type_enabled(v53, v54);
  char v268 = v19;
  uint64_t v56 = (uint64_t)v39;
  if (v55)
  {
    uint64_t v57 = swift_slowAlloc();
    v271 = v39;
    uint64_t v58 = v57;
    uint64_t v244 = swift_slowAlloc();
    uint64_t v293 = (void *)v244;
    *(_DWORD *)uint64_t v58 = 136446466;
    uint64_t v59 = v3[66];
    unint64_t v60 = v3[67];
    swift_bridgeObjectRetain();
    v296 = sub_25B288E98(v59, v60, (uint64_t *)&v293);
    sub_25B2909C0();
    swift_release();
    uint64_t v61 = (uint64_t)v35;
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2082;
    sub_25B1806D0((uint64_t)v43, (uint64_t)v283, type metadata accessor for ReplicatorMessage.Sync);
    uint64_t v62 = sub_25B290600();
    v296 = sub_25B288E98(v62, v63, (uint64_t *)&v293);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B180A5C((uint64_t)v43, type metadata accessor for ReplicatorMessage.Sync);
    _os_log_impl(&dword_25B107000, v53, v54, "(%{public}s) Received sync message: %{public}s", (uint8_t *)v58, 0x16u);
    uint64_t v64 = v244;
    swift_arrayDestroy();
    MEMORY[0x261160890](v64, -1, -1);
    uint64_t v65 = v58;
    uint64_t v56 = (uint64_t)v271;
    MEMORY[0x261160890](v65, -1, -1);

    uint64_t v66 = v288;
  }
  else
  {
    swift_release();
    sub_25B180A5C((uint64_t)v43, type metadata accessor for ReplicatorMessage.Sync);

    uint64_t v66 = v288;
    uint64_t v61 = (uint64_t)v35;
  }
  swift_beginAccess();
  uint64_t v67 = v3[71];
  uint64_t v68 = v287;
  unint64_t v69 = v286;
  if (*(void *)(v67 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v70 = sub_25B18A93C((uint64_t)v289);
    if (v71)
    {
      sub_25B1806D0(*(void *)(v67 + 56) + *(void *)(v69 + 72) * v70, v68, type metadata accessor for Replicator.Session);
      uint64_t v72 = 0;
    }
    else
    {
      uint64_t v72 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v68, v72, 1, v66);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v68, 1, v66) == 1) {
      goto LABEL_12;
    }
    sub_25B18095C(v68, v56, type metadata accessor for Replicator.Session);
    long long v79 = v275;
    void *v47 = v275;
    uint64_t v80 = v281;
    v277(v47, v278, v281);
    id v81 = v79;
    LOBYTE(v79) = sub_25B290440();
    v276(v47, v80);
    if ((v79 & 1) == 0) {
      __break(1u);
    }
    uint64_t v82 = (uint64_t)(v3 + 24);
    swift_beginAccess();
    sub_25B10FF48((uint64_t)(v3 + 24), (uint64_t)&v293);
    uint64_t v83 = v294;
    uint64_t v84 = v295;
    __swift_project_boxed_opaque_existential_1(&v293, v294);
    uint64_t v85 = *(void *)(v84 + 8);
    uint64_t v86 = v274;
    MetadataStoring.pairingRelationship(remoteDeviceID:)(*(void *)(v56 + *(int *)(v66 + 20)), *(void *)(v56 + *(int *)(v66 + 20) + 8), v83, v85, v274);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v293);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(v86, 1, v282) == 1)
    {
      sub_25B116DE0(v86, &qword_26A4D9610);
      swift_retain_n();
      long long v87 = sub_25B290160();
      os_log_type_t v88 = sub_25B290880();
      if (os_log_type_enabled(v87, v88))
      {
        long long v89 = (uint8_t *)swift_slowAlloc();
        uint64_t v90 = swift_slowAlloc();
        uint64_t v293 = (void *)v90;
        *(_DWORD *)long long v89 = 136446210;
        uint64_t v91 = v3[66];
        unint64_t v92 = v3[67];
        swift_bridgeObjectRetain();
        v292[4] = sub_25B288E98(v91, v92, (uint64_t *)&v293);
        sub_25B2909C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25B107000, v87, v88, "(%{public}s) No pairing relationship established", v89, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261160890](v90, -1, -1);
        MEMORY[0x261160890](v89, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      goto LABEL_33;
    }
    sub_25B18095C(v86, v61, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v93 = (uint64_t)v3;
    unint64_t v94 = (void *)((char *)v289 + *((int *)v284 + 5));
    uint64_t v96 = v94[2];
    uint64_t v95 = v94[3];
    uint64_t v98 = v94[4];
    uint64_t v97 = v94[5];
    swift_beginAccess();
    uint64_t v289 = (void *)v93;
    uint64_t v99 = *(void *)(v93 + 240);
    if (*(void *)(v99 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v100 = sub_25B18A768(v96, v95, v98, v97);
      if (v101)
      {
        v287 = v82;
        v288 = *(void *)(*(void *)(v99 + 56) + 8 * v100);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v102 = v289;
        swift_beginAccess();
        uint64_t v103 = v102[81];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v104 = sub_25B2109B4(v98, v97, v103);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v104)
        {
          swift_retain_n();
          long long v105 = sub_25B290160();
          os_log_type_t v106 = sub_25B290880();
          if (os_log_type_enabled(v105, v106))
          {
            uint64_t v107 = (uint8_t *)swift_slowAlloc();
            uint64_t v108 = swift_slowAlloc();
            uint64_t v293 = (void *)v108;
            *(_DWORD *)uint64_t v107 = 136446210;
            uint64_t v243 = v61;
            uint64_t v109 = v102[66];
            unint64_t v110 = v102[67];
            swift_bridgeObjectRetain();
            uint64_t v290 = sub_25B288E98(v109, v110, (uint64_t *)&v293);
            sub_25B2909C0();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_25B107000, v105, v106, "(%{public}s) Client is disabled", v107, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x261160890](v108, -1, -1);
            MEMORY[0x261160890](v107, -1, -1);

            swift_release();
LABEL_29:
            uint64_t v118 = v243;
LABEL_32:
            sub_25B180A5C(v118, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
LABEL_33:
            uint64_t v119 = type metadata accessor for Replicator.Session;
LABEL_34:
            uint64_t v120 = v119;
            uint64_t v121 = v56;
LABEL_35:
            sub_25B180A5C(v121, v120);
            return;
          }
          swift_release_n();

          swift_release();
          goto LABEL_31;
        }
        v271 = (char *)v56;
        uint64_t v122 = v94[1];
        v286 = *v94;
        uint64_t v123 = *(int *)(v267 + 24);
        uint64_t v243 = v61;
        uint64_t v124 = v272;
        uint64_t v125 = (char *)v272 + v123;
        uint64_t v126 = v269;
        unint64_t v127 = *(uint64_t **)(v269 + 16);
        uint64_t v128 = v270;
        v284 = (uint64_t (*)(void))(v269 + 16);
        uint64_t v283 = v127;
        ((void (*)(char *, uint64_t, uint64_t))v127)((char *)v272 + v123, v243, v270);
        uint64_t v129 = v126;
        uint64_t v130 = v286;
        uint64_t v131 = v125;
        uint64_t v132 = v243;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v131, 0, 1, v128);
        *uint64_t v124 = v130;
        v124[1] = v122;
        v124[2] = v96;
        v124[3] = v95;
        v124[4] = v98;
        v124[5] = v97;
        uint64_t v133 = v132 + *(int *)(v282 + 20);
        if (*(void *)(v133 + 32) > 0xDuLL)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v135 = (uint64_t)v266;
        }
        else
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v134 = v263;
          sub_25B214CF0(v130, v122, v263);
          uint64_t v135 = (uint64_t)v266;
          swift_bridgeObjectRelease();
          uint64_t v136 = sub_25B290020();
          uint64_t v138 = v137;
          (*(void (**)(uint64_t, uint64_t))(v269 + 8))(v134, v270);
          uint64_t v139 = v272;
          swift_bridgeObjectRelease();
          uint64_t *v139 = v136;
          v139[1] = v138;
        }
        uint64_t v140 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
        uint64_t v141 = v265;
        sub_25B1806D0((uint64_t)v94 + *(int *)(v140 + 20), v265, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
        uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA710);
        int v143 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v142 - 8) + 48))(v141, 1, v142);
        uint64_t v144 = (uint64_t)v268;
        if (v143 == 1)
        {
          sub_25B10FF48(v287, (uint64_t)&v293);
          uint64_t v145 = v294;
          uint64_t v146 = v295;
          __swift_project_boxed_opaque_existential_1(&v293, v294);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D58);
          unint64_t v147 = (*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80);
          uint64_t v148 = swift_allocObject();
          *(_OWORD *)(v148 + 16) = xmmword_25B292C10;
          uint64_t v149 = (uint64_t)v272;
          sub_25B1806D0((uint64_t)v272, v148 + v147, type metadata accessor for Record.ID);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v146 + 16) + 112))(v148, v145);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v293);
          sub_25B1806D0(v149, v135, type metadata accessor for Record.ID);
          uint64_t v150 = (uint64_t)v289;
          uint64_t v293 = v289;
          uint64_t v151 = v288;
          uint64_t v152 = v288 + 16;
          if (MEMORY[0x261160990](v288 + 16))
          {
            uint64_t v153 = *(void *)(v151 + 24);
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v155 = *(void (**)(void **, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v153 + 40);
            uint64_t v156 = type metadata accessor for Replicator();
            v155(&v293, v135, v156, &protocol witness table for Replicator, ObjectType, v153);
            uint64_t v151 = v288;
            swift_unknownObjectRelease();
          }
          sub_25B180A5C(v135, type metadata accessor for Record.ID);
          uint64_t v157 = v258;
          sub_25B1806D0((uint64_t)v272, v258, type metadata accessor for Record.ID);
          uint64_t v293 = (void *)v150;
          if (MEMORY[0x261160990](v152))
          {
            uint64_t v158 = *(void *)(v151 + 24);
            uint64_t v159 = swift_getObjectType();
            uint64_t v160 = *(void (**)(uint64_t *__return_ptr, void **, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v158 + 48);
            uint64_t v161 = type metadata accessor for Replicator();
            v160(&v290, &v293, v157, v132, v161, &protocol witness table for Replicator, v159, v158);
            swift_unknownObjectRelease();
            uint64_t v162 = v290;
            sub_25B180A5C(v157, type metadata accessor for Record.ID);
            switch(v162)
            {
              case 1:
                uint64_t v163 = sub_25B290160();
                long long v164 = sub_25B290890();
                if (!os_log_type_enabled(v163, v164)) {
                  goto LABEL_68;
                }
                uint64_t v165 = swift_slowAlloc();
                v287 = swift_slowAlloc();
                v292[0] = v287;
                *(_DWORD *)uint64_t v165 = 136446466;
                swift_beginAccess();
                uint64_t v290 = 0;
                unint64_t v291 = 0xE000000000000000;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_25B290AA0();
                swift_bridgeObjectRelease();
                uint64_t v290 = 540697705;
                unint64_t v291 = 0xE400000000000000;
                swift_bridgeObjectRetain();
                sub_25B290650();
                swift_bridgeObjectRelease();
                sub_25B290650();
                swift_bridgeObjectRetain();
                sub_25B290650();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                uint64_t v290 = sub_25B288E98(v290, v291, v292);
                sub_25B2909C0();
                swift_bridgeObjectRelease();
                *(_WORD *)(v165 + 12) = 2082;
                long long v166 = Record.ID.description.getter();
                uint64_t v290 = sub_25B288E98(v166, v167, v292);
                uint64_t v132 = v243;
                sub_25B2909C0();
                swift_bridgeObjectRelease();
                uint64_t v168 = "Data source for zone %{public}s failed to delete value for record ID %{public}s";
                break;
              case 2:
                uint64_t v163 = sub_25B290160();
                long long v164 = sub_25B290880();
                if (!os_log_type_enabled(v163, v164)) {
                  goto LABEL_68;
                }
                uint64_t v165 = swift_slowAlloc();
                v287 = swift_slowAlloc();
                v292[0] = v287;
                *(_DWORD *)uint64_t v165 = 136446466;
                swift_beginAccess();
                uint64_t v290 = 0;
                unint64_t v291 = 0xE000000000000000;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_25B290AA0();
                swift_bridgeObjectRelease();
                uint64_t v290 = 540697705;
                unint64_t v291 = 0xE400000000000000;
                swift_bridgeObjectRetain();
                sub_25B290650();
                swift_bridgeObjectRelease();
                sub_25B290650();
                swift_bridgeObjectRetain();
                sub_25B290650();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                uint64_t v290 = sub_25B288E98(v290, v291, v292);
                sub_25B2909C0();
                swift_bridgeObjectRelease();
                *(_WORD *)(v165 + 12) = 2082;
                long long v226 = Record.ID.description.getter();
                uint64_t v290 = sub_25B288E98(v226, v227, v292);
                uint64_t v132 = v243;
                sub_25B2909C0();
                swift_bridgeObjectRelease();
                uint64_t v168 = "Data source for zone %{public}s cannot parse record ID for deletion: %{public}s";
                break;
              case 3:
                uint64_t v163 = sub_25B290160();
                long long v164 = sub_25B2908A0();
                if (!os_log_type_enabled(v163, v164)) {
                  goto LABEL_68;
                }
                uint64_t v165 = swift_slowAlloc();
                v287 = swift_slowAlloc();
                v292[0] = v287;
                *(_DWORD *)uint64_t v165 = 136446466;
                swift_beginAccess();
                uint64_t v290 = 0;
                unint64_t v291 = 0xE000000000000000;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_25B290AA0();
                swift_bridgeObjectRelease();
                uint64_t v290 = 540697705;
                unint64_t v291 = 0xE400000000000000;
                swift_bridgeObjectRetain();
                sub_25B290650();
                swift_bridgeObjectRelease();
                sub_25B290650();
                swift_bridgeObjectRetain();
                sub_25B290650();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                uint64_t v290 = sub_25B288E98(v290, v291, v292);
                sub_25B2909C0();
                swift_bridgeObjectRelease();
                *(_WORD *)(v165 + 12) = 2082;
                long long v228 = Record.ID.description.getter();
                uint64_t v290 = sub_25B288E98(v228, v229, v292);
                uint64_t v132 = v243;
                sub_25B2909C0();
                swift_bridgeObjectRelease();
                uint64_t v168 = "Data source for zone %{public}s deleted value for record ID %{public}s";
                break;
              default:
                goto LABEL_54;
            }
          }
          else
          {
            sub_25B180A5C(v157, type metadata accessor for Record.ID);
LABEL_54:
            uint64_t v163 = sub_25B290160();
            long long v164 = sub_25B290890();
            if (!os_log_type_enabled(v163, v164)) {
              goto LABEL_68;
            }
            uint64_t v165 = swift_slowAlloc();
            v287 = swift_slowAlloc();
            v292[0] = v287;
            *(_DWORD *)uint64_t v165 = 136446466;
            swift_beginAccess();
            uint64_t v290 = 0;
            unint64_t v291 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_25B290AA0();
            swift_bridgeObjectRelease();
            uint64_t v290 = 540697705;
            unint64_t v291 = 0xE400000000000000;
            swift_bridgeObjectRetain();
            sub_25B290650();
            swift_bridgeObjectRelease();
            sub_25B290650();
            swift_bridgeObjectRetain();
            sub_25B290650();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v290 = sub_25B288E98(v290, v291, v292);
            sub_25B2909C0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v165 + 12) = 2082;
            uint64_t v189 = Record.ID.description.getter();
            uint64_t v290 = sub_25B288E98(v189, v190, v292);
            uint64_t v132 = v243;
            sub_25B2909C0();
            swift_bridgeObjectRelease();
            uint64_t v168 = "Data source for zone %{public}s cannot be found for record ID %{public}s";
          }
          _os_log_impl(&dword_25B107000, v163, v164, v168, (uint8_t *)v165, 0x16u);
          long long v230 = v287;
          swift_arrayDestroy();
          MEMORY[0x261160890](v230, -1, -1);
          MEMORY[0x261160890](v165, -1, -1);
LABEL_68:

          long long v225 = (uint64_t)v271;
          char v212 = v262;
          long long v211 = v261;
LABEL_69:
          long long v231 = v260;
          long long v232 = v259;
          sub_25B187628(v264, v259, &qword_26A4D9160);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v211 + 48))(v232, 1, v212) == 1)
          {
            sub_25B116DE0(v232, &qword_26A4D9160);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v211 + 32))(v231, v232, v212);
            long long v233 = objc_msgSend(self, sel_defaultManager);
            long long v234 = (void *)sub_25B28FE40();
            uint64_t v290 = 0;
            v235 = objc_msgSend(v233, sel_removeItemAtURL_error_, v234, &v290);

            if (v235)
            {
              uint64_t v236 = (id)v290;
            }
            else
            {
              uint64_t v237 = (id)v290;
              char v238 = (void *)sub_25B28FE20();

              swift_willThrow();
            }
            (*(void (**)(char *, uint64_t))(v211 + 8))(v231, v212);
          }
          sub_25B12946C();
          swift_release();
          sub_25B180A5C(v132, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          long long v192 = v225;
          goto LABEL_76;
        }
        uint64_t v169 = (uint64_t *)(v141 + *(int *)(v142 + 48));
        long long v171 = *v169;
        id v170 = v169[1];
        sub_25B18095C(v141, (uint64_t)v268, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        long long v172 = (char *)v94 + *(int *)(v140 + 24);
        if (v172[8])
        {
          unsigned int v173 = (uint64_t)v289;
          swift_retain_n();
          long long v174 = sub_25B290160();
          uint64_t v175 = sub_25B290880();
          if (os_log_type_enabled(v174, v175))
          {
            uint64_t v176 = v171;
            os_log_t v177 = swift_slowAlloc();
            uint64_t v178 = swift_slowAlloc();
            uint64_t v290 = v178;
            *(_DWORD *)os_log_t v177 = 136446466;
            uint64_t v179 = *(void *)(v173 + 528);
            uint64_t v180 = *(void *)(v173 + 536);
            swift_bridgeObjectRetain();
            uint64_t v293 = (void *)sub_25B288E98(v179, v180, &v290);
            sub_25B2909C0();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v177 + 12) = 2082;
            uint64_t v56 = (uint64_t)v272;
            swift_beginAccess();
            uint64_t v181 = Record.ID.description.getter();
            v292[0] = sub_25B288E98(v181, v182, &v290);
            sub_25B2909C0();
            swift_bridgeObjectRelease();
            uint64_t v183 = "(%{public}s) Missing encoding version for recordID %{public}s";
LABEL_50:
            _os_log_impl(&dword_25B107000, v174, v175, v183, (uint8_t *)v177, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x261160890](v178, -1, -1);
            MEMORY[0x261160890](v177, -1, -1);

            swift_release();
            sub_25B10DFF0(v176, v170);
            sub_25B180A5C((uint64_t)v268, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
            sub_25B180A5C(v243, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
            sub_25B180A5C((uint64_t)v271, type metadata accessor for Replicator.Session);
            uint64_t v119 = type metadata accessor for Record.ID;
            goto LABEL_34;
          }

          swift_release();
          sub_25B10DFF0(v171, v170);
          swift_release_n();
          sub_25B180A5C((uint64_t)v268, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
          long long v191 = v132;
          goto LABEL_57;
        }
        uint64_t v184 = *(void *)v172;
        uint64_t v185 = (uint64_t)v289;
        if (*(void *)(v133 + 32) > 0xDuLL)
        {
          uint64_t v188 = (int *)v255;
          long long v193 = *(void *)(v144 + *(int *)(v255 + 20));
          if (!v193)
          {
            swift_retain_n();
            long long v174 = sub_25B290160();
            uint64_t v175 = sub_25B290880();
            if (os_log_type_enabled(v174, v175))
            {
              uint64_t v176 = v171;
              os_log_t v177 = swift_slowAlloc();
              uint64_t v178 = swift_slowAlloc();
              uint64_t v290 = v178;
              *(_DWORD *)os_log_t v177 = 136446466;
              uint64_t v239 = *(void *)(v185 + 528);
              uint64_t v240 = *(void *)(v185 + 536);
              swift_bridgeObjectRetain();
              uint64_t v293 = (void *)sub_25B288E98(v239, v240, &v290);
              sub_25B2909C0();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v177 + 12) = 2082;
              uint64_t v56 = (uint64_t)v272;
              swift_beginAccess();
              unint64_t v241 = Record.ID.description.getter();
              v292[0] = sub_25B288E98(v241, v242, &v290);
              sub_25B2909C0();
              swift_bridgeObjectRelease();
              uint64_t v183 = "(%{public}s) Missing client defined ID for recordID %{public}s";
              goto LABEL_50;
            }
            swift_release_n();

            swift_release();
            sub_25B10DFF0(v171, v170);
            sub_25B180A5C((uint64_t)v268, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
            long long v191 = v243;
LABEL_57:
            sub_25B180A5C(v191, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
            long long v192 = (uint64_t)v271;
LABEL_76:
            sub_25B180A5C(v192, type metadata accessor for Replicator.Session);
            uint64_t v120 = type metadata accessor for Record.ID;
            uint64_t v121 = (uint64_t)v272;
            goto LABEL_35;
          }
          v281 = v184;
          uint64_t v285 = v171;
          v286 = v170;
          uint64_t v187 = (uint64_t *)(v193 + 16);
          uint64_t v186 = (uint64_t *)(v193 + 24);
        }
        else
        {
          v281 = *(void *)v172;
          uint64_t v285 = v171;
          v286 = v170;
          uint64_t v186 = (uint64_t *)(v144 + 8);
          uint64_t v187 = (uint64_t *)v144;
          uint64_t v188 = (int *)v255;
        }
        long long v194 = *v186;
        uint64_t v282 = *v187;
        swift_bridgeObjectRetain();
        long long v195 = v246;
        sub_25B1806D0((uint64_t)v272, v246, type metadata accessor for Record.ID);
        long long v196 = v247;
        long long v197 = v270;
        ((void (*)(char *, uint64_t, uint64_t))v283)(v247, v144 + v188[6], v270);
        long long v198 = *(void *)(v144 + v188[7]);
        long long v199 = v248;
        sub_25B187628(v144 + v188[8], v248, &qword_26A4D91F8);
        long long v200 = v188[8];
        v284 = *(uint64_t (**)(void))(v144 + v188[9]);
        long long v201 = v188[5];
        long long v202 = (uint64_t)v249;
        long long v203 = (uint64_t)&v249[v200];
        long long v204 = sub_25B290000();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v204 - 8) + 56))(v203, 1, 1, v204);
        sub_25B18095C(v195, v202, type metadata accessor for Record.ID);
        type metadata accessor for RecordMetadata.ClientDefinedID();
        long long v205 = swift_allocObject();
        *(void *)(v205 + 16) = v282;
        *(void *)(v205 + 24) = v194;
        *(void *)(v202 + v201) = v205;
        (*(void (**)(uint64_t, char *, uint64_t))(v269 + 32))(v202 + v188[6], v196, v197);
        *(void *)(v202 + v188[7]) = v198;
        swift_bridgeObjectRetain();
        sub_25B185B64(v199, v203, &qword_26A4D91F8);
        *(void *)(v202 + v188[9]) = v284;
        long long v206 = v256;
        sub_25B18095C(v202, v256, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        v284 = (uint64_t (*)(void))type metadata accessor for RecordMetadata;
        sub_25B1806D0(v206, v202, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        long long v207 = v252;
        sub_25B187628(v264, v252, &qword_26A4D9160);
        long long v208 = v253;
        long long v209 = v254;
        long long v210 = (uint64_t)&v254[*(int *)(v253 + 20)];
        long long v211 = v261;
        char v212 = v262;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v261 + 56))(v210, 1, 1, v262);
        *(void *)((char *)v209 + *(int *)(v208 + 24)) = v281;
        long long v213 = v285;
        long long v214 = v286;
        *long long v209 = v285;
        v209[1] = v214;
        sub_25B114300(v213, v214);
        sub_25B185B64(v207, v210, &qword_26A4D9160);
        long long v215 = (uint64_t)v245;
        sub_25B18095C((uint64_t)v209, (uint64_t)&v245[*(int *)(v251 + 20)], type metadata accessor for Record.Value);
        sub_25B18095C(v202, v215, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        sub_25B10FF48(v287, (uint64_t)&v293);
        long long v216 = v294;
        long long v217 = v295;
        __swift_project_boxed_opaque_existential_1(&v293, v294);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9D20);
        long long v218 = (*(unsigned __int8 *)(v250 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80);
        long long v219 = swift_allocObject();
        *(_OWORD *)(v219 + 16) = xmmword_25B292C10;
        sub_25B1806D0(v206, v219 + v218, v284);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v217 + 16) + 104))(v219, v216);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v293);
        uint64_t v293 = v289;
        long long v220 = v288;
        if (MEMORY[0x261160990](v288 + 16))
        {
          long long v221 = *(void *)(v220 + 24);
          long long v222 = swift_getObjectType();
          long long v223 = *(void (**)(void **, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v221 + 32);
          long long v224 = type metadata accessor for Replicator();
          v223(&v293, v215, v243, v224, &protocol witness table for Replicator, v222, v221);
          swift_unknownObjectRelease();
        }
        sub_25B10DFF0(v285, v286);
        sub_25B180A5C(v215, type metadata accessor for Record);
        sub_25B180A5C(v256, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        sub_25B180A5C((uint64_t)v268, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        long long v225 = (uint64_t)v271;
        uint64_t v132 = v243;
        goto LABEL_69;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v111 = (uint64_t)v289;
    swift_retain_n();
    unint64_t v112 = sub_25B290160();
    os_log_type_t v113 = sub_25B290880();
    if (os_log_type_enabled(v112, v113))
    {
      uint64_t v114 = (uint8_t *)swift_slowAlloc();
      uint64_t v115 = swift_slowAlloc();
      uint64_t v293 = (void *)v115;
      *(_DWORD *)uint64_t v114 = 136446210;
      uint64_t v243 = v61;
      uint64_t v116 = *(void *)(v111 + 528);
      unint64_t v117 = *(void *)(v111 + 536);
      swift_bridgeObjectRetain();
      v292[1] = sub_25B288E98(v116, v117, (uint64_t *)&v293);
      sub_25B2909C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v112, v113, "(%{public}s) No data source", v114, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v115, -1, -1);
      MEMORY[0x261160890](v114, -1, -1);

      goto LABEL_29;
    }
    swift_release_n();

LABEL_31:
    uint64_t v118 = v61;
    goto LABEL_32;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v286 + 56))(v287, 1, 1, v66);
LABEL_12:
  sub_25B116DE0(v68, &qword_26A4DB280);
  swift_retain();
  uint64_t v73 = sub_25B290160();
  os_log_type_t v74 = sub_25B290880();
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v75 = (uint8_t *)swift_slowAlloc();
    uint64_t v76 = swift_slowAlloc();
    uint64_t v293 = (void *)v76;
    *(_DWORD *)uint64_t v75 = 136446210;
    uint64_t v77 = v3[66];
    unint64_t v78 = v3[67];
    swift_bridgeObjectRetain();
    v292[7] = sub_25B288E98(v77, v78, (uint64_t *)&v293);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v73, v74, "(%{public}s) No session established", v75, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v76, -1, -1);
    MEMORY[0x261160890](v75, -1, -1);
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_25B141908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for PairingRelationship();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = sub_25B12DC54(a2);
  if ((v13 & 1) == 0) {
    return sub_25B160F94(a1, v12, a3, a4);
  }
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_25B290190();
  __swift_project_value_buffer(v15, (uint64_t)qword_26A4EB150);
  sub_25B1806D0(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  swift_retain();
  uint64_t v16 = sub_25B290160();
  os_log_type_t v17 = sub_25B290880();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v27 = v19;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v20 = *(void *)(v4 + 528);
    unint64_t v21 = *(void *)(v4 + 536);
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_25B288E98(v20, v21, &v27);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    sub_25B290080();
    sub_25B1875E0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
    uint64_t v22 = sub_25B290DB0();
    uint64_t v26 = sub_25B288E98(v22, v23, &v27);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B180A5C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    _os_log_impl(&dword_25B107000, v16, v17, "(%{public}s) Can't resolve protocol version when trying to construct message for: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v19, -1, -1);
    MEMORY[0x261160890](v18, -1, -1);
  }
  else
  {
    swift_release();
    sub_25B180A5C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  }

  sub_25B182988();
  swift_allocError();
  *uint64_t v24 = 1;
  return swift_willThrow();
}

uint64_t sub_25B141C50(char a1)
{
  if (a1)
  {
    uint64_t v2 = sub_25B21822C(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v5 = v2[2];
    unint64_t v4 = v2[3];
    if (v5 >= v4 >> 1) {
      uint64_t v2 = sub_25B21822C((void *)(v4 > 1), v5 + 1, 1, v2);
    }
    v2[2] = v5 + 1;
    uint64_t v6 = &v2[2 * v5];
    v6[4] = 0xD00000000000001BLL;
    v6[5] = 0x800000025B29C7D0;
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_14:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_25B21822C(0, v2[2] + 1, 1, v2);
      }
      unint64_t v11 = v2[2];
      unint64_t v10 = v2[3];
      if (v11 >= v10 >> 1) {
        uint64_t v2 = sub_25B21822C((void *)(v10 > 1), v11 + 1, 1, v2);
      }
      v2[2] = v11 + 1;
      unint64_t v12 = &v2[2 * v11];
      v12[4] = 0xD000000000000016;
      v12[5] = 0x800000025B29C790;
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE78];
    if ((a1 & 2) == 0) {
      goto LABEL_3;
    }
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25B21822C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v8 = v2[2];
  unint64_t v7 = v2[3];
  if (v8 >= v7 >> 1) {
    uint64_t v2 = sub_25B21822C((void *)(v7 > 1), v8 + 1, 1, v2);
  }
  v2[2] = v8 + 1;
  uint64_t v9 = &v2[2 * v8];
  v9[4] = 0xD00000000000001DLL;
  v9[5] = 0x800000025B29C7B0;
  if ((a1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if (v2[2])
  {
LABEL_19:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AF0);
    sub_25B116394(&qword_26A4D9AF8, &qword_26A4D9AF0);
    uint64_t v3 = sub_25B290550();
    swift_bridgeObjectRelease();
    return v3;
  }
  swift_bridgeObjectRelease();
  return 1701736302;
}

void *sub_25B141E98@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_25B141EA4()
{
  return sub_25B141C50(*v0);
}

void sub_25B141EAC(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_25B141EB4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_25B141EC8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_25B141EDC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_25B141EF0(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_25B141F20@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_25B141F4C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_25B141F70(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_25B141F84(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_25B141F98(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_25B141FAC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_25B141FC0(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_25B141FD4(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_25B141FE8(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_25B141FFC()
{
  return *v0 == 0;
}

uint64_t sub_25B14200C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_25B142024(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_25B142038@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_25B142048(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_25B142054(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25B142068@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_25B17AF9C(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

dispatch_group_t sub_25B1420A8(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25B290320();
  uint64_t v58 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v69 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_25B290360();
  uint64_t v57 = *(NSObject **)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v68 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_25B290310();
  uint64_t v9 = *(NSObject **)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  unint64_t v63 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_25B2903E0();
  uint64_t v74 = *(void *)(v72 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v72);
  uint64_t v75 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v73 = (char *)&v54 - v13;
  uint64_t v14 = sub_25B290410();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  os_log_type_t v17 = (uint64_t *)((char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = (void *)*((void *)v3 + 29);
  *os_log_type_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F0E0], v14);
  id v67 = v18;
  LOBYTE(v18) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0) {
    goto LABEL_24;
  }
  if (qword_26A4D98C0 != -1) {
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v19 = sub_25B290190();
    __swift_project_value_buffer(v19, (uint64_t)qword_26A4EB150);
    swift_retain();
    uint64_t v20 = sub_25B290160();
    os_log_type_t v21 = sub_25B2908A0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v66 = v6;
    unint64_t v55 = a1;
    if (v22)
    {
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      uint64_t v6 = (uint64_t)v9;
      uint64_t v24 = a2;
      uint64_t v25 = aBlock;
      *(_DWORD *)unint64_t v23 = 136380675;
      char v71 = v23 + 4;
      uint64_t v26 = *((void *)v3 + 66);
      unint64_t v27 = *((void *)v3 + 67);
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_25B288E98(v26, v27, &aBlock);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v20, v21, "(%{private}s) Gathering device list from sync service", v23, 0xCu);
      swift_arrayDestroy();
      uint64_t v28 = v25;
      a2 = v24;
      uint64_t v9 = v6;
      MEMORY[0x261160890](v28, -1, -1);
      MEMORY[0x261160890](v23, -1, -1);
    }
    else
    {

      swift_release();
    }
    uint64_t v29 = v75;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9BD8);
    uint64_t v30 = swift_allocObject();
    *(_DWORD *)(v30 + 24) = 0;
    uint64_t v65 = v30;
    *(void *)(v30 + 16) = MEMORY[0x263F8EE78];
    dispatch_group_t result = dispatch_group_create();
    uint64_t v56 = result;
    unint64_t v32 = *((void *)v3 + 68);
    if ((v32 & 0x8000000000000000) != 0) {
      break;
    }
    uint64_t v54 = a2;
    a1 = MEMORY[0x263F8EE78];
    char v71 = v3;
    if (v32)
    {
      uint64_t v6 = 0;
      uint64_t v62 = (uint64_t (**)(uint64_t))*((void *)v3 + 69);
      LODWORD(v61) = *MEMORY[0x263F8F018];
      unint64_t v60 = v9 + 13;
      uint64_t v33 = v9 + 1;
      uint64_t v34 = (void (**)(char *, uint64_t))(v74 + 8);
      uint64_t v59 = v74 + 32;
      a2 = v72;
      uint64_t v35 = v63;
      uint64_t v9 = v64;
      while (1)
      {
        ++v6;
        sub_25B2903C0();
        if ((unsigned __int128)((uint64_t)v62 * (__int128)v6) >> 64 != ((uint64_t)v62 * v6) >> 63) {
          break;
        }
        uint64_t v3 = (uint8_t *)v32;
        *uint64_t v35 = (void)v62 * v6;
        ((void (*)(void *, void, NSObject *))v60->isa)(v35, v61, v9);
        sub_25B2903D0();
        ((void (*)(void *, NSObject *))v33->isa)(v35, v9);
        (*v34)(v29, a2);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a1 = sub_25B218370(0, *(void *)(a1 + 16) + 1, 1, a1);
        }
        unint64_t v37 = *(void *)(a1 + 16);
        unint64_t v36 = *(void *)(a1 + 24);
        if (v37 >= v36 >> 1) {
          a1 = sub_25B218370(v36 > 1, v37 + 1, 1, a1);
        }
        *(void *)(a1 + 16) = v37 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v74 + 32))(a1+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v37, v73, a2);
        uint64_t v29 = v75;
        if (v32 == v6) {
          goto LABEL_17;
        }
      }
      __break(1u);
    }
    else
    {
      a2 = v72;
LABEL_17:
      uint64_t v9 = v56;
      uint64_t v73 = *(char **)(a1 + 16);
      if (!v73)
      {
LABEL_21:
        uint64_t v47 = (void *)swift_allocObject();
        uint64_t v48 = v71;
        v47[2] = v65;
        v47[3] = v48;
        uint64_t v49 = v54;
        v47[4] = v55;
        v47[5] = v49;
        id v81 = sub_25B1806A8;
        uint64_t v82 = v47;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v78 = 1107296256;
        long long v79 = sub_25B10F584;
        uint64_t v80 = &block_descriptor_314;
        uint64_t v50 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v51 = v68;
        sub_25B290340();
        uint64_t v76 = MEMORY[0x263F8EE78];
        sub_25B1875E0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
        sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
        uint64_t v52 = v69;
        uint64_t v53 = v66;
        sub_25B290A00();
        sub_25B2908B0();
        _Block_release(v50);
        swift_release();

        (*(void (**)(char *, uint64_t))(v58 + 8))(v52, v53);
        ((void (*)(char *, uint64_t))v57[1].isa)(v51, v70);
        swift_bridgeObjectRelease();
        return (dispatch_group_t)swift_release();
      }
      unint64_t v38 = 0;
      uint64_t v64 = a1 + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80));
      unint64_t v63 = (char *)(v74 + 16);
      uint64_t v62 = &v79;
      uint64_t v61 = (void (**)(uint8_t *, uint64_t))(v58 + 8);
      unint64_t v60 = v57 + 1;
      uint64_t v59 = v74 + 8;
      uint64_t v39 = v74;
      uint64_t v3 = (uint8_t *)v69;
      while (1)
      {
        dispatch_group_enter(v9);
        uint64_t v40 = v71;
        if (v38 >= *(void *)(a1 + 16)) {
          break;
        }
        (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v29, v64 + *(void *)(v39 + 72) * v38, a2);
        uint64_t v41 = (void *)swift_allocObject();
        v41[2] = v40;
        v41[3] = v38;
        v41[4] = v65;
        v41[5] = v9;
        id v81 = sub_25B180654;
        uint64_t v82 = v41;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v78 = 1107296256;
        long long v79 = sub_25B10F584;
        uint64_t v80 = &block_descriptor_308;
        uint64_t v42 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        unint64_t v43 = v9;
        uint64_t v44 = v68;
        sub_25B290340();
        uint64_t v76 = MEMORY[0x263F8EE78];
        sub_25B1875E0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
        sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
        uint64_t v6 = v66;
        sub_25B290A00();
        MEMORY[0x26115F210](v75, v44, v3, v42);
        uint64_t v45 = v42;
        uint64_t v29 = v75;
        _Block_release(v45);
        (*v61)(v3, v6);
        uint64_t v46 = v44;
        a2 = v72;
        ((void (*)(char *, uint64_t))v60->isa)(v46, v70);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v29, a2);
        swift_release();
        if (v73 == (char *)++v38) {
          goto LABEL_21;
        }
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    swift_once();
  }
  __break(1u);
  return result;
}

void sub_25B142C24(void *a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v7 = a1[23];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
  swift_bridgeObjectRetain();
  sub_25B1781C0(&v26);
  swift_bridgeObjectRelease();
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_25B290190();
  __swift_project_value_buffer(v9, (uint64_t)qword_26A4EB150);
  swift_retain_n();
  swift_retain_n();
  uint64_t v10 = sub_25B290160();
  os_log_type_t v11 = sub_25B2908A0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v25 = a4;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v26 = v13;
    *(_DWORD *)uint64_t v12 = 136381187;
    uint64_t v14 = a1[66];
    uint64_t v24 = a3;
    unint64_t v15 = a1[67];
    swift_bridgeObjectRetain();
    sub_25B288E98(v14, v15, &v26);
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2050;
    sub_25B2909C0();
    *(_WORD *)(v12 + 22) = 2081;
    uint64_t v16 = swift_retain();
    uint64_t v17 = MEMORY[0x26115F080](v16, MEMORY[0x263F8D310]);
    unint64_t v19 = v18;
    swift_release();
    sub_25B288E98(v17, v19, &v26);
    a3 = v24;
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v10, v11, "(%{private}s) Sync service returned device list %{public}ld: %{private}s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v13, -1, -1);
    uint64_t v20 = v12;
    a4 = v25;
    MEMORY[0x261160890](v20, -1, -1);
  }
  else
  {

    swift_release_n();
    uint64_t v21 = swift_release_n();
  }
  MEMORY[0x270FA5388](v21);
  BOOL v22 = (void **)(a3 + 16);
  unint64_t v23 = (os_unfair_lock_s *)(a3 + 24);
  os_unfair_lock_lock(v23);
  sub_25B1806B4(v22);
  os_unfair_lock_unlock(v23);
  swift_release();
  dispatch_group_leave(a4);
}

uint64_t sub_25B142F58(void **a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_25B2188A4(0, v4[2] + 1, 1, v4);
    uint64_t v4 = (void *)result;
  }
  unint64_t v7 = v4[2];
  unint64_t v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    uint64_t result = (uint64_t)sub_25B2188A4((void *)(v6 > 1), v7 + 1, 1, v4);
    uint64_t v4 = (void *)result;
  }
  v4[2] = v7 + 1;
  v4[v7 + 4] = a2;
  *a1 = v4;
  return result;
}

uint64_t sub_25B14300C(os_unfair_lock_s *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v7 = (uint64_t)&a1[4];
  uint64_t v8 = a1 + 6;
  os_unfair_lock_lock(a1 + 6);
  sub_25B1433A4(v7, &v27);
  os_unfair_lock_unlock(v8);
  uint64_t v9 = v27;
  if (v27)
  {
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_25B290190();
    __swift_project_value_buffer(v10, (uint64_t)qword_26A4EB150);
    swift_retain();
    os_log_type_t v11 = sub_25B290160();
    os_log_type_t v12 = sub_25B2908A0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v26 = a3;
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v27 = v14;
      *(_DWORD *)uint64_t v13 = 136380675;
      uint64_t v15 = *(void *)(a2 + 528);
      unint64_t v16 = *(void *)(a2 + 536);
      swift_bridgeObjectRetain();
      uint64_t v17 = v15;
      a3 = v26;
      sub_25B288E98(v17, v16, &v27);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v11, v12, "(%{private}s) Sync service has given us a reasonable list of devices.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v14, -1, -1);
      MEMORY[0x261160890](v13, -1, -1);
    }
    else
    {

      swift_release();
    }
    a3(v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_25B290190();
    __swift_project_value_buffer(v18, (uint64_t)qword_26A4EB150);
    swift_retain();
    unint64_t v19 = sub_25B290160();
    os_log_type_t v20 = sub_25B2908A0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v27 = v22;
      *(_DWORD *)uint64_t v21 = 136380675;
      uint64_t v23 = *(void *)(a2 + 528);
      unint64_t v24 = *(void *)(a2 + 536);
      swift_bridgeObjectRetain();
      sub_25B288E98(v23, v24, &v27);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v19, v20, "(%{private}s) Sync service has returned an inconsistent device list; spinning the wheel again",
        v21,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v22, -1, -1);
      MEMORY[0x261160890](v21, -1, -1);
    }
    else
    {

      swift_release();
    }
    return sub_25B1420A8(a3, a4);
  }
}

uint64_t sub_25B1433A4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)result;
  uint64_t v4 = *(void *)(*(void *)result + 16);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    if (v4 != 1)
    {
      uint64_t v7 = (void *)v3[4];
      uint64_t v8 = (void *)v3[5];
      unint64_t v6 = v3 + 4;
      uint64_t v9 = v7[2];
      if (v9 != v8[2])
      {
LABEL_29:
        *a2 = 0;
        return result;
      }
      unint64_t v10 = 1;
      while (1)
      {
        if (v9 && v7 != v8)
        {
          uint64_t result = v7[4];
          if (result != v8[4] || v7[5] != v8[5])
          {
            uint64_t result = sub_25B290FB0();
            if ((result & 1) == 0) {
              goto LABEL_29;
            }
          }
          if (v9 != 1)
          {
            uint64_t result = v7[6];
            if (result != v8[6] || v7[7] != v8[7])
            {
              uint64_t result = sub_25B290FB0();
              if ((result & 1) == 0) {
                goto LABEL_29;
              }
            }
            uint64_t v12 = v9 - 2;
            if (v12)
            {
              uint64_t v14 = v7 + 9;
              uint64_t v15 = v8 + 9;
              do
              {
                uint64_t result = *(v14 - 1);
                if (result != *(v15 - 1) || *v14 != *v15)
                {
                  uint64_t result = sub_25B290FB0();
                  if ((result & 1) == 0) {
                    goto LABEL_29;
                  }
                }
                v14 += 2;
                v15 += 2;
              }
              while (--v12);
            }
          }
        }
        if (v10 == v5) {
          break;
        }
        unint64_t v13 = v3[2];
        if (v10 >= v13)
        {
          __break(1u);
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
        if (v10 + 1 >= v13) {
          goto LABEL_33;
        }
        uint64_t v7 = (void *)v6[v10];
        uint64_t v8 = (void *)v6[v10 + 1];
        uint64_t v9 = v7[2];
        ++v10;
        if (v9 != v8[2]) {
          goto LABEL_29;
        }
      }
      if (!v3[2]) {
        goto LABEL_35;
      }
    }
    *a2 = v3[4];
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  return result;
}

void sub_25B14352C(void *a1, uint64_t a2, int64_t a3)
{
  int64_t v182 = a3;
  uint64_t v5 = sub_25B290080();
  uint64_t v178 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v162 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_25B290000();
  int64_t v170 = *(void *)(v173 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v173);
  long long v172 = (char *)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  long long v171 = (char *)&v148 - v9;
  uint64_t v10 = type metadata accessor for PairingRelationship();
  uint64_t v177 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v148 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v169 = (uint64_t)&v148 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v148 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v148 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v148 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EF0);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  long long v166 = (char *)&v148 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v175 = (char *)&v148 - v27;
  swift_beginAccess();
  if (*(unsigned char *)(a2 + 616) == 1)
  {
    if (qword_26A4D98C0 != -1) {
      goto LABEL_98;
    }
    goto LABEL_3;
  }
  uint64_t v159 = *(void *)(a2 + 608);
  *(void *)(a2 + 608) = 0;
  *(unsigned char *)(a2 + 616) = 1;
  uint64_t v161 = a2;
  swift_beginAccess();
  uint64_t v160 = a2 + 192;
  sub_25B10FF48(a2 + 192, (uint64_t)&v187);
  uint64_t v33 = v188;
  uint64_t v32 = v189;
  __swift_project_boxed_opaque_existential_1(&v187, v188);
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v32 + 8) + 8) + 32))(v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v187);
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_25B290190();
  uint64_t v36 = __swift_project_value_buffer(v35, (uint64_t)qword_26A4EB150);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v174 = v36;
  unint64_t v37 = sub_25B290160();
  os_log_type_t v38 = sub_25B2908A0();
  LODWORD(v180) = v38;
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v40 = MEMORY[0x263F8EE58];
  uint64_t v183 = a1;
  uint64_t v184 = v10;
  uint64_t v181 = v5;
  uint64_t v167 = v13;
  uint64_t v158 = v18;
  uint64_t v157 = v21;
  uint64_t v179 = v34;
  if (v39)
  {
    uint64_t v41 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v187 = v42;
    *(_DWORD *)uint64_t v41 = 136446722;
    swift_bridgeObjectRetain();
    uint64_t v43 = MEMORY[0x26115F080](v183, MEMORY[0x263F8D310]);
    unint64_t v45 = v44;
    swift_bridgeObjectRelease();
    uint64_t v185 = sub_25B288E98(v43, v45, &v187);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2082;
    sub_25B1875E0(&qword_26A4D9220, MEMORY[0x263F07508]);
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_25B2904F0();
    unint64_t v48 = v47;
    swift_bridgeObjectRelease();
    uint64_t v185 = sub_25B288E98(v46, v48, &v187);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 22) = 2082;
    uint64_t v34 = v179;
    uint64_t v49 = sub_25B141C50(v182);
    uint64_t v185 = sub_25B288E98(v49, v50, &v187);
    sub_25B2909C0();
    uint64_t v5 = v181;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v37, (os_log_type_t)v180, "Reconciling devices. SyncService: %{public}s, Replicator: %{public}s, options: %{public}s", (uint8_t *)v41, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v42, -1, -1);
    uint64_t v51 = v41;
    a1 = v183;
    MEMORY[0x261160890](v51, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v53 = (uint64_t)v166;
  uint64_t v54 = (uint64_t)v175;
  int64_t v182 = 0;
  uint64_t v55 = *(void *)(v34 + 64);
  uint64_t v165 = v34 + 64;
  uint64_t v56 = 1 << *(unsigned char *)(v34 + 32);
  uint64_t v57 = -1;
  if (v56 < 64) {
    uint64_t v57 = ~(-1 << v56);
  }
  unint64_t v58 = v57 & v55;
  uint64_t v176 = (void (**)(char *, char *, uint64_t))(v178 + 16);
  uint64_t v180 = (void (**)(uint64_t, uint64_t))(v178 + 8);
  uint64_t v168 = (void (**)(char *, uint64_t))(v170 + 8);
  uint64_t v155 = &v186;
  uint64_t v156 = v178 + 32;
  int64_t v170 = (unint64_t)(v56 + 63) >> 6;
  int64_t v152 = v170 - 1;
  uint64_t v163 = MEMORY[0x263F8EE78];
  uint64_t v153 = a1 + 9;
  *(void *)&long long v52 = 136446466;
  long long v164 = v52;
  uint64_t v154 = v40 + 8;
  if ((v57 & v55) == 0) {
    goto LABEL_16;
  }
LABEL_14:
  unint64_t v59 = __clz(__rbit64(v58));
  v58 &= v58 - 1;
  unint64_t v60 = v59 | (v182 << 6);
LABEL_15:
  uint64_t v61 = v179;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v178 + 16))(v53, *(void *)(v179 + 48) + *(void *)(v178 + 72) * v60, v5);
  uint64_t v62 = *(void *)(v61 + 56) + *(void *)(v177 + 72) * v60;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  sub_25B1806D0(v62, v53 + *(int *)(v63 + 48), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v53, 0, 1, v63);
  while (1)
  {
    sub_25B187574(v53, v54, &qword_26A4D9EF0);
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 48))(v54, 1, v68) == 1)
    {
      swift_release();
      uint64_t v121 = v163;
      if (!*(void *)(v163 + 16))
      {
        swift_bridgeObjectRelease();
        uint64_t v122 = v161;
        char v123 = v159;
        goto LABEL_86;
      }
      uint64_t v122 = v161;
      char v123 = v159;
      if (v159)
      {
        sub_25B10FF48(v160, (uint64_t)&v187);
        uint64_t v128 = v188;
        uint64_t v127 = v189;
        __swift_project_boxed_opaque_existential_1(&v187, v188);
        uint64_t v185 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v127 + 8) + 8) + 32))(v128);
        sub_25B290210();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v187);
        if ((v123 & 2) != 0)
        {
LABEL_79:
          uint64_t v187 = v121;
          swift_retain();
          sub_25B290210();
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_86;
        }
      }
      else
      {
        uint64_t v124 = sub_25B290160();
        os_log_type_t v125 = sub_25B2908A0();
        if (os_log_type_enabled(v124, v125))
        {
          uint64_t v126 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v126 = 0;
          _os_log_impl(&dword_25B107000, v124, v125, "Not publishing new pairing relationships after reconciliation as options missing 'publishPairingRelationships'", v126, 2u);
          MEMORY[0x261160890](v126, -1, -1);
        }

        if ((v123 & 2) != 0) {
          goto LABEL_79;
        }
      }
      uint64_t v129 = sub_25B290160();
      os_log_type_t v130 = sub_25B2908A0();
      if (os_log_type_enabled(v129, v130))
      {
        uint64_t v131 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v131 = 0;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25B107000, v129, v130, "Not publishing forgotten relationships after reconciliation as options missing 'publishForgottenRelationships'", v131, 2u);
        MEMORY[0x261160890](v131, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease();
      }

LABEL_86:
      if ((sub_25B144C10() & 1) == 0)
      {
        swift_beginAccess();
        sub_25B10FF48(v122 + 344, (uint64_t)&v187);
        uint64_t v132 = v188;
        uint64_t v133 = v189;
        __swift_project_boxed_opaque_existential_1(&v187, v188);
        char v134 = (*(uint64_t (**)(uint64_t, uint64_t))(v133 + 16))(v132, v133);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v187);
        if (v134)
        {
          uint64_t v135 = sub_25B290160();
          os_log_type_t v136 = sub_25B2908A0();
          BOOL v137 = os_log_type_enabled(v135, v136);
          if ((v123 & 4) != 0)
          {
            if (v137)
            {
              uint64_t v139 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v139 = 0;
              _os_log_impl(&dword_25B107000, v135, v136, "Rebroadcasting for auto-pair because devices changed and we are not currently paired.", v139, 2u);
              MEMORY[0x261160890](v139, -1, -1);
            }

            swift_beginAccess();
            uint64_t v140 = *(void *)(v122 + 368);
            uint64_t v141 = *(void *)(v122 + 376);
            __swift_mutable_project_boxed_opaque_existential_1(v122 + 344, v140);
            uint64_t v142 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v141 + 32))(&v187, v140, v141);
            *int v143 = !*v143;
            v142(&v187, 0);
            uint64_t v144 = *(void *)(v122 + 368);
            uint64_t v145 = *(void *)(v122 + 376);
            __swift_mutable_project_boxed_opaque_existential_1(v122 + 344, v144);
            uint64_t v146 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v145 + 32))(&v187, v144, v145);
            BOOL *v147 = !*v147;
            v146(&v187, 0);
            swift_endAccess();
          }
          else
          {
            if (v137)
            {
              uint64_t v138 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v138 = 0;
              _os_log_impl(&dword_25B107000, v135, v136, "Not rebroadcasting for auto-pair after reconciliation as options missing 'readvertiseIfNecessary'", v138, 2u);
              MEMORY[0x261160890](v138, -1, -1);
            }
          }
        }
      }
      return;
    }
    sub_25B18095C(v54 + *(int *)(v68 + 48), (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v69 = a1[2];
    if (v69)
    {
      uint64_t v70 = &v23[*(int *)(v184 + 20)];
      uint64_t v71 = *(void *)v70;
      uint64_t v72 = *((void *)v70 + 1);
      BOOL v73 = a1[4] == *(void *)v70 && a1[5] == v72;
      if (v73 || (sub_25B290FB0() & 1) != 0)
      {
LABEL_41:
        sub_25B180A5C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        goto LABEL_49;
      }
      a1 = v183;
      if (v69 != 1)
      {
        if (v183[6] == v71 && v183[7] == v72 || (sub_25B290FB0() & 1) != 0) {
          goto LABEL_41;
        }
        a1 = v183;
        if (v69 != 2) {
          break;
        }
      }
    }
LABEL_43:
    uint64_t v74 = v184;
    uint64_t v75 = (uint64_t *)&v23[*(int *)(v184 + 32)];
    unint64_t v76 = v75[1];
    if (v76 >= 3)
    {
      uint64_t v77 = *v75;
      swift_bridgeObjectRetain();
      uint64_t v78 = v171;
      sub_25B28FF60();
      long long v79 = v172;
      sub_25B28FFD0();
      char v80 = sub_25B28FF80();
      sub_25B1200A4(v77, v76);
      id v81 = *v168;
      uint64_t v82 = v173;
      (*v168)(v79, v173);
      uint64_t v74 = v184;
      v81(v78, v82);
      if ((v80 & 1) == 0)
      {
        uint64_t v83 = v169;
        sub_25B1806D0((uint64_t)v23, v169, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v84 = (uint64_t)v167;
        sub_25B1806D0((uint64_t)v23, (uint64_t)v167, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v85 = sub_25B290160();
        os_log_type_t v86 = sub_25B2908A0();
        if (os_log_type_enabled(v85, v86))
        {
          uint64_t v87 = swift_slowAlloc();
          uint64_t v88 = swift_slowAlloc();
          uint64_t v187 = v88;
          *(_DWORD *)uint64_t v87 = v164;
          long long v89 = (uint64_t *)(v83 + *(int *)(v184 + 20));
          uint64_t v90 = v83;
          uint64_t v91 = *v89;
          unint64_t v92 = v89[1];
          swift_bridgeObjectRetain();
          *(void *)(v87 + 4) = sub_25B288E98(v91, v92, &v187);
          swift_bridgeObjectRelease();
          uint64_t v93 = v90;
          uint64_t v53 = (uint64_t)v166;
          sub_25B180A5C(v93, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          *(_WORD *)(v87 + 12) = 2082;
          sub_25B1875E0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
          uint64_t v94 = sub_25B290DB0();
          *(void *)(v87 + 14) = sub_25B288E98(v94, v95, &v187);
          swift_bridgeObjectRelease();
          sub_25B180A5C(v84, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          _os_log_impl(&dword_25B107000, v85, v86, "Temporarily preserving device: %{public}s (relationship: %{public}s) - Device no longer associated with sync service but within grace period", (uint8_t *)v87, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x261160890](v88, -1, -1);
          MEMORY[0x261160890](v87, -1, -1);
        }
        else
        {

          sub_25B180A5C(v84, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          sub_25B180A5C(v83, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        }
        sub_25B180A5C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v54 = (uint64_t)v175;
LABEL_49:
        uint64_t v5 = v181;
        (*v180)(v54, v181);
        a1 = v183;
        if (v58) {
          goto LABEL_14;
        }
        goto LABEL_16;
      }
    }
    uint64_t v100 = (uint64_t)v157;
    sub_25B1806D0((uint64_t)v23, (uint64_t)v157, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v101 = (uint64_t)v158;
    sub_25B1806D0((uint64_t)v23, (uint64_t)v158, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v102 = sub_25B290160();
    os_log_type_t v103 = sub_25B2908A0();
    int v104 = v103;
    if (os_log_type_enabled(v102, v103))
    {
      uint64_t v105 = swift_slowAlloc();
      uint64_t v151 = swift_slowAlloc();
      uint64_t v187 = v151;
      *(_DWORD *)uint64_t v105 = v164;
      int v150 = v104;
      os_log_type_t v106 = (uint64_t *)(v100 + *(int *)(v74 + 20));
      os_log_t v149 = v102;
      uint64_t v107 = *v106;
      unint64_t v108 = v106[1];
      swift_bridgeObjectRetain();
      uint64_t v185 = sub_25B288E98(v107, v108, &v187);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B180A5C(v100, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      *(_WORD *)(v105 + 12) = 2082;
      sub_25B1875E0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
      uint64_t v5 = v181;
      uint64_t v109 = sub_25B290DB0();
      uint64_t v185 = sub_25B288E98(v109, v110, &v187);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B180A5C(v101, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      os_log_t v111 = v149;
      _os_log_impl(&dword_25B107000, v149, (os_log_type_t)v150, "Forgetting device: %{public}s (relationship: %{public}s) - Device no longer associated with sync service", (uint8_t *)v105, 0x16u);
      uint64_t v112 = v151;
      swift_arrayDestroy();
      MEMORY[0x261160890](v112, -1, -1);
      uint64_t v113 = v105;
      a1 = v183;
      MEMORY[0x261160890](v113, -1, -1);
    }
    else
    {
      sub_25B180A5C(v100, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      sub_25B180A5C(v101, (uint64_t (*)(void))type metadata accessor for PairingRelationship);

      uint64_t v5 = v181;
    }
    sub_25B130988((uint64_t)v23);
    sub_25B10FF48(v160, (uint64_t)&v187);
    uint64_t v114 = v188;
    uint64_t v115 = v189;
    __swift_project_boxed_opaque_existential_1(&v187, v188);
    (*(void (**)(char *, uint64_t))(*(void *)(v115 + 16) + 96))(v23, v114);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v187);
    (*v176)(v162, v23, v5);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v53 = (uint64_t)v166;
    uint64_t v54 = (uint64_t)v175;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v163 = sub_25B2189B4(0, *(void *)(v163 + 16) + 1, 1, v163);
    }
    unint64_t v118 = *(void *)(v163 + 16);
    unint64_t v117 = *(void *)(v163 + 24);
    if (v118 >= v117 >> 1) {
      uint64_t v163 = sub_25B2189B4(v117 > 1, v118 + 1, 1, v163);
    }
    unint64_t v119 = v163;
    *(void *)(v163 + 16) = v118 + 1;
    uint64_t v120 = v178;
    (*(void (**)(unint64_t, char *, uint64_t))(v178 + 32))(v119+ ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80))+ *(void *)(v120 + 72) * v118, v162, v5);
    sub_25B180A5C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v54, v5);
    if (v58) {
      goto LABEL_14;
    }
LABEL_16:
    int64_t v64 = v182 + 1;
    if (__OFADD__(v182, 1))
    {
      __break(1u);
      goto LABEL_97;
    }
    if (v64 < v170)
    {
      unint64_t v65 = *(void *)(v165 + 8 * v64);
      if (v65) {
        goto LABEL_19;
      }
      int64_t v66 = v182 + 2;
      ++v182;
      if (v64 + 1 < v170)
      {
        unint64_t v65 = *(void *)(v165 + 8 * v66);
        if (v65) {
          goto LABEL_22;
        }
        int64_t v182 = v64 + 1;
        if (v64 + 2 < v170)
        {
          unint64_t v65 = *(void *)(v165 + 8 * (v64 + 2));
          if (v65)
          {
            v64 += 2;
            goto LABEL_19;
          }
          int64_t v66 = v64 + 3;
          int64_t v182 = v64 + 2;
          if (v64 + 3 < v170)
          {
            unint64_t v65 = *(void *)(v165 + 8 * v66);
            if (!v65)
            {
              while (1)
              {
                int64_t v64 = v66 + 1;
                if (__OFADD__(v66, 1)) {
                  break;
                }
                if (v64 >= v170)
                {
                  int64_t v182 = v152;
                  goto LABEL_33;
                }
                unint64_t v65 = *(void *)(v165 + 8 * v64);
                ++v66;
                if (v65) {
                  goto LABEL_19;
                }
              }
              __break(1u);
              return;
            }
LABEL_22:
            int64_t v64 = v66;
LABEL_19:
            unint64_t v58 = (v65 - 1) & v65;
            unint64_t v60 = __clz(__rbit64(v65)) + (v64 << 6);
            int64_t v182 = v64;
            goto LABEL_15;
          }
        }
      }
    }
LABEL_33:
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v53, 1, 1, v67);
    unint64_t v58 = 0;
  }
  uint64_t v96 = v153;
  uint64_t v97 = 2;
  while (1)
  {
    uint64_t v98 = v97 + 1;
    if (__OFADD__(v97, 1)) {
      break;
    }
    BOOL v99 = *(v96 - 1) == v71 && *v96 == v72;
    if (v99 || (sub_25B290FB0() & 1) != 0) {
      goto LABEL_41;
    }
    v96 += 2;
    ++v97;
    BOOL v73 = v98 == v69;
    a1 = v183;
    if (v73) {
      goto LABEL_43;
    }
  }
LABEL_97:
  __break(1u);
LABEL_98:
  swift_once();
LABEL_3:
  uint64_t v28 = sub_25B290190();
  __swift_project_value_buffer(v28, (uint64_t)qword_26A4EB150);
  uint64_t v29 = sub_25B290160();
  os_log_type_t v30 = sub_25B290880();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl(&dword_25B107000, v29, v30, "No reconciliation options are set", v31, 2u);
    MEMORY[0x261160890](v31, -1, -1);
  }
}

uint64_t sub_25B144C10()
{
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v1 = MEMORY[0x270FA5388](v52);
  uint64_t v3 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v1);
  uint64_t v6 = (char *)&v49 - v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v51 = (char *)&v49 - v7;
  uint64_t v8 = sub_25B290410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(v0 + 232);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  id v13 = v12;
  char v14 = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v14 & 1) == 0) {
    goto LABEL_33;
  }
  swift_beginAccess();
  sub_25B10FF48(v0 + 192, (uint64_t)v57);
  uint64_t v17 = v58;
  uint64_t v16 = v59;
  __swift_project_boxed_opaque_existential_1(v57, v58);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v16 + 8) + 8) + 32))(v17);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v49 = v18 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(v18 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v50 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v54 = v18;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v23 = 0;
  uint64_t v53 = v6;
  if (v22) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v25 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v25 >= v50) {
    goto LABEL_31;
  }
  unint64_t v26 = *(void *)(v49 + 8 * v25);
  int64_t v27 = v23 + 1;
  if (v26) {
    goto LABEL_25;
  }
  int64_t v27 = v23 + 2;
  if (v23 + 2 >= v50) {
    goto LABEL_31;
  }
  unint64_t v26 = *(void *)(v49 + 8 * v27);
  if (v26) {
    goto LABEL_25;
  }
  int64_t v27 = v23 + 3;
  if (v23 + 3 >= v50) {
    goto LABEL_31;
  }
  unint64_t v26 = *(void *)(v49 + 8 * v27);
  if (v26) {
    goto LABEL_25;
  }
  int64_t v27 = v23 + 4;
  if (v23 + 4 >= v50) {
    goto LABEL_31;
  }
  unint64_t v26 = *(void *)(v49 + 8 * v27);
  if (v26) {
    goto LABEL_25;
  }
  int64_t v27 = v23 + 5;
  if (v23 + 5 >= v50) {
    goto LABEL_31;
  }
  unint64_t v26 = *(void *)(v49 + 8 * v27);
  if (v26) {
    goto LABEL_25;
  }
  uint64_t v28 = v23 + 6;
  if (v23 + 6 >= v50)
  {
LABEL_31:
    uint64_t v48 = 0;
LABEL_30:
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    return v48;
  }
  unint64_t v26 = *(void *)(v49 + 8 * v28);
  if (v26)
  {
    int64_t v27 = v23 + 6;
LABEL_25:
    uint64_t v55 = (v26 - 1) & v26;
    int64_t v56 = v27;
    for (unint64_t i = __clz(__rbit64(v26)) + (v27 << 6); ; unint64_t i = __clz(__rbit64(v22)) | (v23 << 6))
    {
      uint64_t v29 = v54;
      uint64_t v30 = *(void *)(v54 + 48);
      uint64_t v31 = sub_25B290080();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = v32;
      uint64_t v34 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
      uint64_t v35 = v51;
      v34(v51, v30 + *(void *)(v32 + 72) * i, v31);
      uint64_t v36 = *(void *)(v29 + 56);
      unint64_t v37 = (int *)(type metadata accessor for PairingRelationship() - 8);
      uint64_t v38 = v52;
      sub_25B1806D0(v36 + *(void *)(*(void *)v37 + 72) * i, (uint64_t)&v35[*(int *)(v52 + 48)], (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v39 = (uint64_t)v35;
      uint64_t v40 = (uint64_t)v53;
      sub_25B187574(v39, (uint64_t)v53, &qword_26A4D9EE8);
      uint64_t v41 = *(int *)(v38 + 48);
      uint64_t v42 = v3;
      uint64_t v43 = (uint64_t)&v3[v41];
      uint64_t v44 = v40 + v41;
      v34(v42, v40, v31);
      sub_25B1806D0(v44, v43, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      unint64_t v45 = (uint64_t *)(v43 + v37[10]);
      uint64_t v46 = *v45;
      unint64_t v47 = v45[1];
      sub_25B120090(*v45, v47);
      sub_25B180A5C(v43, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      if (v47) {
        break;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v42, v31);
      uint64_t result = sub_25B116DE0(v40, &qword_26A4D9EE8);
      uint64_t v3 = v42;
      unint64_t v22 = v55;
      int64_t v23 = v56;
      if (!v55) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t v55 = (v22 - 1) & v22;
      int64_t v56 = v23;
    }
    if (v47 - 1 >= 2) {
      sub_25B1200A4(v46, v47);
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v42, v31);
    sub_25B116DE0((uint64_t)v53, &qword_26A4D9EE8);
    uint64_t v48 = 1;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v50) {
      goto LABEL_31;
    }
    unint64_t v26 = *(void *)(v49 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_25B145184(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a3 + 184);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a3;
  void v11[3] = a1;
  v11[4] = a2;
  v11[5] = a4;
  v11[6] = a5;
  uint64_t v12 = *(void (**)(uint64_t (*)(uint64_t, uint64_t), void *, uint64_t, uint64_t))(v10 + 80);
  swift_retain();
  sub_25B1142EC(a1, a2);
  swift_retain();
  v12(sub_25B180B28, v11, ObjectType, v10);
  return swift_release();
}

uint64_t sub_25B145278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = *(NSObject **)(a3 + 232);
  id v13 = (void *)swift_allocObject();
  v13[2] = a3;
  void v13[3] = a4;
  v13[4] = a5;
  v13[5] = a6;
  v13[6] = a7;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_25B180B94;
  *(void *)(v14 + 24) = v13;
  v17[4] = sub_25B117398;
  v17[5] = v14;
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 1107296256;
  void v17[2] = sub_25B10D184;
  v17[3] = &block_descriptor_346;
  uint64_t v15 = _Block_copy(v17);
  swift_retain();
  sub_25B1142EC(a4, a5);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v12, v15);
  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v12) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B145408(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = *(void *)(a1 + 624);
  unint64_t v6 = *(void *)(a1 + 632);
  *(void *)(a1 + 624) = a2;
  *(void *)(a1 + 632) = a3;
  sub_25B1142EC(a2, a3);
  sub_25B111FF0(v5, v6);
  sub_25B12B124();
  sub_25B14564C();
  return a4(0);
}

uint64_t sub_25B14564C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v6 = *(void **)(v0 + 232);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  char v8 = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v8)
  {
    uint64_t v10 = type metadata accessor for BasicTimer();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
    uint64_t v12 = swift_allocObject();
    *(_DWORD *)(v12 + 16) = 0;
    *(void *)(v11 + 24) = v12;
    uint64_t v17 = v10;
    uint64_t v18 = &protocol witness table for BasicTimer;
    *(void *)&long long v16 = v11;
    type metadata accessor for KeepAliveTimer();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 56) = 0;
    sub_25B180BD4(&v16, v13 + 16);
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    swift_retain();
    sub_25B1C72C8((uint64_t)v7, (uint64_t)sub_25B180BEC, v14, 30.0);
    swift_release_n();
    if (*(void *)(v1 + 656))
    {
      swift_retain();
      sub_25B1C7520();
      swift_release();
    }
    *(void *)(v1 + 656) = v13;
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B145874()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(result + 656) = 0;
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_25B1458D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v30[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for PairingRelationship();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v36 = *(void *)(a1 + 16);
  int v35 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v33 = *(void *)(a1 + 48);
  uint64_t v34 = v12;
  int v14 = *(unsigned __int8 *)(a1 + 64);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = Strong;
    int v31 = v14;
    uint64_t v32 = v13;
    uint64_t v17 = Strong + 192;
    swift_beginAccess();
    sub_25B10FF48(v17, (uint64_t)&v40);
    uint64_t v18 = v42;
    uint64_t v19 = v43;
    __swift_project_boxed_opaque_existential_1(&v40, v42);
    MetadataStoring.pairingRelationship(remoteDeviceID:)(v10, v9, v18, *(void *)(v19 + 8), (uint64_t)v4);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_25B116DE0((uint64_t)v4, &qword_26A4D9610);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_25B290190();
      __swift_project_value_buffer(v20, (uint64_t)qword_26A4EB150);
      swift_retain();
      uint64_t v21 = sub_25B290160();
      os_log_type_t v22 = sub_25B2908A0();
      if (os_log_type_enabled(v21, v22))
      {
        int64_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        *(void *)&long long v40 = v24;
        *(_DWORD *)int64_t v23 = 136446210;
        uint64_t v25 = *(void *)(v16 + 528);
        unint64_t v26 = *(void *)(v16 + 536);
        swift_bridgeObjectRetain();
        v39[0] = sub_25B288E98(v25, v26, (uint64_t *)&v40);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25B107000, v21, v22, "(%{public}s) Could not handshake with unpaired destination", v23, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261160890](v24, -1, -1);
        MEMORY[0x261160890](v23, -1, -1);
        swift_release();
      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      sub_25B18095C((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
      *(void *)&long long v40 = v10;
      *((void *)&v40 + 1) = v9;
      uint64_t v41 = v36;
      uint64_t v42 = v11;
      LOBYTE(v43) = v35;
      uint64_t v44 = v34;
      uint64_t v45 = v33;
      int64_t v27 = (uint64_t *)&v8[*(int *)(v5 + 32)];
      unint64_t v29 = v27[1];
      v39[0] = *v27;
      uint64_t v28 = v39[0];
      v39[1] = v29;
      uint64_t v37 = v32;
      char v38 = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B120090(v28, v29);
      sub_25B145D20(&v40, v39, &v37);
      swift_release();
      sub_25B1200A4(v28, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B180A5C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    }
  }
}

uint64_t sub_25B145D20(long long *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v32 = *v3;
  uint64_t v7 = sub_25B290410();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v11 = a1[1];
  long long v33 = *a1;
  long long v34 = v11;
  long long v35 = a1[2];
  uint64_t v36 = *((void *)a1 + 6);
  uint64_t v12 = *a2;
  unint64_t v13 = a2[1];
  uint64_t v29 = *a3;
  int v28 = *((unsigned __int8 *)a3 + 8);
  int v14 = (void *)v3[29];
  void *v10 = v14;
  uint64_t v15 = *MEMORY[0x263F8F0E0];
  uint64_t v30 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 104);
  v30(v10, v15, v7);
  id v16 = v14;
  LOBYTE(v14) = sub_25B290440();
  int v31 = *(uint64_t (**)(void *, uint64_t))(v8 + 8);
  uint64_t result = v31(v10, v7);
  if (v14)
  {
    uint64_t v18 = swift_allocObject();
    long long v19 = v34;
    *(_OWORD *)(v18 + 24) = v33;
    *(void *)(v18 + 16) = v3;
    *(_OWORD *)(v18 + 40) = v19;
    *(_OWORD *)(v18 + 56) = v35;
    uint64_t v20 = v29;
    *(void *)(v18 + 72) = v36;
    *(void *)(v18 + 80) = v20;
    *(unsigned char *)(v18 + 88) = v28;
    *(void *)(v18 + 96) = v12;
    *(void *)(v18 + 104) = v13;
    *(void *)(v18 + 112) = v32;
    void *v10 = v16;
    v30(v10, v15, v7);
    id v21 = v16;
    swift_retain();
    sub_25B180D48((uint64_t)&v33);
    sub_25B120090(v12, v13);
    char v22 = sub_25B290440();
    uint64_t result = v31(v10, v7);
    if (v22)
    {
      uint64_t v23 = v3[63];
      uint64_t v24 = v3[64];
      __swift_project_boxed_opaque_existential_1(v3 + 60, v23);
      uint64_t v25 = (void *)swift_allocObject();
      v25[2] = v3;
      v25[3] = sub_25B180D2C;
      v25[4] = v18;
      unint64_t v26 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v24 + 8);
      swift_retain();
      swift_retain();
      v26(sub_25B187C10, v25, v23, v24);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_25B146004(void *a1, void *a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v128) = a5;
  uint64_t v132 = a4;
  uint64_t v117 = a3;
  BOOL v137 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EF0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v126 = (char *)v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v114 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v13 = (char *)v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PairingRelationship();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25B290080();
  long long v19 = *(void **)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  id v21 = (char *)v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v25 = v137;
    id v26 = a1;
    uint64_t v27 = a1;
    if (qword_26A4D98C0 != -1) {
      goto LABEL_54;
    }
    goto LABEL_3;
  }
  uint64_t v118 = (uint64_t)v21;
  uint64_t v133 = v24;
  char v134 = v17;
  uint64_t v127 = (uint64_t)v13;
  char v39 = (char)v128;
  os_log_type_t v125 = (void (**)(void *, uint64_t, uint64_t, uint64_t))v10;
  uint64_t v130 = v18;
  uint64_t v131 = v19;
  uint64_t v129 = v14;
  uint64_t v40 = v132;
  uint64_t v41 = v137;
  if (v117)
  {
    if (*(void *)(v117 + 16))
    {
      os_log_t v136 = *(os_log_t *)(v117 + 16);
      uint64_t v116 = v137 + 48;
      uint64_t v42 = v131;
      uint64_t v43 = v15;
      uint64_t v44 = v117 + ((*((unsigned __int8 *)v131 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v131 + 80));
      swift_bridgeObjectRetain();
      char v123 = (void (**)(uint64_t, uint64_t))(v41 + 24);
      swift_beginAccess();
      uint64_t v45 = (char *)v42[2];
      v42 += 2;
      uint64_t v46 = v42[7];
      unint64_t v47 = (unint64_t)(v42 + 5);
      uint64_t v124 = v42 + 4;
      uint64_t v121 = (void (**)(uint64_t, void *, uint64_t))(v42 + 2);
      uint64_t v122 = v46;
      uint64_t v131 = v42;
      unint64_t v119 = (void (**)(uint64_t, uint64_t))(v42 - 1);
      uint64_t v120 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
      uint64_t v48 = v44;
      os_log_type_t v125 = (void (**)(void *, uint64_t, uint64_t, uint64_t))v47;
      uint64_t v126 = v45;
      v114[0] = v47 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      *(void *)&long long v49 = 136446210;
      long long v115 = v49;
      v114[1] = MEMORY[0x263F8EE58] + 8;
      int64_t v50 = v133;
      uint64_t v51 = (uint64_t)v134;
      uint64_t v52 = v118;
      ((void (*)(void *, uint64_t, uint64_t))v45)(v133, v48, v18);
      while (1)
      {
        uint64_t v128 = *v125;
        v128(v50, 0, 1, v18);
        if (((unsigned int (*)(void *, uint64_t, uint64_t))*v124)(v50, 1, v18) == 1) {
          break;
        }
        uint64_t v135 = v48;
        (*v121)(v52, v50, v18);
        sub_25B10FF48((uint64_t)v123, (uint64_t)&v143);
        uint64_t v63 = *((void *)&v144 + 1);
        uint64_t v64 = *(void *)&v145[0];
        __swift_project_boxed_opaque_existential_1(&v143, *((uint64_t *)&v144 + 1));
        uint64_t v65 = *(void *)(v64 + 8);
        uint64_t v66 = v127;
        MetadataStoring.pairingRelationship(relationshipID:)(v52, v63, v65, v127);
        if ((*v120)(v66, 1, v14) == 1)
        {
          sub_25B116DE0(v66, &qword_26A4D9610);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v143);
          if (qword_26A4D98C0 != -1) {
            swift_once();
          }
          uint64_t v67 = sub_25B290190();
          __swift_project_value_buffer(v67, (uint64_t)qword_26A4EB150);
          swift_retain_n();
          uint64_t v68 = sub_25B290160();
          os_log_type_t v69 = sub_25B2908A0();
          if (os_log_type_enabled(v68, v69))
          {
            uint64_t v70 = swift_slowAlloc();
            uint64_t v71 = swift_slowAlloc();
            *(void *)&long long v143 = v71;
            *(_DWORD *)uint64_t v70 = v115;
            uint64_t v72 = v137[66];
            unint64_t v73 = v137[67];
            swift_bridgeObjectRetain();
            uint64_t v74 = v72;
            uint64_t v41 = v137;
            *(void *)(v70 + 4) = sub_25B288E98(v74, v73, (uint64_t *)&v143);
            swift_release_n();
            uint64_t v18 = v130;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_25B107000, v68, v69, "(%{public}s) Could not handshake with unpaired destination", (uint8_t *)v70, 0xCu);
            swift_arrayDestroy();
            uint64_t v75 = v71;
            uint64_t v14 = v129;
            MEMORY[0x261160890](v75, -1, -1);
            MEMORY[0x261160890](v70, -1, -1);
          }
          else
          {
            swift_release_n();
          }

          uint64_t v52 = v118;
          (*v119)(v118, v18);
          uint64_t v51 = (uint64_t)v134;
        }
        else
        {
          sub_25B18095C(v66, v51, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v143);
          uint64_t v53 = v41[51];
          uint64_t v54 = v137[52];
          __swift_project_boxed_opaque_existential_1(v116, v53);
          uint64_t v55 = &v134[*(int *)(v14 + 20)];
          uint64_t v56 = *((void *)v55 + 1);
          char v57 = v55[48];
          uint64_t v58 = *((void *)v55 + 20);
          uint64_t v59 = *((void *)v55 + 21);
          *(void *)&long long v143 = *(void *)v55;
          *((void *)&v143 + 1) = v56;
          *(void *)&long long v144 = v58;
          *((void *)&v144 + 1) = v59;
          LOBYTE(v145[0]) = v57;
          *(_OWORD *)((char *)v145 + 8) = *((_OWORD *)v55 + 2);
          uint64_t v147 = v40;
          char v148 = v39;
          unint64_t v60 = *(void (**)(long long *, uint64_t *, uint64_t, uint64_t))(v54 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v61 = v53;
          uint64_t v51 = (uint64_t)v134;
          uint64_t v62 = v54;
          uint64_t v41 = v137;
          v60(&v143, &v147, v61, v62);
          uint64_t v40 = v132;
          uint64_t v14 = v129;
          uint64_t v18 = v130;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_25B180A5C(v51, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          (*v119)(v52, v18);
        }
        int64_t v50 = v133;
        uint64_t v48 = v135 + v122;
        os_log_t v136 = (os_log_t)((char *)v136 - 1);
        if (!v136)
        {
          v128(v133, 1, 1, v18);
          break;
        }
        ((void (*)(void *, uint64_t, uint64_t))v126)(v133, v48, v18);
      }
    }
    else
    {
      uint64_t v113 = (void (*)(void *, uint64_t, uint64_t, uint64_t))v131[7];
      swift_bridgeObjectRetain();
      v113(v133, 1, 1, v18);
    }
    swift_bridgeObjectRelease();
    return;
  }
  swift_beginAccess();
  sub_25B10FF48((uint64_t)(v41 + 24), (uint64_t)&v143);
  uint64_t v25 = (void *)*((void *)&v144 + 1);
  uint64_t v77 = *(void *)&v145[0];
  __swift_project_boxed_opaque_existential_1(&v143, *((uint64_t *)&v144 + 1));
  uint64_t v78 = (*(uint64_t (**)(void *))(*(void *)(*(void *)(v77 + 8) + 8) + 32))(v25);
  uint64_t v79 = *(void *)(v78 + 64);
  unint64_t v119 = (void (**)(uint64_t, uint64_t))(v78 + 64);
  uint64_t v122 = v78;
  uint64_t v80 = 1 << *(unsigned char *)(v78 + 32);
  uint64_t v81 = -1;
  if (v80 < 64) {
    uint64_t v81 = ~(-1 << v80);
  }
  unint64_t v82 = v81 & v79;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v143);
  uint64_t v127 = 0;
  uint64_t v120 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((unint64_t)(v80 + 63) >> 6);
  uint64_t v121 = (void (**)(uint64_t, void *, uint64_t))(v131 + 2);
  char v123 = (void (**)(uint64_t, uint64_t))(v131 + 1);
  uint64_t v124 = v41 + 48;
  uint64_t v118 = (uint64_t)v120 - 1;
  uint64_t v83 = &qword_26A4D9EE8;
  uint64_t v84 = (uint64_t)v125;
  if (!v82) {
    goto LABEL_29;
  }
LABEL_27:
  unint64_t v101 = __clz(__rbit64(v82));
  uint64_t v102 = ((v82 - 1) & v82);
  uint64_t v27 = v126;
  uint64_t v103 = v101 | (v127 << 6);
  int v104 = v137;
LABEL_28:
  uint64_t v105 = v122;
  ((void (*)(void *, uint64_t, uint64_t))v131[2])(v27, *(void *)(v122 + 48) + v131[9] * v103, v18);
  uint64_t v106 = *(void *)(v105 + 56) + *(void *)(v15 + 72) * v103;
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(v83);
  sub_25B1806D0(v106, (uint64_t)v27 + *(int *)(v107 + 48), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v27, 0, 1, v107);
  while (1)
  {
    sub_25B187574((uint64_t)v27, v84, &qword_26A4D9EF0);
    uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(v83);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 48))(v84, 1, v112) == 1)
    {
      swift_release();
      return;
    }
    uint64_t v85 = v84 + *(int *)(v112 + 48);
    uint64_t v86 = v104[51];
    char v134 = (char *)v104[52];
    uint64_t v135 = v86;
    uint64_t v133 = __swift_project_boxed_opaque_existential_1(v124, v86);
    uint64_t v87 = (long long *)(v85 + *(int *)(v129 + 20));
    long long v88 = v87[9];
    v145[6] = v87[8];
    v145[7] = v88;
    long long v146 = v87[10];
    long long v89 = v87[5];
    v145[2] = v87[4];
    v145[3] = v89;
    long long v90 = v87[7];
    v145[4] = v87[6];
    v145[5] = v90;
    long long v91 = v87[3];
    v145[0] = v87[2];
    v145[1] = v91;
    long long v92 = v87[1];
    long long v143 = *v87;
    long long v144 = v92;
    sub_25B1172F8((uint64_t)&v143);
    sub_25B180A5C(v85, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v93 = v15;
    uint64_t v25 = (void *)*((void *)&v143 + 1);
    unint64_t v94 = v143;
    os_log_t v136 = v102;
    unint64_t v95 = v83;
    unint64_t v97 = *((void *)&v145[0] + 1);
    unint64_t v96 = *(void *)&v145[0];
    char v98 = v145[1];
    unint64_t v100 = *((void *)&v146 + 1);
    unint64_t v99 = v146;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B11DEBC((uint64_t)&v143);
    v140[0] = __PAIR128__((unint64_t)v25, v94);
    uint64_t v15 = v93;
    v140[1] = __PAIR128__(v100, v99);
    char v141 = v98;
    uint64_t v84 = (uint64_t)v125;
    unsigned long long v142 = __PAIR128__(v97, v96);
    uint64_t v83 = v95;
    unint64_t v82 = (unint64_t)v136;
    uint64_t v138 = v132;
    char v139 = (char)v128;
    (*((void (**)(_OWORD *, uint64_t *, uint64_t))v134 + 2))(v140, &v138, v135);
    uint64_t v18 = v130;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*v123)(v84, v18);
    if (v82) {
      goto LABEL_27;
    }
LABEL_29:
    uint64_t v27 = v126;
    uint64_t v108 = v127 + 1;
    int v104 = v137;
    if (__OFADD__(v127, 1)) {
      break;
    }
    if (v108 < (uint64_t)v120)
    {
      unint64_t v109 = (unint64_t)v119[v108];
      if (v109) {
        goto LABEL_32;
      }
      uint64_t v110 = v127 + 2;
      ++v127;
      if (v108 + 1 < (uint64_t)v120)
      {
        unint64_t v109 = (unint64_t)v119[v110];
        if (v109) {
          goto LABEL_35;
        }
        uint64_t v127 = v108 + 1;
        if (v108 + 2 < (uint64_t)v120)
        {
          unint64_t v109 = (unint64_t)v119[v108 + 2];
          if (v109)
          {
            v108 += 2;
            goto LABEL_32;
          }
          uint64_t v110 = v108 + 3;
          uint64_t v127 = v108 + 2;
          if (v108 + 3 < (uint64_t)v120)
          {
            unint64_t v109 = (unint64_t)v119[v110];
            if (!v109)
            {
              while (1)
              {
                uint64_t v108 = v110 + 1;
                if (__OFADD__(v110, 1)) {
                  break;
                }
                if (v108 >= (uint64_t)v120)
                {
                  uint64_t v127 = v118;
                  goto LABEL_46;
                }
                unint64_t v109 = (unint64_t)v119[v108];
                ++v110;
                if (v109) {
                  goto LABEL_32;
                }
              }
              __break(1u);
              return;
            }
LABEL_35:
            uint64_t v108 = v110;
LABEL_32:
            uint64_t v102 = ((v109 - 1) & v109);
            uint64_t v103 = __clz(__rbit64(v109)) + (v108 << 6);
            uint64_t v127 = v108;
            goto LABEL_28;
          }
        }
      }
    }
LABEL_46:
    uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(v83);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v27, 1, 1, v111);
    uint64_t v102 = 0;
  }
  __break(1u);
LABEL_54:
  swift_once();
LABEL_3:
  uint64_t v28 = sub_25B290190();
  __swift_project_value_buffer(v28, (uint64_t)qword_26A4EB150);
  id v29 = v27;
  id v30 = v27;
  swift_retain();
  os_log_t v136 = (os_log_t)sub_25B290160();
  os_log_type_t v31 = sub_25B2908A0();
  if (os_log_type_enabled(v136, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    long long v33 = (void *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(void *)&long long v143 = v34;
    *(_DWORD *)uint64_t v32 = 136446466;
    uint64_t v35 = v25[66];
    unint64_t v36 = v25[67];
    swift_bridgeObjectRetain();
    *(void *)&v140[0] = sub_25B288E98(v35, v36, (uint64_t *)&v143);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2114;
    id v37 = v27;
    uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)&v140[0] = v38;
    sub_25B2909C0();
    *long long v33 = v38;

    _os_log_impl(&dword_25B107000, v136, v31, "(%{public}s) Abandoning handshake request because prerequisites are not met: %{public}@", (uint8_t *)v32, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
    swift_arrayDestroy();
    MEMORY[0x261160890](v33, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x261160890](v34, -1, -1);
    MEMORY[0x261160890](v32, -1, -1);
  }
  else
  {

    swift_release();
    os_log_t v76 = v136;
  }
}

void sub_25B146DF0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v133 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v129 = (uint64_t)v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PairingRelationship();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v12 = a1;
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_25B290190();
    __swift_project_value_buffer(v13, (uint64_t)qword_26A4EB150);
    id v14 = a1;
    id v15 = a1;
    swift_retain();
    os_log_t v132 = (os_log_t)sub_25B290160();
    os_log_type_t v16 = sub_25B2908A0();
    if (os_log_type_enabled(v132, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(void *)&long long v138 = v19;
      *(_DWORD *)uint64_t v17 = 136446466;
      uint64_t v20 = *(void *)(v133 + 528);
      unint64_t v21 = *(void *)(v133 + 536);
      swift_bridgeObjectRetain();
      uint64_t v144 = sub_25B288E98(v20, v21, (uint64_t *)&v138);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2114;
      id v22 = a1;
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v144 = v23;
      sub_25B2909C0();
      void *v18 = v23;

      _os_log_impl(&dword_25B107000, v132, v16, "(%{public}s) Abandoning handshake request because prerequisites are not met: %{public}@", (uint8_t *)v17, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
      swift_arrayDestroy();
      MEMORY[0x261160890](v18, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x261160890](v19, -1, -1);
      MEMORY[0x261160890](v17, -1, -1);
    }
    else
    {

      swift_release();
      os_log_t v37 = v132;
    }
    return;
  }
  if (*(unsigned char *)(v133 + 600))
  {
    uint64_t v123 = v9;
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_25B290190();
    uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_26A4EB150);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    id v26 = sub_25B290160();
    os_log_type_t v27 = sub_25B2908A0();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v122 = v11;
    uint64_t v131 = v25;
    if (v28)
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(void *)&long long v138 = v30;
      *(_DWORD *)uint64_t v29 = 136446466;
      uint64_t v31 = *(void *)(v133 + 528);
      unint64_t v32 = *(void *)(v133 + 536);
      swift_bridgeObjectRetain();
      uint64_t v144 = sub_25B288E98(v31, v32, (uint64_t *)&v138);
      sub_25B2909C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      uint64_t v33 = swift_bridgeObjectRetain();
      uint64_t v34 = MEMORY[0x26115F080](v33, &type metadata for HandshakeDescriptor);
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      uint64_t v144 = sub_25B288E98(v34, v36, (uint64_t *)&v138);
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v26, v27, "(%{public}s) Discovered devices: %{public}s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v30, -1, -1);
      MEMORY[0x261160890](v29, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    uint64_t v45 = *(void *)(v133 + 184);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 16))(ObjectType, v45);
    uint64_t v48 = sub_25B227BD0(v47);
    swift_bridgeObjectRelease();
    uint64_t v49 = *(void *)(a3 + 16);
    if (!v49)
    {
LABEL_54:
      swift_bridgeObjectRelease();
      return;
    }
    int64_t v50 = (uint64_t *)(v133 + 648);
    uint64_t v51 = v133 + 192;
    swift_bridgeObjectRetain();
    uint64_t v116 = v50;
    swift_beginAccess();
    uint64_t v120 = v51;
    swift_beginAccess();
    unint64_t v119 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    uint64_t v117 = &v137;
    v112[1] = a3;
    uint64_t v52 = (os_log_t *)(a3 + 80);
    uint64_t v115 = 0x800000025B29C8A0;
    *(void *)&long long v53 = 136446466;
    long long v114 = v53;
    v112[2] = MEMORY[0x263F8EE58] + 8;
    *(void *)&long long v53 = 136446210;
    long long v118 = v53;
    uint64_t v54 = v48;
    uint64_t v124 = v48;
    while (1)
    {
      uint64_t v55 = (uint64_t)*(v52 - 6);
      unint64_t v56 = (unint64_t)*(v52 - 5);
      uint64_t v58 = (uint64_t)*(v52 - 4);
      uint64_t v57 = (uint64_t)*(v52 - 3);
      LODWORD(v59) = *((unsigned __int8 *)v52 - 16);
      uint64_t v60 = (uint64_t)*(v52 - 1);
      os_log_t v132 = *v52;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      char v61 = sub_25B2109B4(v55, v56, v54);
      swift_bridgeObjectRelease();
      if (v61) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_25B290160();
      os_log_type_t v74 = sub_25B2908A0();
      if (os_log_type_enabled(v64, v74))
      {
        uint64_t v75 = v55;
        uint64_t v76 = swift_slowAlloc();
        uint64_t v77 = v49;
        uint64_t v78 = swift_slowAlloc();
        *(void *)&long long v138 = v78;
        *(_DWORD *)uint64_t v76 = v118;
        swift_bridgeObjectRetain();
        *(void *)(v76 + 4) = sub_25B288E98(v75, v56, (uint64_t *)&v138);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25B107000, v64, v74, "Cannot handshake with discovered device: %{public}s, sync service does not know about it yet", (uint8_t *)v76, 0xCu);
        swift_arrayDestroy();
        uint64_t v79 = v78;
        uint64_t v49 = v77;
        MEMORY[0x261160890](v79, -1, -1);
        uint64_t v73 = v76;
LABEL_30:
        MEMORY[0x261160890](v73, -1, -1);

        goto LABEL_22;
      }

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
LABEL_22:
      v52 += 7;
      if (!--v49)
      {
        swift_bridgeObjectRelease();
        goto LABEL_54;
      }
    }
    uint64_t v128 = v60;
    uint64_t v130 = v55;
    if (v60 != 7
      || (uint64_t v62 = *v116,
          swift_bridgeObjectRetain(),
          char v63 = sub_25B2109B4(0xD000000000000011, v115, v62),
          swift_bridgeObjectRelease(),
          (v63 & 1) == 0))
    {
      LODWORD(v125) = sub_25B144C10();
      sub_25B10FF48(v120, (uint64_t)&v138);
      uint64_t v81 = v140;
      uint64_t v80 = v141;
      __swift_project_boxed_opaque_existential_1(&v138, v140);
      uint64_t v82 = *(void *)(v80 + 8);
      uint64_t v83 = v129;
      MetadataStoring.pairingRelationship(remoteDeviceID:)(v55, v56, v81, v82, v129);
      int v84 = (*v119)(v83, 1, v123);
      uint64_t v127 = v49;
      int v126 = v59;
      if (v84 == 1)
      {
        sub_25B116DE0(v129, &qword_26A4D9610);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v138);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v85 = sub_25B290160();
        os_log_type_t v86 = sub_25B2908A0();
        if (os_log_type_enabled(v85, v86))
        {
          uint64_t v87 = swift_slowAlloc();
          uint64_t v113 = swift_slowAlloc();
          *(void *)&long long v138 = v113;
          *(_DWORD *)uint64_t v87 = v114;
          uint64_t v121 = v57;
          uint64_t v88 = *(void *)(v133 + 528);
          unint64_t v89 = *(void *)(v133 + 536);
          swift_bridgeObjectRetain();
          uint64_t v136 = sub_25B288E98(v88, v89, (uint64_t *)&v138);
          sub_25B2909C0();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v87 + 12) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v136 = sub_25B288E98(v130, v56, (uint64_t *)&v138);
          uint64_t v57 = v121;
          sub_25B2909C0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_25B107000, v85, v86, "(%{public}s) Handshaking with unknown device: %{public}s", (uint8_t *)v87, 0x16u);
          uint64_t v90 = v113;
          swift_arrayDestroy();
          MEMORY[0x261160890](v90, -1, -1);
          MEMORY[0x261160890](v87, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
        }
        uint64_t v54 = v124;
        LOBYTE(v59) = v126;
        uint64_t v98 = v128;
        uint64_t v99 = 0;
        unint64_t v100 = 0;
        if (v125) {
          goto LABEL_48;
        }
LABEL_44:
        swift_retain();
        uint64_t v103 = sub_25B290160();
        os_log_type_t v104 = sub_25B2908A0();
        if (os_log_type_enabled(v103, v104))
        {
          uint64_t v105 = (uint8_t *)swift_slowAlloc();
          uint64_t v125 = swift_slowAlloc();
          *(void *)&long long v138 = v125;
          uint64_t v121 = v57;
          *(_DWORD *)uint64_t v105 = v118;
          uint64_t v113 = (uint64_t)(v105 + 4);
          uint64_t v106 = v58;
          uint64_t v107 = *(void *)(v133 + 528);
          unint64_t v59 = *(void *)(v133 + 536);
          swift_bridgeObjectRetain();
          uint64_t v108 = v107;
          uint64_t v58 = v106;
          uint64_t v136 = sub_25B288E98(v108, v59, (uint64_t *)&v138);
          uint64_t v57 = v121;
          sub_25B2909C0();
          swift_release();
          LOBYTE(v59) = v126;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25B107000, v103, v104, "(%{public}s) No existing paired relationship exists; attempting to pair",
            v105,
            0xCu);
          uint64_t v109 = v125;
          swift_arrayDestroy();
          uint64_t v110 = v109;
          uint64_t v54 = v124;
          MEMORY[0x261160890](v110, -1, -1);
          uint64_t v111 = v105;
          uint64_t v98 = v128;
          MEMORY[0x261160890](v111, -1, -1);
        }
        else
        {

          swift_release();
        }
        unint64_t v100 = 1;
      }
      else
      {
        sub_25B18095C(v129, (uint64_t)v122, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v138);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v91 = sub_25B290160();
        os_log_type_t v92 = sub_25B2908A0();
        int v93 = v92;
        if (os_log_type_enabled(v91, v92))
        {
          uint64_t v94 = swift_slowAlloc();
          uint64_t v121 = swift_slowAlloc();
          *(void *)&long long v138 = v121;
          *(_DWORD *)uint64_t v94 = v114;
          uint64_t v95 = *(void *)(v133 + 528);
          LODWORD(v113) = v93;
          unint64_t v96 = *(void *)(v133 + 536);
          swift_bridgeObjectRetain();
          uint64_t v136 = sub_25B288E98(v95, v96, (uint64_t *)&v138);
          LOBYTE(v59) = v126;
          sub_25B2909C0();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v94 + 12) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v136 = sub_25B288E98(v130, v56, (uint64_t *)&v138);
          sub_25B2909C0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_25B107000, v91, (os_log_type_t)v113, "(%{public}s) Handshaking with known device: %{public}s", (uint8_t *)v94, 0x16u);
          uint64_t v97 = v121;
          swift_arrayDestroy();
          MEMORY[0x261160890](v97, -1, -1);
          MEMORY[0x261160890](v94, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
        }
        uint64_t v98 = v128;
        if ((v125 & 1) == 0)
        {
          sub_25B180A5C((uint64_t)v122, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          uint64_t v99 = 0;
          uint64_t v54 = v124;
          goto LABEL_44;
        }
        uint64_t v101 = (uint64_t)v122;
        uint64_t v102 = (uint64_t *)&v122[*(int *)(v123 + 32)];
        uint64_t v99 = *v102;
        unint64_t v100 = v102[1];
        sub_25B120090(*v102, v100);
        sub_25B180A5C(v101, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v54 = v124;
        if (v100 == 1) {
          goto LABEL_44;
        }
      }
LABEL_48:
      *(void *)&long long v138 = v130;
      *((void *)&v138 + 1) = v56;
      uint64_t v139 = v58;
      uint64_t v140 = v57;
      LOBYTE(v141) = v59;
      uint64_t v142 = v98;
      os_log_t v143 = v132;
      uint64_t v136 = v99;
      unint64_t v137 = v100;
      uint64_t v134 = 0;
      char v135 = 0;
      sub_25B145D20(&v138, &v136, &v134);
      sub_25B1200A4(v99, v100);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v49 = v127;
      goto LABEL_22;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_25B290160();
    os_log_type_t v65 = sub_25B2908A0();
    if (!os_log_type_enabled(v64, v65))
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release();
      goto LABEL_22;
    }
    uint64_t v66 = swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v127 = v49;
    uint64_t v68 = v67;
    *(void *)&long long v138 = v67;
    *(_DWORD *)uint64_t v66 = v114;
    uint64_t v69 = *(void *)(v133 + 528);
    unint64_t v70 = *(void *)(v133 + 536);
    swift_bridgeObjectRetain();
    uint64_t v71 = v69;
    uint64_t v54 = v124;
    *(void *)(v66 + 4) = sub_25B288E98(v71, v70, (uint64_t *)&v138);
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v66 + 14) = sub_25B288E98(v130, v56, (uint64_t *)&v138);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v64, v65, "(%{public}s) Skipping handshake with old-chronod as chronod client is disabled: %{public}s", (uint8_t *)v66, 0x16u);
    swift_arrayDestroy();
    uint64_t v72 = v68;
    uint64_t v49 = v127;
    MEMORY[0x261160890](v72, -1, -1);
    uint64_t v73 = v66;
    goto LABEL_30;
  }
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_25B290190();
  __swift_project_value_buffer(v38, (uint64_t)qword_26A4EB150);
  swift_retain();
  char v39 = sub_25B290160();
  os_log_type_t v40 = sub_25B2908A0();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(void *)&long long v138 = v42;
    *(_DWORD *)uint64_t v41 = 136446210;
    uint64_t v43 = *(void *)(v133 + 528);
    unint64_t v44 = *(void *)(v133 + 536);
    swift_bridgeObjectRetain();
    uint64_t v144 = sub_25B288E98(v43, v44, (uint64_t *)&v138);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v39, v40, "%{public}s skipping handshake request, replicator is disabled", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v42, -1, -1);
    MEMORY[0x261160890](v41, -1, -1);
  }
  else
  {

    swift_release();
  }
}

void sub_25B148078(long long *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v1072 = a4;
  LODWORD(v1057) = a3;
  uint64_t v1070 = a5;
  uint64_t v8 = (uint8_t *)sub_25B290000();
  uint64_t v9 = *((void *)v8 - 1);
  v1060 = v8;
  v1061 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v1044 = ((char *)&v999 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v1054 = ((char *)&v999 - v13);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v1055 = ((char *)&v999 - v15);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v1068 = ((char *)&v999 - v17);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  os_log_t v1059 = (os_log_t)((char *)&v999 - v19);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  os_log_t v1058 = (os_log_t)((char *)&v999 - v21);
  MEMORY[0x270FA5388](v20);
  v1065 = ((char *)&v999 - v22);
  uint64_t v23 = sub_25B290080();
  uint64_t v1052 = *(void *)(v23 - 8);
  uint64_t v1053 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v1066 = (uint64_t)&v999 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v1062 = (uint64_t)&v999 - v26;
  uint64_t v1080 = type metadata accessor for PairingRelationship();
  v1076 = *(NSObject **)(v1080 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v1080);
  uint64_t v1011 = (uint64_t)&v999 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v1023 = (uint64_t)&v999 - v30;
  uint64_t v1010 = v31;
  MEMORY[0x270FA5388](v29);
  uint64_t v1035 = (uint64_t)&v999 - v32;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  uint64_t v1051 = *(void *)(v33 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v33 - 8);
  v1071 = ((char *)&v999 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v1073 = (char *)&v999 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v1043 = (uint64_t)&v999 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  v1045 = (char *)&v999 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v1042 = (uint64_t)&v999 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v1024 = (uint64_t)&v999 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v1027 = (uint64_t)&v999 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v1026 = (uint64_t)&v999 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v1025 = (uint64_t)&v999 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v1056 = (uint64_t)&v999 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v1013 = (uint64_t)&v999 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v1014 = (uint64_t)&v999 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v1019 = (uint64_t)&v999 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v1036 = (uint64_t)&v999 - v61;
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  v1012 = ((char *)&v999 - v63);
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  v1008 = ((char *)&v999 - v65);
  uint64_t v66 = MEMORY[0x270FA5388](v64);
  uint64_t v1031 = (uint64_t)&v999 - v67;
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  v1022 = ((char *)&v999 - v69);
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  uint64_t v1030 = (uint64_t)&v999 - v71;
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  v1021 = ((char *)&v999 - v73);
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  uint64_t v1020 = (uint64_t)&v999 - v75;
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  v1028 = (uint8_t *)&v999 - v77;
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  uint64_t v1067 = (uint64_t)&v999 - v79;
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  uint64_t v1029 = (uint64_t)&v999 - v81;
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  unint64_t v1049 = (unint64_t)&v999 - v83;
  uint64_t v84 = MEMORY[0x270FA5388](v82);
  os_log_type_t v86 = (char *)&v999 - v85;
  uint64_t v1050 = v87;
  MEMORY[0x270FA5388](v84);
  v1084 = ((char *)&v999 - v88);
  uint64_t v89 = sub_25B290190();
  uint64_t v1085 = *(void *)(v89 - 8);
  uint64_t v90 = MEMORY[0x270FA5388](v89);
  v1017 = (char *)&v999 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = MEMORY[0x270FA5388](v90);
  v1018 = (char *)&v999 - v93;
  uint64_t v94 = MEMORY[0x270FA5388](v92);
  v1038 = (char *)&v999 - v95;
  uint64_t v96 = MEMORY[0x270FA5388](v94);
  v1016 = (char *)&v999 - v97;
  uint64_t v98 = MEMORY[0x270FA5388](v96);
  v1015 = (char *)&v999 - v99;
  uint64_t v100 = MEMORY[0x270FA5388](v98);
  v1037 = (char *)&v999 - v101;
  uint64_t v102 = MEMORY[0x270FA5388](v100);
  v1009 = (char *)&v999 - v103;
  uint64_t v104 = MEMORY[0x270FA5388](v102);
  v1041 = (uint8_t *)&v999 - v105;
  uint64_t v106 = MEMORY[0x270FA5388](v104);
  v1032 = (uint8_t *)&v999 - v107;
  uint64_t v108 = MEMORY[0x270FA5388](v106);
  v1040 = (uint8_t *)&v999 - v109;
  uint64_t v110 = MEMORY[0x270FA5388](v108);
  v1039 = (char *)&v999 - v111;
  uint64_t v112 = MEMORY[0x270FA5388](v110);
  v1048 = (uint64_t (*)(void))((char *)&v999 - v113);
  uint64_t v114 = MEMORY[0x270FA5388](v112);
  v1047 = (char *)&v999 - v115;
  uint64_t v116 = MEMORY[0x270FA5388](v114);
  os_log_t v1046 = (os_log_t)((char *)&v999 - v117);
  uint64_t v118 = MEMORY[0x270FA5388](v116);
  v1033 = (char *)&v999 - v119;
  uint64_t v120 = MEMORY[0x270FA5388](v118);
  v1034 = (char *)&v999 - v121;
  uint64_t v122 = MEMORY[0x270FA5388](v120);
  v1083 = (char *)&v999 - v123;
  MEMORY[0x270FA5388](v122);
  v1082 = (uint8_t *)&v999 - v124;
  uint64_t v125 = sub_25B290410();
  uint64_t v126 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v128 = (Class *)((char *)&v999 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v129 = a1[9];
  long long v1141 = a1[8];
  long long v1142 = v129;
  long long v1143 = a1[10];
  long long v130 = a1[5];
  long long v1137 = a1[4];
  long long v1138 = v130;
  long long v131 = a1[7];
  long long v1139 = a1[6];
  long long v1140 = v131;
  long long v132 = a1[1];
  long long v1133 = *a1;
  long long v1134 = v132;
  long long v133 = a1[3];
  long long v1135 = a1[2];
  long long v1136 = v133;
  uint64_t v134 = *(NSObject **)a2;
  os_log_t v1074 = *(os_log_t *)(a2 + 8);
  char v135 = v5;
  Class isa = v5[29].isa;
  *uint64_t v128 = isa;
  (*(void (**)(Class *, void, uint64_t))(v126 + 104))(v128, *MEMORY[0x263F8F0E0], v125);
  unint64_t v137 = isa;
  LOBYTE(isa) = sub_25B290440();
  (*(void (**)(Class *, uint64_t))(v126 + 8))(v128, v125);
  if ((isa & 1) == 0)
  {
    __break(1u);
    goto LABEL_146;
  }
  os_log_t v1075 = v134;
  uint64_t v1086 = v89;
  v1081 = v86;
  long long v138 = (_OWORD *)swift_allocObject();
  uint64_t v139 = v138 + 1;
  long long v140 = v1142;
  v138[9] = v1141;
  v138[10] = v140;
  v138[11] = v1143;
  long long v141 = v1138;
  v138[5] = v1137;
  v138[6] = v141;
  long long v142 = v1140;
  v138[7] = v1139;
  v138[8] = v142;
  long long v143 = v1134;
  v138[1] = v1133;
  v138[2] = v143;
  long long v144 = v1136;
  uint64_t v145 = v138;
  v138[3] = v1135;
  v138[4] = v144;
  sub_25B187628((uint64_t)&v135[53], (uint64_t)&v1111, (uint64_t *)&unk_26A4D9F08);
  v1087 = v135;
  v1077 = v145;
  v1079 = v139;
  if (*((void *)&v1112 + 1))
  {
    long long v146 = v1133;
    sub_25B180BD4(&v1111, (uint64_t)&v1122);
    uint64_t v147 = *((void *)&v1123 + 1);
    uint64_t v148 = v1124;
    __swift_project_boxed_opaque_existential_1(&v1122, *((uint64_t *)&v1123 + 1));
    os_log_t v149 = *(uint64_t (**)(void, void, uint64_t, uint64_t))(v148 + 24);
    sub_25B1172F8((uint64_t)&v1133);
    swift_bridgeObjectRetain();
    uint64_t v150 = v149(v146, *((void *)&v146 + 1), v147, v148);
    int64_t v152 = v151;
    swift_bridgeObjectRelease();
    if (v152)
    {
      uint64_t v153 = sub_25B236504();
      (*(void (**)(uint8_t *, uint64_t, uint64_t))(v1085 + 16))(v1082, v153, v1086);
      uint64_t v154 = swift_allocObject();
      v1064 = (uint8_t *)v150;
      *(void *)(v154 + 16) = v150;
      *(void *)(v154 + 24) = v152;
      uint64_t v155 = v1087;
      swift_retain();
      v1063 = v152;
      swift_bridgeObjectRetain();
      swift_retain();
      os_log_t v1078 = (os_log_t)sub_25B290160();
      LODWORD(v1069) = sub_25B2908A0();
      uint64_t v156 = swift_allocObject();
      *(unsigned char *)(v156 + 16) = 34;
      v1005 = (uint8_t *)swift_allocObject();
      v1005[16] = 8;
      uint64_t v157 = swift_allocObject();
      *(void *)(v157 + 16) = sub_25B18382C;
      *(void *)(v157 + 24) = v155;
      uint64_t v158 = swift_allocObject();
      *(void *)(v158 + 16) = sub_25B1877E0;
      *(void *)(v158 + 24) = v157;
      uint64_t v159 = swift_allocObject();
      *(unsigned char *)(v159 + 16) = 34;
      uint64_t v160 = swift_allocObject();
      *(unsigned char *)(v160 + 16) = 8;
      uint64_t v161 = v160;
      uint64_t v162 = v145;
      uint64_t v163 = swift_allocObject();
      *(void *)(v163 + 16) = sub_25B1877E8;
      *(void *)(v163 + 24) = v154;
      uint64_t v164 = swift_allocObject();
      *(void *)(v164 + 16) = sub_25B1877E0;
      *(void *)(v164 + 24) = v163;
      uint64_t v165 = swift_allocObject();
      *(unsigned char *)(v165 + 16) = 34;
      uint64_t v166 = swift_allocObject();
      *(unsigned char *)(v166 + 16) = 8;
      uint64_t v167 = swift_allocObject();
      *(void *)(v167 + 16) = sub_25B183898;
      *(void *)(v167 + 24) = v162;
      uint64_t v168 = swift_allocObject();
      *(void *)(v168 + 16) = sub_25B1877E0;
      *(void *)(v168 + 24) = v167;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
      uint64_t v169 = swift_allocObject();
      *(_OWORD *)(v169 + 16) = xmmword_25B293220;
      *(void *)(v169 + 32) = sub_25B1877F4;
      *(void *)(v169 + 40) = v156;
      int64_t v170 = v1005;
      *(void *)(v169 + 48) = sub_25B1877F4;
      *(void *)(v169 + 56) = v170;
      *(void *)(v169 + 64) = sub_25B1877F0;
      *(void *)(v169 + 72) = v158;
      *(void *)(v169 + 80) = sub_25B1877F4;
      *(void *)(v169 + 88) = v159;
      *(void *)(v169 + 96) = sub_25B1877F4;
      *(void *)(v169 + 104) = v161;
      *(void *)(v169 + 112) = sub_25B1877F0;
      *(void *)(v169 + 120) = v164;
      *(void *)(v169 + 128) = sub_25B1877F4;
      *(void *)(v169 + 136) = v165;
      *(void *)(v169 + 144) = sub_25B1877F4;
      *(void *)(v169 + 152) = v166;
      *(void *)(v169 + 160) = sub_25B1877F0;
      *(void *)(v169 + 168) = v168;
      uint64_t v1006 = v156;
      long long v171 = v170;
      swift_retain();
      swift_retain();
      uint64_t v1007 = v158;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v1078, (os_log_type_t)v1069))
      {
        uint64_t v1000 = v164;
        uint64_t v1001 = v168;
        uint64_t v1004 = v165;
        long long v172 = (uint8_t *)sub_25B1C1508();
        uint64_t v173 = swift_slowAlloc();
        *(void *)&long long v1089 = 0;
        uint64_t v1002 = v173;
        v1003 = v172;
        *(void *)&v1145[0] = v173;
        *(_WORD *)long long v172 = 770;
        *(void *)&long long v1100 = v172 + 2;
        *(void *)&long long v1111 = sub_25B1877F4;
        *((void *)&v1111 + 1) = v1006;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        swift_release();
        *(void *)&long long v1111 = sub_25B1877F4;
        *((void *)&v1111 + 1) = v171;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        swift_release();
        *(void *)&long long v1111 = sub_25B1877F0;
        *((void *)&v1111 + 1) = v1007;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        swift_release();
        *(void *)&long long v1111 = sub_25B1877F4;
        *((void *)&v1111 + 1) = v159;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        swift_release();
        *(void *)&long long v1111 = sub_25B1877F4;
        *((void *)&v1111 + 1) = v161;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        swift_release();
        *(void *)&long long v1111 = sub_25B1877F0;
        *((void *)&v1111 + 1) = v1000;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        swift_release();
        *(void *)&long long v1111 = sub_25B1877F4;
        *((void *)&v1111 + 1) = v1004;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        swift_release();
        *(void *)&long long v1111 = sub_25B1877F4;
        *((void *)&v1111 + 1) = v166;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        swift_release();
        *(void *)&long long v1111 = sub_25B1877F0;
        *((void *)&v1111 + 1) = v1001;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        swift_release();
        _os_log_impl(&dword_25B107000, v1078, (os_log_type_t)v1069, "(%{public}s) Using persona ID %{public}s for device %{public}s", v1003, 0x20u);
        uint64_t v174 = v1002;
        swift_arrayDestroy();
        MEMORY[0x261160890](v174, -1, -1);
        sub_25B1C1590();
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(uint8_t *, uint64_t))(v1085 + 8))(v1082, v1086);
      uint64_t v139 = v1079;
      v1069 = 0;
      swift_beginAccess();
      uint64_t v145 = v1077;
      uint64_t v175 = v1063;
      v1077[22] = v1064;
      v145[23] = v175;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v1122);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v1122);
      v1069 = 0;
      uint64_t v139 = v1079;
    }
  }
  else
  {
    sub_25B1172F8((uint64_t)&v1133);
    sub_25B116DE0((uint64_t)&v1111, (uint64_t *)&unk_26A4D9F08);
    v1069 = 0;
  }
  uint64_t v176 = v1087 + 24;
  swift_beginAccess();
  os_log_t v1078 = v176;
  sub_25B10FF48((uint64_t)v176, (uint64_t)&v1122);
  uint64_t v177 = *((void *)&v1123 + 1);
  uint64_t v178 = v1124;
  __swift_project_boxed_opaque_existential_1(&v1122, *((uint64_t *)&v1123 + 1));
  swift_beginAccess();
  uint64_t v180 = v145[2];
  uint64_t v179 = v145[3];
  uint64_t v181 = *(void *)(v178 + 8);
  swift_bridgeObjectRetain();
  uint64_t v134 = v1084;
  MetadataStoring.pairingRelationship(remoteDeviceID:)(v180, v179, v177, v181, (uint64_t)v1084);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v1122);
  int64_t v182 = (void (*)(void))v1076[7].isa;
  uint64_t v183 = (uint64_t)v1081;
  uint64_t v184 = (int *)v1080;
  v1064 = (uint8_t *)&v1076[7];
  v1063 = v182;
  v182();
  long long v1122 = *((_OWORD *)v145 + 3);
  long long v1111 = xmmword_25B293210;
  if (ProtocolVersion.isCompatible(with:)(&v1111))
  {
    uint64_t v185 = v1085;
    uint64_t v186 = v183;
  }
  else
  {
    uint64_t v187 = sub_25B236504();
    (*(void (**)(char *, uint64_t, uint64_t))(v1085 + 16))(v1083, v187, v1086);
    long long v188 = v139[9];
    long long v1130 = v139[8];
    long long v1131 = v188;
    long long v1132 = v139[10];
    long long v189 = v139[5];
    long long v1126 = v139[4];
    long long v1127 = v189;
    long long v190 = v139[7];
    long long v1128 = v139[6];
    long long v1129 = v190;
    long long v191 = v139[1];
    long long v1122 = *v139;
    long long v1123 = v191;
    long long v192 = v139[3];
    long long v1124 = v139[2];
    long long v1125 = v192;
    long long v193 = (_OWORD *)swift_allocObject();
    long long v194 = v139[9];
    v193[9] = v139[8];
    v193[10] = v194;
    v193[11] = v139[10];
    long long v195 = v139[5];
    v193[5] = v139[4];
    v193[6] = v195;
    long long v196 = v139[7];
    v193[7] = v139[6];
    v193[8] = v196;
    long long v197 = v139[1];
    v193[1] = *v139;
    v193[2] = v197;
    long long v198 = v139[3];
    v193[3] = v139[2];
    v193[4] = v198;
    long long v199 = v1087;
    swift_retain();
    sub_25B1172F8((uint64_t)&v1122);
    uint64_t v1007 = sub_25B290160();
    LODWORD(v1082) = sub_25B2908A0();
    uint64_t v200 = swift_allocObject();
    *(unsigned char *)(v200 + 16) = 34;
    uint64_t v201 = swift_allocObject();
    *(unsigned char *)(v201 + 16) = 8;
    uint64_t v202 = swift_allocObject();
    *(void *)(v202 + 16) = sub_25B187C14;
    *(void *)(v202 + 24) = v199;
    uint64_t v203 = swift_allocObject();
    *(void *)(v203 + 16) = sub_25B182A70;
    *(void *)(v203 + 24) = v202;
    uint64_t v204 = swift_allocObject();
    *(unsigned char *)(v204 + 16) = 34;
    uint64_t v205 = swift_allocObject();
    *(unsigned char *)(v205 + 16) = 8;
    uint64_t v206 = swift_allocObject();
    *(void *)(v206 + 16) = sub_25B1829E4;
    *(void *)(v206 + 24) = v193;
    long long v207 = v1007;
    uint64_t v208 = swift_allocObject();
    *(void *)(v208 + 16) = sub_25B1877E0;
    *(void *)(v208 + 24) = v206;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
    uint64_t v209 = swift_allocObject();
    *(_OWORD *)(v209 + 16) = xmmword_25B293230;
    *(void *)(v209 + 32) = sub_25B182A58;
    *(void *)(v209 + 40) = v200;
    *(void *)(v209 + 48) = sub_25B1877F4;
    *(void *)(v209 + 56) = v201;
    *(void *)(v209 + 64) = sub_25B182A78;
    *(void *)(v209 + 72) = v203;
    *(void *)(v209 + 80) = sub_25B1877F4;
    *(void *)(v209 + 88) = v204;
    *(void *)(v209 + 96) = sub_25B1877F4;
    *(void *)(v209 + 104) = v205;
    *(void *)(v209 + 112) = sub_25B1877F0;
    *(void *)(v209 + 120) = v208;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v207, (os_log_type_t)v1082))
    {
      uint64_t v1006 = v205;
      long long v210 = (uint8_t *)sub_25B1C1508();
      uint64_t v211 = swift_slowAlloc();
      *(void *)&long long v1089 = 0;
      *(void *)&v1145[0] = v211;
      *(_WORD *)long long v210 = 514;
      *(void *)&long long v1100 = v210 + 2;
      *(void *)&long long v1111 = sub_25B182A58;
      *((void *)&v1111 + 1) = v200;
      uint64_t v134 = v1069;
      sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
      if (!v134)
      {
        v1005 = v210;
        swift_release();
        *(void *)&long long v1111 = sub_25B1877F4;
        *((void *)&v1111 + 1) = v201;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        swift_release();
        *(void *)&long long v1111 = sub_25B182A78;
        *((void *)&v1111 + 1) = v203;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        swift_release();
        *(void *)&long long v1111 = sub_25B1877F4;
        *((void *)&v1111 + 1) = v204;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        swift_release();
        *(void *)&long long v1111 = sub_25B1877F4;
        *((void *)&v1111 + 1) = v1006;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        swift_release();
        *(void *)&long long v1111 = sub_25B1877F0;
        *((void *)&v1111 + 1) = v208;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1111, (uint64_t)&v1100, (uint64_t)&v1089, (uint64_t)v1145);
        v1069 = 0;
        swift_release();
        _os_log_impl(&dword_25B107000, v207, (os_log_type_t)v1082, "(%{public}s) Remote device has an incompatible protocol: %{public}s", v1005, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261160890](v211, -1, -1);
        sub_25B1C1590();
      }
      goto LABEL_164;
    }

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v185 = v1085;
    (*(void (**)(char *, uint64_t))(v1085 + 8))(v1083, v1086);
    uint64_t v184 = (int *)v1080;
    uint64_t v186 = (uint64_t)v1081;
    uint64_t v134 = v1084;
  }
  char v212 = (char *)v1076[6].isa;
  v1082 = (uint8_t *)&v1076[6];
  int v213 = ((uint64_t (*)(NSObject *, uint64_t, int *))v212)(v134, 1, v184);
  v1083 = v212;
  uint64_t v89 = (uint64_t)v1074;
  if (v213 == 1)
  {
    if (!v1074)
    {
      uint64_t v359 = sub_25B236504();
      (*(void (**)(uint64_t (*)(void), uint64_t, uint64_t))(v185 + 16))(v1048, v359, v1086);
      v360 = v1079;
      long long v361 = v1079[9];
      long long v1119 = v1079[8];
      long long v1120 = v361;
      long long v1121 = v1079[10];
      long long v362 = v1079[5];
      long long v1115 = v1079[4];
      long long v1116 = v362;
      long long v363 = v1079[7];
      long long v1117 = v1079[6];
      long long v1118 = v363;
      long long v364 = v1079[1];
      long long v1111 = *v1079;
      long long v1112 = v364;
      long long v365 = v1079[3];
      long long v1113 = v1079[2];
      long long v1114 = v365;
      v366 = (_OWORD *)swift_allocObject();
      long long v367 = v360[9];
      v366[9] = v360[8];
      v366[10] = v367;
      v366[11] = v360[10];
      long long v368 = v360[5];
      v366[5] = v360[4];
      v366[6] = v368;
      long long v369 = v360[7];
      v366[7] = v360[6];
      v366[8] = v369;
      long long v370 = v360[1];
      v366[1] = *v360;
      v366[2] = v370;
      long long v371 = v360[3];
      v366[3] = v360[2];
      v366[4] = v371;
      v372 = v1087;
      swift_retain();
      sub_25B1172F8((uint64_t)&v1111);
      v1076 = sub_25B290160();
      LODWORD(v1075) = sub_25B2908A0();
      uint64_t v373 = swift_allocObject();
      *(unsigned char *)(v373 + 16) = 34;
      uint64_t v374 = swift_allocObject();
      *(unsigned char *)(v374 + 16) = 8;
      uint64_t v375 = swift_allocObject();
      *(void *)(v375 + 16) = sub_25B187C14;
      *(void *)(v375 + 24) = v372;
      uint64_t v376 = swift_allocObject();
      *(void *)(v376 + 16) = sub_25B1877E0;
      *(void *)(v376 + 24) = v375;
      uint64_t v377 = swift_allocObject();
      *(unsigned char *)(v377 + 16) = 34;
      uint64_t v378 = swift_allocObject();
      *(unsigned char *)(v378 + 16) = 8;
      uint64_t v379 = swift_allocObject();
      *(void *)(v379 + 16) = sub_25B1877E8;
      *(void *)(v379 + 24) = v366;
      uint64_t v380 = swift_allocObject();
      *(void *)(v380 + 16) = sub_25B1877E0;
      *(void *)(v380 + 24) = v379;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
      uint64_t v381 = swift_allocObject();
      *(_OWORD *)(v381 + 16) = xmmword_25B293230;
      *(void *)(v381 + 32) = sub_25B1877F4;
      *(void *)(v381 + 40) = v373;
      *(void *)(v381 + 48) = sub_25B1877F4;
      *(void *)(v381 + 56) = v374;
      *(void *)(v381 + 64) = sub_25B1877F0;
      *(void *)(v381 + 72) = v376;
      *(void *)(v381 + 80) = sub_25B1877F4;
      *(void *)(v381 + 88) = v377;
      *(void *)(v381 + 96) = sub_25B1877F4;
      *(void *)(v381 + 104) = v378;
      *(void *)(v381 + 112) = sub_25B1877F0;
      *(void *)(v381 + 120) = v380;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v382 = v1076;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v382, (os_log_type_t)v1075))
      {
        char v238 = (uint8_t *)sub_25B1C1508();
        uint64_t v239 = swift_slowAlloc();
        *(void *)&v1145[0] = 0;
        v1144[0] = v239;
        *(_WORD *)char v238 = 514;
        *(void *)&long long v1089 = v238 + 2;
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v373;
        uint64_t v134 = v1069;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        if (!v134)
        {
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v374;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v376;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v377;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v378;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v380;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          os_log_type_t v240 = v1075;
          unint64_t v241 = "(%{public}s) Remote device %{public}s is being introduced";
LABEL_45:
          _os_log_impl(&dword_25B107000, v1076, v240, v241, v238, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x261160890](v239, -1, -1);
          sub_25B1C1590();
        }
        goto LABEL_164;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t (*)(void), uint64_t))(v1085 + 8))(v1048, v1086);
LABEL_60:
      uint64_t v184 = (int *)v1080;
      uint64_t v473 = (uint64_t)v1081;
      v491 = v1079;
      uint64_t v89 = (uint64_t)v1082;
      v475 = v1083;
      os_log_t v477 = v1058;
      os_log_t v476 = v1059;
      uint64_t v478 = v1062;
      sub_25B290070();
      long long v492 = v491[8];
      long long v493 = v491[6];
      long long v1107 = v491[7];
      long long v1108 = v492;
      long long v494 = v491[8];
      long long v495 = v491[10];
      long long v1109 = v491[9];
      long long v1110 = v495;
      long long v496 = v491[4];
      long long v497 = v491[2];
      long long v1103 = v491[3];
      long long v1104 = v496;
      long long v498 = v491[4];
      long long v499 = v491[6];
      long long v1105 = v491[5];
      long long v1106 = v499;
      long long v500 = *v491;
      long long v501 = v491[2];
      long long v1101 = v491[1];
      long long v1102 = v501;
      long long v502 = *v491;
      long long v1097 = v494;
      long long v1098 = v1109;
      long long v1099 = v491[10];
      long long v1100 = v502;
      long long v1093 = v498;
      long long v1094 = v1105;
      long long v1095 = v493;
      long long v1096 = v1107;
      long long v1089 = v500;
      long long v1090 = v1101;
      long long v1091 = v497;
      long long v1092 = v1103;
      sub_25B1172F8((uint64_t)&v1100);
      uint64_t v490 = (uint64_t)v1065;
      sub_25B28FFD0();
      sub_25B28FFD0();
      v1145[0] = 0uLL;
LABEL_61:
      sub_25B28FFD0();
      uint64_t v503 = v1067;
      PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)(v478, &v1089, v490, (uint64_t)v477, (uint64_t *)v1145, (uint64_t)v476, v1067);
      ((void (*)(uint64_t, void, uint64_t, int *))v1063)(v503, 0, 1, v184);
      sub_25B185B64(v503, v473, &qword_26A4D9610);
      uint64_t v186 = v473;
      uint64_t v504 = (uint64_t)v1073;
      v505 = v475;
      goto LABEL_136;
    }
    if (v1074 == (os_log_t)1)
    {
      uint64_t v287 = sub_25B236504();
      (*(void (**)(char *, uint64_t, uint64_t))(v185 + 16))(v1047, v287, v1086);
      v288 = v1079;
      long long v289 = v1079[9];
      long long v1119 = v1079[8];
      long long v1120 = v289;
      long long v1121 = v1079[10];
      long long v290 = v1079[5];
      long long v1115 = v1079[4];
      long long v1116 = v290;
      long long v291 = v1079[7];
      long long v1117 = v1079[6];
      long long v1118 = v291;
      long long v292 = v1079[1];
      long long v1111 = *v1079;
      long long v1112 = v292;
      long long v293 = v1079[3];
      long long v1113 = v1079[2];
      long long v1114 = v293;
      v294 = (_OWORD *)swift_allocObject();
      long long v295 = v288[9];
      v294[9] = v288[8];
      v294[10] = v295;
      v294[11] = v288[10];
      long long v296 = v288[5];
      v294[5] = v288[4];
      v294[6] = v296;
      long long v297 = v288[7];
      v294[7] = v288[6];
      v294[8] = v297;
      long long v298 = v288[1];
      v294[1] = *v288;
      v294[2] = v298;
      long long v299 = v288[3];
      v294[3] = v288[2];
      v294[4] = v299;
      uint64_t v300 = v1087;
      swift_retain();
      sub_25B1172F8((uint64_t)&v1111);
      v1076 = sub_25B290160();
      LODWORD(v1075) = sub_25B2908A0();
      uint64_t v301 = swift_allocObject();
      *(unsigned char *)(v301 + 16) = 34;
      uint64_t v302 = swift_allocObject();
      *(unsigned char *)(v302 + 16) = 8;
      uint64_t v303 = swift_allocObject();
      *(void *)(v303 + 16) = sub_25B187C14;
      *(void *)(v303 + 24) = v300;
      uint64_t v304 = swift_allocObject();
      *(void *)(v304 + 16) = sub_25B1877E0;
      *(void *)(v304 + 24) = v303;
      uint64_t v305 = swift_allocObject();
      *(unsigned char *)(v305 + 16) = 34;
      uint64_t v306 = swift_allocObject();
      *(unsigned char *)(v306 + 16) = 8;
      uint64_t v307 = swift_allocObject();
      *(void *)(v307 + 16) = sub_25B1877E8;
      *(void *)(v307 + 24) = v294;
      uint64_t v308 = swift_allocObject();
      *(void *)(v308 + 16) = sub_25B1877E0;
      *(void *)(v308 + 24) = v307;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
      uint64_t v309 = swift_allocObject();
      *(_OWORD *)(v309 + 16) = xmmword_25B293230;
      *(void *)(v309 + 32) = sub_25B1877F4;
      *(void *)(v309 + 40) = v301;
      *(void *)(v309 + 48) = sub_25B1877F4;
      *(void *)(v309 + 56) = v302;
      *(void *)(v309 + 64) = sub_25B1877F0;
      *(void *)(v309 + 72) = v304;
      *(void *)(v309 + 80) = sub_25B1877F4;
      *(void *)(v309 + 88) = v305;
      *(void *)(v309 + 96) = sub_25B1877F4;
      *(void *)(v309 + 104) = v306;
      *(void *)(v309 + 112) = sub_25B1877F0;
      *(void *)(v309 + 120) = v308;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      long long v310 = v1076;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v310, (os_log_type_t)v1075))
      {
        uint64_t v311 = (uint8_t *)sub_25B1C1508();
        uint64_t v312 = swift_slowAlloc();
        *(void *)&v1145[0] = 0;
        v1144[0] = v312;
        *(_WORD *)uint64_t v311 = 514;
        *(void *)&long long v1089 = v311 + 2;
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v301;
        uint64_t v134 = v1069;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        if (!v134)
        {
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v302;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v304;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v305;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v306;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v308;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          _os_log_impl(&dword_25B107000, v1076, (os_log_type_t)v1075, "(%{public}s) Remote device %{public}s is pairing", v311, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x261160890](v312, -1, -1);
          sub_25B1C1590();
        }
        goto LABEL_164;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v1085 + 8))(v1047, v1086);
      uint64_t v184 = (int *)v1080;
      uint64_t v473 = (uint64_t)v1081;
      v474 = v1079;
      uint64_t v89 = (uint64_t)v1082;
      v475 = v1083;
      os_log_t v477 = v1058;
      os_log_t v476 = v1059;
      uint64_t v478 = v1062;
      sub_25B290070();
      long long v479 = v474[8];
      long long v480 = v474[6];
      long long v1107 = v474[7];
      long long v1108 = v479;
      long long v481 = v474[8];
      long long v482 = v474[10];
      long long v1109 = v474[9];
      long long v1110 = v482;
      long long v483 = v474[4];
      long long v484 = v474[2];
      long long v1103 = v474[3];
      long long v1104 = v483;
      long long v485 = v474[4];
      long long v486 = v474[6];
      long long v1105 = v474[5];
      long long v1106 = v486;
      long long v487 = *v474;
      long long v488 = v474[2];
      long long v1101 = v474[1];
      long long v1102 = v488;
      long long v489 = *v474;
      long long v1097 = v481;
      long long v1098 = v1109;
      long long v1099 = v474[10];
      long long v1100 = v489;
      long long v1093 = v485;
      long long v1094 = v1105;
      long long v1095 = v480;
      long long v1096 = v1107;
      long long v1089 = v487;
      long long v1090 = v1101;
      long long v1091 = v484;
      long long v1092 = v1103;
      sub_25B1172F8((uint64_t)&v1100);
      uint64_t v490 = (uint64_t)v1065;
      sub_25B28FFD0();
      sub_25B28FFD0();
      v1145[0] = xmmword_25B293270;
      goto LABEL_61;
    }
    if (v1074 == (os_log_t)2)
    {
      uint64_t v214 = sub_25B236504();
      (*(void (**)(os_log_t, uint64_t, uint64_t))(v185 + 16))(v1046, v214, v1086);
      long long v215 = v1079;
      long long v216 = v1079[9];
      long long v1119 = v1079[8];
      long long v1120 = v216;
      long long v1121 = v1079[10];
      long long v217 = v1079[5];
      long long v1115 = v1079[4];
      long long v1116 = v217;
      long long v218 = v1079[7];
      long long v1117 = v1079[6];
      long long v1118 = v218;
      long long v219 = v1079[1];
      long long v1111 = *v1079;
      long long v1112 = v219;
      long long v220 = v1079[3];
      long long v1113 = v1079[2];
      long long v1114 = v220;
      long long v221 = (_OWORD *)swift_allocObject();
      long long v222 = v215[9];
      v221[9] = v215[8];
      v221[10] = v222;
      v221[11] = v215[10];
      long long v223 = v215[5];
      v221[5] = v215[4];
      v221[6] = v223;
      long long v224 = v215[7];
      v221[7] = v215[6];
      v221[8] = v224;
      long long v225 = v215[1];
      v221[1] = *v215;
      v221[2] = v225;
      long long v226 = v215[3];
      v221[3] = v215[2];
      v221[4] = v226;
      long long v227 = v1087;
      swift_retain();
      sub_25B1172F8((uint64_t)&v1111);
      v1076 = sub_25B290160();
      LODWORD(v1075) = sub_25B2908A0();
      uint64_t v228 = swift_allocObject();
      *(unsigned char *)(v228 + 16) = 34;
      uint64_t v229 = swift_allocObject();
      *(unsigned char *)(v229 + 16) = 8;
      uint64_t v230 = swift_allocObject();
      *(void *)(v230 + 16) = sub_25B187C14;
      *(void *)(v230 + 24) = v227;
      uint64_t v231 = swift_allocObject();
      *(void *)(v231 + 16) = sub_25B1877E0;
      *(void *)(v231 + 24) = v230;
      uint64_t v232 = swift_allocObject();
      *(unsigned char *)(v232 + 16) = 34;
      uint64_t v233 = swift_allocObject();
      *(unsigned char *)(v233 + 16) = 8;
      uint64_t v234 = swift_allocObject();
      *(void *)(v234 + 16) = sub_25B1877E8;
      *(void *)(v234 + 24) = v221;
      uint64_t v235 = swift_allocObject();
      *(void *)(v235 + 16) = sub_25B1877E0;
      *(void *)(v235 + 24) = v234;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
      uint64_t v236 = swift_allocObject();
      *(_OWORD *)(v236 + 16) = xmmword_25B293230;
      *(void *)(v236 + 32) = sub_25B1877F4;
      *(void *)(v236 + 40) = v228;
      *(void *)(v236 + 48) = sub_25B1877F4;
      *(void *)(v236 + 56) = v229;
      *(void *)(v236 + 64) = sub_25B1877F0;
      *(void *)(v236 + 72) = v231;
      *(void *)(v236 + 80) = sub_25B1877F4;
      *(void *)(v236 + 88) = v232;
      *(void *)(v236 + 96) = sub_25B1877F4;
      *(void *)(v236 + 104) = v233;
      *(void *)(v236 + 112) = sub_25B1877F0;
      *(void *)(v236 + 120) = v235;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v237 = v1076;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v237, (os_log_type_t)v1075))
      {
        char v238 = (uint8_t *)sub_25B1C1508();
        uint64_t v239 = swift_slowAlloc();
        *(void *)&v1145[0] = 0;
        v1144[0] = v239;
        *(_WORD *)char v238 = 514;
        *(void *)&long long v1089 = v238 + 2;
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v228;
        uint64_t v134 = v1069;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        if (!v134)
        {
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v229;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v231;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v232;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v233;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v235;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          os_log_type_t v240 = v1075;
          unint64_t v241 = "(%{public}s) Remote device %{public}s can't become paired without first pairing";
          goto LABEL_45;
        }
        goto LABEL_164;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(os_log_t, uint64_t))(v1085 + 8))(v1046, v1086);
      goto LABEL_60;
    }
    os_log_t v427 = v1078;
    swift_beginAccess();
    sub_25B10FF48((uint64_t)v427, (uint64_t)&v1111);
    uint64_t v428 = *((void *)&v1112 + 1);
    uint64_t v429 = v1113;
    __swift_project_boxed_opaque_existential_1(&v1111, *((uint64_t *)&v1112 + 1));
    uint64_t v430 = *(void *)(v429 + 8);
    swift_bridgeObjectRetain();
    uint64_t v431 = v1049;
    uint64_t v432 = v89;
    os_log_t v433 = v1075;
    MetadataStoring.pairingRelationship(remoteDeviceID:)((uint64_t)v1075, v432, v428, v430, v1049);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v1111);
    uint64_t v434 = v1029;
    sub_25B187628(v431, v1029, &qword_26A4D9610);
    if (((unsigned int (*)(uint64_t, uint64_t, int *))v1083)(v434, 1, v184) == 1)
    {
      sub_25B116DE0(v434, &qword_26A4D9610);
      uint64_t v435 = sub_25B236504();
      (*(void (**)(char *, uint64_t, uint64_t))(v1085 + 16))(v1033, v435, v1086);
      v436 = v1079;
      long long v437 = v1079[9];
      long long v1119 = v1079[8];
      long long v1120 = v437;
      long long v1121 = v1079[10];
      long long v438 = v1079[5];
      long long v1115 = v1079[4];
      long long v1116 = v438;
      long long v439 = v1079[7];
      long long v1117 = v1079[6];
      long long v1118 = v439;
      long long v440 = v1079[1];
      long long v1111 = *v1079;
      long long v1112 = v440;
      long long v441 = v1079[3];
      long long v1113 = v1079[2];
      long long v1114 = v441;
      v442 = (_OWORD *)swift_allocObject();
      long long v443 = v436[9];
      v442[9] = v436[8];
      v442[10] = v443;
      v442[11] = v436[10];
      long long v444 = v436[5];
      v442[5] = v436[4];
      v442[6] = v444;
      long long v445 = v436[7];
      v442[7] = v436[6];
      v442[8] = v445;
      long long v446 = v436[1];
      v442[1] = *v436;
      v442[2] = v446;
      long long v447 = v436[3];
      v442[3] = v436[2];
      v442[4] = v447;
      uint64_t v448 = swift_allocObject();
      v1068 = v448;
      *(void *)(v448 + 16) = v433;
      *(void *)(v448 + 24) = v432;
      v449 = v1087;
      swift_retain();
      sub_25B1172F8((uint64_t)&v1111);
      os_log_t v1074 = (os_log_t)sub_25B290160();
      LODWORD(v1075) = sub_25B2908A0();
      v1076 = swift_allocObject();
      LOBYTE(v1076[2].isa) = 34;
      uint64_t v450 = swift_allocObject();
      v451 = v449;
      *(unsigned char *)(v450 + 16) = 8;
      uint64_t v452 = swift_allocObject();
      *(void *)(v452 + 16) = sub_25B187C14;
      *(void *)(v452 + 24) = v451;
      uint64_t v453 = swift_allocObject();
      *(void *)(v453 + 16) = sub_25B1877E0;
      *(void *)(v453 + 24) = v452;
      uint64_t v454 = swift_allocObject();
      *(unsigned char *)(v454 + 16) = 34;
      uint64_t v455 = swift_allocObject();
      *(unsigned char *)(v455 + 16) = 8;
      uint64_t v456 = swift_allocObject();
      *(void *)(v456 + 16) = sub_25B182B70;
      *(void *)(v456 + 24) = v442;
      uint64_t v457 = swift_allocObject();
      *(void *)(v457 + 16) = sub_25B1877E0;
      *(void *)(v457 + 24) = v456;
      uint64_t v458 = swift_allocObject();
      *(unsigned char *)(v458 + 16) = 34;
      uint64_t v459 = v455;
      uint64_t v460 = swift_allocObject();
      *(unsigned char *)(v460 + 16) = 8;
      v461 = (char *)v450;
      uint64_t v462 = swift_allocObject();
      v463 = v1068;
      *(void *)(v462 + 16) = sub_25B182B70;
      *(void *)(v462 + 24) = v463;
      uint64_t v464 = swift_allocObject();
      *(void *)(v464 + 16) = sub_25B1877E0;
      *(void *)(v464 + 24) = v462;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
      uint64_t v465 = swift_allocObject();
      *(_OWORD *)(v465 + 16) = xmmword_25B293220;
      *(void *)(v465 + 32) = sub_25B1877F4;
      *(void *)(v465 + 40) = v1076;
      *(void *)(v465 + 48) = sub_25B1877F4;
      *(void *)(v465 + 56) = v461;
      *(void *)(v465 + 64) = sub_25B1877F0;
      *(void *)(v465 + 72) = v453;
      *(void *)(v465 + 80) = sub_25B1877F4;
      *(void *)(v465 + 88) = v454;
      *(void *)(v465 + 96) = sub_25B1877F4;
      *(void *)(v465 + 104) = v459;
      *(void *)(v465 + 112) = sub_25B1877F0;
      *(void *)(v465 + 120) = v457;
      *(void *)(v465 + 128) = sub_25B1877F4;
      *(void *)(v465 + 136) = v458;
      *(void *)(v465 + 144) = sub_25B1877F4;
      *(void *)(v465 + 152) = v460;
      *(void *)(v465 + 160) = sub_25B1877F0;
      *(void *)(v465 + 168) = v464;
      swift_retain();
      swift_retain();
      uint64_t v1066 = v453;
      swift_retain();
      swift_retain();
      v466 = v459;
      swift_retain();
      v1068 = v457;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v467 = v1074;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v467, (os_log_type_t)v1075))
      {
        v468 = (uint8_t *)v460;
        v1055 = v461;
        uint64_t v1056 = v464;
        v1061 = v466;
        v469 = (uint8_t *)sub_25B1C1508();
        v470 = swift_slowAlloc();
        *(void *)&v1145[0] = 0;
        os_log_t v1057 = v470;
        v1144[0] = v470;
        v1060 = v469;
        *(_WORD *)v469 = 770;
        *(void *)&long long v1089 = v469 + 2;
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1076;
        uint64_t v134 = v1069;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        if (!v134)
        {
          v1069 = v468;
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v1055;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          uint64_t v471 = v1066;
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v471;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v454;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v1061;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v1068;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v458;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v1069;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v1056;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          _os_log_impl(&dword_25B107000, v1074, (os_log_type_t)v1075, "(%{public}s) Remote device %{public}s can't adopt relationship from unknown device %{public}s; pairing instead",
            v1060,
            0x20u);
          os_log_t v472 = v1057;
          swift_arrayDestroy();
          MEMORY[0x261160890](v472, -1, -1);
          sub_25B1C1590();
        }
        goto LABEL_164;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v1085 + 8))(v1033, v1086);
      uint64_t v184 = (int *)v1080;
      v644 = v1079;
      uint64_t v89 = (uint64_t)v1082;
      uint64_t v645 = v1062;
      sub_25B290070();
      long long v646 = v644[8];
      long long v647 = v644[6];
      long long v1107 = v644[7];
      long long v1108 = v646;
      long long v648 = v644[8];
      long long v649 = v644[10];
      long long v1109 = v644[9];
      long long v1110 = v649;
      long long v650 = v644[4];
      long long v651 = v644[2];
      long long v1103 = v644[3];
      long long v1104 = v650;
      long long v652 = v644[4];
      long long v653 = v644[6];
      long long v1105 = v644[5];
      long long v1106 = v653;
      long long v654 = *v644;
      long long v655 = v644[2];
      long long v1101 = v644[1];
      long long v1102 = v655;
      long long v656 = *v644;
      long long v1097 = v648;
      long long v1098 = v1109;
      long long v1099 = v644[10];
      long long v1100 = v656;
      long long v1093 = v652;
      long long v1094 = v1105;
      long long v1095 = v647;
      long long v1096 = v1107;
      long long v1089 = v654;
      long long v1090 = v1101;
      long long v1091 = v651;
      long long v1092 = v1103;
      sub_25B1172F8((uint64_t)&v1100);
      uint64_t v657 = (uint64_t)v1065;
      sub_25B28FFD0();
      os_log_t v658 = v1058;
      sub_25B28FFD0();
      v1145[0] = 0uLL;
      os_log_t v659 = v1059;
      sub_25B28FFD0();
      sub_25B116DE0(v1049, &qword_26A4D9610);
      uint64_t v660 = v1067;
      PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)(v645, &v1089, v657, (uint64_t)v658, (uint64_t *)v1145, (uint64_t)v659, v1067);
      ((void (*)(uint64_t, void, uint64_t, int *))v1063)(v660, 0, 1, v184);
      uint64_t v661 = v660;
      uint64_t v186 = (uint64_t)v1081;
      sub_25B185B64(v661, (uint64_t)v1081, &qword_26A4D9610);
      uint64_t v504 = (uint64_t)v1073;
      v505 = v1083;
LABEL_136:
      os_log_t v984 = v1078;
      swift_beginAccess();
      sub_25B10FF48((uint64_t)v984, (uint64_t)&v1100);
      uint64_t v134 = *((void *)&v1101 + 1);
      uint64_t v985 = v1102;
      __swift_project_boxed_opaque_existential_1(&v1100, *((uint64_t *)&v1101 + 1));
      sub_25B187628(v186, v504, &qword_26A4D9610);
      if (((unsigned int (*)(uint64_t, uint64_t, int *))v505)(v504, 1, v184) != 1)
      {
        (*(void (**)(uint64_t, NSObject *))(*(void *)(v985 + 16) + 88))(v504, v134);
        sub_25B180A5C(v504, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v1100);
        if (v1072) {
          sub_25B16A024();
        }
        if (((unsigned int (*)(uint64_t, uint64_t, int *))v505)(v186, 1, v184) != 1)
        {
          uint64_t v986 = v186 + v184[5];
          unint64_t v987 = *(void *)(v986 + 120);
          if (v987 >> 60 != 15)
          {
            uint64_t v988 = *(void *)(v986 + 112);
            uint64_t v989 = (uint64_t)v1087[63].isa;
            Class v990 = v1087[64].isa;
            __swift_project_boxed_opaque_existential_1(&v1087[60].isa, v989);
            uint64_t v991 = v89;
            v992 = v184;
            v993 = (void (*)(uint64_t, unint64_t, uint64_t, Class))*((void *)v990 + 2);
            sub_25B114300(v988, v987);
            uint64_t v994 = v989;
            v505 = v1083;
            v993(v988, v987, v994, v990);
            uint64_t v184 = v992;
            uint64_t v89 = v991;
            uint64_t v186 = (uint64_t)v1081;
            sub_25B111FF0(v988, v987);
          }
          os_log_t v995 = v1078;
          swift_beginAccess();
          sub_25B10FF48((uint64_t)v995, (uint64_t)&v1100);
          uint64_t v996 = *((void *)&v1101 + 1);
          uint64_t v997 = v1102;
          __swift_project_boxed_opaque_existential_1(&v1100, *((uint64_t *)&v1101 + 1));
          uint64_t v1088 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v997 + 8) + 8) + 32))(v996);
          sub_25B290210();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v1100);
          uint64_t v134 = v1071;
          sub_25B187628(v186, (uint64_t)v1071, &qword_26A4D9610);
          if (((unsigned int (*)(NSObject *, uint64_t, int *))v505)(v134, 1, v184) != 1)
          {
            sub_25B116DE0((uint64_t)v1084, &qword_26A4D9610);
            sub_25B18095C((uint64_t)v134, v1070, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
            sub_25B116DE0(v186, &qword_26A4D9610);
            swift_release();
            return;
          }
          goto LABEL_148;
        }
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        sub_25B1200A4((uint64_t)v1075, v1049);
        __break(1u);
        goto LABEL_150;
      }
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }
    sub_25B18095C(v434, v1035, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v506 = v1077[2];
    uint64_t v507 = v1077[3];
    swift_bridgeObjectRetain();
    v508 = v1087;
    LOBYTE(v506) = sub_25B1697AC(v506, v507, (uint64_t)v433, v432);
    swift_bridgeObjectRelease();
    if (v506) {
      unint64_t v509 = 2;
    }
    else {
      unint64_t v509 = 0;
    }
    uint64_t v510 = sub_25B236504();
    (*(void (**)(char *, uint64_t, uint64_t))(v1085 + 16))(v1034, v510, v1086);
    v511 = v1079;
    long long v512 = v1079[9];
    long long v1119 = v1079[8];
    long long v1120 = v512;
    long long v1121 = v1079[10];
    long long v513 = v1079[5];
    long long v1115 = v1079[4];
    long long v1116 = v513;
    long long v514 = v1079[7];
    long long v1117 = v1079[6];
    long long v1118 = v514;
    long long v515 = v1079[1];
    long long v1111 = *v1079;
    long long v1112 = v515;
    long long v516 = v1079[3];
    long long v1113 = v1079[2];
    long long v1114 = v516;
    v517 = (_OWORD *)swift_allocObject();
    long long v518 = v511[9];
    v517[9] = v511[8];
    v517[10] = v518;
    v517[11] = v511[10];
    long long v519 = v511[5];
    v517[5] = v511[4];
    v517[6] = v519;
    long long v520 = v511[7];
    v517[7] = v511[6];
    v517[8] = v520;
    long long v521 = v511[1];
    v517[1] = *v511;
    v517[2] = v521;
    long long v522 = v511[3];
    v517[3] = v511[2];
    v517[4] = v522;
    uint64_t v523 = swift_allocObject();
    *(void *)(v523 + 16) = v433;
    *(void *)(v523 + 24) = v432;
    uint64_t v524 = swift_allocObject();
    *(void *)(v524 + 16) = 0;
    *(void *)(v524 + 24) = v509;
    swift_retain();
    sub_25B1172F8((uint64_t)&v1111);
    uint64_t v1051 = v509;
    sub_25B120090(0, v509);
    os_log_t v1057 = (os_log_t)sub_25B290160();
    LODWORD(v1055) = sub_25B2908A0();
    v1068 = swift_allocObject();
    LOBYTE(v1068[2].isa) = 34;
    os_log_t v1075 = (os_log_t)swift_allocObject();
    LOBYTE(v1075[2].isa) = 8;
    uint64_t v525 = swift_allocObject();
    *(void *)(v525 + 16) = sub_25B187C14;
    *(void *)(v525 + 24) = v508;
    uint64_t v526 = swift_allocObject();
    *(void *)(v526 + 16) = sub_25B1877E0;
    *(void *)(v526 + 24) = v525;
    v1076 = swift_allocObject();
    LOBYTE(v1076[2].isa) = 34;
    os_log_t v1074 = (os_log_t)swift_allocObject();
    LOBYTE(v1074[2].isa) = 8;
    uint64_t v527 = swift_allocObject();
    *(void *)(v527 + 16) = sub_25B1877E8;
    *(void *)(v527 + 24) = v517;
    uint64_t v528 = swift_allocObject();
    *(void *)(v528 + 16) = sub_25B1877E0;
    *(void *)(v528 + 24) = v527;
    uint64_t v1066 = swift_allocObject();
    *(unsigned char *)(v1066 + 16) = 34;
    uint64_t v1050 = swift_allocObject();
    *(unsigned char *)(v1050 + 16) = 8;
    uint64_t v529 = swift_allocObject();
    *(void *)(v529 + 16) = sub_25B1877E8;
    *(void *)(v529 + 24) = v523;
    uint64_t v530 = swift_allocObject();
    v1054 = v530;
    *(void *)(v530 + 16) = sub_25B1877E0;
    *(void *)(v530 + 24) = v529;
    uint64_t v531 = swift_allocObject();
    *(unsigned char *)(v531 + 16) = 34;
    v532 = (uint64_t (*)(void))v531;
    uint64_t v1056 = swift_allocObject();
    *(unsigned char *)(v1056 + 16) = 8;
    uint64_t v533 = swift_allocObject();
    *(void *)(v533 + 16) = sub_25B182C08;
    *(void *)(v533 + 24) = v524;
    uint64_t v534 = swift_allocObject();
    *(void *)(v534 + 16) = sub_25B1877E0;
    *(void *)(v534 + 24) = v533;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
    uint64_t v535 = swift_allocObject();
    *(_OWORD *)(v535 + 16) = xmmword_25B293240;
    *(void *)(v535 + 32) = sub_25B1877F4;
    *(void *)(v535 + 40) = v1068;
    *(void *)(v535 + 48) = sub_25B1877F4;
    *(void *)(v535 + 56) = v1075;
    *(void *)(v535 + 64) = sub_25B1877F0;
    *(void *)(v535 + 72) = v526;
    *(void *)(v535 + 80) = sub_25B1877F4;
    *(void *)(v535 + 88) = v1076;
    *(void *)(v535 + 96) = sub_25B1877F4;
    *(void *)(v535 + 104) = v1074;
    *(void *)(v535 + 112) = sub_25B1877F0;
    *(void *)(v535 + 120) = v528;
    *(void *)(v535 + 128) = sub_25B1877F4;
    *(void *)(v535 + 136) = v1066;
    *(void *)(v535 + 144) = sub_25B1877F4;
    uint64_t v536 = v1050;
    *(void *)(v535 + 152) = v1050;
    *(void *)(v535 + 160) = sub_25B1877F0;
    *(void *)(v535 + 168) = v1054;
    *(void *)(v535 + 176) = sub_25B1877F4;
    *(void *)(v535 + 184) = v532;
    *(void *)(v535 + 192) = sub_25B1877F4;
    *(void *)(v535 + 200) = v1056;
    *(void *)(v535 + 208) = sub_25B1877F0;
    *(void *)(v535 + 216) = v534;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v537 = v1066;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    os_log_t v538 = v1057;
    if (os_log_type_enabled(v1057, (os_log_type_t)v1055))
    {
      v1045 = (char *)v534;
      os_log_t v539 = v1075;
      v1047 = (char *)v528;
      v1048 = v532;
      v540 = (uint8_t *)sub_25B1C1508();
      v541 = swift_slowAlloc();
      *(void *)&v1145[0] = 0;
      os_log_t v1046 = v541;
      v1144[0] = v541;
      *(_WORD *)v540 = 1026;
      *(void *)&long long v1089 = v540 + 2;
      *(void *)&long long v1100 = sub_25B1877F4;
      *((void *)&v1100 + 1) = v1068;
      uint64_t v134 = v1069;
      sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
      if (!v134)
      {
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v539;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        v542 = v1076;
        v1069 = v540;
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v526;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v542;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1074;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1047;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v537;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v536;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        uint64_t v543 = v1056;
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1054;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1048;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v543;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1045;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        _os_log_impl(&dword_25B107000, v1057, (os_log_type_t)v1055, "(%{public}s) Remote device %{public}s is adopting relationship from device %{public}s; new state is %{public}s",
          v1069,
          0x2Au);
        os_log_t v544 = v1046;
        swift_arrayDestroy();
        MEMORY[0x261160890](v544, -1, -1);
        sub_25B1C1590();
      }
      goto LABEL_161;
    }

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v1085 + 8))(v1034, v1086);
    uint64_t v184 = (int *)v1080;
    uint64_t v89 = (uint64_t)v1082;
    os_log_t v662 = v1078;
    swift_beginAccess();
    sub_25B10FF48((uint64_t)v662, (uint64_t)&v1100);
    uint64_t v663 = *((void *)&v1101 + 1);
    uint64_t v664 = v1102;
    __swift_project_boxed_opaque_existential_1(&v1100, *((uint64_t *)&v1101 + 1));
    uint64_t v665 = v1035;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v664 + 16) + 96))(v1035, v663);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v1100);
    uint64_t v666 = v1062;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1052 + 16))(v1062, v665, v1053);
    long long v667 = v1079[8];
    long long v668 = v1079[6];
    long long v1107 = v1079[7];
    long long v1108 = v667;
    long long v669 = v1079[8];
    long long v670 = v1079[10];
    long long v1109 = v1079[9];
    long long v1110 = v670;
    long long v671 = v1079[4];
    long long v672 = v1079[2];
    long long v1103 = v1079[3];
    long long v1104 = v671;
    long long v673 = v1079[4];
    long long v674 = v1079[6];
    long long v1105 = v1079[5];
    long long v1106 = v674;
    long long v675 = *v1079;
    long long v676 = v1079[2];
    long long v1101 = v1079[1];
    long long v1102 = v676;
    long long v677 = *v1079;
    long long v1097 = v669;
    long long v1098 = v1109;
    long long v1099 = v1079[10];
    long long v1100 = v677;
    long long v1093 = v673;
    long long v1094 = v1105;
    long long v1095 = v668;
    long long v1096 = v1107;
    long long v1089 = v675;
    long long v1090 = v1101;
    long long v1091 = v672;
    long long v1092 = v1103;
    sub_25B1172F8((uint64_t)&v1100);
    uint64_t v678 = (uint64_t)v1065;
    sub_25B28FFD0();
    os_log_t v679 = v1058;
    sub_25B28FFD0();
    sub_25B116DE0(v1049, &qword_26A4D9610);
    *(void *)&v1145[0] = 0;
    *((void *)&v1145[0] + 1) = v1051;
    os_log_t v680 = v1059;
    ((void (*)(os_log_t, uint64_t, uint8_t *))v1061[2].isa)(v1059, v665 + v184[9], v1060);
    sub_25B180A5C(v665, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v681 = v1067;
    PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)(v666, &v1089, v678, (uint64_t)v679, (uint64_t *)v1145, (uint64_t)v680, v1067);
    ((void (*)(uint64_t, void, uint64_t, int *))v1063)(v681, 0, 1, v184);
    uint64_t v186 = (uint64_t)v1081;
    sub_25B185B64(v681, (uint64_t)v1081, &qword_26A4D9610);
LABEL_135:
    v505 = v1083;
    uint64_t v504 = (uint64_t)v1073;
    goto LABEL_136;
  }
  LODWORD(v1057) = v1057;
  if (!v1074)
  {
    v383 = v1028;
    sub_25B187628((uint64_t)v134, (uint64_t)v1028, &qword_26A4D9610);
    if (((unsigned int (*)(uint8_t *, uint64_t, int *))v1083)(v383, 1, v184) == 1)
    {
LABEL_153:
      __break(1u);
      goto LABEL_154;
    }
    v384 = (uint64_t *)&v383[v184[8]];
    uint64_t v385 = *v384;
    unint64_t v386 = v384[1];
    sub_25B120090(*v384, v386);
    sub_25B180A5C((uint64_t)v383, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    v387 = v1039;
    v388 = v1040;
    if (v386 - 1 <= 1)
    {
      uint64_t v389 = sub_25B236504();
      (*(void (**)(char *, uint64_t, uint64_t))(v1085 + 16))(v387, v389, v1086);
      v390 = v1079;
      long long v391 = v1079[9];
      long long v1119 = v1079[8];
      long long v1120 = v391;
      long long v1121 = v1079[10];
      long long v392 = v1079[5];
      long long v1115 = v1079[4];
      long long v1116 = v392;
      long long v393 = v1079[7];
      long long v1117 = v1079[6];
      long long v1118 = v393;
      long long v394 = v1079[1];
      long long v1111 = *v1079;
      long long v1112 = v394;
      long long v395 = v1079[3];
      long long v1113 = v1079[2];
      long long v1114 = v395;
      v396 = (_OWORD *)swift_allocObject();
      long long v397 = v390[9];
      v396[9] = v390[8];
      v396[10] = v397;
      v396[11] = v390[10];
      long long v398 = v390[5];
      v396[5] = v390[4];
      v396[6] = v398;
      long long v399 = v390[7];
      v396[7] = v390[6];
      v396[8] = v399;
      long long v400 = v390[1];
      v396[1] = *v390;
      v396[2] = v400;
      long long v401 = v390[3];
      v396[3] = v390[2];
      v396[4] = v401;
      uint64_t v402 = v1067;
      sub_25B187628((uint64_t)v134, v1067, &qword_26A4D9610);
      unint64_t v403 = (*(unsigned __int8 *)(v1051 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1051 + 80);
      uint64_t v1062 = swift_allocObject();
      sub_25B187574(v402, v1062 + v403, &qword_26A4D9610);
      v404 = v1087;
      swift_retain();
      sub_25B1172F8((uint64_t)&v1111);
      os_log_t v1075 = (os_log_t)sub_25B290160();
      LODWORD(v1074) = sub_25B2908A0();
      v1076 = swift_allocObject();
      LOBYTE(v1076[2].isa) = 34;
      uint64_t v405 = swift_allocObject();
      v406 = v404;
      *(unsigned char *)(v405 + 16) = 8;
      uint64_t v407 = swift_allocObject();
      *(void *)(v407 + 16) = sub_25B187C14;
      *(void *)(v407 + 24) = v406;
      uint64_t v89 = swift_allocObject();
      *(void *)(v89 + 16) = sub_25B1877E0;
      *(void *)(v89 + 24) = v407;
      uint64_t v408 = swift_allocObject();
      *(unsigned char *)(v408 + 16) = 34;
      uint64_t v409 = swift_allocObject();
      *(unsigned char *)(v409 + 16) = 8;
      uint64_t v410 = swift_allocObject();
      *(void *)(v410 + 16) = sub_25B1877E8;
      *(void *)(v410 + 24) = v396;
      uint64_t v411 = swift_allocObject();
      *(void *)(v411 + 16) = sub_25B1877E0;
      *(void *)(v411 + 24) = v410;
      uint64_t v412 = swift_allocObject();
      *(unsigned char *)(v412 + 16) = 34;
      uint64_t v413 = swift_allocObject();
      *(unsigned char *)(v413 + 16) = 8;
      uint64_t v414 = v405;
      uint64_t v415 = swift_allocObject();
      uint64_t v416 = v1062;
      *(void *)(v415 + 16) = sub_25B183100;
      *(void *)(v415 + 24) = v416;
      uint64_t v417 = swift_allocObject();
      *(void *)(v417 + 16) = sub_25B1877E0;
      *(void *)(v417 + 24) = v415;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
      uint64_t v418 = swift_allocObject();
      *(_OWORD *)(v418 + 16) = xmmword_25B293220;
      *(void *)(v418 + 32) = sub_25B1877F4;
      *(void *)(v418 + 40) = v1076;
      *(void *)(v418 + 48) = sub_25B1877F4;
      *(void *)(v418 + 56) = v414;
      *(void *)(v418 + 64) = sub_25B1877F0;
      *(void *)(v418 + 72) = v89;
      *(void *)(v418 + 80) = sub_25B1877F4;
      *(void *)(v418 + 88) = v408;
      *(void *)(v418 + 96) = sub_25B1877F4;
      *(void *)(v418 + 104) = v409;
      *(void *)(v418 + 112) = sub_25B1877F0;
      *(void *)(v418 + 120) = v411;
      *(void *)(v418 + 128) = sub_25B1877F4;
      *(void *)(v418 + 136) = v412;
      *(void *)(v418 + 144) = sub_25B1877F4;
      *(void *)(v418 + 152) = v413;
      *(void *)(v418 + 160) = sub_25B1877F0;
      *(void *)(v418 + 168) = v417;
      swift_retain();
      uint64_t v1062 = v414;
      swift_retain();
      swift_retain();
      uint64_t v1067 = v408;
      uint64_t v419 = v411;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v420 = v1075;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v420, (os_log_type_t)v1074))
      {
        uint64_t v421 = v89;
        uint64_t v422 = v417;
        uint64_t v1051 = v409;
        os_log_t v1058 = (os_log_t)v412;
        os_log_t v1059 = (os_log_t)v413;
        v423 = (uint8_t *)sub_25B1C1508();
        v424 = (uint8_t *)swift_slowAlloc();
        *(void *)&v1145[0] = 0;
        v1144[0] = v424;
        *(_WORD *)v423 = 770;
        *(void *)&long long v1089 = v423 + 2;
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1076;
        uint64_t v134 = v1069;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        if (!v134)
        {
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v1062;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          v1069 = v424;
          v1076 = v423;
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v421;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v1067;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          os_log_t v425 = v1058;
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v1051;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v419;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v425;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v1059;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v422;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          _os_log_impl(&dword_25B107000, v1075, (os_log_type_t)v1074, "(%{public}s) Relationship %{public}s switched from %{public}s to introduced", (uint8_t *)v1076, 0x20u);
          v426 = v1069;
          swift_arrayDestroy();
          MEMORY[0x261160890](v426, -1, -1);
          sub_25B1C1590();
        }
        goto LABEL_164;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v1085 + 8))(v1039, v1086);
      uint64_t v184 = (int *)v1080;
      uint64_t v186 = (uint64_t)v1081;
      v846 = v1083;
      uint64_t v134 = v1084;
      uint64_t v847 = v1020;
      sub_25B187628((uint64_t)v1084, v1020, &qword_26A4D9610);
      int v848 = ((uint64_t (*)(uint64_t, uint64_t, int *))v846)(v847, 1, v184);
      uint64_t v849 = v1066;
      if (v848 == 1) {
        goto LABEL_158;
      }
      sub_25B130988(v847);
      sub_25B180A5C(v847, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      os_log_t v1075 = 0;
      uint64_t v89 = 0;
LABEL_121:
      uint64_t v952 = v1056;
      sub_25B187628(v186, v1056, &qword_26A4D9610);
      if (((unsigned int (*)(uint64_t, uint64_t, int *))v1083)(v952, 1, v184) == 1)
      {
        unint64_t v1049 = v89;
        sub_25B116DE0(v952, &qword_26A4D9610);
        if (v1057)
        {
          v953 = v1061;
          uint64_t v89 = (uint64_t)v1082;
          if (v1057 == 1)
          {
            uint64_t v954 = v1026;
            sub_25B187628((uint64_t)v134, v1026, &qword_26A4D9610);
            if (((unsigned int (*)(uint64_t, uint64_t, int *))v1083)(v954, 1, v184) == 1)
            {
LABEL_154:
              sub_25B1200A4((uint64_t)v1075, v1049);
              __break(1u);
              goto LABEL_155;
            }
            v955 = (void (*)(NSObject *, uint64_t, uint8_t *))v953[2].isa;
            v955(v1068, v954 + v184[6], v1060);
            sub_25B180A5C(v954, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
            sub_25B28FFD0();
            uint64_t v956 = (uint64_t)v1045;
          }
          else
          {
            uint64_t v958 = v1027;
            sub_25B187628((uint64_t)v134, v1027, &qword_26A4D9610);
            v959 = v1083;
            if (((unsigned int (*)(uint64_t, uint64_t, int *))v1083)(v958, 1, v184) == 1)
            {
LABEL_156:
              sub_25B1200A4((uint64_t)v1075, v1049);
              __break(1u);
              goto LABEL_157;
            }
            uint64_t v960 = (uint64_t)v134;
            uint64_t v134 = v953 + 2;
            v961 = (void (*)(NSObject *, uint64_t, uint8_t *))v953[2].isa;
            uint64_t v89 = (uint64_t)v1060;
            v961(v1068, v958 + v184[6], v1060);
            sub_25B180A5C(v958, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
            uint64_t v962 = v1024;
            sub_25B187628(v960, v1024, &qword_26A4D9610);
            if (((unsigned int (*)(uint64_t, uint64_t, int *))v959)(v962, 1, v184) == 1)
            {
LABEL_157:
              sub_25B1200A4((uint64_t)v1075, v1049);
              __break(1u);
LABEL_158:
              __break(1u);
              goto LABEL_159;
            }
            v961(v1055, v962 + v184[7], (uint8_t *)v89);
            sub_25B180A5C(v962, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
            uint64_t v134 = v1084;
            uint64_t v956 = (uint64_t)v1045;
            uint64_t v89 = (uint64_t)v1082;
            uint64_t v849 = v1066;
            v955 = v961;
          }
        }
        else
        {
          sub_25B28FFD0();
          uint64_t v957 = v1025;
          sub_25B187628((uint64_t)v134, v1025, &qword_26A4D9610);
          uint64_t v89 = (uint64_t)v1082;
          if (((unsigned int (*)(uint64_t, uint64_t, int *))v1083)(v957, 1, v184) == 1)
          {
LABEL_155:
            sub_25B1200A4((uint64_t)v1075, v1049);
            __break(1u);
            goto LABEL_156;
          }
          v955 = (void (*)(NSObject *, uint64_t, uint8_t *))v1061[2].isa;
          v955(v1055, v957 + v184[7], v1060);
          sub_25B180A5C(v957, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          uint64_t v956 = (uint64_t)v1045;
        }
        sub_25B187628((uint64_t)v134, v956, &qword_26A4D9610);
        v963 = v1083;
        if (((unsigned int (*)(uint64_t, uint64_t, int *))v1083)(v956, 1, v184) == 1) {
          goto LABEL_149;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1052 + 16))(v849, v956, v1053);
        sub_25B180A5C(v956, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        long long v964 = v1079[8];
        long long v965 = v1079[6];
        long long v1107 = v1079[7];
        long long v1108 = v964;
        long long v966 = v1079[8];
        long long v967 = v1079[10];
        long long v1109 = v1079[9];
        long long v1110 = v967;
        long long v968 = v1079[4];
        long long v969 = v1079[2];
        long long v1103 = v1079[3];
        long long v1104 = v968;
        long long v970 = v1079[4];
        long long v971 = v1079[6];
        long long v1105 = v1079[5];
        long long v1106 = v971;
        long long v972 = *v1079;
        long long v973 = v1079[2];
        long long v1101 = v1079[1];
        long long v1102 = v973;
        long long v974 = *v1079;
        long long v1097 = v966;
        long long v1098 = v1109;
        long long v1099 = v1079[10];
        long long v1100 = v974;
        long long v1093 = v970;
        long long v1094 = v1105;
        long long v1095 = v965;
        long long v1096 = v1107;
        long long v1089 = v972;
        long long v1090 = v1101;
        v975 = v1060;
        uint64_t v89 = (uint64_t)v1061;
        uint64_t v134 = v1061 + 2;
        long long v1091 = v969;
        long long v1092 = v1103;
        v976 = v1068;
        v955(v1054, (uint64_t)v1068, v1060);
        uint64_t v977 = (uint64_t)v1044;
        v978 = (char *)v1055;
        v955(v1044, (uint64_t)v1055, v975);
        *(void *)&v1145[0] = v1075;
        *((void *)&v1145[0] + 1) = v1049;
        uint64_t v979 = v1043;
        sub_25B187628((uint64_t)v1084, v1043, &qword_26A4D9610);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v963)(v979, 1, v1080) == 1)
        {
LABEL_150:
          __break(1u);
          goto LABEL_151;
        }
        sub_25B1172F8((uint64_t)&v1100);
        v980 = *(void (**)(char *, uint8_t *))(v89 + 8);
        v980(v978, v975);
        v980((char *)v976, v975);
        v981 = (int *)v1080;
        uint64_t v982 = (uint64_t)v1065;
        v955(v1065, v979 + *(int *)(v1080 + 36), v975);
        sub_25B180A5C(v979, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v983 = v1042;
        PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)(v1066, &v1089, (uint64_t)v1054, v977, (uint64_t *)v1145, v982, v1042);
        ((void (*)(uint64_t, void, uint64_t, int *))v1063)(v983, 0, 1, v981);
        uint64_t v186 = (uint64_t)v1081;
        sub_25B185B64(v983, (uint64_t)v1081, &qword_26A4D9610);
        uint64_t v184 = v981;
        uint64_t v89 = (uint64_t)v1082;
      }
      else
      {
        sub_25B1200A4((uint64_t)v1075, v89);
        sub_25B116DE0(v952, &qword_26A4D9610);
        uint64_t v89 = (uint64_t)v1082;
      }
      goto LABEL_135;
    }
    sub_25B1200A4(v385, v386);
    uint64_t v604 = sub_25B236504();
    (*(void (**)(uint8_t *, uint64_t, uint64_t))(v1085 + 16))(v388, v604, v1086);
    v605 = v1079;
    long long v606 = v1079[9];
    long long v1119 = v1079[8];
    long long v1120 = v606;
    long long v1121 = v1079[10];
    long long v607 = v1079[5];
    long long v1115 = v1079[4];
    long long v1116 = v607;
    long long v608 = v1079[7];
    long long v1117 = v1079[6];
    long long v1118 = v608;
    long long v609 = v1079[1];
    long long v1111 = *v1079;
    long long v1112 = v609;
    long long v610 = v1079[3];
    long long v1113 = v1079[2];
    long long v1114 = v610;
    v611 = (_OWORD *)swift_allocObject();
    long long v612 = v605[9];
    v611[9] = v605[8];
    v611[10] = v612;
    v611[11] = v605[10];
    long long v613 = v605[5];
    v611[5] = v605[4];
    v611[6] = v613;
    long long v614 = v605[7];
    v611[7] = v605[6];
    v611[8] = v614;
    long long v615 = v605[1];
    v611[1] = *v605;
    v611[2] = v615;
    long long v616 = v605[3];
    v611[3] = v605[2];
    v611[4] = v616;
    uint64_t v617 = v1067;
    sub_25B187628((uint64_t)v134, v1067, &qword_26A4D9610);
    unint64_t v618 = (*(unsigned __int8 *)(v1051 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1051 + 80);
    uint64_t v619 = swift_allocObject();
    sub_25B187574(v617, v619 + v618, &qword_26A4D9610);
    uint64_t v620 = swift_allocObject();
    *(void *)(v620 + 16) = v1075;
    *(void *)(v620 + 24) = 0;
    v621 = v1087;
    swift_retain();
    sub_25B1172F8((uint64_t)&v1111);
    os_log_t v1059 = (os_log_t)sub_25B290160();
    LODWORD(v1058) = sub_25B2908A0();
    uint64_t v1062 = swift_allocObject();
    *(unsigned char *)(v1062 + 16) = 34;
    v1076 = swift_allocObject();
    LOBYTE(v1076[2].isa) = 8;
    uint64_t v622 = swift_allocObject();
    *(void *)(v622 + 16) = sub_25B187C14;
    *(void *)(v622 + 24) = v621;
    uint64_t v623 = swift_allocObject();
    *(void *)(v623 + 16) = sub_25B1877E0;
    *(void *)(v623 + 24) = v622;
    uint64_t v1067 = swift_allocObject();
    *(unsigned char *)(v1067 + 16) = 34;
    os_log_t v1074 = (os_log_t)swift_allocObject();
    LOBYTE(v1074[2].isa) = 8;
    uint64_t v624 = swift_allocObject();
    *(void *)(v624 + 16) = sub_25B1877E8;
    *(void *)(v624 + 24) = v611;
    uint64_t v625 = swift_allocObject();
    uint64_t v1050 = v625;
    *(void *)(v625 + 16) = sub_25B1877E0;
    *(void *)(v625 + 24) = v624;
    os_log_t v1075 = (os_log_t)swift_allocObject();
    LOBYTE(v1075[2].isa) = 34;
    uint64_t v626 = swift_allocObject();
    *(unsigned char *)(v626 + 16) = 8;
    uint64_t v627 = swift_allocObject();
    *(void *)(v627 + 16) = sub_25B183100;
    *(void *)(v627 + 24) = v619;
    uint64_t v628 = swift_allocObject();
    uint64_t v1051 = v628;
    *(void *)(v628 + 16) = sub_25B1877E0;
    *(void *)(v628 + 24) = v627;
    uint64_t v629 = swift_allocObject();
    *(unsigned char *)(v629 + 16) = 34;
    uint64_t v630 = swift_allocObject();
    *(unsigned char *)(v630 + 16) = 8;
    uint64_t v631 = swift_allocObject();
    *(void *)(v631 + 16) = sub_25B182C08;
    *(void *)(v631 + 24) = v620;
    v632 = swift_allocObject();
    v632[2].Class isa = (Class)sub_25B1877E0;
    v632[3].Class isa = (Class)v631;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
    uint64_t v633 = swift_allocObject();
    *(_OWORD *)(v633 + 16) = xmmword_25B293240;
    *(void *)(v633 + 32) = sub_25B1877F4;
    *(void *)(v633 + 40) = v1062;
    *(void *)(v633 + 48) = sub_25B1877F4;
    *(void *)(v633 + 56) = v1076;
    *(void *)(v633 + 64) = sub_25B1877F0;
    *(void *)(v633 + 72) = v623;
    *(void *)(v633 + 80) = sub_25B1877F4;
    *(void *)(v633 + 88) = v1067;
    *(void *)(v633 + 96) = sub_25B1877F4;
    *(void *)(v633 + 104) = v1074;
    *(void *)(v633 + 112) = sub_25B1877F0;
    uint64_t v634 = v1051;
    *(void *)(v633 + 120) = v1050;
    *(void *)(v633 + 128) = sub_25B1877F4;
    *(void *)(v633 + 136) = v1075;
    *(void *)(v633 + 144) = sub_25B1877F4;
    *(void *)(v633 + 152) = v626;
    *(void *)(v633 + 160) = sub_25B1877F0;
    *(void *)(v633 + 168) = v634;
    *(void *)(v633 + 176) = sub_25B1877F4;
    *(void *)(v633 + 184) = v629;
    *(void *)(v633 + 192) = sub_25B1877F4;
    *(void *)(v633 + 200) = v630;
    *(void *)(v633 + 208) = sub_25B1877F0;
    *(void *)(v633 + 216) = v632;
    swift_retain();
    swift_retain();
    unint64_t v1049 = v623;
    v635 = v1059;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v635, (os_log_type_t)v1058))
    {
      os_log_t v1046 = v632;
      v1047 = (char *)v629;
      unint64_t v636 = v1049;
      v637 = v1076;
      os_log_t v638 = v1074;
      v1048 = (uint64_t (*)(void))v630;
      v639 = (uint8_t *)sub_25B1C1508();
      uint64_t v640 = swift_slowAlloc();
      *(void *)&v1145[0] = 0;
      v1039 = (char *)v640;
      v1144[0] = v640;
      v1041 = v639;
      *(_WORD *)v639 = 1026;
      *(void *)&long long v1089 = v639 + 2;
      *(void *)&long long v1100 = sub_25B1877F4;
      *((void *)&v1100 + 1) = v1062;
      uint64_t v134 = v1069;
      sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
      if (!v134)
      {
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v637;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        os_log_t v641 = v638;
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v636;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        uint64_t v642 = v1067;
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v642;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v641;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1050;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1075;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v626;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1051;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1047;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1048;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1046;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        _os_log_impl(&dword_25B107000, v1059, (os_log_type_t)v1058, "(%{public}s) Relationship %{public}s cannot switch from %{public}s to %{public}s", v1041, 0x2Au);
        v643 = v1039;
        swift_arrayDestroy();
        MEMORY[0x261160890](v643, -1, -1);
        sub_25B1C1590();
      }
      goto LABEL_164;
    }

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint8_t *, uint64_t))(v1085 + 8))(v1040, v1086);
    uint64_t v184 = (int *)v1080;
    v850 = v1083;
    uint64_t v134 = v1084;
    os_log_t v599 = v1021;
    sub_25B187628((uint64_t)v1084, (uint64_t)v1021, &qword_26A4D9610);
    int v851 = ((uint64_t (*)(os_log_t, uint64_t, int *))v850)(v599, 1, v184);
    uint64_t v186 = (uint64_t)v1081;
    uint64_t v244 = (uint64_t)v1068;
    unint64_t v245 = v1066;
    if (v851 != 1) {
      goto LABEL_120;
    }
    __break(1u);
    goto LABEL_97;
  }
  if (v1074 != (os_log_t)1)
  {
    if (v1074 == (os_log_t)2)
    {
      uint64_t v242 = v1030;
      sub_25B187628((uint64_t)v134, v1030, &qword_26A4D9610);
      if (((unsigned int (*)(uint64_t, uint64_t, int *))v1083)(v242, 1, v184) == 1)
      {
LABEL_151:
        __break(1u);
        goto LABEL_152;
      }
      uint64_t v243 = (uint64_t *)(v242 + v184[8]);
      uint64_t v244 = *v243;
      unint64_t v245 = v243[1];
      sub_25B120090(*v243, v245);
      sub_25B180A5C(v242, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v246 = v1041;
      switch(v245)
      {
        case 0uLL:
LABEL_29:
          sub_25B1200A4(v244, v245);
          uint64_t v247 = sub_25B236504();
          (*(void (**)(uint8_t *, uint64_t, uint64_t))(v1085 + 16))(v246, v247, v1086);
          unint64_t v248 = v1079;
          long long v249 = v1079[9];
          long long v1119 = v1079[8];
          long long v1120 = v249;
          long long v1121 = v1079[10];
          long long v250 = v1079[5];
          long long v1115 = v1079[4];
          long long v1116 = v250;
          long long v251 = v1079[7];
          long long v1117 = v1079[6];
          long long v1118 = v251;
          long long v252 = v1079[1];
          long long v1111 = *v1079;
          long long v1112 = v252;
          long long v253 = v1079[3];
          long long v1113 = v1079[2];
          long long v1114 = v253;
          uint64_t v254 = (_OWORD *)swift_allocObject();
          long long v255 = v248[9];
          v254[9] = v248[8];
          v254[10] = v255;
          v254[11] = v248[10];
          long long v256 = v248[5];
          v254[5] = v248[4];
          v254[6] = v256;
          long long v257 = v248[7];
          v254[7] = v248[6];
          v254[8] = v257;
          long long v258 = v248[1];
          v254[1] = *v248;
          v254[2] = v258;
          long long v259 = v248[3];
          v254[3] = v248[2];
          v254[4] = v259;
          uint64_t v260 = v1067;
          sub_25B187628((uint64_t)v134, v1067, &qword_26A4D9610);
          unint64_t v261 = (*(unsigned __int8 *)(v1051 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1051 + 80);
          uint64_t v262 = swift_allocObject();
          sub_25B187574(v260, v262 + v261, &qword_26A4D9610);
          uint64_t v263 = swift_allocObject();
          *(void *)(v263 + 16) = v1075;
          *(void *)(v263 + 24) = 2;
          v264 = v1087;
          swift_retain();
          sub_25B1172F8((uint64_t)&v1111);
          os_log_t v1059 = (os_log_t)sub_25B290160();
          LODWORD(v1058) = sub_25B2908A0();
          uint64_t v1062 = swift_allocObject();
          *(unsigned char *)(v1062 + 16) = 34;
          v1076 = swift_allocObject();
          LOBYTE(v1076[2].isa) = 8;
          uint64_t v265 = swift_allocObject();
          *(void *)(v265 + 16) = sub_25B187C14;
          *(void *)(v265 + 24) = v264;
          uint64_t v266 = swift_allocObject();
          *(void *)(v266 + 16) = sub_25B1877E0;
          *(void *)(v266 + 24) = v265;
          uint64_t v1067 = swift_allocObject();
          *(unsigned char *)(v1067 + 16) = 34;
          os_log_t v1074 = (os_log_t)swift_allocObject();
          LOBYTE(v1074[2].isa) = 8;
          uint64_t v267 = swift_allocObject();
          *(void *)(v267 + 16) = sub_25B1877E8;
          *(void *)(v267 + 24) = v254;
          uint64_t v268 = swift_allocObject();
          uint64_t v1050 = v268;
          *(void *)(v268 + 16) = sub_25B1877E0;
          *(void *)(v268 + 24) = v267;
          os_log_t v1075 = (os_log_t)swift_allocObject();
          LOBYTE(v1075[2].isa) = 34;
          uint64_t v269 = swift_allocObject();
          *(unsigned char *)(v269 + 16) = 8;
          uint64_t v270 = swift_allocObject();
          *(void *)(v270 + 16) = sub_25B183100;
          *(void *)(v270 + 24) = v262;
          uint64_t v271 = swift_allocObject();
          uint64_t v1051 = v271;
          *(void *)(v271 + 16) = sub_25B1877E0;
          *(void *)(v271 + 24) = v270;
          uint64_t v272 = swift_allocObject();
          *(unsigned char *)(v272 + 16) = 34;
          uint64_t v273 = swift_allocObject();
          *(unsigned char *)(v273 + 16) = 8;
          uint64_t v274 = swift_allocObject();
          *(void *)(v274 + 16) = sub_25B182C08;
          *(void *)(v274 + 24) = v263;
          v275 = swift_allocObject();
          v275[2].Class isa = (Class)sub_25B1877E0;
          v275[3].Class isa = (Class)v274;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
          uint64_t v276 = swift_allocObject();
          *(_OWORD *)(v276 + 16) = xmmword_25B293240;
          *(void *)(v276 + 32) = sub_25B1877F4;
          *(void *)(v276 + 40) = v1062;
          *(void *)(v276 + 48) = sub_25B1877F4;
          *(void *)(v276 + 56) = v1076;
          *(void *)(v276 + 64) = sub_25B1877F0;
          *(void *)(v276 + 72) = v266;
          *(void *)(v276 + 80) = sub_25B1877F4;
          *(void *)(v276 + 88) = v1067;
          *(void *)(v276 + 96) = sub_25B1877F4;
          *(void *)(v276 + 104) = v1074;
          *(void *)(v276 + 112) = sub_25B1877F0;
          uint64_t v277 = v1051;
          *(void *)(v276 + 120) = v1050;
          *(void *)(v276 + 128) = sub_25B1877F4;
          *(void *)(v276 + 136) = v1075;
          *(void *)(v276 + 144) = sub_25B1877F4;
          *(void *)(v276 + 152) = v269;
          *(void *)(v276 + 160) = sub_25B1877F0;
          *(void *)(v276 + 168) = v277;
          *(void *)(v276 + 176) = sub_25B1877F4;
          *(void *)(v276 + 184) = v272;
          *(void *)(v276 + 192) = sub_25B1877F4;
          *(void *)(v276 + 200) = v273;
          *(void *)(v276 + 208) = sub_25B1877F0;
          *(void *)(v276 + 216) = v275;
          swift_retain();
          swift_retain();
          unint64_t v1049 = v266;
          uint64_t v278 = v1059;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v278, (os_log_type_t)v1058))
          {
            os_log_t v1046 = v275;
            v1047 = (char *)v272;
            unint64_t v279 = v1049;
            long long v280 = v1076;
            os_log_t v281 = v1074;
            v1048 = (uint64_t (*)(void))v273;
            uint64_t v282 = (uint8_t *)sub_25B1C1508();
            uint64_t v283 = swift_slowAlloc();
            *(void *)&v1145[0] = 0;
            v1039 = (char *)v283;
            v1040 = v282;
            v1144[0] = v283;
            *(_WORD *)uint64_t v282 = 1026;
            *(void *)&long long v1089 = v282 + 2;
            *(void *)&long long v1100 = sub_25B1877F4;
            *((void *)&v1100 + 1) = v1062;
            uint64_t v134 = v1069;
            sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
            if (!v134)
            {
              swift_release();
              *(void *)&long long v1100 = sub_25B1877F4;
              *((void *)&v1100 + 1) = v280;
              sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
              os_log_t v284 = v281;
              swift_release();
              *(void *)&long long v1100 = sub_25B1877F0;
              *((void *)&v1100 + 1) = v279;
              sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
              uint64_t v285 = v1067;
              swift_release();
              *(void *)&long long v1100 = sub_25B1877F4;
              *((void *)&v1100 + 1) = v285;
              sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
              swift_release();
              *(void *)&long long v1100 = sub_25B1877F4;
              *((void *)&v1100 + 1) = v284;
              sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
              swift_release();
              *(void *)&long long v1100 = sub_25B1877F0;
              *((void *)&v1100 + 1) = v1050;
              sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
              swift_release();
              *(void *)&long long v1100 = sub_25B1877F4;
              *((void *)&v1100 + 1) = v1075;
              sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
              swift_release();
              *(void *)&long long v1100 = sub_25B1877F4;
              *((void *)&v1100 + 1) = v269;
              sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
              swift_release();
              *(void *)&long long v1100 = sub_25B1877F0;
              *((void *)&v1100 + 1) = v1051;
              sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
              swift_release();
              *(void *)&long long v1100 = sub_25B1877F4;
              *((void *)&v1100 + 1) = v1047;
              sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
              swift_release();
              *(void *)&long long v1100 = sub_25B1877F4;
              *((void *)&v1100 + 1) = v1048;
              sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
              swift_release();
              *(void *)&long long v1100 = sub_25B1877F0;
              *((void *)&v1100 + 1) = v1046;
              sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
              swift_release();
              _os_log_impl(&dword_25B107000, v1059, (os_log_type_t)v1058, "(%{public}s) Relationship %{public}s cannot switch from %{public}s to %{public}s", v1040, 0x2Au);
              v286 = v1039;
              swift_arrayDestroy();
              MEMORY[0x261160890](v286, -1, -1);
              sub_25B1C1590();
            }
            goto LABEL_164;
          }

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          (*(void (**)(uint8_t *, uint64_t))(v1085 + 8))(v1041, v1086);
          uint64_t v184 = (int *)v1080;
          v880 = v1083;
          uint64_t v134 = v1084;
          os_log_t v599 = v1022;
          sub_25B187628((uint64_t)v1084, (uint64_t)v1022, &qword_26A4D9610);
          int v881 = ((uint64_t (*)(os_log_t, uint64_t, int *))v880)(v599, 1, v184);
          uint64_t v186 = (uint64_t)v1081;
          unint64_t v245 = v1066;
          if (v881 == 1)
          {
            __break(1u);
            goto LABEL_106;
          }
LABEL_120:
          v951 = (char *)v599 + v184[8];
          uint64_t v89 = *((void *)v951 + 1);
          os_log_t v1075 = *(os_log_t *)v951;
          sub_25B120090((uint64_t)v1075, v89);
          sub_25B180A5C((uint64_t)v599, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          uint64_t v849 = v245;
          goto LABEL_121;
        case 1uLL:
          goto LABEL_98;
        case 2uLL:
          goto LABEL_29;
      }
LABEL_97:
      sub_25B1200A4(v244, v245);
LABEL_98:
      uint64_t v852 = sub_25B236504();
      (*(void (**)(uint8_t *, uint64_t, uint64_t))(v1085 + 16))(v1032, v852, v1086);
      v853 = v1079;
      long long v854 = v1079[9];
      long long v1119 = v1079[8];
      long long v1120 = v854;
      long long v1121 = v1079[10];
      long long v855 = v1079[5];
      long long v1115 = v1079[4];
      long long v1116 = v855;
      long long v856 = v1079[7];
      long long v1117 = v1079[6];
      long long v1118 = v856;
      long long v857 = v1079[1];
      long long v1111 = *v1079;
      long long v1112 = v857;
      long long v858 = v1079[3];
      long long v1113 = v1079[2];
      long long v1114 = v858;
      v859 = (_OWORD *)swift_allocObject();
      long long v860 = v853[9];
      v859[9] = v853[8];
      v859[10] = v860;
      v859[11] = v853[10];
      long long v861 = v853[5];
      v859[5] = v853[4];
      v859[6] = v861;
      long long v862 = v853[7];
      v859[7] = v853[6];
      v859[8] = v862;
      long long v863 = v853[1];
      v859[1] = *v853;
      v859[2] = v863;
      long long v864 = v853[3];
      v859[3] = v853[2];
      v859[4] = v864;
      v865 = v1087;
      swift_retain();
      sub_25B1172F8((uint64_t)&v1111);
      v1076 = sub_25B290160();
      LODWORD(v1075) = sub_25B2908A0();
      uint64_t v866 = swift_allocObject();
      *(unsigned char *)(v866 + 16) = 34;
      uint64_t v867 = swift_allocObject();
      *(unsigned char *)(v867 + 16) = 8;
      uint64_t v868 = swift_allocObject();
      *(void *)(v868 + 16) = sub_25B187C14;
      *(void *)(v868 + 24) = v865;
      uint64_t v869 = swift_allocObject();
      *(void *)(v869 + 16) = sub_25B1877E0;
      *(void *)(v869 + 24) = v868;
      uint64_t v870 = swift_allocObject();
      *(unsigned char *)(v870 + 16) = 34;
      uint64_t v871 = swift_allocObject();
      *(unsigned char *)(v871 + 16) = 8;
      uint64_t v872 = swift_allocObject();
      *(void *)(v872 + 16) = sub_25B1877E8;
      *(void *)(v872 + 24) = v859;
      uint64_t v873 = swift_allocObject();
      *(void *)(v873 + 16) = sub_25B1877E0;
      *(void *)(v873 + 24) = v872;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
      uint64_t v874 = swift_allocObject();
      *(_OWORD *)(v874 + 16) = xmmword_25B293230;
      *(void *)(v874 + 32) = sub_25B1877F4;
      *(void *)(v874 + 40) = v866;
      *(void *)(v874 + 48) = sub_25B1877F4;
      *(void *)(v874 + 56) = v867;
      *(void *)(v874 + 64) = sub_25B1877F0;
      *(void *)(v874 + 72) = v869;
      *(void *)(v874 + 80) = sub_25B1877F4;
      *(void *)(v874 + 88) = v870;
      *(void *)(v874 + 96) = sub_25B1877F4;
      *(void *)(v874 + 104) = v871;
      *(void *)(v874 + 112) = sub_25B1877F0;
      *(void *)(v874 + 120) = v873;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v875 = v1076;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v875, (os_log_type_t)v1075))
      {
        v876 = (uint8_t *)sub_25B1C1508();
        uint64_t v877 = swift_slowAlloc();
        *(void *)&v1145[0] = 0;
        v1144[0] = v877;
        *(_WORD *)v876 = 514;
        *(void *)&long long v1089 = v876 + 2;
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v866;
        uint64_t v134 = v1069;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        if (!v134)
        {
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v867;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v869;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v870;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v871;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v873;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          os_log_type_t v878 = v1075;
          v879 = "(%{public}s) Relationship %{public}s switched from pairing to paired";
          goto LABEL_101;
        }
        goto LABEL_164;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(uint8_t *, uint64_t))(v1085 + 8))(v1032, v1086);
      goto LABEL_103;
    }
    if (v1057 - 1 < 2)
    {
      swift_bridgeObjectRetain();
LABEL_109:
      uint64_t v849 = v1066;
      goto LABEL_121;
    }
    v545 = v184;
    uint64_t v546 = v185;
    uint64_t v547 = v1077[2];
    uint64_t v548 = v1077[3];
    os_log_t v549 = v1075;
    sub_25B120090((uint64_t)v1075, (unint64_t)v1074);
    swift_bridgeObjectRetain();
    LOBYTE(v547) = sub_25B1697AC(v547, v548, (uint64_t)v549, v89);
    swift_bridgeObjectRelease();
    uint64_t v550 = v89;
    if (v547) {
      unint64_t v551 = 2;
    }
    else {
      unint64_t v551 = 0;
    }
    os_log_t v552 = v1078;
    swift_beginAccess();
    sub_25B10FF48((uint64_t)v552, (uint64_t)&v1111);
    uint64_t v553 = *((void *)&v1112 + 1);
    uint64_t v554 = v1113;
    __swift_project_boxed_opaque_existential_1(&v1111, *((uint64_t *)&v1112 + 1));
    uint64_t v555 = *(void *)(v554 + 8);
    uint64_t v556 = v1036;
    MetadataStoring.pairingRelationship(remoteDeviceID:)((uint64_t)v549, v550, v553, v555, v1036);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v1111);
    uint64_t v557 = v1019;
    sub_25B187628(v556, v1019, &qword_26A4D9610);
    int v558 = ((uint64_t (*)(uint64_t, uint64_t, int *))v1083)(v557, 1, v545);
    v559 = (void (**)(char *, uint64_t, uint64_t))(v546 + 16);
    unint64_t v1049 = v551;
    if (v558 == 1)
    {
      sub_25B116DE0(v557, &qword_26A4D9610);
      uint64_t v560 = sub_25B236504();
      (*v559)(v1017, v560, v1086);
      v561 = v1079;
      long long v562 = v1079[9];
      long long v1119 = v1079[8];
      long long v1120 = v562;
      long long v1121 = v1079[10];
      long long v563 = v1079[5];
      long long v1115 = v1079[4];
      long long v1116 = v563;
      long long v564 = v1079[7];
      long long v1117 = v1079[6];
      long long v1118 = v564;
      long long v565 = v1079[1];
      long long v1111 = *v1079;
      long long v1112 = v565;
      long long v566 = v1079[3];
      long long v1113 = v1079[2];
      long long v1114 = v566;
      v567 = (_OWORD *)swift_allocObject();
      long long v568 = v561[9];
      v567[9] = v561[8];
      v567[10] = v568;
      v567[11] = v561[10];
      long long v569 = v561[5];
      v567[5] = v561[4];
      v567[6] = v569;
      long long v570 = v561[7];
      v567[7] = v561[6];
      v567[8] = v570;
      long long v571 = v561[1];
      v567[1] = *v561;
      v567[2] = v571;
      long long v572 = v561[3];
      v567[3] = v561[2];
      v567[4] = v572;
      uint64_t v573 = v1067;
      sub_25B187628((uint64_t)v1084, v1067, &qword_26A4D9610);
      unint64_t v574 = (*(unsigned __int8 *)(v1051 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1051 + 80);
      uint64_t v575 = swift_allocObject();
      sub_25B187574(v573, v575 + v574, &qword_26A4D9610);
      uint64_t v576 = swift_allocObject();
      *(void *)(v576 + 16) = sub_25B182C94;
      *(void *)(v576 + 24) = v575;
      uint64_t v577 = swift_allocObject();
      os_log_t v578 = v1074;
      *(void *)(v577 + 16) = v549;
      *(void *)(v577 + 24) = v578;
      uint64_t v579 = swift_allocObject();
      *(void *)(v579 + 16) = 0;
      *(void *)(v579 + 24) = v551;
      v580 = v1087;
      swift_retain();
      sub_25B120090(0, v551);
      sub_25B1172F8((uint64_t)&v1111);
      os_log_t v1046 = (os_log_t)sub_25B290160();
      LODWORD(v1041) = sub_25B2908A0();
      v1048 = (uint64_t (*)(void))swift_allocObject();
      *((unsigned char *)v1048 + 16) = 34;
      uint64_t v1050 = swift_allocObject();
      *(unsigned char *)(v1050 + 16) = 8;
      uint64_t v581 = swift_allocObject();
      *(void *)(v581 + 16) = sub_25B187C14;
      *(void *)(v581 + 24) = v580;
      v582 = swift_allocObject();
      os_log_t v1074 = v582;
      v582[2].Class isa = (Class)sub_25B1877E0;
      v582[3].Class isa = (Class)v581;
      uint64_t v1051 = swift_allocObject();
      *(unsigned char *)(v1051 + 16) = 34;
      v1076 = swift_allocObject();
      LOBYTE(v1076[2].isa) = 8;
      uint64_t v583 = swift_allocObject();
      *(void *)(v583 + 16) = sub_25B1877E8;
      *(void *)(v583 + 24) = v567;
      v584 = swift_allocObject();
      os_log_t v1075 = v584;
      v584[2].Class isa = (Class)sub_25B1877E0;
      v584[3].Class isa = (Class)v583;
      uint64_t v585 = swift_allocObject();
      *(unsigned char *)(v585 + 16) = 34;
      uint64_t v1035 = swift_allocObject();
      *(unsigned char *)(v1035 + 16) = 8;
      uint64_t v586 = swift_allocObject();
      *(void *)(v586 + 16) = sub_25B182C98;
      *(void *)(v586 + 24) = v576;
      uint64_t v587 = swift_allocObject();
      *(void *)(v587 + 16) = sub_25B1877E0;
      *(void *)(v587 + 24) = v586;
      v588 = (char *)v587;
      uint64_t v589 = swift_allocObject();
      *(unsigned char *)(v589 + 16) = 34;
      v1038 = (char *)swift_allocObject();
      v1038[16] = 8;
      uint64_t v590 = swift_allocObject();
      *(void *)(v590 + 16) = sub_25B1877E8;
      *(void *)(v590 + 24) = v577;
      uint64_t v591 = swift_allocObject();
      v1040 = (uint8_t *)v591;
      *(void *)(v591 + 16) = sub_25B1877E0;
      *(void *)(v591 + 24) = v590;
      v1039 = (char *)swift_allocObject();
      v1039[16] = 34;
      uint64_t v1067 = swift_allocObject();
      *(unsigned char *)(v1067 + 16) = 8;
      uint64_t v592 = swift_allocObject();
      *(void *)(v592 + 16) = sub_25B182C08;
      *(void *)(v592 + 24) = v579;
      uint64_t v593 = swift_allocObject();
      *(void *)(v593 + 16) = sub_25B1877E0;
      *(void *)(v593 + 24) = v592;
      v1047 = (char *)v585;
      v1034 = (char *)v589;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
      uint64_t v594 = swift_allocObject();
      *(_OWORD *)(v594 + 16) = xmmword_25B293260;
      *(void *)(v594 + 32) = sub_25B1877F4;
      *(void *)(v594 + 40) = v1048;
      *(void *)(v594 + 48) = sub_25B1877F4;
      uint64_t v595 = v1051;
      *(void *)(v594 + 56) = v1050;
      *(void *)(v594 + 64) = sub_25B1877F0;
      *(void *)(v594 + 72) = v1074;
      *(void *)(v594 + 80) = sub_25B1877F4;
      *(void *)(v594 + 88) = v595;
      *(void *)(v594 + 96) = sub_25B1877F4;
      *(void *)(v594 + 104) = v1076;
      *(void *)(v594 + 112) = sub_25B1877F0;
      *(void *)(v594 + 120) = v1075;
      *(void *)(v594 + 128) = sub_25B1877F4;
      *(void *)(v594 + 136) = v585;
      *(void *)(v594 + 144) = sub_25B1877F4;
      uint64_t v596 = v1035;
      *(void *)(v594 + 152) = v1035;
      *(void *)(v594 + 160) = sub_25B1877F0;
      *(void *)(v594 + 168) = v588;
      *(void *)(v594 + 176) = sub_25B1877F4;
      *(void *)(v594 + 184) = v589;
      *(void *)(v594 + 192) = sub_25B1877F4;
      v597 = v1039;
      *(void *)(v594 + 200) = v1038;
      *(void *)(v594 + 208) = sub_25B1877F0;
      *(void *)(v594 + 216) = v1040;
      *(void *)(v594 + 224) = sub_25B1877F4;
      *(void *)(v594 + 232) = v597;
      *(void *)(v594 + 240) = sub_25B1877F4;
      *(void *)(v594 + 248) = v1067;
      *(void *)(v594 + 256) = sub_25B1877F0;
      *(void *)(v594 + 264) = v593;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v1037 = v588;
      swift_retain();
      v598 = v1034;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      os_log_t v599 = v1046;
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v599, (os_log_type_t)v1041))
      {
LABEL_106:

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v1085 + 8))(v1017, v1086);
        uint64_t v882 = v1080;
        v883 = v1083;
        uint64_t v89 = v1049;
        uint64_t v134 = v1084;
        uint64_t v884 = v1013;
        sub_25B187628((uint64_t)v1084, v1013, &qword_26A4D9610);
        int v885 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v883)(v884, 1, v882);
        uint64_t v849 = v1066;
        if (v885 == 1)
        {
LABEL_159:
          sub_25B1200A4(0, v89);
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          unint64_t v998 = v1051;
LABEL_163:
          sub_25B1200A4(0, v998);
          goto LABEL_164;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1052 + 16))(v1062, v884, v1053);
        sub_25B180A5C(v884, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        long long v886 = v1079[8];
        long long v887 = v1079[6];
        long long v1107 = v1079[7];
        long long v1108 = v886;
        long long v888 = v1079[8];
        long long v889 = v1079[10];
        long long v1109 = v1079[9];
        long long v1110 = v889;
        long long v890 = v1079[4];
        long long v891 = v1079[2];
        long long v1103 = v1079[3];
        long long v1104 = v890;
        long long v892 = v1079[4];
        long long v893 = v1079[6];
        long long v1105 = v1079[5];
        long long v1106 = v893;
        long long v894 = *v1079;
        long long v895 = v1079[2];
        long long v1101 = v1079[1];
        long long v1102 = v895;
        long long v896 = *v1079;
        long long v1097 = v888;
        long long v1098 = v1109;
        long long v1099 = v1079[10];
        long long v1100 = v896;
        long long v1093 = v892;
        long long v1094 = v1105;
        long long v1095 = v887;
        long long v1096 = v1107;
        long long v1089 = v894;
        long long v1090 = v1101;
        long long v1091 = v891;
        long long v1092 = v1103;
        sub_25B1172F8((uint64_t)&v1100);
        uint64_t v897 = (uint64_t)v1065;
        sub_25B28FFD0();
        os_log_t v898 = v1058;
        sub_25B28FFD0();
        *(void *)&v1145[0] = 0;
        *((void *)&v1145[0] + 1) = v89;
        sub_25B120090(0, v89);
        os_log_t v899 = v1059;
        sub_25B28FFD0();
        sub_25B116DE0(v1036, &qword_26A4D9610);
        uint64_t v900 = v1014;
        PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)(v1062, &v1089, v897, (uint64_t)v898, (uint64_t *)v1145, (uint64_t)v899, v1014);
        uint64_t v184 = (int *)v1080;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v1063)(v900, 0, 1, v1080);
        uint64_t v901 = v900;
        uint64_t v186 = (uint64_t)v1081;
        sub_25B185B64(v901, (uint64_t)v1081, &qword_26A4D9610);
        os_log_t v1075 = 0;
        goto LABEL_121;
      }
      v1033 = (char *)v593;
      v600 = (uint8_t *)sub_25B1C1508();
      uint64_t v601 = swift_slowAlloc();
      *(void *)&v1145[0] = 0;
      uint64_t v1031 = v601;
      v1032 = v600;
      v1144[0] = v601;
      *(_WORD *)v600 = 1282;
      *(void *)&long long v1089 = v600 + 2;
      *(void *)&long long v1100 = sub_25B1877F4;
      *((void *)&v1100 + 1) = v1048;
      uint64_t v134 = v1069;
      sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
      if (!v134)
      {
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1050;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        v602 = v1076;
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1074;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1051;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v602;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1075;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1047;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v596;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1037;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v598;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1038;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1040;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1039;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1067;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1033;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        _os_log_impl(&dword_25B107000, v1046, (os_log_type_t)v1041, "(%{public}s) Relationship %{public}s (%{public}s) is migrating from unknown relationship %{public}s; state: %{public}s",
          v1032,
          0x34u);
        uint64_t v603 = v1031;
        swift_arrayDestroy();
        MEMORY[0x261160890](v603, -1, -1);
        sub_25B1C1590();
      }
    }
    else
    {
      v1048 = (uint64_t (*)(void))type metadata accessor for PairingRelationship;
      uint64_t v682 = v1023;
      sub_25B18095C(v557, v1023, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v683 = sub_25B236504();
      (*v559)(v1018, v683, v1086);
      v684 = v1079;
      long long v685 = v1079[9];
      long long v1119 = v1079[8];
      long long v1120 = v685;
      long long v1121 = v1079[10];
      long long v686 = v1079[5];
      long long v1115 = v1079[4];
      long long v1116 = v686;
      long long v687 = v1079[7];
      long long v1117 = v1079[6];
      long long v1118 = v687;
      long long v688 = v1079[1];
      long long v1111 = *v1079;
      long long v1112 = v688;
      long long v689 = v1079[3];
      long long v1113 = v1079[2];
      long long v1114 = v689;
      v690 = (_OWORD *)swift_allocObject();
      long long v691 = v684[9];
      v690[9] = v684[8];
      v690[10] = v691;
      v690[11] = v684[10];
      long long v692 = v684[5];
      v690[5] = v684[4];
      v690[6] = v692;
      long long v693 = v684[7];
      v690[7] = v684[6];
      v690[8] = v693;
      long long v694 = v684[1];
      v690[1] = *v684;
      v690[2] = v694;
      long long v695 = v684[3];
      v690[3] = v684[2];
      v690[4] = v695;
      uint64_t v696 = v1067;
      sub_25B187628((uint64_t)v1084, v1067, &qword_26A4D9610);
      unint64_t v697 = (*(unsigned __int8 *)(v1051 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1051 + 80);
      uint64_t v698 = swift_allocObject();
      sub_25B187574(v696, v698 + v697, &qword_26A4D9610);
      uint64_t v699 = swift_allocObject();
      v700 = v1087;
      uint64_t v1050 = v699;
      *(void *)(v699 + 16) = sub_25B182C94;
      *(void *)(v699 + 24) = v698;
      uint64_t v701 = swift_allocObject();
      os_log_t v702 = v1074;
      *(void *)(v701 + 16) = v549;
      *(void *)(v701 + 24) = v702;
      uint64_t v703 = v701;
      uint64_t v704 = v682;
      uint64_t v705 = v1011;
      sub_25B1806D0(v704, v1011, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      unint64_t v706 = (LOBYTE(v1076[10].isa) + 16) & ~(unint64_t)LOBYTE(v1076[10].isa);
      uint64_t v707 = swift_allocObject();
      sub_25B18095C(v705, v707 + v706, v1048);
      uint64_t v708 = swift_allocObject();
      *(void *)(v708 + 16) = sub_25B182F90;
      *(void *)(v708 + 24) = v707;
      uint64_t v709 = swift_allocObject();
      *(void *)(v709 + 16) = 0;
      *(void *)(v709 + 24) = v551;
      swift_retain();
      sub_25B1172F8((uint64_t)&v1111);
      sub_25B120090(0, v551);
      os_log_t v1046 = (os_log_t)sub_25B290160();
      LODWORD(v1035) = sub_25B2908A0();
      v1039 = (char *)swift_allocObject();
      v1039[16] = 34;
      v1038 = (char *)swift_allocObject();
      v1038[16] = 8;
      uint64_t v710 = swift_allocObject();
      *(void *)(v710 + 16) = sub_25B187C14;
      *(void *)(v710 + 24) = v700;
      v711 = swift_allocObject();
      os_log_t v1074 = v711;
      v711[2].Class isa = (Class)sub_25B1877E0;
      v711[3].Class isa = (Class)v710;
      os_log_t v1075 = (os_log_t)swift_allocObject();
      LOBYTE(v1075[2].isa) = 34;
      v712 = (uint8_t *)swift_allocObject();
      v712[16] = 8;
      uint64_t v713 = swift_allocObject();
      *(void *)(v713 + 16) = sub_25B1877E8;
      *(void *)(v713 + 24) = v690;
      uint64_t v714 = swift_allocObject();
      v1076 = v714;
      *(void *)(v714 + 16) = sub_25B1877E0;
      *(void *)(v714 + 24) = v713;
      v1037 = (char *)swift_allocObject();
      v1037[16] = 34;
      uint64_t v1051 = swift_allocObject();
      *(unsigned char *)(v1051 + 16) = 8;
      uint64_t v715 = swift_allocObject();
      uint64_t v716 = v1050;
      *(void *)(v715 + 16) = sub_25B1877E4;
      *(void *)(v715 + 24) = v716;
      uint64_t v717 = swift_allocObject();
      v1041 = (uint8_t *)v717;
      *(void *)(v717 + 16) = sub_25B1877E0;
      *(void *)(v717 + 24) = v715;
      uint64_t v1031 = swift_allocObject();
      *(unsigned char *)(v1031 + 16) = 34;
      uint64_t v1050 = swift_allocObject();
      *(unsigned char *)(v1050 + 16) = 8;
      uint64_t v718 = swift_allocObject();
      *(void *)(v718 + 16) = sub_25B1877E8;
      *(void *)(v718 + 24) = v703;
      uint64_t v719 = swift_allocObject();
      v1032 = (uint8_t *)v719;
      *(void *)(v719 + 16) = sub_25B1877E0;
      *(void *)(v719 + 24) = v718;
      uint64_t v720 = swift_allocObject();
      *(unsigned char *)(v720 + 16) = 34;
      uint64_t v721 = swift_allocObject();
      *(unsigned char *)(v721 + 16) = 8;
      uint64_t v722 = swift_allocObject();
      *(void *)(v722 + 16) = sub_25B1877E4;
      *(void *)(v722 + 24) = v708;
      uint64_t v723 = swift_allocObject();
      *(void *)(v723 + 16) = sub_25B1877E0;
      *(void *)(v723 + 24) = v722;
      uint64_t v724 = v723;
      v1033 = (char *)swift_allocObject();
      v1033[16] = 34;
      v1048 = (uint64_t (*)(void))swift_allocObject();
      *((unsigned char *)v1048 + 16) = 8;
      uint64_t v725 = swift_allocObject();
      *(void *)(v725 + 16) = sub_25B182C08;
      *(void *)(v725 + 24) = v709;
      uint64_t v726 = swift_allocObject();
      v1047 = (char *)v726;
      *(void *)(v726 + 16) = sub_25B1877E0;
      *(void *)(v726 + 24) = v725;
      uint64_t v727 = v720;
      v1034 = (char *)v720;
      v1040 = v712;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
      uint64_t v728 = swift_allocObject();
      *(_OWORD *)(v728 + 16) = xmmword_25B293250;
      *(void *)(v728 + 32) = sub_25B1877F4;
      v729 = v1038;
      *(void *)(v728 + 40) = v1039;
      *(void *)(v728 + 48) = sub_25B1877F4;
      *(void *)(v728 + 56) = v729;
      *(void *)(v728 + 64) = sub_25B1877F0;
      *(void *)(v728 + 72) = v1074;
      *(void *)(v728 + 80) = sub_25B1877F4;
      *(void *)(v728 + 88) = v1075;
      *(void *)(v728 + 96) = sub_25B1877F4;
      *(void *)(v728 + 104) = v712;
      *(void *)(v728 + 112) = sub_25B1877F0;
      *(void *)(v728 + 120) = v1076;
      *(void *)(v728 + 128) = sub_25B1877F4;
      *(void *)(v728 + 136) = v1037;
      *(void *)(v728 + 144) = sub_25B1877F4;
      *(void *)(v728 + 152) = v1051;
      *(void *)(v728 + 160) = sub_25B1877F0;
      *(void *)(v728 + 168) = v1041;
      *(void *)(v728 + 176) = sub_25B1877F4;
      v730 = v1032;
      *(void *)(v728 + 184) = v1031;
      *(void *)(v728 + 192) = sub_25B1877F4;
      *(void *)(v728 + 200) = v1050;
      *(void *)(v728 + 208) = sub_25B1877F0;
      *(void *)(v728 + 216) = v730;
      *(void *)(v728 + 224) = sub_25B1877F4;
      *(void *)(v728 + 232) = v727;
      *(void *)(v728 + 240) = sub_25B1877F4;
      *(void *)(v728 + 248) = v721;
      *(void *)(v728 + 256) = sub_25B1877F0;
      uint64_t v731 = v724;
      *(void *)(v728 + 264) = v724;
      *(void *)(v728 + 272) = sub_25B1877F4;
      *(void *)(v728 + 280) = v1033;
      *(void *)(v728 + 288) = sub_25B1877F4;
      *(void *)(v728 + 296) = v1048;
      *(void *)(v728 + 304) = sub_25B1877F0;
      *(void *)(v728 + 312) = v1047;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v1046, (os_log_type_t)v1035))
      {

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v1085 + 8))(v1018, v1086);
        uint64_t v184 = (int *)v1080;
        os_log_t v902 = v1078;
        swift_beginAccess();
        sub_25B10FF48((uint64_t)v902, (uint64_t)&v1100);
        uint64_t v903 = *((void *)&v1101 + 1);
        uint64_t v904 = v1102;
        __swift_project_boxed_opaque_existential_1(&v1100, *((uint64_t *)&v1101 + 1));
        uint64_t v905 = v1023;
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v904 + 16) + 96))(v1023, v903);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v1100);
        uint64_t v906 = v1062;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1052 + 16))(v1062, v905, v1053);
        long long v907 = v1079[8];
        long long v908 = v1079[6];
        long long v1107 = v1079[7];
        long long v1108 = v907;
        long long v909 = v1079[8];
        long long v910 = v1079[10];
        long long v1109 = v1079[9];
        long long v1110 = v910;
        long long v911 = v1079[4];
        long long v912 = v1079[2];
        long long v1103 = v1079[3];
        long long v1104 = v911;
        long long v913 = v1079[4];
        long long v914 = v1079[6];
        long long v1105 = v1079[5];
        long long v1106 = v914;
        long long v915 = *v1079;
        long long v916 = v1079[2];
        long long v1101 = v1079[1];
        long long v1102 = v916;
        long long v917 = *v1079;
        long long v1097 = v909;
        long long v1098 = v1109;
        long long v1099 = v1079[10];
        long long v1100 = v917;
        long long v1093 = v913;
        long long v1094 = v1105;
        long long v1095 = v908;
        long long v1096 = v1107;
        long long v1089 = v915;
        long long v1090 = v1101;
        long long v1091 = v912;
        long long v1092 = v1103;
        sub_25B1172F8((uint64_t)&v1100);
        uint64_t v918 = (uint64_t)v1065;
        sub_25B28FFD0();
        os_log_t v919 = v1058;
        sub_25B28FFD0();
        sub_25B116DE0(v1036, &qword_26A4D9610);
        unint64_t v920 = v1049;
        *(void *)&v1145[0] = 0;
        *((void *)&v1145[0] + 1) = v1049;
        os_log_t v921 = v1059;
        ((void (*)(os_log_t, uint64_t, uint8_t *))v1061[2].isa)(v1059, v905 + v184[9], v1060);
        sub_25B120090(0, v920);
        uint64_t v922 = v905;
        uint64_t v89 = v920;
        sub_25B180A5C(v922, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v923 = v1067;
        PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)(v906, &v1089, v918, (uint64_t)v919, (uint64_t *)v1145, (uint64_t)v921, v1067);
        ((void (*)(uint64_t, void, uint64_t, int *))v1063)(v923, 0, 1, v184);
        uint64_t v186 = (uint64_t)v1081;
        sub_25B185B64(v923, (uint64_t)v1081, &qword_26A4D9610);
        os_log_t v1075 = 0;
        uint64_t v134 = v1084;
        goto LABEL_109;
      }
      v732 = v1038;
      uint64_t v733 = v1050;
      uint64_t v734 = v1051;
      uint64_t v1029 = v721;
      uint64_t v1030 = v731;
      v735 = (uint8_t *)sub_25B1C1508();
      uint64_t v736 = swift_slowAlloc();
      *(void *)&v1145[0] = 0;
      v1022 = v736;
      v1144[0] = v736;
      v1028 = v735;
      *(_WORD *)v735 = 1538;
      *(void *)&long long v1089 = v735 + 2;
      *(void *)&long long v1100 = sub_25B1877F4;
      *((void *)&v1100 + 1) = v1039;
      uint64_t v134 = v1069;
      sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
      if (!v134)
      {
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v732;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        uint64_t v737 = v733;
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1074;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        v738 = v1037;
        v739 = v1047;
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1075;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        v740 = v1040;
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v740;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1076;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v738;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v734;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1041;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1031;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v737;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1032;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1034;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1029;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1030;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1033;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1048;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v739;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        _os_log_impl(&dword_25B107000, v1046, (os_log_type_t)v1035, "(%{public}s) Relationship %{public}s (%{public}s) is migrating from relationship %{public}s (%{public}s); state: %{public}s",
          v1028,
          0x3Eu);
        uint64_t v741 = (uint64_t)v1022;
        swift_arrayDestroy();
        MEMORY[0x261160890](v741, -1, -1);
        sub_25B1C1590();
      }
    }
    unint64_t v998 = v1049;
    goto LABEL_163;
  }
  uint64_t v313 = v1031;
  sub_25B187628((uint64_t)v134, v1031, &qword_26A4D9610);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v1083)(v313, 1, v184) == 1)
  {
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  uint64_t v314 = (uint64_t *)(v313 + v184[8]);
  uint64_t v316 = *v314;
  v315 = v314[1];
  sub_25B120090(*v314, (unint64_t)v315);
  sub_25B180A5C(v313, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  uint64_t v317 = v1037;
  v318 = v1038;
  if (!v315)
  {
    uint64_t v784 = sub_25B236504();
    (*(void (**)(char *, uint64_t, uint64_t))(v185 + 16))(v1015, v784, v1086);
    v785 = v1079;
    long long v786 = v1079[9];
    long long v1119 = v1079[8];
    long long v1120 = v786;
    long long v1121 = v1079[10];
    long long v787 = v1079[5];
    long long v1115 = v1079[4];
    long long v1116 = v787;
    long long v788 = v1079[7];
    long long v1117 = v1079[6];
    long long v1118 = v788;
    long long v789 = v1079[1];
    long long v1111 = *v1079;
    long long v1112 = v789;
    long long v790 = v1079[3];
    long long v1113 = v1079[2];
    long long v1114 = v790;
    v791 = (_OWORD *)swift_allocObject();
    long long v792 = v785[9];
    v791[9] = v785[8];
    v791[10] = v792;
    v791[11] = v785[10];
    long long v793 = v785[5];
    v791[5] = v785[4];
    v791[6] = v793;
    long long v794 = v785[7];
    v791[7] = v785[6];
    v791[8] = v794;
    long long v795 = v785[1];
    v791[1] = *v785;
    v791[2] = v795;
    long long v796 = v785[3];
    v791[3] = v785[2];
    v791[4] = v796;
    v797 = v1087;
    swift_retain();
    sub_25B1172F8((uint64_t)&v1111);
    v1076 = sub_25B290160();
    LODWORD(v1075) = sub_25B2908A0();
    uint64_t v798 = swift_allocObject();
    *(unsigned char *)(v798 + 16) = 34;
    uint64_t v799 = swift_allocObject();
    *(unsigned char *)(v799 + 16) = 8;
    uint64_t v800 = swift_allocObject();
    *(void *)(v800 + 16) = sub_25B187C14;
    *(void *)(v800 + 24) = v797;
    uint64_t v801 = swift_allocObject();
    *(void *)(v801 + 16) = sub_25B1877E0;
    *(void *)(v801 + 24) = v800;
    uint64_t v802 = swift_allocObject();
    *(unsigned char *)(v802 + 16) = 34;
    uint64_t v803 = swift_allocObject();
    *(unsigned char *)(v803 + 16) = 8;
    uint64_t v804 = swift_allocObject();
    *(void *)(v804 + 16) = sub_25B1877E8;
    *(void *)(v804 + 24) = v791;
    uint64_t v805 = swift_allocObject();
    *(void *)(v805 + 16) = sub_25B1877E0;
    *(void *)(v805 + 24) = v804;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
    uint64_t v806 = swift_allocObject();
    *(_OWORD *)(v806 + 16) = xmmword_25B293230;
    *(void *)(v806 + 32) = sub_25B1877F4;
    *(void *)(v806 + 40) = v798;
    *(void *)(v806 + 48) = sub_25B1877F4;
    *(void *)(v806 + 56) = v799;
    *(void *)(v806 + 64) = sub_25B1877F0;
    *(void *)(v806 + 72) = v801;
    *(void *)(v806 + 80) = sub_25B1877F4;
    *(void *)(v806 + 88) = v802;
    *(void *)(v806 + 96) = sub_25B1877F4;
    *(void *)(v806 + 104) = v803;
    *(void *)(v806 + 112) = sub_25B1877F0;
    *(void *)(v806 + 120) = v805;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v807 = v1076;
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v807, (os_log_type_t)v1075))
    {
      v808 = (uint8_t *)sub_25B1C1508();
      uint64_t v809 = swift_slowAlloc();
      *(void *)&v1145[0] = 0;
      v1144[0] = v809;
      *(_WORD *)v808 = 514;
      *(void *)&long long v1089 = v808 + 2;
      *(void *)&long long v1100 = sub_25B1877F4;
      *((void *)&v1100 + 1) = v798;
      uint64_t v134 = v1069;
      sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
      if (!v134)
      {
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v799;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v801;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v802;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v803;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v805;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        _os_log_impl(&dword_25B107000, v1076, (os_log_type_t)v1075, "(%{public}s) Relationship %{public}s switched from introduced to pairing", v808, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261160890](v809, -1, -1);
        sub_25B1C1590();
      }
      goto LABEL_164;
    }
    goto LABEL_112;
  }
  if (v315 != 1)
  {
    if (v315 != 2)
    {
      os_log_t v1059 = v315;
      uint64_t v1062 = v316;
      uint64_t v810 = sub_25B236504();
      (*(void (**)(char *, uint64_t, uint64_t))(v185 + 16))(v1016, v810, v1086);
      v811 = v1079;
      long long v812 = v1079[9];
      long long v1119 = v1079[8];
      long long v1120 = v812;
      long long v1121 = v1079[10];
      long long v813 = v1079[5];
      long long v1115 = v1079[4];
      long long v1116 = v813;
      long long v814 = v1079[7];
      long long v1117 = v1079[6];
      long long v1118 = v814;
      long long v815 = v1079[1];
      long long v1111 = *v1079;
      long long v1112 = v815;
      long long v816 = v1079[3];
      long long v1113 = v1079[2];
      long long v1114 = v816;
      v817 = (_OWORD *)swift_allocObject();
      long long v818 = v811[9];
      v817[9] = v811[8];
      v817[10] = v818;
      v817[11] = v811[10];
      long long v819 = v811[5];
      v817[5] = v811[4];
      v817[6] = v819;
      long long v820 = v811[7];
      v817[7] = v811[6];
      v817[8] = v820;
      long long v821 = v811[1];
      v817[1] = *v811;
      v817[2] = v821;
      long long v822 = v811[3];
      v817[3] = v811[2];
      v817[4] = v822;
      uint64_t v823 = v1067;
      sub_25B187628((uint64_t)v134, v1067, &qword_26A4D9610);
      unint64_t v824 = (*(unsigned __int8 *)(v1051 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1051 + 80);
      os_log_t v1058 = (os_log_t)swift_allocObject();
      sub_25B187574(v823, (uint64_t)v1058 + v824, &qword_26A4D9610);
      v825 = v1087;
      swift_retain();
      sub_25B1172F8((uint64_t)&v1111);
      os_log_t v1075 = (os_log_t)sub_25B290160();
      LODWORD(v1074) = sub_25B2908A0();
      v1076 = swift_allocObject();
      LOBYTE(v1076[2].isa) = 34;
      uint64_t v1051 = swift_allocObject();
      *(unsigned char *)(v1051 + 16) = 8;
      uint64_t v826 = swift_allocObject();
      *(void *)(v826 + 16) = sub_25B187C14;
      *(void *)(v826 + 24) = v825;
      uint64_t v827 = swift_allocObject();
      *(void *)(v827 + 16) = sub_25B1877E0;
      *(void *)(v827 + 24) = v826;
      uint64_t v828 = swift_allocObject();
      *(unsigned char *)(v828 + 16) = 34;
      uint64_t v829 = swift_allocObject();
      *(unsigned char *)(v829 + 16) = 8;
      uint64_t v830 = swift_allocObject();
      *(void *)(v830 + 16) = sub_25B1877E8;
      *(void *)(v830 + 24) = v817;
      uint64_t v831 = swift_allocObject();
      *(void *)(v831 + 16) = sub_25B1877E0;
      *(void *)(v831 + 24) = v830;
      uint64_t v832 = swift_allocObject();
      *(unsigned char *)(v832 + 16) = 34;
      uint64_t v833 = swift_allocObject();
      *(unsigned char *)(v833 + 16) = 8;
      uint64_t v834 = swift_allocObject();
      os_log_t v835 = v1058;
      *(void *)(v834 + 16) = sub_25B183100;
      *(void *)(v834 + 24) = v835;
      uint64_t v836 = swift_allocObject();
      *(void *)(v836 + 16) = sub_25B1877E0;
      *(void *)(v836 + 24) = v834;
      uint64_t v837 = v829;
      uint64_t v838 = v1051;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
      uint64_t v839 = swift_allocObject();
      *(_OWORD *)(v839 + 16) = xmmword_25B293220;
      *(void *)(v839 + 32) = sub_25B1877F4;
      *(void *)(v839 + 40) = v1076;
      *(void *)(v839 + 48) = sub_25B1877F4;
      *(void *)(v839 + 56) = v838;
      *(void *)(v839 + 64) = sub_25B1877F0;
      *(void *)(v839 + 72) = v827;
      *(void *)(v839 + 80) = sub_25B1877F4;
      *(void *)(v839 + 88) = v828;
      *(void *)(v839 + 96) = sub_25B1877F4;
      *(void *)(v839 + 104) = v837;
      *(void *)(v839 + 112) = sub_25B1877F0;
      *(void *)(v839 + 120) = v831;
      *(void *)(v839 + 128) = sub_25B1877F4;
      *(void *)(v839 + 136) = v832;
      *(void *)(v839 + 144) = sub_25B1877F4;
      *(void *)(v839 + 152) = v833;
      *(void *)(v839 + 160) = sub_25B1877F0;
      *(void *)(v839 + 168) = v836;
      swift_retain();
      swift_retain();
      uint64_t v1067 = v827;
      swift_retain();
      os_log_t v1058 = (os_log_t)v828;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v840 = v1075;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v840, (os_log_type_t)v1074))
      {
        uint64_t v841 = v1067;
        v1047 = (char *)v831;
        v1048 = (uint64_t (*)(void))v836;
        os_log_t v842 = v1058;
        unint64_t v1049 = v832;
        uint64_t v1050 = v833;
        v843 = (uint8_t *)sub_25B1C1508();
        v844 = swift_slowAlloc();
        *(void *)&v1145[0] = 0;
        os_log_t v1046 = v844;
        v1144[0] = v844;
        *(_WORD *)v843 = 770;
        *(void *)&long long v1089 = v843 + 2;
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1076;
        uint64_t v134 = v1069;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        if (!v134)
        {
          v1069 = v843;
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v838;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v841;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v842;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v837;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v1047;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v1049;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F4;
          *((void *)&v1100 + 1) = v1050;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          *(void *)&long long v1100 = sub_25B1877F0;
          *((void *)&v1100 + 1) = v1048;
          sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
          swift_release();
          _os_log_impl(&dword_25B107000, v1075, (os_log_type_t)v1074, "(%{public}s) Relationship %{public}s switched from %{public}s to pairing", v1069, 0x20u);
          os_log_t v845 = v1046;
          swift_arrayDestroy();
          MEMORY[0x261160890](v845, -1, -1);
          sub_25B1C1590();
        }
        goto LABEL_164;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_25B1200A4(v1062, (unint64_t)v1059);
      (*(void (**)(char *, uint64_t))(v1085 + 8))(v1016, v1086);
      goto LABEL_114;
    }
    uint64_t v319 = sub_25B236504();
    (*(void (**)(char *, uint64_t, uint64_t))(v185 + 16))(v318, v319, v1086);
    v320 = v1079;
    long long v321 = v1079[9];
    long long v1119 = v1079[8];
    long long v1120 = v321;
    long long v1121 = v1079[10];
    long long v322 = v1079[5];
    long long v1115 = v1079[4];
    long long v1116 = v322;
    long long v323 = v1079[7];
    long long v1117 = v1079[6];
    long long v1118 = v323;
    long long v324 = v1079[1];
    long long v1111 = *v1079;
    long long v1112 = v324;
    long long v325 = v1079[3];
    long long v1113 = v1079[2];
    long long v1114 = v325;
    uint64_t v326 = (_OWORD *)swift_allocObject();
    long long v327 = v320[9];
    v326[9] = v320[8];
    v326[10] = v327;
    v326[11] = v320[10];
    long long v328 = v320[5];
    v326[5] = v320[4];
    v326[6] = v328;
    long long v329 = v320[7];
    v326[7] = v320[6];
    v326[8] = v329;
    long long v330 = v320[1];
    v326[1] = *v320;
    v326[2] = v330;
    long long v331 = v320[3];
    v326[3] = v320[2];
    v326[4] = v331;
    uint64_t v332 = v1067;
    sub_25B187628((uint64_t)v134, v1067, &qword_26A4D9610);
    unint64_t v333 = (*(unsigned __int8 *)(v1051 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1051 + 80);
    uint64_t v334 = swift_allocObject();
    sub_25B187574(v332, v334 + v333, &qword_26A4D9610);
    uint64_t v335 = swift_allocObject();
    *(void *)(v335 + 16) = v1075;
    *(void *)(v335 + 24) = 1;
    uint64_t v336 = v1087;
    swift_retain();
    sub_25B1172F8((uint64_t)&v1111);
    os_log_t v1059 = (os_log_t)sub_25B290160();
    LODWORD(v1058) = sub_25B2908A0();
    uint64_t v1062 = swift_allocObject();
    *(unsigned char *)(v1062 + 16) = 34;
    v1076 = swift_allocObject();
    LOBYTE(v1076[2].isa) = 8;
    uint64_t v337 = swift_allocObject();
    *(void *)(v337 + 16) = sub_25B187C14;
    *(void *)(v337 + 24) = v336;
    uint64_t v338 = swift_allocObject();
    *(void *)(v338 + 16) = sub_25B1877E0;
    *(void *)(v338 + 24) = v337;
    uint64_t v1067 = swift_allocObject();
    *(unsigned char *)(v1067 + 16) = 34;
    os_log_t v1074 = (os_log_t)swift_allocObject();
    LOBYTE(v1074[2].isa) = 8;
    uint64_t v339 = swift_allocObject();
    *(void *)(v339 + 16) = sub_25B1877E8;
    *(void *)(v339 + 24) = v326;
    uint64_t v340 = swift_allocObject();
    uint64_t v1050 = v340;
    *(void *)(v340 + 16) = sub_25B1877E0;
    *(void *)(v340 + 24) = v339;
    os_log_t v1075 = (os_log_t)swift_allocObject();
    LOBYTE(v1075[2].isa) = 34;
    uint64_t v341 = swift_allocObject();
    *(unsigned char *)(v341 + 16) = 8;
    uint64_t v342 = swift_allocObject();
    *(void *)(v342 + 16) = sub_25B183100;
    *(void *)(v342 + 24) = v334;
    uint64_t v343 = swift_allocObject();
    uint64_t v1051 = v343;
    *(void *)(v343 + 16) = sub_25B1877E0;
    *(void *)(v343 + 24) = v342;
    uint64_t v344 = swift_allocObject();
    *(unsigned char *)(v344 + 16) = 34;
    uint64_t v345 = swift_allocObject();
    *(unsigned char *)(v345 + 16) = 8;
    uint64_t v346 = swift_allocObject();
    *(void *)(v346 + 16) = sub_25B182C08;
    *(void *)(v346 + 24) = v335;
    v347 = swift_allocObject();
    v347[2].Class isa = (Class)sub_25B1877E0;
    v347[3].Class isa = (Class)v346;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
    uint64_t v348 = swift_allocObject();
    *(_OWORD *)(v348 + 16) = xmmword_25B293240;
    *(void *)(v348 + 32) = sub_25B1877F4;
    *(void *)(v348 + 40) = v1062;
    *(void *)(v348 + 48) = sub_25B1877F4;
    *(void *)(v348 + 56) = v1076;
    *(void *)(v348 + 64) = sub_25B1877F0;
    *(void *)(v348 + 72) = v338;
    *(void *)(v348 + 80) = sub_25B1877F4;
    *(void *)(v348 + 88) = v1067;
    *(void *)(v348 + 96) = sub_25B1877F4;
    *(void *)(v348 + 104) = v1074;
    *(void *)(v348 + 112) = sub_25B1877F0;
    uint64_t v349 = v1051;
    *(void *)(v348 + 120) = v1050;
    *(void *)(v348 + 128) = sub_25B1877F4;
    *(void *)(v348 + 136) = v1075;
    *(void *)(v348 + 144) = sub_25B1877F4;
    *(void *)(v348 + 152) = v341;
    *(void *)(v348 + 160) = sub_25B1877F0;
    *(void *)(v348 + 168) = v349;
    *(void *)(v348 + 176) = sub_25B1877F4;
    *(void *)(v348 + 184) = v344;
    *(void *)(v348 + 192) = sub_25B1877F4;
    *(void *)(v348 + 200) = v345;
    *(void *)(v348 + 208) = sub_25B1877F0;
    *(void *)(v348 + 216) = v347;
    swift_retain();
    swift_retain();
    unint64_t v1049 = v338;
    v350 = v1059;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v350, (os_log_type_t)v1058))
    {
      os_log_t v1046 = v347;
      v1047 = (char *)v344;
      unint64_t v351 = v1049;
      v352 = v1076;
      os_log_t v353 = v1074;
      v1048 = (uint64_t (*)(void))v345;
      v354 = (uint8_t *)sub_25B1C1508();
      v355 = (uint8_t *)swift_slowAlloc();
      *(void *)&v1145[0] = 0;
      v1040 = v355;
      v1041 = v354;
      v1144[0] = v355;
      *(_WORD *)v354 = 1026;
      *(void *)&long long v1089 = v354 + 2;
      *(void *)&long long v1100 = sub_25B1877F4;
      *((void *)&v1100 + 1) = v1062;
      uint64_t v134 = v1069;
      sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
      if (!v134)
      {
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v352;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        os_log_t v356 = v353;
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v351;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        uint64_t v357 = v1067;
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v357;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v356;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1050;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1075;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v341;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1051;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1047;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1048;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1046;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        _os_log_impl(&dword_25B107000, v1059, (os_log_type_t)v1058, "(%{public}s) Relationship %{public}s cannot switch from %{public}s to %{public}s", v1041, 0x2Au);
        v358 = v1040;
        swift_arrayDestroy();
        MEMORY[0x261160890](v358, -1, -1);
        sub_25B1C1590();
      }
      goto LABEL_164;
    }

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v1085 + 8))(v1038, v1086);
    uint64_t v184 = (int *)v1080;
    v924 = v1083;
    uint64_t v134 = v1084;
    os_log_t v599 = v1012;
    sub_25B187628((uint64_t)v1084, (uint64_t)v1012, &qword_26A4D9610);
    int v925 = ((uint64_t (*)(os_log_t, uint64_t, int *))v924)(v599, 1, v184);
    uint64_t v186 = (uint64_t)v1081;
    v807 = v1068;
    unint64_t v245 = v1066;
    if (v925 != 1) {
      goto LABEL_120;
    }
    __break(1u);
LABEL_112:

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v1085 + 8))(v1015, v1086);
LABEL_114:
    os_log_t v1075 = 0;
    uint64_t v89 = 1;
    goto LABEL_115;
  }
  uint64_t v742 = sub_25B236504();
  v743 = *(void (**)(char *, uint64_t, uint64_t))(v185 + 16);
  if (v1057)
  {
    v743(v317, v742, v1086);
    v744 = v1079;
    long long v745 = v1079[9];
    long long v1119 = v1079[8];
    long long v1120 = v745;
    long long v1121 = v1079[10];
    long long v746 = v1079[5];
    long long v1115 = v1079[4];
    long long v1116 = v746;
    long long v747 = v1079[7];
    long long v1117 = v1079[6];
    long long v1118 = v747;
    long long v748 = v1079[1];
    long long v1111 = *v1079;
    long long v1112 = v748;
    long long v749 = v1079[3];
    long long v1113 = v1079[2];
    long long v1114 = v749;
    v750 = (_OWORD *)swift_allocObject();
    long long v751 = v744[9];
    v750[9] = v744[8];
    v750[10] = v751;
    v750[11] = v744[10];
    long long v752 = v744[5];
    v750[5] = v744[4];
    v750[6] = v752;
    long long v753 = v744[7];
    v750[7] = v744[6];
    v750[8] = v753;
    long long v754 = v744[1];
    v750[1] = *v744;
    v750[2] = v754;
    long long v755 = v744[3];
    v750[3] = v744[2];
    v750[4] = v755;
    uint64_t v756 = v1067;
    sub_25B187628((uint64_t)v134, v1067, &qword_26A4D9610);
    unint64_t v757 = (*(unsigned __int8 *)(v1051 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1051 + 80);
    uint64_t v758 = swift_allocObject();
    uint64_t v759 = v758 + v757;
    uint64_t v760 = v758;
    sub_25B187574(v756, v759, &qword_26A4D9610);
    uint64_t v761 = swift_allocObject();
    *(void *)(v761 + 16) = v1075;
    *(void *)(v761 + 24) = 1;
    v762 = v1087;
    swift_retain();
    sub_25B1172F8((uint64_t)&v1111);
    os_log_t v1058 = (os_log_t)sub_25B290160();
    LODWORD(v1051) = sub_25B2908A0();
    uint64_t v1067 = swift_allocObject();
    *(unsigned char *)(v1067 + 16) = 34;
    uint64_t v1062 = swift_allocObject();
    *(unsigned char *)(v1062 + 16) = 8;
    uint64_t v763 = swift_allocObject();
    *(void *)(v763 + 16) = sub_25B187C14;
    *(void *)(v763 + 24) = v762;
    uint64_t v764 = swift_allocObject();
    *(void *)(v764 + 16) = sub_25B1877E0;
    *(void *)(v764 + 24) = v763;
    os_log_t v1074 = (os_log_t)swift_allocObject();
    LOBYTE(v1074[2].isa) = 34;
    os_log_t v1059 = (os_log_t)swift_allocObject();
    LOBYTE(v1059[2].isa) = 8;
    uint64_t v765 = swift_allocObject();
    *(void *)(v765 + 16) = sub_25B1877E8;
    *(void *)(v765 + 24) = v750;
    v766 = swift_allocObject();
    v766[2].Class isa = (Class)sub_25B1877E0;
    v766[3].Class isa = (Class)v765;
    v767 = v766;
    os_log_t v1075 = v766;
    v1048 = (uint64_t (*)(void))swift_allocObject();
    *((unsigned char *)v1048 + 16) = 34;
    v768 = (uint8_t *)swift_allocObject();
    v768[16] = 8;
    uint64_t v769 = swift_allocObject();
    *(void *)(v769 + 16) = sub_25B183100;
    *(void *)(v769 + 24) = v760;
    uint64_t v770 = swift_allocObject();
    *(void *)(v770 + 16) = sub_25B1877E0;
    *(void *)(v770 + 24) = v769;
    uint64_t v771 = v770;
    unint64_t v1049 = v770;
    uint64_t v772 = swift_allocObject();
    *(unsigned char *)(v772 + 16) = 34;
    v773 = v772;
    uint64_t v1050 = swift_allocObject();
    *(unsigned char *)(v1050 + 16) = 8;
    uint64_t v774 = swift_allocObject();
    *(void *)(v774 + 16) = sub_25B182C08;
    *(void *)(v774 + 24) = v761;
    uint64_t v775 = swift_allocObject();
    v1076 = v775;
    *(void *)(v775 + 16) = sub_25B1877E0;
    *(void *)(v775 + 24) = v774;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
    uint64_t v776 = swift_allocObject();
    *(_OWORD *)(v776 + 16) = xmmword_25B293240;
    *(void *)(v776 + 32) = sub_25B1877F4;
    *(void *)(v776 + 40) = v1067;
    *(void *)(v776 + 48) = sub_25B1877F4;
    *(void *)(v776 + 56) = v1062;
    *(void *)(v776 + 64) = sub_25B1877F0;
    *(void *)(v776 + 72) = v764;
    *(void *)(v776 + 80) = sub_25B1877F4;
    *(void *)(v776 + 88) = v1074;
    *(void *)(v776 + 96) = sub_25B1877F4;
    *(void *)(v776 + 104) = v1059;
    *(void *)(v776 + 112) = sub_25B1877F0;
    *(void *)(v776 + 120) = v767;
    *(void *)(v776 + 128) = sub_25B1877F4;
    *(void *)(v776 + 136) = v1048;
    *(void *)(v776 + 144) = sub_25B1877F4;
    *(void *)(v776 + 152) = v768;
    *(void *)(v776 + 160) = sub_25B1877F0;
    *(void *)(v776 + 168) = v771;
    *(void *)(v776 + 176) = sub_25B1877F4;
    *(void *)(v776 + 184) = v773;
    *(void *)(v776 + 192) = sub_25B1877F4;
    *(void *)(v776 + 200) = v1050;
    *(void *)(v776 + 208) = sub_25B1877F0;
    *(void *)(v776 + 216) = v1076;
    swift_retain();
    swift_retain();
    v1047 = (char *)v764;
    v777 = v1058;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v777, (os_log_type_t)v1051))
    {
      v778 = v1047;
      uint64_t v779 = v1062;
      os_log_t v780 = v1059;
      v1041 = v768;
      os_log_t v1046 = v773;
      v781 = (uint8_t *)sub_25B1C1508();
      v782 = (uint8_t *)swift_slowAlloc();
      *(void *)&v1145[0] = 0;
      v1144[0] = v782;
      *(_WORD *)v781 = 1026;
      *(void *)&long long v1089 = v781 + 2;
      *(void *)&long long v1100 = sub_25B1877F4;
      *((void *)&v1100 + 1) = v1067;
      uint64_t v134 = v1069;
      sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
      if (!v134)
      {
        v1040 = v782;
        v1069 = v781;
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v779;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v778;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1074;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v780;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1075;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1048;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1041;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1049;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1046;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F4;
        *((void *)&v1100 + 1) = v1050;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        *(void *)&long long v1100 = sub_25B1877F0;
        *((void *)&v1100 + 1) = v1076;
        sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
        swift_release();
        _os_log_impl(&dword_25B107000, v1058, (os_log_type_t)v1051, "(%{public}s) Relationship %{public}s cannot switch from %{public}s to %{public}s", v1069, 0x2Au);
        v783 = v1040;
        swift_arrayDestroy();
        MEMORY[0x261160890](v783, -1, -1);
        sub_25B1C1590();
      }
      goto LABEL_164;
    }

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v1085 + 8))(v1037, v1086);
    uint64_t v184 = (int *)v1080;
    v949 = v1083;
    uint64_t v134 = v1084;
    os_log_t v599 = v1008;
    sub_25B187628((uint64_t)v1084, (uint64_t)v1008, &qword_26A4D9610);
    int v950 = ((uint64_t (*)(os_log_t, uint64_t, int *))v949)(v599, 1, v184);
    uint64_t v186 = (uint64_t)v1081;
    unint64_t v245 = v1066;
    if (v950 == 1) {
      goto LABEL_160;
    }
    goto LABEL_120;
  }
  v743(v1009, v742, v1086);
  v926 = v1079;
  long long v927 = v1079[9];
  long long v1119 = v1079[8];
  long long v1120 = v927;
  long long v1121 = v1079[10];
  long long v928 = v1079[5];
  long long v1115 = v1079[4];
  long long v1116 = v928;
  long long v929 = v1079[7];
  long long v1117 = v1079[6];
  long long v1118 = v929;
  long long v930 = v1079[1];
  long long v1111 = *v1079;
  long long v1112 = v930;
  long long v931 = v1079[3];
  long long v1113 = v1079[2];
  long long v1114 = v931;
  v932 = (_OWORD *)swift_allocObject();
  long long v933 = v926[9];
  v932[9] = v926[8];
  v932[10] = v933;
  v932[11] = v926[10];
  long long v934 = v926[5];
  v932[5] = v926[4];
  v932[6] = v934;
  long long v935 = v926[7];
  v932[7] = v926[6];
  v932[8] = v935;
  long long v936 = v926[1];
  v932[1] = *v926;
  v932[2] = v936;
  long long v937 = v926[3];
  v932[3] = v926[2];
  v932[4] = v937;
  v938 = v1087;
  swift_retain();
  sub_25B1172F8((uint64_t)&v1111);
  v1076 = sub_25B290160();
  LODWORD(v1075) = sub_25B2908A0();
  uint64_t v939 = swift_allocObject();
  *(unsigned char *)(v939 + 16) = 34;
  uint64_t v940 = swift_allocObject();
  *(unsigned char *)(v940 + 16) = 8;
  uint64_t v941 = swift_allocObject();
  *(void *)(v941 + 16) = sub_25B187C14;
  *(void *)(v941 + 24) = v938;
  uint64_t v942 = swift_allocObject();
  *(void *)(v942 + 16) = sub_25B1877E0;
  *(void *)(v942 + 24) = v941;
  uint64_t v943 = swift_allocObject();
  *(unsigned char *)(v943 + 16) = 34;
  uint64_t v944 = swift_allocObject();
  *(unsigned char *)(v944 + 16) = 8;
  uint64_t v945 = swift_allocObject();
  *(void *)(v945 + 16) = sub_25B1877E8;
  *(void *)(v945 + 24) = v932;
  uint64_t v946 = swift_allocObject();
  *(void *)(v946 + 16) = sub_25B1877E0;
  *(void *)(v946 + 24) = v945;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D88);
  uint64_t v947 = swift_allocObject();
  *(_OWORD *)(v947 + 16) = xmmword_25B293230;
  *(void *)(v947 + 32) = sub_25B1877F4;
  *(void *)(v947 + 40) = v939;
  *(void *)(v947 + 48) = sub_25B1877F4;
  *(void *)(v947 + 56) = v940;
  *(void *)(v947 + 64) = sub_25B1877F0;
  *(void *)(v947 + 72) = v942;
  *(void *)(v947 + 80) = sub_25B1877F4;
  *(void *)(v947 + 88) = v943;
  *(void *)(v947 + 96) = sub_25B1877F4;
  *(void *)(v947 + 104) = v944;
  *(void *)(v947 + 112) = sub_25B1877F0;
  *(void *)(v947 + 120) = v946;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v948 = v1076;
  swift_bridgeObjectRelease();
  if (!os_log_type_enabled(v948, (os_log_type_t)v1075))
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v1085 + 8))(v1009, v1086);
LABEL_103:
    os_log_t v1075 = 0;
    uint64_t v89 = 2;
LABEL_115:
    uint64_t v184 = (int *)v1080;
    uint64_t v186 = (uint64_t)v1081;
    uint64_t v134 = v1084;
    uint64_t v849 = v1066;
    goto LABEL_121;
  }
  v876 = (uint8_t *)sub_25B1C1508();
  uint64_t v877 = swift_slowAlloc();
  *(void *)&v1145[0] = 0;
  v1144[0] = v877;
  *(_WORD *)v876 = 514;
  *(void *)&long long v1089 = v876 + 2;
  *(void *)&long long v1100 = sub_25B1877F4;
  *((void *)&v1100 + 1) = v939;
  uint64_t v134 = v1069;
  sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
  if (!v134)
  {
    swift_release();
    *(void *)&long long v1100 = sub_25B1877F4;
    *((void *)&v1100 + 1) = v940;
    sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
    swift_release();
    *(void *)&long long v1100 = sub_25B1877F0;
    *((void *)&v1100 + 1) = v942;
    sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
    swift_release();
    *(void *)&long long v1100 = sub_25B1877F4;
    *((void *)&v1100 + 1) = v943;
    sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
    swift_release();
    *(void *)&long long v1100 = sub_25B1877F4;
    *((void *)&v1100 + 1) = v944;
    sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
    swift_release();
    *(void *)&long long v1100 = sub_25B1877F0;
    *((void *)&v1100 + 1) = v946;
    sub_25B288DBC((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1100, (uint64_t)&v1089, (uint64_t)v1145, (uint64_t)v1144);
    swift_release();
    os_log_type_t v878 = v1075;
    v879 = "(%{public}s) Relationship %{public}s switched from pairing to paired via pairing";
LABEL_101:
    _os_log_impl(&dword_25B107000, v1076, v878, v879, v876, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v877, -1, -1);
    sub_25B1C1590();
  }
LABEL_164:

  __break(1u);
}

uint64_t sub_25B1530AC(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v25 = a1;
  uint64_t v26 = v2;
  uint64_t v3 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = sub_25B290410();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (void *)v1[29];
  *uint64_t v9 = v10;
  uint64_t v11 = *(void (**)(void))(v7 + 104);
  unsigned int v24 = *MEMORY[0x263F8F0E0];
  uint64_t v23 = (void (*)(void *, void, uint64_t))v11;
  v11(v9);
  id v12 = v10;
  LOBYTE(v10) = sub_25B290440();
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t))(v7 + 8);
  uint64_t result = v22(v9, v6);
  if (v10)
  {
    sub_25B1806D0(v25, (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Request);
    unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v1;
    sub_25B18095C((uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for ReplicatorMessage.Handshake.Request);
    *(void *)(v15 + ((v5 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    *uint64_t v9 = v12;
    v23(v9, v24, v6);
    id v16 = v12;
    swift_retain();
    LOBYTE(v14) = sub_25B290440();
    uint64_t result = v22(v9, v6);
    if (v14)
    {
      uint64_t v17 = v1[63];
      uint64_t v18 = v1[64];
      __swift_project_boxed_opaque_existential_1(v1 + 60, v17);
      uint64_t v19 = (void *)swift_allocObject();
      v19[2] = v1;
      uint64_t v19[3] = sub_25B183A84;
      v19[4] = v15;
      uint64_t v20 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v18 + 8);
      swift_retain();
      swift_retain();
      v20(sub_25B187C10, v19, v17, v18);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25B1533E0(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v25 = a1;
  uint64_t v26 = v2;
  uint64_t v3 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = sub_25B290410();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (void *)v1[29];
  *uint64_t v9 = v10;
  uint64_t v11 = *(void (**)(void))(v7 + 104);
  unsigned int v24 = *MEMORY[0x263F8F0E0];
  uint64_t v23 = (void (*)(void *, void, uint64_t))v11;
  v11(v9);
  id v12 = v10;
  LOBYTE(v10) = sub_25B290440();
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t))(v7 + 8);
  uint64_t result = v22(v9, v6);
  if (v10)
  {
    sub_25B1806D0(v25, (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Response);
    unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v1;
    sub_25B18095C((uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for ReplicatorMessage.Handshake.Response);
    *(void *)(v15 + ((v5 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    *uint64_t v9 = v12;
    v23(v9, v24, v6);
    id v16 = v12;
    swift_retain();
    LOBYTE(v14) = sub_25B290440();
    uint64_t result = v22(v9, v6);
    if (v14)
    {
      uint64_t v17 = v1[63];
      uint64_t v18 = v1[64];
      __swift_project_boxed_opaque_existential_1(v1 + 60, v17);
      uint64_t v19 = (void *)swift_allocObject();
      v19[2] = v1;
      uint64_t v19[3] = sub_25B18456C;
      v19[4] = v15;
      uint64_t v20 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v18 + 8);
      swift_retain();
      swift_retain();
      v20(sub_25B187C10, v19, v17, v18);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_25B153714(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  void (*v21)(uint64_t *__return_ptr, void *);

  uint64_t v21 = a1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = (uint64_t *)(a3 + 56);
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v10 = *(v7 - 1);
    uint64_t v11 = *v7;
    uint64_t v12 = *(v7 - 2);
    v20[0] = *(v7 - 3);
    v20[1] = v12;
    void v20[2] = v10;
    void v20[3] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(&v18, v20);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v19;
    if (v19)
    {
      uint64_t v14 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_25B21822C(0, v8[2] + 1, 1, v8);
      }
      unint64_t v16 = v8[2];
      unint64_t v15 = v8[3];
      if (v16 >= v15 >> 1) {
        uint64_t v8 = sub_25B21822C((void *)(v15 > 1), v16 + 1, 1, v8);
      }
      v8[2] = v16 + 1;
      uint64_t v9 = &v8[2 * v16];
      v9[4] = v14;
      v9[5] = v13;
    }
    v7 += 4;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_25B153898(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v135 = a2;
  uint64_t v118 = a1;
  uint64_t v4 = type metadata accessor for Replicator.SyncItem(0);
  uint64_t v121 = *(void *)(v4 - 8);
  uint64_t v122 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v134 = (uint64_t)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v133 = (uint64_t)&v115 - v7;
  uint64_t v8 = type metadata accessor for Record.ID(0);
  uint64_t v116 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v123 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v124 = (char *)&v115 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v126 = (uint64_t)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for PairingRelationship();
  uint64_t v125 = *(void *)(v131 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v131);
  uint64_t v119 = (uint64_t)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v117 = (uint64_t)&v115 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v120 = (unint64_t **)((char *)&v115 - v18);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB280);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Replicator.Session(0);
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v132 = (uint64_t)&v115 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_25B290410();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (unint64_t **)((char *)&v115 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = *(unint64_t **)(v2 + 232);
  void *v28 = v29;
  uint64_t v30 = *(void (**)(unint64_t **))(v26 + 104);
  LODWORD(v130) = *MEMORY[0x263F8F0E0];
  *(void *)&long long v129 = v30;
  v30(v28);
  uint64_t v127 = v29;
  LOBYTE(v29) = sub_25B290440();
  uint64_t v32 = *(void (**)(unint64_t **, uint64_t))(v26 + 8);
  uint64_t v31 = v26 + 8;
  uint64_t v128 = v32;
  v32(v28, v25);
  if ((v29 & 1) == 0)
  {
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  swift_beginAccess();
  uint64_t v136 = v3;
  uint64_t v33 = *(void *)(v3 + 568);
  if (!*(void *)(v33 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
LABEL_8:
    uint64_t v37 = &qword_26A4DB280;
    uint64_t v38 = (uint64_t)v21;
    return sub_25B116DE0(v38, v37);
  }
  swift_bridgeObjectRetain();
  unint64_t v34 = sub_25B18A93C(v135);
  if (v35)
  {
    sub_25B1806D0(*(void *)(v33 + 56) + *(void *)(v23 + 72) * v34, (uint64_t)v21, type metadata accessor for Replicator.Session);
    uint64_t v36 = 0;
  }
  else
  {
    uint64_t v36 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, v36, 1, v22);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1) {
    goto LABEL_8;
  }
  uint64_t v3 = v132;
  sub_25B18095C((uint64_t)v21, v132, type metadata accessor for Replicator.Session);
  uint64_t v40 = v127;
  void *v28 = v127;
  ((void (*)(unint64_t **, void, uint64_t))v129)(v28, v130, v25);
  uint64_t v41 = v40;
  LOBYTE(v40) = sub_25B290440();
  v128(v28, v25);
  if ((v40 & 1) == 0) {
    goto LABEL_47;
  }
  uint64_t v25 = v136;
  swift_beginAccess();
  sub_25B10FF48(v25 + 192, (uint64_t)&v139);
  uint64_t v42 = *((void *)&v140 + 1);
  uint64_t v43 = v141;
  __swift_project_boxed_opaque_existential_1(&v139, *((uint64_t *)&v140 + 1));
  uint64_t v44 = v126;
  MetadataStoring.pairingRelationship(remoteDeviceID:)(*(void *)(v3 + *(int *)(v22 + 20)), *(void *)(v3 + *(int *)(v22 + 20) + 8), v42, *(void *)(v43 + 8), v126);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v139);
  uint64_t v31 = v131;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v44, 1, v131) == 1)
  {
    sub_25B180A5C(v3, type metadata accessor for Replicator.Session);
    uint64_t v37 = &qword_26A4D9610;
    uint64_t v38 = v44;
    return sub_25B116DE0(v38, v37);
  }
  uint64_t v28 = v120;
  sub_25B18095C(v44, (uint64_t)v120, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  uint64_t v45 = (unint64_t **)((char *)v28 + *(int *)(v31 + 20));
  if (v45[4] < 4uLL || v45[5] > 0xFuLL)
  {
    if (qword_26A4D98C0 == -1)
    {
LABEL_34:
      uint64_t v78 = sub_25B290190();
      __swift_project_value_buffer(v78, (uint64_t)qword_26A4EB150);
      uint64_t v79 = v119;
      sub_25B1806D0((uint64_t)v28, v119, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      swift_retain_n();
      uint64_t v80 = sub_25B290160();
      os_log_type_t v81 = sub_25B2908A0();
      if (os_log_type_enabled(v80, v81))
      {
        uint64_t v82 = v31;
        uint64_t v83 = swift_slowAlloc();
        uint64_t v135 = swift_slowAlloc();
        uint64_t v138 = v135;
        *(_DWORD *)uint64_t v83 = 136446466;
        uint64_t v84 = *(void *)(v25 + 528);
        unint64_t v85 = *(void *)(v25 + 536);
        swift_bridgeObjectRetain();
        *(void *)&long long v139 = sub_25B288E98(v84, v85, &v138);
        sub_25B2909C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v83 + 12) = 2082;
        os_log_type_t v86 = (long long *)(v79 + *(int *)(v82 + 20));
        long long v87 = v86[7];
        long long v88 = v86[9];
        long long v147 = v86[8];
        long long v148 = v88;
        long long v89 = v86[9];
        long long v149 = v86[10];
        long long v90 = v86[3];
        long long v91 = v86[5];
        long long v143 = v86[4];
        long long v144 = v91;
        long long v92 = v86[5];
        long long v93 = v86[7];
        long long v145 = v86[6];
        long long v146 = v93;
        long long v94 = v86[1];
        long long v139 = *v86;
        long long v140 = v94;
        long long v95 = v86[3];
        long long v97 = *v86;
        long long v96 = v86[1];
        long long v141 = v86[2];
        long long v142 = v95;
        v137[8] = v147;
        v137[9] = v89;
        v137[10] = v86[10];
        v137[4] = v143;
        v137[5] = v92;
        v137[6] = v145;
        v137[7] = v87;
        v137[0] = v97;
        v137[1] = v96;
        v137[2] = v141;
        v137[3] = v90;
        sub_25B1172F8((uint64_t)&v139);
        uint64_t v98 = sub_25B290600();
        *(void *)&v137[0] = sub_25B288E98(v98, v99, &v138);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B180A5C(v79, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        _os_log_impl(&dword_25B107000, v80, v81, "(%{public}s) Not enqueuing records for incompatible remote device %{public}s", (uint8_t *)v83, 0x16u);
        uint64_t v100 = v135;
        swift_arrayDestroy();
        MEMORY[0x261160890](v100, -1, -1);
        MEMORY[0x261160890](v83, -1, -1);

        uint64_t v101 = (uint64_t)v120;
        goto LABEL_43;
      }

      uint64_t v114 = v79;
LABEL_45:
      sub_25B180A5C(v114, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      swift_release_n();
      sub_25B180A5C((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      return sub_25B180A5C(v3, type metadata accessor for Replicator.Session);
    }
LABEL_48:
    swift_once();
    goto LABEL_34;
  }
  uint64_t v46 = (uint64_t *)((char *)v28 + *(int *)(v31 + 32));
  if (v46[1] != 2)
  {
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v102 = sub_25B290190();
    __swift_project_value_buffer(v102, (uint64_t)qword_26A4EB150);
    uint64_t v103 = v117;
    sub_25B1806D0((uint64_t)v28, v117, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    swift_retain_n();
    uint64_t v104 = sub_25B290160();
    os_log_type_t v105 = sub_25B2908A0();
    if (os_log_type_enabled(v104, v105))
    {
      uint64_t v106 = swift_slowAlloc();
      uint64_t v107 = swift_slowAlloc();
      *(void *)&v137[0] = v107;
      *(_DWORD *)uint64_t v106 = 136446466;
      uint64_t v108 = *(void *)(v25 + 528);
      unint64_t v109 = *(void *)(v25 + 536);
      swift_bridgeObjectRetain();
      *(void *)&long long v139 = sub_25B288E98(v108, v109, (uint64_t *)v137);
      sub_25B2909C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v106 + 12) = 2082;
      uint64_t v110 = (void *)(v103 + *(int *)(v131 + 32));
      unint64_t v111 = v110[1];
      *(void *)&long long v139 = *v110;
      *((void *)&v139 + 1) = v111;
      sub_25B120090(v139, v111);
      uint64_t v112 = sub_25B290600();
      *(void *)&long long v139 = sub_25B288E98(v112, v113, (uint64_t *)v137);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B180A5C(v103, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      _os_log_impl(&dword_25B107000, v104, v105, "(%{public}s) Not enqueuing records for relationship state %{public}s", (uint8_t *)v106, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v107, -1, -1);
      MEMORY[0x261160890](v106, -1, -1);

      uint64_t v101 = (uint64_t)v120;
      goto LABEL_43;
    }

    uint64_t v114 = v103;
    goto LABEL_45;
  }
  uint64_t v47 = *(void *)(v118 + 16);
  if (!v47) {
    goto LABEL_42;
  }
  uint64_t v126 = *v46;
  uint64_t v127 = (unint64_t *)(v25 + 560);
  uint64_t v48 = v118 + ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80));
  uint64_t v131 = *(void *)(v116 + 72);
  swift_bridgeObjectRetain();
  *(void *)&long long v49 = 136446466;
  long long v129 = v49;
  uint64_t v128 = (void (*)(unint64_t **, uint64_t))(MEMORY[0x263F8EE58] + 8);
  uint64_t v50 = (uint64_t)v123;
  uint64_t v51 = v124;
  long long v130 = v45;
  do
  {
    sub_25B1806D0(v48, (uint64_t)v51, type metadata accessor for Record.ID);
    if (*(void *)(v45[12] + 16))
    {
      uint64_t v53 = v51[4];
      uint64_t v52 = v51[5];
      uint64_t v54 = (uint64_t)v51;
      uint64_t v57 = v51 + 2;
      uint64_t v56 = v51[2];
      uint64_t v55 = v57[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B18A768(v56, v55, v53, v52);
      if (v58)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v59 = v133;
        sub_25B1806D0(v54, v133, type metadata accessor for Record.ID);
        uint64_t v60 = v59 + *(int *)(v122 + 20);
        uint64_t v61 = sub_25B290080();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v60, v135, v61);
        sub_25B1806D0(v59, v134, type metadata accessor for Replicator.SyncItem);
        uint64_t v62 = v127;
        swift_beginAccess();
        unint64_t v63 = *v62;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v62 = v63;
        uint64_t v51 = (void *)v54;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v63 = sub_25B218870(0, *(void *)(v63 + 16) + 1, 1, v63);
          *uint64_t v127 = v63;
        }
        uint64_t v25 = v136;
        uint64_t v45 = v130;
        unint64_t v66 = *(void *)(v63 + 16);
        unint64_t v65 = *(void *)(v63 + 24);
        if (v66 >= v65 >> 1)
        {
          unint64_t v63 = sub_25B218870(v65 > 1, v66 + 1, 1, v63);
          *uint64_t v127 = v63;
        }
        *(void *)(v63 + 16) = v66 + 1;
        sub_25B18095C(v134, v63+ ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80))+ *(void *)(v121 + 72) * v66, type metadata accessor for Replicator.SyncItem);
        swift_endAccess();
        sub_25B180A5C(v133, type metadata accessor for Replicator.SyncItem);
        sub_25B180A5C((uint64_t)v51, type metadata accessor for Record.ID);
        uint64_t v50 = (uint64_t)v123;
        goto LABEL_20;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v51 = (void *)v54;
      uint64_t v25 = v136;
      uint64_t v45 = v130;
    }
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v67 = sub_25B290190();
    __swift_project_value_buffer(v67, (uint64_t)qword_26A4EB150);
    sub_25B1806D0((uint64_t)v51, v50, type metadata accessor for Record.ID);
    swift_retain_n();
    uint64_t v68 = sub_25B290160();
    os_log_type_t v69 = sub_25B2908A0();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      *(void *)&long long v139 = v71;
      *(_DWORD *)uint64_t v70 = v129;
      uint64_t v72 = *(void *)(v25 + 528);
      unint64_t v73 = *(void *)(v136 + 536);
      swift_bridgeObjectRetain();
      *(void *)(v70 + 4) = sub_25B288E98(v72, v73, (uint64_t *)&v139);
      swift_release_n();
      uint64_t v25 = v136;
      swift_bridgeObjectRelease();
      *(_WORD *)(v70 + 12) = 2082;
      uint64_t v74 = Record.ID.description.getter();
      *(void *)(v70 + 14) = sub_25B288E98(v74, v75, (uint64_t *)&v139);
      swift_bridgeObjectRelease();
      sub_25B180A5C(v50, type metadata accessor for Record.ID);
      _os_log_impl(&dword_25B107000, v68, v69, "(%{public}s) Not enqueuing record as remote device has no receiving zone: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy();
      uint64_t v76 = v71;
      uint64_t v51 = v124;
      MEMORY[0x261160890](v76, -1, -1);
      uint64_t v77 = v70;
      uint64_t v45 = v130;
      MEMORY[0x261160890](v77, -1, -1);
    }
    else
    {

      sub_25B180A5C(v50, type metadata accessor for Record.ID);
      swift_release_n();
    }
    sub_25B180A5C((uint64_t)v51, type metadata accessor for Record.ID);
LABEL_20:
    v48 += v131;
    --v47;
  }
  while (v47);
  sub_25B1200A4(v126, 2uLL);
  swift_bridgeObjectRelease();
  uint64_t v28 = v120;
LABEL_42:
  uint64_t v101 = (uint64_t)v28;
LABEL_43:
  sub_25B180A5C(v101, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  return sub_25B180A5C(v132, type metadata accessor for Replicator.Session);
}

void sub_25B15495C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290410();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (void *)((char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (void *)a1[29];
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F0E0], v6);
  id v11 = v10;
  LOBYTE(v10) = sub_25B290440();
  uint64_t v12 = (void *)(*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    uint64_t v13 = (void *)MEMORY[0x26115FD30](v12);
    sub_25B163160(a1);
    uint64_t v14 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ReplicatorMessage.Handshake.Complete(0) + 20));
    unint64_t v16 = v14[1];
    v29[0] = *v14;
    uint64_t v15 = v29[0];
    v29[1] = v16;
    uint64_t v17 = (_OWORD *)(a3 + *(int *)(type metadata accessor for PairingRelationship() + 20));
    long long v18 = v17[7];
    long long v19 = v17[9];
    long long v37 = v17[8];
    long long v38 = v19;
    long long v20 = v17[9];
    long long v39 = v17[10];
    long long v21 = v17[3];
    long long v22 = v17[5];
    long long v33 = v17[4];
    long long v34 = v22;
    long long v23 = v17[5];
    long long v24 = v17[7];
    long long v35 = v17[6];
    long long v36 = v24;
    long long v25 = v17[1];
    long long v26 = v17[3];
    long long v31 = v17[2];
    long long v32 = v26;
    long long v27 = v17[1];
    v30[0] = *v17;
    v30[1] = v27;
    v28[8] = v37;
    v28[9] = v20;
    v28[10] = v17[10];
    v28[4] = v33;
    v28[5] = v23;
    v28[6] = v35;
    v28[7] = v18;
    v28[0] = v30[0];
    v28[1] = v25;
    void v28[2] = v31;
    void v28[3] = v21;
    sub_25B120090(v15, v16);
    sub_25B1172F8((uint64_t)v30);
    sub_25B154B6C(v29, (uint64_t)v28);
    sub_25B11DEBC((uint64_t)v30);
    sub_25B1200A4(v15, v16);
  }
  else
  {
    __break(1u);
    __break(1u);
  }
}

void sub_25B154B6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = sub_25B290410();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *a1;
  unint64_t v10 = a1[1];
  uint64_t v11 = *(void *)a2;
  unint64_t v12 = *(void *)(a2 + 8);
  int v13 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v14 = *(void **)(v2 + 232);
  void *v8 = v14;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F0E0], v5);
  id v15 = v14;
  LOBYTE(v14) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v14)
  {
    if (*(unsigned char *)(v2 + 96) == 4 || v13 == 4)
    {
      if (v10)
      {
        sub_25B120090(v9, v10);
        sub_25B1200A4(v9, v10);
        sub_25B1200A4(0, 0);
      }
      else
      {
        sub_25B1200A4(v9, 0);
        sub_25B1200A4(0, 0);
        sub_25B12E9C4(v11, v12, (void *)v2);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_25B154D00(int *a1, int *a2, unint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  *(void *)&long long v349 = a6;
  *((void *)&v349 + 1) = a7;
  int v353 = a5;
  uint64_t v352 = a4;
  uint64_t v377 = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (unint64_t)v319 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v373 = (char *)v319 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB070);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v332 = (uint64_t)v319 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Message();
  uint64_t v17 = *(uint64_t (**)())(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unint64_t v333 = (char *)v319 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ReplicatorMessage(0);
  MEMORY[0x270FA5388](v19);
  uint64_t v347 = (uint64_t)v319 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v339 = type metadata accessor for ReplicatorMessage.Handshake(0);
  MEMORY[0x270FA5388](v339);
  uint64_t v344 = (uint64_t)v319 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v338 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  MEMORY[0x270FA5388](v338);
  uint64_t v343 = (uint64_t)v319 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v324 = type metadata accessor for ZoneVersion();
  uint64_t v372 = *(void *)(v324 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v324);
  unint64_t v371 = (unint64_t)v319 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v367 = (uint64_t)v319 - v25;
  uint64_t v374 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9190);
  uint64_t v26 = MEMORY[0x270FA5388](v374);
  long long v361 = (char *)v319 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v360 = (char *)v319 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v370 = (uint64_t)v319 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v359 = (char *)v319 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v357 = (void *)((char *)v319 - v35);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  os_log_t v356 = (void *)((char *)v319 - v37);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v366 = (void *)((char *)v319 - v39);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v375 = (void *)((char *)v319 - v41);
  MEMORY[0x270FA5388](v40);
  long long v362 = (char *)v319 - v42;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB280);
  uint64_t v44 = MEMORY[0x270FA5388](v43 - 8);
  uint64_t v337 = (uint64_t)v319 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v44);
  unint64_t v341 = (unint64_t)v319 - v46;
  uint64_t v47 = type metadata accessor for Replicator.Session(0);
  uint64_t v345 = *(void *)(v47 - 8);
  uint64_t v346 = v47;
  uint64_t v48 = MEMORY[0x270FA5388](v47);
  uint64_t v336 = (char *)v319 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  uint64_t v323 = (uint64_t)v319 - v50;
  uint64_t v51 = sub_25B290080();
  uint64_t v350 = *(void *)(v51 - 8);
  uint64_t v351 = v51;
  uint64_t v52 = MEMORY[0x270FA5388](v51);
  uint64_t v334 = (char *)v319 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v52);
  uint64_t v348 = (char *)v319 - v54;
  unint64_t v55 = sub_25B290190();
  uint64_t v328 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  long long v327 = (char *)v319 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v355 = type metadata accessor for PairingRelationship();
  uint64_t v368 = *(void *)(v355 - 8);
  MEMORY[0x270FA5388](v355);
  uint64_t v326 = (uint64_t)v319 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  uint64_t v59 = MEMORY[0x270FA5388](v58 - 8);
  uint64_t v335 = (uint64_t)v319 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  long long v363 = (char *)v319 - v62;
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  uint64_t v321 = (uint64_t)v319 - v64;
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  uint64_t v325 = (uint64_t)v319 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  uint64_t v358 = (uint64_t)v319 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v342 = (uint64_t)v319 - v70;
  MEMORY[0x270FA5388](v69);
  uint64_t v354 = (uint64_t)v319 - v71;
  if (qword_26A4D98C0 != -1) {
    goto LABEL_116;
  }
LABEL_2:
  unint64_t v329 = v55;
  uint64_t v72 = __swift_project_value_buffer(v55, (uint64_t)qword_26A4EB150);
  swift_retain();
  sub_25B180D48(a3);
  uint64_t v376 = v72;
  unint64_t v73 = sub_25B290160();
  os_log_type_t v74 = sub_25B2908A0();
  BOOL v75 = os_log_type_enabled(v73, v74);
  long long v364 = a2;
  unint64_t v322 = v11;
  long long v330 = v17;
  uint64_t v331 = v16;
  uint64_t v340 = v19;
  if (v75)
  {
    uint64_t v76 = swift_slowAlloc();
    uint64_t v369 = swift_slowAlloc();
    *(void *)&long long v403 = v369;
    *(_DWORD *)uint64_t v76 = 136446722;
    uint64_t v77 = *((void *)v364 + 66);
    uint64_t v78 = (uint64_t *)a3;
    unint64_t v79 = *((void *)v364 + 67);
    swift_bridgeObjectRetain();
    *(void *)&long long v414 = sub_25B288E98(v77, v79, (uint64_t *)&v403);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 12) = 2082;
    uint64_t v80 = *v78;
    unint64_t v81 = v78[1];
    swift_bridgeObjectRetain();
    *(void *)&long long v414 = sub_25B288E98(v80, v81, (uint64_t *)&v403);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B180DAC((uint64_t)v78);
    *(_WORD *)(v76 + 22) = 2082;
    *(void *)&long long v414 = v352;
    BYTE8(v414) = v353;
    uint64_t v82 = ReplicationSchedule.description.getter();
    *(void *)&long long v414 = sub_25B288E98(v82, v83, (uint64_t *)&v403);
    a3 = (unint64_t)v78;
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v73, v74, "(%{public}s) Sending handshake request to %{public}s; schedule: %{public}s",
      (uint8_t *)v76,
      0x20u);
    uint64_t v84 = v369;
    swift_arrayDestroy();
    MEMORY[0x261160890](v84, -1, -1);
    uint64_t v85 = v76;
    a2 = v364;
    MEMORY[0x261160890](v85, -1, -1);
  }
  else
  {
    swift_release();
    sub_25B180DAC(a3);
  }

  id v86 = v377;
  uint64_t v87 = v368;
  if (v377)
  {
    long long v88 = v377;
    swift_retain();
    id v89 = v86;
    swift_retain();
    id v90 = v86;
    long long v91 = sub_25B290160();
    os_log_type_t v92 = sub_25B2908A0();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = swift_slowAlloc();
      long long v94 = (void *)swift_slowAlloc();
      unint64_t v95 = a3;
      uint64_t v96 = swift_slowAlloc();
      *(void *)&long long v414 = v96;
      *(_DWORD *)uint64_t v93 = 136446466;
      uint64_t v97 = *((void *)v364 + 66);
      unint64_t v98 = *((void *)v364 + 67);
      swift_bridgeObjectRetain();
      *(void *)&long long v403 = sub_25B288E98(v97, v98, (uint64_t *)&v414);
      sub_25B2909C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v93 + 12) = 2114;
      unint64_t v99 = v377;
      uint64_t v100 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v403 = v100;
      id v86 = v377;
      sub_25B2909C0();
      *long long v94 = v100;

      _os_log_impl(&dword_25B107000, v91, v92, "(%{public}s) Abandoning handshake request because prerequisites are not met: %{public}@", (uint8_t *)v93, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
      swift_arrayDestroy();
      MEMORY[0x261160890](v94, -1, -1);
      swift_arrayDestroy();
      uint64_t v101 = v96;
      a3 = v95;
      MEMORY[0x261160890](v101, -1, -1);
      MEMORY[0x261160890](v93, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    sub_25B15768C(*(void *)a3, *(void *)(a3 + 8));

    return;
  }
  if ((a2[150] & 1) == 0)
  {
    uint64_t v106 = (uint64_t *)a3;
    swift_retain();
    os_log_type_t v105 = sub_25B290160();
    os_log_type_t v114 = sub_25B2908A0();
    if (!os_log_type_enabled(v105, v114))
    {

      swift_release();
      goto LABEL_23;
    }
    uint64_t v108 = swift_slowAlloc();
    uint64_t v109 = swift_slowAlloc();
    *(void *)&long long v414 = v109;
    *(_DWORD *)uint64_t v108 = 136446210;
    uint64_t v115 = *((void *)v364 + 66);
    unint64_t v116 = *((void *)v364 + 67);
    swift_bridgeObjectRetain();
    *(void *)&long long v403 = sub_25B288E98(v115, v116, (uint64_t *)&v414);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v105, v114, "(%{public}s) Abandoning handshake request because replicator is disabled", (uint8_t *)v108, 0xCu);
    goto LABEL_17;
  }
  if (*(void *)(a3 + 40) == 7)
  {
    uint64_t v102 = v364;
    swift_beginAccess();
    uint64_t v103 = *((void *)v102 + 81);
    swift_bridgeObjectRetain();
    char v104 = sub_25B2109B4(0xD000000000000011, 0x800000025B29C8A0, v103);
    swift_bridgeObjectRelease();
    if (v104)
    {
      swift_retain();
      sub_25B180D48(a3);
      os_log_type_t v105 = sub_25B290160();
      uint64_t v106 = (uint64_t *)a3;
      os_log_type_t v107 = sub_25B2908A0();
      if (!os_log_type_enabled(v105, v107))
      {
        swift_release();
        sub_25B180DAC((uint64_t)v106);
        goto LABEL_18;
      }
      uint64_t v108 = swift_slowAlloc();
      uint64_t v109 = swift_slowAlloc();
      *(void *)&long long v414 = v109;
      *(_DWORD *)uint64_t v108 = 136446466;
      uint64_t v110 = *((void *)v364 + 66);
      unint64_t v111 = *((void *)v364 + 67);
      swift_bridgeObjectRetain();
      *(void *)&long long v403 = sub_25B288E98(v110, v111, (uint64_t *)&v414);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v108 + 12) = 2082;
      uint64_t v112 = *v106;
      unint64_t v113 = v106[1];
      swift_bridgeObjectRetain();
      *(void *)&long long v403 = sub_25B288E98(v112, v113, (uint64_t *)&v414);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B180DAC((uint64_t)v106);
      _os_log_impl(&dword_25B107000, v105, v107, "(%{public}s) Abandoning handshake with old-chronod as chronod client is disabled: %{public}s", (uint8_t *)v108, 0x16u);
LABEL_17:
      swift_arrayDestroy();
      MEMORY[0x261160890](v109, -1, -1);
      MEMORY[0x261160890](v108, -1, -1);
LABEL_18:

LABEL_23:
      sub_25B15768C(*v106, v106[1]);
      return;
    }
  }
  unint64_t v117 = a3;
  uint64_t v118 = v364;
  swift_beginAccess();
  uint64_t v377 = v118 + 48;
  sub_25B10FF48((uint64_t)(v118 + 48), (uint64_t)&v414);
  uint64_t v119 = *((void *)&v415 + 1);
  uint64_t v120 = v416;
  __swift_project_boxed_opaque_existential_1(&v414, *((uint64_t *)&v415 + 1));
  uint64_t v122 = *(void *)v117;
  uint64_t v121 = *(void *)(v117 + 8);
  uint64_t v123 = *(void *)(v120 + 8);
  uint64_t v124 = v354;
  MetadataStoring.pairingRelationship(remoteDeviceID:)(*(void *)v117, v121, v119, v123, v354);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v414);
  uint64_t v125 = v342;
  sub_25B187628(v124, v342, &qword_26A4D9610);
  v320 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
  unsigned int v126 = v320(v125, 1, v355);
  long long v365 = (uint64_t (*)())v121;
  uint64_t v369 = v122;
  v319[0] = v117;
  v319[1] = v87 + 48;
  if (v126 == 1)
  {
    sub_25B116DE0(v125, &qword_26A4D9610);
    v402[0] = xmmword_25B293210;
    LOBYTE(v391) = *(unsigned char *)(v117 + 32);
    long long v414 = 0u;
    long long v415 = 0u;
    LOWORD(v416) = 256;
    uint64_t v127 = v124;
    uint64_t v129 = *(void *)(v117 + 16);
    uint64_t v128 = *(void *)(v117 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(void *)&long long v318 = v129;
    *((void *)&v318 + 1) = v128;
    DeviceDescriptor.init(id:name:protocolVersion:deviceType:screenDescriptor:zones:messageTypes:idsIdentityBlob:marketingName:productType:personaID:)(v122, v121, 0, 0xE000000000000000, (uint64_t *)v402, (char *)&v391, (uint64_t *)&v414, MEMORY[0x263F8EE78], &v403, MEMORY[0x263F8EE78], 0, 0xF000000000000000, 0, 0, v318);
    long long v422 = v411;
    long long v423 = v412;
    long long v424 = v413;
    long long v418 = v407;
    long long v419 = v408;
    long long v420 = v409;
    long long v421 = v410;
    long long v414 = v403;
    long long v415 = v404;
    long long v416 = v405;
    long long v417 = v406;
    uint64_t v130 = v358;
    sub_25B290070();
    uint64_t v131 = v355;
    sub_25B1172F8((uint64_t)&v414);
    sub_25B28FFD0();
    sub_25B28FFD0();
    long long v132 = v349;
    sub_25B120090(v349, *((unint64_t *)&v349 + 1));
    sub_25B28FFD0();
    uint64_t v133 = (long long *)(v130 + *(int *)(v131 + 20));
    long long v134 = v419;
    v133[4] = v418;
    v133[5] = v134;
    long long v135 = v424;
    long long v136 = v422;
    v133[9] = v423;
    v133[10] = v135;
    long long v137 = v421;
    v133[6] = v420;
    v133[7] = v137;
    v133[8] = v136;
    long long v138 = v415;
    *uint64_t v133 = v414;
    v133[1] = v138;
    long long v139 = v417;
    v133[2] = v416;
    v133[3] = v139;
    *(_OWORD *)(v130 + *(int *)(v131 + 32)) = v132;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v130, 0, 1, v131);
    sub_25B185B64(v130, v127, &qword_26A4D9610);
    sub_25B10FF48((uint64_t)v377, (uint64_t)&v403);
    uint64_t v140 = *((void *)&v404 + 1);
    uint64_t v141 = v405;
    __swift_project_boxed_opaque_existential_1(&v403, *((uint64_t *)&v404 + 1));
    uint64_t v142 = v325;
    sub_25B187628(v127, v325, &qword_26A4D9610);
    long long v143 = v320;
    if (v320(v142, 1, v131) == 1) {
      goto LABEL_122;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v141 + 16) + 88))(v142, v140);
    sub_25B11DEBC((uint64_t)&v414);
    sub_25B180A5C(v142, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v403);
  }
  else
  {
    uint64_t v144 = v326;
    sub_25B18095C(v125, v326, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B157B38(v144);
    uint64_t v145 = v355;
    long long v146 = (long long *)(v144 + *(int *)(v355 + 20));
    long long v147 = v146[8];
    long long v148 = v146[6];
    long long v421 = v146[7];
    long long v422 = v147;
    long long v149 = v146[8];
    long long v150 = v146[10];
    long long v423 = v146[9];
    long long v424 = v150;
    long long v151 = v146[4];
    long long v152 = v146[2];
    long long v417 = v146[3];
    long long v418 = v151;
    long long v153 = v146[4];
    long long v154 = v146[6];
    long long v419 = v146[5];
    long long v420 = v154;
    long long v155 = *v146;
    long long v156 = v146[2];
    long long v415 = v146[1];
    long long v416 = v156;
    long long v157 = *v146;
    long long v411 = v149;
    long long v412 = v423;
    long long v413 = v146[10];
    long long v414 = v157;
    long long v407 = v153;
    long long v408 = v419;
    long long v409 = v148;
    long long v410 = v421;
    long long v403 = v155;
    long long v404 = v415;
    long long v405 = v152;
    long long v406 = v417;
    v402[0] = v349;
    sub_25B1172F8((uint64_t)&v414);
    uint64_t v158 = v358;
    sub_25B148078(&v403, (uint64_t)v402, 1, 1, v358);
    sub_25B11DEBC((uint64_t)&v414);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v158, 0, 1, v145);
    sub_25B185B64(v158, v124, &qword_26A4D9610);
    uint64_t v160 = v327;
    uint64_t v159 = v328;
    unint64_t v161 = v329;
    (*(void (**)(char *, uint64_t, unint64_t))(v328 + 16))(v327, v376, v329);
    swift_retain_n();
    uint64_t v162 = sub_25B290160();
    os_log_type_t v163 = sub_25B2908A0();
    if (!os_log_type_enabled(v162, v163))
    {
      swift_release_n();

      (*(void (**)(char *, unint64_t))(v159 + 8))(v160, v161);
      sub_25B180A5C(v144, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      long long v143 = v320;
      goto LABEL_29;
    }
    uint64_t v164 = v124;
    uint64_t v165 = swift_slowAlloc();
    uint64_t v166 = swift_slowAlloc();
    *(void *)&long long v403 = v166;
    *(_DWORD *)uint64_t v165 = 136446466;
    uint64_t v167 = *((void *)v118 + 66);
    unint64_t v168 = *((void *)v118 + 67);
    swift_bridgeObjectRetain();
    *(void *)&v402[0] = sub_25B288E98(v167, v168, (uint64_t *)&v403);
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v165 + 12) = 2082;
    swift_beginAccess();
    uint64_t v169 = v321;
    sub_25B187628(v164, v321, &qword_26A4D9610);
    long long v143 = v320;
    if (v320(v169, 1, v355) == 1) {
      goto LABEL_124;
    }
    uint64_t v170 = sub_25B290600();
    *(void *)&v402[0] = sub_25B288E98(v170, v171, (uint64_t *)&v403);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v162, v163, "(%{public}s) Using existing relationship: %{public}s", (uint8_t *)v165, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v166, -1, -1);
    MEMORY[0x261160890](v165, -1, -1);

    (*(void (**)(char *, unint64_t))(v328 + 8))(v327, v329);
    sub_25B180A5C(v326, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  }
  uint64_t v124 = v354;
LABEL_29:
  uint64_t v172 = (uint64_t)v363;
  sub_25B133AA0(&v414);
  swift_beginAccess();
  sub_25B187628(v124, v172, &qword_26A4D9610);
  if (v143(v172, 1, v355) == 1) {
    goto LABEL_119;
  }
  uint64_t v16 = sub_25B157DAC(v172);
  sub_25B180A5C(v172, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v173 = sub_25B290160();
  os_log_type_t v174 = sub_25B2908A0();
  if (os_log_type_enabled(v173, v174))
  {
    uint64_t v175 = swift_slowAlloc();
    uint64_t v176 = swift_slowAlloc();
    *(void *)&long long v403 = v176;
    *(_DWORD *)uint64_t v175 = 136446466;
    uint64_t v177 = *((void *)v364 + 66);
    unint64_t v178 = *((void *)v364 + 67);
    swift_bridgeObjectRetain();
    *(void *)&v402[0] = sub_25B288E98(v177, v178, (uint64_t *)&v403);
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v175 + 12) = 2082;
    sub_25B180E18();
    swift_bridgeObjectRetain();
    uint64_t v179 = sub_25B2904E0();
    unint64_t v181 = v180;
    swift_bridgeObjectRelease();
    *(void *)&v402[0] = sub_25B288E98(v179, v181, (uint64_t *)&v403);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v173, v174, "(%{public}s) Local zone versions: %{public}s", (uint8_t *)v175, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v176, -1, -1);
    MEMORY[0x261160890](v175, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  uint64_t v182 = v350;
  uint64_t v183 = (uint64_t)v373;
  uint64_t v17 = v365;
  uint64_t v19 = v369;
  unint64_t v11 = v341;
  sub_25B158520(v369, (uint64_t)v365, v341);
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v345 + 48))(v11, 1, v346) == 1)
  {
    sub_25B116DE0(v11, &qword_26A4DB280);
    sub_25B290070();
  }
  else
  {
    uint64_t v184 = v323;
    sub_25B18095C(v11, v323, type metadata accessor for Replicator.Session);
    (*(void (**)(char *, uint64_t, uint64_t))(v182 + 16))(v348, v184, v351);
    sub_25B180A5C(v184, type metadata accessor for Replicator.Session);
  }
  uint64_t v185 = v354;
  uint64_t v186 = v355;
  if (v320(v354, 1, v355) == 1)
  {
LABEL_120:
    __break(1u);
    goto LABEL_121;
  }
  uint64_t v187 = (long long *)(v185 + *(int *)(v186 + 20));
  long long v188 = v187[5];
  long long v407 = v187[4];
  long long v408 = v188;
  long long v189 = v187[3];
  long long v405 = v187[2];
  long long v406 = v189;
  long long v190 = v187[10];
  long long v191 = v187[8];
  long long v412 = v187[9];
  long long v413 = v190;
  long long v192 = v187[7];
  long long v409 = v187[6];
  long long v410 = v192;
  long long v411 = v191;
  long long v193 = v187[1];
  long long v403 = *v187;
  long long v404 = v193;
  unint64_t v55 = v405;
  uint64_t v194 = *(void *)(v16 + 64);
  uint64_t v358 = v16 + 64;
  uint64_t v195 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v196 = -1;
  if (v195 < 64) {
    uint64_t v196 = ~(-1 << v195);
  }
  a3 = v196 & v194;
  swift_bridgeObjectRetain();
  sub_25B1172F8((uint64_t)&v403);
  long long v363 = (char *)((unint64_t)(v195 + 63) >> 6);
  uint64_t v368 = v16;
  if (v55 <= 7)
  {
    unint64_t v55 = 0;
    a2 = (int *)MEMORY[0x263F8EE80];
    v360 = "Swift/UnsafePointer.swift";
    long long v361 = (char *)0x800000025B29C8A0;
    while (1)
    {
      uint64_t v377 = a2;
      if (a3)
      {
        uint64_t v376 = (a3 - 1) & a3;
        unint64_t v371 = v55;
        unint64_t v197 = __clz(__rbit64(a3)) | (v55 << 6);
      }
      else
      {
        int64_t v198 = v55 + 1;
        if (__OFADD__(v55, 1)) {
          goto LABEL_113;
        }
        if (v198 >= (uint64_t)v363) {
          goto LABEL_106;
        }
        unint64_t v199 = *(void *)(v358 + 8 * v198);
        uint64_t v200 = v55 + 1;
        if (!v199)
        {
          uint64_t v200 = v55 + 2;
          if ((uint64_t)(v55 + 2) >= (uint64_t)v363) {
            goto LABEL_106;
          }
          unint64_t v199 = *(void *)(v358 + 8 * v200);
          if (!v199)
          {
            uint64_t v200 = v55 + 3;
            if ((uint64_t)(v55 + 3) >= (uint64_t)v363) {
              goto LABEL_106;
            }
            unint64_t v199 = *(void *)(v358 + 8 * v200);
            if (!v199)
            {
              uint64_t v200 = v55 + 4;
              if ((uint64_t)(v55 + 4) >= (uint64_t)v363) {
                goto LABEL_106;
              }
              unint64_t v199 = *(void *)(v358 + 8 * v200);
              if (!v199)
              {
                unint64_t v201 = v55 + 5;
                if ((uint64_t)(v55 + 5) >= (uint64_t)v363) {
                  goto LABEL_106;
                }
                unint64_t v199 = *(void *)(v358 + 8 * v201);
                if (!v199)
                {
                  while (1)
                  {
                    uint64_t v200 = v201 + 1;
                    if (__OFADD__(v201, 1)) {
                      break;
                    }
                    if (v200 >= (uint64_t)v363) {
                      goto LABEL_106;
                    }
                    unint64_t v199 = *(void *)(v358 + 8 * v200);
                    ++v201;
                    if (v199) {
                      goto LABEL_61;
                    }
                  }
                  __break(1u);
LABEL_118:
                  __break(1u);
LABEL_119:
                  __break(1u);
                  goto LABEL_120;
                }
                uint64_t v200 = v55 + 5;
              }
            }
          }
        }
LABEL_61:
        uint64_t v376 = (v199 - 1) & v199;
        unint64_t v371 = v200;
        unint64_t v197 = __clz(__rbit64(v199)) + (v200 << 6);
      }
      uint64_t v202 = *(void *)(v16 + 56);
      uint64_t v203 = (uint64_t *)(*(void *)(v16 + 48) + 32 * v197);
      uint64_t v204 = *v203;
      uint64_t v205 = v203[1];
      uint64_t v206 = v203[2];
      uint64_t v207 = v203[3];
      uint64_t v370 = *(void *)(v372 + 72);
      uint64_t v208 = v374;
      uint64_t v209 = v362;
      sub_25B1806D0(v202 + v370 * v197, (uint64_t)&v362[*(int *)(v374 + 48)], (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      *uint64_t v209 = v204;
      v209[1] = v205;
      v209[2] = v206;
      v209[3] = v207;
      uint64_t v210 = (uint64_t)v209;
      uint64_t v211 = v375;
      sub_25B187574(v210, (uint64_t)v375, (uint64_t *)&unk_26A4D9190);
      uint64_t v212 = *(int *)(v208 + 48);
      int v213 = v366;
      uint64_t v214 = (uint64_t)v366 + v212;
      uint64_t v215 = (uint64_t)v211 + v212;
      uint64_t v216 = *v211;
      uint64_t v217 = v211[1];
      uint64_t v218 = v211[2];
      unint64_t v11 = v211[3];
      void *v366 = v216;
      v213[1] = v217;
      v213[2] = v218;
      v213[3] = v11;
      sub_25B1806D0(v215, v214, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      if (v218 == 0xD000000000000011 && (char *)v11 == v361)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25B180A5C(v214, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      }
      else
      {
        char v219 = sub_25B290FB0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25B180A5C(v214, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        if ((v219 & 1) == 0)
        {
          uint64_t v183 = (uint64_t)v373;
          uint64_t v19 = v369;
          a2 = v377;
          goto LABEL_43;
        }
      }
      a2 = (int *)v374;
      long long v220 = v356;
      uint64_t v221 = (uint64_t)v356 + *(int *)(v374 + 48);
      uint64_t v19 = *v375;
      uint64_t v16 = v375[1];
      uint64_t v222 = v375[2];
      uint64_t v17 = (uint64_t (*)())v375[3];
      *os_log_t v356 = *v375;
      v220[1] = v16;
      v220[2] = v222;
      v220[3] = (uint64_t)v17;
      sub_25B1806D0(v215, v221, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v223 = a2[12];
      long long v224 = v357;
      unint64_t v11 = (unint64_t)v357 + v223;
      *uint64_t v357 = v19;
      v224[1] = v16;
      v224[2] = v222;
      v224[3] = (uint64_t)v17;
      sub_25B1806D0(v215, (uint64_t)v224 + v223, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      sub_25B18095C(v11, v367, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      swift_bridgeObjectRetain();
      unint64_t v55 = (unint64_t)v377;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v402[0] = v55;
      a3 = sub_25B18A634(v19, v16);
      uint64_t v227 = *(void *)(v55 + 16);
      BOOL v228 = (v226 & 1) == 0;
      uint64_t v229 = v227 + v228;
      if (__OFADD__(v227, v228)) {
        goto LABEL_111;
      }
      unint64_t v11 = v226;
      if (*(void *)(v55 + 24) >= v229)
      {
        uint64_t v17 = v365;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v55 = (unint64_t)v402;
          sub_25B194174();
        }
      }
      else
      {
        sub_25B18F000(v229, isUniquelyReferenced_nonNull_native);
        unint64_t v55 = *(void *)&v402[0];
        unint64_t v230 = sub_25B18A634(v19, v16);
        uint64_t v17 = v365;
        if ((v11 & 1) != (v231 & 1)) {
          goto LABEL_125;
        }
        a3 = v230;
      }
      uint64_t v183 = (uint64_t)v373;
      a2 = *(int **)&v402[0];
      if (v11)
      {
        sub_25B187120(v367, *(void *)(*(void *)&v402[0] + 56) + a3 * v370, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      }
      else
      {
        *(void *)(*(void *)&v402[0] + 8 * (a3 >> 6) + 64) |= 1 << a3;
        uint64_t v232 = (uint64_t *)(*((void *)a2 + 6) + 16 * a3);
        *uint64_t v232 = v19;
        v232[1] = v16;
        sub_25B18095C(v367, *((void *)a2 + 7) + a3 * v370, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        uint64_t v233 = *((void *)a2 + 2);
        BOOL v234 = __OFADD__(v233, 1);
        uint64_t v235 = v233 + 1;
        if (v234) {
          goto LABEL_115;
        }
        *((void *)a2 + 2) = v235;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B180A5C(v221, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v19 = v369;
LABEL_43:
      a3 = v376;
      unint64_t v55 = v371;
      sub_25B116DE0((uint64_t)v375, (uint64_t *)&unk_26A4D9190);
      uint64_t v16 = v368;
    }
  }
  uint64_t v236 = 0;
  a2 = (int *)MEMORY[0x263F8EE80];
  while (1)
  {
    uint64_t v377 = a2;
    if (a3)
    {
      uint64_t v376 = (a3 - 1) & a3;
      v366 = v236;
      unint64_t v237 = __clz(__rbit64(a3)) | ((void)v236 << 6);
      goto LABEL_97;
    }
    uint64_t v238 = (uint64_t)v236 + 1;
    if (__OFADD__(v236, 1)) {
      goto LABEL_114;
    }
    if (v238 >= (uint64_t)v363) {
      goto LABEL_106;
    }
    unint64_t v239 = *(void *)(v358 + 8 * v238);
    uint64_t v240 = (uint64_t)v236 + 1;
    if (!v239)
    {
      uint64_t v240 = (uint64_t)v236 + 2;
      if ((uint64_t)((char *)v236 + 2) >= (uint64_t)v363) {
        goto LABEL_106;
      }
      unint64_t v239 = *(void *)(v358 + 8 * v240);
      if (!v239)
      {
        uint64_t v240 = (uint64_t)v236 + 3;
        if ((uint64_t)((char *)v236 + 3) >= (uint64_t)v363) {
          goto LABEL_106;
        }
        unint64_t v239 = *(void *)(v358 + 8 * v240);
        if (!v239)
        {
          uint64_t v240 = (uint64_t)v236 + 4;
          if ((uint64_t)((char *)v236 + 4) >= (uint64_t)v363) {
            goto LABEL_106;
          }
          unint64_t v239 = *(void *)(v358 + 8 * v240);
          if (!v239) {
            break;
          }
        }
      }
    }
LABEL_96:
    uint64_t v376 = (v239 - 1) & v239;
    v366 = (void *)v240;
    unint64_t v237 = __clz(__rbit64(v239)) + (v240 << 6);
LABEL_97:
    uint64_t v242 = *(void *)(v16 + 56);
    uint64_t v243 = (uint64_t *)(*(void *)(v16 + 48) + 32 * v237);
    uint64_t v245 = *v243;
    uint64_t v244 = v243[1];
    uint64_t v247 = v243[2];
    uint64_t v246 = v243[3];
    uint64_t v367 = *(void *)(v372 + 72);
    a2 = (int *)v374;
    unint64_t v248 = v359;
    uint64_t v17 = type metadata accessor for ZoneVersion;
    sub_25B1806D0(v242 + v367 * v237, (uint64_t)&v359[*(int *)(v374 + 48)], (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    *unint64_t v248 = v245;
    v248[1] = v244;
    v248[2] = v247;
    v248[3] = v246;
    long long v249 = (uint64_t *)v370;
    sub_25B187574((uint64_t)v248, v370, (uint64_t *)&unk_26A4D9190);
    uint64_t v250 = a2[12];
    uint64_t v16 = (uint64_t)v360;
    uint64_t v251 = (uint64_t)&v360[v250];
    uint64_t v252 = (uint64_t)v249 + v250;
    uint64_t v375 = (uint64_t *)((char *)v249 + v250);
    uint64_t v254 = *v249;
    uint64_t v253 = v249[1];
    uint64_t v255 = v249[2];
    uint64_t v256 = v249[3];
    *(void *)v360 = *v249;
    *(void *)(v16 + 8) = v253;
    *(void *)(v16 + 16) = v255;
    *(void *)(v16 + 24) = v256;
    sub_25B1806D0(v252, v251, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    *(void *)&v402[0] = v254;
    *((void *)&v402[0] + 1) = v253;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3 = (unint64_t)type metadata accessor for ZoneVersion;
    sub_25B180A5C(v251, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    sub_25B290650();
    uint64_t v257 = v16 + a2[12];
    uint64_t v258 = v249[1];
    uint64_t v259 = v249[2];
    uint64_t v260 = v249[3];
    *(void *)uint64_t v16 = *v249;
    *(void *)(v16 + 8) = v258;
    *(void *)(v16 + 16) = v259;
    *(void *)(v16 + 24) = v260;
    unint64_t v261 = v375;
    sub_25B1806D0((uint64_t)v375, v257, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    swift_bridgeObjectRetain();
    sub_25B290650();
    swift_bridgeObjectRelease();
    sub_25B180A5C(v257, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t v262 = *((void *)&v402[0] + 1);
    uint64_t v19 = *(void *)&v402[0];
    uint64_t v263 = (uint64_t)&v361[a2[12]];
    sub_25B1806D0((uint64_t)v261, v263, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    sub_25B18095C(v263, v371, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    unint64_t v55 = (unint64_t)v377;
    int v264 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v402[0] = v55;
    unint64_t v11 = sub_25B18A634(v19, v262);
    uint64_t v266 = *(void *)(v55 + 16);
    BOOL v267 = (v265 & 1) == 0;
    uint64_t v268 = v266 + v267;
    if (__OFADD__(v266, v267))
    {
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      swift_once();
      goto LABEL_2;
    }
    uint64_t v17 = v265;
    if (*(void *)(v55 + 24) >= v268)
    {
      uint64_t v16 = v368;
      if ((v264 & 1) == 0)
      {
        unint64_t v55 = (unint64_t)v402;
        sub_25B194174();
      }
    }
    else
    {
      sub_25B18F000(v268, v264);
      unint64_t v55 = *(void *)&v402[0];
      unint64_t v269 = sub_25B18A634(v19, v262);
      uint64_t v16 = v368;
      if ((v17 & 1) != (v270 & 1)) {
        goto LABEL_125;
      }
      unint64_t v11 = v269;
    }
    uint64_t v183 = (uint64_t)v373;
    a2 = *(int **)&v402[0];
    if (v17)
    {
      sub_25B187120(v371, *(void *)(*(void *)&v402[0] + 56) + v11 * v367, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    }
    else
    {
      *(void *)(*(void *)&v402[0] + 8 * (v11 >> 6) + 64) |= 1 << v11;
      uint64_t v271 = (uint64_t *)(*((void *)a2 + 6) + 16 * v11);
      *uint64_t v271 = v19;
      v271[1] = v262;
      sub_25B18095C(v371, *((void *)a2 + 7) + v11 * v367, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v272 = *((void *)a2 + 2);
      BOOL v234 = __OFADD__(v272, 1);
      uint64_t v273 = v272 + 1;
      if (v234) {
        goto LABEL_112;
      }
      *((void *)a2 + 2) = v273;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B116DE0(v370, (uint64_t *)&unk_26A4D9190);
    uint64_t v17 = v365;
    uint64_t v236 = v366;
    uint64_t v19 = v369;
    a3 = v376;
  }
  unint64_t v241 = (char *)v236 + 5;
  if ((uint64_t)((char *)v236 + 5) >= (uint64_t)v363) {
    goto LABEL_106;
  }
  unint64_t v239 = *(void *)(v358 + 8 * (void)v241);
  if (v239)
  {
    uint64_t v240 = (uint64_t)v236 + 5;
    goto LABEL_96;
  }
  while (1)
  {
    uint64_t v240 = (uint64_t)(v241 + 1);
    if (__OFADD__(v241, 1)) {
      goto LABEL_118;
    }
    if (v240 >= (uint64_t)v363) {
      break;
    }
    unint64_t v239 = *(void *)(v358 + 8 * v240);
    ++v241;
    if (v239) {
      goto LABEL_96;
    }
  }
LABEL_106:
  swift_release();
  swift_bridgeObjectRelease();
  sub_25B11DEBC((uint64_t)&v403);
  uint64_t v274 = v351;
  v275 = *(void (**)(uint64_t, char *, uint64_t))(v350 + 16);
  uint64_t v276 = v343;
  uint64_t v277 = v348;
  v275(v343, v348, v351);
  uint64_t v278 = v338;
  unint64_t v279 = (void *)(v276 + *(int *)(v338 + 20));
  uint64_t v280 = *((void *)&v349 + 1);
  void *v279 = v349;
  v279[1] = v280;
  os_log_t v281 = (long long *)(v276 + *(int *)(v278 + 24));
  long long v282 = v423;
  v281[8] = v422;
  v281[9] = v282;
  v281[10] = v424;
  long long v283 = v419;
  v281[4] = v418;
  v281[5] = v283;
  long long v284 = v421;
  v281[6] = v420;
  v281[7] = v284;
  long long v285 = v415;
  long long *v281 = v414;
  v281[1] = v285;
  long long v286 = v417;
  v281[2] = v416;
  v281[3] = v286;
  *(void *)(v276 + *(int *)(v278 + 28)) = a2;
  uint64_t v287 = v344;
  sub_25B1806D0(v276, v344, type metadata accessor for ReplicatorMessage.Handshake.Request);
  swift_storeEnumTagMultiPayload();
  sub_25B1806D0(v287, v347, type metadata accessor for ReplicatorMessage.Handshake);
  swift_storeEnumTagMultiPayload();
  uint64_t v288 = (uint64_t)v336;
  v275((uint64_t)v336, v277, v274);
  uint64_t v289 = v346;
  long long v290 = (uint64_t *)(v288 + *(int *)(v346 + 20));
  *long long v290 = v19;
  v290[1] = (uint64_t)v17;
  uint64_t v291 = (uint64_t)v334;
  v275((uint64_t)v334, v277, v274);
  uint64_t v292 = v337;
  sub_25B1806D0(v288, v337, type metadata accessor for Replicator.Session);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v345 + 56))(v292, 0, 1, v289);
  long long v293 = v364;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_25B120090(v349, *((unint64_t *)&v349 + 1));
  sub_25B1172F8((uint64_t)&v414);
  sub_25B20E76C(v292, v291);
  swift_endAccess();
  sub_25B180A5C(v288, type metadata accessor for Replicator.Session);
  sub_25B122E6C();
  uint64_t v294 = v335;
  sub_25B187628(v354, v335, &qword_26A4D9610);
  if (v320(v294, 1, v355) == 1)
  {
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
    goto LABEL_123;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v350 + 56))(v183, 1, 1, v351);
  uint64_t v295 = v332;
  sub_25B141908(v347, v294, v183, v332);
  uint64_t v296 = (uint64_t)v333;
  sub_25B116DE0(v183, &qword_26B33F200);
  sub_25B180A5C(v294, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  (*((void (**)(uint64_t, void, uint64_t, uint64_t))v330 + 7))(v295, 0, 1, v331);
  sub_25B18095C(v295, v296, (uint64_t (*)(void))type metadata accessor for Message);
  uint64_t v377 = (int *)*((void *)v293 + 23);
  uint64_t v297 = sub_25B28FEA0();
  uint64_t v298 = v322;
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v297 - 8) + 56))(v322, 1, 1, v297);
  uint64_t v300 = v354;
  uint64_t v299 = v355;
  if (v320(v354, 1, v355) != 1)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v302 = (long long *)(v300 + *(int *)(v299 + 20));
    long long v303 = v302[8];
    long long v304 = v302[6];
    long long v398 = v302[7];
    long long v399 = v303;
    long long v305 = v302[8];
    long long v306 = v302[10];
    long long v400 = v302[9];
    long long v401 = v306;
    long long v307 = v302[4];
    long long v308 = v302[2];
    long long v394 = v302[3];
    long long v395 = v307;
    long long v309 = v302[4];
    long long v310 = v302[6];
    long long v396 = v302[5];
    long long v397 = v310;
    long long v311 = *v302;
    long long v312 = v302[2];
    long long v392 = v302[1];
    long long v393 = v312;
    long long v313 = *v302;
    long long v388 = v305;
    long long v389 = v400;
    long long v390 = v302[10];
    long long v391 = v313;
    long long v384 = v309;
    long long v385 = v396;
    long long v386 = v304;
    long long v387 = v398;
    long long v380 = v311;
    long long v381 = v392;
    long long v382 = v308;
    long long v383 = v394;
    char v379 = 0;
    v378[0] = 0x403E000000000000;
    v378[1] = 0;
    uint64_t v314 = swift_allocObject();
    *(void *)(v314 + 16) = v293;
    uint64_t v315 = v319[0];
    long long v316 = *(_OWORD *)(v319[0] + 16);
    *(_OWORD *)(v314 + 24) = *(_OWORD *)v319[0];
    *(_OWORD *)(v314 + 40) = v316;
    *(_OWORD *)(v314 + 56) = *(_OWORD *)(v315 + 32);
    uint64_t v317 = v352;
    *(void *)(v314 + 72) = *(void *)(v315 + 48);
    *(void *)(v314 + 80) = v317;
    *(unsigned char *)(v314 + 88) = v353;
    swift_retain();
    sub_25B180D48(v315);
    sub_25B1172F8((uint64_t)&v391);
    sub_25B1593EC(v296, v298, &v380, &v379, v378, (uint64_t)sub_25B180E00, v314, ObjectType, (uint64_t)v377);
    swift_release();
    sub_25B11DEBC((uint64_t)&v414);
    v402[8] = v388;
    v402[9] = v389;
    v402[10] = v390;
    v402[4] = v384;
    v402[5] = v385;
    v402[6] = v386;
    v402[7] = v387;
    v402[0] = v380;
    v402[1] = v381;
    v402[2] = v382;
    v402[3] = v383;
    sub_25B11DEBC((uint64_t)v402);
    sub_25B116DE0(v298, &qword_26A4D9160);
    sub_25B180A5C(v296, (uint64_t (*)(void))type metadata accessor for Message);
    sub_25B180A5C(v347, type metadata accessor for ReplicatorMessage);
    sub_25B180A5C(v344, type metadata accessor for ReplicatorMessage.Handshake);
    sub_25B180A5C(v343, type metadata accessor for ReplicatorMessage.Handshake.Request);
    (*(void (**)(char *, uint64_t))(v350 + 8))(v348, v351);
    sub_25B116DE0(v300, &qword_26A4D9610);
    return;
  }
LABEL_123:
  __break(1u);
LABEL_124:
  sub_25B116DE0(v354, &qword_26A4D9610);
  __break(1u);
LABEL_125:
  sub_25B291190();
  __break(1u);
}

uint64_t sub_25B15768C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PairingRelationship();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v40 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25B290410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v3 + 232);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  id v16 = v15;
  char v17 = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if (v17)
  {
    uint64_t result = swift_beginAccess();
    uint64_t v19 = *(void *)(v3 + 576);
    if (*(void *)(v19 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_25B18A634(v41, a2);
      if (v21)
      {
        uint64_t v35 = v3 + 576;
        uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
        uint64_t v39 = a2;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v36 = v22;
        uint64_t v23 = *(void *)(v22 + 16);
        if (v23)
        {
          uint64_t v38 = v3 + 192;
          swift_beginAccess();
          uint64_t v37 = v40 + 8;
          uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
          uint64_t v25 = v36 + 40;
          do
          {
            uint64_t v28 = *(void (**)(uint64_t *))(v25 - 8);
            sub_25B10FF48(v38, (uint64_t)&v42);
            uint64_t v29 = v44;
            uint64_t v30 = v45;
            __swift_project_boxed_opaque_existential_1(&v42, v44);
            uint64_t v31 = *(void *)(v30 + 8);
            swift_retain();
            MetadataStoring.pairingRelationship(remoteDeviceID:)(v41, v39, v29, v31, (uint64_t)v7);
            if ((*v24)(v7, 1, v8) == 1)
            {
              sub_25B116DE0((uint64_t)v7, &qword_26A4D9610);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
              sub_25B182988();
              uint64_t v26 = (void *)swift_allocError();
              *uint64_t v27 = 2;
              uint64_t v42 = (uint64_t)v26;
              char v43 = 1;
              v28(&v42);

              swift_release();
            }
            else
            {
              sub_25B18095C((uint64_t)v7, v40, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
              if (*(void *)(v37 + *(int *)(v8 + 32)) == 2)
              {
                uint64_t v42 = 1;
                char v43 = 0;
                v28(&v42);
              }
              else
              {
                sub_25B182988();
                uint64_t v32 = (void *)swift_allocError();
                *uint64_t v33 = 2;
                uint64_t v42 = (uint64_t)v32;
                char v43 = 1;
                v28(&v42);
              }
              swift_release();
              sub_25B180A5C(v40, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
            }
            v25 += 16;
            --v23;
          }
          while (v23);
        }
        swift_bridgeObjectRelease();
        swift_beginAccess();
        uint64_t v34 = v39;
        swift_bridgeObjectRetain();
        sub_25B21CCDC(v41, v34);
        swift_endAccess();
      }
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B157B38(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB280);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Replicator.Session(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25B290410();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v1 + 232);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F8F0E0], v10);
  id v15 = v14;
  LOBYTE(v14) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    uint64_t v17 = type metadata accessor for PairingRelationship();
    sub_25B158520(*(void *)(a1 + *(int *)(v17 + 20)), *(void *)(a1 + *(int *)(v17 + 20) + 8), (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      return sub_25B116DE0((uint64_t)v5, &qword_26A4DB280);
    }
    else
    {
      sub_25B18095C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Replicator.Session);
      sub_25B162B04((uint64_t)v9);
      return sub_25B180A5C((uint64_t)v9, type metadata accessor for Replicator.Session);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B157DAC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ZoneVersion();
  uint64_t v72 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v74 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA6E8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v70 = (uint64_t *)((char *)&v65 - v10);
  uint64_t v11 = sub_25B290410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v15 = *(void **)(v2 + 232);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  id v16 = v15;
  LOBYTE(v15) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  swift_beginAccess();
  uint64_t v17 = *(void *)(v2 + 240);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v75 = sub_25B18168C(MEMORY[0x263F8EE80], v17, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  sub_25B10FF48(v2 + 192, (uint64_t)v76);
  uint64_t v18 = v77;
  uint64_t v19 = v78;
  __swift_project_boxed_opaque_existential_1(v76, v77);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 + 8) + 24))(a1, v18);
  swift_retain();
  uint64_t v21 = sub_25B186DF0(v20, v2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_25B182668);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
  int64_t v71 = 0;
  uint64_t v22 = *(void *)(v21 + 64);
  uint64_t v67 = v21 + 64;
  uint64_t v23 = 1 << *(unsigned char *)(v21 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  int64_t v68 = (unint64_t)(v23 + 63) >> 6;
  uint64_t v69 = v21;
  int64_t v66 = v68 - 1;
  uint64_t v26 = (uint64_t *)&unk_26A4D9190;
  uint64_t v27 = v70;
  while (1)
  {
    if (v25)
    {
      unint64_t v28 = __clz(__rbit64(v25));
      uint64_t v29 = (v25 - 1) & v25;
      unint64_t v30 = v28 | (v71 << 6);
LABEL_9:
      uint64_t v31 = *(void *)(v69 + 56);
      uint64_t v32 = (void *)(*(void *)(v69 + 48) + 32 * v30);
      uint64_t v33 = v32[1];
      uint64_t v34 = v32[2];
      uint64_t v35 = v32[3];
      *uint64_t v9 = *v32;
      v9[1] = v33;
      void v9[2] = v34;
      void v9[3] = v35;
      uint64_t v36 = v31 + *(void *)(v72 + 72) * v30;
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(v26);
      sub_25B1806D0(v36, (uint64_t)v9 + *(int *)(v37 + 48), (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v9, 0, 1, v37);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    int64_t v38 = v71 + 1;
    if (__OFADD__(v71, 1)) {
      goto LABEL_41;
    }
    if (v38 < v68)
    {
      unint64_t v39 = *(void *)(v67 + 8 * v38);
      if (v39) {
        goto LABEL_13;
      }
      int64_t v40 = v71 + 2;
      ++v71;
      if (v38 + 1 < v68)
      {
        unint64_t v39 = *(void *)(v67 + 8 * v40);
        if (v39) {
          goto LABEL_16;
        }
        int64_t v71 = v38 + 1;
        if (v38 + 2 < v68)
        {
          unint64_t v39 = *(void *)(v67 + 8 * (v38 + 2));
          if (v39)
          {
            v38 += 2;
            goto LABEL_13;
          }
          int64_t v40 = v38 + 3;
          int64_t v71 = v38 + 2;
          if (v38 + 3 < v68) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(v26);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v9, 1, 1, v41);
    uint64_t v29 = 0;
LABEL_28:
    sub_25B187574((uint64_t)v9, (uint64_t)v27, &qword_26A4DA6E8);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(v26);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v27, 1, v42) == 1)
    {
      swift_release();
      return v75;
    }
    unint64_t v73 = v29;
    char v43 = v26;
    uint64_t v44 = v9;
    uint64_t v45 = *v27;
    uint64_t v46 = v27[1];
    uint64_t v47 = v27[2];
    uint64_t v48 = v27[3];
    sub_25B18095C((uint64_t)v27 + *(int *)(v42 + 48), v74, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t v49 = v75;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v76[0] = v49;
    unint64_t v52 = sub_25B18A768(v45, v46, v47, v48);
    uint64_t v53 = *(void *)(v49 + 16);
    BOOL v54 = (v51 & 1) == 0;
    uint64_t v55 = v53 + v54;
    if (__OFADD__(v53, v54))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    char v56 = v51;
    if (*(void *)(v49 + 24) >= v55)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_25B1941BC();
      }
    }
    else
    {
      sub_25B18F048(v55, isUniquelyReferenced_nonNull_native);
      unint64_t v57 = sub_25B18A768(v45, v46, v47, v48);
      if ((v56 & 1) != (v58 & 1)) {
        goto LABEL_44;
      }
      unint64_t v52 = v57;
    }
    uint64_t v27 = v70;
    uint64_t v59 = (void *)v76[0];
    uint64_t v75 = v76[0];
    if (v56)
    {
      sub_25B187120(v74, *(void *)(v76[0] + 56) + *(void *)(v72 + 72) * v52, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    }
    else
    {
      *(void *)(v76[0] + 8 * (v52 >> 6) + 64) |= 1 << v52;
      uint64_t v60 = (uint64_t *)(v59[6] + 32 * v52);
      uint64_t *v60 = v45;
      v60[1] = v46;
      v60[2] = v47;
      v60[3] = v48;
      sub_25B18095C(v74, v59[7] + *(void *)(v72 + 72) * v52, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v61 = v59[2];
      BOOL v62 = __OFADD__(v61, 1);
      uint64_t v63 = v61 + 1;
      if (v62) {
        goto LABEL_40;
      }
      v59[2] = v63;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v44;
    uint64_t v26 = v43;
    unint64_t v25 = v73;
  }
  unint64_t v39 = *(void *)(v67 + 8 * v40);
  if (v39)
  {
LABEL_16:
    int64_t v38 = v40;
LABEL_13:
    uint64_t v29 = (v39 - 1) & v39;
    unint64_t v30 = __clz(__rbit64(v39)) + (v38 << 6);
    int64_t v71 = v38;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v38 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v38 >= v68)
    {
      int64_t v71 = v66;
      goto LABEL_27;
    }
    unint64_t v39 = *(void *)(v67 + 8 * v38);
    ++v40;
    if (v39) {
      goto LABEL_13;
    }
  }
LABEL_43:
  __break(1u);
LABEL_44:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t sub_25B158520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v44 = a3;
  uint64_t v49 = type metadata accessor for Replicator.Session(0);
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA6D8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v13 = sub_25B290410();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (int64_t *)((char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)(v3 + 232);
  *id v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8F0E0], v13);
  id v18 = v17;
  LOBYTE(v17) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  swift_beginAccess();
  uint64_t v20 = *(void *)(v3 + 568);
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v45 = v20 + 64;
  uint64_t v22 = 1 << *(unsigned char *)(v20 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v21;
  int64_t v46 = (unint64_t)(v22 + 63) >> 6;
  int64_t v43 = v46 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v25 = 0;
  uint64_t v26 = v48;
  if (!v24) {
    goto LABEL_7;
  }
LABEL_5:
  unint64_t v27 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  unint64_t v28 = v27 | (v25 << 6);
  while (2)
  {
    uint64_t v29 = *(void *)(v20 + 48);
    uint64_t v30 = sub_25B290080();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v10, v29 + *(void *)(*(void *)(v30 - 8) + 72) * v28, v30);
    uint64_t v31 = *(void *)(v20 + 56) + *(void *)(v47 + 72) * v28;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA6E0);
    sub_25B1806D0(v31, (uint64_t)&v10[*(int *)(v32 + 48)], type metadata accessor for Replicator.Session);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v10, 0, 1, v32);
    uint64_t v26 = v48;
    while (1)
    {
      sub_25B187574((uint64_t)v10, (uint64_t)v12, &qword_26A4DA6D8);
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA6E0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v12, 1, v37) == 1)
      {
        swift_release();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v44, 1, 1, v49);
      }
      sub_25B18095C((uint64_t)&v12[*(int *)(v37 + 48)], (uint64_t)v6, type metadata accessor for Replicator.Session);
      int64_t v38 = &v6[*(int *)(v49 + 20)];
      BOOL v39 = *(void *)v38 == a1 && *((void *)v38 + 1) == v26;
      if (v39 || (sub_25B290FB0() & 1) != 0)
      {
        swift_release();
        uint64_t v41 = v44;
        sub_25B18095C((uint64_t)v6, v44, type metadata accessor for Replicator.Session);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v41, 0, 1, v49);
        uint64_t v42 = sub_25B290080();
        return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v12, v42);
      }
      sub_25B180A5C((uint64_t)v6, type metadata accessor for Replicator.Session);
      uint64_t v40 = sub_25B290080();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v12, v40);
      if (v24) {
        goto LABEL_5;
      }
LABEL_7:
      int64_t v33 = v25 + 1;
      if (__OFADD__(v25, 1))
      {
        __break(1u);
        goto LABEL_36;
      }
      if (v33 < v46)
      {
        unint64_t v34 = *(void *)(v45 + 8 * v33);
        if (v34) {
          goto LABEL_10;
        }
        int64_t v35 = v25 + 2;
        ++v25;
        if (v33 + 1 < v46)
        {
          unint64_t v34 = *(void *)(v45 + 8 * v35);
          if (v34) {
            goto LABEL_13;
          }
          int64_t v25 = v33 + 1;
          if (v33 + 2 < v46)
          {
            unint64_t v34 = *(void *)(v45 + 8 * (v33 + 2));
            if (v34)
            {
              v33 += 2;
              goto LABEL_10;
            }
            int64_t v35 = v33 + 3;
            int64_t v25 = v33 + 2;
            if (v33 + 3 < v46) {
              break;
            }
          }
        }
      }
LABEL_24:
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA6E0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v10, 1, 1, v36);
      unint64_t v24 = 0;
    }
    unint64_t v34 = *(void *)(v45 + 8 * v35);
    if (v34)
    {
LABEL_13:
      int64_t v33 = v35;
LABEL_10:
      unint64_t v24 = (v34 - 1) & v34;
      unint64_t v28 = __clz(__rbit64(v34)) + (v33 << 6);
      int64_t v25 = v33;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v33 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v33 >= v46)
    {
      int64_t v25 = v43;
      goto LABEL_24;
    }
    unint64_t v34 = *(void *)(v45 + 8 * v33);
    ++v35;
    if (v34) {
      goto LABEL_10;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25B158B64(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v23 = a6;
  uint64_t v11 = sub_25B290320();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = sub_25B290360();
  uint64_t v15 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v17 = &v22[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = *(void *)(a3 + 232);
  uint64_t v18 = swift_allocObject();
  long long v19 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v18 + 40) = *(_OWORD *)a4;
  *(void *)(v18 + 16) = a1;
  a2 &= 1u;
  *(unsigned char *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(_OWORD *)(v18 + 56) = v19;
  *(_OWORD *)(v18 + 72) = *(_OWORD *)(a4 + 32);
  *(void *)(v18 + 88) = *(void *)(a4 + 48);
  *(void *)(v18 + 96) = a5;
  *(unsigned char *)(v18 + 104) = v23;
  aBlock[4] = sub_25B180EF4;
  void aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_382;
  uint64_t v20 = _Block_copy(aBlock);
  sub_25B116CFC(a1, a2);
  swift_retain();
  sub_25B180D48(a4);
  sub_25B290340();
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_25B1875E0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v17, v14, v20);
  _Block_release(v20);
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v17, v25);
  return swift_release();
}

void sub_25B158E7C(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a2 & 1) == 0) {
    return;
  }
  v42[0] = a1;
  id v11 = a1;
  id v12 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
  if (!swift_dynamicCast() || v46 != 2)
  {

    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_25B290190();
    __swift_project_value_buffer(v22, (uint64_t)qword_26A4EB150);
    sub_25B116CFC(a1, 1);
    sub_25B116CFC(a1, 1);
    swift_retain();
    int v23 = sub_25B290160();
    os_log_type_t v24 = sub_25B290880();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      v42[0] = v26;
      *(_DWORD *)uint64_t v25 = 136446466;
      char v37 = a6;
      uint64_t v27 = a3[66];
      uint64_t v39 = a4;
      unint64_t v28 = a3[67];
      swift_bridgeObjectRetain();
      sub_25B288E98(v27, v28, (uint64_t *)v42);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      id v29 = a1;
      uint64_t v30 = sub_25B290600();
      uint64_t v40 = sub_25B288E98(v30, v31, (uint64_t *)v42);
      a4 = v39;
      sub_25B2909C0();
      a6 = v37;
      swift_bridgeObjectRelease();
      sub_25B116D08(a1, 1);
      sub_25B116D08(a1, 1);
      _os_log_impl(&dword_25B107000, v23, v24, "(%{public}s) Error sending handshake request: %{public}s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v26, -1, -1);
      MEMORY[0x261160890](v25, -1, -1);
    }
    else
    {
      swift_release();
      sub_25B116D08(a1, 1);
      sub_25B116D08(a1, 1);
    }

    uint64_t v32 = a3 + 48;
    uint64_t v34 = a3[51];
    uint64_t v33 = a3[52];
    __swift_project_boxed_opaque_existential_1(v32, v34);
    long long v35 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)uint64_t v42 = *(_OWORD *)a4;
    long long v43 = v35;
    long long v44 = *(_OWORD *)(a4 + 32);
    uint64_t v45 = *(void *)(a4 + 48);
    if (a6)
    {
      if (a6 != 1) {
        goto LABEL_19;
      }
      BOOL v36 = __OFADD__(a5++, 1);
      if (!v36) {
        goto LABEL_19;
      }
      __break(1u);
    }
    BOOL v36 = __OFADD__(a5++, 1);
    if (v36)
    {
      __break(1u);
      return;
    }
LABEL_19:
    uint64_t v40 = a5;
    char v41 = a6;
    (*(void (**)(id *, uint64_t *, uint64_t, uint64_t))(v33 + 16))(v42, &v40, v34, v33);
    sub_25B116D08(a1, 1);
    return;
  }
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_25B290190();
  __swift_project_value_buffer(v13, (uint64_t)qword_26A4EB150);
  sub_25B116CFC(a1, 1);
  sub_25B116CFC(a1, 1);
  swift_retain();
  uint64_t v14 = sub_25B290160();
  os_log_type_t v15 = sub_25B2908A0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v40 = v38;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v17 = a3[66];
    unint64_t v18 = a3[67];
    swift_bridgeObjectRetain();
    sub_25B288E98(v17, v18, &v40);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    id v19 = a1;
    uint64_t v20 = sub_25B290600();
    sub_25B288E98(v20, v21, &v40);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B116D08(a1, 1);
    sub_25B116D08(a1, 1);
    _os_log_impl(&dword_25B107000, v14, v15, "(%{public}s) Handshake request blocked by allow list: %{public}s.", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v38, -1, -1);
    MEMORY[0x261160890](v16, -1, -1);
  }
  else
  {
    swift_release();
    sub_25B116D08(a1, 1);
    sub_25B116D08(a1, 1);
  }

  sub_25B15768C(*(void *)a4, *(void *)(a4 + 8));
  sub_25B116D08(a1, 1);
}

uint64_t sub_25B1593EC(uint64_t a1, uint64_t a2, long long *a3, char *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v40 = a8;
  uint64_t v37 = a2;
  uint64_t v38 = a6;
  uint64_t v39 = a1;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v13 - 8);
  os_log_type_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = a3[1];
  long long v63 = *a3;
  long long v64 = v16;
  unint64_t v18 = *((void *)a3 + 4);
  uint64_t v17 = *((void *)a3 + 5);
  long long v19 = a3[8];
  long long v59 = a3[7];
  long long v60 = v19;
  long long v20 = a3[10];
  long long v61 = a3[9];
  long long v62 = v20;
  long long v21 = a3[4];
  long long v55 = a3[3];
  long long v56 = v21;
  long long v22 = a3[6];
  long long v57 = a3[5];
  long long v58 = v22;
  char v23 = *a4;
  if (v18 >= 7)
  {
    uint64_t v28 = a5[1];
    uint64_t v29 = *a5;
    long long v30 = a3[1];
    long long v43 = *a3;
    long long v44 = v30;
    unint64_t v45 = v18;
    uint64_t v46 = v17;
    long long v31 = a3[8];
    long long v51 = a3[7];
    long long v52 = v31;
    long long v32 = a3[10];
    long long v53 = a3[9];
    long long v54 = v32;
    long long v33 = a3[4];
    long long v47 = a3[3];
    long long v48 = v33;
    long long v34 = a3[6];
    long long v49 = a3[5];
    long long v50 = v34;
    char v42 = v23;
    v41[0] = v29;
    v41[1] = v28;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v38;
    *(void *)(v35 + 24) = a7;
    BOOL v36 = *(void (**)(uint64_t, uint64_t, long long *, char *, void *, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a9 + 48);
    swift_retain();
    v36(v39, v37, &v43, &v42, v41, sub_25B180E8C, v35, v40, a9);
    return swift_release();
  }
  else
  {
    uint64_t v24 = sub_25B28FEA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v15, 1, 1, v24);
    long long v43 = v63;
    long long v44 = v64;
    unint64_t v45 = v18;
    uint64_t v46 = v17;
    long long v51 = v59;
    long long v52 = v60;
    long long v53 = v61;
    long long v54 = v62;
    long long v47 = v55;
    long long v48 = v56;
    long long v49 = v57;
    long long v50 = v58;
    LOBYTE(v41[0]) = v23;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v38;
    *(void *)(v25 + 24) = a7;
    uint64_t v26 = *(void (**)(uint64_t, char *, long long *, void *, void (*)(void *, char), uint64_t, uint64_t, uint64_t))(a9 + 40);
    swift_retain();
    v26(v39, v15, &v43, v41, sub_25B180E94, v25, v40, a9);
    swift_release();
    return sub_25B116DE0((uint64_t)v15, &qword_26A4D9160);
  }
}

void sub_25B159690(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v437 = a3;
  id v441 = a1;
  long long v411 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  uint64_t v389 = *((void *)v411 - 1);
  MEMORY[0x270FA5388](v411);
  uint64_t v390 = v4;
  unint64_t v5 = (unint64_t)&v384 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (unint64_t)&v384 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v9 - 8);
  long long v400 = (char *)&v384 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB070);
  MEMORY[0x270FA5388](v11 - 8);
  long long v401 = (char *)&v384 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v402 = type metadata accessor for Message();
  uint64_t v399 = *(void *)(v402 - 8);
  MEMORY[0x270FA5388](v402);
  unint64_t isUniquelyReferenced_nonNull_native = (unint64_t)&v384 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v398 = type metadata accessor for ReplicatorMessage(0);
  MEMORY[0x270FA5388](v398);
  uint64_t v16 = (uint64_t)&v384 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v397 = type metadata accessor for ReplicatorMessage.Handshake(0);
  MEMORY[0x270FA5388](v397);
  uint64_t v405 = (uint64_t)&v384 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v396 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  MEMORY[0x270FA5388](v396);
  uint64_t v19 = (uint64_t)&v384 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v438 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A88);
  uint64_t v20 = MEMORY[0x270FA5388](v438);
  long long v413 = (char *)&v384 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  long long v422 = (char *)&v384 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  long long v418 = (char *)&v384 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  long long v421 = (long long **)((char *)&v384 - v27);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  long long v420 = (long long **)((char *)&v384 - v29);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v434 = (uint64_t)&v384 - v31;
  MEMORY[0x270FA5388](v30);
  long long v419 = (char *)&v384 - v32;
  uint64_t v394 = type metadata accessor for ZoneVersion();
  uint64_t ObjectType = *(void *)(v394 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v394);
  uint64_t v417 = (uint64_t)&v384 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v435 = (uint64_t)&v384 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v426 = (uint64_t)&v384 - v38;
  MEMORY[0x270FA5388](v37);
  unint64_t v431 = (unint64_t)&v384 - v39;
  uint64_t v439 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9190);
  uint64_t v40 = MEMORY[0x270FA5388](v439);
  os_log_t v425 = (char *)&v384 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  long long v424 = (long long **)((char *)&v384 - v43);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  unint64_t v436 = (unint64_t)&v384 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  long long v423 = (char *)&v384 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  long long v415 = (uint64_t *)((char *)&v384 - v49);
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  long long v414 = (uint64_t *)((char *)&v384 - v51);
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v428 = (uint64_t *)((char *)&v384 - v53);
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  long long v416 = (uint64_t *)((char *)&v384 - v55);
  MEMORY[0x270FA5388](v54);
  os_log_t v427 = (char *)&v384 - v56;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB280);
  MEMORY[0x270FA5388](v57 - 8);
  uint64_t v440 = (uint64_t)&v384 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_25B290080();
  uint64_t v406 = *(void *)(v59 - 8);
  uint64_t v407 = v59;
  MEMORY[0x270FA5388](v59);
  os_log_t v433 = (char *)&v384 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v432 = type metadata accessor for Replicator.Session(0);
  int64_t v430 = *(void *)(v432 - 8);
  MEMORY[0x270FA5388](v432);
  uint64_t v429 = (char *)&v384 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v409 = type metadata accessor for PairingRelationship();
  uint64_t v62 = MEMORY[0x270FA5388](v409);
  uint64_t v393 = (uint64_t)&v384 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  uint64_t v395 = (uint64_t)&v384 - v65;
  MEMORY[0x270FA5388](v64);
  uint64_t v410 = (uint64_t)&v384 - v66;
  if (qword_26A4D98C0 != -1) {
    goto LABEL_178;
  }
  while (1)
  {
    uint64_t v67 = sub_25B290190();
    uint64_t v68 = __swift_project_value_buffer(v67, (uint64_t)qword_26A4EB150);
    swift_retain();
    uint64_t v412 = v68;
    uint64_t v69 = sub_25B290160();
    os_log_type_t v70 = sub_25B2908A0();
    BOOL v71 = os_log_type_enabled(v69, v70);
    uint64_t v403 = v19;
    unint64_t v391 = isUniquelyReferenced_nonNull_native;
    unint64_t v392 = v5;
    if (v71)
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      *(void *)&v489[0] = swift_slowAlloc();
      uint64_t v73 = *(void *)&v489[0];
      unint64_t v404 = v8;
      *(_DWORD *)uint64_t v72 = 136446210;
      long long v388 = (long long *)(v72 + 4);
      uint64_t v74 = *(void *)(a2 + 528);
      unint64_t v75 = *(void *)(a2 + 536);
      swift_bridgeObjectRetain();
      *(void *)&v488[0] = sub_25B288E98(v74, v75, (uint64_t *)v489);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v69, v70, "(%{public}s) Sending handshake response", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v73, -1, -1);
      unint64_t v8 = v404;
      MEMORY[0x261160890](v72, -1, -1);

      id v76 = v441;
      if (v441) {
        goto LABEL_4;
      }
    }
    else
    {

      swift_release();
      id v76 = v441;
      if (v441)
      {
LABEL_4:
        id v77 = v76;
        swift_retain();
        id v78 = v76;
        swift_retain();
        id v79 = v76;
        uint64_t v80 = sub_25B290160();
        os_log_type_t v81 = sub_25B2908A0();
        if (os_log_type_enabled(v80, v81))
        {
          uint64_t v82 = a2;
          uint64_t v83 = swift_slowAlloc();
          uint64_t v84 = (void *)swift_slowAlloc();
          uint64_t v85 = swift_slowAlloc();
          *(void *)&v489[0] = v85;
          *(_DWORD *)uint64_t v83 = 136446466;
          uint64_t v86 = *(void *)(v82 + 528);
          unint64_t v87 = *(void *)(v82 + 536);
          swift_bridgeObjectRetain();
          *(void *)&v488[0] = sub_25B288E98(v86, v87, (uint64_t *)v489);
          sub_25B2909C0();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v83 + 12) = 2114;
          id v88 = v441;
          uint64_t v89 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)&v488[0] = v89;
          id v76 = v441;
          sub_25B2909C0();
          *uint64_t v84 = v89;

          _os_log_impl(&dword_25B107000, v80, v81, "(%{public}s) Abandoning handshake response because prerequisites are not met: %{public}@", (uint8_t *)v83, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
          swift_arrayDestroy();
          MEMORY[0x261160890](v84, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x261160890](v85, -1, -1);
          MEMORY[0x261160890](v83, -1, -1);
        }
        else
        {
          swift_release_n();
        }
        sub_25B15768C(*(void *)(v437 + v411[6]), *(void *)(v437 + v411[6] + 8));

        return;
      }
    }
    if ((*(unsigned char *)(a2 + 600) & 1) == 0)
    {
      swift_retain();
      uint64_t v167 = sub_25B290160();
      uint64_t v168 = a2;
      os_log_type_t v169 = sub_25B2908A0();
      if (os_log_type_enabled(v167, v169))
      {
        uint64_t v170 = (uint8_t *)swift_slowAlloc();
        uint64_t v171 = swift_slowAlloc();
        *(void *)&v489[0] = v171;
        *(_DWORD *)uint64_t v170 = 136446210;
        uint64_t v172 = *(void *)(v168 + 528);
        unint64_t v173 = *(void *)(v168 + 536);
        swift_bridgeObjectRetain();
        *(void *)&v488[0] = sub_25B288E98(v172, v173, (uint64_t *)v489);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25B107000, v167, v169, "(%{public}s) Abandoning handshake response because replicator is disabled", v170, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261160890](v171, -1, -1);
        MEMORY[0x261160890](v170, -1, -1);
      }
      else
      {

        swift_release();
      }
      sub_25B15768C(*(void *)(v437 + v411[6]), *(void *)(v437 + v411[6] + 8));
      return;
    }
    uint64_t v387 = v16;
    unint64_t v404 = v8;
    uint64_t v16 = v437;
    id v90 = (long long *)(v437 + v411[6]);
    long long v91 = v90[6];
    long long v92 = v90[8];
    long long v484 = v90[7];
    long long v485 = v92;
    long long v93 = v90[10];
    long long v94 = v90[8];
    long long v486 = v90[9];
    long long v487 = v93;
    long long v95 = v90[2];
    long long v96 = v90[4];
    long long v480 = v90[3];
    long long v481 = v96;
    long long v97 = v90[6];
    long long v98 = v90[4];
    long long v482 = v90[5];
    long long v483 = v97;
    long long v99 = v90[2];
    long long v100 = *v90;
    long long v478 = v90[1];
    long long v479 = v99;
    long long v470 = v98;
    long long v471 = v482;
    long long v101 = *v90;
    long long v468 = v95;
    long long v469 = v480;
    long long v384 = v90;
    long long v476 = v90[10];
    long long v477 = v101;
    long long v474 = v94;
    long long v475 = v486;
    long long v472 = v91;
    long long v473 = v484;
    uint64_t v102 = *((void *)&v101 + 1);
    long long v388 = (long long *)*((void *)&v101 + 1);
    id v441 = (id)v101;
    long long v466 = v100;
    long long v467 = v478;
    uint64_t v103 = (void *)(v437 + v411[5]);
    unint64_t v105 = v103[1];
    *(void *)&v456[0] = *v103;
    uint64_t v104 = *(void *)&v456[0];
    *((void *)&v456[0] + 1) = v105;
    sub_25B1172F8((uint64_t)&v477);
    sub_25B120090(v104, v105);
    uint64_t v106 = a2;
    uint64_t v107 = v410;
    sub_25B148078(&v466, (uint64_t)v456, 0, 1, v410);
    sub_25B1200A4(v104, v105);
    sub_25B11DEBC((uint64_t)&v477);
    uint64_t v108 = v107 + *(int *)(v409 + 20);
    sub_25B15768C(*(void *)v108, *(void *)(v108 + 8));
    sub_25B157B38(v107);
    uint64_t v109 = v407;
    unint64_t v5 = v406 + 16;
    uint64_t v110 = *(void (**)(char *, uint64_t, uint64_t))(v406 + 16);
    unint64_t v8 = (unint64_t)v429;
    v110(v429, v16, v407);
    uint64_t v111 = v432;
    uint64_t v112 = (void *)(v8 + *(int *)(v432 + 20));
    *uint64_t v112 = v441;
    v112[1] = v102;
    unint64_t isUniquelyReferenced_nonNull_native = (unint64_t)v433;
    long long v385 = (void (*)(uint64_t, uint64_t, uint64_t))v110;
    unint64_t v386 = v5;
    v110(v433, v16, v109);
    uint64_t v113 = v440;
    sub_25B1806D0(v8, v440, type metadata accessor for Replicator.Session);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v430 + 56))(v113, 0, 1, v111);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_25B20E76C(v113, isUniquelyReferenced_nonNull_native);
    swift_endAccess();
    sub_25B180A5C(v8, type metadata accessor for Replicator.Session);
    sub_25B122E6C();
    sub_25B133AA0(v488);
    uint64_t v408 = v106;
    a2 = sub_25B157DAC(v410);
    long long v114 = *(_OWORD *)(v108 + 80);
    long long v492 = *(_OWORD *)(v108 + 64);
    long long v493 = v114;
    long long v498 = *(_OWORD *)(v108 + 160);
    long long v115 = *(_OWORD *)(v108 + 128);
    long long v497 = *(_OWORD *)(v108 + 144);
    long long v496 = v115;
    long long v116 = *(_OWORD *)(v108 + 112);
    long long v494 = *(_OWORD *)(v108 + 96);
    long long v495 = v116;
    long long v117 = *(_OWORD *)(v108 + 48);
    long long v490 = *(_OWORD *)(v108 + 32);
    long long v491 = v117;
    long long v118 = *(_OWORD *)v108;
    long long v119 = *(_OWORD *)(v108 + 16);
    long long v388 = (long long *)v108;
    v489[0] = v118;
    v489[1] = v119;
    unint64_t v120 = v490;
    uint64_t v121 = *(void *)(a2 + 64);
    uint64_t v429 = (char *)(a2 + 64);
    uint64_t v122 = 1 << *(unsigned char *)(a2 + 32);
    uint64_t v123 = -1;
    if (v122 < 64) {
      uint64_t v123 = ~(-1 << v122);
    }
    uint64_t v19 = v123 & v121;
    sub_25B1172F8((uint64_t)v489);
    int64_t v430 = (unint64_t)(v122 + 63) >> 6;
    os_log_t v433 = (char *)a2;
    if (v120 <= 7) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v174 = 0;
    uint64_t v440 = MEMORY[0x263F8EE80];
    uint64_t v175 = v437;
    while (1)
    {
      if (v19)
      {
        id v441 = (id)((v19 - 1) & v19);
        uint64_t v432 = v174;
        unint64_t v176 = __clz(__rbit64(v19)) | (v174 << 6);
      }
      else
      {
        int64_t v177 = v174 + 1;
        if (__OFADD__(v174, 1)) {
          goto LABEL_173;
        }
        if (v177 >= v430) {
          goto LABEL_114;
        }
        unint64_t v178 = *(void *)&v429[8 * v177];
        int64_t v179 = v174 + 1;
        if (!v178)
        {
          int64_t v179 = v174 + 2;
          if (v174 + 2 >= v430) {
            goto LABEL_114;
          }
          unint64_t v178 = *(void *)&v429[8 * v179];
          if (!v178)
          {
            int64_t v179 = v174 + 3;
            if (v174 + 3 >= v430) {
              goto LABEL_114;
            }
            unint64_t v178 = *(void *)&v429[8 * v179];
            if (!v178)
            {
              int64_t v179 = v174 + 4;
              if (v174 + 4 >= v430) {
                goto LABEL_114;
              }
              unint64_t v178 = *(void *)&v429[8 * v179];
              if (!v178)
              {
                uint64_t v180 = v174 + 5;
                if (v174 + 5 >= v430) {
                  goto LABEL_114;
                }
                unint64_t v178 = *(void *)&v429[8 * v180];
                if (!v178)
                {
                  while (1)
                  {
                    int64_t v179 = v180 + 1;
                    if (__OFADD__(v180, 1)) {
                      goto LABEL_180;
                    }
                    if (v179 >= v430) {
                      break;
                    }
                    unint64_t v178 = *(void *)&v429[8 * v179];
                    ++v180;
                    if (v178) {
                      goto LABEL_70;
                    }
                  }
LABEL_114:
                  swift_release();
                  swift_bridgeObjectRelease();
                  sub_25B11DEBC((uint64_t)v489);
                  a2 = *(void *)(v175 + v411[7]);
                  uint64_t v251 = *(void *)(a2 + 64);
                  os_log_t v433 = (char *)(a2 + 64);
                  uint64_t v252 = 1 << *(unsigned char *)(a2 + 32);
                  uint64_t v253 = -1;
                  if (v252 < 64) {
                    uint64_t v253 = ~(-1 << v252);
                  }
                  unint64_t v254 = v253 & v251;
                  sub_25B1172F8((uint64_t)v489);
                  uint64_t v434 = (unint64_t)(v252 + 63) >> 6;
                  swift_bridgeObjectRetain();
                  uint64_t v255 = 0;
                  id v441 = (id)MEMORY[0x263F8EE80];
                  unint64_t v8 = 14906;
                  unint64_t isUniquelyReferenced_nonNull_native = 0xE200000000000000;
                  uint64_t v16 = MEMORY[0x263F8D310];
                  uint64_t v19 = (uint64_t)v422;
                  uint64_t v432 = a2;
                  while (1)
                  {
                    if (v254)
                    {
                      unint64_t v436 = (v254 - 1) & v254;
                      uint64_t v439 = v255;
                      unint64_t v256 = __clz(__rbit64(v254)) | (v255 << 6);
                    }
                    else
                    {
                      uint64_t v257 = v255 + 1;
                      if (__OFADD__(v255, 1)) {
                        goto LABEL_176;
                      }
                      if (v257 >= v434) {
                        goto LABEL_150;
                      }
                      unint64_t v258 = *(void *)&v433[8 * v257];
                      uint64_t v259 = v255 + 1;
                      if (!v258)
                      {
                        uint64_t v259 = v255 + 2;
                        if (v255 + 2 >= v434) {
                          goto LABEL_150;
                        }
                        unint64_t v258 = *(void *)&v433[8 * v259];
                        if (!v258)
                        {
                          uint64_t v259 = v255 + 3;
                          if (v255 + 3 >= v434) {
                            goto LABEL_150;
                          }
                          unint64_t v258 = *(void *)&v433[8 * v259];
                          if (!v258)
                          {
                            uint64_t v259 = v255 + 4;
                            if (v255 + 4 >= v434) {
                              goto LABEL_150;
                            }
                            unint64_t v258 = *(void *)&v433[8 * v259];
                            if (!v258)
                            {
                              uint64_t v260 = v255 + 5;
                              if (v255 + 5 >= v434) {
                                goto LABEL_150;
                              }
                              unint64_t v258 = *(void *)&v433[8 * v260];
                              if (!v258)
                              {
                                while (1)
                                {
                                  uint64_t v259 = v260 + 1;
                                  if (__OFADD__(v260, 1)) {
                                    goto LABEL_182;
                                  }
                                  if (v259 >= v434) {
                                    break;
                                  }
                                  unint64_t v258 = *(void *)&v433[8 * v259];
                                  ++v260;
                                  if (v258) {
                                    goto LABEL_136;
                                  }
                                }
LABEL_150:
                                swift_release();
                                sub_25B11DEBC((uint64_t)v489);
                                uint64_t v292 = v408;
                                swift_beginAccess();
                                sub_25B10FF48(v292 + 192, (uint64_t)&v466);
                                uint64_t v293 = *((void *)&v467 + 1);
                                uint64_t v294 = v468;
                                __swift_project_boxed_opaque_existential_1(&v466, *((uint64_t *)&v467 + 1));
                                uint64_t v295 = v410;
                                uint64_t v296 = (void *)MetadataStoring.mismatchedZoneVersions(for:remoteZoneVersions:)(v410, (uint64_t)v441, v293, *(void *)(v294 + 8));
                                swift_bridgeObjectRelease();
                                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v466);
                                sub_25B10FF48(v292 + 192, (uint64_t)&v466);
                                uint64_t v297 = *((void *)&v467 + 1);
                                uint64_t v298 = v468;
                                __swift_project_boxed_opaque_existential_1(&v466, *((uint64_t *)&v467 + 1));
                                uint64_t v299 = swift_bridgeObjectRetain();
                                id v441 = v296;
                                uint64_t v300 = sub_25B20DFA8(v299);
                                uint64_t v301 = MetadataStoring.recordVersionsWithProtocolAppropriateIDs(for:zoneIDs:)(v295, v300, v297, *(void *)(v298 + 8));
                                uint64_t v302 = v292;
                                swift_bridgeObjectRelease();
                                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v466);
                                uint64_t v303 = v395;
                                sub_25B1806D0(v295, v395, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                                swift_retain_n();
                                swift_bridgeObjectRetain();
                                long long v304 = sub_25B290160();
                                os_log_type_t v305 = sub_25B2908A0();
                                BOOL v306 = os_log_type_enabled(v304, v305);
                                uint64_t ObjectType = v301;
                                if (v306)
                                {
                                  uint64_t v307 = swift_slowAlloc();
                                  uint64_t v308 = swift_slowAlloc();
                                  *(void *)&long long v466 = v308;
                                  *(_DWORD *)uint64_t v307 = 136446466;
                                  uint64_t v309 = *(void *)(v408 + 528);
                                  unint64_t v310 = *(void *)(v408 + 536);
                                  swift_bridgeObjectRetain();
                                  *(void *)&v456[0] = sub_25B288E98(v309, v310, (uint64_t *)&v466);
                                  sub_25B2909C0();
                                  swift_release_n();
                                  swift_bridgeObjectRelease();
                                  *(_WORD *)(v307 + 12) = 2082;
                                  sub_25B1806D0(v303, v393, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                                  uint64_t v311 = sub_25B290600();
                                  *(void *)&v456[0] = sub_25B288E98(v311, v312, (uint64_t *)&v466);
                                  sub_25B2909C0();
                                  swift_bridgeObjectRelease();
                                  sub_25B180A5C(v303, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                                  _os_log_impl(&dword_25B107000, v304, v305, "(%{public}s) [Send Response] Found pairing relationship: %{public}s", (uint8_t *)v307, 0x16u);
                                  swift_arrayDestroy();
                                  MEMORY[0x261160890](v308, -1, -1);
                                  uint64_t v302 = v408;
                                  MEMORY[0x261160890](v307, -1, -1);
                                }
                                else
                                {
                                  swift_release_n();
                                  sub_25B180A5C(v303, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                                }

                                swift_retain_n();
                                swift_bridgeObjectRetain_n();
                                long long v313 = sub_25B290160();
                                os_log_type_t v314 = sub_25B2908A0();
                                if (os_log_type_enabled(v313, v314))
                                {
                                  uint64_t v315 = swift_slowAlloc();
                                  uint64_t v316 = swift_slowAlloc();
                                  *(void *)&long long v466 = v316;
                                  *(_DWORD *)uint64_t v315 = 136446466;
                                  uint64_t v317 = *(void *)(v408 + 528);
                                  unint64_t v318 = *(void *)(v408 + 536);
                                  swift_bridgeObjectRetain();
                                  *(void *)&v456[0] = sub_25B288E98(v317, v318, (uint64_t *)&v466);
                                  sub_25B2909C0();
                                  swift_release_n();
                                  swift_bridgeObjectRelease();
                                  *(_WORD *)(v315 + 12) = 2082;
                                  swift_bridgeObjectRetain();
                                  uint64_t v319 = sub_25B2904E0();
                                  unint64_t v321 = v320;
                                  swift_bridgeObjectRelease();
                                  *(void *)&v456[0] = sub_25B288E98(v319, v321, (uint64_t *)&v466);
                                  sub_25B2909C0();
                                  swift_bridgeObjectRelease_n();
                                  swift_bridgeObjectRelease();
                                  _os_log_impl(&dword_25B107000, v313, v314, "(%{public}s) [Send Response] Local zone versions: %{public}s", (uint8_t *)v315, 0x16u);
                                  swift_arrayDestroy();
                                  MEMORY[0x261160890](v316, -1, -1);
                                  uint64_t v302 = v408;
                                  MEMORY[0x261160890](v315, -1, -1);
                                }
                                else
                                {

                                  swift_bridgeObjectRelease_n();
                                  swift_release_n();
                                }
                                unint64_t v322 = v441;
                                uint64_t v323 = ObjectType;
                                if (*((void *)v441 + 2))
                                {
                                  swift_bridgeObjectRetain_n();
                                  swift_retain();
                                  uint64_t v324 = sub_25B290160();
                                  os_log_type_t v325 = sub_25B2908A0();
                                  if (os_log_type_enabled(v324, v325))
                                  {
                                    uint64_t v326 = swift_slowAlloc();
                                    uint64_t v327 = swift_slowAlloc();
                                    *(void *)&long long v466 = v327;
                                    *(_DWORD *)uint64_t v326 = 136446722;
                                    uint64_t v328 = *(void *)(v408 + 528);
                                    unint64_t v329 = *(void *)(v408 + 536);
                                    swift_bridgeObjectRetain();
                                    *(void *)&v456[0] = sub_25B288E98(v328, v329, (uint64_t *)&v466);
                                    sub_25B2909C0();
                                    swift_release();
                                    swift_bridgeObjectRelease();
                                    *(_WORD *)(v326 + 12) = 2050;
                                    *(void *)&v456[0] = v322[2];
                                    sub_25B2909C0();
                                    swift_bridgeObjectRelease();
                                    *(_WORD *)(v326 + 22) = 2082;
                                    sub_25B180E18();
                                    swift_bridgeObjectRetain();
                                    uint64_t v330 = sub_25B2904E0();
                                    unint64_t v332 = v331;
                                    swift_bridgeObjectRelease();
                                    *(void *)&v456[0] = sub_25B288E98(v330, v332, (uint64_t *)&v466);
                                    sub_25B2909C0();
                                    swift_bridgeObjectRelease_n();
                                    uint64_t v323 = ObjectType;
                                    swift_bridgeObjectRelease();
                                    _os_log_impl(&dword_25B107000, v324, v325, "(%{public}s) [Send Response] Found mismatched zones (%{public}ld): %{public}s", (uint8_t *)v326, 0x20u);
                                    swift_arrayDestroy();
                                    MEMORY[0x261160890](v327, -1, -1);
                                    uint64_t v302 = v408;
                                    MEMORY[0x261160890](v326, -1, -1);
                                  }
                                  else
                                  {

                                    swift_bridgeObjectRelease_n();
                                    swift_release();
                                  }
                                }
                                else
                                {
                                  swift_bridgeObjectRelease();
                                }
                                swift_retain_n();
                                swift_bridgeObjectRetain();
                                unint64_t v333 = sub_25B290160();
                                os_log_type_t v334 = sub_25B2908A0();
                                if (os_log_type_enabled(v333, v334))
                                {
                                  uint64_t v335 = swift_slowAlloc();
                                  id v441 = (id)swift_slowAlloc();
                                  *(void *)&long long v466 = v441;
                                  *(_DWORD *)uint64_t v335 = 136446466;
                                  uint64_t v336 = *(void *)(v302 + 528);
                                  unint64_t v337 = *(void *)(v302 + 536);
                                  swift_bridgeObjectRetain();
                                  *(void *)&v456[0] = sub_25B288E98(v336, v337, (uint64_t *)&v466);
                                  sub_25B2909C0();
                                  swift_release_n();
                                  swift_bridgeObjectRelease();
                                  *(_WORD *)(v335 + 12) = 2082;
                                  type metadata accessor for Record.ID(0);
                                  sub_25B1875E0(&qword_26A4DA700, (void (*)(uint64_t))type metadata accessor for Record.ID);
                                  swift_bridgeObjectRetain();
                                  uint64_t v338 = v407;
                                  uint64_t v339 = sub_25B2904E0();
                                  unint64_t v341 = v340;
                                  swift_bridgeObjectRelease();
                                  *(void *)&v456[0] = sub_25B288E98(v339, v341, (uint64_t *)&v466);
                                  sub_25B2909C0();
                                  swift_bridgeObjectRelease_n();
                                  swift_bridgeObjectRelease();
                                  _os_log_impl(&dword_25B107000, v333, v334, "(%{public}s) [Send Response] Sending record versions: %{public}s", (uint8_t *)v335, 0x16u);
                                  id v342 = v441;
                                  swift_arrayDestroy();
                                  MEMORY[0x261160890](v342, -1, -1);
                                  MEMORY[0x261160890](v335, -1, -1);

                                  uint64_t v343 = v437;
                                  uint64_t v345 = (uint64_t)v400;
                                  uint64_t v344 = (uint64_t)v401;
                                }
                                else
                                {

                                  swift_bridgeObjectRelease_n();
                                  swift_release_n();
                                  uint64_t v343 = v437;
                                  uint64_t v345 = (uint64_t)v400;
                                  uint64_t v344 = (uint64_t)v401;
                                  uint64_t v338 = v407;
                                }
                                uint64_t v346 = v403;
                                v385(v403, v343, v338);
                                uint64_t v347 = v410;
                                uint64_t v348 = (uint64_t *)(v410 + *(int *)(v409 + 32));
                                uint64_t v349 = *v348;
                                unint64_t v350 = v348[1];
                                uint64_t v351 = (int *)v396;
                                uint64_t v352 = (uint64_t *)(v346 + *(int *)(v396 + 20));
                                uint64_t *v352 = v349;
                                v352[1] = v350;
                                int v353 = (_OWORD *)(v346 + v351[6]);
                                long long v354 = v488[1];
                                *int v353 = v488[0];
                                v353[1] = v354;
                                long long v355 = v488[5];
                                v353[4] = v488[4];
                                v353[5] = v355;
                                long long v356 = v488[3];
                                v353[2] = v488[2];
                                v353[3] = v356;
                                long long v357 = v488[10];
                                long long v358 = v488[8];
                                v353[9] = v488[9];
                                v353[10] = v357;
                                long long v359 = v488[7];
                                v353[6] = v488[6];
                                v353[7] = v359;
                                v353[8] = v358;
                                *(void *)(v346 + v351[7]) = v440;
                                *(void *)(v346 + v351[8]) = v323;
                                uint64_t v360 = v347;
                                uint64_t v361 = v405;
                                sub_25B1806D0(v346, v405, type metadata accessor for ReplicatorMessage.Handshake.Response);
                                swift_storeEnumTagMultiPayload();
                                uint64_t v362 = v361;
                                uint64_t v363 = v387;
                                sub_25B1806D0(v362, v387, type metadata accessor for ReplicatorMessage.Handshake);
                                swift_storeEnumTagMultiPayload();
                                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v406 + 56))(v345, 1, 1, v338);
                                sub_25B120090(v349, v350);
                                sub_25B1172F8((uint64_t)v488);
                                uint64_t v364 = v408;
                                sub_25B141908(v363, v360, v345, v344);
                                long long v365 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v399 + 56);
                                sub_25B116DE0(v345, &qword_26B33F200);
                                (*v365)(v344, 0, 1, v402);
                                uint64_t v366 = v391;
                                sub_25B18095C(v344, v391, (uint64_t (*)(void))type metadata accessor for Message);
                                id v441 = *(id *)(v364 + 184);
                                uint64_t ObjectType = swift_getObjectType();
                                uint64_t v367 = sub_25B28FEA0();
                                uint64_t v368 = v404;
                                (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v367 - 8) + 56))(v404, 1, 1, v367);
                                long long v369 = v388[7];
                                long long v370 = v388[9];
                                long long v463 = v388[8];
                                long long v464 = v370;
                                long long v371 = v388[9];
                                long long v465 = v388[10];
                                long long v372 = v388[3];
                                long long v373 = v388[5];
                                long long v459 = v388[4];
                                long long v460 = v373;
                                long long v374 = v388[5];
                                long long v375 = v388[7];
                                long long v461 = v388[6];
                                long long v462 = v375;
                                long long v376 = v388[1];
                                v456[0] = *v388;
                                v456[1] = v376;
                                long long v377 = v388[3];
                                long long v379 = *v388;
                                long long v378 = v388[1];
                                long long v457 = v388[2];
                                long long v458 = v377;
                                long long v452 = v369;
                                long long v453 = v463;
                                long long v380 = v388[10];
                                long long v454 = v371;
                                long long v455 = v380;
                                long long v449 = v459;
                                long long v450 = v374;
                                long long v451 = v461;
                                long long v445 = v379;
                                long long v446 = v378;
                                long long v447 = v457;
                                long long v448 = v372;
                                char v444 = 0;
                                v443[0] = 0x403E000000000000;
                                v443[1] = 0;
                                uint64_t v381 = v392;
                                sub_25B1806D0(v437, v392, type metadata accessor for ReplicatorMessage.Handshake.Request);
                                unint64_t v382 = (*(unsigned __int8 *)(v389 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v389 + 80);
                                uint64_t v383 = swift_allocObject();
                                *(void *)(v383 + 16) = v364;
                                sub_25B18095C(v381, v383 + v382, type metadata accessor for ReplicatorMessage.Handshake.Request);
                                swift_retain();
                                sub_25B1172F8((uint64_t)v456);
                                sub_25B1593EC(v366, v368, &v445, &v444, v443, (uint64_t)sub_25B183CA8, v383, ObjectType, (uint64_t)v441);
                                swift_release();
                                sub_25B11DEBC((uint64_t)v488);
                                long long v474 = v453;
                                long long v475 = v454;
                                long long v476 = v455;
                                long long v470 = v449;
                                long long v471 = v450;
                                long long v472 = v451;
                                long long v473 = v452;
                                long long v466 = v445;
                                long long v467 = v446;
                                long long v468 = v447;
                                long long v469 = v448;
                                sub_25B11DEBC((uint64_t)&v466);
                                sub_25B116DE0(v368, &qword_26A4D9160);
                                sub_25B180A5C(v366, (uint64_t (*)(void))type metadata accessor for Message);
                                sub_25B180A5C(v387, type metadata accessor for ReplicatorMessage);
                                sub_25B180A5C(v405, type metadata accessor for ReplicatorMessage.Handshake);
                                sub_25B180A5C(v403, type metadata accessor for ReplicatorMessage.Handshake.Response);
                                sub_25B180A5C(v360, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                                return;
                              }
                              uint64_t v259 = v255 + 5;
                            }
                          }
                        }
                      }
LABEL_136:
                      unint64_t v436 = (v258 - 1) & v258;
                      uint64_t v439 = v259;
                      unint64_t v256 = __clz(__rbit64(v258)) + (v259 << 6);
                    }
                    uint64_t v261 = *(void *)(a2 + 56);
                    uint64_t v262 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v256);
                    uint64_t v264 = *v262;
                    uint64_t v263 = v262[1];
                    uint64_t v435 = *(void *)(ObjectType + 72);
                    unint64_t v5 = (unint64_t)v418;
                    sub_25B1806D0(v261 + v435 * v256, (uint64_t)&v418[*(int *)(v438 + 48)], (uint64_t (*)(void))type metadata accessor for ZoneVersion);
                    *(void *)unint64_t v5 = v264;
                    *(void *)(v5 + 8) = v263;
                    sub_25B187574(v5, v19, &qword_26A4D9A88);
                    uint64_t v265 = *(void *)(v19 + 8);
                    *(void *)&long long v466 = *(void *)v19;
                    *((void *)&v466 + 1) = v265;
                    *(void *)&v456[0] = 14906;
                    *((void *)&v456[0] + 1) = 0xE200000000000000;
                    sub_25B183ADC();
                    swift_bridgeObjectRetain();
                    uint64_t v266 = (void *)sub_25B290840();
                    BOOL v267 = v266;
                    if (v266[2] == 2)
                    {
                      uint64_t v268 = v266[4];
                      uint64_t v19 = v266[5];
                      uint64_t v269 = v266[6];
                      unint64_t v8 = v266[7];
                      swift_bridgeObjectRetain();
                      unint64_t v5 = MEMORY[0x26115EF60](v268, v19, v269, v8);
                      uint64_t v271 = v270;
                      swift_bridgeObjectRelease();
                      if (v267[2] < 2uLL) {
                        goto LABEL_170;
                      }
                      a2 = v16;
                      uint64_t v272 = v267[8];
                      uint64_t v273 = v267[9];
                      uint64_t v274 = v267[10];
                      uint64_t v275 = v267[11];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      uint64_t v19 = MEMORY[0x26115EF60](v272, v273, v274, v275);
                      uint64_t v16 = v276;
                      swift_bridgeObjectRelease();
                      uint64_t v277 = *(int *)(v438 + 48);
                      uint64_t v278 = (uint64_t)&v413[v277];
                      sub_25B1806D0((uint64_t)&v422[v277], (uint64_t)&v413[v277], (uint64_t (*)(void))type metadata accessor for ZoneVersion);
                      sub_25B18095C(v278, v417, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
                      unint64_t v279 = v441;
                      unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      *(void *)&long long v466 = v279;
                      unint64_t v8 = sub_25B18A768(v5, v271, v19, v16);
                      uint64_t v281 = v279[2];
                      BOOL v282 = (v280 & 1) == 0;
                      uint64_t v283 = v281 + v282;
                      if (__OFADD__(v281, v282)) {
                        goto LABEL_171;
                      }
                      char v284 = v280;
                      if (v279[3] >= v283)
                      {
                        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                          sub_25B1941BC();
                        }
                      }
                      else
                      {
                        sub_25B18F048(v283, isUniquelyReferenced_nonNull_native);
                        unint64_t v285 = sub_25B18A768(v5, v271, v19, v16);
                        if ((v284 & 1) != (v286 & 1)) {
                          goto LABEL_184;
                        }
                        unint64_t v8 = v285;
                      }
                      uint64_t v287 = v435;
                      uint64_t v288 = (void *)v466;
                      id v441 = (id)v466;
                      if (v284)
                      {
                        sub_25B187120(v417, *(void *)(v466 + 56) + v8 * v435, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
                      }
                      else
                      {
                        *(void *)(v466 + 8 * (v8 >> 6) + 64) |= 1 << v8;
                        uint64_t v289 = (unint64_t *)(v288[6] + 32 * v8);
                        *uint64_t v289 = v5;
                        v289[1] = v271;
                        v289[2] = v19;
                        v289[3] = v16;
                        sub_25B18095C(v417, v288[7] + v8 * v287, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
                        uint64_t v290 = v288[2];
                        BOOL v165 = __OFADD__(v290, 1);
                        uint64_t v291 = v290 + 1;
                        if (v165) {
                          goto LABEL_177;
                        }
                        v288[2] = v291;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                      }
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v19 = (uint64_t)v422;
                      unint64_t v8 = 14906;
                      unint64_t isUniquelyReferenced_nonNull_native = 0xE200000000000000;
                      uint64_t v16 = a2;
                      a2 = v432;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                    }
                    unint64_t v254 = v436;
                    sub_25B116DE0(v19, &qword_26A4D9A88);
                    uint64_t v255 = v439;
                  }
                }
                int64_t v179 = v174 + 5;
              }
            }
          }
        }
LABEL_70:
        id v441 = (id)((v178 - 1) & v178);
        uint64_t v432 = v179;
        unint64_t v176 = __clz(__rbit64(v178)) + (v179 << 6);
      }
      uint64_t v181 = *(void *)(a2 + 56);
      uint64_t v182 = (uint64_t *)(*(void *)(a2 + 48) + 32 * v176);
      uint64_t v184 = *v182;
      uint64_t v183 = v182[1];
      uint64_t v186 = v182[2];
      uint64_t v185 = v182[3];
      uint64_t v434 = *(void *)(ObjectType + 72);
      uint64_t v187 = v439;
      long long v188 = v423;
      sub_25B1806D0(v181 + v434 * v176, (uint64_t)&v423[*(int *)(v439 + 48)], (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      *long long v188 = v184;
      v188[1] = v183;
      v188[2] = v186;
      v188[3] = v185;
      unint64_t v5 = v436;
      sub_25B187574((uint64_t)v188, v436, (uint64_t *)&unk_26A4D9190);
      uint64_t v189 = *(int *)(v187 + 48);
      long long v190 = v424;
      uint64_t v191 = (uint64_t)v424 + v189;
      uint64_t v192 = v5 + v189;
      uint64_t v435 = v5 + v189;
      uint64_t v194 = *(void *)v5;
      uint64_t v193 = *(void *)(v5 + 8);
      uint64_t v195 = *(void *)(v5 + 16);
      uint64_t v196 = *(void *)(v5 + 24);
      void *v424 = *(void *)v5;
      v190[1] = v193;
      v190[2] = v195;
      v190[3] = v196;
      sub_25B1806D0(v192, v191, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      *(void *)&long long v466 = v194;
      *((void *)&v466 + 1) = v193;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B180A5C(v191, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      sub_25B290650();
      unint64_t isUniquelyReferenced_nonNull_native = (unint64_t)v190 + *(int *)(v187 + 48);
      uint64_t v197 = *(void *)(v5 + 8);
      uint64_t v198 = *(void *)(v5 + 16);
      uint64_t v199 = *(void *)(v5 + 24);
      void *v190 = *(void *)v5;
      v190[1] = v197;
      v190[2] = v198;
      v190[3] = v199;
      a2 = v435;
      sub_25B1806D0(v435, isUniquelyReferenced_nonNull_native, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      swift_bridgeObjectRetain();
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B180A5C(isUniquelyReferenced_nonNull_native, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v200 = *((void *)&v466 + 1);
      uint64_t v16 = v466;
      uint64_t v201 = (uint64_t)&v425[*(int *)(v187 + 48)];
      sub_25B1806D0(a2, v201, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      unint64_t v8 = v426;
      sub_25B18095C(v201, v426, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v202 = v440;
      uint64_t v19 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v466 = v202;
      unint64_t v204 = sub_25B18A634(v16, v200);
      uint64_t v205 = *(void *)(v202 + 16);
      BOOL v206 = (v203 & 1) == 0;
      uint64_t v207 = v205 + v206;
      if (__OFADD__(v205, v206)) {
        break;
      }
      unint64_t v5 = v203;
      if (*(void *)(v202 + 24) >= v207)
      {
        if ((v19 & 1) == 0) {
          sub_25B194174();
        }
      }
      else
      {
        sub_25B18F000(v207, v19);
        unint64_t v208 = sub_25B18A634(v16, v200);
        if ((v5 & 1) != (v209 & 1)) {
          goto LABEL_183;
        }
        unint64_t v204 = v208;
      }
      uint64_t v210 = (void *)v466;
      uint64_t v440 = v466;
      if (v5)
      {
        sub_25B187120(v8, *(void *)(v466 + 56) + v204 * v434, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      }
      else
      {
        *(void *)(v466 + 8 * (v204 >> 6) + 64) |= 1 << v204;
        uint64_t v211 = (uint64_t *)(v210[6] + 16 * v204);
        *uint64_t v211 = v16;
        v211[1] = v200;
        sub_25B18095C(v8, v210[7] + v204 * v434, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        uint64_t v212 = v210[2];
        BOOL v165 = __OFADD__(v212, 1);
        uint64_t v213 = v212 + 1;
        if (v165) {
          goto LABEL_168;
        }
        v210[2] = v213;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B116DE0(v436, (uint64_t *)&unk_26A4D9190);
      uint64_t v175 = v437;
      uint64_t v174 = v432;
      a2 = (uint64_t)v433;
      uint64_t v19 = (uint64_t)v441;
    }
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
LABEL_175:
    __break(1u);
LABEL_176:
    __break(1u);
LABEL_177:
    __break(1u);
LABEL_178:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v124 = 0;
  uint64_t v440 = MEMORY[0x263F8EE80];
  unint64_t v436 = (unint64_t)"Swift/UnsafePointer.swift";
  uint64_t v426 = 0x800000025B29C8A0;
  uint64_t v125 = v437;
  unsigned int v126 = v416;
  while (1)
  {
    if (v19)
    {
      id v441 = (id)((v19 - 1) & v19);
      uint64_t v432 = v124;
      unint64_t v127 = __clz(__rbit64(v19)) | (v124 << 6);
      goto LABEL_33;
    }
    int64_t v128 = v124 + 1;
    if (__OFADD__(v124, 1)) {
      goto LABEL_172;
    }
    if (v128 >= v430) {
      break;
    }
    unint64_t v129 = *(void *)&v429[8 * v128];
    int64_t v130 = v124 + 1;
    if (!v129)
    {
      int64_t v130 = v124 + 2;
      if (v124 + 2 >= v430) {
        break;
      }
      unint64_t v129 = *(void *)&v429[8 * v130];
      if (!v129)
      {
        int64_t v130 = v124 + 3;
        if (v124 + 3 >= v430) {
          break;
        }
        unint64_t v129 = *(void *)&v429[8 * v130];
        if (!v129)
        {
          int64_t v130 = v124 + 4;
          if (v124 + 4 >= v430) {
            break;
          }
          unint64_t v129 = *(void *)&v429[8 * v130];
          if (!v129)
          {
            uint64_t v131 = v124 + 5;
            if (v124 + 5 >= v430) {
              break;
            }
            unint64_t v129 = *(void *)&v429[8 * v131];
            if (!v129)
            {
              while (1)
              {
                int64_t v130 = v131 + 1;
                if (__OFADD__(v131, 1)) {
                  break;
                }
                if (v130 >= v430) {
                  goto LABEL_82;
                }
                unint64_t v129 = *(void *)&v429[8 * v130];
                ++v131;
                if (v129) {
                  goto LABEL_32;
                }
              }
              __break(1u);
LABEL_180:
              __break(1u);
              goto LABEL_181;
            }
            int64_t v130 = v124 + 5;
          }
        }
      }
    }
LABEL_32:
    id v441 = (id)((v129 - 1) & v129);
    uint64_t v432 = v130;
    unint64_t v127 = __clz(__rbit64(v129)) + (v130 << 6);
LABEL_33:
    uint64_t v132 = *(void *)(a2 + 56);
    uint64_t v133 = (uint64_t *)(*(void *)(a2 + 48) + 32 * v127);
    uint64_t v134 = *v133;
    uint64_t v135 = v133[1];
    uint64_t v137 = v133[2];
    uint64_t v136 = v133[3];
    uint64_t v16 = *(void *)(ObjectType + 72);
    uint64_t v138 = v439;
    long long v139 = v427;
    unint64_t isUniquelyReferenced_nonNull_native = (unint64_t)type metadata accessor for ZoneVersion;
    sub_25B1806D0(v132 + v16 * v127, (uint64_t)&v427[*(int *)(v439 + 48)], (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    void *v139 = v134;
    v139[1] = v135;
    v139[2] = v137;
    v139[3] = v136;
    sub_25B187574((uint64_t)v139, (uint64_t)v126, (uint64_t *)&unk_26A4D9190);
    uint64_t v140 = *(int *)(v138 + 48);
    uint64_t v141 = v428;
    unint64_t v5 = (unint64_t)v428 + v140;
    uint64_t v142 = (uint64_t)v126 + v140;
    uint64_t v143 = v126[1];
    uint64_t v144 = v126[2];
    unint64_t v8 = v126[3];
    *uint64_t v428 = *v126;
    v141[1] = v143;
    v141[2] = v144;
    v141[3] = v8;
    sub_25B1806D0((uint64_t)v126 + v140, v5, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    if (v144 == 0xD000000000000011 && v8 == v426)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B180A5C(v5, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    }
    else
    {
      char v145 = sub_25B290FB0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B180A5C(v5, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      if ((v145 & 1) == 0) {
        goto LABEL_14;
      }
    }
    uint64_t v146 = v439;
    uint64_t v147 = *(int *)(v439 + 48);
    long long v148 = v414;
    unint64_t v8 = (unint64_t)v414 + v147;
    uint64_t v149 = *v126;
    a2 = v126[1];
    uint64_t v150 = v126[2];
    uint64_t v151 = v126[3];
    *long long v414 = v149;
    v148[1] = a2;
    v148[2] = v150;
    v148[3] = v151;
    uint64_t v19 = (uint64_t)type metadata accessor for ZoneVersion;
    sub_25B1806D0(v142, (uint64_t)v148 + v147, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t v152 = *(int *)(v146 + 48);
    long long v153 = v415;
    uint64_t v154 = (uint64_t)v415 + v152;
    *long long v415 = v149;
    v153[1] = a2;
    v153[2] = v150;
    v153[3] = v151;
    sub_25B1806D0(v142, (uint64_t)v153 + v152, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    sub_25B18095C(v154, v431, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    swift_bridgeObjectRetain();
    uint64_t v155 = v440;
    unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v466 = v155;
    unint64_t v5 = sub_25B18A634(v149, a2);
    uint64_t v157 = *(void *)(v155 + 16);
    BOOL v158 = (v156 & 1) == 0;
    uint64_t v159 = v157 + v158;
    if (__OFADD__(v157, v158)) {
      goto LABEL_167;
    }
    uint64_t v19 = v156;
    if (*(void *)(v155 + 24) >= v159)
    {
      unsigned int v126 = v416;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_25B194174();
      }
    }
    else
    {
      sub_25B18F000(v159, isUniquelyReferenced_nonNull_native);
      unint64_t v160 = sub_25B18A634(v149, a2);
      unsigned int v126 = v416;
      if ((v19 & 1) != (v161 & 1)) {
        goto LABEL_183;
      }
      unint64_t v5 = v160;
    }
    uint64_t v162 = (void *)v466;
    uint64_t v440 = v466;
    if (v19)
    {
      sub_25B187120(v431, *(void *)(v466 + 56) + v5 * v16, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    }
    else
    {
      *(void *)(v466 + 8 * (v5 >> 6) + 64) |= 1 << v5;
      os_log_type_t v163 = (uint64_t *)(v162[6] + 16 * v5);
      *os_log_type_t v163 = v149;
      v163[1] = a2;
      sub_25B18095C(v431, v162[7] + v5 * v16, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v164 = v162[2];
      BOOL v165 = __OFADD__(v164, 1);
      uint64_t v166 = v164 + 1;
      if (v165) {
        goto LABEL_174;
      }
      v162[2] = v166;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B180A5C(v8, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
LABEL_14:
    a2 = (uint64_t)v433;
    uint64_t v19 = (uint64_t)v441;
    sub_25B116DE0((uint64_t)v126, (uint64_t *)&unk_26A4D9190);
    uint64_t v125 = v437;
    uint64_t v124 = v432;
  }
LABEL_82:
  swift_release();
  swift_bridgeObjectRelease();
  sub_25B11DEBC((uint64_t)v489);
  a2 = *(void *)(v125 + v411[7]);
  uint64_t v214 = *(void *)(a2 + 64);
  uint64_t v429 = (char *)(a2 + 64);
  uint64_t v215 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v216 = -1;
  if (v215 < 64) {
    uint64_t v216 = ~(-1 << v215);
  }
  uint64_t v19 = v216 & v214;
  sub_25B1172F8((uint64_t)v489);
  int64_t v430 = (unint64_t)(v215 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v217 = 0;
  uint64_t v218 = (void *)MEMORY[0x263F8EE80];
  unint64_t v431 = v436 | 0x8000000000000000;
  unint64_t v8 = (unint64_t)&qword_26A4D9A88;
  while (1)
  {
    id v441 = v218;
    if (v19)
    {
      uint64_t v432 = (v19 - 1) & v19;
      os_log_t v433 = v217;
      unint64_t v219 = __clz(__rbit64(v19)) | ((void)v217 << 6);
      goto LABEL_105;
    }
    int64_t v220 = (int64_t)(v217 + 1);
    if (__OFADD__(v217, 1)) {
      goto LABEL_175;
    }
    if (v220 >= v430) {
      goto LABEL_150;
    }
    unint64_t v221 = *(void *)&v429[8 * v220];
    int64_t v222 = (int64_t)(v217 + 1);
    if (!v221)
    {
      int64_t v222 = (int64_t)(v217 + 2);
      if ((uint64_t)(v217 + 2) >= v430) {
        goto LABEL_150;
      }
      unint64_t v221 = *(void *)&v429[8 * v222];
      if (!v221)
      {
        int64_t v222 = (int64_t)(v217 + 3);
        if ((uint64_t)(v217 + 3) >= v430) {
          goto LABEL_150;
        }
        unint64_t v221 = *(void *)&v429[8 * v222];
        if (!v221)
        {
          int64_t v222 = (int64_t)(v217 + 4);
          if ((uint64_t)(v217 + 4) >= v430) {
            goto LABEL_150;
          }
          unint64_t v221 = *(void *)&v429[8 * v222];
          if (!v221) {
            break;
          }
        }
      }
    }
LABEL_104:
    uint64_t v432 = (v221 - 1) & v221;
    os_log_t v433 = (char *)v222;
    unint64_t v219 = __clz(__rbit64(v221)) + (v222 << 6);
LABEL_105:
    uint64_t v224 = *(void *)(a2 + 56);
    unint64_t isUniquelyReferenced_nonNull_native = a2;
    long long v225 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v219);
    uint64_t v227 = *v225;
    uint64_t v226 = v225[1];
    uint64_t v439 = *(void *)(ObjectType + 72);
    uint64_t v19 = v438;
    BOOL v228 = v419;
    sub_25B1806D0(v224 + v439 * v219, (uint64_t)&v419[*(int *)(v438 + 48)], (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    *BOOL v228 = v227;
    v228[1] = v226;
    uint64_t v229 = (uint64_t)v228;
    a2 = v434;
    sub_25B187574(v229, v434, &qword_26A4D9A88);
    uint64_t v230 = *(int *)(v19 + 48);
    char v231 = v420;
    unint64_t v5 = (unint64_t)v420 + v230;
    uint64_t v232 = a2 + v230;
    uint64_t v16 = *(void *)a2;
    uint64_t v233 = *(void *)(a2 + 8);
    void *v420 = *(void *)a2;
    v231[1] = v233;
    sub_25B1806D0(a2 + v230, (uint64_t)v231 + v230, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B180A5C(v5, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    BOOL v234 = v421;
    uint64_t v235 = (uint64_t)v421 + *(int *)(v19 + 48);
    uint64_t v236 = *(void *)(a2 + 8);
    *long long v421 = *(void *)a2;
    v234[1] = v236;
    sub_25B1806D0(v232, v235, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    sub_25B18095C(v235, v435, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    unint64_t v237 = v441;
    int v238 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v466 = v237;
    unint64_t v8 = sub_25B18A768(v16, v233, 0xD000000000000011, v431);
    uint64_t v240 = v237[2];
    BOOL v241 = (v239 & 1) == 0;
    uint64_t v242 = v240 + v241;
    if (__OFADD__(v240, v241)) {
      goto LABEL_166;
    }
    unint64_t v5 = v239;
    if (v237[3] >= v242)
    {
      a2 = isUniquelyReferenced_nonNull_native;
      if ((v238 & 1) == 0) {
        sub_25B1941BC();
      }
    }
    else
    {
      sub_25B18F048(v242, v238);
      unint64_t v243 = sub_25B18A768(v16, v233, 0xD000000000000011, v436 | 0x8000000000000000);
      if ((v5 & 1) != (v244 & 1)) {
        goto LABEL_184;
      }
      unint64_t v8 = v243;
      a2 = isUniquelyReferenced_nonNull_native;
    }
    uint64_t v245 = v439;
    uint64_t v218 = (void *)v466;
    if (v5)
    {
      sub_25B187120(v435, *(void *)(v466 + 56) + v8 * v439, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    }
    else
    {
      *(void *)(v466 + 8 * (v8 >> 6) + 64) |= 1 << v8;
      uint64_t v246 = (uint64_t *)(v218[6] + 32 * v8);
      *uint64_t v246 = v16;
      v246[1] = v233;
      uint64_t v247 = v435;
      unint64_t v248 = v436 | 0x8000000000000000;
      v246[2] = 0xD000000000000011;
      v246[3] = v248;
      sub_25B18095C(v247, v218[7] + v8 * v245, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v249 = v218[2];
      BOOL v165 = __OFADD__(v249, 1);
      uint64_t v250 = v249 + 1;
      if (v165) {
        goto LABEL_169;
      }
      v218[2] = v250;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v8 = (unint64_t)&qword_26A4D9A88;
    sub_25B116DE0(v434, &qword_26A4D9A88);
    uint64_t v19 = v432;
    uint64_t v217 = v433;
  }
  uint64_t v223 = v217 + 5;
  if ((uint64_t)(v217 + 5) >= v430) {
    goto LABEL_150;
  }
  unint64_t v221 = *(void *)&v429[8 * (void)v223];
  if (v221)
  {
    int64_t v222 = (int64_t)(v217 + 5);
    goto LABEL_104;
  }
  while (1)
  {
    int64_t v222 = (int64_t)(v223 + 1);
    if (__OFADD__(v223, 1)) {
      break;
    }
    if (v222 >= v430) {
      goto LABEL_150;
    }
    unint64_t v221 = *(void *)&v429[8 * v222];
    ++v223;
    if (v221) {
      goto LABEL_104;
    }
  }
LABEL_181:
  __break(1u);
LABEL_182:
  __break(1u);
LABEL_183:
  sub_25B291190();
  __break(1u);
LABEL_184:
  sub_25B291190();
  __break(1u);
}

uint64_t sub_25B15C608(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = *(NSObject **)(a3 + 232);
  sub_25B1806D0(a4, (uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Request);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(unsigned char *)(v13 + 24) = a2 & 1;
  *(void *)(v13 + 32) = a3;
  sub_25B18095C((uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for ReplicatorMessage.Handshake.Request);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_25B183E74;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_25B117398;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10D184;
  aBlock[3] = &block_descriptor_1441;
  uint64_t v15 = _Block_copy(aBlock);
  sub_25B116CFC(a1, a2 & 1);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v15);
  _Block_release(v15);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a3) {
    __break(1u);
  }
  return result;
}

void sub_25B15C84C(void *a1, char a2, void *a3, uint64_t a4)
{
  if (a2)
  {
    v45[0] = a1;
    id v7 = a1;
    id v8 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
    if (swift_dynamicCast() && v48 == 2)
    {
      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_25B290190();
      __swift_project_value_buffer(v9, (uint64_t)qword_26A4EB150);
      sub_25B116CFC(a1, 1);
      sub_25B116CFC(a1, 1);
      swift_retain();
      uint64_t v10 = sub_25B290160();
      os_log_type_t v11 = sub_25B2908A0();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v41 = a4;
        uint64_t v12 = swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        uint64_t v43 = v40;
        *(_DWORD *)uint64_t v12 = 136446466;
        uint64_t v13 = a3[66];
        unint64_t v14 = a3[67];
        swift_bridgeObjectRetain();
        sub_25B288E98(v13, v14, &v43);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2082;
        id v15 = a1;
        uint64_t v16 = sub_25B290600();
        sub_25B288E98(v16, v17, &v43);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
        _os_log_impl(&dword_25B107000, v10, v11, "(%{public}s) Handshake request blocked by allow list: %{public}s.", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261160890](v40, -1, -1);
        uint64_t v18 = v12;
        a4 = v41;
        MEMORY[0x261160890](v18, -1, -1);
      }
      else
      {
        swift_release();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
      }

      uint64_t v39 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
      sub_25B15768C(*(void *)(a4 + *(int *)(v39 + 24)), *(void *)(a4 + *(int *)(v39 + 24) + 8));
      sub_25B116D08(a1, 1);
    }
    else
    {

      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_25B290190();
      __swift_project_value_buffer(v19, (uint64_t)qword_26A4EB150);
      sub_25B116CFC(a1, 1);
      sub_25B116CFC(a1, 1);
      swift_retain();
      uint64_t v20 = sub_25B290160();
      os_log_type_t v21 = sub_25B290880();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v42 = a4;
        uint64_t v22 = swift_slowAlloc();
        uint64_t v23 = (void *)swift_slowAlloc();
        v45[0] = v23;
        *(_DWORD *)uint64_t v22 = 136446466;
        uint64_t v24 = a3[66];
        unint64_t v25 = a3[67];
        swift_bridgeObjectRetain();
        sub_25B288E98(v24, v25, (uint64_t *)v45);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 12) = 2082;
        id v26 = a1;
        uint64_t v27 = sub_25B290600();
        uint64_t v43 = sub_25B288E98(v27, v28, (uint64_t *)v45);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
        _os_log_impl(&dword_25B107000, v20, v21, "(%{public}s) Error sending handshake response: %{public}s", (uint8_t *)v22, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261160890](v23, -1, -1);
        uint64_t v29 = v22;
        a4 = v42;
        MEMORY[0x261160890](v29, -1, -1);
      }
      else
      {
        swift_release();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
      }

      uint64_t v30 = a3 + 48;
      uint64_t v31 = a3[51];
      uint64_t v32 = a3[52];
      __swift_project_boxed_opaque_existential_1(v30, v31);
      uint64_t v33 = a4 + *(int *)(type metadata accessor for ReplicatorMessage.Handshake.Request(0) + 24);
      uint64_t v34 = *(void **)(v33 + 8);
      char v35 = *(unsigned char *)(v33 + 48);
      uint64_t v36 = *(void **)(v33 + 160);
      uint64_t v37 = *(void **)(v33 + 168);
      v45[0] = *(id *)v33;
      v45[1] = v34;
      v45[2] = v36;
      uint64_t v45[3] = v37;
      char v46 = v35;
      long long v47 = *(_OWORD *)(v33 + 32);
      uint64_t v43 = 0;
      char v44 = 2;
      uint64_t v38 = *(void (**)(id *, uint64_t *, uint64_t, uint64_t))(v32 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v45, &v43, v31, v32);
      sub_25B116D08(a1, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

void sub_25B15CDD0(void *a1, uint64_t a2, uint64_t a3)
{
  id v384 = a1;
  long long v372 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  uint64_t v342 = *((void *)v372 - 1);
  MEMORY[0x270FA5388](v372);
  uint64_t v343 = v5;
  uint64_t v344 = (uint64_t)&v335 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v346 = (uint64_t)&v335 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v8 - 8);
  int v353 = (char *)&v335 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB070);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v354 = (uint64_t)&v335 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Message();
  uint64_t v351 = *(void *)(v12 - 8);
  uint64_t v352 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v355 = (uint64_t)&v335 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v350 = type metadata accessor for ReplicatorMessage(0);
  MEMORY[0x270FA5388](v350);
  id v15 = (uint64_t (*)())((char *)&v335 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v349 = type metadata accessor for ReplicatorMessage.Handshake(0);
  MEMORY[0x270FA5388](v349);
  unint64_t v17 = (char *)&v335 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v348 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
  uint64_t v339 = *(void *)(v348 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v348);
  uint64_t v340 = v19;
  uint64_t v341 = (uint64_t)&v335 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (unint64_t)&v335 - v20;
  uint64_t v22 = sub_25B290320();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v361 = (char *)&v335 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v356 = sub_25B290360();
  uint64_t v364 = *(void *)(v356 - 8);
  MEMORY[0x270FA5388](v356);
  uint64_t v360 = (char *)&v335 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v337 = type metadata accessor for ZoneVersion();
  uint64_t ObjectType = *(void *)(v337 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v337);
  long long v378 = (void (*)(char *, uint64_t))((char *)&v335 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v26);
  uint64_t v382 = (uint64_t)&v335 - v28;
  uint64_t v385 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A88);
  uint64_t v29 = MEMORY[0x270FA5388](v385);
  unint64_t v368 = (unint64_t)&v335 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  long long v369 = (_OWORD **)((char *)&v335 - v32);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  long long v379 = (char *)&v335 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  long long v377 = (_OWORD **)((char *)&v335 - v36);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  long long v376 = (uint64_t (*)())((char *)&v335 - v38);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v381 = (uint64_t)&v335 - v40;
  MEMORY[0x270FA5388](v39);
  long long v375 = (char *)&v335 - v41;
  uint64_t v366 = type metadata accessor for PairingRelationship();
  uint64_t v338 = *(void *)(v366 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v366);
  uint64_t v347 = (uint64_t)&v335 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v359 = (uint64_t)&v335 - v45;
  uint64_t v345 = v46;
  MEMORY[0x270FA5388](v44);
  uint64_t v367 = (uint64_t)&v335 - v47;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB280);
  MEMORY[0x270FA5388](v48 - 8);
  uint64_t v380 = (uint64_t)&v335 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A4D98C0 != -1) {
LABEL_110:
  }
    swift_once();
  uint64_t v50 = sub_25B290190();
  uint64_t v51 = __swift_project_value_buffer(v50, (uint64_t)qword_26A4EB150);
  swift_retain();
  uint64_t v373 = v51;
  uint64_t v52 = sub_25B290160();
  os_log_type_t v53 = sub_25B2908A0();
  BOOL v54 = os_log_type_enabled(v52, v53);
  uint64_t v374 = a3;
  uint64_t v357 = v22;
  long long v358 = v15;
  unint64_t v362 = v21;
  uint64_t v363 = v17;
  uint64_t v365 = v23;
  if (v54)
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(void *)&v431[0] = v56;
    *(_DWORD *)uint64_t v55 = 136446210;
    uint64_t v57 = *(void *)(a2 + 528);
    unint64_t v58 = *(void *)(a2 + 536);
    swift_bridgeObjectRetain();
    *(void *)&long long v420 = sub_25B288E98(v57, v58, (uint64_t *)v431);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v52, v53, "(%{public}s) Sending handshake complete", v55, 0xCu);
    swift_arrayDestroy();
    uint64_t v59 = v56;
    a3 = v374;
    MEMORY[0x261160890](v59, -1, -1);
    MEMORY[0x261160890](v55, -1, -1);

    id v60 = v384;
    if (v384)
    {
LABEL_4:
      id v61 = v60;
      swift_retain();
      id v62 = v60;
      swift_retain();
      id v63 = v60;
      uint64_t v64 = sub_25B290160();
      os_log_type_t v65 = sub_25B2908A0();
      if (os_log_type_enabled(v64, v65))
      {
        uint64_t v66 = swift_slowAlloc();
        uint64_t v67 = (void *)swift_slowAlloc();
        uint64_t v68 = swift_slowAlloc();
        *(void *)&v431[0] = v68;
        *(_DWORD *)uint64_t v66 = 136446466;
        uint64_t v69 = a2;
        uint64_t v70 = *(void *)(a2 + 528);
        unint64_t v71 = *(void *)(v69 + 536);
        swift_bridgeObjectRetain();
        *(void *)&long long v420 = sub_25B288E98(v70, v71, (uint64_t *)v431);
        sub_25B2909C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v66 + 12) = 2114;
        id v72 = v384;
        uint64_t v73 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)&long long v420 = v73;
        id v60 = v384;
        sub_25B2909C0();
        *uint64_t v67 = v73;

        _os_log_impl(&dword_25B107000, v64, v65, "(%{public}s) Abandoning handshake complete because prerequisites are not met: %{public}@", (uint8_t *)v66, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
        swift_arrayDestroy();
        MEMORY[0x261160890](v67, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x261160890](v68, -1, -1);
        uint64_t v74 = v66;
        a3 = v374;
        MEMORY[0x261160890](v74, -1, -1);
      }
      else
      {
        swift_release_n();
      }
      sub_25B15768C(*(void *)(a3 + v372[6]), *(void *)(a3 + v372[6] + 8));

      return;
    }
  }
  else
  {

    swift_release();
    id v60 = v384;
    if (v384) {
      goto LABEL_4;
    }
  }
  swift_beginAccess();
  uint64_t v75 = *(void *)(a2 + 568);
  if (!*(void *)(v75 + 16))
  {
    uint64_t v84 = type metadata accessor for Replicator.Session(0);
    uint64_t v83 = v380;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v380, 1, 1, v84);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  unint64_t v76 = sub_25B18A93C(a3);
  if (v77)
  {
    unint64_t v78 = v76;
    uint64_t v79 = *(void *)(v75 + 56);
    uint64_t v80 = type metadata accessor for Replicator.Session(0);
    uint64_t v81 = *(void *)(v80 - 8);
    uint64_t v82 = v79 + *(void *)(v81 + 72) * v78;
    uint64_t v83 = v380;
    sub_25B1806D0(v82, v380, type metadata accessor for Replicator.Session);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v83, 0, 1, v80);
  }
  else
  {
    uint64_t v80 = type metadata accessor for Replicator.Session(0);
    uint64_t v83 = v380;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v380, 1, 1, v80);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Replicator.Session(0);
  int v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 48))(v83, 1, v80);
  a3 = v374;
  if (v85 == 1)
  {
LABEL_15:
    sub_25B116DE0(v83, &qword_26A4DB280);
    swift_retain();
    uint64_t v86 = sub_25B290160();
    os_log_type_t v87 = sub_25B290880();
    if (os_log_type_enabled(v86, v87))
    {
      id v88 = (uint8_t *)swift_slowAlloc();
      uint64_t v89 = swift_slowAlloc();
      *(void *)&v431[0] = v89;
      *(_DWORD *)id v88 = 136446210;
      uint64_t v90 = a2;
      uint64_t v91 = *(void *)(a2 + 528);
      unint64_t v92 = *(void *)(v90 + 536);
      swift_bridgeObjectRetain();
      *(void *)&long long v420 = sub_25B288E98(v91, v92, (uint64_t *)v431);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      long long v93 = "(%{public}s) No session established";
LABEL_17:
      _os_log_impl(&dword_25B107000, v86, v87, v93, v88, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v89, -1, -1);
      long long v94 = v88;
      a3 = v374;
      MEMORY[0x261160890](v94, -1, -1);

LABEL_57:
      sub_25B15768C(*(void *)(a3 + v372[6]), *(void *)(a3 + v372[6] + 8));
      return;
    }
    goto LABEL_56;
  }
  sub_25B116DE0(v83, &qword_26A4DB280);
  if (*(unsigned char *)(a2 + 600) != 1)
  {
    swift_retain();
    uint64_t v86 = sub_25B290160();
    os_log_type_t v87 = sub_25B2908A0();
    if (os_log_type_enabled(v86, v87))
    {
      id v88 = (uint8_t *)swift_slowAlloc();
      uint64_t v89 = swift_slowAlloc();
      *(void *)&v431[0] = v89;
      *(_DWORD *)id v88 = 136446210;
      uint64_t v158 = a2;
      uint64_t v159 = *(void *)(a2 + 528);
      unint64_t v160 = *(void *)(v158 + 536);
      swift_bridgeObjectRetain();
      *(void *)&long long v420 = sub_25B288E98(v159, v160, (uint64_t *)v431);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      long long v93 = "(%{public}s) Abandoning handshake request because replicator is disabled";
      goto LABEL_17;
    }
LABEL_56:

    swift_release();
    goto LABEL_57;
  }
  long long v95 = v372;
  long long v96 = (long long *)(a3 + v372[6]);
  long long v97 = v96[6];
  long long v98 = v96[8];
  long long v427 = v96[7];
  long long v428 = v98;
  long long v99 = v96[10];
  long long v100 = v96[8];
  long long v429 = v96[9];
  long long v430 = v99;
  long long v101 = v96[2];
  long long v102 = v96[4];
  long long v423 = v96[3];
  long long v424 = v102;
  long long v103 = v96[6];
  long long v104 = v96[4];
  long long v425 = v96[5];
  long long v426 = v103;
  long long v105 = v96[2];
  long long v106 = *v96;
  long long v421 = v96[1];
  long long v422 = v105;
  long long v413 = v104;
  long long v414 = v425;
  long long v107 = *v96;
  long long v411 = v101;
  long long v412 = v423;
  long long v419 = v96[10];
  long long v420 = v107;
  long long v417 = v100;
  long long v418 = v429;
  long long v415 = v97;
  long long v416 = v427;
  long long v409 = v106;
  long long v410 = v421;
  uint64_t v108 = (void *)(a3 + v372[5]);
  uint64_t v109 = a3;
  unint64_t v111 = v108[1];
  *(void *)&v399[0] = *v108;
  uint64_t v110 = *(void *)&v399[0];
  *((void *)&v399[0] + 1) = v111;
  sub_25B1172F8((uint64_t)&v420);
  sub_25B120090(v110, v111);
  uint64_t v112 = v367;
  uint64_t v336 = (void *)a2;
  sub_25B148078(&v409, (uint64_t)v399, 0, 1, v367);
  sub_25B1200A4(v110, v111);
  sub_25B11DEBC((uint64_t)&v420);
  uint64_t v113 = *(void *)(v109 + v95[7]);
  long long v114 = (_OWORD *)(v112 + *(int *)(v366 + 20));
  long long v115 = v114[5];
  long long v434 = v114[4];
  long long v435 = v115;
  long long v116 = v114[3];
  long long v432 = v114[2];
  long long v433 = v116;
  long long v440 = v114[10];
  long long v117 = v114[9];
  long long v438 = v114[8];
  long long v439 = v117;
  long long v118 = v114[7];
  long long v436 = v114[6];
  long long v437 = v118;
  long long v119 = *v114;
  long long v120 = v114[1];
  uint64_t v335 = v114;
  v431[0] = v119;
  v431[1] = v120;
  unint64_t v121 = v432;
  uint64_t v122 = *(void *)(v113 + 64);
  uint64_t v370 = v113 + 64;
  uint64_t v123 = 1 << *(unsigned char *)(v113 + 32);
  uint64_t v124 = -1;
  if (v123 < 64) {
    uint64_t v124 = ~(-1 << v123);
  }
  unint64_t v125 = v124 & v122;
  sub_25B1172F8((uint64_t)v431);
  int64_t v371 = (unint64_t)(v123 + 63) >> 6;
  uint64_t v380 = v113;
  swift_bridgeObjectRetain();
  if (v121 > 7)
  {
    uint64_t v161 = 0;
    unint64_t v127 = (char *)MEMORY[0x263F8EE80];
    uint64_t v162 = v369;
    while (1)
    {
      if (v125)
      {
        unint64_t v163 = __clz(__rbit64(v125));
        v125 &= v125 - 1;
        uint64_t v382 = v161;
        unint64_t v164 = v163 | (v161 << 6);
      }
      else
      {
        int64_t v165 = v161 + 1;
        if (__OFADD__(v161, 1)) {
          goto LABEL_114;
        }
        if (v165 >= v371)
        {
LABEL_92:
          swift_release();
          sub_25B11DEBC((uint64_t)v431);
          uint64_t v213 = v336;
          swift_beginAccess();
          sub_25B10FF48((uint64_t)(v213 + 24), (uint64_t)&v409);
          uint64_t v214 = *((void *)&v410 + 1);
          uint64_t v215 = v411;
          __swift_project_boxed_opaque_existential_1(&v409, *((uint64_t *)&v410 + 1));
          uint64_t v216 = v367;
          uint64_t v217 = MetadataStoring.mismatchedZoneVersions(for:remoteZoneVersions:)(v367, (uint64_t)v127, v214, *(void *)(v215 + 8));
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v409);
          uint64_t v218 = swift_bridgeObjectRetain();
          id v384 = sub_25B225AD8(v218);
          swift_bridgeObjectRelease();
          sub_25B10FF48((uint64_t)(v213 + 24), (uint64_t)&v409);
          uint64_t v219 = *((void *)&v410 + 1);
          uint64_t v220 = v411;
          __swift_project_boxed_opaque_existential_1(&v409, *((uint64_t *)&v410 + 1));
          uint64_t v221 = swift_bridgeObjectRetain();
          uint64_t v222 = sub_25B20DFA8(v221);
          uint64_t ObjectType = MetadataStoring.recordVersionsWithProtocolAppropriateIDs(for:zoneIDs:)(v216, v222, v219, *(void *)(v220 + 8));
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v409);
          sub_25B10FF48((uint64_t)(v213 + 24), (uint64_t)&v409);
          uint64_t v223 = *((void *)&v410 + 1);
          uint64_t v224 = v411;
          __swift_project_boxed_opaque_existential_1(&v409, *((uint64_t *)&v410 + 1));
          uint64_t v225 = *(void *)(v374 + v372[8]);
          swift_beginAccess();
          uint64_t v226 = swift_bridgeObjectRetain();
          uint64_t v227 = sub_25B2259F0(v226);
          swift_bridgeObjectRelease();
          uint64_t v228 = *(void *)(v224 + 8);
          uint64_t v229 = v213;
          uint64_t v385 = MetadataStoring.mismatchedRecordIDs(for:remoteRecordVersions:zoneIDs:disabledClientIDs:)(v216, v225, (uint64_t)v384, v227, v223, v228);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v409);
          uint64_t v230 = v359;
          sub_25B1806D0(v216, v359, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          swift_retain();
          char v231 = sub_25B290160();
          os_log_type_t v232 = sub_25B2908A0();
          if (os_log_type_enabled(v231, v232))
          {
            uint64_t v233 = swift_slowAlloc();
            uint64_t v382 = swift_slowAlloc();
            *(void *)&long long v409 = v382;
            *(_DWORD *)uint64_t v233 = 136446466;
            uint64_t v234 = v213[66];
            unint64_t v235 = v213[67];
            swift_bridgeObjectRetain();
            *(void *)&v399[0] = sub_25B288E98(v234, v235, (uint64_t *)&v409);
            sub_25B2909C0();
            swift_release();
            swift_bridgeObjectRelease();
            *(_WORD *)(v233 + 12) = 2082;
            sub_25B1806D0(v230, v347, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
            uint64_t v236 = sub_25B290600();
            *(void *)&v399[0] = sub_25B288E98(v236, v237, (uint64_t *)&v409);
            sub_25B2909C0();
            swift_bridgeObjectRelease();
            sub_25B180A5C(v359, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
            _os_log_impl(&dword_25B107000, v231, v232, "(%{public}s) [Send Complete] Found pairing relationship: %{public}s", (uint8_t *)v233, 0x16u);
            uint64_t v238 = v382;
            swift_arrayDestroy();
            MEMORY[0x261160890](v238, -1, -1);
            MEMORY[0x261160890](v233, -1, -1);

            uint64_t v229 = v213;
            if (*(void *)(v217 + 16)) {
              goto LABEL_94;
            }
LABEL_97:
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_release();
            sub_25B180A5C(v230, (uint64_t (*)(void))type metadata accessor for PairingRelationship);

            if (!*(void *)(v217 + 16)) {
              goto LABEL_97;
            }
LABEL_94:
            swift_bridgeObjectRetain_n();
            swift_retain();
            unint64_t v239 = sub_25B290160();
            uint64_t v240 = v229;
            os_log_type_t v241 = sub_25B2908A0();
            if (os_log_type_enabled(v239, v241))
            {
              uint64_t v242 = swift_slowAlloc();
              uint64_t v382 = swift_slowAlloc();
              *(void *)&long long v409 = v382;
              *(_DWORD *)uint64_t v242 = 136446722;
              uint64_t v243 = v229[66];
              unint64_t v244 = v229[67];
              swift_bridgeObjectRetain();
              *(void *)&v399[0] = sub_25B288E98(v243, v244, (uint64_t *)&v409);
              sub_25B2909C0();
              swift_release();
              swift_bridgeObjectRelease();
              *(_WORD *)(v242 + 12) = 2050;
              *(void *)&v399[0] = *(void *)(v217 + 16);
              sub_25B2909C0();
              swift_bridgeObjectRelease();
              *(_WORD *)(v242 + 22) = 2082;
              sub_25B180E18();
              swift_bridgeObjectRetain();
              uint64_t v245 = sub_25B2904E0();
              unint64_t v247 = v246;
              swift_bridgeObjectRelease();
              *(void *)&v399[0] = sub_25B288E98(v245, v247, (uint64_t *)&v409);
              sub_25B2909C0();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_25B107000, v239, v241, "(%{public}s) [Send Complete] Found mismatched zones (%{public}ld: %{public}s", (uint8_t *)v242, 0x20u);
              uint64_t v248 = v382;
              swift_arrayDestroy();
              MEMORY[0x261160890](v248, -1, -1);
              MEMORY[0x261160890](v242, -1, -1);
            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_release();
            }
            uint64_t v229 = v240;
          }
          swift_retain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v249 = sub_25B290160();
          os_log_type_t v250 = sub_25B2908A0();
          if (os_log_type_enabled(v249, v250))
          {
            uint64_t v251 = swift_slowAlloc();
            uint64_t v382 = swift_slowAlloc();
            *(void *)&long long v409 = v382;
            *(_DWORD *)uint64_t v251 = 136446466;
            uint64_t v252 = v336[66];
            unint64_t v253 = v336[67];
            swift_bridgeObjectRetain();
            *(void *)&v399[0] = sub_25B288E98(v252, v253, (uint64_t *)&v409);
            sub_25B2909C0();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v251 + 12) = 2082;
            type metadata accessor for Record.ID(0);
            sub_25B290080();
            sub_25B1875E0(&qword_26A4DA700, (void (*)(uint64_t))type metadata accessor for Record.ID);
            swift_bridgeObjectRetain();
            uint64_t v254 = sub_25B2904E0();
            unint64_t v256 = v255;
            swift_bridgeObjectRelease();
            *(void *)&v399[0] = sub_25B288E98(v254, v256, (uint64_t *)&v409);
            sub_25B2909C0();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_25B107000, v249, v250, "(%{public}s) [Send Complete] Sending record versions: %{public}s", (uint8_t *)v251, 0x16u);
            uint64_t v257 = v382;
            swift_arrayDestroy();
            uint64_t v229 = v336;
            MEMORY[0x261160890](v257, -1, -1);
            MEMORY[0x261160890](v251, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_release_n();
          }
          uint64_t v258 = v374;
          uint64_t v260 = v360;
          uint64_t v259 = v361;
          uint64_t v261 = v335;
          uint64_t v262 = v385;
          if (*(void *)(v385 + 16))
          {
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v263 = sub_25B290160();
            os_log_type_t v264 = sub_25B2908A0();
            if (os_log_type_enabled(v263, v264))
            {
              uint64_t v265 = swift_slowAlloc();
              uint64_t v266 = swift_slowAlloc();
              *(void *)&long long v409 = v266;
              *(_DWORD *)uint64_t v265 = 136446722;
              uint64_t v267 = v336[66];
              unint64_t v268 = v336[67];
              swift_bridgeObjectRetain();
              *(void *)&v399[0] = sub_25B288E98(v267, v268, (uint64_t *)&v409);
              sub_25B2909C0();
              swift_release();
              swift_bridgeObjectRelease();
              *(_WORD *)(v265 + 12) = 2050;
              *(void *)&v399[0] = *(void *)(v385 + 16);
              sub_25B2909C0();
              *(_WORD *)(v265 + 22) = 2082;
              uint64_t v269 = type metadata accessor for Record.ID(0);
              swift_bridgeObjectRetain();
              uint64_t v270 = MEMORY[0x26115F080](v385, v269);
              unint64_t v272 = v271;
              swift_bridgeObjectRelease();
              *(void *)&v399[0] = sub_25B288E98(v270, v272, (uint64_t *)&v409);
              uint64_t v260 = v360;
              uint64_t v258 = v374;
              sub_25B2909C0();
              swift_bridgeObjectRelease_n();
              uint64_t v262 = v385;
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_25B107000, v263, v264, "(%{public}s) [Send Complete] Found mismatched records (%{public}ld): %{public}s", (uint8_t *)v265, 0x20u);
              swift_arrayDestroy();
              uint64_t v229 = v336;
              MEMORY[0x261160890](v266, -1, -1);
              uint64_t v273 = v265;
              uint64_t v259 = v361;
              MEMORY[0x261160890](v273, -1, -1);
            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_release();
            }
            uint64_t v261 = v335;
          }
          sub_25B153898(v262, v258);
          swift_bridgeObjectRelease();
          sub_25B15768C(*(void *)v261, *((void *)v261 + 1));
          sub_25B122E6C();
          uint64_t v274 = v229[29];
          *(void *)&long long v411 = sub_25B18467C;
          *((void *)&v411 + 1) = v229;
          *(void *)&long long v409 = MEMORY[0x263EF8330];
          *((void *)&v409 + 1) = 1107296256;
          *(void *)&long long v410 = sub_25B10F584;
          *((void *)&v410 + 1) = &block_descriptor_1471;
          uint64_t v275 = v258;
          uint64_t v276 = _Block_copy(&v409);
          swift_retain();
          sub_25B290340();
          *(void *)&v399[0] = MEMORY[0x263F8EE78];
          uint64_t v277 = sub_25B1875E0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
          uint64_t v278 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
          uint64_t v380 = sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
          uint64_t v381 = v278;
          uint64_t v279 = v357;
          uint64_t v382 = v277;
          sub_25B290A00();
          uint64_t v385 = v274;
          MEMORY[0x26115F250](0, v260, v259, v276);
          _Block_release(v276);
          char v280 = *(char **)(v365 + 8);
          v365 += 8;
          long long v379 = v280;
          ((void (*)(char *, uint64_t))v280)(v259, v279);
          uint64_t v281 = *(char **)(v364 + 8);
          v364 += 8;
          long long v378 = (void (*)(char *, uint64_t))v281;
          ((void (*)(char *, uint64_t))v281)(v260, v356);
          uint64_t v282 = swift_release();
          MEMORY[0x270FA5388](v282);
          uint64_t v283 = v367;
          uint64_t v334 = v367;
          char v284 = sub_25B153714((void (*)(uint64_t *__return_ptr, void *))sub_25B184698, (uint64_t)(&v335 - 4), (uint64_t)v384);
          swift_release();
          uint64_t v285 = sub_25B290080();
          uint64_t v286 = *(void *)(v285 - 8);
          uint64_t v287 = v362;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v286 + 16))(v362, v275, v285);
          uint64_t v288 = (uint64_t *)(v283 + *(int *)(v366 + 32));
          uint64_t v289 = *v288;
          unint64_t v290 = v288[1];
          uint64_t v291 = v348;
          uint64_t v292 = (uint64_t *)(v287 + *(int *)(v348 + 20));
          uint64_t *v292 = v289;
          v292[1] = v290;
          *(void *)(v287 + *(int *)(v291 + 24)) = v284;
          *(void *)(v287 + *(int *)(v291 + 28)) = ObjectType;
          uint64_t v293 = (uint64_t)v363;
          sub_25B1806D0(v287, (uint64_t)v363, type metadata accessor for ReplicatorMessage.Handshake.Complete);
          swift_storeEnumTagMultiPayload();
          uint64_t v294 = v293;
          uint64_t v295 = (uint64_t)v358;
          sub_25B1806D0(v294, (uint64_t)v358, type metadata accessor for ReplicatorMessage.Handshake);
          swift_storeEnumTagMultiPayload();
          uint64_t v296 = (uint64_t)v353;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v286 + 56))(v353, 1, 1, v285);
          uint64_t v297 = v336;
          unint64_t v298 = v290;
          uint64_t v299 = v283;
          sub_25B120090(v289, v298);
          uint64_t v300 = v354;
          sub_25B141908(v295, v299, v296, v354);
          uint64_t v301 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v351 + 56);
          sub_25B116DE0(v296, &qword_26B33F200);
          (*v301)(v300, 0, 1, v352);
          sub_25B18095C(v300, v355, (uint64_t (*)(void))type metadata accessor for Message);
          uint64_t v302 = (void *)v297[23];
          id v384 = (id)v297[22];
          long long v377 = v302;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v303 = sub_25B28FEA0();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v303 - 8) + 56))(v346, 1, 1, v303);
          long long v304 = v261[7];
          long long v305 = v261[9];
          long long v406 = v261[8];
          long long v407 = v305;
          long long v306 = v261[9];
          long long v408 = v261[10];
          long long v307 = v261[3];
          long long v308 = v261[5];
          long long v402 = v261[4];
          long long v403 = v308;
          long long v309 = v261[5];
          long long v310 = v261[7];
          long long v404 = v261[6];
          long long v405 = v310;
          long long v311 = v261[1];
          v399[0] = *v261;
          v399[1] = v311;
          long long v312 = v261[3];
          long long v314 = *v261;
          long long v313 = v261[1];
          long long v400 = v261[2];
          long long v401 = v312;
          long long v395 = v304;
          long long v396 = v406;
          long long v315 = v261[10];
          long long v397 = v306;
          long long v398 = v315;
          long long v392 = v402;
          long long v393 = v309;
          long long v394 = v404;
          long long v388 = v314;
          long long v389 = v313;
          long long v390 = v400;
          long long v391 = v307;
          char v387 = 0;
          v386[0] = 0x403E000000000000;
          v386[1] = 0;
          uint64_t v316 = v344;
          sub_25B1806D0(v374, v344, type metadata accessor for ReplicatorMessage.Handshake.Response);
          long long v376 = type metadata accessor for PairingRelationship;
          uint64_t v317 = v347;
          sub_25B1806D0(v299, v347, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          unint64_t v318 = (*(unsigned __int8 *)(v342 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v342 + 80);
          uint64_t v319 = *(unsigned __int8 *)(v338 + 80);
          unint64_t v320 = v297;
          uint64_t v321 = v299;
          unint64_t v322 = (v343 + v319 + v318) & ~v319;
          uint64_t v323 = swift_allocObject();
          *(void *)(v323 + 16) = v320;
          sub_25B18095C(v316, v323 + v318, type metadata accessor for ReplicatorMessage.Handshake.Response);
          sub_25B18095C(v317, v323 + v322, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          swift_retain();
          sub_25B1172F8((uint64_t)v399);
          uint64_t v324 = v346;
          sub_25B1593EC(v355, v346, &v388, &v387, v386, (uint64_t)sub_25B1849B8, v323, ObjectType, (uint64_t)v377);
          swift_release();
          long long v417 = v396;
          long long v418 = v397;
          long long v419 = v398;
          long long v413 = v392;
          long long v414 = v393;
          long long v415 = v394;
          long long v416 = v395;
          long long v409 = v388;
          long long v410 = v389;
          long long v411 = v390;
          long long v412 = v391;
          sub_25B11DEBC((uint64_t)&v409);
          sub_25B116DE0(v324, &qword_26A4D9160);
          uint64_t v325 = v362;
          uint64_t v326 = v341;
          sub_25B1806D0(v362, v341, type metadata accessor for ReplicatorMessage.Handshake.Complete);
          sub_25B1806D0(v321, v317, (uint64_t (*)(void))v376);
          unint64_t v327 = (*(unsigned __int8 *)(v339 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v339 + 80);
          unint64_t v328 = (v340 + v319 + v327) & ~v319;
          uint64_t v329 = swift_allocObject();
          *(void *)(v329 + 16) = v320;
          sub_25B18095C(v326, v329 + v327, type metadata accessor for ReplicatorMessage.Handshake.Complete);
          sub_25B18095C(v317, v329 + v328, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          *(void *)&long long v390 = sub_25B184AA4;
          *((void *)&v390 + 1) = v329;
          *(void *)&long long v388 = MEMORY[0x263EF8330];
          *((void *)&v388 + 1) = 1107296256;
          *(void *)&long long v389 = sub_25B10F584;
          *((void *)&v389 + 1) = &block_descriptor_1480;
          uint64_t v330 = _Block_copy(&v388);
          swift_retain();
          unint64_t v331 = v360;
          sub_25B290340();
          v386[0] = MEMORY[0x263F8EE78];
          unint64_t v332 = v361;
          uint64_t v333 = v357;
          sub_25B290A00();
          MEMORY[0x26115F250](0, v331, v332, v330);
          _Block_release(v330);
          ((void (*)(char *, uint64_t))v379)(v332, v333);
          v378(v331, v356);
          sub_25B180A5C(v355, (uint64_t (*)(void))type metadata accessor for Message);
          sub_25B180A5C((uint64_t)v358, type metadata accessor for ReplicatorMessage);
          sub_25B180A5C((uint64_t)v363, type metadata accessor for ReplicatorMessage.Handshake);
          sub_25B180A5C(v325, type metadata accessor for ReplicatorMessage.Handshake.Complete);
          sub_25B180A5C(v367, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          swift_release();
          return;
        }
        unint64_t v166 = *(void *)(v370 + 8 * v165);
        uint64_t v167 = v161 + 1;
        if (!v166)
        {
          uint64_t v167 = v161 + 2;
          if (v161 + 2 >= v371) {
            goto LABEL_92;
          }
          unint64_t v166 = *(void *)(v370 + 8 * v167);
          if (!v166)
          {
            uint64_t v167 = v161 + 3;
            if (v161 + 3 >= v371) {
              goto LABEL_92;
            }
            unint64_t v166 = *(void *)(v370 + 8 * v167);
            if (!v166)
            {
              uint64_t v167 = v161 + 4;
              if (v161 + 4 >= v371) {
                goto LABEL_92;
              }
              unint64_t v166 = *(void *)(v370 + 8 * v167);
              if (!v166)
              {
                uint64_t v168 = v161 + 5;
                if (v161 + 5 >= v371) {
                  goto LABEL_92;
                }
                unint64_t v166 = *(void *)(v370 + 8 * v168);
                if (!v166)
                {
                  while (1)
                  {
                    uint64_t v167 = v168 + 1;
                    if (__OFADD__(v168, 1)) {
                      goto LABEL_117;
                    }
                    if (v167 >= v371) {
                      goto LABEL_92;
                    }
                    unint64_t v166 = *(void *)(v370 + 8 * v167);
                    ++v168;
                    if (v166) {
                      goto LABEL_78;
                    }
                  }
                }
                uint64_t v167 = v161 + 5;
              }
            }
          }
        }
LABEL_78:
        unint64_t v125 = (v166 - 1) & v166;
        uint64_t v382 = v167;
        unint64_t v164 = __clz(__rbit64(v166)) + (v167 << 6);
      }
      os_log_type_t v169 = v379;
      uint64_t v170 = *(void *)(v380 + 56);
      uint64_t v171 = (uint64_t *)(*(void *)(v380 + 48) + 16 * v164);
      uint64_t v173 = *v171;
      uint64_t v172 = v171[1];
      uint64_t v381 = *(void *)(ObjectType + 72);
      sub_25B1806D0(v170 + v381 * v164, (uint64_t)&v379[*(int *)(v385 + 48)], (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      *os_log_type_t v169 = v173;
      v169[1] = v172;
      sub_25B187574((uint64_t)v169, (uint64_t)v162, &qword_26A4D9A88);
      uint64_t v174 = v162[1];
      *(void *)&long long v409 = *v162;
      *((void *)&v409 + 1) = v174;
      *(void *)&v399[0] = 14906;
      *((void *)&v399[0] + 1) = 0xE200000000000000;
      sub_25B183ADC();
      swift_bridgeObjectRetain();
      uint64_t v175 = (void *)sub_25B290840();
      unint64_t v176 = v175;
      if (v175[2] == 2)
      {
        uint64_t v177 = v175[4];
        uint64_t v178 = v175[5];
        uint64_t v179 = v175[6];
        uint64_t v180 = v175[7];
        swift_bridgeObjectRetain();
        uint64_t v181 = MEMORY[0x26115EF60](v177, v178, v179, v180);
        uint64_t v183 = v182;
        swift_bridgeObjectRelease();
        if (v176[2] < 2uLL)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
          goto LABEL_118;
        }
        id v384 = (id)v125;
        uint64_t v184 = v183;
        uint64_t v185 = v176[8];
        uint64_t v186 = v176[9];
        uint64_t v187 = v162;
        uint64_t v188 = v176[10];
        uint64_t v189 = v176[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        long long v190 = (uint64_t (*)())MEMORY[0x26115EF60](v185, v186, v188, v189);
        uint64_t v192 = v191;
        swift_bridgeObjectRelease();
        uint64_t v193 = *(int *)(v385 + 48);
        uint64_t v194 = v368 + v193;
        sub_25B1806D0((uint64_t)v187 + v193, v368 + v193, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        sub_25B18095C(v194, (uint64_t)v378, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v409 = v127;
        long long v376 = v190;
        long long v377 = v184;
        uint64_t v196 = (uint64_t)v184;
        uint64_t v197 = v192;
        unint64_t v199 = sub_25B18A768(v181, v196, (uint64_t)v190, v192);
        uint64_t v200 = *((void *)v127 + 2);
        BOOL v201 = (v198 & 1) == 0;
        uint64_t v202 = v200 + v201;
        if (__OFADD__(v200, v201)) {
          goto LABEL_112;
        }
        char v203 = v198;
        uint64_t v204 = *((void *)v127 + 3);
        long long v375 = (char *)v181;
        if (v204 >= v202)
        {
          unint64_t v125 = (unint64_t)v384;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_25B1941BC();
          }
        }
        else
        {
          sub_25B18F048(v202, isUniquelyReferenced_nonNull_native);
          unint64_t v205 = sub_25B18A768(v181, (uint64_t)v377, (uint64_t)v376, v197);
          unint64_t v125 = (unint64_t)v384;
          if ((v203 & 1) != (v206 & 1)) {
            goto LABEL_119;
          }
          unint64_t v199 = v205;
        }
        uint64_t v207 = v197;
        unint64_t v127 = (char *)v409;
        if (v203)
        {
          sub_25B187120((uint64_t)v378, *(void *)(v409 + 56) + v199 * v381, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        }
        else
        {
          *(void *)(v409 + 8 * (v199 >> 6) + 64) |= 1 << v199;
          unint64_t v208 = (void *)(*((void *)v127 + 6) + 32 * v199);
          uint64_t v210 = v377;
          char v209 = v378;
          void *v208 = v375;
          v208[1] = v210;
          v208[2] = v376;
          v208[3] = v207;
          sub_25B18095C((uint64_t)v209, *((void *)v127 + 7) + v199 * v381, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
          uint64_t v211 = *((void *)v127 + 2);
          BOOL v156 = __OFADD__(v211, 1);
          uint64_t v212 = v211 + 1;
          if (v156) {
            goto LABEL_116;
          }
          *((void *)v127 + 2) = v212;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v162 = v369;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_25B116DE0((uint64_t)v162, &qword_26A4D9A88);
      uint64_t v161 = v382;
    }
  }
  unsigned int v126 = 0;
  unint64_t v127 = (char *)MEMORY[0x263F8EE80];
  unint64_t v368 = (unint64_t)"Swift/UnsafePointer.swift";
  long long v369 = (void *)0x800000025B29C8A0;
  while (1)
  {
    long long v379 = v127;
    if (v125)
    {
      id v384 = (id)((v125 - 1) & v125);
      long long v378 = v126;
      unint64_t v128 = __clz(__rbit64(v125)) | ((void)v126 << 6);
      goto LABEL_43;
    }
    int64_t v129 = (int64_t)v126 + 1;
    if (__OFADD__(v126, 1)) {
      goto LABEL_115;
    }
    if (v129 >= v371) {
      goto LABEL_92;
    }
    unint64_t v130 = *(void *)(v370 + 8 * v129);
    int64_t v131 = (int64_t)v126 + 1;
    if (!v130)
    {
      int64_t v131 = (int64_t)v126 + 2;
      if ((uint64_t)v126 + 2 >= v371) {
        goto LABEL_92;
      }
      unint64_t v130 = *(void *)(v370 + 8 * v131);
      if (!v130)
      {
        int64_t v131 = (int64_t)v126 + 3;
        if ((uint64_t)v126 + 3 >= v371) {
          goto LABEL_92;
        }
        unint64_t v130 = *(void *)(v370 + 8 * v131);
        if (!v130)
        {
          int64_t v131 = (int64_t)v126 + 4;
          if ((uint64_t)v126 + 4 >= v371) {
            goto LABEL_92;
          }
          unint64_t v130 = *(void *)(v370 + 8 * v131);
          if (!v130) {
            break;
          }
        }
      }
    }
LABEL_42:
    id v384 = (id)((v130 - 1) & v130);
    long long v378 = (void (*)(char *, uint64_t))v131;
    unint64_t v128 = __clz(__rbit64(v130)) + (v131 << 6);
LABEL_43:
    uint64_t v133 = (uint64_t *)(*(void *)(v380 + 48) + 16 * v128);
    uint64_t v135 = *v133;
    uint64_t v134 = v133[1];
    uint64_t v22 = *(void *)(ObjectType + 72);
    uint64_t v136 = v385;
    uint64_t v137 = v375;
    id v15 = type metadata accessor for ZoneVersion;
    sub_25B1806D0(*(void *)(v380 + 56) + v22 * v128, (uint64_t)&v375[*(int *)(v385 + 48)], (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    *uint64_t v137 = v135;
    v137[1] = v134;
    a2 = v381;
    sub_25B187574((uint64_t)v137, v381, &qword_26A4D9A88);
    uint64_t v138 = *(int *)(v136 + 48);
    long long v139 = v376;
    uint64_t v140 = (char *)v376 + v138;
    uint64_t v141 = a2 + v138;
    unint64_t v17 = *(char **)a2;
    a3 = *(void *)(a2 + 8);
    *(void *)long long v376 = *(void *)a2;
    *((void *)v139 + 1) = a3;
    sub_25B1806D0(a2 + v138, (uint64_t)v139 + v138, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B180A5C((uint64_t)v140, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t v142 = v377;
    uint64_t v143 = (uint64_t)v377 + *(int *)(v136 + 48);
    uint64_t v144 = *(void *)(a2 + 8);
    *long long v377 = *(void *)a2;
    v142[1] = v144;
    sub_25B1806D0(v141, v143, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    sub_25B18095C(v143, v382, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    char v145 = v379;
    uint64_t v23 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v409 = v145;
    unint64_t v21 = sub_25B18A768((uint64_t)v17, a3, 0xD000000000000011, (uint64_t)v369);
    uint64_t v147 = *((void *)v145 + 2);
    BOOL v148 = (v146 & 1) == 0;
    uint64_t v149 = v147 + v148;
    if (__OFADD__(v147, v148))
    {
      __break(1u);
      goto LABEL_110;
    }
    char v150 = v146;
    if (*((void *)v145 + 3) >= v149)
    {
      unint64_t v151 = v368;
      if (v23)
      {
        unint64_t v127 = (char *)v409;
        if (v146) {
          goto LABEL_23;
        }
      }
      else
      {
        sub_25B1941BC();
        unint64_t v127 = (char *)v409;
        if (v150) {
          goto LABEL_23;
        }
      }
    }
    else
    {
      sub_25B18F048(v149, v23);
      unint64_t v151 = v368;
      unint64_t v152 = sub_25B18A768((uint64_t)v17, a3, 0xD000000000000011, v368 | 0x8000000000000000);
      if ((v150 & 1) != (v153 & 1)) {
        goto LABEL_119;
      }
      unint64_t v21 = v152;
      unint64_t v127 = (char *)v409;
      if (v150)
      {
LABEL_23:
        sub_25B187120(v382, *((void *)v127 + 7) + v21 * v22, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        goto LABEL_24;
      }
    }
    *(void *)&v127[8 * (v21 >> 6) + 64] |= 1 << v21;
    uint64_t v154 = (void *)(*((void *)v127 + 6) + 32 * v21);
    *uint64_t v154 = v17;
    v154[1] = a3;
    v154[2] = 0xD000000000000011;
    v154[3] = v151 | 0x8000000000000000;
    sub_25B18095C(v382, *((void *)v127 + 7) + v21 * v22, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t v155 = *((void *)v127 + 2);
    BOOL v156 = __OFADD__(v155, 1);
    uint64_t v157 = v155 + 1;
    if (v156) {
      goto LABEL_113;
    }
    *((void *)v127 + 2) = v157;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B116DE0(v381, &qword_26A4D9A88);
    unint64_t v125 = (unint64_t)v384;
    unsigned int v126 = v378;
  }
  uint64_t v132 = (char *)v126 + 5;
  if ((uint64_t)v126 + 5 >= v371) {
    goto LABEL_92;
  }
  unint64_t v130 = *(void *)(v370 + 8 * (void)v132);
  if (v130)
  {
    int64_t v131 = (int64_t)v126 + 5;
    goto LABEL_42;
  }
  while (1)
  {
    int64_t v131 = (int64_t)(v132 + 1);
    if (__OFADD__(v132, 1)) {
      break;
    }
    if (v131 >= v371) {
      goto LABEL_92;
    }
    unint64_t v130 = *(void *)(v370 + 8 * v131);
    ++v132;
    if (v130) {
      goto LABEL_42;
    }
  }
LABEL_118:
  __break(1u);
LABEL_119:
  sub_25B291190();
  __break(1u);
}

uint64_t sub_25B15F934@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v6 = a1[3];
  if (*(void *)(a2 + *(int *)(type metadata accessor for PairingRelationship() + 20) + 32) > 7uLL)
  {
    swift_bridgeObjectRetain();
    sub_25B290650();
    swift_bridgeObjectRetain();
    sub_25B290650();
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = v5;
    a3[1] = v4;
  }
  else if (v7 == 0xD000000000000011 && v6 == 0x800000025B29C8A0 || (uint64_t result = sub_25B290FB0(), (result & 1) != 0))
  {
    *a3 = v5;
    a3[1] = v4;
    return swift_bridgeObjectRetain();
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  return result;
}

uint64_t sub_25B15FA4C(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v24 = a2;
  uint64_t v9 = type metadata accessor for PairingRelationship();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  dispatch_queue_t v25 = *(dispatch_queue_t *)(a3 + 232);
  sub_25B1806D0(a4, (uint64_t)v16, type metadata accessor for ReplicatorMessage.Handshake.Response);
  sub_25B1806D0(a5, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v15 + *(unsigned __int8 *)(v10 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  LOBYTE(v11) = v24 & 1;
  *(unsigned char *)(v19 + 24) = v24 & 1;
  *(void *)(v19 + 32) = a3;
  sub_25B18095C((uint64_t)v16, v19 + v17, type metadata accessor for ReplicatorMessage.Handshake.Response);
  sub_25B18095C((uint64_t)v12, v19 + v18, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_25B184EA8;
  *(void *)(v20 + 24) = v19;
  aBlock[4] = sub_25B117398;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10D184;
  aBlock[3] = &block_descriptor_1513;
  unint64_t v21 = _Block_copy(aBlock);
  sub_25B116CFC(a1, v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v25, v21);
  _Block_release(v21);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a3) {
    __break(1u);
  }
  return result;
}

void sub_25B15FD64(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    v43[0] = a1;
    id v9 = a1;
    id v10 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
    if (swift_dynamicCast() && v46 == 2)
    {
      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_25B290190();
      __swift_project_value_buffer(v11, (uint64_t)qword_26A4EB150);
      sub_25B116CFC(a1, 1);
      sub_25B116CFC(a1, 1);
      swift_retain();
      uint64_t v12 = sub_25B290160();
      os_log_type_t v13 = sub_25B2908A0();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        uint64_t v41 = v40;
        *(_DWORD *)uint64_t v14 = 136446466;
        uint64_t v15 = a3[66];
        unint64_t v16 = a3[67];
        swift_bridgeObjectRetain();
        sub_25B288E98(v15, v16, &v41);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2082;
        id v17 = a1;
        uint64_t v18 = sub_25B290600();
        sub_25B288E98(v18, v19, &v41);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
        _os_log_impl(&dword_25B107000, v12, v13, "(%{public}s) Handshake request blocked by allow list: %{public}s.", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261160890](v40, -1, -1);
        MEMORY[0x261160890](v14, -1, -1);
      }
      else
      {
        swift_release();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
      }

      uint64_t v39 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
      sub_25B15768C(*(void *)(a4 + *(int *)(v39 + 24)), *(void *)(a4 + *(int *)(v39 + 24) + 8));
      sub_25B116D08(a1, 1);
    }
    else
    {

      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_25B290190();
      __swift_project_value_buffer(v20, (uint64_t)qword_26A4EB150);
      sub_25B116CFC(a1, 1);
      sub_25B116CFC(a1, 1);
      swift_retain();
      unint64_t v21 = sub_25B290160();
      os_log_type_t v22 = sub_25B290880();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        int v24 = (void *)swift_slowAlloc();
        v43[0] = v24;
        *(_DWORD *)uint64_t v23 = 136446466;
        uint64_t v25 = a3[66];
        unint64_t v26 = a3[67];
        swift_bridgeObjectRetain();
        sub_25B288E98(v25, v26, (uint64_t *)v43);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2082;
        id v27 = a1;
        uint64_t v28 = sub_25B290600();
        uint64_t v41 = sub_25B288E98(v28, v29, (uint64_t *)v43);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
        _os_log_impl(&dword_25B107000, v21, v22, "(%{public}s) Error sending handshake complete: %{public}s", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261160890](v24, -1, -1);
        MEMORY[0x261160890](v23, -1, -1);
      }
      else
      {
        swift_release();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
      }

      uint64_t v30 = a3 + 48;
      uint64_t v32 = a3[51];
      uint64_t v31 = a3[52];
      __swift_project_boxed_opaque_existential_1(v30, v32);
      uint64_t v33 = a5 + *(int *)(type metadata accessor for PairingRelationship() + 20);
      uint64_t v34 = *(void **)(v33 + 8);
      char v35 = *(unsigned char *)(v33 + 48);
      uint64_t v36 = *(void **)(v33 + 160);
      uint64_t v37 = *(void **)(v33 + 168);
      v43[0] = *(id *)v33;
      v43[1] = v34;
      v43[2] = v36;
      v43[3] = v37;
      char v44 = v35;
      long long v45 = *(_OWORD *)(v33 + 32);
      uint64_t v41 = 0;
      char v42 = 2;
      uint64_t v38 = *(void (**)(id *, uint64_t *, uint64_t, uint64_t))(v31 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v43, &v41, v32, v31);
      sub_25B116D08(a1, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_25B1602E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ReplicatorMessage.Handshake.Complete(0) + 20));
  unint64_t v6 = v4[1];
  v20[0] = *v4;
  uint64_t v5 = v20[0];
  v20[1] = v6;
  uint64_t v7 = (_OWORD *)(a3 + *(int *)(type metadata accessor for PairingRelationship() + 20));
  long long v8 = v7[7];
  long long v9 = v7[9];
  long long v28 = v7[8];
  long long v29 = v9;
  long long v10 = v7[9];
  long long v30 = v7[10];
  long long v11 = v7[3];
  long long v12 = v7[5];
  long long v24 = v7[4];
  long long v25 = v12;
  long long v13 = v7[5];
  long long v14 = v7[7];
  long long v26 = v7[6];
  long long v27 = v14;
  long long v15 = v7[1];
  long long v16 = v7[3];
  long long v22 = v7[2];
  long long v23 = v16;
  long long v17 = v7[1];
  v21[0] = *v7;
  v21[1] = v17;
  v19[8] = v28;
  v19[9] = v10;
  v19[10] = v7[10];
  v19[4] = v24;
  v19[5] = v13;
  v19[6] = v26;
  v19[7] = v8;
  v19[0] = v21[0];
  v19[1] = v15;
  v19[2] = v22;
  uint64_t v19[3] = v11;
  sub_25B120090(v20[0], v6);
  sub_25B1172F8((uint64_t)v21);
  sub_25B154B6C(v20, (uint64_t)v19);
  sub_25B11DEBC((uint64_t)v21);
  return sub_25B1200A4(v5, v6);
}

void sub_25B1603E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v99 = a4;
  uint64_t ObjectType = a1;
  uint64_t v85 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  uint64_t v87 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v86 = v6;
  uint64_t v88 = (uint64_t)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v89 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v9 - 8);
  long long v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB070);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v100 = (uint64_t)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for Message();
  uint64_t v97 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v90 = (uint64_t)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for ReplicatorMessage(0);
  MEMORY[0x270FA5388](v96);
  long long v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for ReplicatorMessage.Handshake(0);
  MEMORY[0x270FA5388](v95);
  uint64_t v18 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  MEMORY[0x270FA5388](v94);
  long long v104 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_25B290190();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_26A4EB150);
  swift_retain();
  uint64_t v102 = v21;
  long long v22 = sub_25B290160();
  os_log_type_t v23 = sub_25B2908A0();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v101 = a3;
  long long v98 = v11;
  if (v24)
  {
    long long v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    unint64_t v92 = v16;
    uint64_t v27 = v26;
    *(void *)&v129[0] = v26;
    *(_DWORD *)long long v25 = 136446210;
    uint64_t v28 = a2[66];
    uint64_t v91 = v18;
    unint64_t v29 = a2[67];
    swift_bridgeObjectRetain();
    *(void *)&v128[0] = sub_25B288E98(v28, v29, (uint64_t *)v129);
    sub_25B2909C0();
    swift_release();
    uint64_t v18 = v91;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v22, v23, "(%{public}s) Sending disabled handshake response", v25, 0xCu);
    swift_arrayDestroy();
    uint64_t v30 = v27;
    long long v16 = v92;
    MEMORY[0x261160890](v30, -1, -1);
    MEMORY[0x261160890](v25, -1, -1);

    uint64_t v31 = (void *)ObjectType;
    uint64_t v32 = (uint64_t)v104;
    if (ObjectType) {
      goto LABEL_5;
    }
LABEL_8:
    sub_25B133AA0(v129);
    uint64_t v47 = MEMORY[0x263F8EE78];
    unint64_t v48 = sub_25B20DC40(MEMORY[0x263F8EE78]);
    uint64_t v49 = sub_25B290080();
    uint64_t v50 = *(void *)(v49 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v32, v101, v49);
    sub_25B1172F8((uint64_t)v129);
    unint64_t v51 = sub_25B20D224(v47);
    uint64_t v52 = (int *)v94;
    os_log_type_t v53 = (void *)(v32 + *(int *)(v94 + 20));
    *os_log_type_t v53 = 0;
    v53[1] = 0;
    BOOL v54 = (_OWORD *)(v32 + v52[6]);
    long long v55 = v129[9];
    v54[8] = v129[8];
    v54[9] = v55;
    v54[10] = v129[10];
    long long v56 = v129[5];
    v54[4] = v129[4];
    v54[5] = v56;
    long long v57 = v129[7];
    v54[6] = v129[6];
    v54[7] = v57;
    long long v58 = v129[1];
    *BOOL v54 = v129[0];
    v54[1] = v58;
    long long v59 = v129[3];
    v54[2] = v129[2];
    v54[3] = v59;
    *(void *)(v32 + v52[7]) = v51;
    *(void *)(v32 + v52[8]) = v48;
    sub_25B1806D0(v32, (uint64_t)v18, type metadata accessor for ReplicatorMessage.Handshake.Response);
    swift_storeEnumTagMultiPayload();
    sub_25B1806D0((uint64_t)v18, (uint64_t)v16, type metadata accessor for ReplicatorMessage.Handshake);
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = (uint64_t)v98;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v98, 1, 1, v49);
    uint64_t v61 = v100;
    sub_25B160F94((uint64_t)v16, v99, v60, v100);
    id v62 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v97 + 56);
    sub_25B116DE0(v60, &qword_26B33F200);
    (*v62)(v61, 0, 1, v93);
    sub_25B18095C(v61, v90, (uint64_t (*)(void))type metadata accessor for Message);
    uint64_t v63 = a2[23];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v64 = sub_25B28FEA0();
    uint64_t v65 = (uint64_t)v89;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v89, 1, 1, v64);
    uint64_t v66 = (long long *)(v101 + *(int *)(v85 + 24));
    long long v67 = v66[8];
    long long v68 = v66[6];
    long long v124 = v66[7];
    long long v125 = v67;
    long long v69 = v66[8];
    long long v70 = v66[10];
    long long v126 = v66[9];
    long long v127 = v70;
    long long v71 = v66[4];
    long long v72 = v66[2];
    long long v120 = v66[3];
    long long v121 = v71;
    long long v73 = v66[4];
    long long v74 = v66[6];
    long long v122 = v66[5];
    long long v123 = v74;
    long long v75 = *v66;
    long long v76 = v66[2];
    long long v118 = v66[1];
    long long v119 = v76;
    long long v77 = *v66;
    long long v114 = v69;
    long long v115 = v126;
    long long v116 = v66[10];
    long long v117 = v77;
    long long v110 = v73;
    long long v111 = v122;
    long long v112 = v68;
    long long v113 = v124;
    long long v106 = v75;
    long long v107 = v118;
    long long v108 = v72;
    long long v109 = v120;
    char v105 = 0;
    uint64_t v78 = v88;
    sub_25B1806D0(v101, v88, type metadata accessor for ReplicatorMessage.Handshake.Request);
    uint64_t v79 = *(unsigned __int8 *)(v87 + 80);
    unint64_t v92 = v16;
    uint64_t v80 = (v79 + 24) & ~v79;
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = a2;
    sub_25B18095C(v78, v81 + v80, type metadata accessor for ReplicatorMessage.Handshake.Request);
    uint64_t v91 = v18;
    uint64_t v82 = *(void (**)(uint64_t, uint64_t, long long *, char *, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t))(v63 + 40);
    swift_retain();
    sub_25B1172F8((uint64_t)&v117);
    uint64_t v83 = v90;
    v82(v90, v65, &v106, &v105, sub_25B180BF8, v81, ObjectType, v63);
    swift_release();
    sub_25B11DEBC((uint64_t)v129);
    v128[8] = v114;
    v128[9] = v115;
    v128[10] = v116;
    v128[4] = v110;
    v128[5] = v111;
    v128[6] = v112;
    v128[7] = v113;
    v128[0] = v106;
    v128[1] = v107;
    v128[2] = v108;
    v128[3] = v109;
    sub_25B11DEBC((uint64_t)v128);
    sub_25B116DE0(v65, &qword_26A4D9160);
    sub_25B180A5C(v83, (uint64_t (*)(void))type metadata accessor for Message);
    sub_25B180A5C((uint64_t)v92, type metadata accessor for ReplicatorMessage);
    sub_25B180A5C((uint64_t)v91, type metadata accessor for ReplicatorMessage.Handshake);
    sub_25B180A5C(v32, type metadata accessor for ReplicatorMessage.Handshake.Response);
    return;
  }

  swift_release();
  uint64_t v31 = (void *)ObjectType;
  uint64_t v32 = (uint64_t)v104;
  if (!ObjectType) {
    goto LABEL_8;
  }
LABEL_5:
  id v33 = v31;
  swift_retain();
  id v34 = v31;
  swift_retain();
  id v35 = v31;
  uint64_t v36 = sub_25B290160();
  os_log_type_t v37 = sub_25B2908A0();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v39 = a2;
    uint64_t v40 = (void *)swift_slowAlloc();
    long long v104 = (char *)swift_slowAlloc();
    *(void *)&v129[0] = v104;
    *(_DWORD *)uint64_t v38 = 136446466;
    uint64_t v41 = v31;
    uint64_t v42 = v39[66];
    unint64_t v43 = v39[67];
    swift_bridgeObjectRetain();
    *(void *)&v128[0] = sub_25B288E98(v42, v43, (uint64_t *)v129);
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2114;
    id v44 = v31;
    uint64_t v45 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)&v128[0] = v45;
    sub_25B2909C0();
    *uint64_t v40 = v45;

    _os_log_impl(&dword_25B107000, v36, v37, "(%{public}s) Abandoning disabled handshake response because prerequisites are not met: %{public}@", (uint8_t *)v38, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
    swift_arrayDestroy();
    MEMORY[0x261160890](v40, -1, -1);
    char v46 = v104;
    swift_arrayDestroy();
    MEMORY[0x261160890](v46, -1, -1);
    MEMORY[0x261160890](v38, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_25B160F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v7 = v4;
  uint64_t v64 = a3;
  uint64_t v66 = a4;
  uint64_t v10 = (int *)type metadata accessor for Message();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25B290080();
  uint64_t v65 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v67[3] = type metadata accessor for ReplicatorMessage(0);
  uint64_t v67[4] = sub_25B1875E0(&qword_26A4DA6C8, (void (*)(uint64_t))type metadata accessor for ReplicatorMessage);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v67);
  sub_25B1806D0(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for ReplicatorMessage);
  type metadata accessor for PropertyListTypeEncoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = a2;
  *(unsigned char *)(inited + 24) = 0;
  uint64_t v21 = (void *)sub_25B281964(v67);
  if (v5)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_25B290190();
    __swift_project_value_buffer(v22, (uint64_t)qword_26A4EB150);
    swift_retain();
    id v23 = v5;
    swift_retain();
    id v24 = v5;
    long long v25 = sub_25B290160();
    os_log_type_t v26 = sub_25B290880();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v67[0] = v28;
      *(_DWORD *)uint64_t v27 = 136446466;
      uint64_t v29 = v7[66];
      unint64_t v30 = v7[67];
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_25B288E98(v29, v30, v67);
      sub_25B2909C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      uint64_t v68 = (uint64_t)v6;
      id v31 = v6;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
      uint64_t v32 = sub_25B290600();
      uint64_t v68 = sub_25B288E98(v32, v33, v67);
      sub_25B2909C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25B107000, v25, v26, "(%{public}s) Failed to encode message: %{public}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v28, -1, -1);
      MEMORY[0x261160890](v27, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    return swift_willThrow();
  }
  else
  {
    id v62 = v12;
    uint64_t v63 = v18;
    uint64_t v35 = sub_25B2851A4(v21);
    unint64_t v37 = v36;
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    sub_25B187628(v64, (uint64_t)v63, &qword_26B33F200);
    unint64_t v38 = v7[32];
    uint64_t v60 = a2;
    uint64_t v61 = v35;
    if (v38)
    {
      uint64_t v64 = v7[31];
      sub_25B114300(v35, v37);
      unint64_t v59 = v38;
      uint64_t v39 = v15;
      unint64_t v40 = v37;
      uint64_t v42 = (uint64_t)v62;
      uint64_t v41 = (uint64_t)v63;
    }
    else
    {
      uint64_t v55 = 0;
      uint64_t v43 = v7[22];
      uint64_t v44 = v7[23];
      uint64_t v64 = v43;
      uint64_t v57 = v44;
      uint64_t ObjectType = swift_getObjectType();
      long long v58 = *(uint64_t (**)(unint64_t, uint64_t))(v44 + 8);
      unint64_t v59 = ObjectType;
      unint64_t v56 = v37;
      sub_25B114300(v35, v37);
      uint64_t v46 = v58(v59, v57);
      uint64_t v39 = v15;
      uint64_t v42 = (uint64_t)v62;
      if (v47)
      {
        uint64_t v41 = (uint64_t)v63;
        unint64_t v40 = v56;
        uint64_t v64 = v46;
        unint64_t v59 = v47;
      }
      else
      {
        unint64_t v59 = 0x800000025B29C2A0;
        uint64_t v64 = 0xD000000000000016;
        uint64_t v41 = (uint64_t)v63;
        unint64_t v40 = v56;
      }
    }
    swift_bridgeObjectRetain();
    sub_25B290070();
    uint64_t v48 = v42 + v10[5];
    uint64_t v49 = v65;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v48, 1, 1, v13);
    (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v42, v39, v13);
    sub_25B185B64(v41, v48, &qword_26B33F200);
    uint64_t v50 = (void *)(v42 + v10[6]);
    *uint64_t v50 = 0x7065526574617453;
    v50[1] = 0xEF726F746163696CLL;
    unint64_t v51 = (void *)(v42 + v10[7]);
    unint64_t v52 = v59;
    *unint64_t v51 = v64;
    v51[1] = v52;
    uint64_t v53 = v61;
    *(void *)(v42 + v10[8]) = v60;
    BOOL v54 = (uint64_t *)(v42 + v10[9]);
    *BOOL v54 = v53;
    v54[1] = v40;
    sub_25B18095C(v42, v66, (uint64_t (*)(void))type metadata accessor for Message);
    return sub_25B10DFF0(v53, v40);
  }
}

uint64_t sub_25B1615AC(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = *(NSObject **)(a3 + 232);
  sub_25B1806D0(a4, (uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Request);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(unsigned char *)(v13 + 24) = a2 & 1;
  *(void *)(v13 + 32) = a3;
  sub_25B18095C((uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for ReplicatorMessage.Handshake.Request);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_25B180C3C;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_25B117398;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10D184;
  aBlock[3] = &block_descriptor_360;
  uint64_t v15 = _Block_copy(aBlock);
  sub_25B116CFC(a1, a2 & 1);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v15);
  _Block_release(v15);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a3) {
    __break(1u);
  }
  return result;
}

void sub_25B1617F0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v90 = a4;
  uint64_t ObjectType = a1;
  uint64_t v80 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  uint64_t v83 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v82 = v6;
  uint64_t v84 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v96 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB070);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v91 = (uint64_t)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for Message();
  uint64_t v89 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v81 = (uint64_t)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for ReplicatorMessage(0);
  MEMORY[0x270FA5388](v88);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for ReplicatorMessage.Handshake(0);
  MEMORY[0x270FA5388](v87);
  uint64_t v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
  MEMORY[0x270FA5388](v86);
  uint64_t v92 = (uint64_t)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_25B290190();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_26A4EB150);
  swift_retain();
  uint64_t v94 = v21;
  uint64_t v22 = sub_25B290160();
  os_log_type_t v23 = sub_25B2908A0();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v93 = v16;
  uint64_t v95 = v18;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v78 = a3;
    os_log_type_t v26 = (uint8_t *)v25;
    uint64_t v27 = swift_slowAlloc();
    *(void *)&v121[0] = v27;
    *(_DWORD *)os_log_type_t v26 = 136446210;
    uint64_t v28 = a2[66];
    uint64_t v79 = v9;
    unint64_t v29 = a2[67];
    swift_bridgeObjectRetain();
    *(void *)&long long v110 = sub_25B288E98(v28, v29, (uint64_t *)v121);
    sub_25B2909C0();
    swift_release();
    uint64_t v9 = v79;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v22, v23, "(%{public}s) Sending disabled handshake complete", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v27, -1, -1);
    unint64_t v30 = v26;
    a3 = v78;
    MEMORY[0x261160890](v30, -1, -1);

    uint64_t v32 = (uint64_t)v96;
    id v31 = (void *)ObjectType;
    if (ObjectType) {
      goto LABEL_5;
    }
LABEL_8:
    uint64_t v45 = MEMORY[0x263F8EE78];
    unint64_t v46 = sub_25B20DC40(MEMORY[0x263F8EE78]);
    uint64_t v47 = sub_25B290080();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = v92;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v92, a3, v47);
    uint64_t v50 = v86;
    unint64_t v51 = (void *)(v49 + *(int *)(v86 + 20));
    *unint64_t v51 = 0;
    v51[1] = 0;
    *(void *)(v49 + *(int *)(v50 + 24)) = v45;
    *(void *)(v49 + *(int *)(v50 + 28)) = v46;
    uint64_t v52 = (uint64_t)v95;
    sub_25B1806D0(v49, (uint64_t)v95, type metadata accessor for ReplicatorMessage.Handshake.Complete);
    swift_storeEnumTagMultiPayload();
    uint64_t v53 = (uint64_t)v93;
    sub_25B1806D0(v52, (uint64_t)v93, type metadata accessor for ReplicatorMessage.Handshake);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v32, 1, 1, v47);
    uint64_t v54 = v91;
    sub_25B160F94(v53, v90, v32, v91);
    uint64_t v55 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56);
    sub_25B116DE0(v32, &qword_26B33F200);
    (*v55)(v54, 0, 1, v85);
    uint64_t v56 = v54;
    uint64_t v57 = v81;
    sub_25B18095C(v56, v81, (uint64_t (*)(void))type metadata accessor for Message);
    uint64_t v58 = a2[23];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v59 = sub_25B28FEA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v9, 1, 1, v59);
    uint64_t v60 = (long long *)(a3 + *(int *)(v80 + 24));
    long long v61 = v60[8];
    long long v62 = v60[6];
    long long v117 = v60[7];
    long long v118 = v61;
    long long v63 = v60[8];
    long long v64 = v60[10];
    long long v119 = v60[9];
    long long v120 = v64;
    long long v65 = v60[4];
    long long v66 = v60[2];
    long long v113 = v60[3];
    long long v114 = v65;
    long long v67 = v60[4];
    long long v68 = v60[6];
    long long v115 = v60[5];
    long long v116 = v68;
    long long v69 = *v60;
    long long v70 = v60[2];
    long long v111 = v60[1];
    long long v112 = v70;
    long long v71 = *v60;
    long long v107 = v63;
    long long v108 = v119;
    long long v109 = v60[10];
    long long v110 = v71;
    long long v103 = v67;
    long long v104 = v115;
    long long v105 = v62;
    long long v106 = v117;
    long long v99 = v69;
    long long v100 = v111;
    long long v101 = v66;
    long long v102 = v113;
    char v98 = 0;
    uint64_t v72 = a3;
    uint64_t v73 = v84;
    sub_25B1806D0(v72, v84, type metadata accessor for ReplicatorMessage.Handshake.Response);
    unint64_t v74 = (*(unsigned __int8 *)(v83 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = a2;
    sub_25B18095C(v73, v75 + v74, type metadata accessor for ReplicatorMessage.Handshake.Response);
    long long v76 = *(void (**)(uint64_t, char *, long long *, char *, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t))(v58 + 40);
    swift_retain();
    sub_25B1172F8((uint64_t)&v110);
    v76(v57, v9, &v99, &v98, sub_25B1840CC, v75, ObjectType, v58);
    swift_release();
    v121[8] = v107;
    v121[9] = v108;
    v121[10] = v109;
    v121[4] = v103;
    v121[5] = v104;
    v121[6] = v105;
    v121[7] = v106;
    v121[0] = v99;
    v121[1] = v100;
    v121[2] = v101;
    v121[3] = v102;
    sub_25B11DEBC((uint64_t)v121);
    sub_25B116DE0((uint64_t)v9, &qword_26A4D9160);
    sub_25B180A5C(v57, (uint64_t (*)(void))type metadata accessor for Message);
    sub_25B180A5C((uint64_t)v93, type metadata accessor for ReplicatorMessage);
    sub_25B180A5C((uint64_t)v95, type metadata accessor for ReplicatorMessage.Handshake);
    sub_25B180A5C(v92, type metadata accessor for ReplicatorMessage.Handshake.Complete);
    return;
  }

  swift_release();
  uint64_t v32 = (uint64_t)v96;
  id v31 = (void *)ObjectType;
  if (!ObjectType) {
    goto LABEL_8;
  }
LABEL_5:
  id v33 = v31;
  swift_retain();
  id v34 = v31;
  swift_retain();
  id v35 = v31;
  unint64_t v36 = sub_25B290160();
  os_log_type_t v37 = sub_25B2908A0();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v39 = (void *)swift_slowAlloc();
    uint64_t v96 = (char *)swift_slowAlloc();
    *(void *)&v121[0] = v96;
    *(_DWORD *)uint64_t v38 = 136446466;
    uint64_t v40 = a2[66];
    unint64_t v41 = a2[67];
    swift_bridgeObjectRetain();
    *(void *)&long long v110 = sub_25B288E98(v40, v41, (uint64_t *)v121);
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2114;
    id v42 = v31;
    uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)&long long v110 = v43;
    sub_25B2909C0();
    *uint64_t v39 = v43;

    _os_log_impl(&dword_25B107000, v36, v37, "(%{public}s) Abandoning disabled handshake complete because prerequisites are not met: %{public}@", (uint8_t *)v38, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
    swift_arrayDestroy();
    MEMORY[0x261160890](v39, -1, -1);
    uint64_t v44 = v96;
    swift_arrayDestroy();
    MEMORY[0x261160890](v44, -1, -1);
    MEMORY[0x261160890](v38, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_25B162340(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = *(NSObject **)(a3 + 232);
  sub_25B1806D0(a4, (uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Response);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(unsigned char *)(v13 + 24) = a2 & 1;
  *(void *)(v13 + 32) = a3;
  sub_25B18095C((uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for ReplicatorMessage.Handshake.Response);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_25B184320;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_25B117398;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10D184;
  aBlock[3] = &block_descriptor_1461;
  uint64_t v15 = _Block_copy(aBlock);
  sub_25B116CFC(a1, a2 & 1);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v15);
  _Block_release(v15);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a3) {
    __break(1u);
  }
  return result;
}

void sub_25B162584(void *a1, char a2, void *a3, uint64_t a4, const char *a5, uint64_t (*a6)(void))
{
  if (a2)
  {
    v46[0] = a1;
    id v11 = a1;
    id v12 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
    if (swift_dynamicCast() && v49 == 2)
    {
      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_25B290190();
      __swift_project_value_buffer(v13, (uint64_t)qword_26A4EB150);
      sub_25B116CFC(a1, 1);
      sub_25B116CFC(a1, 1);
      swift_retain();
      uint64_t v14 = sub_25B290160();
      os_log_type_t v15 = sub_25B2908A0();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        uint64_t v44 = v17;
        *(_DWORD *)uint64_t v16 = 136446466;
        uint64_t v18 = a3[66];
        unint64_t v19 = a3[67];
        swift_bridgeObjectRetain();
        sub_25B288E98(v18, v19, &v44);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 2082;
        id v20 = a1;
        uint64_t v21 = sub_25B290600();
        sub_25B288E98(v21, v22, &v44);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
        _os_log_impl(&dword_25B107000, v14, v15, "(%{public}s) Handshake request blocked by allow list: %{public}s.", (uint8_t *)v16, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261160890](v17, -1, -1);
        MEMORY[0x261160890](v16, -1, -1);

        sub_25B116D08(a1, 1);
      }
      else
      {
        sub_25B116D08(a1, 1);
        swift_release();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
      }
    }
    else
    {

      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_25B290190();
      __swift_project_value_buffer(v23, (uint64_t)qword_26A4EB150);
      sub_25B116CFC(a1, 1);
      sub_25B116CFC(a1, 1);
      swift_retain();
      BOOL v24 = sub_25B290160();
      os_log_type_t v25 = sub_25B290880();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v27 = (void *)swift_slowAlloc();
        v46[0] = v27;
        *(_DWORD *)uint64_t v26 = 136446466;
        id v42 = a6;
        uint64_t v43 = a4;
        uint64_t v28 = a3[66];
        unint64_t v29 = a3[67];
        swift_bridgeObjectRetain();
        sub_25B288E98(v28, v29, (uint64_t *)v46);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2082;
        id v30 = a1;
        uint64_t v31 = sub_25B290600();
        uint64_t v44 = sub_25B288E98(v31, v32, (uint64_t *)v46);
        a6 = v42;
        sub_25B2909C0();
        a4 = v43;
        swift_bridgeObjectRelease();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
        _os_log_impl(&dword_25B107000, v24, v25, a5, (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261160890](v27, -1, -1);
        MEMORY[0x261160890](v26, -1, -1);
      }
      else
      {
        swift_release();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
      }

      id v33 = a3 + 48;
      uint64_t v35 = a3[51];
      uint64_t v34 = a3[52];
      __swift_project_boxed_opaque_existential_1(v33, v35);
      uint64_t v36 = a4 + *(int *)(a6(0) + 24);
      os_log_type_t v37 = *(void **)(v36 + 8);
      char v38 = *(unsigned char *)(v36 + 48);
      uint64_t v39 = *(void **)(v36 + 160);
      uint64_t v40 = *(void **)(v36 + 168);
      v46[0] = *(id *)v36;
      v46[1] = v37;
      v46[2] = v39;
      v46[3] = v40;
      char v47 = v38;
      long long v48 = *(_OWORD *)(v36 + 32);
      uint64_t v44 = 0;
      char v45 = 2;
      unint64_t v41 = *(void (**)(id *, uint64_t *, uint64_t, uint64_t))(v34 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v41(v46, &v44, v35, v34);
      sub_25B116D08(a1, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_25B162B04(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB280);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  unint64_t v41 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v37 - v11;
  uint64_t v13 = sub_25B290410();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = (void *)v2[29];
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8F0E0], v13);
  id v18 = v17;
  LOBYTE(v17) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    swift_beginAccess();
    uint64_t v20 = v2[71];
    if (!*(void *)(v20 + 16))
    {
      uint64_t v31 = type metadata accessor for Replicator.Session(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v12, 1, 1, v31);
      return sub_25B116DE0((uint64_t)v12, &qword_26A4DB280);
    }
    uint64_t v39 = v2 + 71;
    uint64_t v40 = v5;
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_25B18A93C(a1);
    if (v22)
    {
      unint64_t v23 = v21;
      BOOL v24 = v7;
      uint64_t v25 = *(void *)(v20 + 56);
      uint64_t v26 = type metadata accessor for Replicator.Session(0);
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v38 = v4;
      uint64_t v28 = a1;
      uint64_t v29 = v27;
      uint64_t v30 = v25 + *(void *)(v27 + 72) * v23;
      uint64_t v7 = v24;
      sub_25B1806D0(v30, (uint64_t)v12, type metadata accessor for Replicator.Session);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v12, 0, 1, v26);
      a1 = v28;
      uint64_t v4 = v38;
    }
    else
    {
      uint64_t v26 = type metadata accessor for Replicator.Session(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 1, 1, v26);
    }
    uint64_t v32 = v40;
    swift_bridgeObjectRelease();
    type metadata accessor for Replicator.Session(0);
    uint64_t v33 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v12, 1, v26) == 1) {
      return sub_25B116DE0((uint64_t)v12, &qword_26A4DB280);
    }
    sub_25B116DE0((uint64_t)v12, &qword_26A4DB280);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v7, a1, v4);
    uint64_t v34 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v41, 1, 1, v26);
    swift_beginAccess();
    sub_25B20E76C(v34, (uint64_t)v7);
    swift_endAccess();
    uint64_t v35 = swift_beginAccess();
    uint64_t v36 = v2[70];
    MEMORY[0x270FA5388](v35);
    *(&v37 - 2) = a1;
    swift_bridgeObjectRetain();
    v2[70] = sub_25B20FFA0((uint64_t (*)(char *))sub_25B180E6C, (uint64_t)(&v37 - 4), v36);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_25B16300C(uint64_t a1)
{
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Replicator.SyncItem(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + *(int *)(v6 + 20), v2);
  sub_25B1875E0((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
  char v7 = sub_25B290580();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (v7 & 1) == 0;
}

void sub_25B163160(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v350 = (char *)&v321 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB070);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v351 = (uint64_t)&v321 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v347 = type metadata accessor for Message();
  uint64_t v349 = *(void *)(v347 - 8);
  MEMORY[0x270FA5388](v347);
  uint64_t v343 = (uint64_t)&v321 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v348 = type metadata accessor for ReplicatorMessage(0);
  MEMORY[0x270FA5388](v348);
  uint64_t v354 = (uint64_t)&v321 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v353 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
  uint64_t v8 = MEMORY[0x270FA5388](v353);
  uint64_t v335 = (uint64_t)&v321 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v345 = (uint64_t)&v321 - v10;
  uint64_t v11 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v344 = (uint64_t)&v321 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D93A8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v327 = (uint64_t)&v321 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for RecordMetadata();
  uint64_t v328 = *(void *)(v15 - 8);
  uint64_t v329 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v326 = (uint64_t *)((char *)&v321 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA708);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v338 = (char *)&v321 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v340 = type metadata accessor for PrioritizedRecordValue();
  uint64_t v337 = *(void *)(v340 - 8);
  MEMORY[0x270FA5388](v340);
  uint64_t v336 = (uint64_t *)((char *)&v321 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for Record.ID(0);
  uint64_t v334 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v339 = (uint64_t)&v321 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  BOOL v24 = (char *)&v321 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v342 = (uint64_t)&v321 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v356 = (uint64_t)&v321 - v28;
  uint64_t v346 = type metadata accessor for ReplicatorMessage.Sync(0);
  MEMORY[0x270FA5388](v346);
  uint64_t v357 = (uint64_t)&v321 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_25B290410();
  os_log_t v366 = *(os_log_t *)(v30 - 8);
  uint64_t v367 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v365 = (uint64_t *)((char *)&v321 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v363 = (uint64_t)&v321 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for PairingRelationship();
  uint64_t v368 = *(void *)(v34 - 8);
  long long v369 = (void *)v34;
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v332 = v36;
  uint64_t v333 = (uint64_t)&v321 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v321 - v37;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB280);
  MEMORY[0x270FA5388](v39 - 8);
  os_log_t v373 = (os_log_t)((char *)&v321 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = type metadata accessor for Replicator.Session(0);
  uint64_t v374 = *(void *)(v41 - 8);
  long long v375 = (void *)v41;
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  uint64_t v330 = v43;
  uint64_t v331 = (uint64_t)&v321 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  char v45 = (char *)&v321 - v44;
  uint64_t v372 = type metadata accessor for Replicator.SyncItem(0);
  uint64_t v46 = *(void *)(v372 - 8);
  uint64_t v47 = MEMORY[0x270FA5388](v372);
  uint64_t v358 = (uint64_t)&v321 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v355 = (uint64_t)&v321 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v352 = (uint64_t)&v321 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v341 = (uint64_t)&v321 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v325 = (uint64_t)&v321 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v359 = (uint64_t)&v321 - v58;
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v360 = (uint64_t)&v321 - v60;
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  uint64_t v364 = (uint64_t)&v321 - v62;
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  long long v65 = (char *)&v321 - v64;
  MEMORY[0x270FA5388](v63);
  long long v67 = (uint64_t *)((char *)&v321 - v66);
  long long v68 = a1 + 70;
  swift_beginAccess();
  if (*(void *)(a1[70] + 16))
  {
    swift_beginAccess();
    uint64_t v69 = *v68;
    if (*(void *)(*v68 + 16))
    {
      uint64_t v324 = (uint64_t *)v24;
      sub_25B1806D0(v69 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80)), (uint64_t)v67, type metadata accessor for Replicator.SyncItem);
      sub_25B1814A4(0, 1);
      swift_endAccess();
      if (qword_26A4D98C0 == -1) {
        goto LABEL_4;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
LABEL_4:
    uint64_t v70 = sub_25B290190();
    uint64_t v71 = __swift_project_value_buffer(v70, (uint64_t)qword_26A4EB150);
    sub_25B1806D0((uint64_t)v67, (uint64_t)v65, type metadata accessor for Replicator.SyncItem);
    swift_retain();
    uint64_t v361 = v71;
    uint64_t v72 = sub_25B290160();
    os_log_type_t v73 = sub_25B2908A0();
    BOOL v74 = os_log_type_enabled(v72, v73);
    unint64_t v362 = v67;
    uint64_t v370 = v38;
    int64_t v371 = v45;
    if (v74)
    {
      uint64_t v75 = swift_slowAlloc();
      uint64_t v323 = swift_slowAlloc();
      *(void *)&long long v399 = v323;
      *(_DWORD *)uint64_t v75 = 136446466;
      uint64_t v76 = a1[66];
      unint64_t v77 = a1[67];
      swift_bridgeObjectRetain();
      *(void *)&v389[0] = sub_25B288E98(v76, v77, (uint64_t *)&v399);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v75 + 12) = 2082;
      uint64_t v78 = Record.ID.description.getter();
      *(void *)&v389[0] = sub_25B288E98(v78, v79, (uint64_t *)&v399);
      long long v67 = v362;
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B180A5C((uint64_t)v65, type metadata accessor for Replicator.SyncItem);
      _os_log_impl(&dword_25B107000, v72, v73, "(%{public}s) Syncing record %{public}s", (uint8_t *)v75, 0x16u);
      uint64_t v80 = v323;
      swift_arrayDestroy();
      MEMORY[0x261160890](v80, -1, -1);
      MEMORY[0x261160890](v75, -1, -1);
    }
    else
    {
      swift_release();
      sub_25B180A5C((uint64_t)v65, type metadata accessor for Replicator.SyncItem);
    }

    os_log_t v89 = v373;
    uint64_t v88 = v374;
    uint64_t v90 = v67;
    uint64_t v91 = ((char *)v67 + *(int *)(v372 + 20));
    swift_beginAccess();
    uint64_t v92 = a1[71];
    uint64_t v93 = *(void *)(v92 + 16);
    uint64_t v94 = (uint64_t)v375;
    os_log_t v373 = v91;
    if (v93)
    {
      uint64_t v95 = a1;
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v96 = sub_25B18A93C((uint64_t)v91);
      if (v97)
      {
        sub_25B1806D0(*(void *)(v92 + 56) + *(void *)(v88 + 72) * v96, (uint64_t)v89, type metadata accessor for Replicator.Session);
        (*(void (**)(os_log_t, void, uint64_t, uint64_t))(v88 + 56))(v89, 0, 1, v94);
      }
      else
      {
        (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v89, 1, 1, v94);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(os_log_t, uint64_t, uint64_t, void *))(v88 + 56))(v89, 1, 1, v375);
      uint64_t v95 = a1;
      swift_retain();
    }
    uint64_t v98 = (uint64_t)v370;
    int v99 = (*(uint64_t (**)(os_log_t, uint64_t, uint64_t))(v88 + 48))(v89, 1, v94);
    uint64_t v100 = (uint64_t)v371;
    if (v99 == 1)
    {
      sub_25B116DE0((uint64_t)v89, &qword_26A4DB280);
      uint64_t v101 = v364;
      sub_25B1806D0((uint64_t)v90, v364, type metadata accessor for Replicator.SyncItem);
      swift_retain();
      long long v102 = sub_25B290160();
      os_log_type_t v103 = sub_25B290880();
      if (os_log_type_enabled(v102, v103))
      {
        uint64_t v104 = swift_slowAlloc();
        long long v375 = (void *)swift_slowAlloc();
        *(void *)&long long v399 = v375;
        *(_DWORD *)uint64_t v104 = 136446466;
        uint64_t v105 = v95[66];
        unint64_t v106 = v95[67];
        swift_bridgeObjectRetain();
        *(void *)&v389[0] = sub_25B288E98(v105, v106, (uint64_t *)&v399);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v104 + 12) = 2082;
        uint64_t v107 = Record.ID.description.getter();
        *(void *)&v389[0] = sub_25B288E98(v107, v108, (uint64_t *)&v399);
        uint64_t v90 = v362;
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B180A5C(v101, type metadata accessor for Replicator.SyncItem);
        _os_log_impl(&dword_25B107000, v102, v103, "(%{public}s) Cannot sync enqueued record with no session: %{public}s", (uint8_t *)v104, 0x16u);
        uint64_t v109 = (uint64_t)v375;
        swift_arrayDestroy();
        MEMORY[0x261160890](v109, -1, -1);
        MEMORY[0x261160890](v104, -1, -1);
      }
      else
      {
        swift_release();
        sub_25B180A5C(v101, type metadata accessor for Replicator.SyncItem);
      }

      sub_25B166534((uint64_t)v95);
      swift_release();
      goto LABEL_44;
    }
    sub_25B18095C((uint64_t)v89, (uint64_t)v371, type metadata accessor for Replicator.Session);
    long long v110 = (void *)v95[29];
    long long v112 = v365;
    os_log_t v111 = v366;
    *uint64_t v365 = (uint64_t)v110;
    uint64_t v113 = v367;
    ((void (*)(uint64_t *, void, uint64_t))v111[13].isa)(v112, *MEMORY[0x263F8F0E0], v367);
    id v114 = v110;
    LOBYTE(v110) = sub_25B290440();
    ((void (*)(uint64_t *, uint64_t))v111[1].isa)(v112, v113);
    if (v110)
    {
      swift_beginAccess();
      sub_25B10FF48((uint64_t)(v95 + 24), (uint64_t)&v399);
      uint64_t v115 = *((void *)&v400 + 1);
      uint64_t v116 = v401;
      __swift_project_boxed_opaque_existential_1(&v399, *((uint64_t *)&v400 + 1));
      uint64_t v117 = *(void *)(v116 + 8);
      uint64_t v118 = v363;
      MetadataStoring.pairingRelationship(remoteDeviceID:)(*(void *)(v100 + *((int *)v375 + 5)), *(void *)(v100 + *((int *)v375 + 5) + 8), v115, v117, v363);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v399);
      if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v368 + 48))(v118, 1, v369) == 1)
      {
        sub_25B116DE0(v118, &qword_26A4D9610);
        swift_retain();
        long long v119 = sub_25B290160();
        os_log_type_t v120 = sub_25B290880();
        if (os_log_type_enabled(v119, v120))
        {
          long long v121 = (uint8_t *)swift_slowAlloc();
          uint64_t v122 = swift_slowAlloc();
          *(void *)&long long v399 = v122;
          *(_DWORD *)long long v121 = 136446210;
          uint64_t v123 = v95[66];
          unint64_t v124 = v95[67];
          swift_bridgeObjectRetain();
          *(void *)&v389[0] = sub_25B288E98(v123, v124, (uint64_t *)&v399);
          uint64_t v90 = v362;
          uint64_t v100 = (uint64_t)v371;
          sub_25B2909C0();
          swift_release();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25B107000, v119, v120, "(%{public}s) No pairing relationship established", v121, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x261160890](v122, -1, -1);
          MEMORY[0x261160890](v121, -1, -1);
        }
        else
        {

          swift_release();
        }
        sub_25B166534((uint64_t)v95);
        swift_release();
        uint64_t v152 = v100;
LABEL_43:
        sub_25B180A5C(v152, type metadata accessor for Replicator.Session);
LABEL_44:
        uint64_t v164 = (uint64_t)v90;
LABEL_45:
        sub_25B180A5C(v164, type metadata accessor for Replicator.SyncItem);
        return;
      }
      long long v375 = v95 + 24;
      sub_25B18095C(v118, v98, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v125 = v90[2];
      uint64_t v126 = v90[3];
      uint64_t v127 = v90[4];
      uint64_t v128 = v90[5];
      swift_beginAccess();
      uint64_t v129 = v95[30];
      if (*(void *)(v129 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v130 = sub_25B18A768(v125, v126, v127, v128);
        if (v131)
        {
          uint64_t v132 = *(void *)(*(void *)(v129 + 56) + 8 * v130);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v133 = &v370[*((int *)v369 + 5)];
          uint64_t v134 = *((void *)v133 + 12);
          if (*(void *)(v134 + 16))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v135 = sub_25B18A768(v125, v126, v127, v128);
            if (v136)
            {
              uint64_t v137 = (void *)(*(void *)(v134 + 56) + 48 * v135);
              uint64_t v138 = (uint64_t *)v137[1];
              uint64_t v139 = v137[4];
              os_log_t v366 = (os_log_t)v137[5];
              uint64_t v367 = v139;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v140 = *((void *)v133 + 4);
              uint64_t v372 = v132;
              if (v140 < 4 || *((void *)v133 + 5) > 0xFuLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v141 = v362;
                uint64_t v142 = v358;
                sub_25B1806D0((uint64_t)v362, v358, type metadata accessor for Replicator.SyncItem);
                swift_retain();
                uint64_t v143 = sub_25B290160();
                os_log_type_t v144 = sub_25B290880();
                if (os_log_type_enabled(v143, v144))
                {
                  uint64_t v145 = swift_slowAlloc();
                  long long v375 = (void *)swift_slowAlloc();
                  *(void *)&long long v399 = v375;
                  *(_DWORD *)uint64_t v145 = 136446466;
                  uint64_t v146 = v95[66];
                  unint64_t v147 = v95[67];
                  swift_bridgeObjectRetain();
                  *(void *)&v389[0] = sub_25B288E98(v146, v147, (uint64_t *)&v399);
                  sub_25B2909C0();
                  swift_release();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v145 + 12) = 2082;
                  uint64_t v148 = Record.ID.description.getter();
                  *(void *)&v389[0] = sub_25B288E98(v148, v149, (uint64_t *)&v399);
                  uint64_t v141 = v362;
                  sub_25B2909C0();
                  swift_bridgeObjectRelease();
                  sub_25B180A5C(v142, type metadata accessor for Replicator.SyncItem);
                  char v150 = "(%{public}s) Cannot sync enqueued record with incompatible device: %{public}s";
LABEL_35:
                  _os_log_impl(&dword_25B107000, v143, v144, v150, (uint8_t *)v145, 0x16u);
                  uint64_t v151 = (uint64_t)v375;
                  swift_arrayDestroy();
                  MEMORY[0x261160890](v151, -1, -1);
                  MEMORY[0x261160890](v145, -1, -1);
LABEL_60:

                  uint64_t v207 = (uint64_t)v370;
                  uint64_t v206 = (uint64_t)v371;
                  sub_25B166534((uint64_t)v95);
                  swift_release();
                  swift_release();
                  sub_25B180A5C(v207, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                  sub_25B180A5C(v206, type metadata accessor for Replicator.Session);
                  uint64_t v164 = (uint64_t)v141;
                  goto LABEL_45;
                }
                goto LABEL_59;
              }
              uint64_t v365 = v138;
              uint64_t v177 = (uint64_t)v370;
              uint64_t v178 = &v370[*((int *)v369 + 8)];
              uint64_t v179 = *(void *)v178;
              unint64_t v180 = *((void *)v178 + 1);
              if (v180 != 2)
              {
                sub_25B120090(*(void *)v178, *((void *)v178 + 1));
                sub_25B1200A4(v179, v180);
                sub_25B1200A4(0, 2uLL);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v141 = v362;
                uint64_t v142 = v355;
                sub_25B1806D0((uint64_t)v362, v355, type metadata accessor for Replicator.SyncItem);
                swift_retain();
                uint64_t v143 = sub_25B290160();
                os_log_type_t v144 = sub_25B290880();
                if (os_log_type_enabled(v143, v144))
                {
                  uint64_t v145 = swift_slowAlloc();
                  long long v375 = (void *)swift_slowAlloc();
                  *(void *)&long long v399 = v375;
                  *(_DWORD *)uint64_t v145 = 136446466;
                  uint64_t v198 = v95[66];
                  unint64_t v199 = v95[67];
                  swift_bridgeObjectRetain();
                  *(void *)&v389[0] = sub_25B288E98(v198, v199, (uint64_t *)&v399);
                  sub_25B2909C0();
                  swift_release();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v145 + 12) = 2082;
                  uint64_t v200 = Record.ID.description.getter();
                  *(void *)&v389[0] = sub_25B288E98(v200, v201, (uint64_t *)&v399);
                  uint64_t v141 = v362;
                  sub_25B2909C0();
                  swift_bridgeObjectRelease();
                  sub_25B180A5C(v142, type metadata accessor for Replicator.SyncItem);
                  char v150 = "(%{public}s) Cannot sync enqueued record with non-paired relationship: %{public}s";
                  goto LABEL_35;
                }
LABEL_59:
                swift_release();
                sub_25B180A5C(v142, type metadata accessor for Replicator.SyncItem);
                goto LABEL_60;
              }
              long long v369 = v133;
              sub_25B1200A4(v179, 2uLL);
              sub_25B1200A4(0, 2uLL);
              sub_25B10FF48((uint64_t)(v95 + 33), (uint64_t)&v399);
              uint64_t v181 = v401;
              __swift_project_boxed_opaque_existential_1(&v399, *((uint64_t *)&v400 + 1));
              *(void *)&v389[0] = v95;
              uint64_t v182 = *(uint64_t (**)(_OWORD *, void *, uint64_t))(v181 + 8);
              uint64_t v364 = type metadata accessor for Replicator();
              char v183 = v182(v389, v362, v177);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v399);
              if ((v183 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v141 = v362;
                uint64_t v142 = v352;
                sub_25B1806D0((uint64_t)v362, v352, type metadata accessor for Replicator.SyncItem);
                swift_retain();
                uint64_t v143 = sub_25B290160();
                os_log_type_t v144 = sub_25B290880();
                if (os_log_type_enabled(v143, v144))
                {
                  uint64_t v145 = swift_slowAlloc();
                  long long v375 = (void *)swift_slowAlloc();
                  *(void *)&long long v399 = v375;
                  *(_DWORD *)uint64_t v145 = 136446466;
                  uint64_t v202 = v95[66];
                  unint64_t v203 = v95[67];
                  swift_bridgeObjectRetain();
                  *(void *)&v389[0] = sub_25B288E98(v202, v203, (uint64_t *)&v399);
                  sub_25B2909C0();
                  swift_release();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v145 + 12) = 2082;
                  uint64_t v204 = Record.ID.description.getter();
                  *(void *)&v389[0] = sub_25B288E98(v204, v205, (uint64_t *)&v399);
                  uint64_t v141 = v362;
                  sub_25B2909C0();
                  swift_bridgeObjectRelease();
                  sub_25B180A5C(v142, type metadata accessor for Replicator.SyncItem);
                  char v150 = "(%{public}s) Replication policy prevents record from syncing: %{public}s";
                  goto LABEL_35;
                }
                goto LABEL_59;
              }
              uint64_t v184 = v362;
              long long v112 = v324;
              sub_25B1806D0((uint64_t)v362, (uint64_t)v324, type metadata accessor for Record.ID);
              swift_beginAccess();
              uint64_t v185 = v95[81];
              uint64_t v186 = v184[4];
              uint64_t v187 = v184[5];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v188 = sub_25B2109B4(v186, v187, v185);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v322 = (uint64_t (*)())v95;
              if (v188)
              {
                uint64_t v189 = v357;
                uint64_t v190 = v357 + *(int *)(v346 + 20);
                uint64_t v191 = v353;
                uint64_t v192 = v190 + *(int *)(v353 + 20);
                uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA710);
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v193 - 8) + 56))(v192, 1, 1, v193);
                sub_25B1806D0((uint64_t)v112, v190, type metadata accessor for Record.ID);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v194 = v190 + *(int *)(v191 + 24);
                *(void *)uint64_t v194 = v367;
                *(unsigned char *)(v194 + 8) = 0;
                uint64_t v195 = sub_25B290080();
                (*(void (**)(uint64_t, os_log_t, uint64_t))(*(void *)(v195 - 8) + 16))(v189, v373, v195);
                uint64_t v196 = sub_25B28FEA0();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v196 - 8) + 56))(v356, 1, 1, v196);
                char v197 = 0;
                goto LABEL_80;
              }
              uint64_t v208 = v339;
              sub_25B1806D0((uint64_t)v362, v339, type metadata accessor for Record.ID);
              *(void *)&v389[0] = v95;
              uint64_t v209 = v372;
              if (MEMORY[0x261160990](v372 + 16))
              {
                uint64_t v210 = *(void *)(v209 + 24);
                uint64_t ObjectType = swift_getObjectType();
                *(void *)&long long v399 = v367;
                *((void *)&v399 + 1) = v366;
                uint64_t v212 = (uint64_t)v338;
                (*(void (**)(_OWORD *, uint64_t, char *, long long *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v210 + 24))(v389, v208, v370, &v399, v364, &protocol witness table for Replicator, ObjectType, v210);
                swift_unknownObjectRelease();
                uint64_t v213 = v340;
                uint64_t v214 = v208;
                uint64_t v215 = v337;
              }
              else
              {
                uint64_t v214 = v208;
                uint64_t v215 = v337;
                uint64_t v212 = (uint64_t)v338;
                uint64_t v213 = v340;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v337 + 56))(v338, 1, 1, v340);
              }
              sub_25B180A5C(v214, type metadata accessor for Record.ID);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v215 + 48))(v212, 1, v213) == 1)
              {
                sub_25B116DE0(v212, &qword_26A4DA708);
                goto LABEL_76;
              }
              sub_25B18095C(v212, (uint64_t)v336, (uint64_t (*)(void))type metadata accessor for PrioritizedRecordValue);
              sub_25B10FF48((uint64_t)v375, (uint64_t)&v399);
              uint64_t v216 = *((void *)&v400 + 1);
              uint64_t v217 = v401;
              __swift_project_boxed_opaque_existential_1(&v399, *((uint64_t *)&v400 + 1));
              uint64_t v218 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v217 + 8) + 8) + 24))(v216);
              if (*(void *)(v218 + 16))
              {
                unint64_t v219 = sub_25B18A8D0(v362);
                uint64_t v220 = v327;
                if (v221)
                {
                  sub_25B1806D0(*(void *)(v218 + 56) + *(void *)(v328 + 72) * v219, v327, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
                  uint64_t v222 = 0;
                }
                else
                {
                  uint64_t v222 = 1;
                }
                goto LABEL_74;
              }
LABEL_72:
              uint64_t v222 = 1;
              uint64_t v220 = v327;
LABEL_74:
              uint64_t v224 = v328;
              uint64_t v223 = v329;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56))(v220, v222, 1, v329);
              swift_bridgeObjectRelease();
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v224 + 48))(v220, 1, v223) != 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_25B18095C(v220, (uint64_t)v326, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v399);
                sub_25B10FF48((uint64_t)v375, (uint64_t)&v399);
                uint64_t v294 = *((void *)&v400 + 1);
                uint64_t v295 = v401;
                __swift_project_boxed_opaque_existential_1(&v399, *((uint64_t *)&v400 + 1));
                uint64_t v296 = (*(uint64_t (**)(void *, uint64_t))(*(void *)(*(void *)(v295 + 8) + 8) + 56))(v362, v294);
                if (!v297)
                {
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v399);
                  sub_25B1806D0((uint64_t)v362, v325, type metadata accessor for Replicator.SyncItem);
                  swift_retain();
                  long long v312 = sub_25B290160();
                  os_log_type_t v313 = sub_25B290880();
                  if (os_log_type_enabled(v312, v313))
                  {
                    uint64_t v314 = swift_slowAlloc();
                    uint64_t v315 = swift_slowAlloc();
                    *(void *)&long long v399 = v315;
                    *(_DWORD *)uint64_t v314 = 136446466;
                    uint64_t v316 = *((void *)v322 + 66);
                    unint64_t v317 = *((void *)v322 + 67);
                    swift_bridgeObjectRetain();
                    *(void *)&v389[0] = sub_25B288E98(v316, v317, (uint64_t *)&v399);
                    sub_25B2909C0();
                    swift_release();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v314 + 12) = 2082;
                    uint64_t v318 = v325;
                    uint64_t v319 = Record.ID.description.getter();
                    *(void *)&v389[0] = sub_25B288E98(v319, v320, (uint64_t *)&v399);
                    sub_25B2909C0();
                    swift_bridgeObjectRelease();
                    sub_25B180A5C(v318, type metadata accessor for Replicator.SyncItem);
                    _os_log_impl(&dword_25B107000, v312, v313, "(%{public}s) No client defined ID is available for record: %{public}s", (uint8_t *)v314, 0x16u);
                    swift_arrayDestroy();
                    MEMORY[0x261160890](v315, -1, -1);
                    MEMORY[0x261160890](v314, -1, -1);
                  }
                  else
                  {
                    swift_release();
                    sub_25B180A5C(v325, type metadata accessor for Replicator.SyncItem);
                  }

                  sub_25B166534((uint64_t)v322);
                  swift_release();
                  swift_release();
                  sub_25B180A5C((uint64_t)v336, (uint64_t (*)(void))type metadata accessor for PrioritizedRecordValue);
                  sub_25B180A5C((uint64_t)v370, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                  sub_25B180A5C((uint64_t)v371, type metadata accessor for Replicator.Session);
                  sub_25B180A5C((uint64_t)v362, type metadata accessor for Replicator.SyncItem);
                  unint64_t v290 = (uint64_t (*)(void))type metadata accessor for RecordMetadata;
                  uint64_t v291 = v326;
                  goto LABEL_84;
                }
                uint64_t v298 = v296;
                uint64_t v299 = v297;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v399);
                if (v369[4] < 0xEuLL)
                {
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *long long v112 = v298;
                  v112[1] = v299;
                }
                uint64_t v300 = (uint64_t)v326;
                sub_25B185348((uint64_t)v112, (uint64_t)v326);
                type metadata accessor for RecordMetadata.ClientDefinedID();
                uint64_t v301 = swift_allocObject();
                *(void *)(v301 + 16) = v298;
                *(void *)(v301 + 24) = v299;
                uint64_t v302 = *(int *)(v329 + 20);
                swift_release();
                *(void *)(v300 + v302) = v301;
                uint64_t v303 = v357;
                uint64_t v304 = v357 + *(int *)(v346 + 20);
                uint64_t v305 = v304 + *(int *)(v353 + 20);
                uint64_t v306 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA710);
                long long v307 = (void *)(v305 + *(int *)(v306 + 48));
                sub_25B1806D0(v300, v305, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
                long long v308 = v336;
                uint64_t v309 = v336[1];
                uint64_t v367 = *v336;
                long long v375 = (void *)v309;
                void *v307 = v367;
                v307[1] = v309;
                uint64_t v189 = v303;
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v306 - 8) + 56))(v305, 0, 1, v306);
                sub_25B1806D0((uint64_t)v112, v304, type metadata accessor for Record.ID);
                uint64_t v310 = type metadata accessor for Record.Value(0);
                uint64_t v311 = v304 + *(int *)(v353 + 24);
                *(void *)uint64_t v311 = *(uint64_t *)((char *)v308 + *(int *)(v310 + 24));
                *(unsigned char *)(v311 + 8) = 0;
                uint64_t v195 = sub_25B290080();
                (*(void (**)(uint64_t, os_log_t, uint64_t))(*(void *)(v195 - 8) + 16))(v303, v373, v195);
                sub_25B187628((uint64_t)v308 + *(int *)(v310 + 20), v356, &qword_26A4D9160);
                char v197 = *((unsigned char *)v308 + *(int *)(v340 + 20));
                sub_25B114300(v367, (unint64_t)v375);
                sub_25B180A5C((uint64_t)v308, (uint64_t (*)(void))type metadata accessor for PrioritizedRecordValue);
                sub_25B180A5C(v300, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
LABEL_80:
                uint64_t v251 = v354;
                sub_25B1806D0(v189, v354, type metadata accessor for ReplicatorMessage.Sync);
                swift_storeEnumTagMultiPayload();
                sub_25B290080();
                uint64_t v252 = (uint64_t)v350;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v195 - 8) + 56))(v350, 1, 1, v195);
                uint64_t v253 = v351;
                uint64_t v254 = v322;
                unint64_t v255 = (void *)v410;
                sub_25B141908(v251, (uint64_t)v370, v252, v351);
                unint64_t v256 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v349 + 56);
                if (v255)
                {

                  sub_25B116DE0(v252, &qword_26B33F200);
                  (*v256)(v253, 1, 1, v347);
                  sub_25B116DE0(v253, (uint64_t *)&unk_26A4DB070);
                  uint64_t v257 = v362;
                  uint64_t v258 = v341;
                  sub_25B1806D0((uint64_t)v362, v341, type metadata accessor for Replicator.SyncItem);
                  swift_retain();
                  uint64_t v259 = sub_25B290160();
                  os_log_type_t v260 = sub_25B290880();
                  if (os_log_type_enabled(v259, v260))
                  {
                    uint64_t v261 = swift_slowAlloc();
                    uint64_t v410 = swift_slowAlloc();
                    *(void *)&long long v399 = v410;
                    *(_DWORD *)uint64_t v261 = 136446466;
                    uint64_t v262 = *((void *)v254 + 66);
                    unint64_t v263 = *((void *)v254 + 67);
                    swift_bridgeObjectRetain();
                    *(void *)&v389[0] = sub_25B288E98(v262, v263, (uint64_t *)&v399);
                    sub_25B2909C0();
                    swift_release();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v261 + 12) = 2082;
                    uint64_t v264 = Record.ID.description.getter();
                    *(void *)&v389[0] = sub_25B288E98(v264, v265, (uint64_t *)&v399);
                    uint64_t v257 = v362;
                    sub_25B2909C0();
                    swift_bridgeObjectRelease();
                    sub_25B180A5C(v258, type metadata accessor for Replicator.SyncItem);
                    _os_log_impl(&dword_25B107000, v259, v260, "(%{public}s) Could not create message for record ID: %{public}s", (uint8_t *)v261, 0x16u);
                    uint64_t v266 = v410;
                    swift_arrayDestroy();
                    MEMORY[0x261160890](v266, -1, -1);
                    MEMORY[0x261160890](v261, -1, -1);
                  }
                  else
                  {
                    swift_release();
                    sub_25B180A5C(v258, type metadata accessor for Replicator.SyncItem);
                  }

                  uint64_t v293 = (uint64_t)v370;
                  uint64_t v292 = (uint64_t)v371;
                  sub_25B166534((uint64_t)v254);
                  swift_release();
                  swift_release();
                  sub_25B180A5C(v354, type metadata accessor for ReplicatorMessage);
                  sub_25B116DE0(v356, &qword_26A4D9160);
                  sub_25B180A5C(v357, type metadata accessor for ReplicatorMessage.Sync);
                  sub_25B180A5C(v293, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                  sub_25B180A5C(v292, type metadata accessor for Replicator.Session);
                  sub_25B180A5C((uint64_t)v257, type metadata accessor for Replicator.SyncItem);
                  sub_25B180A5C((uint64_t)v324, type metadata accessor for Record.ID);
                  return;
                }
                uint64_t v410 = 0;
                sub_25B116DE0(v252, &qword_26B33F200);
                (*v256)(v253, 0, 1, v347);
                sub_25B18095C(v253, v343, (uint64_t (*)(void))type metadata accessor for Message);
                uint64_t v267 = *((void *)v254 + 23);
                long long v375 = (void *)*((void *)v254 + 22);
                unint64_t v268 = v254;
                uint64_t v367 = v267;
                os_log_t v373 = (os_log_t)swift_getObjectType();
                sub_25B187628(v356, v342, &qword_26A4D9160);
                long long v269 = *((_OWORD *)v369 + 7);
                long long v270 = *((_OWORD *)v369 + 9);
                long long v396 = *((_OWORD *)v369 + 8);
                long long v397 = v270;
                long long v271 = *((_OWORD *)v369 + 9);
                long long v398 = *((_OWORD *)v369 + 10);
                long long v272 = *((_OWORD *)v369 + 3);
                long long v273 = *((_OWORD *)v369 + 5);
                long long v392 = *((_OWORD *)v369 + 4);
                long long v393 = v273;
                long long v274 = *((_OWORD *)v369 + 5);
                long long v275 = *((_OWORD *)v369 + 7);
                long long v394 = *((_OWORD *)v369 + 6);
                long long v395 = v275;
                long long v276 = *((_OWORD *)v369 + 1);
                v389[0] = *(_OWORD *)v369;
                v389[1] = v276;
                long long v277 = *((_OWORD *)v369 + 3);
                long long v279 = *(_OWORD *)v369;
                long long v278 = *((_OWORD *)v369 + 1);
                long long v390 = *((_OWORD *)v369 + 2);
                long long v391 = v277;
                long long v385 = v269;
                long long v386 = v396;
                long long v280 = *((_OWORD *)v369 + 10);
                long long v387 = v271;
                long long v388 = v280;
                long long v382 = v392;
                long long v383 = v274;
                long long v384 = v394;
                long long v378 = v279;
                long long v379 = v278;
                long long v380 = v390;
                long long v381 = v272;
                char v377 = v197;
                v376[0] = 0x403E000000000000;
                v376[1] = 0;
                uint64_t v281 = v331;
                sub_25B1806D0((uint64_t)v371, v331, type metadata accessor for Replicator.Session);
                uint64_t v282 = v333;
                sub_25B1806D0((uint64_t)v370, v333, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                unint64_t v283 = (*(unsigned __int8 *)(v374 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v374 + 80);
                unint64_t v284 = (v330 + *(unsigned __int8 *)(v368 + 80) + v283) & ~(unint64_t)*(unsigned __int8 *)(v368 + 80);
                unint64_t v285 = (v332 + v284 + 7) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v286 = swift_allocObject();
                *(void *)(v286 + 16) = v268;
                sub_25B18095C(v281, v286 + v283, type metadata accessor for Replicator.Session);
                sub_25B18095C(v282, v286 + v284, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                uint64_t v287 = (uint64_t (**)())(v286 + v285);
                char *v287 = sub_25B184F90;
                v287[1] = v268;
                swift_retain();
                sub_25B1172F8((uint64_t)v389);
                swift_retain();
                uint64_t v289 = v342;
                uint64_t v288 = v343;
                sub_25B1593EC(v343, v342, &v378, &v377, v376, (uint64_t)sub_25B185230, v286, (uint64_t)v373, v367);
                swift_release();
                swift_release();
                swift_release();
                long long v407 = v386;
                long long v408 = v387;
                long long v409 = v388;
                long long v403 = v382;
                long long v404 = v383;
                long long v405 = v384;
                long long v406 = v385;
                long long v399 = v378;
                long long v400 = v379;
                long long v401 = v380;
                long long v402 = v381;
                sub_25B11DEBC((uint64_t)&v399);
                sub_25B116DE0(v289, &qword_26A4D9160);
                sub_25B180A5C(v288, (uint64_t (*)(void))type metadata accessor for Message);
                sub_25B180A5C(v354, type metadata accessor for ReplicatorMessage);
                sub_25B116DE0(v356, &qword_26A4D9160);
                sub_25B180A5C(v357, type metadata accessor for ReplicatorMessage.Sync);
                sub_25B180A5C((uint64_t)v370, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                sub_25B180A5C((uint64_t)v371, type metadata accessor for Replicator.Session);
                unint64_t v290 = type metadata accessor for Replicator.SyncItem;
                uint64_t v291 = v362;
LABEL_84:
                sub_25B180A5C((uint64_t)v291, v290);
                sub_25B180A5C((uint64_t)v324, type metadata accessor for Record.ID);
                return;
              }
              sub_25B180A5C((uint64_t)v336, (uint64_t (*)(void))type metadata accessor for PrioritizedRecordValue);
              sub_25B116DE0(v220, &qword_26A4D93A8);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v399);
LABEL_76:
              uint64_t v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA710);
              uint64_t v226 = v344;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v225 - 8) + 56))(v344, 1, 1, v225);
              uint64_t v227 = v345;
              sub_25B1806D0((uint64_t)v112, v345, type metadata accessor for Record.ID);
              uint64_t v228 = v353;
              sub_25B1806D0(v226, v227 + *(int *)(v353 + 20), type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v229 = v227 + *(int *)(v228 + 24);
              *(void *)uint64_t v229 = v367;
              *(unsigned char *)(v229 + 8) = 0;
              uint64_t v195 = sub_25B290080();
              uint64_t v230 = v357;
              (*(void (**)(uint64_t, os_log_t, uint64_t))(*(void *)(v195 - 8) + 16))(v357, v373, v195);
              sub_25B1806D0(v227, v230 + *(int *)(v346 + 20), type metadata accessor for ReplicatorMessage.Sync.SyncRecord);
              uint64_t v231 = sub_25B28FEA0();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v231 - 8) + 56))(v356, 1, 1, v231);
              uint64_t v232 = v335;
              sub_25B1806D0(v227, v335, type metadata accessor for ReplicatorMessage.Sync.SyncRecord);
              swift_retain();
              uint64_t v233 = sub_25B290160();
              os_log_type_t v234 = sub_25B290880();
              int v235 = v234;
              if (os_log_type_enabled(v233, v234))
              {
                uint64_t v236 = swift_slowAlloc();
                os_log_t v366 = v233;
                uint64_t v237 = v236;
                os_log_t v373 = (os_log_t)swift_slowAlloc();
                *(void *)&long long v399 = v373;
                *(_DWORD *)uint64_t v237 = 136446466;
                LODWORD(v367) = v235;
                uint64_t v238 = v95[66];
                unint64_t v239 = v95[67];
                swift_bridgeObjectRetain();
                *(void *)&v389[0] = sub_25B288E98(v238, v239, (uint64_t *)&v399);
                sub_25B2909C0();
                swift_release();
                swift_bridgeObjectRelease();
                *(_WORD *)(v237 + 12) = 2082;
                uint64_t v240 = Record.ID.description.getter();
                *(void *)&v389[0] = sub_25B288E98(v240, v241, (uint64_t *)&v399);
                sub_25B2909C0();
                swift_bridgeObjectRelease();
                sub_25B180A5C(v232, type metadata accessor for ReplicatorMessage.Sync.SyncRecord);
                os_log_t v242 = v366;
                _os_log_impl(&dword_25B107000, v366, (os_log_type_t)v367, "(%{public}s) Removing metadata for missing record ID: %{public}s", (uint8_t *)v237, 0x16u);
                os_log_t v243 = v373;
                swift_arrayDestroy();
                MEMORY[0x261160890](v243, -1, -1);
                MEMORY[0x261160890](v237, -1, -1);
              }
              else
              {
                swift_release();
                sub_25B180A5C(v232, type metadata accessor for ReplicatorMessage.Sync.SyncRecord);
              }
              uint64_t v244 = v334;
              sub_25B10FF48((uint64_t)v375, (uint64_t)&v399);
              uint64_t v245 = *((void *)&v400 + 1);
              uint64_t v246 = v401;
              __swift_project_boxed_opaque_existential_1(&v399, *((uint64_t *)&v400 + 1));
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D58);
              unint64_t v247 = (*(unsigned __int8 *)(v244 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v244 + 80);
              uint64_t v248 = swift_allocObject();
              *(_OWORD *)(v248 + 16) = xmmword_25B292C10;
              uint64_t v249 = v248 + v247;
              uint64_t v250 = v345;
              sub_25B1806D0(v345, v249, type metadata accessor for Record.ID);
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v246 + 16) + 112))(v248, v245);
              swift_bridgeObjectRelease();
              sub_25B180A5C(v250, type metadata accessor for ReplicatorMessage.Sync.SyncRecord);
              sub_25B180A5C(v344, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v399);
              char v197 = 0;
              uint64_t v189 = v357;
              goto LABEL_80;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          int64_t v165 = v362;
          uint64_t v166 = v359;
          sub_25B1806D0((uint64_t)v362, v359, type metadata accessor for Replicator.SyncItem);
          swift_retain();
          uint64_t v167 = sub_25B290160();
          os_log_type_t v168 = sub_25B290880();
          int v169 = v168;
          if (os_log_type_enabled(v167, v168))
          {
            uint64_t v170 = swift_slowAlloc();
            LODWORD(v375) = v169;
            uint64_t v171 = v170;
            uint64_t v374 = swift_slowAlloc();
            *(void *)&v389[0] = v374;
            *(_DWORD *)uint64_t v171 = 136446466;
            os_log_t v373 = v167;
            uint64_t v172 = v95[66];
            unint64_t v173 = v95[67];
            swift_bridgeObjectRetain();
            *(void *)&long long v399 = sub_25B288E98(v172, v173, (uint64_t *)v389);
            sub_25B2909C0();
            swift_release();
            swift_bridgeObjectRelease();
            *(_WORD *)(v171 + 12) = 2082;
            long long v369 = (void *)(v171 + 14);
            uint64_t v372 = v132;
            *(void *)&long long v399 = 0;
            *((void *)&v399 + 1) = 0xE000000000000000;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_25B290AA0();
            swift_bridgeObjectRelease();
            *(void *)&long long v399 = 540697705;
            *((void *)&v399 + 1) = 0xE400000000000000;
            swift_bridgeObjectRetain();
            sub_25B290650();
            swift_bridgeObjectRelease();
            sub_25B290650();
            swift_bridgeObjectRetain();
            sub_25B290650();
            int64_t v165 = v362;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            *(void *)&long long v399 = sub_25B288E98(v399, *((unint64_t *)&v399 + 1), (uint64_t *)v389);
            sub_25B2909C0();
            swift_bridgeObjectRelease();
            sub_25B180A5C(v166, type metadata accessor for Replicator.SyncItem);
            uint64_t v167 = v373;
            _os_log_impl(&dword_25B107000, v373, (os_log_type_t)v375, "(%{public}s) Cannot find remote zone descriptor for zone: %{public}s", (uint8_t *)v171, 0x16u);
            uint64_t v174 = v374;
            swift_arrayDestroy();
            MEMORY[0x261160890](v174, -1, -1);
            MEMORY[0x261160890](v171, -1, -1);
          }
          else
          {
            swift_release();
            sub_25B180A5C(v166, type metadata accessor for Replicator.SyncItem);
          }

          uint64_t v176 = (uint64_t)v370;
          uint64_t v175 = (uint64_t)v371;
          sub_25B166534((uint64_t)v95);
          swift_release();
          swift_release();
          sub_25B180A5C(v176, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          sub_25B180A5C(v175, type metadata accessor for Replicator.Session);
          uint64_t v164 = (uint64_t)v165;
          goto LABEL_45;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v153 = v360;
      sub_25B1806D0((uint64_t)v90, v360, type metadata accessor for Replicator.SyncItem);
      swift_retain();
      uint64_t v154 = sub_25B290160();
      os_log_type_t v155 = sub_25B290880();
      if (os_log_type_enabled(v154, v155))
      {
        uint64_t v156 = swift_slowAlloc();
        long long v375 = (void *)swift_slowAlloc();
        *(void *)&long long v399 = v375;
        *(_DWORD *)uint64_t v156 = 136446466;
        uint64_t v157 = v95[66];
        unint64_t v158 = v95[67];
        swift_bridgeObjectRetain();
        *(void *)&v389[0] = sub_25B288E98(v157, v158, (uint64_t *)&v399);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v156 + 12) = 2082;
        uint64_t v159 = Record.ID.description.getter();
        *(void *)&v389[0] = sub_25B288E98(v159, v160, (uint64_t *)&v399);
        uint64_t v90 = v362;
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B180A5C(v153, type metadata accessor for Replicator.SyncItem);
        _os_log_impl(&dword_25B107000, v154, v155, "(%{public}s) Cannot sync enqueued record with no data source: %{public}s", (uint8_t *)v156, 0x16u);
        uint64_t v161 = (uint64_t)v375;
        swift_arrayDestroy();
        MEMORY[0x261160890](v161, -1, -1);
        MEMORY[0x261160890](v156, -1, -1);
      }
      else
      {
        swift_release();
        sub_25B180A5C(v153, type metadata accessor for Replicator.SyncItem);
      }

      uint64_t v163 = (uint64_t)v370;
      uint64_t v162 = (uint64_t)v371;
      sub_25B166534((uint64_t)v95);
      swift_release();
      sub_25B180A5C(v163, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v152 = v162;
      goto LABEL_43;
    }
    __break(1u);
    goto LABEL_72;
  }
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v81 = sub_25B290190();
  __swift_project_value_buffer(v81, (uint64_t)qword_26A4EB150);
  swift_retain();
  uint64_t v82 = sub_25B290160();
  os_log_type_t v83 = sub_25B2908A0();
  if (os_log_type_enabled(v82, v83))
  {
    uint64_t v84 = (uint8_t *)swift_slowAlloc();
    uint64_t v85 = swift_slowAlloc();
    *(void *)&long long v399 = v85;
    *(_DWORD *)uint64_t v84 = 136446210;
    uint64_t v86 = a1[66];
    unint64_t v87 = a1[67];
    swift_bridgeObjectRetain();
    *(void *)&v389[0] = sub_25B288E98(v86, v87, (uint64_t *)&v399);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v82, v83, "(%{public}s) Sync queue is empty", v84, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v85, -1, -1);
    MEMORY[0x261160890](v84, -1, -1);
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_25B166534(uint64_t a1)
{
  uint64_t v2 = sub_25B290320();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25B290360();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(void *)(a1 + 232);
  aBlock[4] = sub_25B18467C;
  void aBlock[5] = a1;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_1529;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  sub_25B290340();
  v12[1] = MEMORY[0x263F8EE78];
  sub_25B1875E0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v9, v5, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

void sub_25B1667DC(void *a1)
{
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (void *)a1[29];
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_25B290440();
  uint64_t v8 = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v9 = (void *)MEMORY[0x26115FD30](v8);
    sub_25B163160(a1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25B166908(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  int v30 = a2;
  uint64_t v11 = type metadata accessor for PairingRelationship();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for Replicator.Session(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = &v29[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  dispatch_queue_t v33 = *(dispatch_queue_t *)(a3 + 232);
  sub_25B1806D0(a4, (uint64_t)v18, type metadata accessor for Replicator.Session);
  sub_25B1806D0(a5, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v20 = (v17 + *(unsigned __int8 *)(v12 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v21 = (v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = a1;
  *(void *)(v22 + 16) = a1;
  LOBYTE(a1) = v30 & 1;
  *(unsigned char *)(v22 + 24) = v30 & 1;
  *(void *)(v22 + 32) = a3;
  sub_25B18095C((uint64_t)v18, v22 + v19, type metadata accessor for Replicator.Session);
  sub_25B18095C((uint64_t)v14, v22 + v20, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  BOOL v24 = (void *)(v22 + v21);
  uint64_t v25 = v32;
  *BOOL v24 = v31;
  v24[1] = v25;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_25B185650;
  *(void *)(v26 + 24) = v22;
  aBlock[4] = sub_25B117398;
  void aBlock[5] = v26;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10D184;
  aBlock[3] = &block_descriptor_1526;
  uint64_t v27 = _Block_copy(aBlock);
  sub_25B116CFC(v23, (char)a1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v33, v27);
  _Block_release(v27);
  LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v27) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B166C44(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), NSObject *a7)
{
  if (a2)
  {
    id v80 = a1;
    id v13 = a1;
    id v14 = a1;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
    if (swift_dynamicCast() && v87 == 2)
    {
      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_25B290190();
      __swift_project_value_buffer(v16, (uint64_t)qword_26A4EB150);
      sub_25B116CFC(a1, 1);
      sub_25B116CFC(a1, 1);
      swift_retain();
      uint64_t v17 = sub_25B290160();
      os_log_type_t v18 = sub_25B2908A0();
      os_log_t v75 = v17;
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v74 = swift_slowAlloc();
        uint64_t v78 = v74;
        *(_DWORD *)uint64_t v19 = 136446466;
        uint64_t v20 = a3[66];
        unint64_t v21 = a3[67];
        swift_bridgeObjectRetain();
        sub_25B288E98(v20, v21, &v78);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 2082;
        id v22 = a1;
        uint64_t v23 = sub_25B290600();
        uint64_t v76 = sub_25B288E98(v23, v24, &v78);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
        _os_log_impl(&dword_25B107000, v75, v18, "(%{public}s) Allow list prevents sending sync item: %{public}s.", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261160890](v74, -1, -1);
        MEMORY[0x261160890](v19, -1, -1);

        sub_25B116D08(a1, 1);
      }
      else
      {
        sub_25B116D08(a1, 1);
        swift_release();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
      }
      id v59 = v80;
LABEL_24:

      return a6();
    }

    id v87 = a1;
    id v25 = a1;
    if (swift_dynamicCast() && (v86 & 1) == 0)
    {
      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_25B290190();
      __swift_project_value_buffer(v46, (uint64_t)qword_26A4EB150);
      sub_25B116CFC(a1, 1);
      sub_25B116CFC(a1, 1);
      swift_retain();
      uint64_t v47 = sub_25B290160();
      os_log_type_t v48 = sub_25B290880();
      int v49 = v48;
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v74 = a5;
        os_log_t v75 = a7;
        uint64_t v50 = swift_slowAlloc();
        uint64_t v51 = (void *)swift_slowAlloc();
        id v80 = v51;
        *(_DWORD *)uint64_t v50 = 136446466;
        os_log_t v73 = v47;
        uint64_t v52 = a6;
        uint64_t v53 = a3[66];
        int v72 = v49;
        unint64_t v54 = a3[67];
        swift_bridgeObjectRetain();
        uint64_t v55 = v53;
        a6 = v52;
        sub_25B288E98(v55, v54, (uint64_t *)&v80);
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 12) = 2082;
        id v56 = a1;
        uint64_t v57 = sub_25B290600();
        uint64_t v78 = sub_25B288E98(v57, v58, (uint64_t *)&v80);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
        uint64_t v47 = v73;
        _os_log_impl(&dword_25B107000, v73, (os_log_type_t)v72, "(%{public}s) Network failure encountered when sending sync item: %{public}s", (uint8_t *)v50, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261160890](v51, -1, -1);
        a5 = v74;
        MEMORY[0x261160890](v50, -1, -1);
      }
      else
      {
        swift_release();
        sub_25B116D08(a1, 1);
        sub_25B116D08(a1, 1);
      }

      uint64_t v60 = swift_beginAccess();
      uint64_t v61 = a3[70];
      MEMORY[0x270FA5388](v60);
      v71[2] = a4;
      swift_bridgeObjectRetain();
      a3[70] = sub_25B20FFA0((uint64_t (*)(char *))sub_25B185768, (uint64_t)v71, v61);
      swift_bridgeObjectRelease();
      uint64_t v62 = a3[51];
      uint64_t v63 = a3[52];
      __swift_project_boxed_opaque_existential_1(a3 + 48, v62);
      uint64_t v64 = a5 + *(int *)(type metadata accessor for PairingRelationship() + 20);
      uint64_t v65 = *(void *)(v64 + 8);
      char v66 = *(unsigned char *)(v64 + 48);
      uint64_t v67 = *(void *)(v64 + 160);
      uint64_t v68 = *(void *)(v64 + 168);
      id v80 = *(id *)v64;
      uint64_t v81 = v65;
      uint64_t v82 = v67;
      uint64_t v83 = v68;
      char v84 = v66;
      long long v85 = *(_OWORD *)(v64 + 32);
      uint64_t v76 = 0;
      char v77 = 2;
      uint64_t v69 = *(void (**)(id *, uint64_t *, uint64_t, uint64_t))(v63 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v69(&v80, &v76, v62, v63);
      sub_25B116D08(a1, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v59 = v87;
      goto LABEL_24;
    }
    os_log_t v75 = a7;

    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_25B290190();
    __swift_project_value_buffer(v26, (uint64_t)qword_26A4EB150);
    sub_25B116CFC(a1, 1);
    sub_25B116CFC(a1, 1);
    swift_retain();
    uint64_t v27 = sub_25B290160();
    os_log_type_t v28 = sub_25B290880();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v74 = (uint64_t)a6;
      int v30 = (void *)swift_slowAlloc();
      id v80 = v30;
      *(_DWORD *)uint64_t v29 = 136446466;
      uint64_t v31 = a3[66];
      os_log_t v73 = v15;
      uint64_t v32 = a5;
      unint64_t v33 = a3[67];
      swift_bridgeObjectRetain();
      sub_25B288E98(v31, v33, (uint64_t *)&v80);
      sub_25B2909C0();
      swift_release();
      a5 = v32;
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      id v34 = a1;
      uint64_t v35 = sub_25B290600();
      uint64_t v78 = sub_25B288E98(v35, v36, (uint64_t *)&v80);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B116D08(a1, 1);
      sub_25B116D08(a1, 1);
      _os_log_impl(&dword_25B107000, v27, v28, "(%{public}s) Error sending sync item: %{public}s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      uint64_t v37 = v30;
      a6 = (uint64_t (*)(void))v74;
      MEMORY[0x261160890](v37, -1, -1);
      MEMORY[0x261160890](v29, -1, -1);
    }
    else
    {
      swift_release();
      sub_25B116D08(a1, 1);
      sub_25B116D08(a1, 1);
    }

    uint64_t v38 = a3[51];
    uint64_t v39 = a3[52];
    __swift_project_boxed_opaque_existential_1(a3 + 48, v38);
    uint64_t v40 = a5 + *(int *)(type metadata accessor for PairingRelationship() + 20);
    uint64_t v41 = *(void *)(v40 + 8);
    char v42 = *(unsigned char *)(v40 + 48);
    uint64_t v43 = *(void *)(v40 + 160);
    uint64_t v44 = *(void *)(v40 + 168);
    id v80 = *(id *)v40;
    uint64_t v81 = v41;
    uint64_t v82 = v43;
    uint64_t v83 = v44;
    char v84 = v42;
    long long v85 = *(_OWORD *)(v40 + 32);
    uint64_t v78 = 0;
    char v79 = 2;
    char v45 = *(void (**)(id *, uint64_t *, uint64_t, uint64_t))(v39 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45(&v80, &v78, v38, v39);
    sub_25B116D08(a1, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return a6();
}

BOOL sub_25B167570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = a1 + *(int *)(type metadata accessor for Replicator.SyncItem(0) + 20);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, v11, v4);
  v12(v8, a2, v4);
  sub_25B1875E0((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
  LOBYTE(a2) = sub_25B290580();
  id v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v13(v10, v4);
  return (a2 & 1) == 0;
}

void sub_25B167714(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v78 = a6;
  uint64_t v76 = a5;
  uint64_t v81 = a7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v11 - 8);
  id v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PairingRelationship();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v75 = (uint64_t)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v77 = (uint64_t)&v73 - v19;
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v73 - v20;
  swift_beginAccess();
  sub_25B10FF48((uint64_t)(a1 + 24), (uint64_t)v84);
  uint64_t v22 = v85;
  uint64_t v23 = v86;
  __swift_project_boxed_opaque_existential_1(v84, v85);
  uint64_t v24 = *(void *)(v23 + 8);
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  MetadataStoring.pairingRelationship(remoteDeviceID:)(a2, a3, v22, v24, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_25B116DE0((uint64_t)v13, &qword_26A4D9610);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_25B290190();
    __swift_project_value_buffer(v25, (uint64_t)qword_26A4EB150);
    swift_retain_n();
    unint64_t v26 = v80;
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_25B290160();
    os_log_type_t v28 = sub_25B290880();
    BOOL v29 = os_log_type_enabled(v27, v28);
    int v30 = v81;
    if (v29)
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      v84[0] = v32;
      *(_DWORD *)uint64_t v31 = 136446466;
      unint64_t v33 = v30;
      uint64_t v34 = a1[66];
      unint64_t v35 = a1[67];
      swift_bridgeObjectRetain();
      uint64_t v83 = sub_25B288E98(v34, v35, v84);
      sub_25B2909C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v83 = sub_25B288E98(v79, v26, v84);
      int v30 = v33;
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25B107000, v27, v28, "%{public}s Cannot pair with a device we have not already discovered: %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v32, -1, -1);
      MEMORY[0x261160890](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    char v49 = 1;
  }
  else
  {
    sub_25B18095C((uint64_t)v13, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
    unint64_t v36 = &v21[*(int *)(v14 + 20)];
    unint64_t v37 = *((void *)v36 + 4);
    unint64_t v38 = *((void *)v36 + 5);
    BOOL v39 = v37 < 4 || v38 > 0xF;
    uint64_t v40 = (uint64_t)v21;
    if (v39)
    {
      int v30 = v81;
      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_25B290190();
      __swift_project_value_buffer(v41, (uint64_t)qword_26A4EB150);
      uint64_t v42 = v77;
      sub_25B1806D0(v40, v77, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      swift_retain_n();
      uint64_t v43 = sub_25B290160();
      os_log_type_t v44 = sub_25B290880();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v74 = (char *)v40;
        uint64_t v46 = v45;
        uint64_t v80 = swift_slowAlloc();
        v84[0] = v80;
        *(_DWORD *)uint64_t v46 = 136446466;
        uint64_t v47 = a1[66];
        unint64_t v48 = a1[67];
        swift_bridgeObjectRetain();
        uint64_t v83 = sub_25B288E98(v47, v48, v84);
        sub_25B2909C0();
        char v49 = 2;
        swift_release_n();
        int v30 = v81;
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2082;
        sub_25B1806D0(v42, v75, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v50 = sub_25B290600();
        uint64_t v83 = sub_25B288E98(v50, v51, v84);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B180A5C(v42, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        _os_log_impl(&dword_25B107000, v43, v44, "%{public}s Cannot pair with a device that has an incompatible protocol version: %{public}s", (uint8_t *)v46, 0x16u);
        uint64_t v52 = v80;
        swift_arrayDestroy();
        MEMORY[0x261160890](v52, -1, -1);
        MEMORY[0x261160890](v46, -1, -1);

        uint64_t v53 = (uint64_t)v74;
      }
      else
      {

        sub_25B180A5C(v42, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        char v49 = 2;
        swift_release_n();
        uint64_t v53 = v40;
      }
      sub_25B180A5C(v53, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    }
    else
    {
      uint64_t v74 = v21;
      uint64_t v54 = *((void *)v36 + 1);
      uint64_t v55 = v36[48];
      uint64_t v57 = *((void *)v36 + 20);
      uint64_t v56 = *((void *)v36 + 21);
      uint64_t v58 = *a4;
      uint64_t v59 = a4[1];
      *a4 = *(void *)v36;
      a4[1] = v54;
      a4[2] = v57;
      a4[3] = v56;
      a4[4] = v55;
      a4[5] = v37;
      a4[6] = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B11641C(v58, v59);
      uint64_t v60 = a1 + 72;
      swift_beginAccess();
      uint64_t v61 = a1[72];
      if (*(void *)(v61 + 16))
      {
        uint64_t v62 = v80;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v63 = v79;
        unint64_t v64 = sub_25B18A634(v79, v62);
        if (v65)
        {
          char v66 = *(void **)(*(void *)(v61 + 56) + 8 * v64);
          swift_bridgeObjectRetain();
        }
        else
        {
          char v66 = (void *)MEMORY[0x263F8EE78];
        }
        int v30 = v81;
        uint64_t v67 = (uint64_t)v74;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v66 = (void *)MEMORY[0x263F8EE78];
        uint64_t v62 = v80;
        int v30 = v81;
        uint64_t v67 = (uint64_t)v74;
        uint64_t v63 = v79;
      }
      uint64_t v68 = swift_allocObject();
      *(void *)(v68 + 16) = v76;
      *(void *)(v68 + 24) = v78;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v66 = sub_25B21874C(0, v66[2] + 1, 1, v66);
      }
      unint64_t v70 = v66[2];
      unint64_t v69 = v66[3];
      if (v70 >= v69 >> 1) {
        char v66 = sub_25B21874C((void *)(v69 > 1), v70 + 1, 1, v66);
      }
      v66[2] = v70 + 1;
      uint64_t v71 = &v66[2 * v70];
      void v71[4] = sub_25B184B48;
      v71[5] = v68;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v82 = *v60;
      uint64_t *v60 = 0x8000000000000000;
      sub_25B220A48((uint64_t)v66, v63, v62, isUniquelyReferenced_nonNull_native);
      uint64_t *v60 = v82;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_25B180A5C(v67, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      char v49 = 8;
    }
  }
  *int v30 = v49;
}

void sub_25B167FD4(void (*a1)(void *, uint64_t), uint64_t a2, char a3)
{
  sub_25B182988();
  uint64_t v5 = (void *)swift_allocError();
  *uint64_t v6 = a3;
  a1(v5, 1);
}

uint64_t sub_25B168048(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + *(int *)(type metadata accessor for PairingRelationship() + 20);
  uint64_t v6 = *(void *)(v5 + 8);
  char v7 = *(unsigned char *)(v5 + 48);
  uint64_t v8 = *(void *)(v5 + 160);
  uint64_t v9 = *(void *)(v5 + 168);
  *(void *)&long long v15 = *(void *)v5;
  *((void *)&v15 + 1) = v6;
  uint64_t v16 = v8;
  uint64_t v17 = v9;
  char v18 = v7;
  long long v19 = *(_OWORD *)(v5 + 32);
  v14[0] = 0;
  v14[1] = 0;
  uint64_t v12 = 0;
  char v13 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25B145D20(&v15, v14, &v12);
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_bridgeObjectRelease();
  return a1(v10);
}

uint64_t sub_25B168108()
{
  uint64_t v0 = sub_25B290410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void **)(result + 232);
    *uint64_t v3 = v5;
    (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F0E0], v0);
    id v6 = v5;
    LOBYTE(v5) = sub_25B290440();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v1 + 8))(v3, v0);
    if (v5)
    {
      uint64_t v7 = sub_25B124070();
      sub_25B12946C(v7);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_25B168254(char *a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v32 = a1;
  unint64_t v33 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25B290000();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int v30 = (char *)&v29 - v13;
  sub_25B10FF48(a3 + 304, (uint64_t)v37);
  uint64_t v14 = v38;
  uint64_t v15 = v39;
  __swift_project_boxed_opaque_existential_1(v37, (uint64_t)v38);
  uint64_t v16 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8) + 48);
  swift_beginAccess();
  sub_25B10FF48(a3 + 192, (uint64_t)v34);
  uint64_t v17 = v35;
  uint64_t v18 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  char v19 = MetadataStoring.hasRecords(from:)(v16, v17, *(void *)(v18 + 8));
  sub_25B285454(v16, v33, v19 & 1, v14, v15, (uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_25B116DE0((uint64_t)v8, &qword_26A4D91F8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }
  else
  {
    unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v22 = v30;
    v21(v30, v8, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    sub_25B1875E0(&qword_26A4DB030, MEMORY[0x263F07490]);
    uint64_t v23 = v32;
    char v24 = sub_25B290560();
    uint64_t v25 = v31;
    if (v24)
    {
      unint64_t v26 = v31;
      uint64_t v27 = v23;
    }
    else
    {
      unint64_t v26 = v31;
      uint64_t v27 = v22;
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v26, v27, v9);
    os_log_type_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v23, v9);
    v28(v22, v9);
    return ((uint64_t (*)(char *, char *, uint64_t))v21)(v23, v25, v9);
  }
}

uint64_t sub_25B168578()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  uint64_t v156 = (uint64_t)&v131 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v165 = (uint64_t)&v131 - v3;
  uint64_t v4 = type metadata accessor for PairingRelationship();
  uint64_t v149 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v145 = (uint64_t)&v131 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v147 = (uint64_t)&v131 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v144 = (uint64_t)&v131 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EF0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  unint64_t v158 = (char *)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v131 - v16;
  uint64_t v163 = sub_25B290000();
  uint64_t v18 = *(char **)(v163 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v163);
  uint64_t v142 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v157 = (char *)&v131 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v148 = (char *)&v131 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v151 = (char *)&v131 - v25;
  uint64_t v26 = sub_25B290410();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (uint64_t *)((char *)&v131 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v152 = (char *)result;
  uint64_t v31 = *(void **)(result + 232);
  *uint64_t v29 = v31;
  (*(void (**)(void *, void, uint64_t))(v27 + 104))(v29, *MEMORY[0x263F8F0E0], v26);
  id v32 = v31;
  LOBYTE(v31) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v27 + 8))(v29, v26);
  if ((v31 & 1) == 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (qword_26A4D98C0 != -1) {
LABEL_53:
  }
    swift_once();
  uint64_t v33 = sub_25B290190();
  uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_26A4EB150);
  uint64_t v35 = v152;
  swift_retain();
  uint64_t v141 = v34;
  uint64_t v36 = sub_25B290160();
  os_log_type_t v37 = sub_25B2908A0();
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v39 = MEMORY[0x263F8EE58];
  char v136 = v7;
  uint64_t v40 = v144;
  uint64_t v140 = v4;
  if (v38)
  {
    os_log_t v164 = v36;
    uint64_t v7 = (char *)swift_slowAlloc();
    uint64_t v162 = swift_slowAlloc();
    *(void *)&long long v168 = v162;
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v161 = v7 + 4;
    uint64_t v41 = *((void *)v35 + 66);
    unint64_t v42 = *((void *)v35 + 67);
    swift_bridgeObjectRetain();
    *(void *)&v167[0] = sub_25B288E98(v41, v42, (uint64_t *)&v168);
    sub_25B2909C0();
    swift_release();
    swift_bridgeObjectRelease();
    os_log_t v43 = v164;
    _os_log_impl(&dword_25B107000, v164, v37, "(%{public}s) Suspension timer fired", (uint8_t *)v7, 0xCu);
    uint64_t v44 = MEMORY[0x263F8EE58];
    uint64_t v45 = v162;
    swift_arrayDestroy();
    MEMORY[0x261160890](v45, -1, -1);
    MEMORY[0x261160890](v7, -1, -1);
  }
  else
  {

    swift_release();
    uint64_t v44 = v39;
  }
  uint64_t v46 = v148;
  sub_25B28FFD0();
  sub_25B28FF60();
  uint64_t v47 = (uint64_t (*)(char *, uint64_t))*((void *)v18 + 1);
  v18 += 8;
  uint64_t v4 = v163;
  unint64_t v160 = v47;
  v47(v46, v163);
  swift_beginAccess();
  os_log_type_t v155 = v35 + 192;
  sub_25B10FF48((uint64_t)(v35 + 192), (uint64_t)&v168);
  uint64_t v49 = *((void *)&v169 + 1);
  uint64_t v48 = v170;
  __swift_project_boxed_opaque_existential_1(&v168, *((uint64_t *)&v169 + 1));
  uint64_t v50 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v48 + 8) + 8) + 32))(v49);
  uint64_t v51 = *(void *)(v50 + 64);
  uint64_t v139 = v50 + 64;
  uint64_t v150 = v50;
  uint64_t v52 = 1 << *(unsigned char *)(v50 + 32);
  uint64_t v53 = -1;
  if (v52 < 64) {
    uint64_t v53 = ~(-1 << v52);
  }
  unint64_t v54 = v53 & v51;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
  uint64_t v162 = 0;
  unint64_t v55 = v54;
  uint64_t v153 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
  uint64_t v154 = v35 + 304;
  uint64_t v146 = (void (**)(char *, uint64_t, uint64_t))(v18 + 24);
  uint64_t v138 = (char *)v167 + 8;
  int64_t v143 = (unint64_t)(v52 + 63) >> 6;
  uint64_t v132 = v143 - 1;
  *(void *)&long long v56 = 136446466;
  long long v137 = v56;
  uint64_t v133 = v44 + 8;
  uint64_t v57 = (uint64_t)v158;
  uint64_t v159 = v17;
  uint64_t v161 = v18;
  while (1)
  {
    if (v55)
    {
      os_log_t v164 = (os_log_t)((v55 - 1) & v55);
      unint64_t v59 = __clz(__rbit64(v55)) | (v162 << 6);
LABEL_14:
      uint64_t v60 = v150;
      uint64_t v61 = *(void *)(v150 + 48);
      uint64_t v62 = sub_25B290080();
      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v57, v61 + *(void *)(*(void *)(v62 - 8) + 72) * v59, v62);
      uint64_t v63 = *(void *)(v60 + 56) + *(void *)(v149 + 72) * v59;
      uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
      sub_25B1806D0(v63, v57 + *(int *)(v64 + 48), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v57, 0, 1, v64);
      goto LABEL_33;
    }
    int64_t v65 = v162 + 1;
    if (__OFADD__(v162, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v65 < v143)
    {
      unint64_t v66 = *(void *)(v139 + 8 * v65);
      if (v66) {
        goto LABEL_18;
      }
      uint64_t v67 = v162 + 2;
      ++v162;
      if (v65 + 1 < v143)
      {
        unint64_t v66 = *(void *)(v139 + 8 * v67);
        if (v66) {
          goto LABEL_21;
        }
        uint64_t v162 = v65 + 1;
        if (v65 + 2 < v143)
        {
          unint64_t v66 = *(void *)(v139 + 8 * (v65 + 2));
          if (v66)
          {
            v65 += 2;
            goto LABEL_18;
          }
          uint64_t v67 = v65 + 3;
          uint64_t v162 = v65 + 2;
          if (v65 + 3 < v143) {
            break;
          }
        }
      }
    }
LABEL_32:
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v57, 1, 1, v68);
    os_log_t v164 = 0;
LABEL_33:
    sub_25B187574(v57, (uint64_t)v17, &qword_26A4D9EF0);
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v69 - 8) + 48))(v17, 1, v69) == 1)
    {
      uint64_t v130 = swift_release();
      sub_25B122E6C(v130);
      swift_release();
      return v160(v151, v4);
    }
    sub_25B18095C((uint64_t)&v17[*(int *)(v69 + 48)], v40, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B10FF48((uint64_t)v155, (uint64_t)&v168);
    uint64_t v70 = *((void *)&v169 + 1);
    uint64_t v71 = v170;
    __swift_project_boxed_opaque_existential_1(&v168, *((uint64_t *)&v169 + 1));
    char v72 = MetadataStoring.hasRecords(from:)(v40, v70, *(void *)(v71 + 8));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
    uint64_t v73 = v153;
    uint64_t v7 = v154;
    sub_25B10FF48((uint64_t)v154, (uint64_t)&v168);
    uint64_t v74 = *((void *)&v169 + 1);
    uint64_t v75 = v170;
    __swift_project_boxed_opaque_existential_1(&v168, *((uint64_t *)&v169 + 1));
    uint64_t v76 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 8);
    uint64_t v77 = v165;
    uint64_t v78 = v75;
    uint64_t v4 = v163;
    v76(v40, v72 & 1, v74, v78);
    uint64_t v79 = v40;
    uint64_t v80 = *v73;
    if ((*v73)(v77, 1, v4) == 1)
    {
      sub_25B116DE0(v165, &qword_26A4D91F8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
      sub_25B10FF48((uint64_t)v7, (uint64_t)&v168);
      uint64_t v81 = *((void *)&v169 + 1);
      uint64_t v82 = v170;
      __swift_project_boxed_opaque_existential_1(&v168, *((uint64_t *)&v169 + 1));
      uint64_t v83 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v82 + 16);
      uint64_t v84 = v156;
      uint64_t v85 = v82;
      uint64_t v4 = v163;
      v83(v79, v72 & 1, v81, v85);
      if (v80(v84, 1, v4) == 1)
      {
        sub_25B180A5C(v79, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        sub_25B116DE0(v156, &qword_26A4D91F8);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
        uint64_t v40 = v79;
        uint64_t v57 = (uint64_t)v158;
        uint64_t v17 = v159;
        uint64_t v18 = v161;
        goto LABEL_11;
      }
      uint64_t v86 = v142;
      (*v146)(v142, v156, v4);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
      id v87 = v148;
      sub_25B28FF60();
      sub_25B1875E0(&qword_26A4DB030, MEMORY[0x263F07490]);
      char v88 = sub_25B290560();
      os_log_t v89 = v87;
      uint64_t v90 = (void (*)(char *, uint64_t))v160;
      uint64_t v18 = v161;
      v160(v89, v4);
      uint64_t v91 = v145;
      if (v88)
      {
        v90(v86, v4);
        uint64_t v40 = v144;
        sub_25B180A5C(v144, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v57 = (uint64_t)v158;
        uint64_t v17 = v159;
        goto LABEL_11;
      }
      uint64_t v40 = v144;
      uint64_t v104 = (uint64_t)v136;
      sub_25B1806D0(v144, (uint64_t)v136, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v7 = v152;
      swift_retain();
      uint64_t v105 = sub_25B290160();
      os_log_type_t v106 = sub_25B2908A0();
      int v107 = v106;
      if (os_log_type_enabled(v105, v106))
      {
        uint64_t v108 = swift_slowAlloc();
        uint64_t v135 = swift_slowAlloc();
        *(void *)&long long v168 = v135;
        *(_DWORD *)uint64_t v108 = v137;
        int v134 = v107;
        uint64_t v109 = *((void *)v7 + 66);
        unint64_t v110 = *((void *)v7 + 67);
        swift_bridgeObjectRetain();
        *(void *)&v167[0] = sub_25B288E98(v109, v110, (uint64_t *)&v168);
        sub_25B2909C0();
        swift_release();
        uint64_t v18 = v161;
        swift_bridgeObjectRelease();
        *(_WORD *)(v108 + 12) = 2080;
        sub_25B1806D0(v104, v91, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v111 = v140;
        uint64_t v112 = sub_25B290600();
        *(void *)&v167[0] = sub_25B288E98(v112, v113, (uint64_t *)&v168);
        uint64_t v40 = v144;
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        uint64_t v114 = v104;
        uint64_t v115 = v145;
        sub_25B180A5C(v114, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        _os_log_impl(&dword_25B107000, v105, (os_log_type_t)v134, "(%{public}s) Unpairing inactive relationship: %s", (uint8_t *)v108, 0x16u);
        uint64_t v116 = v135;
        swift_arrayDestroy();
        MEMORY[0x261160890](v116, -1, -1);
        MEMORY[0x261160890](v108, -1, -1);
      }
      else
      {
        swift_release();
        sub_25B180A5C(v104, (uint64_t (*)(void))type metadata accessor for PairingRelationship);

        uint64_t v115 = v91;
        uint64_t v111 = v140;
      }
      uint64_t v17 = v159;
      uint64_t v118 = (long long *)(v40 + *(int *)(v111 + 20));
      long long v119 = v118[7];
      long long v120 = v118[9];
      long long v176 = v118[8];
      long long v177 = v120;
      long long v121 = v118[9];
      long long v178 = v118[10];
      long long v122 = v118[3];
      long long v123 = v118[5];
      long long v172 = v118[4];
      long long v173 = v123;
      long long v124 = v118[5];
      long long v125 = v118[7];
      long long v174 = v118[6];
      long long v175 = v125;
      long long v126 = v118[1];
      long long v168 = *v118;
      long long v169 = v126;
      long long v127 = v118[3];
      long long v129 = *v118;
      long long v128 = v118[1];
      long long v170 = v118[2];
      long long v171 = v127;
      v167[8] = v176;
      v167[9] = v121;
      v167[10] = v118[10];
      v167[4] = v172;
      v167[5] = v124;
      v167[6] = v174;
      v167[7] = v119;
      v167[0] = v129;
      v167[1] = v128;
      v167[2] = v170;
      v167[3] = v122;
      v166[0] = 0;
      v166[1] = 0;
      sub_25B1172F8((uint64_t)&v168);
      sub_25B148078(v167, (uint64_t)v166, 2, 1, v115);
      sub_25B11DEBC((uint64_t)&v168);
      sub_25B180A5C(v115, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v4 = v163;
      v160(v142, v163);
      uint64_t v117 = v40;
    }
    else
    {
      (*v146)(v157, v165, v4);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
      uint64_t v92 = v148;
      sub_25B28FF60();
      sub_25B1875E0(&qword_26A4DB030, MEMORY[0x263F07490]);
      char v93 = sub_25B290560();
      uint64_t v94 = (void (*)(char *, uint64_t))v160;
      uint64_t v18 = v161;
      v160(v92, v4);
      uint64_t v95 = v147;
      uint64_t v40 = v79;
      uint64_t v17 = v159;
      if ((v93 & 1) == 0)
      {
        sub_25B1806D0(v40, v147, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        swift_retain();
        unint64_t v96 = sub_25B290160();
        os_log_type_t v97 = sub_25B2908A0();
        if (os_log_type_enabled(v96, v97))
        {
          uint64_t v98 = swift_slowAlloc();
          uint64_t v99 = swift_slowAlloc();
          *(void *)&long long v168 = v99;
          *(_DWORD *)uint64_t v98 = v137;
          uint64_t v100 = *((void *)v152 + 66);
          unint64_t v101 = *((void *)v152 + 67);
          swift_bridgeObjectRetain();
          *(void *)&v167[0] = sub_25B288E98(v100, v101, (uint64_t *)&v168);
          sub_25B2909C0();
          swift_release();
          uint64_t v18 = v161;
          swift_bridgeObjectRelease();
          *(_WORD *)(v98 + 12) = 2080;
          sub_25B1806D0(v147, v145, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          uint64_t v102 = sub_25B290600();
          *(void *)&v167[0] = sub_25B288E98(v102, v103, (uint64_t *)&v168);
          uint64_t v40 = v144;
          sub_25B2909C0();
          uint64_t v17 = v159;
          swift_bridgeObjectRelease();
          sub_25B180A5C(v147, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          _os_log_impl(&dword_25B107000, v96, v97, "(%{public}s) Discarding data for inactive relationship: %s", (uint8_t *)v98, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x261160890](v99, -1, -1);
          MEMORY[0x261160890](v98, -1, -1);
        }
        else
        {
          swift_release();
          sub_25B180A5C(v95, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        }

        sub_25B130988(v40);
        uint64_t v4 = v163;
        uint64_t v94 = (void (*)(char *, uint64_t))v160;
      }
      v94(v157, v4);
      uint64_t v117 = v40;
    }
    sub_25B180A5C(v117, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v57 = (uint64_t)v158;
LABEL_11:
    uint64_t v58 = sub_25B290080();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v58 - 8) + 8))(v17, v58);
    unint64_t v55 = (unint64_t)v164;
  }
  unint64_t v66 = *(void *)(v139 + 8 * v67);
  if (v66)
  {
LABEL_21:
    int64_t v65 = v67;
LABEL_18:
    os_log_t v164 = (os_log_t)((v66 - 1) & v66);
    unint64_t v59 = __clz(__rbit64(v66)) + (v65 << 6);
    uint64_t v162 = v65;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v65 = v67 + 1;
    if (__OFADD__(v67, 1)) {
      break;
    }
    if (v65 >= v143)
    {
      uint64_t v162 = v132;
      goto LABEL_32;
    }
    unint64_t v66 = *(void *)(v139 + 8 * v65);
    ++v67;
    if (v66) {
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_25B1697AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  sub_25B10FF48(v4 + 192, (uint64_t)v13);
  uint64_t v10 = v14;
  uint64_t v9 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v9 + 8) + 8) + 32))(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(a3) = sub_25B17CB94(v11, a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return (a3 & 1) == 0;
}

BOOL sub_25B1698A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v53 = a4;
  uint64_t v54 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  unint64_t v59 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v58 = (char *)&v51 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v52 = (char *)&v51 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v51 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v51 - v19;
  uint64_t v60 = v18;
  uint64_t v21 = *(int *)(v18 + 48);
  uint64_t v22 = (char *)&v51 + v21 - v19;
  uint64_t v23 = a1 + v21;
  uint64_t v24 = sub_25B290080();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void (**)(void))(v25 + 16);
  uint64_t v62 = a1;
  long long v56 = v26;
  uint64_t v57 = v25;
  ((void (*)(char *, uint64_t, uint64_t))v26)(v20, a1, v24);
  uint64_t v61 = v23;
  sub_25B1806D0(v23, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  uint64_t v55 = type metadata accessor for PairingRelationship();
  uint64_t v27 = &v22[*(int *)(v55 + 20)];
  uint64_t v29 = *(void *)v27;
  uint64_t v28 = *((void *)v27 + 1);
  swift_bridgeObjectRetain();
  sub_25B180A5C((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  if (v29 == a2 && v28 == a3) {
    char v31 = 1;
  }
  else {
    char v31 = sub_25B290FB0();
  }
  swift_bridgeObjectRelease();
  uint64_t v57 = *(void *)(v57 + 8);
  ((void (*)(char *, uint64_t))v57)(v20, v24);
  uint64_t v32 = v60;
  uint64_t v33 = (uint64_t)&v17[*(int *)(v60 + 48)];
  uint64_t v34 = v56;
  ((void (*)(char *, uint64_t, uint64_t))v56)(v17, v62, v24);
  sub_25B1806D0(v61, v33, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  if (v31)
  {
    sub_25B116DE0((uint64_t)v17, &qword_26A4D9EE8);
    char v35 = 0;
  }
  else
  {
    uint64_t v36 = v52;
    uint64_t v37 = (uint64_t)&v52[*(int *)(v32 + 48)];
    ((void (*)(char *, char *, uint64_t))v34)(v52, v17, v24);
    sub_25B1806D0(v33, v37, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    BOOL v38 = (uint64_t *)(v37 + *(int *)(v55 + 20));
    uint64_t v40 = *v38;
    uint64_t v39 = v38[1];
    swift_bridgeObjectRetain();
    sub_25B180A5C(v37, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    if (v40 == v53 && v39 == v54)
    {
      swift_bridgeObjectRelease();
      char v35 = 0;
    }
    else
    {
      char v42 = sub_25B290FB0();
      swift_bridgeObjectRelease();
      char v35 = v42 ^ 1;
    }
    sub_25B116DE0((uint64_t)v17, &qword_26A4D9EE8);
    ((void (*)(char *, uint64_t))v57)(v36, v24);
    uint64_t v32 = v60;
  }
  uint64_t v43 = (uint64_t)v58;
  uint64_t v44 = (uint64_t)&v58[*(int *)(v32 + 48)];
  ((void (*)(char *, uint64_t, uint64_t))v34)(v58, v62, v24);
  sub_25B1806D0(v61, v44, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  if (v35)
  {
    uint64_t v45 = (uint64_t)&v59[*(int *)(v32 + 48)];
    v34();
    sub_25B1806D0(v44, v45, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v46 = (uint64_t *)(v45 + *(int *)(v55 + 32));
    uint64_t v47 = *v46;
    unint64_t v48 = v46[1];
    sub_25B120090(*v46, v48);
    sub_25B180A5C(v45, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    BOOL v49 = v48 == 2;
    if (v48 != 2) {
      sub_25B120090(v47, v48);
    }
    sub_25B1200A4(v47, v48);
    sub_25B1200A4(0, 2uLL);
    sub_25B1200A4(v47, v48);
    sub_25B116DE0(v43, &qword_26A4D9EE8);
    ((void (*)(char *, uint64_t))v57)(v59, v24);
  }
  else
  {
    sub_25B116DE0(v43, &qword_26A4D9EE8);
    return 0;
  }
  return v49;
}

uint64_t sub_25B169D88(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v2 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_25B169DD8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B187628(a1, (uint64_t)v4, &qword_26A4D9610);
  uint64_t v5 = type metadata accessor for PairingRelationship();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = (uint64_t *)&v4[*(int *)(v5 + 32)];
    uint64_t v8 = *v7;
    unint64_t v9 = v7[1];
    sub_25B120090(*v7, v9);
    sub_25B180A5C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    v10[0] = v8;
    v10[1] = v9;
    return sub_25B290600();
  }
  return result;
}

uint64_t sub_25B169EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B187628(a1, (uint64_t)v6, &qword_26A4D9610);
  uint64_t v7 = type metadata accessor for PairingRelationship();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = sub_25B290080();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a2, v6, v9);
    return sub_25B180A5C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  }
  return result;
}

void sub_25B16A024()
{
  uint64_t v1 = v0;
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  unint64_t v2 = *(void *)(v102 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v102);
  uint64_t v101 = (uint64_t)v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v100 = (char *)v92 - v5;
  uint64_t v95 = type metadata accessor for PairingRelationship();
  uint64_t v103 = *(void *)(v95 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v95);
  uint64_t v96 = (uint64_t)v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v94 = (uint64_t)v92 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v92 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v98 = (char *)v92 - v13;
  uint64_t v14 = sub_25B290410();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (void *)((char *)v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(void **)(v1 + 232);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F0E0], v14);
  id v19 = v18;
  LOBYTE(v18) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_34:
    swift_once();
    goto LABEL_12;
  }
  sub_25B16ACB8(0, 0);
  swift_beginAccess();
  sub_25B10FF48(v1 + 192, (uint64_t)&v107);
  uint64_t v21 = *((void *)&v108 + 1);
  uint64_t v20 = v109;
  __swift_project_boxed_opaque_existential_1(&v107, *((uint64_t *)&v108 + 1));
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v20 + 8) + 8) + 32))(v21);
  sub_25B176138(v22, (uint64_t (*)(char *, unint64_t, uint64_t))sub_25B176DC4);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
  uint64_t v23 = swift_bridgeObjectRetain();
  size_t v24 = sub_25B225620(v23);
  swift_release();
  *(void *)&long long v107 = v24;
  sub_25B178114((void **)&v107);
  swift_release();
  uint64_t v25 = v107;
  int64_t v26 = *(void *)(v107 + 16);
  uint64_t v97 = v1;
  if (v26)
  {
    char v93 = v12;
    *(void *)&long long v107 = MEMORY[0x263F8EE78];
    sub_25B22411C(0, v26, 0);
    uint64_t v27 = *(unsigned __int8 *)(v2 + 80);
    v92[1] = v25;
    uint64_t v28 = v25 + ((v27 + 32) & ~v27);
    *(void *)&long long v99 = *(void *)(v2 + 72);
    uint64_t v29 = (uint64_t)v98;
    unint64_t v2 = (unint64_t)v100;
    uint64_t v30 = v101;
    do
    {
      unint64_t v104 = v26;
      sub_25B187628(v28, v2, &qword_26A4D9EE8);
      uint64_t v31 = *(int *)(v102 + 48);
      uint64_t v32 = v30 + v31;
      uint64_t v33 = v2 + v31;
      uint64_t v34 = sub_25B290080();
      uint64_t v35 = *(void *)(v34 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 16))(v30, v2, v34);
      sub_25B1806D0(v33, v32, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      sub_25B18095C(v32, v29, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v30, v34);
      sub_25B116DE0(v2, &qword_26A4D9EE8);
      uint64_t v17 = (void *)v107;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25B22411C(0, v17[2] + 1, 1);
        uint64_t v29 = (uint64_t)v98;
        uint64_t v17 = (void *)v107;
      }
      unint64_t v37 = v17[2];
      unint64_t v36 = v17[3];
      unint64_t v38 = v104;
      if (v37 >= v36 >> 1)
      {
        sub_25B22411C(v36 > 1, v37 + 1, 1);
        uint64_t v29 = (uint64_t)v98;
        uint64_t v17 = (void *)v107;
      }
      void v17[2] = v37 + 1;
      sub_25B18095C(v29, (uint64_t)v17+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(void *)(v103 + 72) * v37, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      v28 += v99;
      int64_t v26 = v38 - 1;
    }
    while (v26);
    swift_release();
    uint64_t v1 = v97;
    uint64_t v12 = v93;
  }
  else
  {
    swift_release();
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
  }
  if (qword_26A4DA038 != -1) {
    goto LABEL_34;
  }
LABEL_12:
  uint64_t v39 = qword_26A4EB1F0;
  if (!*(void *)(qword_26A4EB1F0 + 16) || (unint64_t v40 = sub_25B18A868(*(unsigned char *)(v1 + 96)), (v41 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v58 = sub_25B290190();
    __swift_project_value_buffer(v58, (uint64_t)qword_26A4EB150);
    swift_retain();
    unint64_t v59 = sub_25B290160();
    os_log_type_t v60 = sub_25B290880();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      *(void *)&long long v107 = v62;
      *(_DWORD *)uint64_t v61 = 136446210;
      uint64_t v63 = *(void *)(v1 + 528);
      unint64_t v64 = *(void *)(v1 + 536);
      swift_bridgeObjectRetain();
      *(void *)&v106[0] = sub_25B288E98(v63, v64, (uint64_t *)&v107);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v59, v60, "(%{public}s) Cannot enforce maximum device limit for unknown device type", v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v62, -1, -1);
      MEMORY[0x261160890](v61, -1, -1);
    }
    else
    {

      swift_release();
    }
    return;
  }
  uint64_t v42 = *(void *)(*(void *)(v39 + 56) + 8 * v40);
  uint64_t v43 = v17[2];
  uint64_t v44 = v43 - v42;
  if (__OFSUB__(v43, v42))
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = v44 - 1;
    if (v44 < 1)
    {
LABEL_32:
      swift_bridgeObjectRelease();
      return;
    }
    if (qword_26A4D98C0 == -1) {
      goto LABEL_17;
    }
  }
  swift_once();
LABEL_17:
  uint64_t v45 = sub_25B290190();
  uint64_t v46 = __swift_project_value_buffer(v45, (uint64_t)qword_26A4EB150);
  uint64_t v47 = v97;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v102 = v46;
  unint64_t v48 = sub_25B290160();
  os_log_type_t v49 = sub_25B2908A0();
  int v50 = v49;
  BOOL v51 = os_log_type_enabled(v48, v49);
  char v93 = v12;
  unint64_t v104 = v2;
  if (v51)
  {
    uint64_t v52 = swift_slowAlloc();
    LODWORD(v100) = v50;
    uint64_t v53 = v52;
    uint64_t v101 = swift_slowAlloc();
    *(void *)&long long v107 = v101;
    *(_DWORD *)uint64_t v53 = 136446722;
    uint64_t v54 = *(void *)(v47 + 528);
    unint64_t v55 = *(void *)(v47 + 536);
    swift_bridgeObjectRetain();
    *(void *)&v106[0] = sub_25B288E98(v54, v55, (uint64_t *)&v107);
    sub_25B2909C0();
    swift_release();
    uint64_t v12 = v93;
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2050;
    *(void *)&v106[0] = v43;
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 22) = 2050;
    *(void *)&v106[0] = v44;
    unint64_t v2 = v104;
    sub_25B2909C0();
    _os_log_impl(&dword_25B107000, v48, (os_log_type_t)v100, "(%{public}s) Too many paired devices (%{public}ld; unpairing %{public}ld",
      (uint8_t *)v53,
      0x20u);
    uint64_t v56 = v101;
    swift_arrayDestroy();
    MEMORY[0x261160890](v56, -1, -1);
    MEMORY[0x261160890](v53, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v65 = v95;
  uint64_t v66 = v96;
  uint64_t v67 = v94;
  if (v2 < v17[2])
  {
    uint64_t v68 = (uint64_t)v17 + ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80));
    uint64_t v69 = *(void *)(v103 + 72);
    uint64_t v100 = (char *)v106 + 8;
    uint64_t v101 = v69;
    *(void *)&long long v57 = 136446466;
    long long v99 = v57;
    uint64_t v98 = (char *)(MEMORY[0x263F8EE58] + 8);
    while (1)
    {
      sub_25B1806D0(v68, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      sub_25B1806D0((uint64_t)v12, v67, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      swift_retain();
      uint64_t v70 = sub_25B290160();
      os_log_type_t v71 = sub_25B2908A0();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        *(void *)&long long v107 = v73;
        *(_DWORD *)uint64_t v72 = v99;
        uint64_t v74 = *(void *)(v97 + 528);
        unint64_t v75 = *(void *)(v97 + 536);
        swift_bridgeObjectRetain();
        *(void *)&v106[0] = sub_25B288E98(v74, v75, (uint64_t *)&v107);
        uint64_t v103 = v68;
        sub_25B2909C0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v72 + 12) = 2082;
        sub_25B1806D0(v94, v96, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v76 = sub_25B290600();
        *(void *)&v106[0] = sub_25B288E98(v76, v77, (uint64_t *)&v107);
        uint64_t v68 = v103;
        uint64_t v66 = v96;
        sub_25B2909C0();
        uint64_t v67 = v94;
        swift_bridgeObjectRelease();
        sub_25B180A5C(v67, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        _os_log_impl(&dword_25B107000, v70, v71, "(%{public}s) Unpairing relationship (%{public}s", (uint8_t *)v72, 0x16u);
        swift_arrayDestroy();
        uint64_t v78 = v73;
        uint64_t v12 = v93;
        MEMORY[0x261160890](v78, -1, -1);
        uint64_t v79 = v72;
        uint64_t v65 = v95;
        MEMORY[0x261160890](v79, -1, -1);
      }
      else
      {
        swift_release();
        sub_25B180A5C(v67, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      }

      uint64_t v80 = &v12[*(int *)(v65 + 20)];
      long long v81 = *((_OWORD *)v80 + 7);
      long long v82 = *((_OWORD *)v80 + 9);
      long long v115 = *((_OWORD *)v80 + 8);
      long long v116 = v82;
      long long v83 = *((_OWORD *)v80 + 9);
      long long v117 = *((_OWORD *)v80 + 10);
      long long v84 = *((_OWORD *)v80 + 3);
      long long v85 = *((_OWORD *)v80 + 5);
      long long v111 = *((_OWORD *)v80 + 4);
      long long v112 = v85;
      long long v86 = *((_OWORD *)v80 + 5);
      long long v87 = *((_OWORD *)v80 + 7);
      long long v113 = *((_OWORD *)v80 + 6);
      long long v114 = v87;
      long long v88 = *((_OWORD *)v80 + 1);
      long long v107 = *(_OWORD *)v80;
      long long v108 = v88;
      long long v89 = *((_OWORD *)v80 + 3);
      long long v91 = *(_OWORD *)v80;
      long long v90 = *((_OWORD *)v80 + 1);
      long long v109 = *((_OWORD *)v80 + 2);
      long long v110 = v89;
      v106[8] = v115;
      v106[9] = v83;
      v106[10] = *((_OWORD *)v80 + 10);
      v106[4] = v111;
      v106[5] = v86;
      v106[6] = v113;
      v106[7] = v81;
      v106[0] = v91;
      v106[1] = v90;
      v106[2] = v109;
      v106[3] = v84;
      v105[0] = 0;
      v105[1] = 0;
      sub_25B1172F8((uint64_t)&v107);
      sub_25B148078(v106, v105, 2, 0);
      sub_25B11DEBC((uint64_t)&v107);
      sub_25B180A5C(v66, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      sub_25B180A5C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      if (!v104) {
        break;
      }
      --v104;
      v68 += v101;
    }
    goto LABEL_32;
  }
  __break(1u);
  swift_release();
  __break(1u);
}

uint64_t sub_25B16ACB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v63 = a2;
  uint64_t v62 = a1;
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v4 = MEMORY[0x270FA5388](v74);
  uint64_t v73 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v72 = (uint64_t)&v60 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  os_log_type_t v71 = (char *)&v60 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v70 = (char *)&v60 - v10;
  uint64_t v11 = type metadata accessor for PairingRelationship();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25B290410();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (uint64_t *)((char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v19 = *(void **)(v3 + 232);
  void *v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F8F0E0], v15);
  id v20 = v19;
  LOBYTE(v19) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0) {
    goto LABEL_37;
  }
  swift_beginAccess();
  sub_25B10FF48(v3 + 192, (uint64_t)&v83);
  uint64_t v22 = v84;
  uint64_t v23 = v85;
  __swift_project_boxed_opaque_existential_1(&v83, v84);
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v23 + 8) + 8) + 32))(v22);
  uint64_t v25 = sub_25B176138(v24, (uint64_t (*)(char *, unint64_t, uint64_t))sub_25B176924);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
  int64_t v26 = *(void *)(v25 + 16);
  if (!v26)
  {
    swift_release();
    uint64_t v49 = MEMORY[0x263F8EE78];
LABEL_28:
    swift_beginAccess();
    sub_25B187628(v3 + 56, (uint64_t)&v83, &qword_26A4D9DE8);
    if (v84)
    {
      sub_25B10FF48((uint64_t)&v83, (uint64_t)v80);
      sub_25B116DE0((uint64_t)&v83, &qword_26A4D9DE8);
      uint64_t v58 = v81;
      uint64_t v59 = v82;
      __swift_project_boxed_opaque_existential_1(v80, v81);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 32))(v49, v62, v63, v58, v59);
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
    }
    else
    {
      swift_bridgeObjectRelease();
      return sub_25B116DE0((uint64_t)&v83, &qword_26A4D9DE8);
    }
  }
  uint64_t v61 = v3;
  uint64_t v83 = MEMORY[0x263F8EE78];
  sub_25B22411C(0, v26, 0);
  uint64_t result = sub_25B1A7EF0(v25);
  uint64_t v28 = result;
  uint64_t v29 = 0;
  uint64_t v30 = v25 + 64;
  char v31 = *(unsigned char *)(v25 + 32);
  uint64_t v60 = v25 + 88;
  uint64_t v69 = v12;
  uint64_t v68 = v14;
  uint64_t v67 = v25;
  int64_t v64 = v26;
  uint64_t v65 = v27;
  uint64_t v66 = v25 + 64;
  while ((v28 & 0x8000000000000000) == 0 && v28 < 1 << v31)
  {
    if ((*(void *)(v30 + 8 * ((unint64_t)v28 >> 6)) & (1 << v28)) == 0) {
      goto LABEL_32;
    }
    if (*(_DWORD *)(v25 + 36) != v27) {
      goto LABEL_33;
    }
    uint64_t v76 = 1 << v28;
    unint64_t v77 = (unint64_t)v28 >> 6;
    uint64_t v75 = v29;
    uint64_t v34 = v74;
    uint64_t v35 = (uint64_t)v70;
    uint64_t v36 = (uint64_t)&v70[*(int *)(v74 + 48)];
    uint64_t v37 = *(void *)(v25 + 48);
    uint64_t v38 = sub_25B290080();
    uint64_t v78 = *(void *)(v38 - 8);
    uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16);
    v39(v35, v37 + *(void *)(v78 + 72) * v28, v38);
    uint64_t v40 = *(void *)(v25 + 56);
    uint64_t v79 = *(void *)(v12 + 72);
    sub_25B1806D0(v40 + v79 * v28, v36, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v41 = (uint64_t)v71;
    v39((uint64_t)v71, v35, v38);
    sub_25B1806D0(v36, v41 + *(int *)(v34 + 48), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v42 = v72;
    sub_25B187574(v41, v72, &qword_26A4D9EE8);
    sub_25B116DE0(v35, &qword_26A4D9EE8);
    uint64_t v43 = *(int *)(v34 + 48);
    uint64_t v44 = v73;
    uint64_t v45 = (uint64_t)&v73[v43];
    uint64_t v46 = v42 + v43;
    v39((uint64_t)v73, v42, v38);
    uint64_t v47 = v46;
    uint64_t v48 = (uint64_t)v68;
    sub_25B1806D0(v47, v45, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B18095C(v45, v48, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v44, v38);
    sub_25B116DE0(v42, &qword_26A4D9EE8);
    uint64_t v49 = v83;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25B22411C(0, *(void *)(v49 + 16) + 1, 1);
      uint64_t v49 = v83;
    }
    unint64_t v51 = *(void *)(v49 + 16);
    unint64_t v50 = *(void *)(v49 + 24);
    uint64_t v12 = v69;
    uint64_t v25 = v67;
    if (v51 >= v50 >> 1)
    {
      sub_25B22411C(v50 > 1, v51 + 1, 1);
      uint64_t v49 = v83;
    }
    *(void *)(v49 + 16) = v51 + 1;
    uint64_t result = sub_25B18095C(v48, v49+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ v51 * v79, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    char v31 = *(unsigned char *)(v25 + 32);
    unint64_t v32 = 1 << v31;
    if (v28 >= 1 << v31) {
      goto LABEL_34;
    }
    uint64_t v30 = v66;
    unint64_t v52 = v77;
    uint64_t v53 = *(void *)(v66 + 8 * v77);
    if ((v53 & v76) == 0) {
      goto LABEL_35;
    }
    LODWORD(v27) = v65;
    if (*(_DWORD *)(v25 + 36) != v65) {
      goto LABEL_36;
    }
    unint64_t v54 = v53 & (-2 << (v28 & 0x3F));
    if (v54)
    {
      unint64_t v32 = __clz(__rbit64(v54)) | v28 & 0xFFFFFFFFFFFFFFC0;
      int64_t v33 = v64;
    }
    else
    {
      unint64_t v55 = v77 + 1;
      unint64_t v56 = (v32 + 63) >> 6;
      int64_t v33 = v64;
      if (v77 + 1 < v56)
      {
        unint64_t v57 = *(void *)(v66 + 8 * v55);
        if (!v57)
        {
          unint64_t v55 = v77 + 2;
          if (v77 + 2 >= v56) {
            goto LABEL_5;
          }
          unint64_t v57 = *(void *)(v66 + 8 * v55);
          if (!v57)
          {
            while (v56 - 3 != v52)
            {
              unint64_t v57 = *(void *)(v60 + 8 * v52++);
              if (v57)
              {
                unint64_t v55 = v52 + 2;
                goto LABEL_20;
              }
            }
            goto LABEL_5;
          }
        }
LABEL_20:
        unint64_t v32 = __clz(__rbit64(v57)) + (v55 << 6);
      }
    }
LABEL_5:
    uint64_t v29 = v75 + 1;
    uint64_t v28 = v32;
    if (v75 + 1 == v33)
    {
      swift_release();
      uint64_t v3 = v61;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25B16B4D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v139 = a1;
  uint64_t v5 = sub_25B290000();
  long long v137 = *(char **)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v134 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  MEMORY[0x270FA5388](v7 - 8);
  int64_t v143 = (char *)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9208);
  MEMORY[0x270FA5388](v141);
  uint64_t v144 = (uint64_t)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D93A8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v142 = (char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = type metadata accessor for RecordMetadata();
  uint64_t v136 = *(void *)(v147 - 8);
  MEMORY[0x270FA5388](v147);
  uint64_t v148 = (uint64_t)&v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for RecordStub();
  uint64_t v135 = *(void *)(v146 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v146);
  uint64_t v15 = (char *)&v133 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (uint64_t *)((char *)&v133 - v16);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v18 = MEMORY[0x270FA5388](v163);
  uint64_t v162 = (char *)&v133 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v161 = (uint64_t)&v133 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  unint64_t v160 = (char *)&v133 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v159 = (void (**)(char *, uint64_t, uint64_t))((char *)&v133 - v24);
  uint64_t v25 = sub_25B290080();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v169 = v25;
  uint64_t v170 = v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v168 = (uint64_t)&v133 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_25B290410();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  char v31 = (uint64_t *)((char *)&v133 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v149 = *a2;
  unint64_t v32 = *(void **)(v3 + 232);
  *char v31 = v32;
  (*(void (**)(void *, void, uint64_t))(v29 + 104))(v31, *MEMORY[0x263F8F0E0], v28);
  id v33 = v32;
  LOBYTE(v32) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v29 + 8))(v31, v28);
  if ((v32 & 1) == 0) {
    goto LABEL_90;
  }
  swift_beginAccess();
  uint64_t v145 = v3 + 192;
  sub_25B10FF48(v3 + 192, (uint64_t)&v175);
  uint64_t v36 = v176;
  uint64_t v35 = v177;
  __swift_project_boxed_opaque_existential_1(&v175, v176);
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v35 + 8) + 8) + 32))(v36);
  uint64_t v38 = sub_25B176138(v37, (uint64_t (*)(char *, unint64_t, uint64_t))sub_25B176DC4);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v175);
  int64_t v39 = *(void *)(v38 + 16);
  uint64_t v140 = v5;
  uint64_t v138 = v15;
  uint64_t v150 = v17;
  if (!v39)
  {
    swift_release();
    uint64_t v61 = MEMORY[0x263F8EE78];
LABEL_28:
    uint64_t v71 = sub_25B227C68(v61);
    swift_bridgeObjectRelease();
    uint64_t v174 = MEMORY[0x263F8EE88];
    uint64_t v72 = *(void *)(v139 + 16);
    uint64_t v73 = (uint64_t)v142;
    if (!v72)
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE88];
    }
    uint64_t v163 = v71;
    uint64_t v74 = (uint64_t *)(v3 + 240);
    uint64_t v75 = v135;
    uint64_t v76 = v139 + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
    swift_bridgeObjectRetain();
    swift_beginAccess();
    unint64_t v166 = v136 + 48;
    uint64_t v170 = *(void *)(v75 + 72);
    uint64_t v159 = (void (**)(char *, uint64_t, uint64_t))(v137 + 32);
    unint64_t v160 = v137 + 8;
    unint64_t v158 = &v172;
    *(void *)&long long v77 = 136446210;
    long long v157 = v77;
    uint64_t v156 = MEMORY[0x263F8EE58] + 8;
    uint64_t v167 = v74;
    uint64_t v162 = v137 + 48;
    while (1)
    {
      sub_25B1806D0(v76, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RecordStub);
      uint64_t v78 = *v74;
      if (!*(void *)(*v74 + 16)) {
        goto LABEL_79;
      }
      uint64_t v79 = v17[4];
      uint64_t v80 = v17[5];
      uint64_t v82 = v17[2];
      uint64_t v81 = v17[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v83 = sub_25B18A768(v82, v81, v79, v80);
      if ((v84 & 1) == 0) {
        break;
      }
      uint64_t v85 = *(void *)(*(void *)(v78 + 56) + 8 * v83);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!MEMORY[0x261160990](v85 + 16)
        || (uint64_t v86 = *(void *)(v85 + 24),
            uint64_t ObjectType = swift_getObjectType(),
            (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v86 + 8))(&v175, ObjectType, v86),
            swift_unknownObjectRelease(),
            (v175 & 1) == 0))
      {
        uint64_t v172 = MEMORY[0x263F8EE88];
        uint64_t v173 = MEMORY[0x263F8EE88];
        sub_25B10FF48(v145, (uint64_t)&v175);
        uint64_t v88 = v176;
        uint64_t v89 = v177;
        __swift_project_boxed_opaque_existential_1(&v175, v176);
        MetadataStoring.metadata(for:)(v17, v88, *(void *)(v89 + 8), v73);
        uint64_t v90 = v147;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v166)(v73, 1, v147) == 1)
        {
          sub_25B116DE0(v73, &qword_26A4D93A8);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v175);
          LODWORD(v168) = 1;
          goto LABEL_66;
        }
        uint64_t v91 = v73;
        uint64_t v92 = v148;
        sub_25B18095C(v91, v148, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v175);
        sub_25B1875E0((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
        int v93 = sub_25B290580();
        uint64_t v94 = v92;
        uint64_t v164 = *(int *)(v90 + 28);
        uint64_t v95 = *(void *)(v92 + v164);
        uint64_t v96 = v90;
        if (v95)
        {
          uint64_t v97 = (uint64_t)v143;
          uint64_t v98 = v149;
          if (v149)
          {
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            LODWORD(v165) = sub_25B11E308(v95, v98);
            swift_bridgeObjectRelease();
            goto LABEL_46;
          }
LABEL_44:
          LODWORD(v165) = 0;
        }
        else
        {
          uint64_t v97 = (uint64_t)v143;
          if (v149) {
            goto LABEL_44;
          }
          LODWORD(v165) = 1;
LABEL_46:
          swift_bridgeObjectRelease_n();
          uint64_t v94 = v148;
        }
        LODWORD(v161) = v93;
        LODWORD(v168) = v93 ^ 1;
        uint64_t v99 = v94 + *(int *)(v96 + 32);
        uint64_t v100 = (uint64_t)v150 + *(int *)(v146 + 28);
        uint64_t v101 = v144;
        uint64_t v102 = v144 + *(int *)(v141 + 48);
        sub_25B187628(v99, v144, &qword_26A4D91F8);
        sub_25B187628(v100, v102, &qword_26A4D91F8);
        uint64_t v103 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v162;
        uint64_t v104 = v140;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v162)(v101, 1, v140) == 1)
        {
          int v105 = v103(v102, 1, v104);
          uint64_t v73 = (uint64_t)v142;
          if (v105 == 1)
          {
            sub_25B116DE0(v144, &qword_26A4D91F8);
            int v106 = v165;
            if (v165)
            {
              char v107 = 1;
LABEL_56:
              sub_25B180A5C(v148, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
              uint64_t v110 = (uint64_t)v138;
              uint64_t v17 = v150;
              if ((v161 & v106 & 1) == 0 || (v107 & 1) == 0) {
                goto LABEL_66;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (qword_26A4D98C0 != -1) {
                swift_once();
              }
              uint64_t v111 = sub_25B290190();
              __swift_project_value_buffer(v111, (uint64_t)qword_26A4EB150);
              sub_25B1806D0((uint64_t)v17, v110, (uint64_t (*)(void))type metadata accessor for RecordStub);
              long long v112 = sub_25B290160();
              os_log_type_t v113 = sub_25B2908A0();
              BOOL v114 = os_log_type_enabled(v112, v113);
              uint64_t v74 = v167;
              if (v114)
              {
                long long v115 = (uint8_t *)swift_slowAlloc();
                uint64_t v168 = swift_slowAlloc();
                uint64_t v175 = v168;
                *(_DWORD *)long long v115 = v157;
                uint64_t v165 = (uint64_t)(v115 + 4);
                uint64_t v116 = Record.ID.description.getter();
                uint64_t v171 = sub_25B288E98(v116, v117, &v175);
                sub_25B2909C0();
                swift_bridgeObjectRelease();
                sub_25B180A5C((uint64_t)v138, (uint64_t (*)(void))type metadata accessor for RecordStub);
                _os_log_impl(&dword_25B107000, v112, v113, "Ignoring request to replicate %{public}s; version, destination and expiration are unchanged.",
                  v115,
                  0xCu);
                uint64_t v118 = v168;
                swift_arrayDestroy();
                MEMORY[0x261160890](v118, -1, -1);
                long long v119 = v115;
                uint64_t v17 = v150;
                MEMORY[0x261160890](v119, -1, -1);

                swift_release();
              }
              else
              {

                swift_release();
                sub_25B180A5C(v110, (uint64_t (*)(void))type metadata accessor for RecordStub);
              }
              uint64_t v120 = (uint64_t)v17;
LABEL_80:
              sub_25B180A5C(v120, (uint64_t (*)(void))type metadata accessor for RecordStub);
              goto LABEL_31;
            }
LABEL_63:
            uint64_t v121 = v148;
            if (*(void *)(v148 + v164))
            {
              uint64_t v122 = swift_bridgeObjectRetain();
              uint64_t v123 = sub_25B227C68(v122);
              swift_bridgeObjectRelease();
              sub_25B16C9D8(v123);
              sub_25B180A5C(v121, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
            }
            else
            {
              sub_25B180A5C(v148, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
              swift_bridgeObjectRelease();
              uint64_t v173 = v163;
              swift_bridgeObjectRetain();
            }
            goto LABEL_66;
          }
        }
        else
        {
          sub_25B187628(v101, v97, &qword_26A4D91F8);
          if (v103(v102, 1, v104) != 1)
          {
            long long v108 = v134;
            (*v159)(v134, v102, v104);
            sub_25B1875E0(&qword_26A4DA718, MEMORY[0x263F07490]);
            char v107 = sub_25B290580();
            long long v109 = *(void (**)(char *, uint64_t))v160;
            (*(void (**)(char *, uint64_t))v160)(v108, v104);
            v109(v143, v104);
            sub_25B116DE0(v101, &qword_26A4D91F8);
            uint64_t v73 = (uint64_t)v142;
            int v106 = v165;
            if (v165) {
              goto LABEL_56;
            }
            goto LABEL_63;
          }
          (*(void (**)(uint64_t, uint64_t))v160)(v97, v104);
          uint64_t v73 = (uint64_t)v142;
        }
        sub_25B116DE0(v144, &qword_26A4D9208);
        if ((v165 & 1) == 0) {
          goto LABEL_63;
        }
        sub_25B180A5C(v148, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
LABEL_66:
        if (v149)
        {
          uint64_t v124 = swift_bridgeObjectRetain();
          uint64_t v125 = sub_25B227C68(v124);
          swift_bridgeObjectRelease();
          sub_25B16C9D8(v125);
          uint64_t v126 = v172;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v126 = v163;
          uint64_t v172 = v163;
          swift_bridgeObjectRetain();
        }
        uint64_t v127 = v173;
        if (*(void *)(v126 + 16) <= *(void *)(v173 + 16) >> 3)
        {
          uint64_t v175 = v173;
          swift_bridgeObjectRetain();
          uint64_t v130 = swift_bridgeObjectRetain();
          sub_25B1A4044(v130);
          swift_bridgeObjectRelease();
          uint64_t v129 = v175;
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v128 = swift_bridgeObjectRetain();
          uint64_t v129 = sub_25B1A4714(v128, v127);
          swift_bridgeObjectRelease();
        }
        uint64_t v74 = v167;
        if (*(void *)(v127 + 16) <= *(void *)(v126 + 16) >> 3)
        {
          uint64_t v175 = v126;
          swift_bridgeObjectRetain();
          sub_25B1A4044(v127);
          swift_bridgeObjectRelease();
          uint64_t v131 = v175;
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v131 = sub_25B1A4714(v127, v126);
          swift_bridgeObjectRelease();
        }
        sub_25B16C9D8(v129);
        if (v168)
        {
          swift_bridgeObjectRelease();
          uint64_t v132 = v126;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v132 = v131;
        }
        sub_25B16C9D8(v132);
        swift_release();
        uint64_t v17 = v150;
LABEL_79:
        uint64_t v120 = (uint64_t)v17;
        goto LABEL_80;
      }
      sub_25B180A5C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RecordStub);
      swift_release();
LABEL_31:
      v76 += v170;
      if (!--v72)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v174;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_79;
  }
  uint64_t v175 = MEMORY[0x263F8EE78];
  sub_25B224084(0, v39, 0);
  uint64_t result = sub_25B1A7EF0(v38);
  uint64_t v41 = result;
  uint64_t v42 = 0;
  uint64_t v43 = v38 + 64;
  uint64_t v156 = v170 + 16;
  uint64_t v155 = v170 + 8;
  uint64_t v154 = v170 + 32;
  char v44 = *(unsigned char *)(v38 + 32);
  uint64_t v133 = v38 + 88;
  uint64_t v151 = v3;
  unint64_t v158 = (uint64_t *)v38;
  *(void *)&long long v157 = v39;
  uint64_t v152 = v40;
  uint64_t v153 = v38 + 64;
  uint64_t v45 = v169;
  while ((v41 & 0x8000000000000000) == 0 && v41 < 1 << v44)
  {
    if ((*(void *)(v43 + 8 * ((unint64_t)v41 >> 6)) & (1 << v41)) == 0) {
      goto LABEL_85;
    }
    if (*(_DWORD *)(v38 + 36) != v40) {
      goto LABEL_86;
    }
    uint64_t v165 = 1 << v41;
    unint64_t v166 = (unint64_t)v41 >> 6;
    uint64_t v164 = v42;
    uint64_t v47 = v163;
    uint64_t v48 = (uint64_t)v159;
    uint64_t v49 = (uint64_t)v159 + *(int *)(v163 + 48);
    uint64_t v50 = *(void *)(v38 + 48);
    uint64_t v167 = *(uint64_t **)(v170 + 72);
    unint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v170 + 16);
    v51((char *)v159, v50 + (void)v167 * v41, v45);
    uint64_t v52 = *(void *)(v38 + 56);
    uint64_t v53 = type metadata accessor for PairingRelationship();
    sub_25B1806D0(v52 + *(void *)(*(void *)(v53 - 8) + 72) * v41, v49, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    unint64_t v54 = v160;
    v51(v160, v48, v45);
    sub_25B1806D0(v49, (uint64_t)&v54[*(int *)(v47 + 48)], (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v55 = (uint64_t)v54;
    uint64_t v56 = v161;
    sub_25B187574(v55, v161, &qword_26A4D9EE8);
    sub_25B116DE0(v48, &qword_26A4D9EE8);
    uint64_t v57 = *(int *)(v47 + 48);
    uint64_t v58 = v162;
    uint64_t v59 = (uint64_t)&v162[v57];
    uint64_t v60 = v56 + v57;
    v51(v162, v56, v45);
    sub_25B1806D0(v60, v59, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    v51((char *)v168, v59, v45);
    sub_25B180A5C(v59, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    (*(void (**)(char *, uint64_t))(v170 + 8))(v58, v45);
    sub_25B116DE0(v56, &qword_26A4D9EE8);
    uint64_t v61 = v175;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25B224084(0, *(void *)(v61 + 16) + 1, 1);
      uint64_t v61 = v175;
    }
    unint64_t v63 = *(void *)(v61 + 16);
    unint64_t v62 = *(void *)(v61 + 24);
    uint64_t v38 = (uint64_t)v158;
    uint64_t v64 = v157;
    if (v63 >= v62 >> 1)
    {
      sub_25B224084(v62 > 1, v63 + 1, 1);
      uint64_t v61 = v175;
    }
    *(void *)(v61 + 16) = v63 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v170 + 32))(v61+ ((*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80))+ v63 * (void)v167, v168, v169);
    uint64_t v175 = v61;
    char v44 = *(unsigned char *)(v38 + 32);
    unint64_t v46 = 1 << v44;
    if (v41 >= 1 << v44) {
      goto LABEL_87;
    }
    uint64_t v43 = v153;
    unint64_t v65 = v166;
    uint64_t v66 = *(void *)(v153 + 8 * v166);
    if ((v66 & v165) == 0) {
      goto LABEL_88;
    }
    LODWORD(v40) = v152;
    if (*(_DWORD *)(v38 + 36) != v152) {
      goto LABEL_89;
    }
    unint64_t v67 = v66 & (-2 << (v41 & 0x3F));
    if (v67)
    {
      unint64_t v46 = __clz(__rbit64(v67)) | v41 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v3 = v151;
    }
    else
    {
      unint64_t v68 = v166 + 1;
      unint64_t v69 = (v46 + 63) >> 6;
      uint64_t v3 = v151;
      if (v166 + 1 < v69)
      {
        unint64_t v70 = *(void *)(v153 + 8 * v68);
        if (!v70)
        {
          unint64_t v68 = v166 + 2;
          if (v166 + 2 >= v69) {
            goto LABEL_5;
          }
          unint64_t v70 = *(void *)(v153 + 8 * v68);
          if (!v70)
          {
            while (v69 - 3 != v65)
            {
              unint64_t v70 = *(void *)(v133 + 8 * v65++);
              if (v70)
              {
                unint64_t v68 = v65 + 2;
                goto LABEL_20;
              }
            }
            goto LABEL_5;
          }
        }
LABEL_20:
        unint64_t v46 = __clz(__rbit64(v70)) + (v68 << 6);
      }
    }
LABEL_5:
    uint64_t v42 = v164 + 1;
    uint64_t v41 = v46;
    if (v164 + 1 == v64)
    {
      swift_release();
      uint64_t v17 = v150;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
  return result;
}

uint64_t sub_25B16C9D8(uint64_t a1)
{
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  uint64_t result = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = 0;
  uint64_t v30 = a1;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v15 = a1 + 56;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 24);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v25 = v15;
  int64_t v26 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v28 = v3 + 16;
  uint64_t v29 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v27 = v3 + 48;
  if ((v18 & v14) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v20 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v13 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(void *)(v30 + 48) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_25B218F4C((uint64_t)v8, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v26) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v25 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v26) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v25 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v26) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v25 + 8 * v13);
        if (!v23)
        {
          int64_t v13 = v22 + 3;
          if (v22 + 3 >= v26) {
            goto LABEL_24;
          }
          unint64_t v23 = *(void *)(v25 + 8 * v13);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v19 = (v23 - 1) & v23;
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v26)
  {
LABEL_24:
    (*v29)(v12, 1, 1, v2);
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v25 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25B16CD38(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v65 = a1;
  uint64_t v5 = sub_25B290080();
  uint64_t v66 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  unint64_t v62 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v64 = (char *)v57 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v63 = (uint64_t)v57 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v70 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D93A8);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for RecordMetadata();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v60 = (uint64_t)v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_25B10FF48(a3 + 192, (uint64_t)v67);
  uint64_t v23 = v68;
  uint64_t v22 = v69;
  __swift_project_boxed_opaque_existential_1(v67, v68);
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v22 + 8) + 8) + 24))(v23);
  if (*(void *)(v24 + 16))
  {
    uint64_t v25 = a2;
    unint64_t v26 = sub_25B18A8D0(a2);
    if (v27)
    {
      sub_25B1806D0(*(void *)(v24 + 56) + *(void *)(v20 + 72) * v26, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t v28 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v25 = a2;
  }
  uint64_t v28 = 1;
LABEL_6:
  uint64_t v29 = v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, v28, 1, v19);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_25B116DE0((uint64_t)v18, &qword_26A4D93A8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  uint64_t v31 = (uint64_t)v18;
  uint64_t v32 = v60;
  sub_25B18095C(v31, v60, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  uint64_t v33 = type metadata accessor for Record.ID(0);
  sub_25B1806D0((uint64_t)v25 + *(int *)(v33 + 24), (uint64_t)v15, type metadata accessor for Record.ID.Ownership);
  uint64_t v34 = v66;
  uint64_t v35 = v66 + 48;
  uint64_t v36 = *(char **)(v66 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v36)(v15, 1, v5) == 1)
  {
    uint64_t v37 = *(void *)(v32 + *(int *)(v19 + 28));
    if (v37)
    {
      uint64_t v38 = *(void *)(v37 + 16);
      v57[2] = *(void *)(v32 + *(int *)(v19 + 28));
      if (v38)
      {
        uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
        uint64_t v39 = v34 + 16;
        uint64_t v61 = v40;
        unint64_t v62 = v36;
        uint64_t v41 = v37 + ((*(unsigned __int8 *)(v39 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 64));
        uint64_t v42 = *(void *)(v39 + 56);
        uint64_t v43 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 40);
        uint64_t v58 = (void (**)(char *, char *, uint64_t))(v39 + 16);
        uint64_t v59 = v42;
        uint64_t v66 = v39;
        char v44 = (void (**)(uint64_t, uint64_t))(v39 - 8);
        swift_bridgeObjectRetain();
        v57[1] = (unint64_t)v43 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        while (1)
        {
          v61(v29, v41, v5);
          uint64_t v45 = *v43;
          (*v43)(v29, 0, 1, v5);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v62)(v29, 1, v5) == 1) {
            break;
          }
          uint64_t v46 = v35;
          uint64_t v47 = v64;
          (*v58)(v64, v29, v5);
          uint64_t v48 = v5;
          uint64_t v49 = v63;
          sub_25B218F4C(v63, v47);
          uint64_t v35 = v46;
          uint64_t v50 = v49;
          uint64_t v5 = v48;
          uint64_t v29 = v70;
          (*v44)(v50, v5);
          v41 += v59;
          if (!--v38) {
            goto LABEL_18;
          }
        }
      }
      else
      {
        uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
        swift_bridgeObjectRetain();
LABEL_18:
        v45(v29, 1, 1, v5);
      }
      swift_bridgeObjectRelease();
      uint64_t v56 = v60;
      return sub_25B180A5C(v56, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    }
  }
  else
  {
    uint64_t v51 = v5;
    uint64_t v52 = v63;
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v63, v15, v51);
    uint64_t v53 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v62, v52, v51);
    uint64_t v54 = (uint64_t)v64;
    sub_25B218F4C((uint64_t)v64, v53);
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v55(v54, v51);
    v55(v52, v51);
  }
  uint64_t v56 = v32;
  return sub_25B180A5C(v56, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
}

uint64_t sub_25B16D364(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v30 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v31 = (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v19 = (char *)&v30 + *(int *)(v16 + 48) - v17;
  sub_25B1806D0(a1, (uint64_t)&v30 - v17, type metadata accessor for Record.ID);
  sub_25B1806D0(v32, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  uint64_t v20 = (uint64_t)&v15[*(int *)(v10 + 48)];
  sub_25B1806D0((uint64_t)v18, (uint64_t)v15, type metadata accessor for Record.ID);
  sub_25B1806D0((uint64_t)v19, v20, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  uint64_t v21 = type metadata accessor for Record.ID(0);
  sub_25B1806D0((uint64_t)&v15[*(int *)(v21 + 24)], (uint64_t)v9, type metadata accessor for Record.ID.Ownership);
  sub_25B180A5C((uint64_t)v15, type metadata accessor for Record.ID);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
  {
    uint64_t v22 = v33;
    uint64_t v23 = v31;
    uint64_t v24 = v31 + *(int *)(v10 + 48);
    sub_25B1806D0((uint64_t)v18, v31, type metadata accessor for Record.ID);
    sub_25B1806D0((uint64_t)v19, v24, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v25 = *(void *)(v24 + *(int *)(type metadata accessor for RecordMetadata() + 28));
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_25B180A5C(v24, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    if (v25)
    {
      MEMORY[0x270FA5388](v26);
      *(&v30 - 2) = v22;
      char v27 = sub_25B210ED4((uint64_t (*)(char *))sub_25B187100, (uint64_t)(&v30 - 4), v25);
      sub_25B116DE0((uint64_t)v18, &qword_26A4D9860);
      swift_bridgeObjectRelease();
      sub_25B180A5C(v23, type metadata accessor for Record.ID);
    }
    else
    {
      sub_25B116DE0((uint64_t)v18, &qword_26A4D9860);
      sub_25B180A5C(v23, type metadata accessor for Record.ID);
      char v27 = 1;
    }
  }
  else
  {
    uint64_t v28 = v30;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v30, v9, v4);
    char v27 = sub_25B290030();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v4);
    sub_25B116DE0((uint64_t)v18, &qword_26A4D9860);
  }
  sub_25B180A5C(v20, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  return v27 & 1;
}

uint64_t sub_25B16D7C8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 184);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a1;
  v8[4] = a2;
  uint64_t v9 = *(void (**)(void (*)(uint64_t, uint64_t), void *, uint64_t, uint64_t))(v6 + 80);
  swift_retain();
  sub_25B1142EC(a1, a2);
  v9(sub_25B185BDC, v8, ObjectType, v6);
  return swift_release();
}

void sub_25B16D8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a2)
  {
    uint64_t v8 = *(NSObject **)(a3 + 232);
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = a3;
    void v9[3] = a4;
    v9[4] = a5;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = sub_25B185C3C;
    *(void *)(v10 + 24) = v9;
    aBlock[4] = sub_25B117398;
    void aBlock[5] = v10;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_25B10D184;
    aBlock[3] = &block_descriptor_1553;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    sub_25B1142EC(a4, a5);
    swift_retain();
    swift_release();
    dispatch_sync(v8, v11);
    _Block_release(v11);
    LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v8 & 1) == 0) {
      return;
    }
    __break(1u);
    goto LABEL_11;
  }
  if (qword_26A4D98C0 != -1) {
LABEL_11:
  }
    swift_once();
  uint64_t v12 = sub_25B290190();
  __swift_project_value_buffer(v12, (uint64_t)qword_26A4EB150);
  oslog = sub_25B290160();
  os_log_type_t v13 = sub_25B290880();
  if (os_log_type_enabled(oslog, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_25B107000, oslog, v13, "Could not fetch IDS ID; not sending advertisement", v14, 2u);
    MEMORY[0x261160890](v14, -1, -1);
  }
}

uint64_t sub_25B16DAF8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 624);
  unint64_t v5 = *(void *)(a1 + 632);
  *(void *)(a1 + 624) = a2;
  *(void *)(a1 + 632) = a3;
  sub_25B1142EC(a2, a3);
  sub_25B111FF0(v4, v5);
  swift_beginAccess();
  sub_25B10FF48(a1 + 344, (uint64_t)v11);
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  sub_25B16DC08(v14);
  v9[8] = v14[8];
  v9[9] = v14[9];
  v9[10] = v14[10];
  uint64_t v10 = v15;
  v9[4] = v14[4];
  v9[5] = v14[5];
  void v9[6] = v14[6];
  v9[7] = v14[7];
  v9[0] = v14[0];
  v9[1] = v14[1];
  void v9[2] = v14[2];
  void v9[3] = v14[3];
  (*(void (**)(_OWORD *, uint64_t, uint64_t))(v7 + 40))(v9, v6, v7);
  sub_25B11677C((uint64_t)v14);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t sub_25B16DC08@<X0>(void *a1@<X8>)
{
  uint64_t v111 = a1;
  uint64_t v2 = type metadata accessor for ZoneVersion();
  uint64_t v120 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v126 = (uint64_t)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9190);
  uint64_t v4 = MEMORY[0x270FA5388](v122);
  long long v112 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  long long v119 = (uint64_t *)((char *)&v111 - v7);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v118 = (uint64_t *)((char *)&v111 - v9);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (uint64_t *)((char *)&v111 - v11);
  MEMORY[0x270FA5388](v10);
  unint64_t v117 = (char *)&v111 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v125 = (uint64_t)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_25B290410();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (void **)((char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v124 = v1;
  uint64_t v20 = (void *)v1[29];
  *uint64_t v19 = v20;
  uint64_t v21 = *MEMORY[0x263F8F0E0];
  uint64_t v22 = *(void (**)(void *, uint64_t, uint64_t))(v17 + 104);
  v22(v19, v21, v16);
  id v23 = v20;
  char v24 = sub_25B290440();
  uint64_t v25 = *(void (**)(void *, uint64_t))(v17 + 8);
  v25(v19, v16);
  if ((v24 & 1) == 0) {
    goto LABEL_46;
  }
  uint64_t v26 = type metadata accessor for PairingRelationship();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v125, 1, 1, v26);
  *uint64_t v19 = v23;
  v22(v19, v21, v16);
  id v27 = v23;
  char v28 = sub_25B290440();
  v25(v19, v16);
  if (v28)
  {
    uint64_t v29 = v124;
    uint64_t v30 = swift_beginAccess();
    MEMORY[0x270FA5388](v30);
    *((unsigned char *)&v111 - 16) = 1;
    *(&v111 - 1) = v29;
    uint64_t v31 = swift_bridgeObjectRetain();
    uint64_t v32 = sub_25B185E8C(v31, (uint64_t (*)(void *, uint64_t))sub_25B185C58, (uint64_t)(&v111 - 4));
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_25B12AA78(v32);
    swift_release();
    uint64_t v34 = v125;
    uint64_t v35 = sub_25B16F300(v33);
    swift_bridgeObjectRelease();
    sub_25B116DE0(v34, &qword_26A4D9610);
    sub_25B133AA0(&v129);
    uint64_t v36 = *(void *)(v35 + 64);
    uint64_t v114 = v35 + 64;
    uint64_t v37 = 1 << *(unsigned char *)(v35 + 32);
    uint64_t v38 = -1;
    if (v37 < 64) {
      uint64_t v38 = ~(-1 << v37);
    }
    unint64_t v39 = v38 & v36;
    int64_t v115 = (unint64_t)(v37 + 63) >> 6;
    uint64_t v121 = v35;
    swift_bridgeObjectRetain();
    uint64_t v40 = 0;
    uint64_t v41 = (void *)MEMORY[0x263F8EE80];
    os_log_type_t v113 = "Swift/UnsafePointer.swift";
    unint64_t v116 = 0x800000025B29C8A0;
    uint64_t v42 = v122;
    uint64_t v43 = v112;
    while (1)
    {
      if (v39)
      {
        *(void *)&long long v123 = (v39 - 1) & v39;
        uint64_t v124 = (void *)v40;
        unint64_t v44 = __clz(__rbit64(v39)) | (v40 << 6);
      }
      else
      {
        int64_t v45 = v40 + 1;
        if (__OFADD__(v40, 1)) {
          goto LABEL_44;
        }
        if (v45 >= v115)
        {
LABEL_41:
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v98 = *((void *)&v129 + 1);
          uint64_t v126 = v129;
          uint64_t v99 = v130;
          uint64_t v100 = v131;
          uint64_t v101 = v132;
          uint64_t v125 = (uint64_t)v133;
          LODWORD(v124) = v134;
          long long v123 = v135;
          uint64_t v122 = v136;
          uint64_t v121 = v137;
          LODWORD(v120) = v138;
          char v102 = v139;
          uint64_t v103 = v140;
          uint64_t v104 = v141;
          uint64_t v105 = v142;
          unint64_t v106 = v143;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_25B1142EC(v105, v106);
          uint64_t result = sub_25B11DEBC((uint64_t)&v129);
          LOBYTE(v127) = v102;
          long long v108 = v111;
          *uint64_t v111 = v126;
          v108[1] = v98;
          v108[2] = v99;
          v108[3] = v100;
          uint64_t v109 = v125;
          v108[4] = v101;
          v108[5] = v109;
          *((unsigned char *)v108 + 48) = (_BYTE)v124;
          *(_OWORD *)(v108 + 7) = v123;
          uint64_t v110 = v121;
          v108[9] = v122;
          v108[10] = v110;
          *((unsigned char *)v108 + 88) = v120;
          *((unsigned char *)v108 + 89) = v102;
          v108[12] = v103;
          v108[13] = v104;
          v108[14] = v105;
          v108[15] = v106;
          *((_OWORD *)v108 + 9) = 0u;
          *((_OWORD *)v108 + 10) = 0u;
          *((_OWORD *)v108 + 8) = 0u;
          v108[22] = v41;
          return result;
        }
        unint64_t v46 = *(void *)(v114 + 8 * v45);
        int64_t v47 = v40 + 1;
        if (!v46)
        {
          int64_t v47 = v40 + 2;
          if (v40 + 2 >= v115) {
            goto LABEL_41;
          }
          unint64_t v46 = *(void *)(v114 + 8 * v47);
          if (!v46)
          {
            int64_t v47 = v40 + 3;
            if (v40 + 3 >= v115) {
              goto LABEL_41;
            }
            unint64_t v46 = *(void *)(v114 + 8 * v47);
            if (!v46)
            {
              int64_t v47 = v40 + 4;
              if (v40 + 4 >= v115) {
                goto LABEL_41;
              }
              unint64_t v46 = *(void *)(v114 + 8 * v47);
              if (!v46)
              {
                uint64_t v48 = v40 + 5;
                if (v40 + 5 >= v115) {
                  goto LABEL_41;
                }
                unint64_t v46 = *(void *)(v114 + 8 * v48);
                if (!v46)
                {
                  while (1)
                  {
                    int64_t v47 = v48 + 1;
                    if (__OFADD__(v48, 1)) {
                      goto LABEL_45;
                    }
                    if (v47 >= v115) {
                      goto LABEL_41;
                    }
                    unint64_t v46 = *(void *)(v114 + 8 * v47);
                    ++v48;
                    if (v46) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v47 = v40 + 5;
              }
            }
          }
        }
LABEL_25:
        *(void *)&long long v123 = (v46 - 1) & v46;
        uint64_t v124 = (void *)v47;
        unint64_t v44 = __clz(__rbit64(v46)) + (v47 << 6);
      }
      uint64_t v49 = *(void *)(v121 + 56);
      uint64_t v50 = (uint64_t *)(*(void *)(v121 + 48) + 32 * v44);
      uint64_t v51 = *v50;
      uint64_t v52 = v50[1];
      uint64_t v54 = v50[2];
      uint64_t v53 = v50[3];
      uint64_t v125 = *(void *)(v120 + 72);
      uint64_t v55 = v117;
      sub_25B1806D0(v49 + v125 * v44, (uint64_t)&v117[*(int *)(v42 + 48)], (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      *uint64_t v55 = v51;
      v55[1] = v52;
      v55[2] = v54;
      v55[3] = v53;
      sub_25B187574((uint64_t)v55, (uint64_t)v12, (uint64_t *)&unk_26A4D9190);
      uint64_t v56 = *(int *)(v42 + 48);
      uint64_t v57 = v118;
      uint64_t v58 = (uint64_t)v118 + v56;
      uint64_t v59 = (uint64_t)v12 + v56;
      uint64_t v60 = v12[1];
      uint64_t v61 = v12[2];
      uint64_t v62 = v12[3];
      *uint64_t v118 = *v12;
      v57[1] = v60;
      v57[2] = v61;
      void v57[3] = v62;
      sub_25B1806D0((uint64_t)v12 + v56, v58, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      if (v61 == 0xD000000000000011 && v62 == v116) {
        break;
      }
      char v63 = sub_25B290FB0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B180A5C(v58, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      if (v63) {
        goto LABEL_30;
      }
      uint64_t v70 = v122;
      uint64_t v71 = v119;
      uint64_t v72 = (uint64_t)v119 + *(int *)(v122 + 48);
      uint64_t v74 = (void *)*v12;
      uint64_t v73 = v12[1];
      uint64_t v75 = v12[2];
      uint64_t v76 = v12[3];
      *long long v119 = *v12;
      v71[1] = v73;
      v71[2] = v75;
      v71[3] = v76;
      sub_25B1806D0(v59, v72, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v127 = v74;
      uint64_t v128 = v73;
      swift_bridgeObjectRetain();
      sub_25B180A5C(v72, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      sub_25B290650();
      uint64_t v77 = (uint64_t)v71 + *(int *)(v70 + 48);
      uint64_t v78 = v12[1];
      uint64_t v79 = v12[2];
      uint64_t v80 = v12[3];
      uint64_t *v71 = *v12;
      v71[1] = v78;
      v71[2] = v79;
      v71[3] = v80;
      sub_25B1806D0(v59, v77, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      swift_bridgeObjectRetain();
      uint64_t v42 = v122;
      uint64_t v43 = v112;
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B180A5C(v77, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v67 = (uint64_t)v127;
      uint64_t v66 = v128;
LABEL_32:
      uint64_t v81 = (uint64_t)&v43[*(int *)(v42 + 48)];
      uint64_t v82 = v12[2];
      uint64_t v83 = v12[3];
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v12;
      *((void *)v43 + 2) = v82;
      *((void *)v43 + 3) = v83;
      sub_25B1806D0(v59, v81, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      sub_25B18095C(v81, v126, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v127 = v41;
      unint64_t v86 = sub_25B18A634(v67, v66);
      uint64_t v87 = v41[2];
      BOOL v88 = (v85 & 1) == 0;
      uint64_t v89 = v87 + v88;
      if (__OFADD__(v87, v88))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      char v90 = v85;
      if (v41[3] >= v89)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_25B194174();
        }
      }
      else
      {
        sub_25B18F000(v89, isUniquelyReferenced_nonNull_native);
        unint64_t v91 = sub_25B18A634(v67, v66);
        if ((v90 & 1) != (v92 & 1)) {
          goto LABEL_48;
        }
        unint64_t v86 = v91;
      }
      uint64_t v93 = v125;
      uint64_t v41 = v127;
      if (v90)
      {
        sub_25B187120(v126, v127[7] + v86 * v125, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      }
      else
      {
        v127[(v86 >> 6) + 8] |= 1 << v86;
        uint64_t v94 = (uint64_t *)(v41[6] + 16 * v86);
        *uint64_t v94 = v67;
        v94[1] = v66;
        sub_25B18095C(v126, v41[7] + v86 * v93, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        uint64_t v95 = v41[2];
        BOOL v96 = __OFADD__(v95, 1);
        uint64_t v97 = v95 + 1;
        if (v96) {
          goto LABEL_43;
        }
        void v41[2] = v97;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B116DE0((uint64_t)v12, (uint64_t *)&unk_26A4D9190);
      uint64_t v40 = (uint64_t)v124;
      unint64_t v39 = v123;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B180A5C(v58, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
LABEL_30:
    uint64_t v42 = v122;
    uint64_t v64 = v119;
    uint64_t v65 = (uint64_t)v119 + *(int *)(v122 + 48);
    uint64_t v67 = *v12;
    uint64_t v66 = v12[1];
    uint64_t v68 = v12[2];
    uint64_t v69 = v12[3];
    *long long v119 = *v12;
    v64[1] = v66;
    v64[2] = v68;
    v64[3] = v69;
    sub_25B1806D0(v59, v65, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    swift_bridgeObjectRetain();
    sub_25B180A5C(v65, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    goto LABEL_32;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

void sub_25B16E81C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PairingRelationship();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v64 - v10;
  long long v12 = *(_OWORD *)(a1 + 144);
  long long v114 = *(_OWORD *)(a1 + 128);
  long long v115 = v12;
  long long v116 = *(_OWORD *)(a1 + 160);
  uint64_t v117 = *(void *)(a1 + 176);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v110 = *(_OWORD *)(a1 + 64);
  long long v111 = v13;
  long long v14 = *(_OWORD *)(a1 + 112);
  long long v112 = *(_OWORD *)(a1 + 96);
  long long v113 = v14;
  long long v15 = *(_OWORD *)(a1 + 16);
  long long v106 = *(_OWORD *)a1;
  long long v107 = v15;
  long long v16 = *(_OWORD *)(a1 + 48);
  long long v108 = *(_OWORD *)(a1 + 32);
  long long v109 = v16;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v18 = Strong;
  long long v126 = v114;
  long long v127 = v115;
  long long v128 = v116;
  long long v122 = v110;
  long long v123 = v111;
  long long v124 = v112;
  long long v125 = v113;
  long long v118 = v106;
  long long v119 = v107;
  long long v120 = v108;
  long long v121 = v109;
  uint64_t v19 = v108;
  if ((unint64_t)v108 < 4 || (uint64_t v20 = *((void *)&v120 + 1), *((void *)&v120 + 1) > 0xFuLL))
  {
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_25B290190();
    __swift_project_value_buffer(v36, (uint64_t)qword_26A4EB150);
    sub_25B114244((uint64_t)&v106);
    sub_25B114244((uint64_t)&v106);
    swift_retain();
    uint64_t v37 = sub_25B290160();
    os_log_type_t v38 = sub_25B2908A0();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(void *)&long long v95 = v40;
      *(_DWORD *)uint64_t v39 = 136446466;
      uint64_t v41 = *(void *)(v18 + 528);
      unint64_t v42 = *(void *)(v18 + 536);
      swift_bridgeObjectRetain();
      *(void *)&long long v81 = sub_25B288E98(v41, v42, (uint64_t *)&v95);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2082;
      sub_25B114244((uint64_t)&v106);
      uint64_t v43 = sub_25B181370();
      unint64_t v45 = v44;
      sub_25B11677C((uint64_t)&v106);
      *(void *)&long long v81 = sub_25B288E98(v43, v45, (uint64_t *)&v95);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B11677C((uint64_t)&v106);
      sub_25B11677C((uint64_t)&v106);
      _os_log_impl(&dword_25B107000, v37, v38, "(%{public}s) Received zone version advertisement from incompatible device: %{public}s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v40, -1, -1);
      MEMORY[0x261160890](v39, -1, -1);
      swift_release();
LABEL_16:

      return;
    }
LABEL_15:
    swift_release_n();
    sub_25B11677C((uint64_t)&v106);
    sub_25B11677C((uint64_t)&v106);
    goto LABEL_16;
  }
  int v21 = v121;
  if (!sub_25B210AEC(v121, *(void *)(Strong + 520)))
  {
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_25B290190();
    __swift_project_value_buffer(v46, (uint64_t)qword_26A4EB150);
    sub_25B114244((uint64_t)&v106);
    sub_25B114244((uint64_t)&v106);
    swift_retain();
    uint64_t v37 = sub_25B290160();
    os_log_type_t v47 = sub_25B290880();
    if (os_log_type_enabled(v37, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(void *)&long long v81 = v49;
      *(_DWORD *)uint64_t v48 = 136446466;
      uint64_t v50 = *(void *)(v18 + 528);
      unint64_t v51 = *(void *)(v18 + 536);
      swift_bridgeObjectRetain();
      *(void *)&long long v95 = sub_25B288E98(v50, v51, (uint64_t *)&v81);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2082;
      long long v103 = v126;
      long long v104 = v127;
      long long v105 = v128;
      long long v99 = v122;
      long long v100 = v123;
      long long v101 = v124;
      long long v102 = v125;
      long long v95 = v118;
      long long v96 = v119;
      long long v97 = v120;
      long long v98 = v121;
      sub_25B1172F8((uint64_t)&v118);
      uint64_t v52 = sub_25B290600();
      *(void *)&long long v95 = sub_25B288E98(v52, v53, (uint64_t *)&v81);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B11677C((uint64_t)&v106);
      sub_25B11677C((uint64_t)&v106);
      _os_log_impl(&dword_25B107000, v37, v47, "%{public}s Cannot pair with a device that has an incompatible device type: %{public}s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v49, -1, -1);
      MEMORY[0x261160890](v48, -1, -1);
      swift_release();
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  uint64_t v64 = v11;
  uint64_t v77 = v9;
  uint64_t v22 = *((void *)&v118 + 1);
  uint64_t v78 = v118;
  uint64_t v69 = *((void *)&v119 + 1);
  uint64_t v70 = v119;
  uint64_t v75 = v20;
  uint64_t v76 = v19;
  v92[0] = v19;
  v92[1] = v20;
  int v74 = v21;
  LOBYTE(v79) = v21;
  sub_25B187574((uint64_t)&v121 + 8, (uint64_t)v129, &qword_26A4D9438);
  sub_25B187574((uint64_t)v129, (uint64_t)&v81, &qword_26A4D9438);
  uint64_t v71 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v68 = sub_25B12ACA4(v23, (uint64_t)&v94, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_25B2241E4, sub_25B1A7EF0);
  swift_bridgeObjectRelease();
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v67 = sub_25B12ACA4(v24, (uint64_t)&v93, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_25B224158, sub_25B1A7EF0);
  swift_bridgeObjectRelease();
  long long v25 = v125;
  uint64_t v26 = *((void *)&v126 + 1);
  uint64_t v73 = v18;
  uint64_t v65 = v127;
  uint64_t v66 = v126;
  uint64_t v27 = *((void *)&v127 + 1);
  long long v28 = v128;
  sub_25B1142EC(v125, *((unint64_t *)&v125 + 1));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v72 = v28;
  *((void *)&v63 + 1) = v27;
  *(void *)&long long v63 = v65;
  uint64_t v29 = v73;
  *((void *)&v62 + 1) = v26;
  *(void *)&long long v62 = v66;
  uint64_t v30 = v22;
  uint64_t v31 = v78;
  DeviceDescriptor.init(id:name:protocolVersion:deviceType:screenDescriptor:zones:messageTypes:idsIdentityBlob:marketingName:productType:personaID:)(v78, v22, v70, v69, v92, (char *)&v79, (uint64_t *)&v81, v68, &v95, v67, v25, *((unint64_t *)&v25 + 1), v62, v63, v28);
  swift_beginAccess();
  sub_25B10FF48(v29 + 192, (uint64_t)&v81);
  uint64_t v32 = *((void *)&v82 + 1);
  uint64_t v33 = v83;
  __swift_project_boxed_opaque_existential_1(&v81, *((uint64_t *)&v82 + 1));
  MetadataStoring.pairingRelationship(remoteDeviceID:)(v31, v22, v32, *(void *)(v33 + 8), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v4, 1, v5) == 1)
  {
    sub_25B116DE0((uint64_t)v4, &qword_26A4D9610);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v81);
    long long v89 = v103;
    long long v90 = v104;
    long long v91 = v105;
    long long v85 = v99;
    long long v86 = v100;
    long long v87 = v101;
    long long v88 = v102;
    long long v81 = v95;
    long long v82 = v96;
    long long v83 = v97;
    long long v84 = v98;
    uint64_t v79 = 0;
    unint64_t v80 = 0;
    uint64_t v34 = (uint64_t)v77;
    sub_25B148078(&v81, (uint64_t)&v79, 0, 1, (uint64_t)v77);
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v54 = (uint64_t)v64;
    sub_25B18095C((uint64_t)v4, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v81);
    long long v85 = v99;
    long long v86 = v100;
    long long v83 = v97;
    long long v84 = v98;
    long long v90 = v104;
    long long v91 = v105;
    long long v87 = v101;
    long long v88 = v102;
    long long v89 = v103;
    long long v81 = v95;
    long long v82 = v96;
    uint64_t v55 = (uint64_t *)(v54 + *(int *)(v5 + 32));
    unint64_t v57 = v55[1];
    uint64_t v79 = *v55;
    uint64_t v56 = v79;
    unint64_t v80 = v57;
    sub_25B120090(v79, v57);
    uint64_t v58 = (uint64_t)v77;
    sub_25B148078(&v81, (uint64_t)&v79, 2, 1, (uint64_t)v77);
    sub_25B1200A4(v56, v57);
    sub_25B180A5C(v58, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v35 = v54;
  }
  sub_25B180A5C(v35, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA748);
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_25B292C10;
  *(void *)(v59 + 32) = v78;
  *(void *)(v59 + 40) = v30;
  uint64_t v60 = *((void *)&v72 + 1);
  *(void *)(v59 + 48) = v72;
  *(void *)(v59 + 56) = v60;
  *(unsigned char *)(v59 + 64) = v74;
  uint64_t v61 = v75;
  *(void *)(v59 + 72) = v76;
  *(void *)(v59 + 80) = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25B13A258(v59);
  swift_bridgeObjectRelease();
  sub_25B11DEBC((uint64_t)&v95);
  swift_release();
}

uint64_t sub_25B16F20C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  if (!MEMORY[0x261160990](a2 + 16))
  {
    if ((a3 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_5:
    char v13 = 0;
    return v13 & 1;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v15, ObjectType, v9);
  swift_unknownObjectRelease();
  if (((a3 & 1) == 0) == LOBYTE(v15[0])) {
    goto LABEL_5;
  }
LABEL_3:
  swift_beginAccess();
  uint64_t v11 = *(void *)(a4 + 648);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v12 = sub_25B2109B4(v8, v7, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v13 = v12 ^ 1;
  return v13 & 1;
}

uint64_t sub_25B16F300(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v77 = (char *)v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ZoneVersion();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v84 = (uint64_t)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v76 = (char *)v73 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v83 = (uint64_t)v73 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v75 = (char *)v73 - v13;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return MEMORY[0x263F8EE80];
  }
  swift_bridgeObjectRetain();
  long long v82 = (uint64_t *)(v1 + 648);
  swift_beginAccess();
  uint64_t v74 = v1 + 192;
  swift_beginAccess();
  v73[1] = a1;
  long long v15 = (uint64_t *)(a1 + 56);
  long long v16 = (void *)MEMORY[0x263F8EE80];
  uint64_t v81 = v6;
  while (1)
  {
    uint64_t v85 = v14;
    uint64_t v18 = *(v15 - 3);
    uint64_t v17 = *(v15 - 2);
    uint64_t v19 = *(v15 - 1);
    uint64_t v20 = *v15;
    uint64_t v21 = *v82;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    char v22 = sub_25B2109B4(v19, v20, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      break;
    }
    uint64_t v23 = sub_25B290080();
    uint64_t v24 = v17;
    uint64_t v25 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v75, 1, 1, v23);
    sub_25B18095C(v25, v83, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v87[0] = v16;
    uint64_t v27 = v18;
    uint64_t v28 = v18;
    uint64_t v29 = v19;
    unint64_t v31 = sub_25B18A768(v28, v24, v19, v20);
    uint64_t v32 = v16[2];
    BOOL v33 = (v30 & 1) == 0;
    uint64_t v34 = v32 + v33;
    if (__OFADD__(v32, v33)) {
      goto LABEL_31;
    }
    char v35 = v30;
    if (v16[3] >= v34)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_25B1941BC();
      }
    }
    else
    {
      sub_25B18F048(v34, isUniquelyReferenced_nonNull_native);
      unint64_t v36 = sub_25B18A768(v27, v24, v29, v20);
      if ((v35 & 1) != (v37 & 1)) {
        goto LABEL_34;
      }
      unint64_t v31 = v36;
    }
    uint64_t v67 = v81;
    long long v16 = (void *)v87[0];
    if (v35)
    {
      sub_25B187120(v83, *(void *)(v87[0] + 56) + *(void *)(v81 + 72) * v31, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    }
    else
    {
      *(void *)(v87[0] + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v68 = (uint64_t *)(v16[6] + 32 * v31);
      *uint64_t v68 = v27;
      v68[1] = v24;
      v68[2] = v29;
      v68[3] = v20;
      sub_25B18095C(v83, v16[7] + *(void *)(v67 + 72) * v31, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v69 = v16[2];
      BOOL v65 = __OFADD__(v69, 1);
      uint64_t v70 = v69 + 1;
      if (v65) {
        goto LABEL_33;
      }
      v16[2] = v70;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
LABEL_5:
    swift_bridgeObjectRelease();
    v15 += 4;
    uint64_t v14 = v85 - 1;
    if (v85 == 1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v16;
    }
  }
  uint64_t v78 = v15;
  sub_25B10FF48(v74, (uint64_t)v87);
  uint64_t v38 = v89;
  uint64_t v80 = v88;
  __swift_project_boxed_opaque_existential_1(v87, v88);
  v86[0] = v18;
  v86[1] = v17;
  v86[2] = v19;
  v86[3] = v20;
  uint64_t v39 = type metadata accessor for PairingRelationship();
  uint64_t v40 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v77, 1, 1, v39);
  uint64_t v41 = *(void *)(v38 + 8);
  uint64_t v79 = v19;
  uint64_t v42 = v20;
  uint64_t v43 = v18;
  unint64_t v44 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v41 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v45 = v17;
  uint64_t v46 = v76;
  v44(v86, v40, v80, v41);
  sub_25B116DE0(v40, &qword_26A4D9610);
  uint64_t v47 = (uint64_t)v46;
  uint64_t v48 = v45;
  sub_25B18095C(v47, v84, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
  int v49 = swift_isUniquelyReferenced_nonNull_native();
  v86[0] = v16;
  uint64_t v50 = v43;
  uint64_t v51 = v43;
  uint64_t v52 = v42;
  uint64_t v53 = v79;
  unint64_t v55 = sub_25B18A768(v51, v45, v79, v42);
  uint64_t v56 = v16[2];
  BOOL v57 = (v54 & 1) == 0;
  uint64_t v58 = v56 + v57;
  if (!__OFADD__(v56, v57))
  {
    char v59 = v54;
    if (v16[3] >= v58)
    {
      uint64_t v71 = v81;
      long long v15 = v78;
      if ((v49 & 1) == 0) {
        sub_25B1941BC();
      }
      uint64_t v62 = v71;
      long long v16 = (void *)v86[0];
      if ((v59 & 1) == 0)
      {
LABEL_15:
        v16[(v55 >> 6) + 8] |= 1 << v55;
        long long v63 = (uint64_t *)(v16[6] + 32 * v55);
        *long long v63 = v50;
        v63[1] = v48;
        v63[2] = v53;
        v63[3] = v52;
        sub_25B18095C(v84, v16[7] + *(void *)(v62 + 72) * v55, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        uint64_t v64 = v16[2];
        BOOL v65 = __OFADD__(v64, 1);
        uint64_t v66 = v64 + 1;
        if (v65) {
          goto LABEL_32;
        }
        v16[2] = v66;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      }
    }
    else
    {
      sub_25B18F048(v58, v49);
      unint64_t v60 = sub_25B18A768(v50, v45, v53, v52);
      uint64_t v62 = v81;
      long long v15 = v78;
      if ((v59 & 1) != (v61 & 1)) {
        goto LABEL_34;
      }
      unint64_t v55 = v60;
      long long v16 = (void *)v86[0];
      if ((v59 & 1) == 0) {
        goto LABEL_15;
      }
    }
    sub_25B187120(v84, v16[7] + *(void *)(v62 + 72) * v55, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t sub_25B16FA28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for PairingRelationship();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  sub_25B10FF48(a1 + 192, (uint64_t)v18);
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  MetadataStoring.pairingRelationship(relationshipID:)(a2, v11, *(void *)(v12 + 8), (uint64_t)v6);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_25B116DE0((uint64_t)v6, &qword_26A4D9610);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    sub_25B18095C((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    uint64_t v14 = (uint64_t *)&v10[*(int *)(v7 + 20)];
    if (v14[21])
    {
      uint64_t v15 = *v14;
      uint64_t v16 = v14[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B1862C8(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return sub_25B180A5C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  }
}

uint64_t sub_25B16FC44(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v138 = (uint64_t)v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PairingRelationship();
  uint64_t v145 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v135 = (uint64_t)v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v136 = (uint64_t)v126 - v8;
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v9 = MEMORY[0x270FA5388](v141);
  uint64_t v147 = (char *)v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v143 = (char *)v126 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v152 = (uint64_t)v126 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v142 = (char *)v126 - v15;
  uint64_t v16 = sub_25B290410();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (void *)((char *)v126 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = *(void **)(v1 + 232);
  *uint64_t v19 = v20;
  uint64_t v21 = *(void (**)(void))(v17 + 104);
  unsigned int v131 = *MEMORY[0x263F8F0E0];
  uint64_t v130 = v17 + 104;
  long long v129 = (void (*)(void *, void, uint64_t))v21;
  v21(v19);
  id v128 = v20;
  LOBYTE(v20) = sub_25B290440();
  char v22 = *(void (**)(void *, uint64_t))(v17 + 8);
  uint64_t v132 = v19;
  uint64_t v134 = v16;
  uint64_t v133 = v17 + 8;
  long long v127 = v22;
  v22(v19, v16);
  if ((v20 & 1) == 0) {
    goto LABEL_81;
  }
  v126[1] = a1;
  v126[2] = v1;
  swift_beginAccess();
  uint64_t v137 = v1 + 192;
  sub_25B10FF48(v1 + 192, (uint64_t)&v158);
  uint64_t v23 = v159;
  uint64_t v24 = v160;
  __swift_project_boxed_opaque_existential_1(&v158, v159);
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v24 + 8) + 8) + 32))(v23);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v139 = v25 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(v25 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  int64_t v140 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v144 = v25;
  swift_bridgeObjectRetain();
  char v30 = 0;
  unint64_t v31 = (void *)MEMORY[0x263F8EE80];
  uint64_t v32 = v141;
  uint64_t v33 = v152;
  uint64_t v148 = v5;
  while (1)
  {
    uint64_t v155 = v31;
    if (v29)
    {
      uint64_t v34 = v32;
      uint64_t v153 = (v29 - 1) & v29;
      uint64_t v154 = v30;
      unint64_t v35 = __clz(__rbit64(v29)) | ((void)v30 << 6);
      goto LABEL_25;
    }
    int64_t v36 = (int64_t)v30 + 1;
    if (__OFADD__(v30, 1)) {
      goto LABEL_75;
    }
    if (v36 >= v140)
    {
LABEL_38:
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v158);
      uint64_t v79 = sub_25B12AF18((uint64_t)v31);
      uint64_t v80 = sub_25B227BD0(v79);
      swift_bridgeObjectRelease();
      uint64_t v81 = swift_bridgeObjectRetain();
      uint64_t v82 = sub_25B227BD0(v81);
      swift_bridgeObjectRelease();
      if (*(void *)(v82 + 16) <= *(void *)(v80 + 16) >> 3)
      {
        uint64_t v158 = v80;
        sub_25B1A43CC(v82);
        swift_bridgeObjectRelease();
        uint64_t v83 = v158;
      }
      else
      {
        uint64_t v83 = sub_25B1A4DD8(v82, v80);
        swift_bridgeObjectRelease();
      }
      int64_t v85 = 0;
      uint64_t v86 = v83 + 56;
      uint64_t v87 = 1 << *(unsigned char *)(v83 + 32);
      uint64_t v88 = -1;
      if (v87 < 64) {
        uint64_t v88 = ~(-1 << v87);
      }
      unint64_t v89 = v88 & *(void *)(v83 + 56);
      int64_t v90 = (unint64_t)(v87 + 63) >> 6;
      uint64_t v154 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48);
      uint64_t v147 = &v157;
      *(void *)&long long v84 = 136446466;
      long long v146 = v84;
      uint64_t v145 = MEMORY[0x263F8EE58] + 8;
      uint64_t v151 = v83;
      uint64_t v152 = v90;
      uint64_t v153 = v83 + 56;
      while (1)
      {
        if (v89)
        {
          unint64_t v91 = __clz(__rbit64(v89));
          v89 &= v89 - 1;
          unint64_t v92 = v91 | (v85 << 6);
          if (!v31[2]) {
            continue;
          }
LABEL_62:
          long long v96 = (uint64_t *)(*(void *)(v83 + 48) + 16 * v92);
          uint64_t v98 = *v96;
          unint64_t v97 = v96[1];
          swift_bridgeObjectRetain_n();
          unint64_t v99 = sub_25B18A634(v98, v97);
          if (v100)
          {
            long long v101 = (uint64_t *)(v31[7] + 16 * v99);
            uint64_t v102 = *v101;
            uint64_t v103 = v101[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_25B10FF48(v137, (uint64_t)&v158);
            uint64_t v104 = v159;
            uint64_t v105 = v160;
            __swift_project_boxed_opaque_existential_1(&v158, v159);
            uint64_t v106 = v102;
            uint64_t v107 = v138;
            MetadataStoring.pairingRelationship(remoteDeviceID:)(v106, v103, v104, *(void *)(v105 + 8), v138);
            swift_bridgeObjectRelease();
            if ((*v154)(v107, 1, v148) == 1)
            {
              swift_bridgeObjectRelease();
              sub_25B116DE0(v107, &qword_26A4D9610);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v158);
              unint64_t v31 = v155;
            }
            else
            {
              uint64_t v108 = v107;
              uint64_t v109 = v136;
              sub_25B18095C(v108, v136, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v158);
              if (qword_26A4D98C0 != -1) {
                swift_once();
              }
              uint64_t v110 = sub_25B290190();
              __swift_project_value_buffer(v110, (uint64_t)qword_26A4EB150);
              uint64_t v111 = v135;
              sub_25B1806D0(v109, v135, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
              swift_bridgeObjectRetain();
              long long v112 = sub_25B290160();
              os_log_type_t v113 = sub_25B2908A0();
              if (os_log_type_enabled(v112, v113))
              {
                uint64_t v114 = swift_slowAlloc();
                uint64_t v150 = swift_slowAlloc();
                uint64_t v158 = v150;
                *(_DWORD *)uint64_t v114 = v146;
                uint64_t v149 = v114 + 4;
                sub_25B290080();
                sub_25B1875E0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
                uint64_t v115 = sub_25B290DB0();
                uint64_t v156 = sub_25B288E98(v115, v116, &v158);
                sub_25B2909C0();
                swift_bridgeObjectRelease();
                sub_25B180A5C(v111, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
                *(_WORD *)(v114 + 12) = 2082;
                swift_bridgeObjectRetain();
                uint64_t v156 = sub_25B288E98(v98, v97, &v158);
                sub_25B2909C0();
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_25B107000, v112, v113, "Deleting relationship %{public}s due to removed persona %{public}s", (uint8_t *)v114, 0x16u);
                uint64_t v117 = v150;
                swift_arrayDestroy();
                MEMORY[0x261160890](v117, -1, -1);
                MEMORY[0x261160890](v114, -1, -1);
              }
              else
              {
                sub_25B180A5C(v111, (uint64_t (*)(void))type metadata accessor for PairingRelationship);

                swift_bridgeObjectRelease_n();
              }
              unint64_t v31 = v155;
              long long v118 = v132;
              long long v119 = v128;
              void *v132 = v128;
              uint64_t v120 = v134;
              v129(v118, v131, v134);
              id v121 = v119;
              LOBYTE(v119) = sub_25B290440();
              v127(v118, v120);
              uint64_t v83 = v151;
              if ((v119 & 1) == 0) {
                goto LABEL_78;
              }
              uint64_t v122 = v136;
              sub_25B130988(v136);
              sub_25B10FF48(v137, (uint64_t)&v158);
              uint64_t v123 = v159;
              uint64_t v124 = v160;
              __swift_project_boxed_opaque_existential_1(&v158, v159);
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v124 + 16) + 96))(v122, v123);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v158);
              sub_25B180A5C(v122, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
            }
            int64_t v90 = v152;
            uint64_t v86 = v153;
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }
        }
        else
        {
          int64_t v93 = v85 + 1;
          if (__OFADD__(v85, 1)) {
            goto LABEL_76;
          }
          if (v93 >= v90)
          {
LABEL_73:
            swift_bridgeObjectRelease();
            return swift_release();
          }
          unint64_t v94 = *(void *)(v86 + 8 * v93);
          ++v85;
          if (!v94)
          {
            int64_t v85 = v93 + 1;
            if (v93 + 1 >= v90) {
              goto LABEL_73;
            }
            unint64_t v94 = *(void *)(v86 + 8 * v85);
            if (!v94)
            {
              int64_t v85 = v93 + 2;
              if (v93 + 2 >= v90) {
                goto LABEL_73;
              }
              unint64_t v94 = *(void *)(v86 + 8 * v85);
              if (!v94)
              {
                int64_t v95 = v93 + 3;
                if (v95 >= v90) {
                  goto LABEL_73;
                }
                unint64_t v94 = *(void *)(v86 + 8 * v95);
                if (!v94)
                {
                  while (1)
                  {
                    int64_t v85 = v95 + 1;
                    if (__OFADD__(v95, 1)) {
                      goto LABEL_79;
                    }
                    if (v85 >= v90) {
                      goto LABEL_73;
                    }
                    unint64_t v94 = *(void *)(v86 + 8 * v85);
                    ++v95;
                    if (v94) {
                      goto LABEL_61;
                    }
                  }
                }
                int64_t v85 = v95;
              }
            }
          }
LABEL_61:
          unint64_t v89 = (v94 - 1) & v94;
          unint64_t v92 = __clz(__rbit64(v94)) + (v85 << 6);
          if (v31[2]) {
            goto LABEL_62;
          }
        }
      }
    }
    unint64_t v37 = *(void *)(v139 + 8 * v36);
    int64_t v38 = (int64_t)v30 + 1;
    if (!v37)
    {
      int64_t v38 = (int64_t)v30 + 2;
      if ((uint64_t)v30 + 2 >= v140) {
        goto LABEL_38;
      }
      unint64_t v37 = *(void *)(v139 + 8 * v38);
      if (!v37)
      {
        int64_t v38 = (int64_t)v30 + 3;
        if ((uint64_t)v30 + 3 >= v140) {
          goto LABEL_38;
        }
        unint64_t v37 = *(void *)(v139 + 8 * v38);
        if (!v37)
        {
          int64_t v38 = (int64_t)v30 + 4;
          if ((uint64_t)v30 + 4 >= v140) {
            goto LABEL_38;
          }
          unint64_t v37 = *(void *)(v139 + 8 * v38);
          if (!v37)
          {
            uint64_t v39 = (char *)v30 + 5;
            if ((uint64_t)v30 + 5 >= v140) {
              goto LABEL_38;
            }
            unint64_t v37 = *(void *)(v139 + 8 * (void)v39);
            if (!v37)
            {
              while (1)
              {
                int64_t v38 = (int64_t)(v39 + 1);
                if (__OFADD__(v39, 1)) {
                  goto LABEL_80;
                }
                if (v38 >= v140) {
                  goto LABEL_38;
                }
                unint64_t v37 = *(void *)(v139 + 8 * v38);
                ++v39;
                if (v37) {
                  goto LABEL_24;
                }
              }
            }
            int64_t v38 = (int64_t)v30 + 5;
          }
        }
      }
    }
LABEL_24:
    uint64_t v34 = v32;
    uint64_t v153 = (v37 - 1) & v37;
    uint64_t v154 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v38;
    unint64_t v35 = __clz(__rbit64(v37)) + (v38 << 6);
LABEL_25:
    uint64_t v40 = v144;
    uint64_t v41 = *(void *)(v144 + 48);
    uint64_t v42 = sub_25B290080();
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v44 = v43;
    uint64_t v45 = *(void (**)(void))(v43 + 16);
    uint64_t v46 = (uint64_t)v142;
    ((void (*)(char *, unint64_t, uint64_t))v45)(v142, v41 + *(void *)(v43 + 72) * v35, v42);
    uint64_t v47 = *(void *)(v40 + 56) + *(void *)(v145 + 72) * v35;
    uint64_t v32 = v34;
    sub_25B1806D0(v47, v46 + *(int *)(v34 + 48), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v48 = v33;
    sub_25B187574(v46, v33, &qword_26A4D9EE8);
    uint64_t v49 = *(int *)(v34 + 48);
    uint64_t v50 = v143;
    uint64_t v51 = (uint64_t)&v143[v49];
    uint64_t v52 = v48 + v49;
    ((void (*)(char *, uint64_t, uint64_t))v45)(v143, v48, v42);
    uint64_t v150 = v52;
    sub_25B1806D0(v52, v51, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v53 = v148;
    uint64_t v54 = v51 + *(int *)(v148 + 20);
    uint64_t v55 = *(void *)(v54 + 168);
    uint64_t v151 = *(void *)(v54 + 160);
    swift_bridgeObjectRetain();
    sub_25B180A5C(v51, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v56 = *(void (**)(char *, uint64_t))(v44 + 8);
    uint64_t v149 = v44 + 8;
    v56(v50, v42);
    if (!v55)
    {
      unint64_t v31 = v155;
      goto LABEL_6;
    }
    uint64_t v57 = v55;
    *(void *)&long long v146 = v56;
    uint64_t v58 = (uint64_t)&v147[*(int *)(v32 + 48)];
    v45();
    sub_25B1806D0(v150, v58, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    char v59 = (uint64_t *)(v58 + *(int *)(v53 + 20));
    uint64_t v61 = *v59;
    uint64_t v60 = v59[1];
    swift_bridgeObjectRetain();
    sub_25B180A5C(v58, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v62 = (uint64_t)v155;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v156 = v62;
    uint64_t v64 = v151;
    unint64_t v66 = sub_25B18A634(v151, v55);
    uint64_t v67 = *(void *)(v62 + 16);
    BOOL v68 = (v65 & 1) == 0;
    uint64_t v69 = v67 + v68;
    if (__OFADD__(v67, v68)) {
      break;
    }
    char v70 = v65;
    if (*(void *)(v62 + 24) >= v69)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v31 = (void *)v156;
        if ((v65 & 1) == 0) {
          goto LABEL_35;
        }
      }
      else
      {
        sub_25B1947F0();
        unint64_t v31 = (void *)v156;
        if ((v70 & 1) == 0) {
          goto LABEL_35;
        }
      }
    }
    else
    {
      sub_25B18F964(v69, isUniquelyReferenced_nonNull_native);
      unint64_t v71 = sub_25B18A634(v64, v57);
      if ((v70 & 1) != (v72 & 1)) {
        goto LABEL_82;
      }
      unint64_t v66 = v71;
      unint64_t v31 = (void *)v156;
      if ((v70 & 1) == 0)
      {
LABEL_35:
        v31[(v66 >> 6) + 8] |= 1 << v66;
        uint64_t v74 = (uint64_t *)(v31[6] + 16 * v66);
        *uint64_t v74 = v64;
        v74[1] = v57;
        uint64_t v75 = (void *)(v31[7] + 16 * v66);
        *uint64_t v75 = v61;
        v75[1] = v60;
        uint64_t v76 = v31[2];
        BOOL v77 = __OFADD__(v76, 1);
        uint64_t v78 = v76 + 1;
        if (v77) {
          goto LABEL_77;
        }
        v31[2] = v78;
        swift_bridgeObjectRetain();
        goto LABEL_37;
      }
    }
    uint64_t v73 = (void *)(v31[7] + 16 * v66);
    swift_bridgeObjectRelease();
    void *v73 = v61;
    v73[1] = v60;
LABEL_37:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v146)(v147, v42);
    uint64_t v32 = v141;
LABEL_6:
    unint64_t v29 = v153;
    char v30 = v154;
    uint64_t v33 = v152;
    sub_25B116DE0(v152, &qword_26A4D9EE8);
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t sub_25B170B7C(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 32);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (v3 < 0)
    {
      sub_25B16FC44(v1);
    }
    else if (v3)
    {
      sub_25B1862C8(v1, v2);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_25B170C08(uint64_t a1)
{
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v3 = MEMORY[0x270FA5388](v68);
  uint64_t v67 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v66 = (uint64_t)&v57 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v65 = (uint64_t)&v57 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v64 = (uint64_t)&v57 - v9;
  uint64_t v10 = type metadata accessor for Record.ID(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25B290410();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (uint64_t *)((char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(void **)(v1 + 232);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F0E0], v14);
  id v19 = v18;
  char v20 = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v20 & 1) == 0) {
    goto LABEL_35;
  }
  swift_beginAccess();
  sub_25B10FF48(v1 + 192, (uint64_t)v73);
  uint64_t v23 = v74;
  uint64_t v22 = v75;
  __swift_project_boxed_opaque_existential_1(v73, v74);
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v22 + 8) + 8) + 24))(v23);
  MEMORY[0x270FA5388](v24);
  *(&v57 - 2) = a1;
  uint64_t v25 = sub_25B222E74((uint64_t)sub_25B187524, (uint64_t)(&v57 - 4), v24);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  int64_t v26 = *(void *)(v25 + 16);
  if (!v26)
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v72 = MEMORY[0x263F8EE78];
  sub_25B2240E0(0, v26, 0);
  uint64_t result = sub_25B1A7EF0(v25);
  uint64_t v28 = result;
  uint64_t v29 = 0;
  uint64_t v30 = v25 + 64;
  char v31 = *(unsigned char *)(v25 + 32);
  uint64_t v57 = v25 + 88;
  uint64_t v62 = v25;
  uint64_t v63 = v11;
  int64_t v58 = v26;
  uint64_t v59 = v27;
  uint64_t v60 = v25 + 64;
  uint64_t v61 = v13;
  while ((v28 & 0x8000000000000000) == 0 && v28 < 1 << v31)
  {
    unint64_t v34 = (unint64_t)v28 >> 6;
    if ((*(void *)(v30 + 8 * ((unint64_t)v28 >> 6)) & (1 << v28)) == 0) {
      goto LABEL_30;
    }
    if (*(_DWORD *)(v25 + 36) != v27) {
      goto LABEL_31;
    }
    uint64_t v69 = v29;
    uint64_t v70 = 1 << v28;
    uint64_t v35 = v68;
    uint64_t v36 = v64;
    uint64_t v37 = v64 + *(int *)(v68 + 48);
    uint64_t v38 = *(void *)(v25 + 48);
    uint64_t v71 = *(void *)(v11 + 72);
    sub_25B1806D0(v38 + v71 * v28, v64, type metadata accessor for Record.ID);
    uint64_t v39 = *(void *)(v25 + 56);
    uint64_t v40 = type metadata accessor for RecordMetadata();
    sub_25B1806D0(v39 + *(void *)(*(void *)(v40 - 8) + 72) * v28, v37, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v41 = v65;
    sub_25B1806D0(v36, v65, type metadata accessor for Record.ID);
    sub_25B1806D0(v37, v41 + *(int *)(v35 + 48), (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v42 = v66;
    sub_25B187574(v41, v66, &qword_26A4D9860);
    uint64_t v43 = v36;
    uint64_t v44 = (uint64_t)v61;
    sub_25B116DE0(v43, &qword_26A4D9860);
    uint64_t v45 = *(int *)(v35 + 48);
    uint64_t v46 = v67;
    uint64_t v47 = v67 + v45;
    uint64_t v48 = v42 + v45;
    sub_25B1806D0(v42, v67, type metadata accessor for Record.ID);
    sub_25B1806D0(v48, v47, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    sub_25B18095C(v46, v44, type metadata accessor for Record.ID);
    sub_25B180A5C(v47, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    sub_25B116DE0(v42, &qword_26A4D9860);
    uint64_t v49 = v72;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25B2240E0(0, *(void *)(v49 + 16) + 1, 1);
      uint64_t v49 = v72;
    }
    unint64_t v51 = *(void *)(v49 + 16);
    unint64_t v50 = *(void *)(v49 + 24);
    uint64_t v25 = v62;
    uint64_t v11 = v63;
    if (v51 >= v50 >> 1)
    {
      sub_25B2240E0(v50 > 1, v51 + 1, 1);
      uint64_t v49 = v72;
    }
    *(void *)(v49 + 16) = v51 + 1;
    uint64_t result = sub_25B18095C(v44, v49+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ v51 * v71, type metadata accessor for Record.ID);
    char v31 = *(unsigned char *)(v25 + 32);
    unint64_t v32 = 1 << v31;
    if (v28 >= 1 << v31) {
      goto LABEL_32;
    }
    uint64_t v30 = v60;
    uint64_t v52 = *(void *)(v60 + 8 * v34);
    if ((v52 & v70) == 0) {
      goto LABEL_33;
    }
    LODWORD(v27) = v59;
    if (*(_DWORD *)(v25 + 36) != v59) {
      goto LABEL_34;
    }
    unint64_t v53 = v52 & (-2 << (v28 & 0x3F));
    if (v53)
    {
      unint64_t v32 = __clz(__rbit64(v53)) | v28 & 0xFFFFFFFFFFFFFFC0;
      int64_t v33 = v58;
    }
    else
    {
      unint64_t v54 = v34 + 1;
      unint64_t v55 = (v32 + 63) >> 6;
      int64_t v33 = v58;
      if (v34 + 1 < v55)
      {
        unint64_t v56 = *(void *)(v60 + 8 * v54);
        if (!v56)
        {
          unint64_t v54 = v34 + 2;
          if (v34 + 2 >= v55) {
            goto LABEL_5;
          }
          unint64_t v56 = *(void *)(v60 + 8 * v54);
          if (!v56)
          {
            while (v55 - 3 != v34)
            {
              unint64_t v56 = *(void *)(v57 + 8 * v34++);
              if (v56)
              {
                unint64_t v54 = v34 + 2;
                goto LABEL_20;
              }
            }
            goto LABEL_5;
          }
        }
LABEL_20:
        unint64_t v32 = __clz(__rbit64(v56)) + (v54 << 6);
      }
    }
LABEL_5:
    uint64_t v29 = v69 + 1;
    uint64_t v28 = v32;
    if (v69 + 1 == v33)
    {
      swift_release();
      return v49;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_25B1712CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Record.ID(0);
  sub_25B1806D0(a1 + *(int *)(v11 + 24), (uint64_t)v10, type metadata accessor for Record.ID.Ownership);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  char v12 = sub_25B290030();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v12 & 1) == 0) {
    return 0;
  }
  else {
    return *(unsigned char *)(a2 + *(int *)(type metadata accessor for RecordMetadata() + 36)) & 1;
  }
}

uint64_t Replicator.description.getter()
{
  sub_25B290900();
  return v1;
}

uint64_t sub_25B1714E8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_25B290AA0();
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  sub_25B290650();
  swift_beginAccess();
  sub_25B10FF48(a1 + 192, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA6B8);
  sub_25B290B90();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  uint64_t result = sub_25B290650();
  unint64_t v5 = v8;
  *a2 = v7;
  a2[1] = v5;
  return result;
}

uint64_t sub_25B1715D8()
{
  sub_25B290900();
  return v1;
}

unint64_t sub_25B171638()
{
  uint64_t v1 = v0;
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v2 = MEMORY[0x270FA5388](v110);
  uint64_t v109 = (void *)((char *)v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v108 = (uint64_t)v93 - v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v107 = (uint64_t)v93 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v106 = (char *)v93 - v8;
  uint64_t v9 = sub_25B290410();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (void *)((char *)v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v0 + 232);
  *char v12 = v13;
  unsigned int v14 = *MEMORY[0x263F8F0E0];
  uint64_t v16 = v10 + 104;
  uint64_t v15 = *(void (**)(void *, void, uint64_t))(v10 + 104);
  v15(v12, *MEMORY[0x263F8F0E0], v9);
  id v99 = v13;
  LOBYTE(v13) = sub_25B290440();
  id v19 = *(uint64_t (**)(void, void))(v10 + 8);
  uint64_t v18 = v10 + 8;
  uint64_t v17 = (uint64_t (*)(void *, uint64_t))v19;
  unint64_t result = v19(v12, v9);
  if ((v13 & 1) == 0) {
    goto LABEL_51;
  }
  char v100 = v15;
  unsigned int v101 = v14;
  swift_beginAccess();
  sub_25B10FF48(v1 + 192, (uint64_t)v120);
  uint64_t v22 = v121;
  uint64_t v21 = v122;
  __swift_project_boxed_opaque_existential_1(v120, v121);
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v21 + 8) + 8) + 24))(v22);
  int64_t v24 = *(void *)(v23 + 16);
  uint64_t v98 = v17;
  if (v24)
  {
    v93[1] = v16;
    unint64_t v94 = v12;
    uint64_t v95 = v18;
    uint64_t v96 = v9;
    uint64_t v97 = v1;
    uint64_t v117 = MEMORY[0x263F8EE78];
    int64_t v102 = v24;
    sub_25B2240C0(0, v24, 0);
    unint64_t result = sub_25B1A7EF0(v23);
    uint64_t v26 = result;
    unint64_t v27 = 0;
    uint64_t v28 = v23 + 64;
    char v29 = *(unsigned char *)(v23 + 32);
    v93[0] = v23 + 88;
    uint64_t v30 = v23;
    uint64_t v104 = v23 + 64;
    uint64_t v105 = v23;
    uint64_t v103 = v25;
    while (1)
    {
      if (v26 < 0 || v26 >= 1 << v29)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      if ((*(void *)(v28 + 8 * ((unint64_t)v26 >> 6)) & (1 << v26)) == 0) {
        goto LABEL_46;
      }
      if (*(_DWORD *)(v30 + 36) != v25) {
        goto LABEL_47;
      }
      uint64_t v112 = 1 << v26;
      unint64_t v113 = (unint64_t)v26 >> 6;
      unint64_t v111 = v27;
      uint64_t v32 = v110;
      uint64_t v33 = (uint64_t)v106;
      uint64_t v34 = (uint64_t)&v106[*(int *)(v110 + 48)];
      uint64_t v35 = *(void *)(v30 + 48);
      uint64_t v36 = type metadata accessor for Record.ID(0);
      sub_25B1806D0(v35 + *(void *)(*(void *)(v36 - 8) + 72) * v26, v33, type metadata accessor for Record.ID);
      uint64_t v37 = *(void *)(v30 + 56);
      uint64_t v38 = type metadata accessor for RecordMetadata();
      sub_25B1806D0(v37 + *(void *)(*(void *)(v38 - 8) + 72) * v26, v34, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t v39 = v107;
      sub_25B1806D0(v33, v107, type metadata accessor for Record.ID);
      sub_25B1806D0(v34, v39 + *(int *)(v32 + 48), (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t v40 = v108;
      sub_25B187574(v39, v108, &qword_26A4D9860);
      sub_25B116DE0(v33, &qword_26A4D9860);
      uint64_t v41 = *(int *)(v32 + 48);
      uint64_t v42 = v109;
      uint64_t v43 = (uint64_t)v109 + v41;
      uint64_t v44 = v40 + v41;
      sub_25B1806D0(v40, (uint64_t)v109, type metadata accessor for Record.ID);
      sub_25B1806D0(v44, v43, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t v45 = v42[2];
      uint64_t v46 = v42[3];
      uint64_t v48 = v42[4];
      uint64_t v47 = v42[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B180A5C((uint64_t)v42, type metadata accessor for Record.ID);
      sub_25B180A5C(v43, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      sub_25B116DE0(v40, &qword_26A4D9860);
      uint64_t v49 = v117;
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        unint64_t result = sub_25B2240C0(0, *(void *)(v49 + 16) + 1, 1);
        uint64_t v49 = v117;
      }
      unint64_t v51 = *(void *)(v49 + 16);
      unint64_t v50 = *(void *)(v49 + 24);
      if (v51 >= v50 >> 1)
      {
        unint64_t result = sub_25B2240C0(v50 > 1, v51 + 1, 1);
        uint64_t v49 = v117;
      }
      *(void *)(v49 + 16) = v51 + 1;
      uint64_t v52 = (void *)(v49 + 32 * v51);
      v52[4] = v45;
      v52[5] = v46;
      v52[6] = v48;
      v52[7] = v47;
      uint64_t v30 = v105;
      char v29 = *(unsigned char *)(v105 + 32);
      unint64_t v31 = 1 << v29;
      if (v26 >= 1 << v29) {
        goto LABEL_48;
      }
      uint64_t v28 = v104;
      unint64_t v53 = v113;
      uint64_t v54 = *(void *)(v104 + 8 * v113);
      if ((v54 & v112) == 0) {
        goto LABEL_49;
      }
      LODWORD(v25) = v103;
      if (*(_DWORD *)(v105 + 36) != v103) {
        goto LABEL_50;
      }
      unint64_t v55 = v54 & (-2 << (v26 & 0x3F));
      if (v55)
      {
        unint64_t v31 = __clz(__rbit64(v55)) | v26 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v56 = v113 + 1;
        unint64_t v57 = (v31 + 63) >> 6;
        if (v113 + 1 < v57)
        {
          unint64_t v58 = *(void *)(v104 + 8 * v56);
          if (!v58)
          {
            unint64_t v56 = v113 + 2;
            if (v113 + 2 >= v57) {
              goto LABEL_5;
            }
            unint64_t v58 = *(void *)(v104 + 8 * v56);
            if (!v58)
            {
              while (v57 - 3 != v53)
              {
                unint64_t v58 = *(void *)(v93[0] + 8 * v53++);
                if (v58)
                {
                  unint64_t v56 = v53 + 2;
                  goto LABEL_20;
                }
              }
              goto LABEL_5;
            }
          }
LABEL_20:
          unint64_t v31 = __clz(__rbit64(v58)) + (v56 << 6);
        }
      }
LABEL_5:
      unint64_t v27 = v111 + 1;
      uint64_t v26 = v31;
      if (v111 + 1 == v102)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v96;
        uint64_t v1 = v97;
        char v12 = v94;
        goto LABEL_28;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v49 = MEMORY[0x263F8EE78];
LABEL_28:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v120);
  uint64_t v59 = sub_25B227F10(v49);
  swift_bridgeObjectRelease();
  swift_retain();
  unint64_t v113 = sub_25B182484(MEMORY[0x263F8EE80], v59, v1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v61 = v99;
  uint64_t v60 = v100;
  *char v12 = v99;
  v60(v12, v101, v9);
  id v62 = v61;
  char v63 = sub_25B290440();
  uint64_t v64 = v98;
  unint64_t result = v98(v12, v9);
  if ((v63 & 1) == 0) {
    goto LABEL_52;
  }
  swift_beginAccess();
  swift_retain();
  uint64_t v65 = swift_bridgeObjectRetain();
  uint64_t v110 = sub_25B17BCD4(v65, v1);
  swift_bridgeObjectRelease();
  swift_release();
  *char v12 = v62;
  v100(v12, v101, v9);
  id v66 = v62;
  char v67 = sub_25B290440();
  unint64_t result = v64(v12, v9);
  if (v67)
  {
    swift_retain();
    uint64_t v68 = swift_bridgeObjectRetain();
    uint64_t v69 = sub_25B180F4C(v68, v1);
    swift_bridgeObjectRelease();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D68);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25B293280;
    *(void *)(inited + 32) = 0x617461646174654DLL;
    *(void *)(inited + 40) = 0xE800000000000000;
    uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A60);
    *(void *)(inited + 48) = v113;
    *(void *)(inited + 72) = v71;
    strcpy((char *)(inited + 80), "EnabledZones");
    *(unsigned char *)(inited + 93) = 0;
    *(_WORD *)(inited + 94) = -5120;
    uint64_t v72 = v110;
    int64_t v73 = *(void *)(v110 + 16);
    uint64_t v108 = inited;
    uint64_t v109 = (void *)v69;
    if (v73)
    {
      uint64_t v119 = MEMORY[0x263F8EE78];
      sub_25B224214(0, v73, 0);
      uint64_t v74 = v119;
      uint64_t v75 = (unint64_t *)(v72 + 72);
      unint64_t v111 = 0x800000025B29C8E0;
      do
      {
        unint64_t v76 = *v75;
        uint64_t v112 = *(v75 - 1);
        unint64_t v113 = v76;
        uint64_t v117 = 0;
        unint64_t v118 = 0xE000000000000000;
        sub_25B290AA0();
        sub_25B290650();
        uint64_t v115 = 0;
        unint64_t v116 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25B290AA0();
        swift_bridgeObjectRelease();
        uint64_t v115 = 540697705;
        unint64_t v116 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        sub_25B290650();
        swift_bridgeObjectRelease();
        sub_25B290650();
        swift_bridgeObjectRetain();
        sub_25B290650();
        swift_bridgeObjectRelease();
        sub_25B290650();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25B290650();
        uint64_t v115 = 0;
        unint64_t v116 = 0xE000000000000000;
        sub_25B290AA0();
        swift_bridgeObjectRelease();
        uint64_t v115 = 0x3A746E6572727563;
        unint64_t v116 = 0xE900000000000020;
        uint64_t v114 = v112;
        sub_25B290DB0();
        sub_25B290650();
        swift_bridgeObjectRelease();
        sub_25B290650();
        uint64_t v114 = v113;
        sub_25B290DB0();
        sub_25B290650();
        swift_bridgeObjectRelease();
        sub_25B290650();
        swift_bridgeObjectRelease();
        uint64_t v77 = v117;
        unint64_t v78 = v118;
        uint64_t v119 = v74;
        unint64_t v80 = *(void *)(v74 + 16);
        unint64_t v79 = *(void *)(v74 + 24);
        if (v80 >= v79 >> 1)
        {
          sub_25B224214(v79 > 1, v80 + 1, 1);
          uint64_t v74 = v119;
        }
        v75 += 6;
        *(void *)(v74 + 16) = v80 + 1;
        uint64_t v81 = v74 + 16 * v80;
        *(void *)(v81 + 32) = v77;
        *(void *)(v81 + 40) = v78;
        --v73;
      }
      while (v73);
      swift_bridgeObjectRelease();
      uint64_t inited = v108;
      uint64_t v69 = (uint64_t)v109;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v74 = MEMORY[0x263F8EE78];
    }
    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AF0);
    uint64_t v83 = v82;
    *(void *)(inited + 96) = v74;
    *(void *)(inited + 120) = v82;
    strcpy((char *)(inited + 128), "DisabledZones");
    *(_WORD *)(inited + 142) = -4864;
    int64_t v84 = *(void *)(v69 + 16);
    if (v84)
    {
      uint64_t v110 = v82;
      uint64_t v119 = MEMORY[0x263F8EE78];
      sub_25B224214(0, v84, 0);
      uint64_t v85 = v119;
      uint64_t v86 = (unint64_t *)(v69 + 72);
      unint64_t v111 = 0x800000025B29C8E0;
      do
      {
        unint64_t v87 = *v86;
        uint64_t v112 = *(v86 - 1);
        unint64_t v113 = v87;
        uint64_t v117 = 0;
        unint64_t v118 = 0xE000000000000000;
        sub_25B290AA0();
        sub_25B290650();
        uint64_t v115 = 0;
        unint64_t v116 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25B290AA0();
        swift_bridgeObjectRelease();
        uint64_t v115 = 540697705;
        unint64_t v116 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        sub_25B290650();
        swift_bridgeObjectRelease();
        sub_25B290650();
        swift_bridgeObjectRetain();
        sub_25B290650();
        swift_bridgeObjectRelease();
        sub_25B290650();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25B290650();
        uint64_t v115 = 0;
        unint64_t v116 = 0xE000000000000000;
        sub_25B290AA0();
        swift_bridgeObjectRelease();
        uint64_t v115 = 0x3A746E6572727563;
        unint64_t v116 = 0xE900000000000020;
        uint64_t v114 = v112;
        sub_25B290DB0();
        sub_25B290650();
        swift_bridgeObjectRelease();
        sub_25B290650();
        uint64_t v114 = v113;
        sub_25B290DB0();
        sub_25B290650();
        swift_bridgeObjectRelease();
        sub_25B290650();
        swift_bridgeObjectRelease();
        uint64_t v88 = v117;
        unint64_t v89 = v118;
        uint64_t v119 = v85;
        unint64_t v91 = *(void *)(v85 + 16);
        unint64_t v90 = *(void *)(v85 + 24);
        if (v91 >= v90 >> 1)
        {
          sub_25B224214(v90 > 1, v91 + 1, 1);
          uint64_t v85 = v119;
        }
        v86 += 6;
        *(void *)(v85 + 16) = v91 + 1;
        uint64_t v92 = v85 + 16 * v91;
        *(void *)(v92 + 32) = v88;
        *(void *)(v92 + 40) = v89;
        --v84;
      }
      while (v84);
      swift_bridgeObjectRelease();
      uint64_t inited = v108;
      uint64_t v83 = v110;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v85 = MEMORY[0x263F8EE78];
    }
    *(void *)(inited + 168) = v83;
    *(void *)(inited + 144) = v85;
    return sub_25B20DE70(inited);
  }
  else
  {
LABEL_53:
    __break(1u);
  }
  return result;
}

uint64_t sub_25B1723CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v7 = MEMORY[0x270FA5388](v111);
  uint64_t v110 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v109 = (char *)&v94 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v108 = (uint64_t)&v94 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v107 = (uint64_t)&v94 - v13;
  uint64_t v14 = type metadata accessor for Record.ID(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v117 = (uint64_t)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a2;
  uint64_t v18 = a2[1];
  uint64_t v20 = a2[2];
  uint64_t v19 = a2[3];
  uint64_t result = swift_beginAccess();
  uint64_t v112 = a3;
  uint64_t v22 = *(void *)(a3 + 240);
  if (*(void *)(v22 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_25B18A768(v17, v18, v20, v19);
    if (v24)
    {
      uint64_t v106 = v15;
      id v99 = a1;
      uint64_t v101 = *(void *)(*(void *)(v22 + 56) + 8 * v23);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v118 = v20;
      unint64_t v119 = v19;
      swift_bridgeObjectRetain();
      sub_25B290650();
      swift_bridgeObjectRetain();
      sub_25B290650();
      swift_bridgeObjectRelease();
      uint64_t v97 = v118;
      unint64_t v98 = v119;
      uint64_t v25 = v112 + 192;
      swift_beginAccess();
      uint64_t v100 = v25;
      sub_25B10FF48(v25, (uint64_t)&v118);
      uint64_t v27 = v120;
      uint64_t v26 = v121;
      __swift_project_boxed_opaque_existential_1(&v118, v120);
      uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v26 + 8) + 8) + 24))(v27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_25B182244(v28, v17, v18, v20, v19);
      uint64_t v96 = v3;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v118);
      int64_t v30 = *(void *)(v29 + 16);
      if (v30)
      {
        uint64_t v118 = MEMORY[0x263F8EE78];
        sub_25B2240E0(0, v30, 0);
        uint64_t result = sub_25B1A7EF0(v29);
        uint64_t v32 = result;
        unint64_t v33 = 0;
        uint64_t v34 = v29 + 64;
        char v35 = *(unsigned char *)(v29 + 32);
        uint64_t v95 = v29 + 88;
        uint64_t v36 = v106;
        uint64_t v105 = v29;
        int64_t v102 = v30;
        uint64_t v103 = v31;
        uint64_t v104 = v29 + 64;
        uint64_t v37 = (uint64_t)v109;
        while (1)
        {
          if (v32 < 0 || v32 >= 1 << v35)
          {
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
            goto LABEL_60;
          }
          if ((*(void *)(v34 + 8 * ((unint64_t)v32 >> 6)) & (1 << v32)) == 0) {
            goto LABEL_54;
          }
          if (*(_DWORD *)(v29 + 36) != v31) {
            goto LABEL_55;
          }
          uint64_t v114 = 1 << v32;
          unint64_t v115 = (unint64_t)v32 >> 6;
          unint64_t v113 = v33;
          uint64_t v39 = v111;
          uint64_t v40 = v107;
          uint64_t v41 = v107 + *(int *)(v111 + 48);
          uint64_t v42 = *(void *)(v29 + 48);
          uint64_t v116 = *(void *)(v36 + 72);
          sub_25B1806D0(v42 + v116 * v32, v107, type metadata accessor for Record.ID);
          uint64_t v43 = *(void *)(v29 + 56);
          uint64_t v44 = type metadata accessor for RecordMetadata();
          sub_25B1806D0(v43 + *(void *)(*(void *)(v44 - 8) + 72) * v32, v41, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
          uint64_t v45 = v108;
          sub_25B1806D0(v40, v108, type metadata accessor for Record.ID);
          sub_25B1806D0(v41, v45 + *(int *)(v39 + 48), (uint64_t (*)(void))type metadata accessor for RecordMetadata);
          sub_25B187574(v45, v37, &qword_26A4D9860);
          sub_25B116DE0(v40, &qword_26A4D9860);
          uint64_t v46 = *(int *)(v39 + 48);
          uint64_t v47 = v110;
          uint64_t v48 = v110 + v46;
          uint64_t v49 = v37 + v46;
          sub_25B1806D0(v37, v110, type metadata accessor for Record.ID);
          sub_25B1806D0(v49, v48, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
          sub_25B18095C(v47, v117, type metadata accessor for Record.ID);
          sub_25B180A5C(v48, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
          sub_25B116DE0(v37, &qword_26A4D9860);
          uint64_t v50 = v118;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_25B2240E0(0, *(void *)(v50 + 16) + 1, 1);
            uint64_t v50 = v118;
          }
          unint64_t v52 = *(void *)(v50 + 16);
          unint64_t v51 = *(void *)(v50 + 24);
          if (v52 >= v51 >> 1)
          {
            sub_25B2240E0(v51 > 1, v52 + 1, 1);
            uint64_t v50 = v118;
          }
          *(void *)(v50 + 16) = v52 + 1;
          uint64_t v36 = v106;
          uint64_t result = sub_25B18095C(v117, v50+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ v52 * v116, type metadata accessor for Record.ID);
          uint64_t v29 = v105;
          char v35 = *(unsigned char *)(v105 + 32);
          unint64_t v38 = 1 << v35;
          if (v32 >= 1 << v35) {
            goto LABEL_56;
          }
          uint64_t v34 = v104;
          unint64_t v53 = v115;
          uint64_t v54 = *(void *)(v104 + 8 * v115);
          if ((v54 & v114) == 0) {
            goto LABEL_57;
          }
          LODWORD(v31) = v103;
          if (*(_DWORD *)(v105 + 36) != v103) {
            goto LABEL_58;
          }
          unint64_t v55 = v54 & (-2 << (v32 & 0x3F));
          if (v55)
          {
            unint64_t v38 = __clz(__rbit64(v55)) | v32 & 0xFFFFFFFFFFFFFFC0;
          }
          else
          {
            unint64_t v56 = v115 + 1;
            unint64_t v57 = (v38 + 63) >> 6;
            if (v115 + 1 < v57)
            {
              unint64_t v58 = *(void *)(v104 + 8 * v56);
              if (!v58)
              {
                unint64_t v56 = v115 + 2;
                if (v115 + 2 >= v57) {
                  goto LABEL_6;
                }
                unint64_t v58 = *(void *)(v104 + 8 * v56);
                if (!v58)
                {
                  while (v57 - 3 != v53)
                  {
                    unint64_t v58 = *(void *)(v95 + 8 * v53++);
                    if (v58)
                    {
                      unint64_t v56 = v53 + 2;
                      goto LABEL_21;
                    }
                  }
                  goto LABEL_6;
                }
              }
LABEL_21:
              unint64_t v38 = __clz(__rbit64(v58)) + (v56 << 6);
            }
          }
LABEL_6:
          unint64_t v33 = v113 + 1;
          uint64_t v32 = v38;
          if (v113 + 1 == v102)
          {
            swift_release();
            uint64_t v59 = *(void *)(v50 + 16);
            if (!v59) {
              goto LABEL_48;
            }
            goto LABEL_30;
          }
        }
      }
LABEL_47:
      swift_release();
      uint64_t v50 = MEMORY[0x263F8EE78];
      uint64_t v36 = v106;
      uint64_t v59 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (v59)
      {
LABEL_30:
        unint64_t v60 = v50 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
        uint64_t v114 = v50;
        unint64_t v115 = v101 + 16;
        uint64_t v117 = *(void *)(v36 + 72);
        swift_bridgeObjectRetain();
        uint64_t v61 = 0;
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        unint64_t v113 = v60;
        unint64_t v64 = v60;
        while (1)
        {
          uint64_t v118 = v112;
          if (MEMORY[0x261160990](v115))
          {
            uint64_t v65 = *(void *)(v101 + 24);
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v116 = v63;
            uint64_t v67 = v62;
            uint64_t v68 = v61;
            uint64_t v69 = *(uint64_t (**)(uint64_t *, unint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v65 + 56);
            uint64_t v70 = type metadata accessor for Replicator();
            uint64_t v71 = v69(&v118, v64, v70, &protocol witness table for Replicator, ObjectType, v65);
            uint64_t v61 = v68;
            uint64_t v62 = v67;
            uint64_t v72 = v116;
            uint64_t v73 = v71;
            uint64_t v75 = v74;
            uint64_t v77 = v76;
            uint64_t result = swift_unknownObjectRelease();
            BOOL v78 = __OFADD__(v72, v73);
            uint64_t v63 = v72 + v73;
            if (v78) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t result = sub_25B290640();
            uint64_t v75 = 0;
            uint64_t v77 = 0;
            BOOL v78 = __OFADD__(v63, result);
            v63 += result;
            if (v78) {
              goto LABEL_59;
            }
          }
          BOOL v78 = __OFADD__(v62, v75);
          v62 += v75;
          if (v78) {
            break;
          }
          BOOL v78 = __OFADD__(v61, v77);
          v61 += v77;
          if (v78) {
            goto LABEL_61;
          }
          v64 += v117;
          if (!--v59)
          {
            uint64_t v50 = v114;
            swift_bridgeObjectRelease();
            uint64_t v79 = *(void *)(v50 + 16);
            if (v79)
            {
              uint64_t v116 = v61;
              uint64_t v80 = swift_bridgeObjectRetain();
              uint64_t v81 = 0;
              unint64_t v82 = v113;
              do
              {
                uint64_t v83 = (void *)MEMORY[0x26115FD30](v80);
                sub_25B10FF48(v100, (uint64_t)&v118);
                uint64_t v85 = v120;
                uint64_t v84 = v121;
                __swift_project_boxed_opaque_existential_1(&v118, v120);
                (*(void (**)(unint64_t, uint64_t))(*(void *)(*(void *)(v84 + 8) + 8) + 56))(v82, v85);
                if (v86)
                {
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v118);
                  uint64_t v87 = sub_25B290640();
                  swift_bridgeObjectRelease();
                  BOOL v78 = __OFADD__(v81, v87);
                  v81 += v87;
                  if (v78)
                  {
                    __break(1u);
                    goto LABEL_47;
                  }
                }
                else
                {
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v118);
                }
                v82 += v117;
                --v79;
              }
              while (v79);
              uint64_t v50 = v114;
              swift_bridgeObjectRelease();
              uint64_t v61 = v116;
            }
            else
            {
              uint64_t v81 = 0;
            }
            uint64_t v88 = v62;
            goto LABEL_52;
          }
        }
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
      }
      else
      {
LABEL_48:
        uint64_t v63 = 0;
        uint64_t v88 = 0;
        uint64_t v61 = 0;
        uint64_t v81 = 0;
LABEL_52:
        uint64_t v118 = 0;
        unint64_t v119 = 0xE000000000000000;
        sub_25B290AA0();
        sub_25B290650();
        uint64_t v89 = *(void *)(v50 + 16);
        swift_bridgeObjectRelease();
        uint64_t v122 = v89;
        sub_25B290DB0();
        sub_25B290650();
        swift_bridgeObjectRelease();
        sub_25B290650();
        uint64_t v122 = v63;
        sub_25B290DB0();
        sub_25B290650();
        swift_bridgeObjectRelease();
        sub_25B290650();
        uint64_t v122 = v81;
        sub_25B290DB0();
        sub_25B290650();
        swift_bridgeObjectRelease();
        sub_25B290650();
        uint64_t v122 = v88;
        sub_25B290DB0();
        sub_25B290650();
        swift_bridgeObjectRelease();
        sub_25B290650();
        uint64_t v122 = v61;
        sub_25B290DB0();
        sub_25B290650();
        swift_bridgeObjectRelease();
        uint64_t v90 = v118;
        uint64_t v91 = v119;
        uint64_t v92 = v99;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v118 = *v92;
        *uint64_t v92 = 0x8000000000000000;
        sub_25B2211AC(v90, v91, v97, v98, isUniquelyReferenced_nonNull_native);
        *uint64_t v92 = v118;
        swift_release();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

unint64_t sub_25B172F44()
{
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v1 = MEMORY[0x270FA5388](v122);
  uint64_t v121 = (char *)&v110 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v120 = (char *)&v110 - v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  unint64_t v119 = (char *)&v110 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v118 = (char *)&v110 - v7;
  uint64_t v133 = type metadata accessor for PairingRelationship();
  uint64_t v134 = *(void *)(v133 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v133);
  uint64_t v123 = (uint64_t)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v110 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v124 = (uint64_t)&v110 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v110 - v16;
  MEMORY[0x270FA5388](v15);
  unint64_t v132 = (unint64_t)&v110 - v18;
  uint64_t v19 = sub_25B290410();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (uint64_t *)((char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v23 = *(void **)(v0 + 232);
  void *v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, *MEMORY[0x263F8F0E0], v19);
  id v24 = v23;
  char v25 = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if (v25)
  {
    uint64_t v112 = v0;
    swift_beginAccess();
    sub_25B10FF48(v0 + 192, (uint64_t)&v136);
    uint64_t v27 = v137;
    uint64_t v26 = v138;
    __swift_project_boxed_opaque_existential_1(&v136, v137);
    uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v26 + 8) + 8) + 32))(v27);
    int64_t v29 = *(void *)(v28 + 16);
    long long v125 = v12;
    unint64_t v113 = v17;
    if (v29)
    {
      uint64_t v135 = MEMORY[0x263F8EE78];
      sub_25B22411C(0, v29, 0);
      uint64_t v31 = sub_25B1A7EF0(v28);
      uint64_t v32 = 0;
      uint64_t v33 = v28 + 64;
      char v34 = *(unsigned char *)(v28 + 32);
      uint64_t v114 = v30;
      uint64_t v111 = v28 + 88;
      uint64_t v117 = v28;
      int64_t v115 = v29;
      uint64_t v116 = v28 + 64;
      uint64_t v35 = (uint64_t)v120;
      while (1)
      {
        if (v31 < 0 || v31 >= 1 << v34) {
          goto LABEL_77;
        }
        if ((*(void *)(v33 + 8 * ((unint64_t)v31 >> 6)) & (1 << v31)) == 0) {
          goto LABEL_78;
        }
        if (*(_DWORD *)(v28 + 36) != v30) {
          goto LABEL_79;
        }
        uint64_t v128 = 1 << v31;
        uint64_t v127 = v30;
        unint64_t v129 = (unint64_t)v31 >> 6;
        uint64_t v126 = v32;
        uint64_t v38 = v122;
        uint64_t v39 = (uint64_t)v118;
        uint64_t v40 = (uint64_t)&v118[*(int *)(v122 + 48)];
        uint64_t v41 = *(void *)(v28 + 48);
        uint64_t v42 = sub_25B290080();
        uint64_t v130 = *(void *)(v42 - 8);
        uint64_t v43 = v41 + *(void *)(v130 + 72) * v31;
        uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 16);
        v44(v39, v43, v42);
        uint64_t v45 = *(void *)(v28 + 56);
        uint64_t v131 = *(void *)(v134 + 72);
        sub_25B1806D0(v45 + v131 * v31, v40, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v46 = (uint64_t)v119;
        v44((uint64_t)v119, v39, v42);
        sub_25B1806D0(v40, v46 + *(int *)(v38 + 48), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        sub_25B187574(v46, v35, &qword_26A4D9EE8);
        sub_25B116DE0(v39, &qword_26A4D9EE8);
        uint64_t v47 = *(int *)(v38 + 48);
        uint64_t v48 = v121;
        uint64_t v49 = (uint64_t)&v121[v47];
        uint64_t v50 = v35 + v47;
        v44((uint64_t)v121, v35, v42);
        sub_25B1806D0(v50, v49, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        sub_25B18095C(v49, v132, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        (*(void (**)(char *, uint64_t))(v130 + 8))(v48, v42);
        sub_25B116DE0(v35, &qword_26A4D9EE8);
        uint64_t v51 = v135;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25B22411C(0, *(void *)(v51 + 16) + 1, 1);
          uint64_t v51 = v135;
        }
        unint64_t v53 = *(void *)(v51 + 16);
        unint64_t v52 = *(void *)(v51 + 24);
        uint64_t v28 = v117;
        if (v53 >= v52 >> 1)
        {
          sub_25B22411C(v52 > 1, v53 + 1, 1);
          uint64_t v51 = v135;
        }
        *(void *)(v51 + 16) = v53 + 1;
        sub_25B18095C(v132, v51+ ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80))+ v53 * v131, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        char v34 = *(unsigned char *)(v28 + 32);
        unint64_t v36 = 1 << v34;
        if (v31 >= 1 << v34) {
          goto LABEL_80;
        }
        uint64_t v33 = v116;
        unint64_t v54 = v129;
        uint64_t v55 = *(void *)(v116 + 8 * v129);
        if ((v55 & v128) == 0) {
          goto LABEL_81;
        }
        if (*(_DWORD *)(v28 + 36) != v127) {
          goto LABEL_82;
        }
        unint64_t v56 = v55 & (-2 << (v31 & 0x3F));
        if (v56)
        {
          unint64_t v36 = __clz(__rbit64(v56)) | v31 & 0xFFFFFFFFFFFFFFC0;
          uint64_t v12 = v125;
          int64_t v37 = v115;
        }
        else
        {
          unint64_t v57 = v129 + 1;
          unint64_t v58 = (v36 + 63) >> 6;
          uint64_t v12 = v125;
          int64_t v37 = v115;
          if (v129 + 1 < v58)
          {
            unint64_t v59 = *(void *)(v116 + 8 * v57);
            if (!v59)
            {
              unint64_t v57 = v129 + 2;
              if (v129 + 2 >= v58) {
                goto LABEL_5;
              }
              unint64_t v59 = *(void *)(v116 + 8 * v57);
              if (!v59)
              {
                while (v58 - 3 != v54)
                {
                  unint64_t v59 = *(void *)(v111 + 8 * v54++);
                  if (v59)
                  {
                    unint64_t v57 = v54 + 2;
                    goto LABEL_20;
                  }
                }
                goto LABEL_5;
              }
            }
LABEL_20:
            unint64_t v36 = __clz(__rbit64(v59)) + (v57 << 6);
          }
        }
LABEL_5:
        uint64_t v32 = v126 + 1;
        uint64_t v30 = v114;
        uint64_t v31 = v36;
        if (v126 + 1 == v37)
        {
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v51 = MEMORY[0x263F8EE78];
LABEL_28:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v136);
    unint64_t v60 = MEMORY[0x263F8EE78];
    unint64_t v136 = MEMORY[0x263F8EE78];
    uint64_t v61 = *(void *)(v51 + 16);
    swift_bridgeObjectRetain();
    if (v61)
    {
      unint64_t v62 = 0;
      uint64_t v63 = (uint64_t)v113;
      do
      {
        if (v62 >= *(void *)(v51 + 16))
        {
          __break(1u);
          goto LABEL_76;
        }
        unint64_t v64 = (*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
        uint64_t v65 = *(void *)(v134 + 72);
        sub_25B1806D0(v51 + v64 + v65 * v62, v63, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v66 = v63 + *(int *)(v133 + 32);
        uint64_t v67 = *(void *)v66;
        unint64_t v68 = *(void *)(v66 + 8);
        if (v68 == 2)
        {
          sub_25B1200A4(*(void *)v66, 2uLL);
          sub_25B1200A4(0, 2uLL);
          sub_25B18095C(v63, v124, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          unint64_t v69 = v136;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_25B22411C(0, *(void *)(v69 + 16) + 1, 1);
            unint64_t v69 = v136;
          }
          unint64_t v71 = *(void *)(v69 + 16);
          unint64_t v70 = *(void *)(v69 + 24);
          if (v71 >= v70 >> 1)
          {
            sub_25B22411C(v70 > 1, v71 + 1, 1);
            unint64_t v69 = v136;
          }
          *(void *)(v69 + 16) = v71 + 1;
          sub_25B18095C(v124, v69 + v64 + v71 * v65, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          uint64_t v63 = (uint64_t)v113;
        }
        else
        {
          sub_25B120090(*(void *)v66, *(void *)(v66 + 8));
          sub_25B1200A4(v67, v68);
          sub_25B1200A4(0, 2uLL);
          sub_25B180A5C(v63, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        }
        ++v62;
      }
      while (v61 != v62);
      swift_bridgeObjectRelease();
      unint64_t v72 = 0;
      unint64_t v73 = v136;
      unint64_t v136 = MEMORY[0x263F8EE78];
      uint64_t v74 = v51 + v64;
      while (v72 < *(void *)(v51 + 16))
      {
        sub_25B1806D0(v74, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v75 = &v12[*(int *)(v133 + 32)];
        uint64_t v76 = *(void *)v75;
        unint64_t v77 = *((void *)v75 + 1);
        if (v77 == 2)
        {
          sub_25B1200A4(*(void *)v75, 2uLL);
          sub_25B1200A4(0, 2uLL);
          sub_25B180A5C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        }
        else
        {
          sub_25B120090(*(void *)v75, *((void *)v75 + 1));
          sub_25B1200A4(v76, v77);
          sub_25B1200A4(0, 2uLL);
          sub_25B18095C((uint64_t)v12, v123, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          unint64_t v78 = v136;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_25B22411C(0, *(void *)(v78 + 16) + 1, 1);
            unint64_t v78 = v136;
          }
          unint64_t v80 = *(void *)(v78 + 16);
          unint64_t v79 = *(void *)(v78 + 24);
          if (v80 >= v79 >> 1)
          {
            sub_25B22411C(v79 > 1, v80 + 1, 1);
            unint64_t v78 = v136;
          }
          *(void *)(v78 + 16) = v80 + 1;
          sub_25B18095C(v123, v78 + v64 + v80 * v65, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          uint64_t v12 = v125;
        }
        ++v72;
        v74 += v65;
        if (v61 == v72)
        {
          unint64_t v60 = MEMORY[0x263F8EE78];
          goto LABEL_51;
        }
      }
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    swift_bridgeObjectRelease();
    unint64_t v73 = v136;
    unint64_t v136 = v60;
LABEL_51:
    swift_bridgeObjectRelease();
    unint64_t v81 = v136;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D68);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25B293290;
    *(void *)(inited + 32) = 0x646572696150;
    *(void *)(inited + 40) = 0xE600000000000000;
    unint64_t v136 = v60;
    uint64_t v83 = *(void *)(v73 + 16);
    if (v83)
    {
      uint64_t v84 = v73 + ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
      uint64_t v85 = *(void *)(v134 + 72);
      swift_bridgeObjectRetain();
      uint64_t v86 = v112;
      do
      {
        sub_25B173DD4(&v136, v84, v86);
        v84 += v85;
        --v83;
      }
      while (v83);
      swift_release_n();
      unint64_t v87 = v136;
    }
    else
    {
      swift_release();
      unint64_t v87 = MEMORY[0x263F8EE78];
      uint64_t v86 = v112;
    }
    int64_t v88 = *(void *)(v87 + 16);
    uint64_t v133 = inited;
    if (v88)
    {
      unint64_t v132 = v81;
      unint64_t v136 = v60;
      sub_25B224214(0, v88, 0);
      unint64_t v89 = v136;
      uint64_t v90 = (uint64_t *)(v87 + 40);
      do
      {
        uint64_t v92 = *(v90 - 1);
        uint64_t v91 = *v90;
        unint64_t v136 = v89;
        unint64_t v94 = *(void *)(v89 + 16);
        unint64_t v93 = *(void *)(v89 + 24);
        swift_bridgeObjectRetain();
        if (v94 >= v93 >> 1)
        {
          sub_25B224214(v93 > 1, v94 + 1, 1);
          unint64_t v89 = v136;
        }
        v90 += 2;
        *(void *)(v89 + 16) = v94 + 1;
        unint64_t v95 = v89 + 16 * v94;
        *(void *)(v95 + 32) = v92;
        *(void *)(v95 + 40) = v91;
        --v88;
      }
      while (v88);
      swift_bridgeObjectRelease();
      uint64_t v86 = v112;
      unint64_t v60 = MEMORY[0x263F8EE78];
      uint64_t inited = v133;
      unint64_t v81 = v132;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v89 = MEMORY[0x263F8EE78];
    }
    uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AF0);
    *(void *)(inited + 48) = v89;
    *(void *)(inited + 72) = v96;
    *(void *)(inited + 80) = 0x6465726961706E55;
    *(void *)(inited + 88) = 0xE800000000000000;
    unint64_t v136 = v60;
    uint64_t v97 = *(void *)(v81 + 16);
    if (v97)
    {
      uint64_t v98 = v81 + ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
      uint64_t v99 = *(void *)(v134 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_25B173DD4(&v136, v98, v86);
        v98 += v99;
        --v97;
      }
      while (v97);
      swift_release_n();
      unint64_t v100 = v136;
      int64_t v101 = *(void *)(v136 + 16);
      if (v101)
      {
LABEL_67:
        unint64_t v136 = v60;
        sub_25B224214(0, v101, 0);
        unint64_t v102 = v136;
        uint64_t v103 = (uint64_t *)(v100 + 40);
        do
        {
          uint64_t v105 = *(v103 - 1);
          uint64_t v104 = *v103;
          unint64_t v136 = v102;
          unint64_t v107 = *(void *)(v102 + 16);
          unint64_t v106 = *(void *)(v102 + 24);
          swift_bridgeObjectRetain();
          if (v107 >= v106 >> 1)
          {
            sub_25B224214(v106 > 1, v107 + 1, 1);
            unint64_t v102 = v136;
          }
          v103 += 2;
          *(void *)(v102 + 16) = v107 + 1;
          unint64_t v108 = v102 + 16 * v107;
          *(void *)(v108 + 32) = v105;
          *(void *)(v108 + 40) = v104;
          --v101;
        }
        while (v101);
        swift_bridgeObjectRelease();
        uint64_t inited = v133;
        goto LABEL_74;
      }
    }
    else
    {
      swift_release();
      unint64_t v100 = MEMORY[0x263F8EE78];
      int64_t v101 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (v101) {
        goto LABEL_67;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v102 = MEMORY[0x263F8EE78];
LABEL_74:
    *(void *)(inited + 120) = v96;
    *(void *)(inited + 96) = v102;
    return sub_25B20DE70(inited);
  }
LABEL_83:
  __break(1u);
  swift_release();
  unint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_25B173DD4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a1;
  uint64_t v66 = sub_25B290080();
  uint64_t v5 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  unint64_t v60 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ZoneVersion();
  uint64_t v61 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v65 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA6E8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v52 - v13;
  swift_beginAccess();
  sub_25B10FF48(a3 + 192, (uint64_t)&v67);
  uint64_t v15 = *((void *)&v68 + 1);
  uint64_t v16 = v69;
  __swift_project_boxed_opaque_existential_1(&v67, *((uint64_t *)&v68 + 1));
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 + 8) + 24);
  uint64_t v54 = a2;
  uint64_t v18 = v17(a2, v15);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v67);
  int64_t v81 = 0;
  uint64_t v20 = *(void *)(v18 + 64);
  uint64_t v56 = v18 + 64;
  uint64_t v62 = v18;
  uint64_t v21 = 1 << *(unsigned char *)(v18 + 32);
  uint64_t v22 = -1;
  uint64_t v79 = 0;
  unint64_t v80 = 0xE000000000000000;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  uint64_t v63 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  unint64_t v59 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  unint64_t v58 = (void (**)(char *, uint64_t))(v5 + 8);
  int64_t v57 = (unint64_t)(v21 + 63) >> 6;
  int64_t v53 = v57 - 1;
  for (i = v12; ; uint64_t v12 = i)
  {
    if (v23)
    {
      unint64_t v25 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      unint64_t v26 = v25 | (v81 << 6);
LABEL_8:
      uint64_t v27 = *(void *)(v62 + 56);
      uint64_t v28 = (void *)(*(void *)(v62 + 48) + 32 * v26);
      uint64_t v29 = v28[1];
      uint64_t v30 = v28[2];
      uint64_t v31 = v28[3];
      *uint64_t v12 = *v28;
      v12[1] = v29;
      void v12[2] = v30;
      void v12[3] = v31;
      uint64_t v32 = v27 + *(void *)(v61 + 72) * v26;
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9190);
      sub_25B1806D0(v32, (uint64_t)v12 + *(int *)(v33 + 48), (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v12, 0, 1, v33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v34 = v66;
      uint64_t v35 = (uint64_t)v65;
      goto LABEL_27;
    }
    int64_t v36 = v81 + 1;
    if (__OFADD__(v81, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v34 = v66;
    uint64_t v35 = (uint64_t)v65;
    if (v36 < v57)
    {
      unint64_t v37 = *(void *)(v56 + 8 * v36);
      if (v37) {
        goto LABEL_12;
      }
      int64_t v38 = v81 + 2;
      ++v81;
      if (v36 + 1 < v57)
      {
        unint64_t v37 = *(void *)(v56 + 8 * v38);
        if (v37) {
          goto LABEL_15;
        }
        int64_t v81 = v36 + 1;
        if (v36 + 2 < v57)
        {
          unint64_t v37 = *(void *)(v56 + 8 * (v36 + 2));
          if (v37)
          {
            v36 += 2;
            goto LABEL_12;
          }
          int64_t v38 = v36 + 3;
          int64_t v81 = v36 + 2;
          if (v36 + 3 < v57) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9190);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v12, 1, 1, v39);
    unint64_t v23 = 0;
LABEL_27:
    sub_25B187574((uint64_t)v12, (uint64_t)v14, &qword_26A4DA6E8);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9190);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v14, 1, v40) == 1)
    {
      swift_release();
      *(void *)&long long v67 = 0;
      *((void *)&v67 + 1) = 0xE000000000000000;
      sub_25B290AA0();
      long long v78 = v67;
      sub_25B290650();
      sub_25B1875E0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
      uint64_t v41 = v54;
      sub_25B290DB0();
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B290650();
      uint64_t v42 = type metadata accessor for PairingRelationship();
      long long v67 = *(_OWORD *)(v41 + *(int *)(v42 + 32));
      sub_25B290B90();
      sub_25B290650();
      uint64_t v43 = (long long *)(v41 + *(int *)(v42 + 20));
      long long v44 = v43[9];
      long long v75 = v43[8];
      long long v76 = v44;
      long long v77 = v43[10];
      long long v45 = v43[5];
      long long v71 = v43[4];
      long long v72 = v45;
      long long v46 = v43[7];
      long long v73 = v43[6];
      long long v74 = v46;
      long long v47 = v43[1];
      long long v67 = *v43;
      long long v68 = v47;
      long long v48 = v43[2];
      long long v70 = v43[3];
      long long v69 = v48;
      sub_25B290B90();
      sub_25B290650();
      sub_25B290000();
      sub_25B1875E0((unint64_t *)&qword_26A4DB020, MEMORY[0x263F07490]);
      sub_25B290DB0();
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B290650();
      sub_25B290DB0();
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B290650();
      sub_25B290650();
      swift_bridgeObjectRelease();
      uint64_t v15 = *((void *)&v78 + 1);
      uint64_t v14 = (char *)v78;
      unint64_t v23 = *v55;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result)
      {
LABEL_31:
        unint64_t v50 = *(void *)(v23 + 16);
        unint64_t v49 = *(void *)(v23 + 24);
        if (v50 >= v49 >> 1)
        {
          uint64_t result = (uint64_t)sub_25B21822C((void *)(v49 > 1), v50 + 1, 1, (void *)v23);
          unint64_t v23 = result;
        }
        *(void *)(v23 + 16) = v50 + 1;
        unint64_t v51 = v23 + 16 * v50;
        *(void *)(v51 + 32) = v14;
        *(void *)(v51 + 40) = v15;
        *uint64_t v55 = v23;
        return result;
      }
LABEL_35:
      uint64_t result = (uint64_t)sub_25B21822C(0, *(void *)(v23 + 16) + 1, 1, (void *)v23);
      unint64_t v23 = result;
      goto LABEL_31;
    }
    sub_25B18095C((uint64_t)&v14[*(int *)(v40 + 48)], v35, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    if ((*v63)(v35, 1, v34) != 1)
    {
      id v24 = v60;
      (*v59)(v60, v35, v34);
      sub_25B290020();
      (*v58)(v24, v34);
    }
    *(void *)&long long v67 = 0;
    *((void *)&v67 + 1) = 0xE000000000000000;
    sub_25B290AA0();
    swift_bridgeObjectRelease();
    *(void *)&long long v67 = 540697705;
    *((void *)&v67 + 1) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    sub_25B290650();
    swift_bridgeObjectRelease();
    sub_25B290650();
    swift_bridgeObjectRetain();
    sub_25B290650();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_25B290650();
    sub_25B290650();
    swift_bridgeObjectRelease();
    sub_25B290650();
    uint64_t v15 = *((void *)&v67 + 1);
    sub_25B290650();
    uint64_t result = swift_bridgeObjectRelease();
  }
  unint64_t v37 = *(void *)(v56 + 8 * v38);
  if (v37)
  {
LABEL_15:
    int64_t v36 = v38;
LABEL_12:
    unint64_t v23 = (v37 - 1) & v37;
    unint64_t v26 = __clz(__rbit64(v37)) + (v36 << 6);
    int64_t v81 = v36;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v36 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v36 >= v57)
    {
      int64_t v81 = v53;
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v56 + 8 * v36);
    ++v38;
    if (v37) {
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_25B174884()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v80 = v2;
  uint64_t v81 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v79 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  long long v78 = (char *)&v71 - v6;
  uint64_t v7 = sub_25B290410();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v1 + 232);
  void *v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F0E0], v7);
  id v12 = v11;
  LOBYTE(v11) = sub_25B290440();
  unint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
LABEL_44:
    __break(1u);
    return result;
  }
  if (*(unsigned char *)(v1 + 137))
  {
    uint64_t v88 = 1701736270;
    unint64_t v89 = 0xE400000000000000;
  }
  else
  {
    char v14 = *(unsigned char *)(v1 + 136);
    uint64_t v84 = sub_25B2907D0();
    unint64_t v85 = v15;
    sub_25B290650();
    sub_25B2907D0();
    sub_25B290650();
    swift_bridgeObjectRelease();
    sub_25B290650();
    sub_25B2907D0();
    sub_25B290650();
    swift_bridgeObjectRelease();
    uint64_t v88 = v84;
    unint64_t v89 = v85;
    if ((v14 & 1) == 0)
    {
      uint64_t v84 = 114;
      unint64_t v85 = 0xE100000000000000;
      sub_25B2907D0();
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B290650();
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  sub_25B10FF48(v1 + 192, (uint64_t)&v84);
  uint64_t v17 = v86;
  uint64_t v16 = v87;
  __swift_project_boxed_opaque_existential_1(&v84, v86);
  LOBYTE(v16) = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v16 + 8) + 8) + 40))(v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
  uint64_t v72 = v1;
  if (v16)
  {
    sub_25B10FF48(v1 + 192, (uint64_t)&v84);
    uint64_t v19 = v86;
    uint64_t v18 = v87;
    __swift_project_boxed_opaque_existential_1(&v84, v86);
    uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v18 + 8) + 8) + 48))(v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
    int64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      uint64_t v83 = MEMORY[0x263F8EE78];
      sub_25B224214(0, v21, 0);
      unint64_t result = sub_25B17AD2C(v20);
      int64_t v22 = result;
      int v24 = v23;
      char v26 = v25 & 1;
      uint64_t v76 = v20;
      uint64_t v77 = v20 + 56;
      uint64_t v74 = v81 + 32;
      uint64_t v75 = v81 + 16;
      uint64_t v73 = v81 + 8;
      while ((v22 & 0x8000000000000000) == 0 && v22 < 1 << *(unsigned char *)(v20 + 32))
      {
        if (((*(void *)(v77 + (((unint64_t)v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          goto LABEL_42;
        }
        if (*(_DWORD *)(v20 + 36) != v24) {
          goto LABEL_43;
        }
        uint64_t v27 = *(void *)(v20 + 48);
        uint64_t v28 = v80;
        uint64_t v29 = v81;
        uint64_t v30 = v78;
        (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v78, v27 + *(void *)(v81 + 72) * v22, v80);
        uint64_t v31 = v79;
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v79, v30, v28);
        uint64_t v32 = sub_25B290020();
        unint64_t v82 = v33;
        (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
        uint64_t v34 = v83;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25B224214(0, *(void *)(v34 + 16) + 1, 1);
          uint64_t v34 = v83;
        }
        unint64_t v36 = *(void *)(v34 + 16);
        unint64_t v35 = *(void *)(v34 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_25B224214(v35 > 1, v36 + 1, 1);
          uint64_t v34 = v83;
        }
        *(void *)(v34 + 16) = v36 + 1;
        unint64_t v37 = v34 + 16 * v36;
        unint64_t v38 = v82;
        *(void *)(v37 + 32) = v32;
        *(void *)(v37 + 40) = v38;
        uint64_t v20 = v76;
        unint64_t result = sub_25B17ADCC(v22, v24, v26 & 1, v76);
        int64_t v22 = result;
        int v24 = v39;
        char v26 = v40 & 1;
        if (!--v21)
        {
          sub_25B1862BC(result, v39, v40 & 1);
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
      }
      goto LABEL_41;
    }
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x263F8EE78];
LABEL_21:
    uint64_t v84 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AF0);
    sub_25B116394(&qword_26A4D9AF8, &qword_26A4D9AF0);
    uint64_t v81 = sub_25B290550();
    unint64_t v82 = v41;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v81 = 0x64656C6261736944;
    unint64_t v82 = 0xE800000000000000;
  }
  sub_25B18A4FC();
  sub_25B18A4FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25B2932A0;
  *(void *)(inited + 32) = 0x656369766544;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v79 = (char *)inited;
  uint64_t v84 = 0;
  unint64_t v85 = 0xE000000000000000;
  sub_25B290AA0();
  sub_25B18A4FC();
  if (!v43)
  {
    id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB0]), sel_init);
    id v45 = objc_msgSend(v44, sel_hostName);
    sub_25B2905C0();
  }
  sub_25B290650();
  swift_bridgeObjectRelease();
  sub_25B290650();
  sub_25B290650();
  swift_bridgeObjectRelease();
  sub_25B290650();
  sub_25B290650();
  swift_bridgeObjectRelease();
  sub_25B290650();
  uint64_t v46 = v72;
  if (!*(void *)(v72 + 256))
  {
    uint64_t v47 = *(void *)(v72 + 184);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(ObjectType, v47);
  }
  swift_bridgeObjectRetain();
  sub_25B290650();
  swift_bridgeObjectRelease();
  sub_25B290650();
  uint64_t v83 = 15;
  sub_25B290DB0();
  sub_25B290650();
  swift_bridgeObjectRelease();
  sub_25B290650();
  uint64_t v83 = 4;
  sub_25B290DB0();
  sub_25B290650();
  swift_bridgeObjectRelease();
  sub_25B290650();
  unint64_t v49 = (char *)v89;
  swift_bridgeObjectRetain();
  sub_25B290650();
  swift_bridgeObjectRelease();
  unint64_t v50 = v85;
  uint64_t v51 = MEMORY[0x263F8D310];
  uint64_t v52 = v79;
  *((void *)v79 + 6) = v84;
  *((void *)v52 + 7) = v50;
  *((void *)v52 + 9) = v51;
  *((void *)v52 + 10) = 0x73694C776F6C6C41;
  *((void *)v52 + 11) = 0xE900000000000074;
  *((void *)v52 + 12) = v81;
  *((void *)v52 + 13) = v82;
  *((void *)v52 + 15) = v51;
  *((void *)v52 + 16) = 0x64656C62616E45;
  *((void *)v52 + 17) = 0xE700000000000000;
  uint64_t v53 = MEMORY[0x263F8D4F8];
  v52[144] = *(unsigned char *)(v46 + 600);
  *((void *)v52 + 21) = v53;
  *((void *)v52 + 22) = 0xD000000000000011;
  *((void *)v52 + 23) = 0x800000025B29C920;
  swift_beginAccess();
  uint64_t v54 = *(void *)(v46 + 648);
  int64_t v55 = *(void *)(v54 + 16);
  if (v55)
  {
    long long v78 = v49;
    uint64_t v83 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25B224214(0, v55, 0);
    uint64_t v56 = v83;
    unint64_t result = sub_25B17AD2C(v54);
    int64_t v57 = result;
    int v59 = v58;
    int v61 = v60 & 1;
    uint64_t v80 = v54 + 56;
    while ((v57 & 0x8000000000000000) == 0 && v57 < 1 << *(unsigned char *)(v54 + 32))
    {
      if (((*(void *)(v80 + (((unint64_t)v57 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v57) & 1) == 0) {
        goto LABEL_39;
      }
      if (*(_DWORD *)(v54 + 36) != v59) {
        goto LABEL_40;
      }
      LODWORD(v82) = v61;
      uint64_t v62 = (uint64_t *)(*(void *)(v54 + 48) + 16 * v57);
      uint64_t v63 = v62[1];
      uint64_t v81 = *v62;
      uint64_t v83 = v56;
      unint64_t v64 = *(void *)(v56 + 16);
      unint64_t v65 = *(void *)(v56 + 24);
      swift_bridgeObjectRetain();
      if (v64 >= v65 >> 1)
      {
        sub_25B224214(v65 > 1, v64 + 1, 1);
        uint64_t v56 = v83;
      }
      *(void *)(v56 + 16) = v64 + 1;
      unint64_t v66 = v56 + 16 * v64;
      *(void *)(v66 + 32) = v81;
      *(void *)(v66 + 40) = v63;
      unint64_t result = sub_25B17ADCC(v57, v59, v82 & 1, v54);
      int64_t v57 = result;
      int v59 = v67;
      int v61 = v68 & 1;
      if (!--v55)
      {
        sub_25B1862BC(result, v67, v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  swift_bridgeObjectRelease();
  uint64_t v56 = MEMORY[0x263F8EE78];
LABEL_37:
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AF0);
  uint64_t v70 = (uint64_t)v79;
  *((void *)v79 + 27) = v69;
  *(void *)(v70 + 192) = v56;
  return sub_25B20DE70(v70);
}

unint64_t sub_25B175310()
{
  uint64_t v1 = sub_25B290410();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (uint64_t *)((char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + 232);
  *uint64_t v4 = v5;
  uint64_t v6 = *(void (**)(void *))(v2 + 104);
  LODWORD(v50) = *MEMORY[0x263F8F0E0];
  v6(v4);
  id v7 = v5;
  char v8 = sub_25B290440();
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t))(v2 + 8);
  unint64_t result = v9(v4, v1);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  *uint64_t v4 = v7;
  ((void (*)(void *, void, uint64_t))v6)(v4, v50, v1);
  id v11 = v7;
  char v12 = sub_25B290440();
  unint64_t result = v9(v4, v1);
  if ((v12 & 1) == 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  swift_beginAccess();
  swift_retain();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_25B186DF0(v13, v0, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_25B17C13C);
  unint64_t v49 = v9;
  unint64_t v15 = (void (*)(void *, void, uint64_t))v6;
  uint64_t v16 = v14;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v17 = sub_25B12ACA4(v16, (uint64_t)v58, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_25B224158, sub_25B1A7EF0);
  swift_release();
  *uint64_t v4 = v11;
  v15(v4, v50, v1);
  id v18 = v11;
  char v19 = sub_25B290440();
  unint64_t result = v49(v4, v1);
  if ((v19 & 1) == 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  swift_retain();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_25B186DF0(v20, v0, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_25B186A8C);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v22 = sub_25B12ACA4(v21, (uint64_t)v57, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_25B224158, sub_25B1A7EF0);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25B293290;
  *(void *)(inited + 32) = 0xD000000000000013;
  *(void *)(inited + 40) = 0x800000025B29C940;
  int64_t v24 = *(void *)(v17 + 16);
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v48 = v22;
  uint64_t v47 = (void *)inited;
  if (v24)
  {
    uint64_t v56 = MEMORY[0x263F8EE78];
    sub_25B224214(0, v24, 0);
    uint64_t v26 = v56;
    uint64_t v46 = v17;
    uint64_t v27 = (uint64_t *)(v17 + 72);
    unint64_t v49 = (uint64_t (*)(void *, uint64_t))0x800000025B29C8E0;
    do
    {
      uint64_t v28 = *(v27 - 1);
      uint64_t v50 = *v27;
      uint64_t v54 = 0;
      unint64_t v55 = 0xE000000000000000;
      sub_25B290AA0();
      sub_25B290650();
      uint64_t v52 = 0;
      unint64_t v53 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B290AA0();
      swift_bridgeObjectRelease();
      uint64_t v52 = 540697705;
      unint64_t v53 = 0xE400000000000000;
      swift_bridgeObjectRetain();
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B290650();
      swift_bridgeObjectRetain();
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B290650();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B290650();
      uint64_t v52 = 0;
      unint64_t v53 = 0xE000000000000000;
      sub_25B290AA0();
      swift_bridgeObjectRelease();
      uint64_t v52 = 0x3A746E6572727563;
      unint64_t v53 = 0xE900000000000020;
      uint64_t v51 = v28;
      sub_25B290DB0();
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B290650();
      uint64_t v51 = v50;
      sub_25B290DB0();
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B290650();
      swift_bridgeObjectRelease();
      uint64_t v29 = v54;
      unint64_t v30 = v55;
      uint64_t v56 = v26;
      unint64_t v32 = *(void *)(v26 + 16);
      unint64_t v31 = *(void *)(v26 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_25B224214(v31 > 1, v32 + 1, 1);
        uint64_t v26 = v56;
      }
      v27 += 6;
      *(void *)(v26 + 16) = v32 + 1;
      uint64_t v33 = v26 + 16 * v32;
      *(void *)(v33 + 32) = v29;
      *(void *)(v33 + 40) = v30;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    uint64_t v22 = v48;
    uint64_t v34 = v47;
    uint64_t v25 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v34 = (void *)inited;
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x263F8EE78];
  }
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AF0);
  uint64_t v36 = v35;
  v34[6] = v26;
  v34[9] = v35;
  v34[10] = 0xD000000000000014;
  v34[11] = 0x800000025B29C960;
  int64_t v37 = *(void *)(v22 + 16);
  if (v37)
  {
    uint64_t v46 = v35;
    uint64_t v56 = v25;
    sub_25B224214(0, v37, 0);
    uint64_t v38 = v56;
    uint64_t v39 = (uint64_t *)(v22 + 72);
    unint64_t v49 = (uint64_t (*)(void *, uint64_t))0x800000025B29C8E0;
    do
    {
      uint64_t v40 = *(v39 - 1);
      uint64_t v50 = *v39;
      uint64_t v54 = 0;
      unint64_t v55 = 0xE000000000000000;
      sub_25B290AA0();
      sub_25B290650();
      uint64_t v52 = 0;
      unint64_t v53 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B290AA0();
      swift_bridgeObjectRelease();
      uint64_t v52 = 540697705;
      unint64_t v53 = 0xE400000000000000;
      swift_bridgeObjectRetain();
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B290650();
      swift_bridgeObjectRetain();
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B290650();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B290650();
      uint64_t v52 = 0;
      unint64_t v53 = 0xE000000000000000;
      sub_25B290AA0();
      swift_bridgeObjectRelease();
      uint64_t v52 = 0x3A746E6572727563;
      unint64_t v53 = 0xE900000000000020;
      uint64_t v51 = v40;
      sub_25B290DB0();
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B290650();
      uint64_t v51 = v50;
      sub_25B290DB0();
      sub_25B290650();
      swift_bridgeObjectRelease();
      sub_25B290650();
      swift_bridgeObjectRelease();
      uint64_t v41 = v54;
      unint64_t v42 = v55;
      uint64_t v56 = v38;
      unint64_t v44 = *(void *)(v38 + 16);
      unint64_t v43 = *(void *)(v38 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_25B224214(v43 > 1, v44 + 1, 1);
        uint64_t v38 = v56;
      }
      v39 += 6;
      *(void *)(v38 + 16) = v44 + 1;
      uint64_t v45 = v38 + 16 * v44;
      *(void *)(v45 + 32) = v41;
      *(void *)(v45 + 40) = v42;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
    uint64_t v34 = v47;
    uint64_t v36 = v46;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = MEMORY[0x263F8EE78];
  }
  v34[15] = v36;
  _OWORD v34[12] = v38;
  return sub_25B20DE70((uint64_t)v34);
}

unint64_t sub_25B175D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  BOOL v4 = a1 == 0x73656E6F7ALL && a2 == 0xE500000000000000;
  if (v4 || (sub_25B290FB0() & 1) != 0)
  {
    unint64_t result = sub_25B171638();
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873 || (sub_25B290FB0() & 1) != 0)
  {
    unint64_t result = sub_25B172F44();
  }
  else if (a1 == 0x746163696C706572 && a2 == 0xEA0000000000726FLL || (sub_25B290FB0() & 1) != 0)
  {
    unint64_t result = sub_25B174884();
  }
  else if (a1 == 0x546567617373656DLL && a2 == 0xEC00000073657079 || (sub_25B290FB0() & 1) != 0)
  {
    unint64_t result = sub_25B175310();
  }
  else
  {
    unint64_t result = sub_25B20DE70(MEMORY[0x263F8EE78]);
  }
  *a3 = result;
  return result;
}

Swift::String __swiftcall Replicator.captureState()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A80);
  sub_25B290900();
  uint64_t v0 = sub_25B2904E0();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0;
  BOOL v4 = v2;
  result._object = v4;
  result._uint64_t countAndFlagsBits = v3;
  return result;
}

void sub_25B175FB4(uint64_t a1, void (*a2)(void *, uint64_t))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA6D0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (void **)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25B187628(a1, (uint64_t)v6, &qword_26A4DA6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v7 = *v6;
    id v8 = v7;
    a2(v7, 1);
  }
  else
  {
    a2(0, 0);
    sub_25B116DE0((uint64_t)v6, &qword_26A4DA6D0);
  }
}

void sub_25B1760B8(void *a1, char a2, void (*a3)(void *, uint64_t))
{
  if (a2)
  {
    id v5 = a1;
    a3(a1, 1);
    sub_25B116D08(a1, 1);
  }
  else
  {
    a3(0, 0);
  }
}

uint64_t sub_25B176138(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = v2;
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x263EF8340];
  char v6 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a2((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v9;
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v4 = a2((char *)v10, v7, v5);
    MEMORY[0x261160890](v10, -1, -1);
  }
  return v4;
}

uint64_t sub_25B1762A4(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = v2;
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x263EF8340];
  char v6 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a2((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v9;
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v4 = a2((char *)v10, v7, v5);
    MEMORY[0x261160890](v10, -1, -1);
  }
  return v4;
}

uint64_t sub_25B176410(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a2;
  uint64_t v41 = a1;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v4 = MEMORY[0x270FA5388](v54);
  unint64_t v53 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v52 = (char *)&v40 - v6;
  uint64_t v7 = type metadata accessor for PairingRelationship();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25B290080();
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = 0;
  unint64_t v55 = (void *)a3;
  uint64_t v16 = *(void *)(a3 + 64);
  uint64_t v42 = 0;
  uint64_t v43 = a3 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v44 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v48 = v12 + 16;
  uint64_t v49 = v12;
  uint64_t v46 = v9;
  uint64_t v47 = (void (**)(char *, uint64_t))(v12 + 8);
  while (v19)
  {
    uint64_t v56 = (v19 - 1) & v19;
    int64_t v57 = v15;
    unint64_t v21 = __clz(__rbit64(v19)) | (v15 << 6);
LABEL_18:
    uint64_t v26 = v55;
    uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v49 + 16);
    v27(v14, v55[6] + *(void *)(v49 + 72) * v21, v10);
    uint64_t v28 = v26[7];
    uint64_t v29 = *(void *)(v50 + 72);
    unint64_t v45 = v21;
    sub_25B1806D0(v28 + v29 * v21, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v30 = v54;
    uint64_t v31 = v10;
    uint64_t v32 = (uint64_t)v52;
    uint64_t v33 = (uint64_t)&v52[*(int *)(v54 + 48)];
    v27(v52, (unint64_t)v14, v31);
    sub_25B1806D0((uint64_t)v9, v33, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v34 = v53;
    uint64_t v35 = (uint64_t)&v53[*(int *)(v30 + 48)];
    v27(v53, v32, v31);
    sub_25B1806D0(v33, v35, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v36 = v35 + *(int *)(v51 + 20);
    unint64_t v38 = *(void *)(v36 + 32);
    unint64_t v37 = *(void *)(v36 + 40);
    sub_25B180A5C(v35, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B116DE0(v32, &qword_26A4D9EE8);
    if (v38 < 4)
    {
      uint64_t v20 = *v47;
      (*v47)(v34, v31);
      uint64_t v9 = v46;
      sub_25B180A5C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v20)(v14, v31);
      uint64_t v10 = v31;
      int64_t v15 = v57;
      unint64_t v19 = v56;
    }
    else
    {
      uint64_t v39 = *v47;
      (*v47)(v34, v31);
      uint64_t v9 = v46;
      sub_25B180A5C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v39)(v14, v31);
      uint64_t v10 = v31;
      int64_t v15 = v57;
      unint64_t v19 = v56;
      if (v37 <= 0xF)
      {
        *(unint64_t *)((char *)v41 + ((v45 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v45;
        BOOL v22 = __OFADD__(v42++, 1);
        if (v22) {
          goto LABEL_30;
        }
      }
    }
  }
  BOOL v22 = __OFADD__(v15, 1);
  int64_t v23 = v15 + 1;
  if (v22)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v23 >= v44) {
    return sub_25B1A22F8(v41, v40, v42, v55);
  }
  unint64_t v24 = *(void *)(v43 + 8 * v23);
  if (v24)
  {
LABEL_17:
    uint64_t v56 = (v24 - 1) & v24;
    int64_t v57 = v23;
    unint64_t v21 = __clz(__rbit64(v24)) + (v23 << 6);
    goto LABEL_18;
  }
  int64_t v25 = v23 + 1;
  if (v23 + 1 >= v44) {
    return sub_25B1A22F8(v41, v40, v42, v55);
  }
  unint64_t v24 = *(void *)(v43 + 8 * v25);
  if (v24) {
    goto LABEL_16;
  }
  int64_t v25 = v23 + 2;
  if (v23 + 2 >= v44) {
    return sub_25B1A22F8(v41, v40, v42, v55);
  }
  unint64_t v24 = *(void *)(v43 + 8 * v25);
  if (v24) {
    goto LABEL_16;
  }
  int64_t v25 = v23 + 3;
  if (v23 + 3 >= v44) {
    return sub_25B1A22F8(v41, v40, v42, v55);
  }
  unint64_t v24 = *(void *)(v43 + 8 * v25);
  if (v24)
  {
LABEL_16:
    int64_t v23 = v25;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v44) {
      return sub_25B1A22F8(v41, v40, v42, v55);
    }
    unint64_t v24 = *(void *)(v43 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_17;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_25B176924(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a2;
  unint64_t v38 = a1;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v4 = MEMORY[0x270FA5388](v50);
  uint64_t v49 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v48 = (char *)&v36 - v6;
  uint64_t v7 = type metadata accessor for PairingRelationship();
  uint64_t v46 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v45 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_25B290080();
  uint64_t result = MEMORY[0x270FA5388](v44);
  unint64_t v55 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = 0;
  uint64_t v52 = (void *)a3;
  uint64_t v13 = *(void *)(a3 + 64);
  uint64_t v39 = 0;
  uint64_t v40 = a3 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v43 = v10 + 2;
  uint64_t v56 = v10;
  int64_t v41 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v42 = v10 + 1;
  uint64_t v18 = v44;
  uint64_t v17 = (uint64_t)v45;
  while (1)
  {
    if (v16)
    {
      uint64_t v53 = (v16 - 1) & v16;
      int64_t v54 = v12;
      unint64_t v19 = __clz(__rbit64(v16)) | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v31 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v31 >= v41) {
      return sub_25B1A22F8(v38, v37, v39, v52);
    }
    unint64_t v32 = *(void *)(v40 + 8 * v31);
    int64_t v33 = v12 + 1;
    if (!v32)
    {
      int64_t v33 = v12 + 2;
      if (v12 + 2 >= v41) {
        return sub_25B1A22F8(v38, v37, v39, v52);
      }
      unint64_t v32 = *(void *)(v40 + 8 * v33);
      if (!v32)
      {
        int64_t v33 = v12 + 3;
        if (v12 + 3 >= v41) {
          return sub_25B1A22F8(v38, v37, v39, v52);
        }
        unint64_t v32 = *(void *)(v40 + 8 * v33);
        if (!v32) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v53 = (v32 - 1) & v32;
    int64_t v54 = v33;
    unint64_t v19 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_5:
    uint64_t v20 = v52;
    unint64_t v21 = (void (*)(char *, unint64_t, uint64_t))v56[2];
    BOOL v22 = v55;
    v21(v55, v52[6] + v56[9] * v19, v18);
    uint64_t v23 = v20[7];
    uint64_t v24 = *(void *)(v46 + 72);
    unint64_t v51 = v19;
    sub_25B1806D0(v23 + v24 * v19, v17, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v25 = v50;
    uint64_t v26 = (uint64_t)v48;
    uint64_t v27 = (uint64_t)&v48[*(int *)(v50 + 48)];
    v21(v48, (unint64_t)v22, v18);
    sub_25B1806D0(v17, v27, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v28 = v49;
    uint64_t v29 = (uint64_t)&v49[*(int *)(v25 + 48)];
    v21(v49, v26, v18);
    sub_25B1806D0(v27, v29, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    LODWORD(v21) = *(unsigned __int8 *)(v29 + *(int *)(v47 + 20) + 48);
    sub_25B180A5C(v29, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B116DE0(v26, &qword_26A4D9EE8);
    uint64_t v30 = (void (*)(char *, uint64_t))v56[1];
    v30(v28, v18);
    sub_25B180A5C(v17, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v30)(v55, v18);
    unint64_t v16 = v53;
    int64_t v12 = v54;
    if (v21 == 4)
    {
      *(unint64_t *)((char *)v38 + ((v51 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v51;
      if (__OFADD__(v39++, 1))
      {
        __break(1u);
        return sub_25B1A22F8(v38, v37, v39, v52);
      }
    }
  }
  uint64_t v34 = v12 + 4;
  if (v12 + 4 >= v41) {
    return sub_25B1A22F8(v38, v37, v39, v52);
  }
  unint64_t v32 = *(void *)(v40 + 8 * v34);
  if (v32)
  {
    int64_t v33 = v12 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v33 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v33 >= v41) {
      return sub_25B1A22F8(v38, v37, v39, v52);
    }
    unint64_t v32 = *(void *)(v40 + 8 * v33);
    ++v34;
    if (v32) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_25B176DC4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a2;
  uint64_t v43 = a1;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v4 = MEMORY[0x270FA5388](v54);
  uint64_t v53 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v8 = type metadata accessor for PairingRelationship();
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25B290080();
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v16 = 0;
  uint64_t v56 = (void *)a3;
  uint64_t v17 = *(void *)(a3 + 64);
  uint64_t v44 = 0;
  uint64_t v45 = a3 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v46 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v47 = v10;
  uint64_t v49 = v13 + 16;
  uint64_t v50 = v13;
  uint64_t v48 = (void (**)(char *, uint64_t))(v13 + 8);
  while (v20)
  {
    uint64_t v57 = (v20 - 1) & v20;
    int64_t v58 = v16;
    unint64_t v21 = __clz(__rbit64(v20)) | (v16 << 6);
LABEL_5:
    BOOL v22 = v56;
    uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v50 + 16);
    v23(v15, v56[6] + *(void *)(v50 + 72) * v21, v11);
    uint64_t v24 = v22[7];
    uint64_t v25 = *(void *)(v51 + 72);
    unint64_t v55 = v21;
    sub_25B1806D0(v24 + v25 * v21, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v26 = v15;
    uint64_t v27 = v54;
    uint64_t v28 = (uint64_t)&v7[*(int *)(v54 + 48)];
    v23(v7, (unint64_t)v26, v11);
    sub_25B1806D0((uint64_t)v10, v28, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v29 = v53;
    uint64_t v30 = (uint64_t)&v53[*(int *)(v27 + 48)];
    v23(v53, (unint64_t)v7, v11);
    sub_25B1806D0(v28, v30, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    int64_t v31 = (uint64_t *)(v30 + *(int *)(v52 + 32));
    uint64_t v33 = *v31;
    unint64_t v32 = v31[1];
    sub_25B120090(*v31, v32);
    sub_25B180A5C(v30, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    if (v32 == 2)
    {
      sub_25B1200A4(v33, 2uLL);
      sub_25B1200A4(0, 2uLL);
      sub_25B1200A4(v33, 2uLL);
      sub_25B116DE0((uint64_t)v7, &qword_26A4D9EE8);
      uint64_t v39 = *v48;
      (*v48)(v29, v11);
      uint64_t v10 = v47;
      sub_25B180A5C((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v39)(v26, v11);
      *(unint64_t *)((char *)v43 + ((v55 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v55;
      BOOL v40 = __OFADD__(v44++, 1);
      uint64_t v15 = v26;
      int64_t v16 = v58;
      unint64_t v20 = v57;
      if (v40)
      {
        __break(1u);
        return sub_25B1A22F8(v43, v42, v44, v56);
      }
    }
    else
    {
      sub_25B120090(v33, v32);
      sub_25B1200A4(v33, v32);
      sub_25B1200A4(0, 2uLL);
      sub_25B1200A4(v33, v32);
      sub_25B116DE0((uint64_t)v7, &qword_26A4D9EE8);
      uint64_t v34 = *v48;
      (*v48)(v29, v11);
      uint64_t v10 = v47;
      sub_25B180A5C((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v26, v11);
      uint64_t v15 = v26;
      int64_t v16 = v58;
      unint64_t v20 = v57;
    }
  }
  int64_t v35 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v35 >= v46) {
    return sub_25B1A22F8(v43, v42, v44, v56);
  }
  unint64_t v36 = *(void *)(v45 + 8 * v35);
  int64_t v37 = v16 + 1;
  if (v36) {
    goto LABEL_21;
  }
  int64_t v37 = v16 + 2;
  if (v16 + 2 >= v46) {
    return sub_25B1A22F8(v43, v42, v44, v56);
  }
  unint64_t v36 = *(void *)(v45 + 8 * v37);
  if (v36) {
    goto LABEL_21;
  }
  int64_t v37 = v16 + 3;
  if (v16 + 3 >= v46) {
    return sub_25B1A22F8(v43, v42, v44, v56);
  }
  unint64_t v36 = *(void *)(v45 + 8 * v37);
  if (v36)
  {
LABEL_21:
    uint64_t v57 = (v36 - 1) & v36;
    int64_t v58 = v37;
    unint64_t v21 = __clz(__rbit64(v36)) + (v37 << 6);
    goto LABEL_5;
  }
  uint64_t v38 = v16 + 4;
  if (v16 + 4 >= v46) {
    return sub_25B1A22F8(v43, v42, v44, v56);
  }
  unint64_t v36 = *(void *)(v45 + 8 * v38);
  if (v36)
  {
    int64_t v37 = v16 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v37 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v37 >= v46) {
      return sub_25B1A22F8(v43, v42, v44, v56);
    }
    unint64_t v36 = *(void *)(v45 + 8 * v37);
    ++v38;
    if (v36) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25B177330(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a2;
  uint64_t v43 = a1;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v4 = MEMORY[0x270FA5388](v54);
  uint64_t v53 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v8 = type metadata accessor for PairingRelationship();
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25B290080();
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v16 = 0;
  uint64_t v56 = (void *)a3;
  uint64_t v17 = *(void *)(a3 + 64);
  uint64_t v44 = 0;
  uint64_t v45 = a3 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v46 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v47 = v10;
  uint64_t v49 = v13 + 16;
  uint64_t v50 = v13;
  uint64_t v48 = (void (**)(char *, uint64_t))(v13 + 8);
  while (v20)
  {
    uint64_t v57 = (v20 - 1) & v20;
    int64_t v58 = v16;
    unint64_t v21 = __clz(__rbit64(v20)) | (v16 << 6);
LABEL_5:
    BOOL v22 = v56;
    uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v50 + 16);
    v23(v15, v56[6] + *(void *)(v50 + 72) * v21, v11);
    uint64_t v24 = v22[7];
    uint64_t v25 = *(void *)(v51 + 72);
    unint64_t v55 = v21;
    sub_25B1806D0(v24 + v25 * v21, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v26 = v15;
    uint64_t v27 = v54;
    uint64_t v28 = (uint64_t)&v7[*(int *)(v54 + 48)];
    v23(v7, (unint64_t)v26, v11);
    sub_25B1806D0((uint64_t)v10, v28, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v29 = v53;
    uint64_t v30 = (uint64_t)&v53[*(int *)(v27 + 48)];
    v23(v53, (unint64_t)v7, v11);
    sub_25B1806D0(v28, v30, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    int64_t v31 = (uint64_t *)(v30 + *(int *)(v52 + 32));
    uint64_t v33 = *v31;
    unint64_t v32 = v31[1];
    sub_25B120090(*v31, v32);
    sub_25B180A5C(v30, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B1200A4(0, 1uLL);
    if (v32 == 1)
    {
      sub_25B1200A4(v33, 1uLL);
      sub_25B116DE0((uint64_t)v7, &qword_26A4D9EE8);
      uint64_t v39 = *v48;
      (*v48)(v29, v11);
      uint64_t v10 = v47;
      sub_25B180A5C((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v39)(v26, v11);
      *(unint64_t *)((char *)v43 + ((v55 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v55;
      BOOL v40 = __OFADD__(v44++, 1);
      uint64_t v15 = v26;
      int64_t v16 = v58;
      unint64_t v20 = v57;
      if (v40)
      {
        __break(1u);
        return sub_25B1A22F8(v43, v42, v44, v56);
      }
    }
    else
    {
      sub_25B1200A4(v33, v32);
      sub_25B116DE0((uint64_t)v7, &qword_26A4D9EE8);
      uint64_t v34 = *v48;
      (*v48)(v29, v11);
      uint64_t v10 = v47;
      sub_25B180A5C((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v26, v11);
      uint64_t v15 = v26;
      int64_t v16 = v58;
      unint64_t v20 = v57;
    }
  }
  int64_t v35 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v35 >= v46) {
    return sub_25B1A22F8(v43, v42, v44, v56);
  }
  unint64_t v36 = *(void *)(v45 + 8 * v35);
  int64_t v37 = v16 + 1;
  if (v36) {
    goto LABEL_21;
  }
  int64_t v37 = v16 + 2;
  if (v16 + 2 >= v46) {
    return sub_25B1A22F8(v43, v42, v44, v56);
  }
  unint64_t v36 = *(void *)(v45 + 8 * v37);
  if (v36) {
    goto LABEL_21;
  }
  int64_t v37 = v16 + 3;
  if (v16 + 3 >= v46) {
    return sub_25B1A22F8(v43, v42, v44, v56);
  }
  unint64_t v36 = *(void *)(v45 + 8 * v37);
  if (v36)
  {
LABEL_21:
    uint64_t v57 = (v36 - 1) & v36;
    int64_t v58 = v37;
    unint64_t v21 = __clz(__rbit64(v36)) + (v37 << 6);
    goto LABEL_5;
  }
  uint64_t v38 = v16 + 4;
  if (v16 + 4 >= v46) {
    return sub_25B1A22F8(v43, v42, v44, v56);
  }
  unint64_t v36 = *(void *)(v45 + 8 * v38);
  if (v36)
  {
    int64_t v37 = v16 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v37 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v37 >= v46) {
      return sub_25B1A22F8(v43, v42, v44, v56);
    }
    unint64_t v36 = *(void *)(v45 + 8 * v37);
    ++v38;
    if (v36) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25B17786C(unint64_t *a1, uint64_t a2, void *a3)
{
  v56[0] = a2;
  uint64_t v57 = a1;
  uint64_t v72 = sub_25B290080();
  uint64_t v4 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72 - 8);
  char v60 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9880);
  MEMORY[0x270FA5388](v70);
  uint64_t v7 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.ID.Ownership(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v73 = (uint64_t)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v79 = (uint64_t)v56 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v78 = (uint64_t)v56 - v13;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v14 = MEMORY[0x270FA5388](v71);
  uint64_t v69 = (uint64_t)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v82 = (uint64_t)v56 - v16;
  uint64_t v17 = type metadata accessor for RecordMetadata();
  uint64_t v68 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v81 = (uint64_t)v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Record.ID(0);
  uint64_t v66 = *(void *)(v19 - 8);
  uint64_t v67 = v19;
  uint64_t result = MEMORY[0x270FA5388](v19);
  uint64_t v80 = (uint64_t)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = 0;
  int64_t v22 = 0;
  uint64_t v74 = a3;
  uint64_t v25 = a3[8];
  uint64_t v24 = a3 + 8;
  uint64_t v23 = v25;
  uint64_t v26 = 1 << *((unsigned char *)v24 - 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v23;
  uint64_t v62 = v24;
  int64_t v63 = (unint64_t)(v26 + 63) >> 6;
  unint64_t v64 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  unint64_t v65 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  int v59 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  int v61 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  while (1)
  {
    if (v28)
    {
      uint64_t v76 = (v28 - 1) & v28;
      int64_t v77 = v22;
      unint64_t v29 = __clz(__rbit64(v28)) | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v30 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v30 >= v63) {
      return sub_25B1A2340(v57, v56[0], v58, v74);
    }
    unint64_t v31 = v62[v30];
    int64_t v32 = v22 + 1;
    if (!v31)
    {
      int64_t v32 = v22 + 2;
      if (v22 + 2 >= v63) {
        return sub_25B1A2340(v57, v56[0], v58, v74);
      }
      unint64_t v31 = v62[v32];
      if (!v31)
      {
        int64_t v32 = v22 + 3;
        if (v22 + 3 >= v63) {
          return sub_25B1A2340(v57, v56[0], v58, v74);
        }
        unint64_t v31 = v62[v32];
        if (!v31) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v76 = (v31 - 1) & v31;
    int64_t v77 = v32;
    unint64_t v29 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_22:
    uint64_t v34 = v74;
    uint64_t v35 = v80;
    sub_25B1806D0(v74[6] + *(void *)(v66 + 72) * v29, v80, type metadata accessor for Record.ID);
    uint64_t v36 = v34[7];
    uint64_t v37 = *(void *)(v68 + 72);
    unint64_t v75 = v29;
    uint64_t v38 = v81;
    sub_25B1806D0(v36 + v37 * v29, v81, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v39 = v71;
    uint64_t v40 = v82;
    uint64_t v41 = v82 + *(int *)(v71 + 48);
    sub_25B1806D0(v35, v82, type metadata accessor for Record.ID);
    sub_25B1806D0(v38, v41, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v42 = *(int *)(v39 + 48);
    uint64_t v43 = v69;
    uint64_t v44 = v69 + v42;
    sub_25B1806D0(v40, v69, type metadata accessor for Record.ID);
    sub_25B1806D0(v41, v44, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v45 = v78;
    sub_25B1806D0(v43 + *(int *)(v67 + 24), v78, type metadata accessor for Record.ID.Ownership);
    sub_25B180A5C(v43, type metadata accessor for Record.ID);
    uint64_t v46 = v79;
    uint64_t v47 = v72;
    (*v65)(v79, 1, 1, v72);
    uint64_t v48 = (uint64_t)&v7[*(int *)(v70 + 48)];
    sub_25B1806D0(v45, (uint64_t)v7, type metadata accessor for Record.ID.Ownership);
    sub_25B1806D0(v46, v48, type metadata accessor for Record.ID.Ownership);
    uint64_t v49 = *v64;
    if ((*v64)(v7, 1, v47) == 1)
    {
      if (v49((char *)v48, 1, v47) != 1) {
        goto LABEL_27;
      }
      goto LABEL_5;
    }
    sub_25B1806D0((uint64_t)v7, v73, type metadata accessor for Record.ID.Ownership);
    if (v49((char *)v48, 1, v47) == 1)
    {
      (*v61)(v73, v47);
LABEL_27:
      sub_25B116DE0((uint64_t)v7, &qword_26A4D9880);
      goto LABEL_28;
    }
    uint64_t v50 = v73;
    uint64_t v51 = v60;
    (*v59)(v60, v48, v47);
    char v52 = sub_25B290030();
    uint64_t v53 = *v61;
    (*v61)((uint64_t)v51, v47);
    v53(v50, v47);
    if (v52)
    {
LABEL_5:
      sub_25B180A5C((uint64_t)v7, type metadata accessor for Record.ID.Ownership);
      sub_25B180A5C(v79, type metadata accessor for Record.ID.Ownership);
      sub_25B180A5C(v78, type metadata accessor for Record.ID.Ownership);
      sub_25B116DE0(v82, &qword_26A4D9860);
      sub_25B180A5C(v44, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      sub_25B180A5C(v81, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t result = sub_25B180A5C(v80, type metadata accessor for Record.ID);
      unint64_t v28 = v76;
      int64_t v22 = v77;
    }
    else
    {
      sub_25B180A5C((uint64_t)v7, type metadata accessor for Record.ID.Ownership);
LABEL_28:
      unint64_t v28 = v76;
      int64_t v22 = v77;
      unint64_t v54 = v75;
      sub_25B180A5C(v79, type metadata accessor for Record.ID.Ownership);
      sub_25B180A5C(v78, type metadata accessor for Record.ID.Ownership);
      sub_25B116DE0(v82, &qword_26A4D9860);
      sub_25B180A5C(v44, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      sub_25B180A5C(v81, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t result = sub_25B180A5C(v80, type metadata accessor for Record.ID);
      *(unint64_t *)((char *)v57 + ((v54 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v54;
      if (__OFADD__(v58++, 1))
      {
        __break(1u);
        return sub_25B1A2340(v57, v56[0], v58, v74);
      }
    }
  }
  uint64_t v33 = v22 + 4;
  if (v22 + 4 >= v63) {
    return sub_25B1A2340(v57, v56[0], v58, v74);
  }
  unint64_t v31 = v62[v33];
  if (v31)
  {
    int64_t v32 = v22 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v32 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v32 >= v63) {
      return sub_25B1A2340(v57, v56[0], v58, v74);
    }
    unint64_t v31 = v62[v32];
    ++v33;
    if (v31) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_25B178114(void **a1)
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_25B1E413C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_25B17822C(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_25B1781C0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25B1E4150(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_25B179374(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_25B17822C(uint64_t *a1)
{
  uint64_t v194 = sub_25B290000();
  uint64_t v3 = *(void *)(v194 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v194);
  uint64_t v193 = (char *)&v174 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v196 = (char *)&v174 - v6;
  uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v185 = *(void *)(v198 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v198);
  uint64_t v182 = (uint64_t)&v174 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v199 = (uint64_t)&v174 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v195 = (char *)&v174 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v209 = (char *)&v174 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v211 = (uint64_t)&v174 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v208 = (uint64_t)&v174 - v17;
  uint64_t v18 = a1[1];
  uint64_t result = sub_25B290DA0();
  if (result >= v18)
  {
    if (v18 < 0) {
      goto LABEL_140;
    }
    if (v18) {
      return sub_25B179A60(0, v18, 1, a1);
    }
    return result;
  }
  if (v18 >= 0) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v18 + 1;
  }
  if (v18 < -1) {
    goto LABEL_148;
  }
  uint64_t v175 = result;
  uint64_t v186 = v1;
  if (v18 < 2)
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
    unint64_t v184 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v185 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80));
    if (v18 != 1)
    {
      unint64_t v27 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v26 = (char *)MEMORY[0x263F8EE78];
      if (v27 >= 2) {
        goto LABEL_103;
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v24 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v177 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v21 = v20 >> 1;
    uint64_t v22 = sub_25B290750();
    *(void *)(v22 + 16) = v21;
    uint64_t v23 = *(unsigned __int8 *)(v185 + 80);
    uint64_t v177 = v22;
    unint64_t v184 = v22 + ((v23 + 32) & ~v23);
  }
  uint64_t v25 = 0;
  uint64_t v191 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v192 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v26 = (char *)MEMORY[0x263F8EE78];
  uint64_t v187 = a1;
  while (1)
  {
    uint64_t v28 = v25;
    uint64_t v29 = v25 + 1;
    uint64_t v183 = v25;
    if (v25 + 1 < v18)
    {
      uint64_t v178 = *a1;
      uint64_t v30 = v178;
      unint64_t v31 = *(char **)(v185 + 72);
      uint64_t v204 = v31;
      uint64_t v197 = v25 + 1;
      uint64_t v32 = v178 + (void)v31 * v29;
      uint64_t v33 = v208;
      sub_25B187628(v32, v208, &qword_26A4D9EE8);
      sub_25B187628(v30 + (void)v31 * v28, v211, &qword_26A4D9EE8);
      uint64_t v34 = *(int *)(v198 + 48);
      uint64_t v35 = v209;
      uint64_t v36 = (uint64_t)&v209[v34];
      uint64_t v37 = v33 + v34;
      uint64_t v210 = sub_25B290080();
      uint64_t v38 = *(void *)(v210 - 8);
      uint64_t v39 = *(void (**)(void))(v38 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v39)(v35, v33, v210);
      uint64_t v206 = type metadata accessor for PairingRelationship;
      sub_25B1806D0(v37, v36, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v40 = type metadata accessor for PairingRelationship();
      uint64_t v41 = v36 + *(int *)(v40 + 24);
      uint64_t v203 = v18;
      uint64_t v42 = *v192;
      uint64_t v43 = v194;
      (*v192)(v196, v41, v194);
      unint64_t v205 = type metadata accessor for PairingRelationship;
      sub_25B180A5C(v36, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v44 = *(int *)(v198 + 48);
      uint64_t v45 = (uint64_t)&v195[v44];
      uint64_t v202 = v211 + v44;
      uint64_t v207 = v38 + 16;
      uint64_t v200 = v39;
      v39();
      uint64_t v46 = v204;
      sub_25B1806D0(v202, v45, (uint64_t (*)(void))v206);
      uint64_t v190 = v40;
      uint64_t v47 = v45 + *(int *)(v40 + 24);
      uint64_t v48 = v193;
      uint64_t v189 = v42;
      v42(v193, v47, v43);
      uint64_t v49 = v45;
      uint64_t v28 = v183;
      sub_25B180A5C(v49, (uint64_t (*)(void))v205);
      uint64_t v50 = v196;
      LODWORD(v202) = sub_25B28FF80();
      uint64_t v51 = *v191;
      (*v191)(v48, v43);
      char v188 = v51;
      v51(v50, v43);
      uint64_t v18 = v203;
      char v52 = *(void (**)(char *, uint64_t))(v38 + 8);
      uint64_t v53 = v210;
      v52(v195, v210);
      unint64_t v201 = (char *)(v38 + 8);
      uint64_t v181 = v52;
      v52(v209, v53);
      sub_25B116DE0(v211, &qword_26A4D9EE8);
      sub_25B116DE0(v208, &qword_26A4D9EE8);
      uint64_t v29 = v28 + 2;
      if (v28 + 2 < v18)
      {
        uint64_t v176 = v26;
        uint64_t v180 = (void)v46 * v197;
        unint64_t v54 = (uint64_t (*)())v178;
        uint64_t v179 = (void)v46 * v29;
        while (1)
        {
          uint64_t v197 = v29;
          uint64_t v55 = v208;
          sub_25B187628((uint64_t)v54 + v179, v208, &qword_26A4D9EE8);
          unint64_t v205 = v54;
          sub_25B187628((uint64_t)v54 + v180, v211, &qword_26A4D9EE8);
          uint64_t v56 = v198;
          uint64_t v57 = *(int *)(v198 + 48);
          uint64_t v58 = (uint64_t)&v209[v57];
          uint64_t v59 = v55 + v57;
          char v60 = v200;
          v200();
          uint64_t v206 = type metadata accessor for PairingRelationship;
          sub_25B1806D0(v59, v58, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          uint64_t v61 = v190;
          uint64_t v62 = v194;
          int64_t v63 = v189;
          v189(v196, v58 + *(int *)(v190 + 24), v194);
          sub_25B180A5C(v58, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          uint64_t v64 = *(int *)(v56 + 48);
          unint64_t v65 = v195;
          uint64_t v66 = (uint64_t)&v195[v64];
          uint64_t v67 = v211 + v64;
          ((void (*)(char *))v60)(v195);
          sub_25B1806D0(v67, v66, (uint64_t (*)(void))v206);
          uint64_t v68 = v193;
          v63(v193, v66 + *(int *)(v61 + 24), v62);
          sub_25B180A5C(v66, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          uint64_t v69 = v196;
          LODWORD(v67) = sub_25B28FF80();
          uint64_t v70 = v188;
          v188(v68, v62);
          v70(v69, v62);
          uint64_t v71 = v210;
          uint64_t v72 = v181;
          v181(v65, v210);
          v72(v209, v71);
          sub_25B116DE0(v211, &qword_26A4D9EE8);
          sub_25B116DE0(v208, &qword_26A4D9EE8);
          if ((v202 ^ v67)) {
            break;
          }
          uint64_t v29 = v197 + 1;
          uint64_t v46 = v204;
          unint64_t v54 = (uint64_t (*)())&v204[(void)v205];
          uint64_t v18 = v203;
          if (v203 == v197 + 1)
          {
            uint64_t v29 = v203;
            uint64_t v26 = v176;
            uint64_t v28 = v183;
            goto LABEL_23;
          }
        }
        uint64_t v26 = v176;
        uint64_t v29 = v197;
        uint64_t v28 = v183;
        uint64_t v18 = v203;
        uint64_t v46 = v204;
      }
LABEL_23:
      a1 = v187;
      if (v202)
      {
        if (v29 < v28) {
          goto LABEL_141;
        }
        if (v28 < v29)
        {
          uint64_t v176 = v26;
          uint64_t v73 = 0;
          uint64_t v74 = (void)v46 * (v29 - 1);
          uint64_t v75 = v29 * (void)v46;
          uint64_t v76 = v28;
          uint64_t v77 = v28 * (void)v46;
          do
          {
            if (v76 != v29 + v73 - 1)
            {
              uint64_t v78 = v178;
              if (!v178) {
                goto LABEL_146;
              }
              uint64_t v79 = v29;
              unint64_t v80 = v178 + v77;
              uint64_t v81 = v178 + v74;
              sub_25B187574(v178 + v77, v182, &qword_26A4D9EE8);
              if (v77 < v74 || v80 >= v78 + v75)
              {
                swift_arrayInitWithTakeFrontToBack();
                uint64_t v46 = v204;
              }
              else
              {
                uint64_t v46 = v204;
                if (v77 != v74) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_25B187574(v182, v81, &qword_26A4D9EE8);
              uint64_t v29 = v79;
              uint64_t v28 = v183;
            }
            ++v76;
            --v73;
            v74 -= (uint64_t)v46;
            v75 -= (uint64_t)v46;
            v77 += (uint64_t)v46;
          }
          while (v76 < v29 + v73);
          a1 = v187;
          uint64_t v26 = v176;
          uint64_t v18 = v203;
        }
      }
    }
    if (v29 >= v18) {
      goto LABEL_55;
    }
    if (__OFSUB__(v29, v28)) {
      goto LABEL_139;
    }
    if (v29 - v28 >= v175) {
      goto LABEL_55;
    }
    if (__OFADD__(v28, v175)) {
      goto LABEL_142;
    }
    uint64_t v82 = (void (*)(char *, uint64_t))(v28 + v175 >= v18 ? v18 : v28 + v175);
    if ((uint64_t)v82 < v28) {
      break;
    }
    if ((void (*)(char *, uint64_t))v29 != v82)
    {
      uint64_t v176 = v26;
      uint64_t v83 = *(char **)(v185 + 72);
      uint64_t v84 = (void)v83 * (v29 - 1);
      char v188 = (void (*)(char *, uint64_t))v83;
      uint64_t v85 = v29 * (void)v83;
      uint64_t v181 = v82;
      do
      {
        uint64_t v87 = 0;
        uint64_t v197 = v29;
        uint64_t v190 = v84;
        uint64_t v189 = (void (*)(char *, uint64_t, uint64_t))v85;
        while (1)
        {
          uint64_t v88 = *a1;
          unint64_t v201 = (char *)(v85 + v87);
          uint64_t v202 = v28;
          uint64_t v89 = v208;
          sub_25B187628(v85 + v87 + v88, v208, &qword_26A4D9EE8);
          uint64_t v203 = v87;
          uint64_t v200 = (void (*)(void))(v84 + v87);
          sub_25B187628(v84 + v87 + v88, v211, &qword_26A4D9EE8);
          uint64_t v90 = v198;
          uint64_t v91 = *(int *)(v198 + 48);
          uint64_t v92 = v209;
          uint64_t v93 = (uint64_t)&v209[v91];
          uint64_t v94 = v89 + v91;
          uint64_t v210 = sub_25B290080();
          uint64_t v95 = *(void *)(v210 - 8);
          uint64_t v206 = *(uint64_t (**)())(v95 + 16);
          uint64_t v207 = v95;
          ((void (*)(char *, uint64_t, uint64_t))v206)(v92, v89, v210);
          unint64_t v205 = type metadata accessor for PairingRelationship;
          sub_25B1806D0(v94, v93, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          uint64_t v96 = type metadata accessor for PairingRelationship();
          uint64_t v97 = v93 + *(int *)(v96 + 24);
          uint64_t v204 = (char *)*v192;
          uint64_t v98 = v196;
          uint64_t v99 = v194;
          ((void (*)(char *, uint64_t, uint64_t))v204)(v196, v97, v194);
          sub_25B180A5C(v93, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          uint64_t v100 = *(int *)(v90 + 48);
          int64_t v101 = v195;
          uint64_t v102 = (uint64_t)&v195[v100];
          uint64_t v103 = v211 + v100;
          ((void (*)(char *))v206)(v195);
          sub_25B1806D0(v103, v102, (uint64_t (*)(void))v205);
          uint64_t v104 = v193;
          ((void (*)(char *, uint64_t, uint64_t))v204)(v193, v102 + *(int *)(v96 + 24), v99);
          sub_25B180A5C(v102, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          LOBYTE(v92) = sub_25B28FF80();
          uint64_t v105 = *v191;
          (*v191)(v104, v99);
          v105(v98, v99);
          unint64_t v106 = *(void (**)(char *, uint64_t))(v207 + 8);
          uint64_t v107 = v210;
          v106(v101, v210);
          v106(v209, v107);
          sub_25B116DE0(v211, &qword_26A4D9EE8);
          sub_25B116DE0(v208, &qword_26A4D9EE8);
          if ((v92 & 1) == 0) {
            break;
          }
          a1 = v187;
          uint64_t v108 = *v187;
          if (!*v187) {
            goto LABEL_144;
          }
          uint64_t v85 = (uint64_t)v189;
          uint64_t v109 = v203;
          uint64_t v84 = v190;
          uint64_t v110 = v108 + v190 + v203;
          sub_25B187574((uint64_t)v189 + v108 + v203, v199, &qword_26A4D9EE8);
          swift_arrayInitWithTakeFrontToBack();
          sub_25B187574(v199, v110, &qword_26A4D9EE8);
          uint64_t v87 = v109 - (void)v188;
          uint64_t v28 = v202 + 1;
          uint64_t v86 = v197;
          if (v197 == v202 + 1) {
            goto LABEL_48;
          }
        }
        a1 = v187;
        uint64_t v86 = v197;
        uint64_t v84 = v190;
        uint64_t v85 = (uint64_t)v189;
LABEL_48:
        uint64_t v29 = v86 + 1;
        v84 += (uint64_t)v188;
        v85 += (uint64_t)v188;
        uint64_t v28 = v183;
      }
      while ((void (*)(char *, uint64_t))v29 != v181);
      uint64_t v29 = (uint64_t)v181;
      uint64_t v26 = v176;
    }
LABEL_55:
    if (v29 < v28) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v197 = v29;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v26 = sub_25B1E3AB4(0, *((void *)v26 + 2) + 1, 1, v26);
    }
    unint64_t v113 = *((void *)v26 + 2);
    unint64_t v112 = *((void *)v26 + 3);
    unint64_t v27 = v113 + 1;
    if (v113 >= v112 >> 1) {
      uint64_t v26 = sub_25B1E3AB4((char *)(v112 > 1), v113 + 1, 1, v26);
    }
    *((void *)v26 + 2) = v27;
    uint64_t v114 = v26 + 32;
    int64_t v115 = (uint64_t *)&v26[16 * v113 + 32];
    uint64_t v116 = v197;
    *int64_t v115 = v28;
    v115[1] = v116;
    if (v113)
    {
      while (1)
      {
        unint64_t v117 = v27 - 1;
        if (v27 >= 4)
        {
          uint64_t v122 = &v114[16 * v27];
          uint64_t v123 = *((void *)v122 - 8);
          uint64_t v124 = *((void *)v122 - 7);
          BOOL v128 = __OFSUB__(v124, v123);
          uint64_t v125 = v124 - v123;
          if (v128) {
            goto LABEL_123;
          }
          uint64_t v127 = *((void *)v122 - 6);
          uint64_t v126 = *((void *)v122 - 5);
          BOOL v128 = __OFSUB__(v126, v127);
          uint64_t v120 = v126 - v127;
          char v121 = v128;
          if (v128) {
            goto LABEL_124;
          }
          unint64_t v129 = v27 - 2;
          uint64_t v130 = &v114[16 * v27 - 32];
          uint64_t v132 = *(void *)v130;
          uint64_t v131 = *((void *)v130 + 1);
          BOOL v128 = __OFSUB__(v131, v132);
          uint64_t v133 = v131 - v132;
          if (v128) {
            goto LABEL_126;
          }
          BOOL v128 = __OFADD__(v120, v133);
          uint64_t v134 = v120 + v133;
          if (v128) {
            goto LABEL_129;
          }
          if (v134 >= v125)
          {
            uint64_t v152 = &v114[16 * v117];
            uint64_t v154 = *(void *)v152;
            uint64_t v153 = *((void *)v152 + 1);
            BOOL v128 = __OFSUB__(v153, v154);
            uint64_t v155 = v153 - v154;
            if (v128) {
              goto LABEL_133;
            }
            BOOL v145 = v120 < v155;
            goto LABEL_92;
          }
        }
        else
        {
          if (v27 != 3)
          {
            uint64_t v146 = *((void *)v26 + 4);
            uint64_t v147 = *((void *)v26 + 5);
            BOOL v128 = __OFSUB__(v147, v146);
            uint64_t v139 = v147 - v146;
            char v140 = v128;
            goto LABEL_86;
          }
          uint64_t v119 = *((void *)v26 + 4);
          uint64_t v118 = *((void *)v26 + 5);
          BOOL v128 = __OFSUB__(v118, v119);
          uint64_t v120 = v118 - v119;
          char v121 = v128;
        }
        if (v121) {
          goto LABEL_125;
        }
        unint64_t v129 = v27 - 2;
        uint64_t v135 = &v114[16 * v27 - 32];
        uint64_t v137 = *(void *)v135;
        uint64_t v136 = *((void *)v135 + 1);
        BOOL v138 = __OFSUB__(v136, v137);
        uint64_t v139 = v136 - v137;
        char v140 = v138;
        if (v138) {
          goto LABEL_128;
        }
        uint64_t v141 = &v114[16 * v117];
        uint64_t v143 = *(void *)v141;
        uint64_t v142 = *((void *)v141 + 1);
        BOOL v128 = __OFSUB__(v142, v143);
        uint64_t v144 = v142 - v143;
        if (v128) {
          goto LABEL_131;
        }
        if (__OFADD__(v139, v144)) {
          goto LABEL_132;
        }
        if (v139 + v144 >= v120)
        {
          BOOL v145 = v120 < v144;
LABEL_92:
          if (v145) {
            unint64_t v117 = v129;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v140) {
          goto LABEL_127;
        }
        uint64_t v148 = &v114[16 * v117];
        uint64_t v150 = *(void *)v148;
        uint64_t v149 = *((void *)v148 + 1);
        BOOL v128 = __OFSUB__(v149, v150);
        uint64_t v151 = v149 - v150;
        if (v128) {
          goto LABEL_130;
        }
        if (v151 < v139) {
          goto LABEL_15;
        }
LABEL_94:
        unint64_t v156 = v117 - 1;
        if (v117 - 1 >= v27)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*a1) {
          goto LABEL_145;
        }
        char v157 = v26;
        uint64_t v158 = &v114[16 * v156];
        uint64_t v159 = *(void *)v158;
        uint64_t v160 = &v114[16 * v117];
        uint64_t v161 = *((void *)v160 + 1);
        uint64_t v162 = v186;
        sub_25B17A0B0(*a1 + *(void *)(v185 + 72) * *(void *)v158, *a1 + *(void *)(v185 + 72) * *(void *)v160, *a1 + *(void *)(v185 + 72) * v161, v184);
        uint64_t v186 = v162;
        if (v162)
        {
LABEL_114:
          swift_bridgeObjectRelease();
          *(void *)(v177 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
        if (v161 < v159) {
          goto LABEL_120;
        }
        if (v117 > *((void *)v157 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v158 = v159;
        *(void *)&v114[16 * v156 + 8] = v161;
        unint64_t v163 = *((void *)v157 + 2);
        if (v117 >= v163) {
          goto LABEL_122;
        }
        uint64_t v26 = v157;
        unint64_t v27 = v163 - 1;
        memmove(&v114[16 * v117], v160 + 16, 16 * (v163 - 1 - v117));
        *((void *)v157 + 2) = v163 - 1;
        if (v163 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v27 = 1;
LABEL_15:
    uint64_t v18 = a1[1];
    uint64_t v25 = v197;
    if (v197 >= v18)
    {
      uint64_t v24 = v177;
      if (v27 < 2) {
        goto LABEL_116;
      }
LABEL_103:
      uint64_t v164 = *a1;
      uint64_t v165 = v185;
      uint64_t v177 = v24;
      while (1)
      {
        unint64_t v166 = v27 - 2;
        if (v27 < 2) {
          goto LABEL_135;
        }
        if (!v164) {
          goto LABEL_147;
        }
        uint64_t v167 = v26;
        uint64_t v168 = v26 + 32;
        uint64_t v169 = *(void *)&v26[16 * v166 + 32];
        uint64_t v170 = *(void *)&v26[16 * v27 + 24];
        uint64_t v171 = v186;
        sub_25B17A0B0(v164 + *(void *)(v165 + 72) * v169, v164 + *(void *)(v165 + 72) * *(void *)&v168[16 * v27 - 16], v164 + *(void *)(v165 + 72) * v170, v184);
        uint64_t v186 = v171;
        if (v171) {
          goto LABEL_114;
        }
        if (v170 < v169) {
          goto LABEL_136;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v167 = sub_25B1E3EF0((uint64_t)v167);
        }
        if (v166 >= *((void *)v167 + 2)) {
          goto LABEL_137;
        }
        uint64_t v172 = &v167[16 * v166 + 32];
        *(void *)uint64_t v172 = v169;
        *((void *)v172 + 1) = v170;
        unint64_t v173 = *((void *)v167 + 2);
        if (v27 > v173) {
          goto LABEL_138;
        }
        uint64_t v26 = v167;
        memmove(&v167[16 * v27 + 16], &v167[16 * v27 + 32], 16 * (v173 - v27));
        *((void *)v167 + 2) = v173 - 1;
        unint64_t v27 = v173 - 1;
        uint64_t v24 = v177;
        if (v173 <= 2) {
          goto LABEL_116;
        }
      }
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_25B290BB0();
  __break(1u);
  return result;
}

uint64_t sub_25B179374(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25B290DA0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_25B179FE0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_25B17AA90((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_25B1E3EF0((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_25B290750();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_25B290FB0();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_25B290FB0()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_25B1E3AB4(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_25B1E3AB4((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_25B17AA90((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_25B290FB0() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_25B290BB0();
  __break(1u);
  return result;
}

uint64_t sub_25B179A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v56 = a1;
  uint64_t v62 = sub_25B290000();
  uint64_t v7 = *(void *)(v62 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v62);
  uint64_t v61 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v60 = (char *)&v54 - v10;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v11 = MEMORY[0x270FA5388](v67);
  uint64_t v68 = (uint64_t)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v59 = (char *)&v54 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v79 = (char *)&v54 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v81 = (uint64_t)&v54 - v18;
  uint64_t result = MEMORY[0x270FA5388](v17);
  uint64_t v78 = (uint64_t)&v54 - v21;
  uint64_t v66 = a3;
  uint64_t v55 = a2;
  if (a3 != a2)
  {
    uint64_t v22 = *(void *)(v20 + 72);
    uint64_t v58 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v57 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v23 = v22 * (v66 - 1);
    uint64_t v63 = v22;
    uint64_t v24 = v22 * v66;
    uint64_t v77 = a4;
LABEL_5:
    uint64_t v25 = 0;
    uint64_t v71 = v56;
    uint64_t v64 = v24;
    uint64_t v65 = v23;
    while (1)
    {
      uint64_t v76 = v25;
      uint64_t v26 = *v77;
      uint64_t v70 = v24 + v25;
      uint64_t v27 = v24 + v25 + v26;
      uint64_t v28 = v78;
      sub_25B187628(v27, v78, &qword_26A4D9EE8);
      uint64_t v69 = v23 + v25;
      sub_25B187628(v23 + v25 + v26, v81, &qword_26A4D9EE8);
      uint64_t v29 = v67;
      uint64_t v30 = *(int *)(v67 + 48);
      uint64_t v31 = v79;
      uint64_t v32 = (uint64_t)&v79[v30];
      uint64_t v33 = v28 + v30;
      uint64_t v80 = sub_25B290080();
      uint64_t v34 = *(void *)(v80 - 8);
      uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
      uint64_t v75 = v34;
      v74(v31, v28, v80);
      uint64_t v73 = type metadata accessor for PairingRelationship;
      sub_25B1806D0(v33, v32, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v35 = type metadata accessor for PairingRelationship();
      uint64_t v36 = v32 + *(int *)(v35 + 24);
      BOOL v72 = *v58;
      uint64_t v37 = v60;
      uint64_t v38 = v62;
      v72(v60, v36, v62);
      sub_25B180A5C(v32, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v39 = *(int *)(v29 + 48);
      unint64_t v40 = v59;
      uint64_t v41 = (uint64_t)&v59[v39];
      uint64_t v42 = v81 + v39;
      ((void (*)(char *))v74)(v59);
      uint64_t v43 = v77;
      sub_25B1806D0(v42, v41, (uint64_t (*)(void))v73);
      unint64_t v44 = v61;
      v72(v61, v41 + *(int *)(v35 + 24), v38);
      sub_25B180A5C(v41, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      char v45 = sub_25B28FF80();
      uint64_t v46 = *v57;
      uint64_t v47 = v44;
      uint64_t v48 = v76;
      (*v57)(v47, v38);
      v46(v37, v38);
      uint64_t v49 = *(void (**)(char *, uint64_t))(v75 + 8);
      uint64_t v50 = v40;
      uint64_t v24 = v64;
      uint64_t v51 = v80;
      v49(v50, v80);
      v49(v79, v51);
      uint64_t v23 = v65;
      sub_25B116DE0(v81, &qword_26A4D9EE8);
      uint64_t result = sub_25B116DE0(v78, &qword_26A4D9EE8);
      if ((v45 & 1) == 0)
      {
LABEL_4:
        v23 += v63;
        v24 += v63;
        if (++v66 == v55) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v52 = *v43;
      if (!*v43) {
        break;
      }
      uint64_t v53 = v52 + v23 + v48;
      sub_25B187574(v52 + v24 + v48, v68, &qword_26A4D9EE8);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_25B187574(v68, v53, &qword_26A4D9EE8);
      uint64_t v25 = v48 - v63;
      if (v66 == ++v71) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25B179FE0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    uint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_25B290FB0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25B17A0B0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v97 = sub_25B290000();
  uint64_t v8 = *(void *)(v97 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v97);
  unint64_t v96 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v95 = (char *)&v82 - v11;
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v12 = MEMORY[0x270FA5388](v100);
  uint64_t v94 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v103 = (char *)&v82 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v104 = (uint64_t)&v82 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v102 = (uint64_t)&v82 - v18;
  uint64_t v20 = *(void *)(v19 + 72);
  if (!v20)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_61;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_62;
  }
  uint64_t v22 = (uint64_t)(a2 - a1) / v20;
  unint64_t v107 = a1;
  unint64_t v106 = a4;
  uint64_t v23 = v21 / v20;
  if (v22 >= v21 / v20)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      uint64_t v25 = v23 * v20;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v53 = a4 + v25;
      unint64_t v105 = a4 + v25;
      unint64_t v107 = a2;
      if (v25 >= 1 && a1 < a2)
      {
        uint64_t v55 = -v20;
        uint64_t v85 = (void (**)(char *, uint64_t))(v8 + 16);
        uint64_t v84 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v86 = (uint64_t (**)())a1;
        unint64_t v87 = a4;
        uint64_t v83 = v55;
        uint64_t v56 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
        uint64_t v57 = v97;
        do
        {
          unint64_t v101 = a2;
          unint64_t v99 = a3;
          unint64_t v93 = a3 + v55;
          uint64_t v58 = v102;
          sub_25B187628(v53 + v55, v102, &qword_26A4D9EE8);
          uint64_t v88 = a2 + v55;
          sub_25B187628(a2 + v55, v104, &qword_26A4D9EE8);
          uint64_t v59 = v100;
          uint64_t v60 = *(int *)(v100 + 48);
          uint64_t v61 = v103;
          uint64_t v62 = (uint64_t)&v103[v60];
          uint64_t v63 = v58 + v60;
          uint64_t v98 = sub_25B290080();
          uint64_t v64 = *(void *)(v98 - 8);
          uint64_t v91 = *(uint64_t (**)())(v64 + 16);
          uint64_t v92 = v64;
          ((void (*)(char *, uint64_t, uint64_t))v91)(v61, v58, v98);
          uint64_t v90 = type metadata accessor for PairingRelationship;
          sub_25B1806D0(v63, v62, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          uint64_t v65 = type metadata accessor for PairingRelationship();
          uint64_t v66 = v62 + *(int *)(v65 + 24);
          unint64_t v89 = *v56;
          uint64_t v67 = v95;
          v89(v95, v66, v57);
          sub_25B180A5C(v62, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          uint64_t v68 = *(int *)(v59 + 48);
          uint64_t v69 = v94;
          uint64_t v70 = (uint64_t)&v94[v68];
          uint64_t v71 = v104 + v68;
          ((void (*)(char *))v91)(v94);
          sub_25B1806D0(v71, v70, (uint64_t (*)(void))v90);
          BOOL v72 = v96;
          v89(v96, v70 + *(int *)(v65 + 24), v57);
          sub_25B180A5C(v70, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
          char v73 = sub_25B28FF80();
          uint64_t v74 = *v84;
          (*v84)(v72, v57);
          v74(v67, v57);
          uint64_t v75 = *(void (**)(char *, uint64_t))(v92 + 8);
          uint64_t v76 = v98;
          v75(v69, v98);
          v75(v103, v76);
          sub_25B116DE0(v104, &qword_26A4D9EE8);
          sub_25B116DE0(v102, &qword_26A4D9EE8);
          if (v73)
          {
            uint64_t v55 = v83;
            a3 = v93;
            if (v99 < v101 || v93 >= v101)
            {
              unint64_t v79 = v88;
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v78 = v86;
              unint64_t v77 = v87;
            }
            else
            {
              uint64_t v78 = v86;
              unint64_t v77 = v87;
              unint64_t v79 = v88;
              if (v99 != v101) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v107 += v55;
          }
          else
          {
            unint64_t v79 = v101;
            unint64_t v80 = v105;
            v105 += v83;
            uint64_t v55 = v83;
            a3 = v93;
            if (v99 < v80 || v93 >= v80)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v78 = v86;
              unint64_t v77 = v87;
            }
            else
            {
              uint64_t v78 = v86;
              unint64_t v77 = v87;
              if (v99 != v80) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
          }
          unint64_t v53 = v105;
          if (v105 <= v77) {
            break;
          }
          a2 = v79;
        }
        while (v79 > (unint64_t)v78);
      }
      goto LABEL_59;
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v22 * v20;
    if (a4 < a1 || a1 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v89 = (void (*)(char *, uint64_t, uint64_t))(a4 + v24);
    unint64_t v105 = a4 + v24;
    if (v24 >= 1 && a2 < a3)
    {
      uint64_t v86 = (uint64_t (**)())(v8 + 16);
      uint64_t v85 = (void (**)(char *, uint64_t))(v8 + 8);
      unint64_t v99 = a3;
      uint64_t v88 = v20;
      uint64_t v27 = v97;
      uint64_t v28 = v94;
      do
      {
        unint64_t v101 = a2;
        uint64_t v29 = v102;
        sub_25B187628(a2, v102, &qword_26A4D9EE8);
        sub_25B187628(a4, v104, &qword_26A4D9EE8);
        uint64_t v30 = v100;
        uint64_t v31 = *(int *)(v100 + 48);
        uint64_t v32 = v103;
        uint64_t v33 = (uint64_t)&v103[v31];
        uint64_t v34 = v29 + v31;
        uint64_t v98 = sub_25B290080();
        unint64_t v35 = *(void *)(v98 - 8);
        uint64_t v92 = *(void *)(v35 + 16);
        unint64_t v93 = v35;
        ((void (*)(char *, uint64_t, uint64_t))v92)(v32, v29, v98);
        uint64_t v91 = type metadata accessor for PairingRelationship;
        sub_25B1806D0(v34, v33, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v36 = type metadata accessor for PairingRelationship();
        uint64_t v37 = v33 + *(int *)(v36 + 24);
        uint64_t v90 = *v86;
        uint64_t v38 = v95;
        ((void (*)(char *, uint64_t, uint64_t))v90)(v95, v37, v27);
        sub_25B180A5C(v33, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        uint64_t v39 = *(int *)(v30 + 48);
        uint64_t v40 = (uint64_t)&v28[v39];
        uint64_t v41 = v104 + v39;
        ((void (*)(char *))v92)(v28);
        sub_25B1806D0(v41, v40, (uint64_t (*)(void))v91);
        uint64_t v42 = v40 + *(int *)(v36 + 24);
        uint64_t v43 = v96;
        ((void (*)(char *, uint64_t, uint64_t))v90)(v96, v42, v27);
        sub_25B180A5C(v40, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        LOBYTE(v41) = sub_25B28FF80();
        unint64_t v44 = *v85;
        (*v85)(v43, v27);
        v44(v38, v27);
        char v45 = *(void (**)(char *, uint64_t))(v93 + 8);
        uint64_t v46 = v98;
        v45(v28, v98);
        v45(v103, v46);
        sub_25B116DE0(v104, &qword_26A4D9EE8);
        sub_25B116DE0(v102, &qword_26A4D9EE8);
        unint64_t v47 = v107;
        if (v41)
        {
          uint64_t v48 = v88;
          unint64_t v49 = v101 + v88;
          if (v107 < v101 || v107 >= v49)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v50 = v99;
          }
          else
          {
            unint64_t v50 = v99;
            if (v107 == v101) {
              unint64_t v47 = v101;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v51 = v101;
          uint64_t v48 = v88;
          unint64_t v52 = v106 + v88;
          if (v107 < v106 || v107 >= v52)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v50 = v99;
          }
          else
          {
            unint64_t v50 = v99;
            if (v107 != v106) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v106 = v52;
          unint64_t v49 = v51;
        }
        unint64_t v107 = v47 + v48;
        a4 = v106;
        if (v106 >= (unint64_t)v89) {
          break;
        }
        a2 = v49;
      }
      while (v49 < v50);
    }
LABEL_59:
    sub_25B1E3BB0(&v107, &v106, (uint64_t *)&v105);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B17AA90(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        uint64_t v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_25B290FB0() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            uint64_t v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_25B290FB0() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_25B1E3CF4((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B17AD2C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  int64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_25B17ADCC(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void *sub_25B17AEB0(uint64_t a1, long long *a2, void *a3)
{
  uint64_t v17 = type metadata accessor for Replicator();
  uint64_t v18 = &protocol witness table for Replicator;
  *(void *)&long long v16 = a1;
  a3[12] = 0;
  a3[13] = -1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9ED0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_25B2932A0;
  unint64_t v7 = (void *)*MEMORY[0x263F576A8];
  unint64_t v8 = (void *)*MEMORY[0x263F576B8];
  *(void *)(v6 + 32) = *MEMORY[0x263F576A8];
  *(void *)(v6 + 40) = v8;
  unint64_t v9 = (void *)*MEMORY[0x263F57688];
  unint64_t v10 = (void *)*MEMORY[0x263F57690];
  *(void *)(v6 + 48) = *MEMORY[0x263F57688];
  *(void *)(v6 + 56) = v10;
  a3[14] = v6;
  sub_25B180BD4(&v16, (uint64_t)(a3 + 2));
  sub_25B180BD4(a2, (uint64_t)(a3 + 7));
  id v11 = v7;
  id v12 = v8;
  id v13 = v9;
  id v14 = v10;
  return a3;
}

uint64_t sub_25B17AF9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  unint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_25B17AFD4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, long long *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17, uint64_t a18, unsigned __int8 a19)
{
  uint64_t v20 = v19;
  uint64_t v81 = a8;
  uint64_t v82 = a5;
  uint64_t v83 = a4;
  uint64_t v59 = a3;
  uint64_t v69 = a2;
  uint64_t v68 = a1;
  int v76 = a19;
  int v74 = a17;
  uint64_t v75 = a16;
  uint64_t v73 = a15;
  uint64_t v79 = a10;
  uint64_t v80 = a9;
  uint64_t v77 = a18;
  uint64_t v78 = a12;
  uint64_t v72 = a11;
  uint64_t v71 = a14;
  uint64_t v70 = a13;
  uint64_t v61 = sub_25B290080();
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v58 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_25B2908F0();
  uint64_t v24 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v26 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_25B2908C0();
  MEMORY[0x270FA5388](v27);
  uint64_t v28 = sub_25B290360();
  MEMORY[0x270FA5388](v28 - 8);
  int v66 = *a6;
  long long v65 = *a7;
  uint64_t v64 = *((void *)a7 + 2);
  uint64_t v63 = *((void *)a7 + 3);
  int v62 = *((unsigned __int8 *)a7 + 32);
  int v67 = *((unsigned __int8 *)a7 + 33);
  *(_OWORD *)(v20 + 56) = 0u;
  *(_OWORD *)(v20 + 72) = 0u;
  *(void *)(v20 + 88) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE0);
  swift_allocObject();
  *(void *)(v20 + 144) = sub_25B290220();
  *(void *)(v20 + 152) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99E8);
  swift_allocObject();
  *(void *)(v20 + 160) = sub_25B290220();
  *(void *)(v20 + 168) = 0;
  sub_25B10CB64();
  sub_25B290350();
  *(void *)&long long v86 = MEMORY[0x263F8EE78];
  sub_25B1875E0((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
  sub_25B116394((unint64_t *)&qword_26A4D9B20, (uint64_t *)&unk_26A4D9B10);
  uint64_t v29 = v59;
  sub_25B290A00();
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v26, *MEMORY[0x263F8F138], v57);
  uint64_t v30 = sub_25B290920();
  uint64_t v31 = MEMORY[0x263F8EE80];
  *(void *)(v20 + 232) = v30;
  *(void *)(v20 + 240) = v31;
  *(void *)(v20 + 248) = 0;
  *(void *)(v20 + 256) = 0;
  uint64_t v32 = MEMORY[0x263F8EE88];
  *(void *)(v20 + 464) = MEMORY[0x263F8EE88];
  *(unsigned char *)(v20 + 472) = 0;
  uint64_t v33 = v58;
  sub_25B290070();
  uint64_t v34 = sub_25B290020();
  uint64_t v36 = v35;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v61);
  *(void *)(v20 + 528) = v34;
  *(void *)(v20 + 536) = v36;
  *(void *)(v20 + 560) = MEMORY[0x263F8EE78];
  *(void *)(v20 + 568) = v31;
  *(void *)(v20 + 576) = v31;
  type metadata accessor for BasicTimer();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v38 = swift_allocObject();
  *(_DWORD *)(v38 + 16) = 0;
  *(void *)(v37 + 24) = v38;
  *(void *)(v20 + 584) = v37;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = 0;
  uint64_t v40 = swift_allocObject();
  *(_DWORD *)(v40 + 16) = 0;
  *(void *)(v39 + 24) = v40;
  *(void *)(v20 + 592) = v39;
  *(unsigned char *)(v20 + 600) = 1;
  *(void *)(v20 + 608) = 0;
  *(unsigned char *)(v20 + 616) = 1;
  *(_OWORD *)(v20 + 624) = xmmword_25B2932B0;
  *(void *)(v20 + 640) = v31;
  *(void *)(v20 + 648) = v32;
  *(void *)(v20 + 656) = 0;
  uint64_t v41 = v69;
  *(void *)(v20 + 176) = v68;
  *(void *)(v20 + 184) = v41;
  sub_25B10FF48((uint64_t)v29, v20 + 192);
  sub_25B10FF48(v83, v20 + 264);
  sub_25B10FF48(v82, v20 + 304);
  *(unsigned char *)(v20 + 96) = v66;
  *(_OWORD *)(v20 + 104) = v65;
  uint64_t v42 = v63;
  *(void *)(v20 + 120) = v64;
  *(void *)(v20 + 128) = v42;
  *(unsigned char *)(v20 + 136) = v62;
  *(unsigned char *)(v20 + 137) = v67;
  sub_25B10FF48(v81, v20 + 344);
  sub_25B10FF48(v80, v20 + 384);
  sub_25B10FF48(v79, v20 + 480);
  uint64_t v43 = v71;
  *(void *)(v20 + 248) = v70;
  *(void *)(v20 + 256) = v43;
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = v29[3];
  uint64_t v44 = v29[4];
  __swift_project_boxed_opaque_existential_1(v29, v45);
  *(unsigned char *)(v20 + 600) = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v44 + 8) + 8) + 16))(v45) & 1;
  uint64_t v46 = sub_25B227FD0(v72);
  swift_bridgeObjectRelease();
  *(void *)(v20 + 520) = v46;
  uint64_t v47 = v73;
  sub_25B187628(v73, (uint64_t)&v84, &qword_26A4D9DE0);
  if (v85)
  {
    sub_25B180BD4(&v84, (uint64_t)&v86);
  }
  else
  {
    uint64_t active = type metadata accessor for ActiveWatchIDSIDProvider();
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = 0;
    uint64_t v87 = active;
    uint64_t v88 = &off_2708D6AC0;
    *(void *)&long long v86 = v49;
    sub_25B116DE0((uint64_t)&v84, &qword_26A4D9DE0);
  }
  sub_25B180BD4(&v86, v20 + 16);
  uint64_t v50 = v78;
  sub_25B187628(v78, v20 + 424, (uint64_t *)&unk_26A4D9F08);
  uint64_t v51 = 3;
  if ((v74 & 1) == 0) {
    uint64_t v51 = v75;
  }
  *(void *)(v20 + 544) = v51;
  uint64_t v52 = 10;
  if ((v76 & 1) == 0) {
    uint64_t v52 = v77;
  }
  *(void *)(v20 + 552) = v52;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v54 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v41 + 24);
  uint64_t v55 = swift_retain();
  v54(v55, &protocol witness table for Replicator, ObjectType, v41);
  swift_release();
  sub_25B116DE0(v47, &qword_26A4D9DE0);
  sub_25B116DE0(v50, (uint64_t *)&unk_26A4D9F08);
  __swift_destroy_boxed_opaque_existential_1(v79);
  __swift_destroy_boxed_opaque_existential_1(v80);
  __swift_destroy_boxed_opaque_existential_1(v81);
  __swift_destroy_boxed_opaque_existential_1(v82);
  __swift_destroy_boxed_opaque_existential_1(v83);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v20;
}

uint64_t sub_25B17B78C()
{
  return sub_25B12224C(v0);
}

uint64_t sub_25B17B794()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B17B7CC()
{
  return sub_25B12A404();
}

uint64_t sub_25B17B7D4()
{
  return objectdestroy_34Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0], 32);
}

uint64_t sub_25B17B804(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  return sub_25B12C3C8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_25B17B80C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v52 = a4;
  uint64_t v38 = a2;
  uint64_t v39 = a1;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v5 = MEMORY[0x270FA5388](v51);
  uint64_t v50 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v37 - v7;
  uint64_t v8 = type metadata accessor for PairingRelationship();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v46 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_25B290080();
  uint64_t result = MEMORY[0x270FA5388](v45);
  uint64_t v58 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = 0;
  uint64_t v54 = (void *)a3;
  uint64_t v14 = *(void *)(a3 + 64);
  uint64_t v40 = 0;
  uint64_t v41 = a3 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v44 = v11 + 2;
  uint64_t v59 = v11;
  int64_t v42 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v43 = v11 + 1;
  uint64_t v19 = v45;
  uint64_t v18 = (uint64_t)v46;
  uint64_t v20 = (uint64_t)v49;
  while (1)
  {
    if (v17)
    {
      uint64_t v56 = (v17 - 1) & v17;
      int64_t v57 = v13;
      unint64_t v21 = __clz(__rbit64(v17)) | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v32 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v32 >= v42) {
      return sub_25B1A22F8(v39, v38, v40, v54);
    }
    unint64_t v33 = *(void *)(v41 + 8 * v32);
    int64_t v34 = v13 + 1;
    if (!v33)
    {
      int64_t v34 = v13 + 2;
      if (v13 + 2 >= v42) {
        return sub_25B1A22F8(v39, v38, v40, v54);
      }
      unint64_t v33 = *(void *)(v41 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v13 + 3;
        if (v13 + 3 >= v42) {
          return sub_25B1A22F8(v39, v38, v40, v54);
        }
        unint64_t v33 = *(void *)(v41 + 8 * v34);
        if (!v33) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v56 = (v33 - 1) & v33;
    int64_t v57 = v34;
    unint64_t v21 = __clz(__rbit64(v33)) + (v34 << 6);
LABEL_5:
    uint64_t v22 = v54;
    uint64_t v23 = (void (*)(char *, unint64_t, uint64_t))v59[2];
    uint64_t v24 = v58;
    v23(v58, v54[6] + v59[9] * v21, v19);
    uint64_t v25 = v22[7];
    uint64_t v26 = *(void *)(v47 + 72);
    unint64_t v53 = v21;
    sub_25B1806D0(v25 + v26 * v21, v18, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v27 = v51;
    uint64_t v28 = v20 + *(int *)(v51 + 48);
    v23((char *)v20, (unint64_t)v24, v19);
    sub_25B1806D0(v18, v28, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v55 = *(void *)(v52 + 520);
    uint64_t v29 = v50;
    uint64_t v30 = (uint64_t)&v50[*(int *)(v27 + 48)];
    v23(v50, v20, v19);
    sub_25B1806D0(v28, v30, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    LOBYTE(v22) = *(unsigned char *)(v30 + *(int *)(v48 + 20) + 48);
    sub_25B180A5C(v30, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    LOBYTE(v22) = sub_25B210AEC(v22, v55);
    sub_25B116DE0(v20, &qword_26A4D9EE8);
    uint64_t v31 = (void (*)(char *, uint64_t))v59[1];
    v31(v29, v19);
    sub_25B180A5C(v18, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v31)(v58, v19);
    unint64_t v17 = v56;
    int64_t v13 = v57;
    if ((v22 & 1) == 0)
    {
      *(unint64_t *)((char *)v39 + ((v53 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v53;
      if (__OFADD__(v40++, 1))
      {
        __break(1u);
        return sub_25B1A22F8(v39, v38, v40, v54);
      }
    }
  }
  uint64_t v35 = v13 + 4;
  if (v13 + 4 >= v42) {
    return sub_25B1A22F8(v39, v38, v40, v54);
  }
  unint64_t v33 = *(void *)(v41 + 8 * v35);
  if (v33)
  {
    int64_t v34 = v13 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v34 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v34 >= v42) {
      return sub_25B1A22F8(v39, v38, v40, v54);
    }
    unint64_t v33 = *(void *)(v41 + 8 * v34);
    ++v35;
    if (v33) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_25B17BCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  else {
    uint64_t v3 = -1;
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  uint64_t v5 = (uint64_t *)(a2 + 648);
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v7 = 0;
  int64_t v38 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v36 = (void *)MEMORY[0x263F8EE78];
  if (v4) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v10 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v10 < v38)
    {
      unint64_t v11 = *(void *)(v37 + 8 * v10);
      ++v7;
      if (v11) {
        goto LABEL_22;
      }
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v38) {
        goto LABEL_51;
      }
      unint64_t v11 = *(void *)(v37 + 8 * v7);
      if (v11) {
        goto LABEL_22;
      }
      int64_t v7 = v10 + 2;
      if (v10 + 2 >= v38) {
        goto LABEL_51;
      }
      unint64_t v11 = *(void *)(v37 + 8 * v7);
      if (v11) {
        goto LABEL_22;
      }
      int64_t v7 = v10 + 3;
      if (v10 + 3 >= v38) {
        goto LABEL_51;
      }
      unint64_t v11 = *(void *)(v37 + 8 * v7);
      if (v11)
      {
LABEL_22:
        unint64_t v4 = (v11 - 1) & v11;
        for (unint64_t i = __clz(__rbit64(v11)) + (v7 << 6); ; unint64_t i = v8 | (v7 << 6))
        {
          int64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 32 * i);
          uint64_t v15 = *v13;
          uint64_t v14 = v13[1];
          uint64_t v17 = v13[2];
          uint64_t v16 = v13[3];
          uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * i);
          uint64_t v19 = *v5;
          if (*(void *)(*v5 + 16))
          {
            uint64_t v40 = *v13;
            unint64_t v41 = v4;
            sub_25B291210();
            uint64_t v20 = v14;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_retain();
            swift_bridgeObjectRetain();
            sub_25B290630();
            uint64_t v21 = sub_25B291260();
            uint64_t v22 = -1 << *(unsigned char *)(v19 + 32);
            unint64_t v23 = v21 & ~v22;
            if ((*(void *)(v19 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
            {
              int64_t v44 = v7;
              uint64_t v24 = *(void *)(v19 + 48);
              uint64_t v25 = (void *)(v24 + 16 * v23);
              BOOL v26 = *v25 == v17 && v25[1] == v16;
              if (v26 || (sub_25B290FB0() & 1) != 0)
              {
LABEL_6:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                int64_t v7 = v44;
                unint64_t v4 = v41;
                swift_release();
                swift_bridgeObjectRelease();
                uint64_t result = swift_bridgeObjectRelease();
                if (!v41) {
                  goto LABEL_8;
                }
                goto LABEL_7;
              }
              uint64_t v27 = ~v22;
              while (1)
              {
                unint64_t v23 = (v23 + 1) & v27;
                if (((*(void *)(v19 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
                  break;
                }
                uint64_t v28 = (void *)(v24 + 16 * v23);
                BOOL v29 = *v28 == v17 && v28[1] == v16;
                if (v29 || (sub_25B290FB0() & 1) != 0) {
                  goto LABEL_6;
                }
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              int64_t v7 = v44;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            uint64_t v14 = v20;
            uint64_t v15 = v40;
            unint64_t v4 = v41;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (MEMORY[0x261160990](v18 + 16))
          {
            uint64_t v30 = *(void *)(v18 + 24);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v30 + 16))(v43, ObjectType, v30);
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            long long v32 = v43[0];
          }
          else
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            long long v32 = 0uLL;
          }
          long long v42 = v32;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_25B218624(0, v36[2] + 1, 1, v36);
            uint64_t v36 = (void *)result;
          }
          unint64_t v34 = v36[2];
          unint64_t v33 = v36[3];
          if (v34 >= v33 >> 1)
          {
            uint64_t result = (uint64_t)sub_25B218624((void *)(v33 > 1), v34 + 1, 1, v36);
            uint64_t v36 = (void *)result;
          }
          v36[2] = v34 + 1;
          uint64_t v35 = &v36[6 * v34];
          v35[4] = v15;
          v35[5] = v14;
          v35[6] = v17;
          v35[7] = v16;
          *((_OWORD *)v35 + 4) = v42;
          if (!v4) {
            goto LABEL_8;
          }
LABEL_7:
          unint64_t v8 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
        }
      }
      int64_t v12 = v10 + 4;
      if (v12 < v38)
      {
        unint64_t v11 = *(void *)(v37 + 8 * v12);
        int64_t v7 = v12;
        if (!v11)
        {
          while (1)
          {
            int64_t v7 = v12 + 1;
            if (__OFADD__(v12, 1)) {
              goto LABEL_53;
            }
            if (v7 >= v38) {
              goto LABEL_51;
            }
            unint64_t v11 = *(void *)(v37 + 8 * v7);
            ++v12;
            if (v11) {
              goto LABEL_22;
            }
          }
        }
        goto LABEL_22;
      }
    }
LABEL_51:
    swift_release();
    return (uint64_t)v36;
  }
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_25B17C13C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a3 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a3 + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a3 + 64);
  unint64_t v34 = (uint64_t *)(a4 + 648);
  uint64_t result = swift_beginAccess();
  uint64_t v30 = 0;
  int64_t v8 = 0;
  int64_t v32 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_22:
    uint64_t v14 = *v34;
    if (*(void *)(*v34 + 16))
    {
      unint64_t v36 = v6;
      unint64_t v35 = v10;
      uint64_t v15 = *(void *)(a3 + 56) + 48 * v10;
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v15 + 24);
      sub_25B291210();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_25B290630();
      uint64_t v18 = sub_25B291260();
      uint64_t v19 = -1 << *(unsigned char *)(v14 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        goto LABEL_37;
      }
      uint64_t v21 = *(void *)(v14 + 48);
      uint64_t v22 = (void *)(v21 + 16 * v20);
      BOOL v23 = *v22 == v16 && v22[1] == v17;
      if (!v23 && (sub_25B290FB0() & 1) == 0)
      {
        uint64_t v24 = ~v19;
        while (1)
        {
          unint64_t v20 = (v20 + 1) & v24;
          if (((*(void *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
            break;
          }
          uint64_t v25 = (void *)(v21 + 16 * v20);
          BOOL v26 = *v25 == v16 && v25[1] == v17;
          if (v26 || (sub_25B290FB0() & 1) != 0) {
            goto LABEL_5;
          }
        }
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v6 = v36;
        unint64_t v10 = v35;
        goto LABEL_38;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v6 = v36;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
LABEL_38:
      *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v30++, 1))
      {
        __break(1u);
        return sub_25B1A2A84(a1, a2, v30, a3);
      }
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v11 >= v32) {
    return sub_25B1A2A84(a1, a2, v30, a3);
  }
  unint64_t v12 = *(void *)(v31 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v32) {
    return sub_25B1A2A84(a1, a2, v30, a3);
  }
  unint64_t v12 = *(void *)(v31 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v32) {
    return sub_25B1A2A84(a1, a2, v30, a3);
  }
  unint64_t v12 = *(void *)(v31 + 8 * v8);
  if (v12)
  {
LABEL_21:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v32) {
    return sub_25B1A2A84(a1, a2, v30, a3);
  }
  unint64_t v12 = *(void *)(v31 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v32) {
      return sub_25B1A2A84(a1, a2, v30, a3);
    }
    unint64_t v12 = *(void *)(v31 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_25B17C4AC@<X0>(unsigned char *a1@<X8>)
{
  return sub_25B12C8CC(v1, a1);
}

uint64_t sub_25B17C4C8()
{
  return sub_25B12C96C(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25B17C4D4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B17C4E4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B17C4F4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B17C504@<X0>(void *a1@<X8>)
{
  return sub_25B12D0D4(v1, a1);
}

uint64_t sub_25B17C520()
{
  return objectdestroy_34Tm(MEMORY[0x263F8EEA0], MEMORY[0x263F8EED8], 32);
}

uint64_t sub_25B17C550()
{
  return sub_25B12D170(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25B17C558()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B17C568()
{
  return objectdestroy_34Tm(MEMORY[0x263F8EEA0], MEMORY[0x263F8EED8], 32);
}

uint64_t sub_25B17C598()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B17C5A8()
{
  return objectdestroy_34Tm(MEMORY[0x263F8EEA0], MEMORY[0x263F8EED8], 32);
}

uint64_t sub_25B17C5D8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B17C5E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_25B12D980(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_25B17C604()
{
  return sub_25B133F00(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(uint64_t, uint64_t, void))MetadataStoring.pairingRelationship(relationshipID:));
}

uint64_t sub_25B17C634@<X0>(uint64_t a1@<X8>)
{
  return sub_25B12DB3C(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_25B17C654@<X0>(uint64_t a1@<X8>)
{
  return sub_25B180518(a1);
}

uint64_t sub_25B17C66C()
{
  uint64_t v1 = sub_25B290080();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_25B17C738()
{
  return sub_25B1861C8(MEMORY[0x263F07508], sub_25B16FA28);
}

uint64_t sub_25B17C764()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B17C774()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 136);
  if (v1 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v0 + 128), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 216, 7);
}

uint64_t sub_25B17C804()
{
  return sub_25B12E39C(v0 + 16, *(void **)(v0 + 192), *(void (**)(void, void))(v0 + 200), *(void *)(v0 + 208));
}

uint64_t sub_25B17C814()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B17C824()
{
  return objectdestroy_124Tm(MEMORY[0x263F8EED8], 56);
}

uint64_t sub_25B17C840()
{
  return sub_25B180BAC((uint64_t (*)(void, void, void, void, void))sub_25B12E7CC);
}

uint64_t sub_25B17C858()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B17C868()
{
  return sub_25B1804EC();
}

uint64_t sub_25B17C880()
{
  return objectdestroy_134Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0]);
}

uint64_t sub_25B17C8AC()
{
  return sub_25B130190(v0[2], v0[3], v0[4]);
}

uint64_t sub_25B17C8B8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_25B17C8C8()
{
}

uint64_t sub_25B17C8D0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B17C8E0()
{
  sub_25B1253D4();
  return sub_25B12386C();
}

uint64_t sub_25B17C908@<X0>(_OWORD *a1@<X8>)
{
  return sub_25B133AA0(a1);
}

uint64_t sub_25B17C930()
{
  return sub_25B133F00(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(uint64_t, uint64_t, void))MetadataStoring.metadata(for:));
}

uint64_t sub_25B17C960@<X0>(uint64_t *a1@<X8>)
{
  return sub_25B180374(a1);
}

uint64_t sub_25B17C978@<X0>(void *a1@<X8>)
{
  return sub_25B13414C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_25B17C994@<X0>(uint64_t *a1@<X8>)
{
  return sub_25B134270(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_25B17C9B4()
{
  return sub_25B134454(v0[2], v0[3], v0[4]);
}

uint64_t sub_25B17C9D4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 49, 7);
}

uint64_t sub_25B17CA1C(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 40);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v8 = v4;
  char v9 = v5;
  uint64_t v6 = sub_25B135748(v3, &v10, (uint64_t)&v8);
  return a1(v6);
}

uint64_t sub_25B17CA84()
{
  return sub_25B134708(*(void *)(v0 + 24));
}

uint64_t sub_25B17CAAC()
{
  return objectdestroy_34Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0], 41);
}

uint64_t sub_25B17CADC(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + 24);
  char v4 = *(unsigned char *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 32);
  char v8 = v4;
  uint64_t v5 = sub_25B1363E8(v3, (uint64_t)&v7);
  return a1(v5);
}

uint64_t sub_25B17CB48(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  return sub_25B137F10(a1, a2, *(unsigned char *)(v2 + 16), *(uint64_t **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

unint64_t sub_25B17CB5C@<X0>(unint64_t *a1@<X8>)
{
  return sub_25B175D38(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_25B17CB7C()
{
  return sub_25B13990C(v0);
}

uint64_t sub_25B17CB84()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B17CB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a5;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v32 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (uint64_t)&v29 - v11;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v30 = a1 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v31 = (unint64_t)(v14 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  while (v16)
  {
    unint64_t v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v20 = v19 | (v18 << 6);
LABEL_19:
    uint64_t v24 = *(void *)(a1 + 48);
    uint64_t v25 = sub_25B290080();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v12, v24 + *(void *)(*(void *)(v25 - 8) + 72) * v20, v25);
    uint64_t v26 = *(void *)(a1 + 56);
    uint64_t v27 = type metadata accessor for PairingRelationship();
    sub_25B1806D0(v26 + *(void *)(*(void *)(v27 - 8) + 72) * v20, v12 + *(int *)(v7 + 48), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B187574(v12, (uint64_t)v10, &qword_26A4D9EE8);
    BOOL v28 = sub_25B1698A4((uint64_t)v10, v32, v33, v34, v35);
    uint64_t result = sub_25B116DE0((uint64_t)v10, &qword_26A4D9EE8);
    if (v5) {
      goto LABEL_28;
    }
    if (v28)
    {
      LOBYTE(v12) = 1;
LABEL_28:
      swift_release();
      return v12 & 1;
    }
  }
  if (__OFADD__(v18++, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v18 >= v31) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v18);
  if (v22)
  {
LABEL_18:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_19;
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v31) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v31) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v31) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v31)
  {
LABEL_27:
    LOBYTE(v12) = 0;
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22)
  {
LABEL_17:
    int64_t v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v31) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v30 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_25B17CE94(uint64_t a1, unint64_t a2, void *a3, void (*a4)(void, void), uint64_t a5)
{
  uint64_t v10 = sub_25B290320();
  uint64_t v67 = *(void *)(v10 - 8);
  uint64_t v68 = v10;
  MEMORY[0x270FA5388](v10);
  long long v65 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_25B290360();
  uint64_t v64 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v63 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25B290410();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (uint64_t *)((char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  int64_t v18 = (void *)a3[29];
  *unint64_t v16 = v18;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8F0E0], v13);
  uint64_t v62 = a5;
  swift_retain();
  id v19 = v18;
  LOBYTE(v18) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v18)
  {
    uint64_t v70 = a1;
    if (qword_26A4D98C0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v69 = (uint64_t)v19;
  uint64_t v20 = sub_25B290190();
  __swift_project_value_buffer(v20, (uint64_t)qword_26A4EB150);
  swift_bridgeObjectRetain_n();
  uint64_t v21 = sub_25B290160();
  os_log_type_t v22 = sub_25B2908A0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v60 = v17;
    uint64_t v61 = a4;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = a3;
    uint64_t v26 = swift_slowAlloc();
    *(void *)&long long v73 = v26;
    *(_DWORD *)uint64_t v24 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v27 = v70;
    aBlock[0] = sub_25B288E98(v70, a2, (uint64_t *)&v73);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v21, v22, "Pairing with device: %{public}s", v24, 0xCu);
    swift_arrayDestroy();
    uint64_t v28 = v26;
    a3 = v25;
    MEMORY[0x261160890](v28, -1, -1);
    uint64_t v29 = v24;
    a4 = v61;
    uint64_t v17 = v60;
    MEMORY[0x261160890](v29, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v27 = v70;
  }
  uint64_t v76 = 0;
  long long v74 = 0u;
  long long v75 = 0u;
  long long v73 = 0u;
  sub_25B167714(a3, v27, a2, (uint64_t *)&v73, (uint64_t)sub_25B1873F0, v17, (char *)aBlock);
  char v30 = aBlock[0];
  if (LOBYTE(aBlock[0]) != 8)
  {
    sub_25B11641C(v73, *((uint64_t *)&v73 + 1));
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = sub_25B1873F0;
    *(void *)(v40 + 24) = v17;
    *(unsigned char *)(v40 + 32) = v30;
    aBlock[4] = (uint64_t)sub_25B187BC4;
    void aBlock[5] = v40;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_25B10F584;
    aBlock[3] = (uint64_t)&block_descriptor_1598;
    unint64_t v41 = _Block_copy(aBlock);
    swift_retain();
    long long v42 = v63;
    sub_25B290340();
    uint64_t v72 = MEMORY[0x263F8EE78];
    sub_25B1875E0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
    uint64_t v43 = v65;
    uint64_t v44 = v68;
    sub_25B290A00();
    MEMORY[0x26115F250](0, v42, v43, v41);
    _Block_release(v41);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v43, v44);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v42, v66);
    goto LABEL_10;
  }
  uint64_t v31 = *((void *)&v73 + 1);
  if (*((void *)&v73 + 1))
  {
    uint64_t v33 = *((void *)&v75 + 1);
    uint64_t v32 = v76;
    uint64_t v34 = a3;
    uint64_t v36 = *((void *)&v74 + 1);
    char v35 = v75;
    uint64_t v37 = v74;
    uint64_t v38 = v73;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v34;
    *(void *)(v39 + 24) = v38;
    *(void *)(v39 + 32) = v31;
    *(void *)(v39 + 40) = v37;
    *(void *)(v39 + 48) = v36;
    *(unsigned char *)(v39 + 56) = v35;
    *(_DWORD *)(v39 + 57) = aBlock[0];
    *(_DWORD *)(v39 + 60) = *(_DWORD *)((char *)aBlock + 3);
    *(void *)(v39 + 64) = v33;
    *(void *)(v39 + 72) = v32;
    swift_retain();
    sub_25B1B7434(0xD000000000000013, 0x800000025B29C8C0, v69, (uint64_t)sub_25B184B00, v39, 0.0);
LABEL_10:
    swift_release();
    return swift_release();
  }
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v46 = sub_25B290160();
  os_log_type_t v47 = sub_25B290880();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = a3;
    uint64_t v49 = swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    aBlock[0] = v69;
    *(_DWORD *)uint64_t v49 = 136315394;
    unint64_t v50 = v48[32];
    uint64_t v61 = a4;
    if (v50)
    {
      uint64_t v51 = v48[31];
      unint64_t v52 = v50;
    }
    else
    {
      uint64_t v53 = v48[23];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8))(ObjectType, v53);
      if (v56) {
        uint64_t v51 = v55;
      }
      else {
        uint64_t v51 = 0xD000000000000016;
      }
      if (v56) {
        unint64_t v52 = v56;
      }
      else {
        unint64_t v52 = 0x800000025B29C2A0;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_25B288E98(v51, v52, aBlock);
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_25B288E98(v70, a2, aBlock);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v46, v47, "%s Cannot pair with a device that has no handshakeDescriptor: %s, privacy: .public)", (uint8_t *)v49, 0x16u);
    uint64_t v57 = v69;
    swift_arrayDestroy();
    MEMORY[0x261160890](v57, -1, -1);
    MEMORY[0x261160890](v49, -1, -1);

    a4 = v61;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  sub_25B182988();
  uint64_t v58 = (void *)swift_allocError();
  *uint64_t v59 = 1;
  a4(v58, 1);

  return swift_release();
}

uint64_t sub_25B17D784(uint64_t a1, void *a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v34 = type metadata accessor for PairingRelationship();
  uint64_t v6 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v33 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25B290410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void *)a1;
  unint64_t v35 = *(void *)(a1 + 8);
  uint64_t v36 = v15;
  long long v16 = *(_OWORD *)(a1 + 128);
  long long v57 = *(_OWORD *)(a1 + 112);
  long long v58 = v16;
  long long v17 = *(_OWORD *)(a1 + 160);
  long long v59 = *(_OWORD *)(a1 + 144);
  long long v60 = v17;
  long long v18 = *(_OWORD *)(a1 + 64);
  long long v53 = *(_OWORD *)(a1 + 48);
  long long v54 = v18;
  long long v19 = *(_OWORD *)(a1 + 96);
  long long v55 = *(_OWORD *)(a1 + 80);
  long long v56 = v19;
  long long v20 = *(_OWORD *)(a1 + 32);
  long long v51 = *(_OWORD *)(a1 + 16);
  long long v52 = v20;
  uint64_t v21 = a2;
  os_log_type_t v22 = (void *)a2[29];
  uint64_t v23 = v38;
  *uint64_t v14 = v22;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  swift_retain();
  id v24 = v22;
  LOBYTE(v22) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if (v22)
  {
    uint64_t v26 = v21;
    swift_beginAccess();
    sub_25B10FF48((uint64_t)(v21 + 24), (uint64_t)&v40);
    uint64_t v27 = *((void *)&v41 + 1);
    uint64_t v28 = v42;
    __swift_project_boxed_opaque_existential_1(&v40, *((uint64_t *)&v41 + 1));
    unint64_t v30 = v35;
    uint64_t v29 = v36;
    MetadataStoring.pairingRelationship(remoteDeviceID:)(v36, v35, v27, *(void *)(v28 + 8), (uint64_t)v10);
    LODWORD(v27) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 1, v34);
    sub_25B116DE0((uint64_t)v10, &qword_26A4D9610);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    if (v27 == 1)
    {
      *(void *)&long long v40 = v29;
      *((void *)&v40 + 1) = v30;
      long long v47 = v57;
      long long v48 = v58;
      long long v49 = v59;
      long long v50 = v60;
      long long v43 = v53;
      long long v44 = v54;
      long long v45 = v55;
      long long v46 = v56;
      long long v41 = v51;
      long long v42 = v52;
      v39[0] = 0;
      v39[1] = 0;
      uint64_t v31 = v33;
      sub_25B148078(&v40, (uint64_t)v39, 0, 1, v33);
      sub_25B180A5C(v31, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    }
    swift_retain();
    sub_25B17CE94(v29, v30, v26, v37, v23);
    return swift_release_n();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B17DB04(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = 0;
  unint64_t v5 = *(void *)(result + 16);
  uint64_t v6 = result + 56;
  unint64_t v20 = v5;
  uint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t v19 = result + 56;
LABEL_2:
  if (v4 > v5) {
    unint64_t v5 = v4;
  }
  uint64_t v7 = -(uint64_t)v5;
  unint64_t v8 = v4 + 1;
  uint64_t v9 = (uint64_t *)(v6 + 32 * v4);
  while (1)
  {
    if (v23 + v8 == 1) {
      return v21;
    }
    unint64_t v4 = v8++;
    if (v7 + v8 == 2) {
      break;
    }
    uint64_t v11 = *(v9 - 3);
    uint64_t v10 = *(v9 - 2);
    uint64_t v12 = *(v9 - 1);
    uint64_t v13 = *v9;
    if (v12 == a2 && v13 == a3)
    {
      uint64_t v12 = a2;
      uint64_t v13 = a3;
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v15 = v21;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_25B2240C0(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v15 = v21;
      }
      unint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        uint64_t result = sub_25B2240C0(v16 > 1, v17 + 1, 1);
        uint64_t v15 = v21;
      }
      *(void *)(v15 + 16) = v17 + 1;
      uint64_t v21 = v15;
      long long v18 = (void *)(v15 + 32 * v17);
      v18[4] = v11;
      v18[5] = v10;
      v18[6] = v12;
      v18[7] = v13;
      uint64_t v6 = v19;
      unint64_t v5 = v20;
      goto LABEL_2;
    }
    v9 += 4;
    uint64_t result = sub_25B290FB0();
    if (result) {
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25B17DC84(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v24 = (unint64_t *)result;
  uint64_t v8 = 0;
  int64_t v9 = 0;
  uint64_t v10 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(a3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    unint64_t v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v17 = v16 | (v9 << 6);
LABEL_21:
    uint64_t v21 = *(void *)(a3 + 48) + 32 * v17;
    uint64_t result = *(void *)(v21 + 16);
    if (result != a4 || *(void *)(v21 + 24) != a5)
    {
      uint64_t result = sub_25B290FB0();
      if ((result & 1) == 0) {
        continue;
      }
    }
    *(unint64_t *)((char *)v24 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    if (__OFADD__(v8++, 1)) {
      goto LABEL_30;
    }
  }
  int64_t v18 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v18 >= v14) {
    return sub_25B1A2DD0(v24, a2, v8, a3);
  }
  unint64_t v19 = *(void *)(v10 + 8 * v18);
  ++v9;
  if (v19) {
    goto LABEL_20;
  }
  int64_t v9 = v18 + 1;
  if (v18 + 1 >= v14) {
    return sub_25B1A2DD0(v24, a2, v8, a3);
  }
  unint64_t v19 = *(void *)(v10 + 8 * v9);
  if (v19) {
    goto LABEL_20;
  }
  int64_t v9 = v18 + 2;
  if (v18 + 2 >= v14) {
    return sub_25B1A2DD0(v24, a2, v8, a3);
  }
  unint64_t v19 = *(void *)(v10 + 8 * v9);
  if (v19)
  {
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v9 << 6);
    goto LABEL_21;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v14) {
    return sub_25B1A2DD0(v24, a2, v8, a3);
  }
  unint64_t v19 = *(void *)(v10 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v14) {
      return sub_25B1A2DD0(v24, a2, v8, a3);
    }
    unint64_t v19 = *(void *)(v10 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_25B17DE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v15[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_25B17DC84((uint64_t)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2, a3);
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_25B17DC84((uint64_t)v13, v9, a1, a2, a3);
    swift_bridgeObjectRelease();
    MEMORY[0x261160890](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_25B17E004(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Message();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = *(NSObject **)(v1 + 232);
  sub_25B1806D0(a1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for Message);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  sub_25B18095C((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(void))type metadata accessor for Message);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_25B18619C;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_25B117398;
  void aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10D184;
  aBlock[3] = &block_descriptor_1563;
  size_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B17E214(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + *(int *)(type metadata accessor for PairingRelationship() + 20) + 32);
  int64_t v4 = *(void *)(a1 + 16);
  if (v3 <= 7)
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    if (v4)
    {
      uint64_t v34 = (void *)MEMORY[0x263F8EE78];
      sub_25B2240C0(0, v4, 0);
      uint64_t v5 = v34;
      uint64_t v6 = (uint64_t *)(a1 + 40);
      do
      {
        uint64_t v8 = *(v6 - 1);
        uint64_t v7 = *v6;
        unint64_t v10 = v34[2];
        unint64_t v9 = v34[3];
        swift_bridgeObjectRetain();
        if (v10 >= v9 >> 1) {
          sub_25B2240C0(v9 > 1, v10 + 1, 1);
        }
        v6 += 2;
        v34[2] = v10 + 1;
        uint64_t v11 = &v34[4 * v10];
        v11[4] = v8;
        v11[5] = v7;
        v11[6] = 0xD000000000000011;
        v11[7] = 0x800000025B29C8A0;
        --v4;
      }
      while (v4);
    }
    return (uint64_t)v5;
  }
  if (!v4) {
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  sub_25B183ADC();
  uint64_t v12 = a1 + 40;
  uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = (void *)sub_25B290840();
    int64_t v14 = v13;
    if (v13[2] == 2) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    v12 += 16;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v5;
    }
  }
  uint64_t v15 = v13[4];
  uint64_t v16 = v13[5];
  uint64_t v18 = v13[6];
  uint64_t v17 = v13[7];
  swift_bridgeObjectRetain();
  uint64_t v19 = MEMORY[0x26115EF60](v15, v16, v18, v17);
  uint64_t v21 = v20;
  uint64_t result = swift_bridgeObjectRelease();
  if (v14[2] >= 2uLL)
  {
    uint64_t v33 = v19;
    uint64_t v23 = v14[8];
    uint64_t v24 = v14[9];
    uint64_t v25 = v14[10];
    uint64_t v26 = v14[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v27 = MEMORY[0x26115EF60](v23, v24, v25, v26);
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_25B218760(0, v5[2] + 1, 1, v5);
    }
    unint64_t v31 = v5[2];
    unint64_t v30 = v5[3];
    if (v31 >= v30 >> 1) {
      uint64_t v5 = sub_25B218760((void *)(v30 > 1), v31 + 1, 1, v5);
    }
    uint64_t v5[2] = v31 + 1;
    uint64_t v32 = &v5[4 * v31];
    v32[4] = v33;
    v32[5] = v21;
    v32[6] = v27;
    v32[7] = v29;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_25B17E4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_25B28FEA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Message();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  dispatch_queue_t v19 = *(dispatch_queue_t *)(v2 + 232);
  sub_25B1806D0(a1, (uint64_t)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for Message);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (v11 + *(unsigned __int8 *)(v6 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v2;
  sub_25B18095C((uint64_t)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v12, (uint64_t (*)(void))type metadata accessor for Message);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v14 + v13, v8, v5);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_25B1809C4;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = sub_25B117398;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10D184;
  aBlock[3] = &block_descriptor_324;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v19, v16);
  _Block_release(v16);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B17E7E8@<X0>(char *a1@<X8>)
{
  return sub_25B13C038(v1[2], v1[4], v1[5], a1);
}

uint64_t _s16ReplicatorEngine0A0C11syncService_25availableDevicesDidChangeyAA13SyncServicing_p_SaySSGtF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(NSObject **)(v3 + 232);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = a1;
  void v7[3] = a2;
  void v7[4] = v3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_25B1805BC;
  *(void *)(v8 + 24) = v7;
  v11[4] = sub_25B117398;
  v11[5] = v8;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_25B10D184;
  void v11[3] = &block_descriptor_299;
  uint64_t v9 = _Block_copy(v11);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B17E978@<X0>(void *a1@<X8>)
{
  return sub_25B1714E8(v1, a1);
}

uint64_t sub_25B17E994@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25B120C10();
  *a1 = result;
  return result;
}

uint64_t sub_25B17E9C0(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 152) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_25B17EA04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25B120D2C();
  *a1 = result;
  return result;
}

uint64_t sub_25B17EA30(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 168) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_25B17EA74@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_175Tm(a1);
}

uint64_t sub_25B17EA8C(char *a1)
{
  return sub_25B120F78(*a1);
}

uint64_t sub_25B17EAB4@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_175Tm(a1);
}

uint64_t keypath_get_175Tm@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B290900();
  *a1 = v3;
  return result;
}

uint64_t sub_25B17EB24(char *a1)
{
  return Replicator.isAllowListEnabled.setter(*a1);
}

uint64_t sub_25B17EB50()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return Replicator.allowList.setter(v0);
}

uint64_t type metadata accessor for Replicator()
{
  return self;
}

uint64_t method lookup function for Replicator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Replicator);
}

uint64_t dispatch thunk of Replicator.pairingRelationshipPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of Replicator.pairingRelationshipPublisher.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of Replicator.pairingRelationshipPublisher.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of Replicator.forgottenRelationshipPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of Replicator.forgottenRelationshipPublisher.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of Replicator.forgottenRelationshipPublisher.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of Replicator.isEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 920))();
}

uint64_t dispatch thunk of Replicator.isEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 928))();
}

uint64_t dispatch thunk of Replicator.isEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 936))();
}

uint64_t dispatch thunk of Replicator.__allocating_init(syncService:metadataStore:replicationPolicy:suspensionPolicy:deviceType:screenDescriptor:zoneVersionAdvertiser:handshakeScheduler:pinnedIdentityManager:permittedRemoteDeviceTypes:personaMonitor:localDeviceIdentifier:activeWatchIDSIDProvider:reconciliationQueryingAttempts:reconciliationQueryingDelay:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 944))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t dispatch thunk of Replicator.start()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 952))();
}

ValueMetadata *type metadata accessor for Replicator.Constants()
{
  return &type metadata for Replicator.Constants;
}

uint64_t type metadata accessor for Replicator.WeakSource()
{
  return self;
}

ValueMetadata *type metadata accessor for Replicator.RelationshipReconciliationOptions()
{
  return &type metadata for Replicator.RelationshipReconciliationOptions;
}

uint64_t *sub_25B17EE20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25B290080();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_25B17EEF8(uint64_t a1)
{
  uint64_t v2 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B17EF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_25B17EFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25B17F094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_25B17F110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25B17F19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B17F1B0);
}

uint64_t sub_25B17F1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_25B17F274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B17F288);
}

uint64_t sub_25B17F288(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_25B290080();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for Replicator.Session(uint64_t a1)
{
  return sub_25B180000(a1, (uint64_t *)&unk_26A4DA670);
}

uint64_t sub_25B17F368()
{
  uint64_t result = sub_25B290080();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_25B17F3FC(char *a1, char *a2, uint64_t a3)
{
  int64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)int64_t v4 = *(void *)a2;
    int64_t v4 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v6;
    uint64_t v7 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v7;
    uint64_t v8 = *((void *)a2 + 5);
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = v8;
    uint64_t v9 = *(int *)(type metadata accessor for Record.ID(0) + 24);
    __dst = &v4[v9];
    unint64_t v10 = &a2[v9];
    uint64_t v11 = sub_25B290080();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = type metadata accessor for Record.ID.Ownership(0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(&v4[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v11);
    }
    else
    {
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v16(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
      v16(&v4[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v11);
    }
  }
  return v4;
}

uint64_t sub_25B17F5E0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for Record.ID(0) + 24);
  uint64_t v5 = sub_25B290080();
  uint64_t v11 = *(void *)(v5 - 8);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v4, 1, v5);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  if (!v6)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v7(v4, v5);
    uint64_t v7 = v10;
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v8, v5);
}

char *sub_25B17F6E0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v5;
  uint64_t v6 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v6;
  uint64_t v7 = *((void *)a2 + 5);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v7;
  uint64_t v8 = *(int *)(type metadata accessor for Record.ID(0) + 24);
  __dst = &a1[v8];
  uint64_t v9 = &a2[v8];
  uint64_t v10 = sub_25B290080();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v10);
  }
  else
  {
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v14(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    v14(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v10);
  }
  return a1;
}

char *sub_25B17F874(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for Record.ID(0) + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v9);
  return a1;
}

char *sub_25B17FA80(char *a1, char *a2, uint64_t a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v7 = *(int *)(type metadata accessor for Record.ID(0) + 24);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_25B290080();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v10);
  }
  else
  {
    int v13 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v13(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    v13(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v10);
  }
  return a1;
}

char *sub_25B17FBE0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)a2 + 5);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(type metadata accessor for Record.ID(0) + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_25B290080();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v12);
  return a1;
}

uint64_t sub_25B17FDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B17FDD0);
}

uint64_t sub_25B17FDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Record.ID(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_25B290080();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_25B17FEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B17FEDC);
}

uint64_t sub_25B17FEDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Record.ID(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_25B290080();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for Replicator.SyncItem(uint64_t a1)
{
  return sub_25B180000(a1, (uint64_t *)&unk_26A4DA680);
}

uint64_t sub_25B180000(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25B180038()
{
  uint64_t result = type metadata accessor for Record.ID(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25B290080();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_25B180100()
{
  return sub_25B1875E0(&qword_26A4D9220, MEMORY[0x263F07508]);
}

unint64_t sub_25B18014C()
{
  unint64_t result = qword_26A4DA690;
  if (!qword_26A4DA690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA690);
  }
  return result;
}

unint64_t sub_25B1801A4()
{
  unint64_t result = qword_26A4DA698;
  if (!qword_26A4DA698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA698);
  }
  return result;
}

unint64_t sub_25B1801FC()
{
  unint64_t result = qword_26A4DA6A0;
  if (!qword_26A4DA6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA6A0);
  }
  return result;
}

unint64_t sub_25B180254()
{
  unint64_t result = qword_26A4DA6A8;
  if (!qword_26A4DA6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA6A8);
  }
  return result;
}

uint64_t sub_25B1802A8(uint64_t a1)
{
  return a1;
}

unint64_t sub_25B1802D0()
{
  unint64_t result = qword_26A4DA6B0;
  if (!qword_26A4DA6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA6B0);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_25B180374@<X0>(uint64_t *a1@<X8>)
{
  return sub_25B134024(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t sub_25B180398(uint64_t (*a1)(uint64_t))
{
  uint64_t v6 = 0;
  uint64_t v4 = 0;
  char v5 = 0;
  uint64_t v2 = sub_25B138D84(&v6, &v4);
  return a1(v2);
}

uint64_t objectdestroy_163Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t objectdestroy_160Tm()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_25B180488(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  long long v9 = *(_OWORD *)(v1 + 40);
  uint64_t v10 = v5;
  uint64_t v11 = v6;
  uint64_t v7 = sub_25B137370(v3, v4, (uint64_t *)&v9);
  return a1(v7);
}

uint64_t sub_25B1804EC()
{
  return sub_25B12FACC(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

unint64_t sub_25B180518@<X0>(uint64_t a1@<X8>)
{
  unint64_t result = sub_25B12DC54(*(void *)(v1 + 24));
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v4 & 1;
  return result;
}

uint64_t sub_25B180560()
{
  return objectdestroy_34Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0], 32);
}

uint64_t sub_25B180590()
{
  return objectdestroy_134Tm(MEMORY[0x263F8EEE8], MEMORY[0x263F8EED8]);
}

void sub_25B1805BC()
{
  if (*(void *)(*(void *)(v0 + 32) + 176) == *(void *)(v0 + 16)) {
    sub_25B1290FC(7);
  }
}

uint64_t sub_25B1805F4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_25B180604(void *a1)
{
  sub_25B14352C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25B18060C()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_25B180654()
{
  sub_25B142C24(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(NSObject **)(v0 + 40));
}

uint64_t sub_25B180660()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25B1806A8()
{
  return sub_25B14300C(*(os_unfair_lock_s **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_25B1806B4(void **a1)
{
  return sub_25B142F58(a1, *(void *)(v1 + 16));
}

uint64_t sub_25B1806D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B180738()
{
  uint64_t v1 = type metadata accessor for Message();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v13 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v14 = sub_25B28FEA0();
  uint64_t v3 = *(void *)(v14 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = *(void *)(v3 + 64);
  swift_release();
  uint64_t v15 = v0;
  uint64_t v5 = v0 + ((v2 + 24) & ~v2);
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  uint64_t v9 = v5 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  uint64_t v10 = (((v2 + 24) & ~v2) + v13 + v4) & ~v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B10DFF0(*(void *)(v5 + *(int *)(v1 + 36)), *(void *)(v5 + *(int *)(v1 + 36) + 8));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15 + v10, v14);
  return MEMORY[0x270FA0238](v15, v10 + v12, v2 | v4 | 7);
}

uint64_t sub_25B18095C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B1809C4()
{
  return sub_25B185A70((uint64_t (*)(void))type metadata accessor for Message, MEMORY[0x263F06EA8], (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_25B13BEA8);
}

uint64_t sub_25B180A04()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B180A14()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return MEMORY[0x270FA0238](v0, 73, 7);
}

uint64_t sub_25B180A5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25B180AC0(uint64_t a1)
{
  return sub_25B184598(a1, type metadata accessor for ReplicatorMessage.Handshake.Request, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_25B1603E4);
}

uint64_t sub_25B180AEC()
{
  return objectdestroy_134Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EED8]);
}

uint64_t sub_25B180B18(uint64_t a1, unint64_t a2)
{
  return sub_25B145184(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_25B180B28(uint64_t a1, uint64_t a2)
{
  return sub_25B145278(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t objectdestroy_335Tm()
{
  swift_release();
  unint64_t v1 = *(void *)(v0 + 32);
  if (v1 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v0 + 24), v1);
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25B180B94()
{
  return sub_25B180BAC((uint64_t (*)(void, void, void, void, void))sub_25B145408);
}

uint64_t sub_25B180BAC(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_25B180BC4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B180BD4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_25B180BEC()
{
  return sub_25B145874();
}

uint64_t sub_25B180BF8(uint64_t a1, char a2)
{
  return sub_25B1840F8(a1, a2, type metadata accessor for ReplicatorMessage.Handshake.Request, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25B1615AC);
}

uint64_t sub_25B180C24()
{
  return objectdestroy_352Tm((void (*)(void, void))sub_25B116D08);
}

void sub_25B180C3C()
{
}

uint64_t sub_25B180C60()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_25B180CD4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 120, 7);
}

void sub_25B180D2C(int *a1)
{
  sub_25B154D00(a1, *(int **)(v1 + 16), v1 + 24, *(void *)(v1 + 80), *(unsigned __int8 *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104));
}

uint64_t sub_25B180D48(uint64_t a1)
{
  return a1;
}

uint64_t sub_25B180D80()
{
  return objectdestroy_134Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EED8]);
}

uint64_t sub_25B180DAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_25B180DE4()
{
  return objectdestroy_124Tm(MEMORY[0x263F8EEA0], 89);
}

uint64_t sub_25B180E00(void *a1, char a2)
{
  return sub_25B158B64(a1, a2 & 1, *(void *)(v2 + 16), v2 + 24, *(void *)(v2 + 80), *(unsigned __int8 *)(v2 + 88));
}

unint64_t sub_25B180E18()
{
  unint64_t result = qword_26A4D9830;
  if (!qword_26A4D9830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9830);
  }
  return result;
}

BOOL sub_25B180E6C(uint64_t a1)
{
  return sub_25B16300C(a1);
}

void sub_25B180E8C(uint64_t a1)
{
  sub_25B175FB4(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

void sub_25B180E94(void *a1, char a2)
{
  sub_25B1760B8(a1, a2 & 1, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_25B180EA0()
{
  sub_25B116D08(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 105, 7);
}

void sub_25B180EF4()
{
  sub_25B158E7C(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void **)(v0 + 32), v0 + 40, *(void *)(v0 + 96), *(unsigned char *)(v0 + 104));
}

uint64_t sub_25B180F10(char *a1, uint64_t a2)
{
  return sub_25B168254(a1, a2, *(void *)(v2 + 16), *(unsigned char **)(v2 + 24));
}

uint64_t sub_25B180F2C()
{
  return sub_25B168578();
}

void sub_25B180F34()
{
}

uint64_t sub_25B180F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  else {
    uint64_t v3 = -1;
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  uint64_t v5 = (uint64_t *)(a2 + 648);
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v7 = 0;
  int64_t v37 = (unint64_t)(v2 + 63) >> 6;
  unint64_t v35 = (void *)MEMORY[0x263F8EE78];
  while (v4)
  {
    unint64_t v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v9 = v8 | (v7 << 6);
LABEL_23:
    uint64_t v13 = *v5;
    if (*(void *)(*v5 + 16))
    {
      int64_t v40 = v7;
      uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 32 * v9);
      uint64_t v15 = v14[1];
      uint64_t v39 = *v14;
      uint64_t v17 = v14[2];
      uint64_t v16 = v14[3];
      uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * v9);
      sub_25B291210();
      uint64_t v43 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_25B290630();
      uint64_t v19 = sub_25B291260();
      uint64_t v20 = -1 << *(unsigned char *)(v13 + 32);
      unint64_t v21 = v19 & ~v20;
      if (((*(void *)(v13 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v22 = *(void *)(v13 + 48);
      uint64_t v23 = (void *)(v22 + 16 * v21);
      BOOL v24 = *v23 == v17 && v23[1] == v16;
      if (v24 || (sub_25B290FB0() & 1) != 0)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v7 = v40;
        uint64_t v28 = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (MEMORY[0x261160990](v18 + 16))
        {
          uint64_t v29 = *(void *)(v18 + 24);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v29 + 16))(v42, ObjectType, v29);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          long long v31 = v42[0];
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v31 = 0uLL;
        }
        long long v41 = v31;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_25B218624(0, v35[2] + 1, 1, v35);
          unint64_t v35 = (void *)result;
        }
        unint64_t v33 = v35[2];
        unint64_t v32 = v35[3];
        if (v33 >= v32 >> 1)
        {
          uint64_t result = (uint64_t)sub_25B218624((void *)(v32 > 1), v33 + 1, 1, v35);
          unint64_t v35 = (void *)result;
        }
        v35[2] = v33 + 1;
        uint64_t v34 = &v35[6 * v33];
        v34[4] = v39;
        v34[5] = v28;
        v34[6] = v17;
        v34[7] = v16;
        *((_OWORD *)v34 + 4) = v41;
      }
      else
      {
        uint64_t v25 = ~v20;
        while (1)
        {
          unint64_t v21 = (v21 + 1) & v25;
          if (((*(void *)(v13 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
            break;
          }
          uint64_t v26 = (void *)(v22 + 16 * v21);
          BOOL v27 = *v26 == v17 && v26[1] == v16;
          if (v27 || (sub_25B290FB0() & 1) != 0) {
            goto LABEL_37;
          }
        }
LABEL_5:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v7 = v40;
      }
    }
  }
  int64_t v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v10 >= v37) {
    goto LABEL_45;
  }
  unint64_t v11 = *(void *)(v36 + 8 * v10);
  ++v7;
  if (v11) {
    goto LABEL_22;
  }
  int64_t v7 = v10 + 1;
  if (v10 + 1 >= v37) {
    goto LABEL_45;
  }
  unint64_t v11 = *(void *)(v36 + 8 * v7);
  if (v11) {
    goto LABEL_22;
  }
  int64_t v7 = v10 + 2;
  if (v10 + 2 >= v37) {
    goto LABEL_45;
  }
  unint64_t v11 = *(void *)(v36 + 8 * v7);
  if (v11) {
    goto LABEL_22;
  }
  int64_t v7 = v10 + 3;
  if (v10 + 3 >= v37) {
    goto LABEL_45;
  }
  unint64_t v11 = *(void *)(v36 + 8 * v7);
  if (v11) {
    goto LABEL_22;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v37)
  {
LABEL_45:
    swift_release();
    return (uint64_t)v35;
  }
  unint64_t v11 = *(void *)(v36 + 8 * v12);
  int64_t v7 = v12;
  if (v11)
  {
LABEL_22:
    unint64_t v4 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v37) {
      goto LABEL_45;
    }
    unint64_t v11 = *(void *)(v36 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_25B181370()
{
  return 0;
}

uint64_t sub_25B1814A4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_25B218870(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for Replicator.SyncItem(0) - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B18168C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v64 = a1;
  uint64_t v5 = type metadata accessor for ZoneVersion();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v63 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v62 = (char *)&v60 - v8;
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v65 = a2 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a2 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v9;
  uint64_t v68 = a2;
  swift_bridgeObjectRetain();
  uint64_t v67 = (uint64_t *)(a3 + 648);
  swift_beginAccess();
  int64_t v13 = 0;
  int64_t v66 = (unint64_t)(v10 + 63) >> 6;
  if (v12) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v16 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v16 < v66)
    {
      unint64_t v17 = *(void *)(v65 + 8 * v16);
      ++v13;
      if (v17) {
        goto LABEL_22;
      }
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v66) {
        goto LABEL_54;
      }
      unint64_t v17 = *(void *)(v65 + 8 * v13);
      if (v17) {
        goto LABEL_22;
      }
      int64_t v13 = v16 + 2;
      if (v16 + 2 >= v66) {
        goto LABEL_54;
      }
      unint64_t v17 = *(void *)(v65 + 8 * v13);
      if (v17) {
        goto LABEL_22;
      }
      int64_t v13 = v16 + 3;
      if (v16 + 3 >= v66) {
        goto LABEL_54;
      }
      unint64_t v17 = *(void *)(v65 + 8 * v13);
      if (v17)
      {
LABEL_22:
        unint64_t v12 = (v17 - 1) & v17;
        for (unint64_t i = __clz(__rbit64(v17)) + (v13 << 6); ; unint64_t i = v14 | (v13 << 6))
        {
          uint64_t v19 = *(void *)(v68 + 56);
          uint64_t v20 = (uint64_t *)(*(void *)(v68 + 48) + 32 * i);
          uint64_t v21 = v20[1];
          uint64_t v69 = *v20;
          uint64_t v23 = v20[2];
          uint64_t v22 = v20[3];
          uint64_t v24 = *(void *)(v19 + 8 * i);
          uint64_t v25 = *v67;
          uint64_t v26 = *(void *)(*v67 + 16);
          uint64_t v72 = v24;
          if (v26)
          {
            unint64_t v27 = v12;
            int64_t v28 = v13;
            sub_25B291210();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_retain();
            swift_bridgeObjectRetain();
            sub_25B290630();
            uint64_t v29 = sub_25B291260();
            uint64_t v30 = -1 << *(unsigned char *)(v25 + 32);
            unint64_t v31 = v29 & ~v30;
            if ((*(void *)(v25 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31))
            {
              uint64_t v70 = v21;
              uint64_t v32 = *(void *)(v25 + 48);
              unint64_t v33 = (void *)(v32 + 16 * v31);
              BOOL v34 = *v33 == v23 && v33[1] == v22;
              if (v34 || (sub_25B290FB0() & 1) != 0)
              {
LABEL_6:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                int64_t v13 = v28;
                unint64_t v12 = v27;
                if (!v27) {
                  goto LABEL_8;
                }
                goto LABEL_7;
              }
              uint64_t v35 = ~v30;
              while (1)
              {
                unint64_t v31 = (v31 + 1) & v35;
                if (((*(void *)(v25 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
                  break;
                }
                uint64_t v36 = (void *)(v32 + 16 * v31);
                BOOL v37 = *v36 == v23 && v36[1] == v22;
                if (v37 || (sub_25B290FB0() & 1) != 0) {
                  goto LABEL_6;
                }
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              int64_t v13 = v28;
              unint64_t v12 = v27;
              uint64_t v21 = v70;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              int64_t v13 = v28;
              unint64_t v12 = v27;
            }
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v38 = sub_25B290080();
          uint64_t v39 = (uint64_t)v62;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v62, 1, 1, v38);
          sub_25B18095C(v39, v63, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
          int64_t v40 = v64;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v42 = v21;
          int v43 = isUniquelyReferenced_nonNull_native;
          uint64_t v71 = v40;
          uint64_t v44 = v42;
          unint64_t v46 = sub_25B18A768(v69, v42, v23, v22);
          uint64_t v47 = v40[2];
          BOOL v48 = (v45 & 1) == 0;
          uint64_t v49 = v47 + v48;
          if (__OFADD__(v47, v48)) {
            goto LABEL_56;
          }
          char v50 = v45;
          if (v40[3] >= v49)
          {
            if ((v43 & 1) == 0) {
              sub_25B1941BC();
            }
            uint64_t v51 = v44;
          }
          else
          {
            sub_25B18F048(v49, v43);
            uint64_t v51 = v44;
            unint64_t v52 = sub_25B18A768(v69, v44, v23, v22);
            if ((v50 & 1) != (v53 & 1)) {
              goto LABEL_59;
            }
            unint64_t v46 = v52;
          }
          uint64_t v64 = v71;
          if (v50)
          {
            sub_25B187120(v63, v71[7] + *(void *)(v61 + 72) * v46, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
          }
          else
          {
            v71[(v46 >> 6) + 8] |= 1 << v46;
            uint64_t v54 = v63;
            long long v55 = (void *)(v64[6] + 32 * v46);
            *long long v55 = v69;
            v55[1] = v51;
            v55[2] = v23;
            v55[3] = v22;
            sub_25B18095C(v54, v64[7] + *(void *)(v61 + 72) * v46, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
            uint64_t v56 = v64[2];
            BOOL v57 = __OFADD__(v56, 1);
            uint64_t v58 = v56 + 1;
            if (v57) {
              goto LABEL_57;
            }
            v64[2] = v58;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          if (!v12) {
            goto LABEL_8;
          }
LABEL_7:
          unint64_t v14 = __clz(__rbit64(v12));
          v12 &= v12 - 1;
        }
      }
      int64_t v18 = v16 + 4;
      if (v18 < v66)
      {
        unint64_t v17 = *(void *)(v65 + 8 * v18);
        int64_t v13 = v18;
        if (!v17)
        {
          while (1)
          {
            int64_t v13 = v18 + 1;
            if (__OFADD__(v18, 1)) {
              goto LABEL_58;
            }
            if (v13 >= v66) {
              goto LABEL_54;
            }
            unint64_t v17 = *(void *)(v65 + 8 * v13);
            ++v18;
            if (v17) {
              goto LABEL_22;
            }
          }
        }
        goto LABEL_22;
      }
    }
LABEL_54:
    swift_release();
    return (uint64_t)v64;
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t sub_25B181CC8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v40 = a2;
  uint64_t v45 = a7;
  uint64_t v51 = a5;
  uint64_t v52 = a6;
  uint64_t v53 = a4;
  long long v41 = a1;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v8 = MEMORY[0x270FA5388](v49);
  uint64_t v10 = (uint64_t *)((char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v57 = (uint64_t)&v40 - v11;
  uint64_t v12 = type metadata accessor for RecordMetadata();
  uint64_t v48 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Record.ID(0);
  uint64_t v46 = *(void *)(v15 - 8);
  uint64_t result = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v56 = (uint64_t)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v18 = 0;
  char v50 = (void *)a3;
  uint64_t v19 = *(void *)(a3 + 64);
  uint64_t v42 = 0;
  uint64_t v43 = a3 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v44 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v47 = v14;
  uint64_t v23 = v56;
  uint64_t v24 = v57;
  while (1)
  {
    if (v22)
    {
      uint64_t v54 = (v22 - 1) & v22;
      int64_t v55 = v18;
      unint64_t v26 = __clz(__rbit64(v22)) | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v27 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v27 >= v44) {
      return sub_25B1A2340(v41, v40, v42, v50);
    }
    unint64_t v28 = *(void *)(v43 + 8 * v27);
    int64_t v29 = v18 + 1;
    if (!v28)
    {
      int64_t v29 = v18 + 2;
      if (v18 + 2 >= v44) {
        return sub_25B1A2340(v41, v40, v42, v50);
      }
      unint64_t v28 = *(void *)(v43 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v18 + 3;
        if (v18 + 3 >= v44) {
          return sub_25B1A2340(v41, v40, v42, v50);
        }
        unint64_t v28 = *(void *)(v43 + 8 * v29);
        if (!v28) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v54 = (v28 - 1) & v28;
    int64_t v55 = v29;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_22:
    unint64_t v31 = v50;
    sub_25B1806D0(v50[6] + *(void *)(v46 + 72) * v26, v23, type metadata accessor for Record.ID);
    sub_25B1806D0(v31[7] + *(void *)(v48 + 72) * v26, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v32 = v49;
    uint64_t v33 = v24 + *(int *)(v49 + 48);
    sub_25B1806D0(v23, v24, type metadata accessor for Record.ID);
    sub_25B1806D0((uint64_t)v14, v33, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v34 = (uint64_t)v10 + *(int *)(v32 + 48);
    sub_25B1806D0(v24, (uint64_t)v10, type metadata accessor for Record.ID);
    sub_25B1806D0(v33, v34, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v35 = v10[2];
    uint64_t v36 = v10[3];
    uint64_t v37 = v10[4];
    uint64_t v38 = v10[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B180A5C((uint64_t)v10, type metadata accessor for Record.ID);
    if ((v35 != v53 || v36 != v51) && (sub_25B290FB0() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    if (v37 == v52 && v38 == v45)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    char v25 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25)
    {
LABEL_28:
      sub_25B116DE0(v57, &qword_26A4D9860);
      sub_25B180A5C(v34, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      unint64_t v14 = v47;
      sub_25B180A5C((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t result = sub_25B180A5C(v56, type metadata accessor for Record.ID);
      *(unint64_t *)((char *)v41 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      BOOL v39 = __OFADD__(v42++, 1);
      unint64_t v22 = v54;
      int64_t v18 = v55;
      if (v39) {
        goto LABEL_35;
      }
    }
    else
    {
LABEL_5:
      sub_25B116DE0(v57, &qword_26A4D9860);
      sub_25B180A5C(v34, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      unint64_t v14 = v47;
      sub_25B180A5C((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t result = sub_25B180A5C(v56, type metadata accessor for Record.ID);
      unint64_t v22 = v54;
      int64_t v18 = v55;
    }
  }
  uint64_t v30 = v18 + 4;
  if (v18 + 4 >= v44) {
    return sub_25B1A2340(v41, v40, v42, v50);
  }
  unint64_t v28 = *(void *)(v43 + 8 * v30);
  if (v28)
  {
    int64_t v29 = v18 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v29 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v29 >= v44) {
      return sub_25B1A2340(v41, v40, v42, v50);
    }
    unint64_t v28 = *(void *)(v43 + 8 * v29);
    ++v30;
    if (v28) {
      goto LABEL_21;
    }
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_25B182244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v19[1] = *MEMORY[0x263EF8340];
  char v11 = *(unsigned char *)(a1 + 32);
  unsigned int v12 = v11 & 0x3F;
  unint64_t v13 = (unint64_t)((1 << v11) + 63) >> 6;
  size_t v14 = 8 * v13;
  swift_bridgeObjectRetain_n();
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v12 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v19[0] = v19;
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v19 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0), v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_25B181CC8((void *)((char *)v19 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0)), v13, a1, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v17 = (void *)swift_slowAlloc();
    bzero(v17, v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_25B181CC8((unint64_t *)v17, v13, a1, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    MEMORY[0x261160890](v17, -1, -1);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return v16;
}

uint64_t sub_25B182484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a1;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    int64_t v18 = (uint64_t *)(*(void *)(a2 + 48) + 32 * i);
    uint64_t v19 = v18[1];
    uint64_t v20 = v18[2];
    uint64_t v21 = v18[3];
    v22[0] = *v18;
    v22[1] = v19;
    void v22[2] = v20;
    void v22[3] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B1723CC(&v23, v22, a3);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10)
  {
LABEL_26:
    swift_release();
    return v23;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_25B182668(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a3 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a3 + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a3 + 64);
  uint64_t v34 = (uint64_t *)(a4 + 648);
  uint64_t result = swift_beginAccess();
  uint64_t v30 = 0;
  int64_t v8 = 0;
  int64_t v32 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_22:
    uint64_t v14 = *v34;
    if (*(void *)(*v34 + 16))
    {
      unint64_t v35 = v10;
      uint64_t v15 = *(void *)(a3 + 48) + 32 * v10;
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v15 + 24);
      sub_25B291210();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_25B290630();
      uint64_t v18 = sub_25B291260();
      uint64_t v19 = -1 << *(unsigned char *)(v14 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        goto LABEL_37;
      }
      uint64_t v21 = *(void *)(v14 + 48);
      unint64_t v22 = (void *)(v21 + 16 * v20);
      BOOL v23 = *v22 == v16 && v22[1] == v17;
      if (!v23 && (sub_25B290FB0() & 1) == 0)
      {
        uint64_t v24 = ~v19;
        while (1)
        {
          unint64_t v20 = (v20 + 1) & v24;
          if (((*(void *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
            break;
          }
          char v25 = (void *)(v21 + 16 * v20);
          BOOL v26 = *v25 == v16 && v25[1] == v17;
          if (v26 || (sub_25B290FB0() & 1) != 0) {
            goto LABEL_5;
          }
        }
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v35;
        goto LABEL_38;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
LABEL_38:
      *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v30++, 1))
      {
        __break(1u);
        return sub_25B1A30B0(a1, a2, v30, (void *)a3);
      }
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v11 >= v32) {
    return sub_25B1A30B0(a1, a2, v30, (void *)a3);
  }
  unint64_t v12 = *(void *)(v31 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v32) {
    return sub_25B1A30B0(a1, a2, v30, (void *)a3);
  }
  unint64_t v12 = *(void *)(v31 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v32) {
    return sub_25B1A30B0(a1, a2, v30, (void *)a3);
  }
  unint64_t v12 = *(void *)(v31 + 8 * v8);
  if (v12)
  {
LABEL_21:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v32) {
    return sub_25B1A30B0(a1, a2, v30, (void *)a3);
  }
  unint64_t v12 = *(void *)(v31 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v32) {
      return sub_25B1A30B0(a1, a2, v30, (void *)a3);
    }
    unint64_t v12 = *(void *)(v31 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

unint64_t sub_25B182988()
{
  unint64_t result = qword_26A4DA6F0;
  if (!qword_26A4DA6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA6F0);
  }
  return result;
}

uint64_t sub_25B1829E4()
{
  sub_25B1172F8(v0 + 16);
  return sub_25B290600();
}

uint64_t sub_25B182A48()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char **sub_25B182A58(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_25B2894F0(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_25B182A60()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182A70()
{
  return sub_25B288DF8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_25B182A78(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_25B288E20(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_25B182A80()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182A90()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182AA4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182AB4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182AC4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182AD4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182AE8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182AF8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182B08()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182B18()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182B2C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182B3C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182B4C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182B5C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182B70()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_25B182BA0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182BB0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182BC0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182BD0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182BE0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182BF0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182C0C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182C1C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182C2C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182C3C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182C4C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182C5C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182C6C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182C7C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182C98()
{
  return sub_25B1A160C(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_25B182CA4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182CB4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182CC4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182CD4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182CE4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182CF4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182D04()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182D14()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182D24()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182D34()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B182D4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610) - 8);
  return sub_25B169EF8(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_25B182DB4()
{
  uint64_t v1 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  uint64_t v7 = v0 + v3 + v1[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)(v7 + 120);
  if (v8 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v7 + 112), v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v5 + v1[6];
  uint64_t v10 = sub_25B290000();
  int64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  v11(v5 + v1[7], v10);
  if (*(void *)(v5 + v1[8] + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  v11(v5 + v1[9], v10);
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_25B182F90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for PairingRelationship() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = sub_25B290080();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a1, v4, v5);
}

uint64_t sub_25B183038()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183048()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183058()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183068()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183078()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183088()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183098()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1830A8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1830B8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1830C8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1830D8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1830E8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183108()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183118()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183128()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183138()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183148()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183158()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183168()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183178()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183190()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610) - 8);
  return sub_25B169DD8(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_25B1831E8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1831F8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183208()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183218()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183228()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183238()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B18324C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B18325C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B18326C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B18327C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183298()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1832A8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1832B8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1832C8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1832D8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1832E8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1832F8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183308()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B18331C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B18332C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B18333C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B18334C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183368()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183378()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183388()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183398()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1833A8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1833B8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1833C8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1833D8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1833EC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1833FC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B18340C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B18341C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t objectdestroy_586Tm()
{
  if (*(void *)(v0 + 24) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B183478()
{
  sub_25B120090(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return sub_25B290600();
}

uint64_t sub_25B1834B0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1834C0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1834D0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1834E0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1834F0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183500()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183510()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B183520()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t objectdestroy_386Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 136);
  if (v1 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v0 + 128), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 192, 7);
}

uint64_t objectdestroy_656Tm()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = (int *)type metadata accessor for PairingRelationship();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48))(v0 + v3, 1, v6))
  {
    uint64_t v7 = sub_25B290080();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
    uint64_t v8 = v5 + v6[5];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v9 = *(void *)(v8 + 120);
    if (v9 >> 60 != 15) {
      sub_25B10DFF0(*(void *)(v8 + 112), v9);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v5 + v6[6];
    uint64_t v11 = sub_25B290000();
    unint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    v12(v10, v11);
    v12(v5 + v6[7], v11);
    if (*(void *)(v5 + v6[8] + 8) >= 3uLL) {
      swift_bridgeObjectRelease();
    }
    v12(v5 + v6[9], v11);
  }
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_25B1837CC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1837DC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1837EC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1837FC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B18380C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B18381C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B18382C()
{
  uint64_t v1 = *(void *)(v0 + 528);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_25B183860()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B183898()
{
  return sub_25B169D88(v0);
}

uint64_t sub_25B1838A0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1838B0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1838C0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1838D0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1838E0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B1838F0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t objectdestroy_329Tm()
{
  uint64_t v1 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  if (*(void *)(v0 + v3 + *(int *)(v1 + 20) + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v6 + 120);
  if (v7 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v6 + 112), v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_25B183A84(uint64_t a1)
{
  return sub_25B184598(a1, type metadata accessor for ReplicatorMessage.Handshake.Request, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_25B159690);
}

uint64_t sub_25B183AB0()
{
  return objectdestroy_134Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EED8]);
}

unint64_t sub_25B183ADC()
{
  unint64_t result = qword_26A4DA6F8;
  if (!qword_26A4DA6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA6F8);
  }
  return result;
}

uint64_t objectdestroy_349Tm()
{
  uint64_t v1 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  if (*(void *)(v0 + v3 + *(int *)(v1 + 20) + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v6 + 120);
  if (v7 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v6 + 112), v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_25B183CA8(uint64_t a1, char a2)
{
  return sub_25B1840F8(a1, a2, type metadata accessor for ReplicatorMessage.Handshake.Request, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25B15C608);
}

uint64_t sub_25B183CD4()
{
  return objectdestroy_352Tm((void (*)(void, void))sub_25B1877D0);
}

uint64_t objectdestroy_352Tm(void (*a1)(void, void))
{
  uint64_t v3 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = (v4 + 40) & ~v4;
  uint64_t v6 = *(void *)(*(void *)(v3 - 8) + 64);
  a1(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
  swift_release();
  uint64_t v7 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v1 + v5, v7);
  if (*(void *)(v1 + v5 + *(int *)(v3 + 20) + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v1 + v5 + *(int *)(v3 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v9 = *(void *)(v8 + 120);
  if (v9 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v8 + 112), v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v1, v5 + v6, v4 | 7);
}

void sub_25B183E74()
{
  uint64_t v1 = *(void *)(type metadata accessor for ReplicatorMessage.Handshake.Request(0) - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  char v3 = *(unsigned char *)(v0 + 24);
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_25B15C84C(v2, v3, v4, v5);
}

uint64_t sub_25B183EE0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B183EF4(uint64_t a1)
{
  return sub_25B184598(a1, type metadata accessor for ReplicatorMessage.Handshake.Response, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_25B1617F0);
}

uint64_t sub_25B183F20()
{
  return objectdestroy_134Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EED8]);
}

uint64_t sub_25B183F4C()
{
  uint64_t v1 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  if (*(void *)(v0 + v3 + *(int *)(v1 + 20) + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v6 + 120);
  if (v7 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v6 + 112), v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_25B1840CC(uint64_t a1, char a2)
{
  return sub_25B1840F8(a1, a2, type metadata accessor for ReplicatorMessage.Handshake.Response, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25B162340);
}

uint64_t sub_25B1840F8(uint64_t a1, char a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = a2 & 1;
  uint64_t v7 = *(void *)(a3(0) - 8);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a4(a1, v6, v8, v9);
}

uint64_t sub_25B184194()
{
  uint64_t v1 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_25B116D08(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  uint64_t v5 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  if (*(void *)(v0 + v3 + *(int *)(v1 + 20) + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v6 + 120);
  if (v7 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v6 + 112), v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

void sub_25B184320()
{
}

void sub_25B184344(uint64_t (*a1)(void), const char *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = *(void *)(a1(0) - 8);
  sub_25B162584(*(void **)(v3 + 16), *(unsigned char *)(v3 + 24), *(void **)(v3 + 32), v3 + ((*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a2, a3);
}

uint64_t sub_25B1843CC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t objectdestroy_1443Tm()
{
  uint64_t v1 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  if (*(void *)(v0 + v3 + *(int *)(v1 + 20) + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v6 + 120);
  if (v7 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v6 + 112), v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_25B18456C(uint64_t a1)
{
  return sub_25B184598(a1, type metadata accessor for ReplicatorMessage.Handshake.Response, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_25B15CDD0);
}

uint64_t sub_25B184598(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a3(a1, v7, v3 + v6, v8);
}

uint64_t sub_25B184650()
{
  return objectdestroy_134Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EED8]);
}

void sub_25B18467C()
{
  sub_25B1667DC(v0);
}

uint64_t sub_25B184698@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25B15F934(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_25B1846B4()
{
  uint64_t v1 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v6 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v7 = v3 + v4 + v6;
  uint64_t v20 = *(void *)(*((void *)v5 - 1) + 64);
  swift_release();
  uint64_t v8 = v0 + v3;
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  if (*(void *)(v8 + *(int *)(v1 + 20) + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = v7 & ~v6;
  uint64_t v11 = v8 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v11 + 120);
  if (v12 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v11 + 112), v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v0 + v21;
  v10(v0 + v21, v9);
  uint64_t v14 = v0 + v21 + v5[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v15 = *(void *)(v14 + 120);
  if (v15 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v14 + 112), v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v13 + v5[6];
  uint64_t v17 = sub_25B290000();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
  v18(v16, v17);
  v18(v13 + v5[7], v17);
  if (*(void *)(v13 + v5[8] + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  v18(v13 + v5[9], v17);
  return MEMORY[0x270FA0238](v0, v21 + v20, v2 | v6 | 7);
}

uint64_t sub_25B1849B8(void *a1, char a2)
{
  int v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for ReplicatorMessage.Handshake.Response(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for PairingRelationship() - 8);
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return sub_25B15FA4C(a1, v4, v9, v2 + v6, v10);
}

uint64_t sub_25B184AA4()
{
  return sub_25B185A70(type metadata accessor for ReplicatorMessage.Handshake.Complete, (uint64_t (*)(void))type metadata accessor for PairingRelationship, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_25B1602E8);
}

uint64_t sub_25B184AE4()
{
  return objectdestroy_124Tm(MEMORY[0x263F8EEA0], 80);
}

uint64_t sub_25B184B04()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 33, 7);
}

void sub_25B184B3C()
{
  sub_25B167FD4(*(void (**)(void *, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_25B184B48(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_25B184B7C()
{
  return objectdestroy_124Tm(MEMORY[0x263F8EEA0], 80);
}

uint64_t sub_25B184B98()
{
  uint64_t v1 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v6 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v7 = v3 + v4 + v6;
  uint64_t v20 = *(void *)(*((void *)v5 - 1) + 64);
  sub_25B116D08(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  uint64_t v8 = v0 + v3;
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  if (*(void *)(v8 + *(int *)(v1 + 20) + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = v7 & ~v6;
  uint64_t v11 = v8 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v11 + 120);
  if (v12 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v11 + 112), v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v0 + v21;
  v10(v0 + v21, v9);
  uint64_t v14 = v0 + v21 + v5[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v15 = *(void *)(v14 + 120);
  if (v15 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v14 + 112), v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v13 + v5[6];
  uint64_t v17 = sub_25B290000();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
  v18(v16, v17);
  v18(v13 + v5[7], v17);
  if (*(void *)(v13 + v5[8] + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  v18(v13 + v5[9], v17);
  return MEMORY[0x270FA0238](v0, v21 + v20, v2 | v6 | 7);
}

void sub_25B184EA8()
{
  uint64_t v1 = *(void *)(type metadata accessor for ReplicatorMessage.Handshake.Response(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for PairingRelationship() - 8);
  uint64_t v5 = *(void **)(v0 + 16);
  char v6 = *(unsigned char *)(v0 + 24);
  uint64_t v7 = *(void **)(v0 + 32);
  uint64_t v8 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  sub_25B15FD64(v5, v6, v7, v0 + v2, v8);
}

uint64_t sub_25B184F80()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B184F90()
{
  return sub_25B166534(v0);
}

uint64_t sub_25B184F98()
{
  uint64_t v1 = *(void *)(type metadata accessor for Replicator.Session(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v6 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v17 = *(void *)(*((void *)v5 - 1) + 64);
  swift_release();
  uint64_t v8 = sub_25B290080();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v0 + v3, v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = v0 + v7;
  v9(v0 + v7, v8);
  uint64_t v11 = v0 + v7 + v5[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v11 + 120);
  if (v12 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v11 + 112), v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v10 + v5[6];
  uint64_t v14 = sub_25B290000();
  unint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  v15(v13, v14);
  v15(v10 + v5[7], v14);
  if (*(void *)(v10 + v5[8] + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  v15(v10 + v5[9], v14);
  swift_release();
  return MEMORY[0x270FA0238](v0, ((v17 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | v6 | 7);
}

uint64_t sub_25B185230(void *a1, char a2)
{
  int v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for Replicator.Session(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for PairingRelationship() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v2 + 16);
  uint64_t v11 = v2 + v9;
  unint64_t v12 = (uint64_t *)(v2 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  return sub_25B166908(a1, v4, v10, v2 + v6, v11, v13, v14);
}

uint64_t sub_25B185348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Record.ID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B1853AC()
{
  uint64_t v1 = *(void *)(type metadata accessor for Replicator.Session(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v6 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v17 = *(void *)(*((void *)v5 - 1) + 64);
  sub_25B116D08(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  uint64_t v8 = sub_25B290080();
  unint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v0 + v3, v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = v0 + v7;
  v9(v0 + v7, v8);
  uint64_t v11 = v0 + v7 + v5[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v11 + 120);
  if (v12 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v11 + 112), v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v10 + v5[6];
  uint64_t v14 = sub_25B290000();
  unint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  v15(v13, v14);
  v15(v10 + v5[7], v14);
  if (*(void *)(v10 + v5[8] + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  v15(v10 + v5[9], v14);
  swift_release();
  return MEMORY[0x270FA0238](v0, ((v17 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | v6 | 7);
}

uint64_t sub_25B185650()
{
  uint64_t v1 = *(void *)(type metadata accessor for Replicator.Session(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for PairingRelationship() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void **)(v0 + 16);
  char v7 = *(unsigned char *)(v0 + 24);
  uint64_t v8 = *(void **)(v0 + 32);
  uint64_t v9 = v0 + v5;
  uint64_t v10 = v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(uint64_t (**)(void))v10;
  unint64_t v12 = *(NSObject **)(v10 + 8);
  return sub_25B166C44(v6, v7, v8, v0 + v2, v9, v11, v12);
}

uint64_t sub_25B185758()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

BOOL sub_25B185768(uint64_t a1)
{
  return sub_25B167570(a1, *(void *)(v1 + 16));
}

uint64_t objectdestroy_1476Tm()
{
  uint64_t v1 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  unint64_t v5 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v6 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v18 = *(void *)(*((void *)v5 - 1) + 64);
  swift_release();
  uint64_t v8 = v0 + v3;
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  if (*(void *)(v8 + *(int *)(v1 + 20) + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v0 + v7;
  v10(v0 + v7, v9);
  uint64_t v12 = v0 + v7 + v5[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v13 = *(void *)(v12 + 120);
  if (v13 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v12 + 112), v13);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v11 + v5[6];
  uint64_t v15 = sub_25B290000();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  v16(v14, v15);
  v16(v11 + v5[7], v15);
  if (*(void *)(v11 + v5[8] + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  v16(v11 + v5[9], v15);
  return MEMORY[0x270FA0238](v0, v7 + v18, v2 | v6 | 7);
}

uint64_t sub_25B185A30()
{
  return sub_25B185A70(type metadata accessor for ReplicatorMessage.Handshake.Complete, (uint64_t (*)(void))type metadata accessor for PairingRelationship, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_25B15495C);
}

uint64_t sub_25B185A70(uint64_t (*a1)(void), uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(a2(0) - 8);
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = v3 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a3(v9, v3 + v6, v10);
}

uint64_t sub_25B185B64(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B185BC8()
{
  return sub_25B168108();
}

uint64_t sub_25B185BD0(uint64_t a1, unint64_t a2)
{
  return sub_25B16D7C8(a1, a2, v2);
}

void sub_25B185BDC(uint64_t a1, uint64_t a2)
{
  sub_25B16D8A0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t objectdestroy_1542Tm()
{
  swift_release();
  unint64_t v1 = *(void *)(v0 + 32);
  if (v1 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v0 + 24), v1);
  }
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25B185C3C()
{
  return sub_25B16DAF8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_25B185C48()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B185C58(uint64_t a1, uint64_t a2)
{
  return sub_25B16F20C(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_25B185C64(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t))
{
  unint64_t v28 = a4;
  BOOL v23 = (unint64_t *)result;
  uint64_t v24 = 0;
  int64_t v5 = 0;
  uint64_t v25 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v26 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v26) {
      return sub_25B1A2DD0(v23, a2, v24, a3);
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v5;
    if (!v19)
    {
      int64_t v5 = v18 + 1;
      if (v18 + 1 >= v26) {
        return sub_25B1A2DD0(v23, a2, v24, a3);
      }
      unint64_t v19 = *(void *)(v25 + 8 * v5);
      if (!v19)
      {
        int64_t v5 = v18 + 2;
        if (v18 + 2 >= v26) {
          return sub_25B1A2DD0(v23, a2, v24, a3);
        }
        unint64_t v19 = *(void *)(v25 + 8 * v5);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v19 - 1) & v19;
    unint64_t v10 = __clz(__rbit64(v19)) + (v5 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(a3 + 56);
    uint64_t v12 = (void *)(*(void *)(a3 + 48) + 32 * v10);
    uint64_t v13 = v12[1];
    uint64_t v14 = v12[2];
    uint64_t v15 = v12[3];
    v27[0] = *v12;
    v27[1] = v13;
    void v27[2] = v14;
    void v27[3] = v15;
    uint64_t v16 = *(void *)(v11 + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    char v17 = v28(v27, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = swift_release();
    if (v17)
    {
      *(unint64_t *)((char *)v23 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
        return sub_25B1A2DD0(v23, a2, v24, a3);
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v26) {
    return sub_25B1A2DD0(v23, a2, v24, a3);
  }
  unint64_t v19 = *(void *)(v25 + 8 * v20);
  if (v19)
  {
    int64_t v5 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v5 >= v26) {
      return sub_25B1A2DD0(v23, a2, v24, a3);
    }
    unint64_t v19 = *(void *)(v25 + 8 * v5);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_25B185E8C(uint64_t isStackAllocationSafe, uint64_t (*a2)(void *, uint64_t), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_25B185C64((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_25B185C64((uint64_t)v11, v8, v6, a2);
    MEMORY[0x261160890](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_25B186004()
{
  uint64_t v1 = type metadata accessor for Message();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v9 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v0 + v3, v4);
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B10DFF0(*(void *)(v0 + v3 + *(int *)(v1 + 36)), *(void *)(v0 + v3 + *(int *)(v1 + 36) + 8));
  return MEMORY[0x270FA0238](v0, v3 + v9, v2 | 7);
}

uint64_t sub_25B18619C()
{
  return sub_25B1861C8((uint64_t (*)(void))type metadata accessor for Message, sub_25B13A4C8);
}

uint64_t sub_25B1861C8(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4, v5);
}

uint64_t sub_25B186248()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B186258()
{
  return objectdestroy_34Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0], 32);
}

void sub_25B186288(void *a1)
{
  sub_25B146DF0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25B186290()
{
  return objectdestroy_134Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EED8]);
}

uint64_t sub_25B1862BC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25B1862C8(uint64_t a1, uint64_t a2)
{
  long long v73 = (uint64_t *)a2;
  uint64_t v71 = a1;
  uint64_t v3 = type metadata accessor for Record.ID(0);
  uint64_t v62 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (uint8_t **)((char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PairingRelationship();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v65 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v70 = (uint64_t)&v60 - v13;
  uint64_t v14 = sub_25B290410();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  char v17 = (uint8_t **)((char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v18 = *(void **)(v2 + 232);
  *char v17 = v18;
  unint64_t v19 = *(void (**)(void))(v15 + 104);
  unsigned int v68 = *MEMORY[0x263F8F0E0];
  uint64_t v69 = v15 + 104;
  uint64_t v67 = v19;
  v19(v17);
  id v66 = v18;
  uint64_t v20 = sub_25B290440();
  uint64_t v21 = *(void (**)(void *, uint64_t))(v15 + 8);
  v21(v17, v14);
  if ((v20 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v64 = (uint64_t (*)(void *, uint64_t))v21;
  uint64_t v72 = v2;
  swift_beginAccess();
  uint64_t v63 = v2 + 192;
  sub_25B10FF48(v2 + 192, (uint64_t)v75);
  uint64_t v22 = v76;
  uint64_t v23 = v77;
  __swift_project_boxed_opaque_existential_1(v75, v76);
  MetadataStoring.pairingRelationship(remoteDeviceID:)(v71, (uint64_t)v73, v22, *(void *)(v23 + 8), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_25B116DE0((uint64_t)v8, &qword_26A4D9610);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  }
  uint64_t v20 = v70;
  sub_25B18095C((uint64_t)v8, v70, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  if (qword_26A4D98C0 != -1) {
    goto LABEL_20;
  }
LABEL_5:
  uint64_t v25 = sub_25B290190();
  __swift_project_value_buffer(v25, (uint64_t)qword_26A4EB150);
  uint64_t v26 = v65;
  sub_25B1806D0(v20, v65, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  int64_t v27 = sub_25B290160();
  os_log_type_t v28 = sub_25B2908A0();
  int v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v30 = swift_slowAlloc();
    LODWORD(v71) = v29;
    uint64_t v31 = (uint8_t *)v30;
    long long v73 = (uint64_t *)swift_slowAlloc();
    v75[0] = (uint64_t)v73;
    uint64_t v61 = v31;
    *(_DWORD *)uint64_t v31 = 136446210;
    uint64_t v60 = v31 + 4;
    sub_25B290080();
    sub_25B1875E0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
    uint64_t v32 = sub_25B290DB0();
    uint64_t v74 = sub_25B288E98(v32, v33, v75);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B180A5C(v26, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v34 = v61;
    _os_log_impl(&dword_25B107000, v27, (os_log_type_t)v71, "Relationship has become unavailable: %{public}s", v61, 0xCu);
    uint64_t v35 = (uint64_t)v73;
    swift_arrayDestroy();
    MEMORY[0x261160890](v35, -1, -1);
    MEMORY[0x261160890](v34, -1, -1);
  }
  else
  {
    sub_25B180A5C(v26, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  }

  uint64_t v37 = v66;
  uint64_t v36 = (void (*)(void *, void, uint64_t))v67;
  *char v17 = v66;
  v36(v17, v68, v14);
  id v38 = v37;
  LOBYTE(v37) = sub_25B290440();
  uint64_t result = v64(v17, v14);
  if (v37)
  {
    uint64_t v39 = v72;
    uint64_t v40 = sub_25B170C08(v20);
    sub_25B10FF48(v63, (uint64_t)v75);
    uint64_t v41 = v76;
    uint64_t v42 = v77;
    __swift_project_boxed_opaque_existential_1(v75, v76);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 + 16) + 112))(v40, v41);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
    uint64_t v43 = *(void *)(v40 + 16);
    if (v43)
    {
      uint64_t v44 = v62;
      unint64_t v45 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      uint64_t v71 = v40;
      uint64_t v46 = v40 + v45;
      long long v73 = (uint64_t *)(v39 + 240);
      swift_beginAccess();
      uint64_t v47 = *(void *)(v44 + 72);
      do
      {
        sub_25B1806D0(v46, (uint64_t)v5, type metadata accessor for Record.ID);
        uint64_t v48 = *v73;
        if (*(void *)(*v73 + 16))
        {
          uint64_t v49 = v5[4];
          uint64_t v50 = v5[5];
          uint64_t v51 = v5[2];
          uint64_t v52 = v5[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v53 = sub_25B18A768(v51, v52, v49, v50);
          if (v54)
          {
            uint64_t v55 = *(void *)(*(void *)(v48 + 56) + 8 * v53);
            swift_retain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v74 = v39;
            if (MEMORY[0x261160990](v55 + 16))
            {
              uint64_t v56 = *(void *)(v55 + 24);
              uint64_t ObjectType = swift_getObjectType();
              uint64_t v58 = *(void (**)(uint64_t *, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v56 + 40);
              uint64_t v59 = type metadata accessor for Replicator();
              v58(&v74, v5, v59, &protocol witness table for Replicator, ObjectType, v56);
              uint64_t v39 = v72;
              swift_release();
              swift_unknownObjectRelease();
            }
            else
            {
              swift_release();
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        sub_25B180A5C((uint64_t)v5, type metadata accessor for Record.ID);
        v46 += v47;
        --v43;
      }
      while (v43);
    }
    swift_bridgeObjectRelease();
    return sub_25B180A5C(v70, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B186A8C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a3 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a3 + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a3 + 64);
  uint64_t v34 = (uint64_t *)(a4 + 648);
  uint64_t result = swift_beginAccess();
  uint64_t v30 = 0;
  int64_t v8 = 0;
  int64_t v33 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_22:
    uint64_t v14 = *v34;
    if (*(void *)(*v34 + 16))
    {
      uint64_t v15 = *(void *)(a3 + 56) + 48 * v10;
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v15 + 24);
      sub_25B291210();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_25B290630();
      uint64_t v18 = sub_25B291260();
      uint64_t v19 = -1 << *(unsigned char *)(v14 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v21 = *(void *)(v14 + 48);
      uint64_t v22 = (void *)(v21 + 16 * v20);
      BOOL v23 = *v22 == v16 && v22[1] == v17;
      if (v23 || (sub_25B290FB0() & 1) != 0)
      {
LABEL_36:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        if (__OFADD__(v30++, 1))
        {
          __break(1u);
          return sub_25B1A2A84(a1, a2, v30, a3);
        }
      }
      else
      {
        uint64_t v24 = ~v19;
        while (1)
        {
          unint64_t v20 = (v20 + 1) & v24;
          if (((*(void *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
            break;
          }
          uint64_t v25 = (void *)(v21 + 16 * v20);
          BOOL v26 = *v25 == v16 && v25[1] == v17;
          if (v26 || (sub_25B290FB0() & 1) != 0) {
            goto LABEL_36;
          }
        }
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t result = swift_bridgeObjectRelease();
      }
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v11 >= v33) {
    return sub_25B1A2A84(a1, a2, v30, a3);
  }
  unint64_t v12 = *(void *)(v32 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v33) {
    return sub_25B1A2A84(a1, a2, v30, a3);
  }
  unint64_t v12 = *(void *)(v32 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v33) {
    return sub_25B1A2A84(a1, a2, v30, a3);
  }
  unint64_t v12 = *(void *)(v32 + 8 * v8);
  if (v12)
  {
LABEL_21:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v33) {
    return sub_25B1A2A84(a1, a2, v30, a3);
  }
  unint64_t v12 = *(void *)(v32 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v33) {
      return sub_25B1A2A84(a1, a2, v30, a3);
    }
    unint64_t v12 = *(void *)(v32 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25B186DF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = v3;
  v17[1] = *MEMORY[0x263EF8340];
  char v8 = *(unsigned char *)(a1 + 32);
  unsigned int v9 = v8 & 0x3F;
  unint64_t v10 = (unint64_t)((1 << v8) + 63) >> 6;
  size_t v11 = 8 * v10;
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v9 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v17 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v11);
    swift_retain();
    uint64_t v13 = v5;
    uint64_t v14 = a3((char *)v17 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v10, a1, a2);
    swift_release();
    if (v13) {
      swift_willThrow();
    }
    swift_release_n();
  }
  else
  {
    uint64_t v15 = (void *)swift_slowAlloc();
    bzero(v15, v11);
    swift_retain();
    uint64_t v14 = a3((char *)v15, v10, a1, a2);
    swift_release();
    MEMORY[0x261160890](v15, -1, -1);
    swift_release_n();
  }
  return v14;
}

uint64_t sub_25B186FB8()
{
  return objectdestroy_34Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0], 41);
}

uint64_t objectdestroy_34Tm(void (*a1)(void), void (*a2)(void), uint64_t a3)
{
  a1(*(void *)(v3 + 16));
  a2(*(void *)(v3 + 24));
  return MEMORY[0x270FA0238](v3, a3, 7);
}

void sub_25B18704C(void *a1)
{
  sub_25B146004(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_25B18705C()
{
  return objectdestroy_134Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_134Tm(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 32));
  return MEMORY[0x270FA0238](v2, 40, 7);
}

uint64_t sub_25B1870E0(uint64_t a1, uint64_t a2)
{
  return sub_25B16D364(a1, a2, *(char **)(v2 + 16)) & 1;
}

uint64_t sub_25B187100()
{
  return sub_25B27CA10() & 1;
}

uint64_t sub_25B187120(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B187188()
{
  uint64_t v1 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  uint64_t v7 = v0 + v3 + v1[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)(v7 + 120);
  if (v8 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v7 + 112), v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v5 + v1[6];
  uint64_t v10 = sub_25B290000();
  size_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  v11(v5 + v1[7], v10);
  if (*(void *)(v5 + v1[8] + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  v11(v5 + v1[9], v10);
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_25B18736C(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for PairingRelationship() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_25B168048(a1, a2, v6, v7);
}

uint64_t sub_25B1873F0(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, a2 & 1);
}

uint64_t sub_25B18741C()
{
  return objectdestroy_124Tm(MEMORY[0x263F8EEA0], 80);
}

uint64_t objectdestroy_124Tm(void (*a1)(void), uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  a1(*(void *)(v2 + 48));
  return MEMORY[0x270FA0238](v2, a2, 7);
}

uint64_t sub_25B18749C(uint64_t (*a1)(uint64_t))
{
  long long v3 = *(_OWORD *)(v1 + 40);
  v9[0] = *(_OWORD *)(v1 + 24);
  v9[1] = v3;
  void v9[2] = *(_OWORD *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 72);
  long long v8 = xmmword_25B293270;
  uint64_t v6 = 0;
  char v7 = 0;
  uint64_t v4 = sub_25B145D20(v9, (uint64_t *)&v8, &v6);
  return a1(v4);
}

uint64_t sub_25B187524(uint64_t a1, uint64_t a2)
{
  return sub_25B1712CC(a1, a2);
}

uint64_t sub_25B18752C(uint64_t a1)
{
  return sub_25B170B7C(a1);
}

uint64_t sub_25B187534()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_25B18756C(uint64_t a1)
{
}

uint64_t sub_25B187574(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_25B1875D8(uint64_t a1)
{
}

uint64_t sub_25B1875E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B187628(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for Replicator.HandshakePrerequisiteError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B187728);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Replicator.HandshakePrerequisiteError()
{
  return &type metadata for Replicator.HandshakePrerequisiteError;
}

unint64_t sub_25B187764()
{
  unint64_t result = qword_26A4DA750;
  if (!qword_26A4DA750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA750);
  }
  return result;
}

uint64_t sub_25B1877B8@<X0>(_OWORD *a1@<X8>)
{
  return sub_25B17C908(a1);
}

void sub_25B1877F8(unsigned char *a1@<X8>)
{
}

uint64_t sub_25B187AB4@<X0>(char *a1@<X8>)
{
  return sub_25B17E7E8(a1);
}

uint64_t sub_25B187B60@<X0>(void *a1@<X8>)
{
  return sub_25B17C978(a1);
}

uint64_t sub_25B187B78()
{
  return sub_25B17C930();
}

uint64_t sub_25B187B90()
{
  return sub_25B17C604();
}

uint64_t sub_25B187BA8@<X0>(uint64_t *a1@<X8>)
{
  return sub_25B17C5E8(a1);
}

unint64_t sub_25B187BC8@<X0>(unint64_t *a1@<X8>)
{
  return sub_25B17CB5C(a1);
}

uint64_t sub_25B187BE0@<X0>(uint64_t *a1@<X8>)
{
  return sub_25B17C994(a1);
}

uint64_t sub_25B187BF8@<X0>(uint64_t a1@<X8>)
{
  return sub_25B17C634(a1);
}

uint64_t static DeviceDescriptor.localDeviceName.getter()
{
  uint64_t v0 = sub_25B18A4FC();
  if (v1) {
    return v0;
  }
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB0]), sel_init);
  id v4 = objc_msgSend(v3, sel_hostName);
  uint64_t v2 = sub_25B2905C0();

  return v2;
}

uint64_t static DeviceDescriptor.localMarketingName.getter()
{
  return sub_25B18A4FC();
}

uint64_t static DeviceDescriptor.localProductType.getter()
{
  return sub_25B18A4FC();
}

uint64_t DeviceDescriptor.init(id:name:protocolVersion:deviceType:screenDescriptor:zones:messageTypes:idsIdentityBlob:marketingName:productType:personaID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11, unint64_t a12, long long a13, long long a14, long long a15)
{
  uint64_t v16 = a4;
  *(void *)&long long v73 = a1;
  uint64_t v17 = a11;
  uint64_t v81 = a5[1];
  uint64_t v82 = *a5;
  char v80 = *a6;
  uint64_t v78 = a7[1];
  uint64_t v79 = *a7;
  uint64_t v76 = a7[3];
  uint64_t v77 = a7[2];
  char v75 = *((unsigned char *)a7 + 32);
  char v71 = *((unsigned char *)a7 + 33);
  char v118 = v71;
  uint64_t v18 = *(void *)(a8 + 16);
  *((void *)&v73 + 1) = a2;
  if (!v18)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B1142EC(a11, a12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v20 = (void *)MEMORY[0x263F8EE80];
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(a10 + 16);
    if (!v41)
    {
      swift_bridgeObjectRetain();
      uint64_t v63 = v20;
      uint64_t v43 = (void *)MEMORY[0x263F8EE80];
LABEL_35:
      swift_bridgeObjectRelease();
      long long v88 = v73;
      *(void *)&long long v89 = a3;
      *((void *)&v89 + 1) = v16;
      *(void *)&long long v90 = v82;
      *((void *)&v90 + 1) = v81;
      LOBYTE(v91) = v80;
      *((void *)&v91 + 1) = v79;
      *(void *)&long long v92 = v78;
      *((void *)&v92 + 1) = v77;
      *(void *)&long long v93 = v76;
      BYTE8(v93) = v75;
      BYTE9(v93) = v71;
      *(void *)&long long v94 = v63;
      *((void *)&v94 + 1) = v43;
      *(void *)&long long v95 = v17;
      *((void *)&v95 + 1) = a12;
      long long v96 = a13;
      long long v97 = a14;
      long long v98 = a15;
      swift_bridgeObjectRetain();
      sub_25B1172F8((uint64_t)&v88);
      sub_25B111FF0(v17, a12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v64 = v97;
      a9[8] = v96;
      a9[9] = v64;
      a9[10] = v98;
      long long v65 = v93;
      a9[4] = v92;
      a9[5] = v65;
      long long v66 = v95;
      a9[6] = v94;
      a9[7] = v66;
      long long v67 = v89;
      *a9 = v88;
      a9[1] = v67;
      long long v68 = v91;
      a9[2] = v90;
      a9[3] = v68;
      long long v99 = v73;
      uint64_t v100 = a3;
      uint64_t v101 = v16;
      uint64_t v102 = v82;
      uint64_t v103 = v81;
      char v104 = v80;
      uint64_t v105 = v79;
      uint64_t v106 = v78;
      uint64_t v107 = v77;
      uint64_t v108 = v76;
      char v109 = v75;
      char v110 = v118;
      uint64_t v111 = v63;
      unint64_t v112 = v43;
      uint64_t v113 = v17;
      unint64_t v114 = a12;
      long long v115 = a13;
      long long v116 = a14;
      long long v117 = a15;
      return sub_25B11DEBC((uint64_t)&v99);
    }
    uint64_t v70 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v42 = (uint64_t *)(a10 + 72);
    uint64_t v43 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      uint64_t v85 = v41;
      uint64_t v46 = *(v42 - 5);
      uint64_t v45 = *(v42 - 4);
      uint64_t v48 = *(v42 - 3);
      uint64_t v47 = *(v42 - 2);
      uint64_t v49 = *(v42 - 1);
      uint64_t v87 = *v42;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v99 = v43;
      unint64_t v52 = sub_25B18A6AC(v46, v45, v48, v47);
      uint64_t v53 = v43[2];
      BOOL v54 = (v51 & 1) == 0;
      uint64_t v55 = v53 + v54;
      if (__OFADD__(v53, v54)) {
        goto LABEL_37;
      }
      char v56 = v51;
      if (v43[3] >= v55)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v43 = (void *)v99;
          if ((v51 & 1) == 0) {
            goto LABEL_29;
          }
        }
        else
        {
          sub_25B1929F0(&qword_26A4D9BE0);
          uint64_t v43 = (void *)v99;
          if ((v56 & 1) == 0) {
            goto LABEL_29;
          }
        }
      }
      else
      {
        sub_25B18C134(v55, isUniquelyReferenced_nonNull_native);
        unint64_t v57 = sub_25B18A6AC(v46, v45, v48, v47);
        if ((v56 & 1) != (v58 & 1)) {
          goto LABEL_41;
        }
        unint64_t v52 = v57;
        uint64_t v43 = (void *)v99;
        if ((v56 & 1) == 0)
        {
LABEL_29:
          v43[(v52 >> 6) + 8] |= 1 << v52;
          uint64_t v59 = (uint64_t *)(v43[6] + 32 * v52);
          *uint64_t v59 = v46;
          v59[1] = v45;
          v59[2] = v48;
          v59[3] = v47;
          uint64_t v60 = (uint64_t *)(v43[7] + 48 * v52);
          uint64_t *v60 = v46;
          v60[1] = v45;
          v60[2] = v48;
          v60[3] = v47;
          v60[4] = v49;
          v60[5] = v87;
          uint64_t v61 = v43[2];
          BOOL v39 = __OFADD__(v61, 1);
          uint64_t v62 = v61 + 1;
          if (v39) {
            goto LABEL_39;
          }
          v43[2] = v62;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_21;
        }
      }
      uint64_t v44 = (uint64_t *)(v43[7] + 48 * v52);
      *uint64_t v44 = v46;
      v44[1] = v45;
      v44[2] = v48;
      v44[3] = v47;
      v44[4] = v49;
      v44[5] = v87;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_21:
      v42 += 6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = v85 - 1;
      if (v85 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = a4;
        uint64_t v17 = a11;
        uint64_t v63 = v70;
        goto LABEL_35;
      }
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25B1142EC(a11, a12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = (uint64_t *)(a8 + 72);
  unint64_t v20 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    uint64_t v84 = v18;
    uint64_t v23 = *(v19 - 5);
    uint64_t v22 = *(v19 - 4);
    uint64_t v25 = *(v19 - 3);
    uint64_t v24 = *(v19 - 2);
    uint64_t v26 = *(v19 - 1);
    uint64_t v86 = *v19;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v99 = v20;
    unint64_t v29 = sub_25B18A768(v23, v22, v25, v24);
    uint64_t v30 = v20[2];
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31)) {
      break;
    }
    char v33 = v28;
    if (v20[3] >= v32)
    {
      if (v27)
      {
        unint64_t v20 = (void *)v99;
        if ((v28 & 1) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_25B1929F0((uint64_t *)&unk_26A4D9C10);
        unint64_t v20 = (void *)v99;
        if ((v33 & 1) == 0) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_25B18BDC0(v32, v27);
      unint64_t v34 = sub_25B18A768(v23, v22, v25, v24);
      if ((v33 & 1) != (v35 & 1)) {
        goto LABEL_40;
      }
      unint64_t v29 = v34;
      unint64_t v20 = (void *)v99;
      if ((v33 & 1) == 0)
      {
LABEL_12:
        v20[(v29 >> 6) + 8] |= 1 << v29;
        uint64_t v36 = (uint64_t *)(v20[6] + 32 * v29);
        uint64_t *v36 = v23;
        v36[1] = v22;
        v36[2] = v25;
        uint64_t v36[3] = v24;
        uint64_t v37 = (uint64_t *)(v20[7] + 48 * v29);
        uint64_t *v37 = v23;
        v37[1] = v22;
        v37[2] = v25;
        void v37[3] = v24;
        v37[4] = v26;
        v37[5] = v86;
        uint64_t v38 = v20[2];
        BOOL v39 = __OFADD__(v38, 1);
        uint64_t v40 = v38 + 1;
        if (v39) {
          goto LABEL_38;
        }
        uint64_t v20[2] = v40;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    uint64_t v21 = (uint64_t *)(v20[7] + 48 * v29);
    *uint64_t v21 = v23;
    v21[1] = v22;
    _OWORD v21[2] = v25;
    v21[3] = v24;
    v21[4] = v26;
    v21[5] = v86;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_4:
    v19 += 6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = v84 - 1;
    if (v84 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v16 = a4;
      uint64_t v17 = a11;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  sub_25B291190();
  __break(1u);
LABEL_41:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t DeviceDescriptor.handshakeDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 160);
  uint64_t v4 = *(void *)(v1 + 168);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DeviceDescriptor.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceDescriptor.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DeviceDescriptor.id.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDescriptor.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceDescriptor.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*DeviceDescriptor.name.modify())()
{
  return nullsub_1;
}

__n128 DeviceDescriptor.protocolVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = v1[2];
  *a1 = result;
  return result;
}

__n128 DeviceDescriptor.protocolVersion.setter(__n128 *a1)
{
  __n128 result = *a1;
  v1[2] = *a1;
  return result;
}

uint64_t (*DeviceDescriptor.protocolVersion.modify())()
{
  return nullsub_1;
}

void DeviceDescriptor.deviceType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

unsigned char *DeviceDescriptor.deviceType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*DeviceDescriptor.deviceType.modify())()
{
  return nullsub_1;
}

__n128 DeviceDescriptor.screenDescriptor.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 88);
  char v3 = *(unsigned char *)(v1 + 89);
  __n128 result = *(__n128 *)(v1 + 56);
  long long v5 = *(_OWORD *)(v1 + 72);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 33) = v3;
  return result;
}

__n128 DeviceDescriptor.screenDescriptor.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 33);
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 72) = v5;
  *(unsigned char *)(v1 + 88) = v2;
  *(unsigned char *)(v1 + 89) = v3;
  return result;
}

uint64_t (*DeviceDescriptor.screenDescriptor.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDescriptor.zones.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DeviceDescriptor.zones.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*DeviceDescriptor.zones.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDescriptor.messageTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DeviceDescriptor.messageTypes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*DeviceDescriptor.messageTypes.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDescriptor.idsIdentityBlob.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  sub_25B1142EC(v1, *(void *)(v0 + 120));
  return v1;
}

uint64_t DeviceDescriptor.idsIdentityBlob.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25B111FF0(*(void *)(v2 + 112), *(void *)(v2 + 120));
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return result;
}

uint64_t (*DeviceDescriptor.idsIdentityBlob.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDescriptor.marketingName.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceDescriptor.marketingName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return result;
}

uint64_t (*DeviceDescriptor.marketingName.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDescriptor.productType.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceDescriptor.productType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = a2;
  return result;
}

uint64_t (*DeviceDescriptor.productType.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDescriptor.personaID.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceDescriptor.personaID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = a2;
  return result;
}

uint64_t (*DeviceDescriptor.personaID.modify())()
{
  return nullsub_1;
}

void DeviceDescriptor.connectionType.getter(BOOL *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48) == 4;
}

uint64_t DeviceDescriptor.isPlaceholder.getter()
{
  if (*(void *)(v0 + 16)) {
    BOOL v1 = 0;
  }
  else {
    BOOL v1 = *(void *)(v0 + 24) == 0xE000000000000000;
  }
  if (v1) {
    return 1;
  }
  else {
    return sub_25B290FB0();
  }
}

uint64_t DeviceDescriptor.shortDescription.getter()
{
  return 0;
}

unint64_t sub_25B188AF4(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x6C6F636F746F7270;
      break;
    case 3:
      unint64_t result = 0x7954656369766564;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x73656E6F7ALL;
      break;
    case 6:
      unint64_t result = 0x546567617373656DLL;
      break;
    case 7:
      unint64_t result = 0x746E656449736469;
      break;
    case 8:
      unint64_t result = 0x6E6974656B72616DLL;
      break;
    case 9:
      unint64_t result = 0x54746375646F7270;
      break;
    case 10:
      unint64_t result = 0x49616E6F73726570;
      break;
    case 11:
      unint64_t result = 0x656372756F537369;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25B188C90(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x6C6F636F746F7270;
      break;
    case 3:
      unint64_t result = 0x7954656369766564;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x73656E6F7ALL;
      break;
    case 6:
      unint64_t result = 0x546567617373656DLL;
      break;
    case 7:
      unint64_t result = 0x746E656449736469;
      break;
    case 8:
      unint64_t result = 0x6E6974656B72616DLL;
      break;
    case 9:
      unint64_t result = 0x54746375646F7270;
      break;
    case 10:
      unint64_t result = 0x49616E6F73726570;
      break;
    case 11:
      unint64_t result = 0x656372756F537369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B188E2C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B188E3C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_25B188AF4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_25B188AF4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25B290FB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25B188EC8()
{
  char v1 = *v0;
  sub_25B291210();
  sub_25B188AF4(v1);
  sub_25B290630();
  swift_bridgeObjectRelease();
  return sub_25B291260();
}

uint64_t sub_25B188F2C()
{
  sub_25B188AF4(*v0);
  sub_25B290630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B188F80()
{
  char v1 = *v0;
  sub_25B291210();
  sub_25B188AF4(v1);
  sub_25B290630();
  swift_bridgeObjectRelease();
  return sub_25B291260();
}

uint64_t sub_25B188FE0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B1978E8();
  *a1 = result;
  return result;
}

unint64_t sub_25B189010@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25B188AF4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25B18903C()
{
  return sub_25B188C90(*v0);
}

uint64_t sub_25B189044@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B1978E8();
  *a1 = result;
  return result;
}

void sub_25B18906C(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_25B189078(uint64_t a1)
{
  unint64_t v2 = sub_25B196964();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1890B4(uint64_t a1)
{
  unint64_t v2 = sub_25B196964();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DeviceDescriptor.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v155 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA760);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = &v85.i8[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v153 = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B196964();
  sub_25B291280();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_25B111FF0(0, 0xF000000000000000);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v113 = a1;
  uint64_t v114 = v5;
  char v8 = v155;
  LOBYTE(v115) = 2;
  sub_25B1969B8();
  sub_25B290CC0();
  uint64_t v9 = v7;
  uint64_t v10 = v126;
  unint64_t v11 = v127;
  LOBYTE(v126) = 0;
  uint64_t v12 = sub_25B290CA0();
  unint64_t v15 = v14;
  uint64_t v109 = v12;
  unint64_t v110 = v11;
  LOBYTE(v126) = 1;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_25B290CA0();
  uint64_t v111 = v17;
  uint64_t v106 = v16;
  uint64_t v107 = v10;
  unint64_t v108 = v15;
  LOBYTE(v115) = 3;
  sub_25B196A0C();
  swift_bridgeObjectRetain();
  sub_25B290C80();
  int v18 = v126;
  if (v126 == 6)
  {
    LOBYTE(v126) = 11;
    char v19 = sub_25B290C70();
    if (v19) {
      int v20 = 2;
    }
    else {
      int v20 = 1;
    }
    if (v19 == 2) {
      int v18 = 0;
    }
    else {
      int v18 = v20;
    }
  }
  int v105 = v18;
  LOBYTE(v115) = 4;
  sub_25B196A60();
  sub_25B290C80();
  unint64_t v103 = v127;
  char v104 = v126;
  uint64_t v101 = v129;
  uint64_t v102 = v128;
  int v99 = BYTE1(v130);
  int v100 = v130;
  char v153 = BYTE1(v130);
  LOBYTE(v115) = 7;
  sub_25B196AB4();
  sub_25B290C80();
  uint64_t v21 = (uint64_t)v126;
  LOBYTE(v126) = 8;
  unint64_t v97 = v127;
  uint64_t v98 = v21;
  sub_25B1142EC(v21, v127);
  *(void *)&long long v96 = sub_25B290C60();
  *((void *)&v96 + 1) = v22;
  LOBYTE(v126) = 9;
  swift_bridgeObjectRetain();
  uint64_t v90 = sub_25B290C60();
  LOBYTE(v126) = 10;
  uint64_t v112 = v23;
  swift_bridgeObjectRetain();
  uint64_t v89 = sub_25B290C60();
  uint64_t v25 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A30);
  LOBYTE(v115) = 5;
  sub_25B196D88(&qword_26A4D9A48, (void (*)(void))sub_25B196B08, (void (*)(void))sub_25B196B5C);
  swift_bridgeObjectRetain();
  uint64_t v87 = v9;
  uint64_t v88 = v4;
  sub_25B290C80();
  long long v95 = v126;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9A10);
  LOBYTE(v115) = 6;
  sub_25B196BB0(&qword_26A4D9A28, (void (*)(void))sub_25B196C38, (void (*)(void))sub_25B196C8C);
  sub_25B290C80();
  long long v94 = v126;
  if (v95)
  {
LABEL_25:
    if (v94)
    {
LABEL_39:
      (*(void (**)(__int8 *, uint64_t))(v114 + 8))(v87, v88);
      *(void *)&long long v115 = v109;
      *((void *)&v115 + 1) = v108;
      *(void *)&long long v116 = v106;
      *((void *)&v116 + 1) = v111;
      *(void *)&long long v117 = v107;
      *((void *)&v117 + 1) = v110;
      LOBYTE(v118) = v105;
      *((void *)&v118 + 1) = v104;
      *(void *)&long long v119 = v103;
      *((void *)&v119 + 1) = v102;
      *(void *)&long long v120 = v101;
      BYTE8(v120) = v100;
      BYTE9(v120) = v99;
      char v75 = v94;
      uint64_t v76 = v95;
      *(void *)&long long v121 = v95;
      *((void *)&v121 + 1) = v94;
      unint64_t v77 = v97;
      *(void *)&long long v122 = v98;
      *((void *)&v122 + 1) = v97;
      long long v123 = v96;
      *(void *)&long long v124 = v90;
      *((void *)&v124 + 1) = v112;
      *(void *)&long long v125 = v89;
      *((void *)&v125 + 1) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B1172F8((uint64_t)&v115);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B111FF0(v98, v77);
      unint64_t v78 = v108;
      swift_bridgeObjectRelease();
      uint64_t v79 = v111;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v80 = v124;
      v8[8] = v123;
      v8[9] = v80;
      v8[10] = v125;
      long long v81 = v120;
      v8[4] = v119;
      v8[5] = v81;
      long long v82 = v122;
      v8[6] = v121;
      v8[7] = v82;
      long long v83 = v116;
      _OWORD *v8 = v115;
      v8[1] = v83;
      long long v84 = v118;
      v8[2] = v117;
      v8[3] = v84;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
      uint64_t v126 = (void *)v109;
      unint64_t v127 = v78;
      uint64_t v128 = v106;
      uint64_t v129 = v79;
      uint64_t v130 = v107;
      unint64_t v131 = v110;
      char v132 = v105;
      *(_DWORD *)uint64_t v133 = v154[0];
      *(_DWORD *)&v133[3] = *(_DWORD *)((char *)v154 + 3);
      uint64_t v134 = v104;
      unint64_t v135 = v103;
      uint64_t v136 = v102;
      uint64_t v137 = v101;
      char v138 = v100;
      char v139 = v153;
      __int16 v141 = v152;
      int v140 = v151;
      uint64_t v142 = v76;
      uint64_t v143 = v75;
      uint64_t v144 = v98;
      unint64_t v145 = v77;
      long long v146 = v96;
      uint64_t v147 = v90;
      uint64_t v148 = v112;
      uint64_t v149 = v89;
      uint64_t v150 = v25;
      return sub_25B11DEBC((uint64_t)&v126);
    }
    uint64_t v51 = 0;
    unint64_t v93 = (unint64_t)"Swift/UnsafePointer.swift";
    long long v94 = (void *)MEMORY[0x263F8EE80];
    unint64_t v86 = 0x800000025B29C8A0;
    int64x2_t v85 = vdupq_n_s64(1uLL);
    while (1)
    {
      uint64_t v91 = v51;
      uint64_t v54 = *(void *)((char *)&unk_2708D5380 + v51 + 32);
      uint64_t v55 = *(void *)((char *)&unk_2708D5380 + v51 + 40);
      swift_bridgeObjectRetain_n();
      uint64_t v56 = v86;
      swift_bridgeObjectRetain();
      unint64_t v57 = v94;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v126 = v57;
      uint64_t v58 = v54;
      uint64_t v59 = v54;
      uint64_t v60 = v55;
      unint64_t v62 = sub_25B18A6AC(v59, v55, 0xD000000000000011, v56);
      uint64_t v63 = v57[2];
      BOOL v64 = (v61 & 1) == 0;
      uint64_t v65 = v63 + v64;
      if (__OFADD__(v63, v64)) {
        break;
      }
      char v66 = v61;
      if (v57[3] >= v65)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_25B1929F0(&qword_26A4D9BE0);
        }
      }
      else
      {
        sub_25B18C134(v65, isUniquelyReferenced_nonNull_native);
        unint64_t v67 = sub_25B18A6AC(v58, v60, 0xD000000000000011, v93 | 0x8000000000000000);
        if ((v66 & 1) != (v68 & 1)) {
          goto LABEL_45;
        }
        unint64_t v62 = v67;
      }
      uint64_t v69 = v126;
      long long v94 = v126;
      if (v66)
      {
        uint64_t v52 = v126[7] + 48 * v62;
        *(void *)uint64_t v52 = v58;
        *(void *)(v52 + 8) = v60;
        unint64_t v53 = v93 | 0x8000000000000000;
        *(void *)(v52 + 16) = 0xD000000000000011;
        *(void *)(v52 + 24) = v53;
        *(int64x2_t *)(v52 + 32) = v85;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v126[(v62 >> 6) + 8] |= 1 << v62;
        uint64_t v70 = (uint64_t *)(v69[6] + 32 * v62);
        *uint64_t v70 = v58;
        v70[1] = v60;
        unint64_t v71 = v93 | 0x8000000000000000;
        v70[2] = 0xD000000000000011;
        v70[3] = v71;
        uint64_t v72 = (int64x2_t *)(v69[7] + 48 * v62);
        v72->i64[0] = v58;
        v72->i64[1] = v60;
        v72[1].i64[0] = 0xD000000000000011;
        v72[1].i64[1] = v71;
        v72[2] = vdupq_n_s64(1uLL);
        uint64_t v73 = v69[2];
        BOOL v49 = __OFADD__(v73, 1);
        uint64_t v74 = v73 + 1;
        if (v49) {
          goto LABEL_43;
        }
        v94[2] = v74;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v51 = v91 + 16;
      if (v91 == 48)
      {
        swift_arrayDestroy();
        goto LABEL_39;
      }
    }
  }
  else
  {
    uint64_t v26 = 0;
    long long v95 = (void *)MEMORY[0x263F8EE80];
    unint64_t v93 = (unint64_t)"Swift/UnsafePointer.swift";
    unint64_t v86 = 0x800000025B29C8A0;
    int64x2_t v85 = vdupq_n_s64(1uLL);
    while (1)
    {
      uint64_t v91 = v26;
      uint64_t v30 = *(void *)((char *)&unk_2708D53E0 + v26 + 32);
      uint64_t v29 = *(void *)((char *)&unk_2708D53E0 + v26 + 40);
      swift_bridgeObjectRetain_n();
      uint64_t v31 = v86;
      swift_bridgeObjectRetain();
      uint64_t v32 = v95;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v126 = v32;
      uint64_t v33 = v30;
      uint64_t v34 = v30;
      uint64_t v35 = v29;
      unint64_t v37 = sub_25B18A768(v34, v29, 0xD000000000000011, v31);
      uint64_t v38 = v32[2];
      BOOL v39 = (v36 & 1) == 0;
      uint64_t v40 = v38 + v39;
      if (__OFADD__(v38, v39)) {
        break;
      }
      char v41 = v36;
      if (v32[3] >= v40)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_25B1929F0((uint64_t *)&unk_26A4D9C10);
        }
      }
      else
      {
        sub_25B18BDC0(v40, isUniquelyReferenced_nonNull_native);
        unint64_t v42 = sub_25B18A768(v33, v35, 0xD000000000000011, v93 | 0x8000000000000000);
        if ((v41 & 1) != (v43 & 1)) {
          goto LABEL_44;
        }
        unint64_t v37 = v42;
      }
      uint64_t v44 = v126;
      long long v95 = v126;
      if (v41)
      {
        uint64_t v27 = v126[7] + 48 * v37;
        *(void *)uint64_t v27 = v33;
        *(void *)(v27 + 8) = v35;
        unint64_t v28 = v93 | 0x8000000000000000;
        *(void *)(v27 + 16) = 0xD000000000000011;
        *(void *)(v27 + 24) = v28;
        *(int64x2_t *)(v27 + 32) = v85;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v126[(v37 >> 6) + 8] |= 1 << v37;
        uint64_t v45 = (uint64_t *)(v44[6] + 32 * v37);
        *uint64_t v45 = v33;
        v45[1] = v35;
        unint64_t v46 = v93 | 0x8000000000000000;
        v45[2] = 0xD000000000000011;
        uint64_t v45[3] = v46;
        uint64_t v47 = (int64x2_t *)(v44[7] + 48 * v37);
        v47->i64[0] = v33;
        v47->i64[1] = v35;
        v47[1].i64[0] = 0xD000000000000011;
        v47[1].i64[1] = v46;
        v47[2] = vdupq_n_s64(1uLL);
        uint64_t v48 = v44[2];
        BOOL v49 = __OFADD__(v48, 1);
        uint64_t v50 = v48 + 1;
        if (v49) {
          goto LABEL_42;
        }
        v95[2] = v50;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v26 = v91 + 16;
      if (v91 == 96)
      {
        swift_arrayDestroy();
        goto LABEL_25;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  sub_25B291190();
  __break(1u);
LABEL_45:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t DeviceDescriptor.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA770);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v39 = *(void *)(v1 + 24);
  uint64_t v40 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  unint64_t v37 = *(void *)(v1 + 40);
  uint64_t v38 = v8;
  int v41 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  unint64_t v10 = *(void *)(v1 + 64);
  uint64_t v11 = *(void *)(v1 + 72);
  uint64_t v36 = *(void *)(v1 + 80);
  int v33 = *(unsigned __int8 *)(v1 + 88);
  int v35 = *(unsigned __int8 *)(v1 + 89);
  uint64_t v34 = *(void *)(v1 + 96);
  uint64_t v32 = *(void *)(v1 + 104);
  uint64_t v26 = *(void *)(v1 + 112);
  unint64_t v31 = *(void *)(v1 + 120);
  uint64_t v27 = *(void *)(v1 + 128);
  uint64_t v28 = *(void *)(v1 + 136);
  v24[1] = *(void *)(v1 + 144);
  uint64_t v25 = *(void *)(v1 + 152);
  unint64_t v12 = *(void *)(v1 + 168);
  uint64_t v29 = *(void *)(v1 + 160);
  unint64_t v30 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B196964();
  sub_25B291290();
  LOBYTE(v43) = 0;
  uint64_t v13 = v42;
  sub_25B290D40();
  if (!v13)
  {
    unint64_t v15 = v37;
    uint64_t v14 = v38;
    char v16 = v35;
    uint64_t v17 = v36;
    char v18 = v41;
    LOBYTE(v43) = 1;
    sub_25B290D40();
    uint64_t v43 = v14;
    unint64_t v44 = v15;
    char v48 = 2;
    sub_25B196CE0();
    sub_25B290D60();
    LOBYTE(v43) = v18;
    char v48 = 3;
    sub_25B196D34();
    sub_25B290D60();
    if ((v16 & 1) == 0)
    {
      uint64_t v43 = v9;
      unint64_t v44 = v10;
      uint64_t v45 = v11;
      uint64_t v46 = v17;
      char v47 = v33 & 1;
      char v48 = 4;
      sub_25B197020();
      sub_25B290D60();
    }
    uint64_t v43 = v34;
    char v48 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A30);
    sub_25B196D88((unint64_t *)&unk_26A4D9A38, (void (*)(void))sub_25B196E10, (void (*)(void))sub_25B196E64);
    sub_25B290D60();
    uint64_t v43 = v32;
    char v48 = 6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9A10);
    sub_25B196BB0(&qword_26A4D9A20, (void (*)(void))sub_25B196EB8, (void (*)(void))sub_25B196F0C);
    sub_25B290D60();
    unint64_t v20 = v31;
    if (v31 >> 60 == 15)
    {
      uint64_t v21 = v29;
      unint64_t v22 = v30;
    }
    else
    {
      uint64_t v23 = v26;
      uint64_t v43 = v26;
      unint64_t v44 = v31;
      char v48 = 7;
      sub_25B114300(v26, v31);
      sub_25B196FCC();
      sub_25B290D60();
      uint64_t v21 = v29;
      unint64_t v22 = v30;
      sub_25B111FF0(v23, v20);
    }
    if (v28)
    {
      LOBYTE(v43) = 8;
      sub_25B290D40();
    }
    if (v25)
    {
      LOBYTE(v43) = 9;
      sub_25B290D40();
    }
    LOBYTE(v43) = 11;
    sub_25B290D50();
    uint64_t v43 = v21;
    unint64_t v44 = v22;
    char v48 = 10;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E80);
    sub_25B196F60();
    sub_25B290D60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_25B18A4CC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return DeviceDescriptor.init(from:)(a1, a2);
}

uint64_t sub_25B18A4E4(void *a1)
{
  return DeviceDescriptor.encode(to:)(a1);
}

uint64_t sub_25B18A4FC()
{
  id v0 = objc_allocWithZone(NSString);
  uint64_t v1 = (void *)sub_25B290590();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1);

  uint64_t v3 = MGCopyAnswer();
  if (!v3) {
    return 0;
  }
  if (swift_dynamicCast()) {
    return v5;
  }
  return 0;
}

unint64_t sub_25B18A634(uint64_t a1, uint64_t a2)
{
  sub_25B291210();
  sub_25B290630();
  uint64_t v4 = sub_25B291260();
  return sub_25B18AD3C(a1, a2, v4);
}

unint64_t sub_25B18A6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_25B291210();
  swift_bridgeObjectRetain();
  sub_25B290630();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25B290630();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_25B291260();
  return sub_25B18AE20(a1, a2, a3, a4, v8);
}

unint64_t sub_25B18A768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_25B291210();
  sub_25B290630();
  sub_25B290630();
  uint64_t v8 = sub_25B291260();
  return sub_25B18AE20(a1, a2, a3, a4, v8);
}

unint64_t sub_25B18A804(uint64_t a1)
{
  sub_25B290BA0();
  uint64_t v2 = sub_25B290530();
  return sub_25B18AF20(a1, v2);
}

unint64_t sub_25B18A868(unsigned __int8 a1)
{
  sub_25B291210();
  sub_25B291250();
  uint64_t v2 = sub_25B291260();
  return sub_25B18BAFC(a1, v2);
}

unint64_t sub_25B18A8D0(void *a1)
{
  sub_25B291210();
  Record.ID.hash(into:)();
  uint64_t v2 = sub_25B291260();
  return sub_25B18B0B8(a1, v2);
}

unint64_t sub_25B18A93C(uint64_t a1)
{
  sub_25B290080();
  sub_25B11FEE0(&qword_26A4D9220);
  uint64_t v2 = sub_25B290530();
  return sub_25B18B5A8(a1, v2);
}

unint64_t sub_25B18A9C0(uint64_t a1, uint64_t a2)
{
  sub_25B291210();
  sub_25B291220();
  if (a2) {
    sub_25B290630();
  }
  uint64_t v4 = sub_25B291260();
  return sub_25B18B754(a1, a2, v4);
}

unint64_t sub_25B18AA54(uint64_t a1)
{
  uint64_t v2 = sub_25B290A40();
  return sub_25B18B820(a1, v2);
}

unint64_t sub_25B18AA98(uint64_t a1)
{
  uint64_t v2 = sub_25B291200();
  return sub_25B18B8E8(a1, v2);
}

unint64_t sub_25B18AADC(uint64_t a1)
{
  sub_25B2905C0();
  sub_25B291210();
  sub_25B290630();
  uint64_t v2 = sub_25B291260();
  swift_bridgeObjectRelease();
  return sub_25B18B984(a1, v2);
}

unint64_t sub_25B18AB70(unsigned __int8 a1)
{
  sub_25B291210();
  sub_25B291240();
  uint64_t v2 = sub_25B291260();
  return sub_25B18BAFC(a1, v2);
}

unint64_t sub_25B18ABD8(char a1)
{
  char v1 = a1 & 1;
  sub_25B291210();
  sub_25B291220();
  uint64_t v2 = sub_25B291260();
  return sub_25B18BB9C(v1, v2);
}

unint64_t sub_25B18AC48(uint64_t *a1)
{
  sub_25B291210();
  uint64_t v2 = a1[3];
  swift_bridgeObjectRetain();
  sub_25B290630();
  swift_bridgeObjectRelease();
  sub_25B291230();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
  }
  sub_25B291250();
  sub_25B291250();
  sub_25B291250();
  uint64_t v3 = sub_25B291260();
  return sub_25B18BC58(a1, v3);
}

unint64_t sub_25B18AD3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25B290FB0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25B290FB0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_25B18AE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v13 = ~v7;
    uint64_t v14 = *(void *)(v5 + 48);
    do
    {
      unint64_t v15 = (void *)(v14 + 32 * v8);
      uint64_t v16 = v15[2];
      uint64_t v17 = v15[3];
      BOOL v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_25B290FB0() & 1) != 0)
      {
        BOOL v19 = v16 == a3 && v17 == a4;
        if (v19 || (sub_25B290FB0() & 1) != 0) {
          break;
        }
      }
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_25B18AF20(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_25B290BA0();
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_25B290580();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_25B18B0B8(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_25B290080();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v38 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9880);
  MEMORY[0x270FA5388](v40);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for Record.ID(0);
  MEMORY[0x270FA5388](v44);
  unint64_t v15 = (void (***)(char *, uint64_t, uint64_t))((char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = v2 + 64;
  uint64_t v48 = v2;
  uint64_t v16 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v17 = a2 & ~v16;
  if ((*(void *)(v2 + 64 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
  {
    uint64_t v42 = v10;
    uint64_t v43 = v5;
    uint64_t v18 = *(void *)(v13 + 72);
    uint64_t v45 = ~v16;
    uint64_t v46 = v18;
    uint64_t v19 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    unint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    int v41 = (void (**)(uint64_t, uint64_t))(v6 + 8);
    uint64_t v20 = v40;
    while (1)
    {
      sub_25B1979F4(*(void *)(v48 + 48) + v46 * v17, (uint64_t)v15, type metadata accessor for Record.ID);
      BOOL v21 = *v15 == *a1 && v15[1] == a1[1];
      if (!v21 && (sub_25B290FB0() & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v22 = v15[4];
      uint64_t v23 = v15[5];
      uint64_t v25 = a1[4];
      uint64_t v24 = a1[5];
      if ((v15[2] != a1[2] || v15[3] != a1[3]) && (sub_25B290FB0() & 1) == 0) {
        goto LABEL_5;
      }
      if ((v22 != v25 || v23 != v24) && (sub_25B290FB0() & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v26 = *(int *)(v44 + 24);
      uint64_t v27 = (uint64_t)a1 + v26;
      uint64_t v28 = (uint64_t)&v12[*(int *)(v20 + 48)];
      sub_25B1979F4((uint64_t)v15 + v26, (uint64_t)v12, type metadata accessor for Record.ID.Ownership);
      sub_25B1979F4(v27, v28, type metadata accessor for Record.ID.Ownership);
      uint64_t v29 = *v19;
      uint64_t v30 = v43;
      if ((*v19)(v12, 1, v43) == 1) {
        break;
      }
      uint64_t v31 = (uint64_t)v42;
      sub_25B1979F4((uint64_t)v12, (uint64_t)v42, type metadata accessor for Record.ID.Ownership);
      if (v29((char *)v28, 1, v30) == 1)
      {
        (*v41)(v31, v30);
LABEL_4:
        sub_25B197AC4((uint64_t)v12);
        goto LABEL_5;
      }
      uint64_t v32 = v31;
      int v33 = v38;
      (*v37)(v38, v28, v30);
      int v39 = sub_25B290030();
      uint64_t v34 = *v41;
      (*v41)((uint64_t)v33, v30);
      uint64_t v35 = v32;
      uint64_t v20 = v40;
      v34(v35, v30);
      if (v39)
      {
LABEL_23:
        sub_25B197B24((uint64_t)v12, type metadata accessor for Record.ID.Ownership);
        sub_25B197B24((uint64_t)v15, type metadata accessor for Record.ID);
        return v17;
      }
      sub_25B197B24((uint64_t)v12, type metadata accessor for Record.ID.Ownership);
LABEL_5:
      sub_25B197B24((uint64_t)v15, type metadata accessor for Record.ID);
      unint64_t v17 = (v17 + 1) & v45;
      if (((*(void *)(v47 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
        return v17;
      }
    }
    if (v29((char *)v28, 1, v30) == 1) {
      goto LABEL_23;
    }
    goto LABEL_4;
  }
  return v17;
}

unint64_t sub_25B18B5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_25B11FEE0((unint64_t *)&qword_26A4DA8D0);
      char v15 = sub_25B290580();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_25B18B754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = ~v5;
    uint64_t v10 = *(void *)(v3 + 48);
    do
    {
      uint64_t v11 = (void *)(v10 + 16 * v6);
      uint64_t v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          BOOL v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_25B290FB0() & 1) != 0) {
            return v6;
          }
        }
      }
      else if (!a2)
      {
        return v6;
      }
      unint64_t v6 = (v6 + 1) & v9;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_25B18B820(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_25B197934(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x26115F390](v9, a1);
      sub_25B197990((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_25B18B8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_25B18B984(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_25B2905C0();
    uint64_t v8 = v7;
    if (v6 == sub_25B2905C0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_25B2905C0();
          uint64_t v15 = v14;
          if (v13 == sub_25B2905C0() && v15 == v16) {
            break;
          }
          char v18 = sub_25B290FB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_25B18BAFC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_25B18BB9C(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_25B18BC58(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v25 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v24 = ~v3;
    uint64_t v5 = *(void *)(v2 + 48);
    uint64_t v6 = *a1;
    uint64_t v7 = a1[1];
    uint64_t v8 = a1[3];
    uint64_t v23 = a1[2];
    int v22 = *((unsigned __int8 *)a1 + 32);
    uint64_t v20 = a1[6];
    uint64_t v21 = a1[5];
    do
    {
      uint64_t v11 = v5 + 56 * v4;
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v12 = *(void *)(v11 + 24);
      int v14 = *(unsigned __int8 *)(v11 + 32);
      uint64_t v16 = *(void *)(v11 + 40);
      uint64_t v15 = *(void *)(v11 + 48);
      BOOL v17 = *(void *)v11 == v6 && *(void *)(v11 + 8) == v7;
      if (!v17 && (sub_25B290FB0() & 1) == 0) {
        goto LABEL_10;
      }
      if (v12)
      {
        if (!v8) {
          goto LABEL_10;
        }
        BOOL v18 = v13 == v23 && v12 == v8;
        if (!v18 && (sub_25B290FB0() & 1) == 0) {
          goto LABEL_10;
        }
      }
      else if (v8)
      {
        goto LABEL_10;
      }
      if (v14 == v22 && v16 == v21 && v15 == v20) {
        return v4;
      }
LABEL_10:
      unint64_t v4 = (v4 + 1) & v24;
    }
    while (((*(void *)(v25 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_25B18BDC0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9C10);
  char v44 = a2;
  uint64_t v6 = sub_25B290BF0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int v41 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v42 = v5;
  uint64_t v43 = v7;
  while (1)
  {
    if (v10)
    {
      uint64_t v46 = (v10 - 1) & v10;
      unint64_t v20 = __clz(__rbit64(v10)) | (v13 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v13++, 1)) {
      goto LABEL_40;
    }
    if (v13 >= v40) {
      break;
    }
    int v22 = v41;
    unint64_t v23 = v41[v13];
    if (!v23)
    {
      int64_t v24 = v13 + 1;
      if (v13 + 1 >= v40)
      {
LABEL_31:
        swift_release();
        uint64_t v3 = v39;
        if ((v44 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v23 = v41[v24];
      if (!v23)
      {
        while (1)
        {
          int64_t v13 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            break;
          }
          if (v13 >= v40) {
            goto LABEL_31;
          }
          unint64_t v23 = v41[v13];
          ++v24;
          if (v23) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_20:
    uint64_t v46 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_21:
    uint64_t v25 = *(void *)(v5 + 56);
    uint64_t v26 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v20);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v30 = v26[2];
    uint64_t v29 = v26[3];
    uint64_t v31 = (uint64_t *)(v25 + 48 * v20);
    uint64_t v32 = v31[1];
    uint64_t v45 = *v31;
    uint64_t v33 = v31[3];
    uint64_t v47 = v31[2];
    long long v48 = *((_OWORD *)v31 + 2);
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v7 = v43;
    sub_25B291210();
    sub_25B290630();
    sub_25B290630();
    uint64_t result = sub_25B291260();
    uint64_t v14 = -1 << *(unsigned char *)(v43 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v36 = v16 == v35;
        if (v16 == v35) {
          unint64_t v16 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v11 + 8 * v16);
      }
      while (v37 == -1);
      unint64_t v17 = __clz(__rbit64(~v37)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    BOOL v18 = (void *)(*(void *)(v43 + 48) + 32 * v17);
    void *v18 = v28;
    v18[1] = v27;
    v18[2] = v30;
    void v18[3] = v29;
    uint64_t v19 = *(void *)(v43 + 56) + 48 * v17;
    unint64_t v10 = v46;
    *(void *)uint64_t v19 = v45;
    *(void *)(v19 + 8) = v32;
    *(void *)(v19 + 16) = v47;
    *(void *)(v19 + 24) = v33;
    *(_OWORD *)(v19 + 32) = v48;
    ++*(void *)(v43 + 16);
    uint64_t v5 = v42;
  }
  swift_release();
  uint64_t v3 = v39;
  int v22 = v41;
  if ((v44 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v22, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25B18C134(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9BE0);
  char v44 = a2;
  uint64_t v6 = sub_25B290BF0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v42 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v40 = v2;
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v13++, 1)) {
      goto LABEL_40;
    }
    if (v13 >= v41) {
      break;
    }
    unint64_t v23 = v42;
    unint64_t v24 = v42[v13];
    if (!v24)
    {
      int64_t v25 = v13 + 1;
      if (v13 + 1 >= v41)
      {
LABEL_31:
        swift_release();
        uint64_t v3 = v40;
        if ((v44 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v24 = v42[v25];
      if (!v24)
      {
        while (1)
        {
          int64_t v13 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            break;
          }
          if (v13 >= v41) {
            goto LABEL_31;
          }
          unint64_t v24 = v42[v13];
          ++v25;
          if (v24) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_21:
    uint64_t v26 = *(void *)(v5 + 56);
    uint64_t v27 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v21);
    uint64_t v29 = *v27;
    uint64_t v28 = v27[1];
    uint64_t v31 = v27[2];
    uint64_t v30 = v27[3];
    uint64_t v32 = (uint64_t *)(v26 + 48 * v21);
    uint64_t v33 = v32[1];
    uint64_t v45 = *v32;
    uint64_t v34 = v32[3];
    uint64_t v46 = v32[2];
    long long v47 = *((_OWORD *)v32 + 2);
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_25B291210();
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
    uint64_t result = sub_25B291260();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v37 = v16 == v36;
        if (v16 == v36) {
          unint64_t v16 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v11 + 8 * v16);
      }
      while (v38 == -1);
      unint64_t v17 = __clz(__rbit64(~v38)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    BOOL v18 = (void *)(*(void *)(v7 + 48) + 32 * v17);
    void *v18 = v29;
    v18[1] = v28;
    v18[2] = v31;
    void v18[3] = v30;
    uint64_t v19 = *(void *)(v7 + 56) + 48 * v17;
    *(void *)uint64_t v19 = v45;
    *(void *)(v19 + 8) = v33;
    *(void *)(v19 + 16) = v46;
    *(void *)(v19 + 24) = v34;
    *(_OWORD *)(v19 + 32) = v47;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v23 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
  if (v39 >= 64) {
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v39;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25B18C4C4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA860);
  char v53 = a2;
  uint64_t v6 = sub_25B290BF0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v51 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  BOOL v49 = v2;
  int64_t v50 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      if (v53) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v50) {
      break;
    }
    uint64_t v27 = v51;
    unint64_t v28 = v51[v26];
    ++v13;
    if (!v28)
    {
      int64_t v13 = v26 + 1;
      if (v26 + 1 >= v50) {
        goto LABEL_33;
      }
      unint64_t v28 = v51[v13];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v50)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v49;
          if ((v53 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v28 = v51[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v13 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v50) {
              goto LABEL_33;
            }
            unint64_t v28 = v51[v13];
            ++v29;
            if (v28) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v29;
      }
    }
LABEL_22:
    unint64_t v10 = (v28 - 1) & v28;
    unint64_t v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if (v53)
    {
LABEL_10:
      uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = *(void *)(v5 + 56) + 184 * v18;
      uint64_t v23 = *(void *)(v22 + 8);
      uint64_t v24 = *(void *)(v22 + 24);
      uint64_t v56 = *(void *)(v22 + 16);
      uint64_t v54 = *(void *)v22;
      uint64_t v55 = *(void *)(v22 + 40);
      uint64_t v67 = *(void *)(v22 + 56);
      uint64_t v63 = *(void *)(v22 + 64);
      uint64_t v61 = *(void *)(v22 + 72);
      uint64_t v59 = *(void *)(v22 + 32);
      uint64_t v60 = *(void *)(v22 + 80);
      char v57 = *(unsigned char *)(v22 + 88);
      char v58 = *(unsigned char *)(v22 + 48);
      char v25 = *(unsigned char *)(v22 + 89);
      long long v71 = *(_OWORD *)(v22 + 96);
      uint64_t v62 = *(void *)(v22 + 120);
      uint64_t v64 = *(void *)(v22 + 136);
      uint64_t v65 = *(void *)(v22 + 112);
      uint64_t v70 = *(void *)(v22 + 144);
      uint64_t v66 = *(void *)(v22 + 152);
      uint64_t v68 = *(void *)(v22 + 128);
      uint64_t v69 = *(void *)(v22 + 168);
      uint64_t v72 = *(void *)(v22 + 160);
      uint64_t v73 = *(void *)(v22 + 176);
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v20 = *v30;
    uint64_t v21 = v30[1];
    uint64_t v31 = *(void *)(v5 + 56) + 184 * v18;
    long long v33 = *(_OWORD *)(v31 + 32);
    long long v32 = *(_OWORD *)(v31 + 48);
    long long v34 = *(_OWORD *)v31;
    long long v75 = *(_OWORD *)(v31 + 16);
    long long v76 = v33;
    long long v74 = v34;
    long long v35 = *(_OWORD *)(v31 + 112);
    long long v37 = *(_OWORD *)(v31 + 64);
    long long v36 = *(_OWORD *)(v31 + 80);
    long long v80 = *(_OWORD *)(v31 + 96);
    long long v81 = v35;
    long long v78 = v37;
    long long v79 = v36;
    long long v39 = *(_OWORD *)(v31 + 144);
    long long v38 = *(_OWORD *)(v31 + 160);
    long long v40 = *(_OWORD *)(v31 + 128);
    uint64_t v85 = *(void *)(v31 + 176);
    long long v83 = v39;
    long long v84 = v38;
    long long v82 = v40;
    long long v77 = v32;
    uint64_t v73 = v85;
    uint64_t v69 = *((void *)&v38 + 1);
    uint64_t v72 = v38;
    uint64_t v70 = v39;
    uint64_t v65 = v81;
    uint64_t v66 = *((void *)&v39 + 1);
    long long v71 = v80;
    uint64_t v67 = *((void *)&v32 + 1);
    uint64_t v68 = v40;
    uint64_t v63 = v37;
    uint64_t v64 = *((void *)&v40 + 1);
    uint64_t v61 = *((void *)&v37 + 1);
    uint64_t v62 = *((void *)&v81 + 1);
    char v25 = BYTE9(v79);
    char v57 = BYTE8(v79);
    char v58 = v32;
    uint64_t v24 = *((void *)&v75 + 1);
    uint64_t v59 = v76;
    uint64_t v60 = v79;
    uint64_t v23 = *((void *)&v74 + 1);
    uint64_t v55 = *((void *)&v76 + 1);
    uint64_t v56 = v75;
    uint64_t v54 = v74;
    swift_bridgeObjectRetain();
    sub_25B114244((uint64_t)&v74);
LABEL_24:
    sub_25B291210();
    sub_25B290630();
    uint64_t result = sub_25B291260();
    uint64_t v41 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v42 = result & ~v41;
    unint64_t v43 = v42 >> 6;
    if (((-1 << v42) & ~*(void *)(v11 + 8 * (v42 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v42) & ~*(void *)(v11 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v44 = 0;
      unint64_t v45 = (unint64_t)(63 - v41) >> 6;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v46 = v43 == v45;
        if (v43 == v45) {
          unint64_t v43 = 0;
        }
        v44 |= v46;
        uint64_t v47 = *(void *)(v11 + 8 * v43);
      }
      while (v47 == -1);
      unint64_t v14 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    LOBYTE(v74) = v25;
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v20;
    v15[1] = v21;
    uint64_t v16 = *(void *)(v7 + 56) + 184 * v14;
    *(void *)uint64_t v16 = v54;
    *(void *)(v16 + 8) = v23;
    *(void *)(v16 + 16) = v56;
    *(void *)(v16 + 24) = v24;
    *(void *)(v16 + 32) = v59;
    *(void *)(v16 + 40) = v55;
    *(unsigned char *)(v16 + 48) = v58;
    *(void *)(v16 + 56) = v67;
    *(void *)(v16 + 64) = v63;
    *(void *)(v16 + 72) = v61;
    *(void *)(v16 + 80) = v60;
    *(unsigned char *)(v16 + 88) = v57;
    *(unsigned char *)(v16 + 89) = v25;
    *(void *)(v16 + 112) = v65;
    *(void *)(v16 + 120) = v62;
    *(void *)(v16 + 128) = v68;
    *(void *)(v16 + 136) = v64;
    *(void *)(v16 + 144) = v70;
    *(void *)(v16 + 152) = v66;
    *(void *)(v16 + 160) = v72;
    *(void *)(v16 + 168) = v69;
    *(void *)(v16 + 176) = v73;
    *(_OWORD *)(v16 + 96) = v71;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v49;
  uint64_t v27 = v51;
  if ((v53 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v48 = 1 << *(unsigned char *)(v5 + 32);
  if (v48 >= 64) {
    bzero(v27, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v27 = -1 << v48;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25B18C9D4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_25B290080();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v57 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Record.ID(0);
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v63 = v11;
  MEMORY[0x270FA5388](v11);
  int64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA808);
  int v64 = a2;
  uint64_t v15 = sub_25B290BF0();
  uint64_t v16 = v15;
  if (!*(void *)(v14 + 16)) {
    goto LABEL_44;
  }
  uint64_t v52 = v2;
  char v17 = *(unsigned char *)(v14 + 32);
  uint64_t v18 = *(void *)(v14 + 64);
  uint64_t v54 = (void *)(v14 + 64);
  uint64_t v19 = 1 << v17;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v18;
  int64_t v53 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v59 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v55 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v56 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v22 = v15 + 64;
  uint64_t result = swift_retain();
  int64_t v24 = 0;
  uint64_t v58 = v14;
  uint64_t v60 = v10;
  uint64_t v61 = v5;
  while (1)
  {
    if (v21)
    {
      unint64_t v28 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v29 = v28 | (v24 << 6);
      goto LABEL_22;
    }
    int64_t v30 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v30 >= v53) {
      break;
    }
    uint64_t v31 = v54;
    unint64_t v32 = v54[v30];
    ++v24;
    if (!v32)
    {
      int64_t v24 = v30 + 1;
      if (v30 + 1 >= v53) {
        goto LABEL_37;
      }
      unint64_t v32 = v54[v24];
      if (!v32)
      {
        int64_t v33 = v30 + 2;
        if (v33 >= v53)
        {
LABEL_37:
          swift_release();
          uint64_t v3 = v52;
          if ((v64 & 1) == 0) {
            goto LABEL_44;
          }
          goto LABEL_40;
        }
        unint64_t v32 = v54[v33];
        if (!v32)
        {
          while (1)
          {
            int64_t v24 = v33 + 1;
            if (__OFADD__(v33, 1)) {
              goto LABEL_46;
            }
            if (v24 >= v53) {
              goto LABEL_37;
            }
            unint64_t v32 = v54[v24];
            ++v33;
            if (v32) {
              goto LABEL_21;
            }
          }
        }
        int64_t v24 = v33;
      }
    }
LABEL_21:
    unint64_t v21 = (v32 - 1) & v32;
    unint64_t v29 = __clz(__rbit64(v32)) + (v24 << 6);
LABEL_22:
    uint64_t v34 = *(void *)(v62 + 72);
    uint64_t v35 = *(void *)(v14 + 48) + v34 * v29;
    if (v64)
    {
      sub_25B197A5C(v35, (uint64_t)v13, type metadata accessor for Record.ID);
      long long v36 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v29);
      uint64_t v37 = *v36;
      uint64_t v65 = v36[1];
      uint64_t v66 = v37;
    }
    else
    {
      sub_25B1979F4(v35, (uint64_t)v13, type metadata accessor for Record.ID);
      long long v38 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v29);
      uint64_t v39 = *v38;
      uint64_t v65 = v38[1];
      uint64_t v66 = v39;
      swift_bridgeObjectRetain();
    }
    sub_25B291210();
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B290630();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v40 = (uint64_t)v60;
    sub_25B1979F4((uint64_t)&v13[*(int *)(v63 + 24)], (uint64_t)v60, type metadata accessor for Record.ID.Ownership);
    uint64_t v41 = v61;
    if ((*v59)(v40, 1, v61) == 1)
    {
      sub_25B291220();
    }
    else
    {
      unint64_t v42 = v57;
      (*v56)(v57, v40, v41);
      sub_25B291220();
      sub_25B11FEE0(&qword_26A4D9220);
      sub_25B290540();
      (*v55)(v42, v41);
    }
    uint64_t v14 = v58;
    uint64_t result = sub_25B291260();
    uint64_t v43 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v44 = result & ~v43;
    unint64_t v45 = v44 >> 6;
    if (((-1 << v44) & ~*(void *)(v22 + 8 * (v44 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v44) & ~*(void *)(v22 + 8 * (v44 >> 6)))) | v44 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v46 = 0;
      unint64_t v47 = (unint64_t)(63 - v43) >> 6;
      do
      {
        if (++v45 == v47 && (v46 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        BOOL v48 = v45 == v47;
        if (v45 == v47) {
          unint64_t v45 = 0;
        }
        v46 |= v48;
        uint64_t v49 = *(void *)(v22 + 8 * v45);
      }
      while (v49 == -1);
      unint64_t v25 = __clz(__rbit64(~v49)) + (v45 << 6);
    }
    *(void *)(v22 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t result = sub_25B197A5C((uint64_t)v13, *(void *)(v16 + 48) + v34 * v25, type metadata accessor for Record.ID);
    int64_t v26 = (void *)(*(void *)(v16 + 56) + 16 * v25);
    uint64_t v27 = v65;
    *int64_t v26 = v66;
    v26[1] = v27;
    ++*(void *)(v16 + 16);
  }
  swift_release();
  uint64_t v3 = v52;
  uint64_t v31 = v54;
  if ((v64 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_40:
  uint64_t v50 = 1 << *(unsigned char *)(v14 + 32);
  if (v50 >= 64) {
    bzero(v31, ((unint64_t)(v50 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v31 = -1 << v50;
  }
  *(void *)(v14 + 16) = 0;
LABEL_44:
  uint64_t result = swift_release();
  *uint64_t v3 = v16;
  return result;
}

uint64_t sub_25B18D018(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_25B290080();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v52 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v59 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RecordMetadata();
  uint64_t v56 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v62 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Record.ID(0);
  uint64_t v57 = *(void *)(v12 - 8);
  uint64_t v58 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9C20);
  int v60 = a2;
  uint64_t v16 = sub_25B290BF0();
  uint64_t v17 = v16;
  if (!*(void *)(v15 + 16)) {
    goto LABEL_44;
  }
  unint64_t v47 = v2;
  char v18 = *(unsigned char *)(v15 + 32);
  uint64_t v19 = *(void *)(v15 + 64);
  uint64_t v49 = (void *)(v15 + 64);
  uint64_t v20 = 1 << v18;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v19;
  int64_t v48 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v54 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v50 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v23 = v16 + 64;
  uint64_t result = swift_retain();
  int64_t v25 = 0;
  uint64_t v55 = v5;
  uint64_t v53 = v15;
  while (1)
  {
    if (v22)
    {
      unint64_t v27 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v28 = v27 | (v25 << 6);
      goto LABEL_22;
    }
    int64_t v29 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v29 >= v48) {
      break;
    }
    int64_t v30 = v49;
    unint64_t v31 = v49[v29];
    ++v25;
    if (!v31)
    {
      int64_t v25 = v29 + 1;
      if (v29 + 1 >= v48) {
        goto LABEL_37;
      }
      unint64_t v31 = v49[v25];
      if (!v31)
      {
        int64_t v32 = v29 + 2;
        if (v32 >= v48)
        {
LABEL_37:
          swift_release();
          uint64_t v3 = v47;
          if ((v60 & 1) == 0) {
            goto LABEL_44;
          }
          goto LABEL_40;
        }
        unint64_t v31 = v49[v32];
        if (!v31)
        {
          while (1)
          {
            int64_t v25 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_46;
            }
            if (v25 >= v48) {
              goto LABEL_37;
            }
            unint64_t v31 = v49[v25];
            ++v32;
            if (v31) {
              goto LABEL_21;
            }
          }
        }
        int64_t v25 = v32;
      }
    }
LABEL_21:
    unint64_t v22 = (v31 - 1) & v31;
    unint64_t v28 = __clz(__rbit64(v31)) + (v25 << 6);
LABEL_22:
    uint64_t v33 = *(void *)(v57 + 72);
    uint64_t v34 = *(void *)(v15 + 48) + v33 * v28;
    int64_t v61 = v25;
    if (v60)
    {
      sub_25B197A5C(v34, (uint64_t)v14, type metadata accessor for Record.ID);
      uint64_t v35 = *(void *)(v56 + 72);
      sub_25B197A5C(*(void *)(v15 + 56) + v35 * v28, v62, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    }
    else
    {
      sub_25B1979F4(v34, (uint64_t)v14, type metadata accessor for Record.ID);
      uint64_t v35 = *(void *)(v56 + 72);
      sub_25B1979F4(*(void *)(v15 + 56) + v35 * v28, v62, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    }
    sub_25B291210();
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B290630();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = v59;
    sub_25B1979F4((uint64_t)&v14[*(int *)(v58 + 24)], v59, type metadata accessor for Record.ID.Ownership);
    uint64_t v37 = v55;
    if ((*v54)(v36, 1, v55) == 1)
    {
      sub_25B291220();
    }
    else
    {
      long long v38 = v52;
      (*v51)(v52, v36, v37);
      sub_25B291220();
      sub_25B11FEE0(&qword_26A4D9220);
      sub_25B290540();
      (*v50)(v38, v37);
    }
    uint64_t v15 = v53;
    uint64_t result = sub_25B291260();
    uint64_t v39 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v40 = result & ~v39;
    unint64_t v41 = v40 >> 6;
    if (((-1 << v40) & ~*(void *)(v23 + 8 * (v40 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v40) & ~*(void *)(v23 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v42 = 0;
      unint64_t v43 = (unint64_t)(63 - v39) >> 6;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        BOOL v44 = v41 == v43;
        if (v41 == v43) {
          unint64_t v41 = 0;
        }
        v42 |= v44;
        uint64_t v45 = *(void *)(v23 + 8 * v41);
      }
      while (v45 == -1);
      unint64_t v26 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(void *)(v23 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    sub_25B197A5C((uint64_t)v14, *(void *)(v17 + 48) + v33 * v26, type metadata accessor for Record.ID);
    uint64_t result = sub_25B197A5C(v62, *(void *)(v17 + 56) + v35 * v26, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    ++*(void *)(v17 + 16);
    int64_t v25 = v61;
  }
  swift_release();
  uint64_t v3 = v47;
  int64_t v30 = v49;
  if ((v60 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_40:
  uint64_t v46 = 1 << *(unsigned char *)(v15 + 32);
  if (v46 >= 64) {
    bzero(v30, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v30 = -1 << v46;
  }
  *(void *)(v15 + 16) = 0;
LABEL_44:
  uint64_t result = swift_release();
  *uint64_t v3 = v17;
  return result;
}

uint64_t sub_25B18D724(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_25B290080();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA828);
  int v46 = a2;
  uint64_t v10 = sub_25B290BF0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  char v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  unint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  unint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_25B11FEE0(&qword_26A4D9220);
    uint64_t result = sub_25B290530();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_25B18DB34(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = sub_25B290080();
  uint64_t v5 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v49 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA820);
  int v47 = a2;
  uint64_t v8 = sub_25B290BF0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  unint64_t v43 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  int64_t v41 = v2;
  int64_t v42 = (unint64_t)(v10 + 63) >> 6;
  BOOL v44 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  int64_t v48 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v14 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  uint64_t v45 = v5;
  for (i = v7; ; uint64_t v7 = i)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v42) {
      break;
    }
    unint64_t v22 = v43;
    unint64_t v23 = v43[v21];
    ++v16;
    if (!v23)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v23 = v43[v16];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v43[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v16 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v16 >= v42) {
              goto LABEL_34;
            }
            unint64_t v23 = v43[v16];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v16 = v24;
      }
    }
LABEL_21:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v7 + 56);
    unint64_t v26 = (uint64_t *)(*(void *)(v7 + 48) + 32 * v20);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    uint64_t v29 = v26[2];
    uint64_t v30 = v26[3];
    uint64_t v31 = *(void *)(v5 + 72);
    uint64_t v32 = v25 + v31 * v20;
    if (v47)
    {
      (*v48)(v49, v32, v50);
    }
    else
    {
      (*v44)(v49, v32, v50);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_25B291210();
    sub_25B290630();
    sub_25B290630();
    uint64_t result = sub_25B291260();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v14 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v34) & ~*(void *)(v14 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v14 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v17 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v9 + 48) + 32 * v17);
    void *v18 = v27;
    v18[1] = v28;
    v18[2] = v29;
    void v18[3] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v9 + 56) + v31 * v17, v49, v50);
    ++*(void *)(v9 + 16);
    uint64_t v5 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  unint64_t v22 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_25B18DF44(uint64_t a1, int a2)
{
  return sub_25B18F484(a1, a2, (uint64_t (*)(void))type metadata accessor for PairingRelationship, (uint64_t *)&unk_26A4DA810, (uint64_t (*)(void))type metadata accessor for PairingRelationship, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
}

uint64_t sub_25B18DF8C(uint64_t a1, char a2)
{
  return sub_25B1918E0(a1, a2, &qword_26A4DA858);
}

uint64_t sub_25B18DF98(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9BF8);
  char v38 = a2;
  uint64_t v6 = sub_25B290BF0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v36[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v36[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v38)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v36[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v36[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v20);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      uint64_t v32 = v28[2];
      uint64_t v31 = v28[3];
      uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_25B291210();
      sub_25B290630();
      sub_25B290630();
      uint64_t result = sub_25B291260();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 32 * v17);
      void *v18 = v29;
      v18[1] = v30;
      v18[2] = v32;
      void v18[3] = v31;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25B18E2C0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25B290080();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v53 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  int v64 = (char *)&v47 - v12;
  uint64_t v13 = type metadata accessor for Record.ID(0);
  uint64_t v58 = *(void *)(v13 - 8);
  uint64_t v59 = v13;
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA830);
  int v60 = a2;
  uint64_t v17 = sub_25B290BF0();
  uint64_t v18 = v17;
  if (!*(void *)(v16 + 16)) {
    goto LABEL_44;
  }
  int64_t v48 = v2;
  uint64_t v19 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v20 = *(void *)(v16 + 64);
  uint64_t v50 = (void *)(v16 + 64);
  if (v19 < 64) {
    uint64_t v21 = ~(-1 << v19);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v20;
  int64_t v49 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v52 = v9 + 16;
  uint64_t v63 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  uint64_t v56 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v51 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v23 = v17 + 64;
  uint64_t result = swift_retain();
  int64_t v25 = 0;
  uint64_t v54 = v16;
  uint64_t v55 = v9;
  uint64_t v57 = v7;
  while (1)
  {
    if (v22)
    {
      unint64_t v27 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v28 = v27 | (v25 << 6);
      goto LABEL_22;
    }
    int64_t v29 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v29 >= v49) {
      break;
    }
    uint64_t v30 = v50;
    unint64_t v31 = v50[v29];
    ++v25;
    if (!v31)
    {
      int64_t v25 = v29 + 1;
      if (v29 + 1 >= v49) {
        goto LABEL_37;
      }
      unint64_t v31 = v50[v25];
      if (!v31)
      {
        int64_t v32 = v29 + 2;
        if (v32 >= v49)
        {
LABEL_37:
          swift_release();
          uint64_t v3 = v48;
          if ((v60 & 1) == 0) {
            goto LABEL_44;
          }
          goto LABEL_40;
        }
        unint64_t v31 = v50[v32];
        if (!v31)
        {
          while (1)
          {
            int64_t v25 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_46;
            }
            if (v25 >= v49) {
              goto LABEL_37;
            }
            unint64_t v31 = v50[v25];
            ++v32;
            if (v31) {
              goto LABEL_21;
            }
          }
        }
        int64_t v25 = v32;
      }
    }
LABEL_21:
    unint64_t v22 = (v31 - 1) & v31;
    unint64_t v28 = __clz(__rbit64(v31)) + (v25 << 6);
LABEL_22:
    uint64_t v33 = *(void *)(v16 + 48) + *(void *)(v58 + 72) * v28;
    uint64_t v61 = *(void *)(v58 + 72);
    int64_t v62 = v25;
    if (v60)
    {
      sub_25B197A5C(v33, (uint64_t)v15, type metadata accessor for Record.ID);
      uint64_t v34 = *(void *)(v16 + 56);
      uint64_t v35 = *(void *)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 32))(v64, v34 + v35 * v28, v8);
    }
    else
    {
      sub_25B1979F4(v33, (uint64_t)v15, type metadata accessor for Record.ID);
      uint64_t v36 = *(void *)(v16 + 56);
      uint64_t v35 = *(void *)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v64, v36 + v35 * v28, v8);
    }
    sub_25B291210();
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B290630();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = (uint64_t)v57;
    sub_25B1979F4((uint64_t)&v15[*(int *)(v59 + 24)], (uint64_t)v57, type metadata accessor for Record.ID.Ownership);
    if ((*v56)(v37, 1, v8) == 1)
    {
      sub_25B291220();
    }
    else
    {
      char v38 = v53;
      (*v63)(v53, v37, v8);
      sub_25B291220();
      sub_25B11FEE0(&qword_26A4D9220);
      sub_25B290540();
      (*v51)(v38, v8);
    }
    uint64_t v9 = v55;
    uint64_t result = sub_25B291260();
    uint64_t v39 = -1 << *(unsigned char *)(v18 + 32);
    unint64_t v40 = result & ~v39;
    unint64_t v41 = v40 >> 6;
    if (((-1 << v40) & ~*(void *)(v23 + 8 * (v40 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v40) & ~*(void *)(v23 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v42 = 0;
      unint64_t v43 = (unint64_t)(63 - v39) >> 6;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        BOOL v44 = v41 == v43;
        if (v41 == v43) {
          unint64_t v41 = 0;
        }
        v42 |= v44;
        uint64_t v45 = *(void *)(v23 + 8 * v41);
      }
      while (v45 == -1);
      unint64_t v26 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(void *)(v23 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    sub_25B197A5C((uint64_t)v15, *(void *)(v18 + 48) + v61 * v26, type metadata accessor for Record.ID);
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v63)(*(void *)(v18 + 56) + v35 * v26, v64, v8);
    ++*(void *)(v18 + 16);
    uint64_t v16 = v54;
    int64_t v25 = v62;
  }
  swift_release();
  uint64_t v3 = v48;
  uint64_t v30 = v50;
  if ((v60 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_40:
  uint64_t v46 = 1 << *(unsigned char *)(v16 + 32);
  if (v46 >= 64) {
    bzero(v30, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v30 = -1 << v46;
  }
  *(void *)(v16 + 16) = 0;
LABEL_44:
  uint64_t result = swift_release();
  *uint64_t v3 = v18;
  return result;
}

uint64_t sub_25B18E990(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_25B290080();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v55 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Record.ID(0);
  uint64_t v61 = *(void *)(v11 - 8);
  uint64_t v62 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v50 - v15;
  uint64_t v17 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA840);
  int v63 = a2;
  uint64_t v18 = sub_25B290BF0();
  uint64_t v19 = v18;
  if (!*(void *)(v17 + 16)) {
    goto LABEL_44;
  }
  uint64_t v50 = v2;
  char v20 = *(unsigned char *)(v17 + 32);
  uint64_t v21 = *(void *)(v17 + 64);
  uint64_t v52 = (void *)(v17 + 64);
  uint64_t v22 = 1 << v20;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  else {
    uint64_t v23 = -1;
  }
  unint64_t v24 = v23 & v21;
  int64_t v51 = (unint64_t)(v22 + 63) >> 6;
  uint64_t v58 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v53 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v54 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v25 = v18 + 64;
  uint64_t result = swift_retain();
  int64_t v27 = 0;
  uint64_t v59 = v10;
  uint64_t v60 = v5;
  uint64_t v56 = v14;
  uint64_t v57 = v17;
  while (1)
  {
    if (v24)
    {
      unint64_t v30 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      unint64_t v31 = v30 | (v27 << 6);
      goto LABEL_22;
    }
    int64_t v32 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v32 >= v51) {
      break;
    }
    uint64_t v33 = v52;
    unint64_t v34 = v52[v32];
    ++v27;
    if (!v34)
    {
      int64_t v27 = v32 + 1;
      if (v32 + 1 >= v51) {
        goto LABEL_37;
      }
      unint64_t v34 = v52[v27];
      if (!v34)
      {
        int64_t v35 = v32 + 2;
        if (v35 >= v51)
        {
LABEL_37:
          swift_release();
          uint64_t v3 = v50;
          if ((v63 & 1) == 0) {
            goto LABEL_44;
          }
          goto LABEL_40;
        }
        unint64_t v34 = v52[v35];
        if (!v34)
        {
          while (1)
          {
            int64_t v27 = v35 + 1;
            if (__OFADD__(v35, 1)) {
              goto LABEL_46;
            }
            if (v27 >= v51) {
              goto LABEL_37;
            }
            unint64_t v34 = v52[v27];
            ++v35;
            if (v34) {
              goto LABEL_21;
            }
          }
        }
        int64_t v27 = v35;
      }
    }
LABEL_21:
    unint64_t v24 = (v34 - 1) & v34;
    unint64_t v31 = __clz(__rbit64(v34)) + (v27 << 6);
LABEL_22:
    uint64_t v36 = *(void *)(v61 + 72);
    unint64_t v37 = v36 * v31;
    uint64_t v38 = *(void *)(v17 + 48) + v36 * v31;
    if (v63)
    {
      sub_25B197A5C(v38, (uint64_t)v16, type metadata accessor for Record.ID);
      sub_25B197A5C(*(void *)(v17 + 56) + v37, (uint64_t)v14, type metadata accessor for Record.ID);
    }
    else
    {
      sub_25B1979F4(v38, (uint64_t)v16, type metadata accessor for Record.ID);
      sub_25B1979F4(*(void *)(v17 + 56) + v37, (uint64_t)v14, type metadata accessor for Record.ID);
    }
    sub_25B291210();
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B290630();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v39 = (uint64_t)v59;
    sub_25B1979F4((uint64_t)&v16[*(int *)(v62 + 24)], (uint64_t)v59, type metadata accessor for Record.ID.Ownership);
    uint64_t v40 = v60;
    if ((*v58)(v39, 1, v60) == 1)
    {
      sub_25B291220();
    }
    else
    {
      unint64_t v41 = v55;
      (*v54)(v55, v39, v40);
      sub_25B291220();
      sub_25B11FEE0(&qword_26A4D9220);
      sub_25B290540();
      (*v53)(v41, v40);
    }
    uint64_t v14 = v56;
    uint64_t v17 = v57;
    uint64_t result = sub_25B291260();
    uint64_t v42 = -1 << *(unsigned char *)(v19 + 32);
    unint64_t v43 = result & ~v42;
    unint64_t v44 = v43 >> 6;
    if (((-1 << v43) & ~*(void *)(v25 + 8 * (v43 >> 6))) != 0)
    {
      unint64_t v28 = __clz(__rbit64((-1 << v43) & ~*(void *)(v25 + 8 * (v43 >> 6)))) | v43 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v45 = 0;
      unint64_t v46 = (unint64_t)(63 - v42) >> 6;
      do
      {
        if (++v44 == v46 && (v45 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        BOOL v47 = v44 == v46;
        if (v44 == v46) {
          unint64_t v44 = 0;
        }
        v45 |= v47;
        uint64_t v48 = *(void *)(v25 + 8 * v44);
      }
      while (v48 == -1);
      unint64_t v28 = __clz(__rbit64(~v48)) + (v44 << 6);
    }
    *(void *)(v25 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    unint64_t v29 = v36 * v28;
    sub_25B197A5C((uint64_t)v16, *(void *)(v19 + 48) + v36 * v28, type metadata accessor for Record.ID);
    uint64_t result = sub_25B197A5C((uint64_t)v14, *(void *)(v19 + 56) + v29, type metadata accessor for Record.ID);
    ++*(void *)(v19 + 16);
  }
  swift_release();
  uint64_t v3 = v50;
  uint64_t v33 = v52;
  if ((v63 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_40:
  uint64_t v49 = 1 << *(unsigned char *)(v17 + 32);
  if (v49 >= 64) {
    bzero(v33, ((unint64_t)(v49 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v33 = -1 << v49;
  }
  *(void *)(v17 + 16) = 0;
LABEL_44:
  uint64_t result = swift_release();
  *uint64_t v3 = v19;
  return result;
}

uint64_t sub_25B18F000(uint64_t a1, int a2)
{
  return sub_25B190DF4(a1, a2, (uint64_t (*)(void))type metadata accessor for ZoneVersion, &qword_26A4D9C40, (uint64_t (*)(void))type metadata accessor for ZoneVersion, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
}

uint64_t sub_25B18F048(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ZoneVersion();
  uint64_t v44 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v46 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9C00);
  int v45 = a2;
  uint64_t v8 = sub_25B290BF0();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    uint64_t v40 = v2;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v11 = *(void *)(v7 + 64);
    uint64_t v42 = (void *)(v7 + 64);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & v11;
    int64_t v41 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = v8 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    for (i = v7; ; uint64_t v7 = i)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v16 << 6);
      }
      else
      {
        int64_t v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v41) {
          goto LABEL_34;
        }
        unint64_t v22 = v42[v21];
        ++v16;
        if (!v22)
        {
          int64_t v16 = v21 + 1;
          if (v21 + 1 >= v41) {
            goto LABEL_34;
          }
          unint64_t v22 = v42[v16];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v41)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v40;
              if (v45)
              {
                uint64_t v39 = 1 << *(unsigned char *)(v7 + 32);
                if (v39 >= 64) {
                  bzero(v42, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v42 = -1 << v39;
                }
                *(void *)(v7 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v42[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v16 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v41) {
                  goto LABEL_34;
                }
                unint64_t v22 = v42[v16];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v23;
          }
        }
LABEL_21:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      uint64_t v24 = *(void *)(v7 + 56);
      uint64_t v25 = (uint64_t *)(*(void *)(v7 + 48) + 32 * v20);
      uint64_t v27 = *v25;
      uint64_t v26 = v25[1];
      uint64_t v29 = v25[2];
      uint64_t v28 = v25[3];
      uint64_t v30 = *(void *)(v44 + 72);
      uint64_t v31 = v24 + v30 * v20;
      if (v45)
      {
        sub_25B197A5C(v31, v46, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      }
      else
      {
        sub_25B1979F4(v31, v46, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_25B291210();
      sub_25B290630();
      sub_25B290630();
      uint64_t result = sub_25B291260();
      uint64_t v32 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v33 = result & ~v32;
      unint64_t v34 = v33 >> 6;
      if (((-1 << v33) & ~*(void *)(v14 + 8 * (v33 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v33) & ~*(void *)(v14 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v35 = 0;
        unint64_t v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v37 = v34 == v36;
          if (v34 == v36) {
            unint64_t v34 = 0;
          }
          v35 |= v37;
          uint64_t v38 = *(void *)(v14 + 8 * v34);
        }
        while (v38 == -1);
        unint64_t v17 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v9 + 48) + 32 * v17);
      void *v18 = v27;
      v18[1] = v26;
      v18[2] = v29;
      void v18[3] = v28;
      uint64_t result = sub_25B197A5C(v46, *(void *)(v9 + 56) + v30 * v17, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_25B18F43C(uint64_t a1, int a2)
{
  return sub_25B18F484(a1, a2, type metadata accessor for Replicator.Session, (uint64_t *)&unk_26A4DA848, type metadata accessor for Replicator.Session, type metadata accessor for Replicator.Session);
}

uint64_t sub_25B18F484(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v52 = a6;
  uint64_t v58 = a5;
  uint64_t v8 = v6;
  uint64_t v10 = a3(0);
  uint64_t v54 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v60 = (uint64_t)&v47 - v11;
  uint64_t v12 = sub_25B290080();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v56 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v55 = a2;
  uint64_t v16 = sub_25B290BF0();
  uint64_t v17 = v16;
  if (!*(void *)(v15 + 16)) {
    goto LABEL_41;
  }
  uint64_t v59 = v12;
  uint64_t v18 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v19 = *(void *)(v15 + 64);
  uint64_t v50 = (void *)(v15 + 64);
  if (v18 < 64) {
    uint64_t v20 = ~(-1 << v18);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v19;
  uint64_t v48 = v6;
  int64_t v49 = (unint64_t)(v18 + 63) >> 6;
  int64_t v51 = (void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  uint64_t v57 = (void (**)(char *, unint64_t, uint64_t))(v13 + 32);
  uint64_t v22 = v16 + 64;
  uint64_t result = swift_retain();
  int64_t v24 = 0;
  uint64_t v53 = v15;
  uint64_t v25 = v56;
  while (1)
  {
    if (v21)
    {
      unint64_t v27 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v28 = v27 | (v24 << 6);
      goto LABEL_22;
    }
    int64_t v29 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v29 >= v49) {
      break;
    }
    uint64_t v30 = v50;
    unint64_t v31 = v50[v29];
    ++v24;
    if (!v31)
    {
      int64_t v24 = v29 + 1;
      if (v29 + 1 >= v49) {
        goto LABEL_34;
      }
      unint64_t v31 = v50[v24];
      if (!v31)
      {
        int64_t v32 = v29 + 2;
        if (v32 >= v49)
        {
LABEL_34:
          swift_release();
          uint64_t v8 = v48;
          if ((v55 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v31 = v50[v32];
        if (!v31)
        {
          while (1)
          {
            int64_t v24 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_43;
            }
            if (v24 >= v49) {
              goto LABEL_34;
            }
            unint64_t v31 = v50[v24];
            ++v32;
            if (v31) {
              goto LABEL_21;
            }
          }
        }
        int64_t v24 = v32;
      }
    }
LABEL_21:
    unint64_t v21 = (v31 - 1) & v31;
    unint64_t v28 = __clz(__rbit64(v31)) + (v24 << 6);
LABEL_22:
    uint64_t v33 = v13;
    uint64_t v34 = *(void *)(v13 + 72);
    unint64_t v35 = *(void *)(v15 + 48) + v34 * v28;
    if (v55)
    {
      (*v57)(v25, v35, v59);
      uint64_t v36 = *(void *)(v15 + 56);
      uint64_t v37 = *(void *)(v54 + 72);
      sub_25B197A5C(v36 + v37 * v28, v60, v58);
    }
    else
    {
      (*v51)(v25, v35, v59);
      uint64_t v38 = *(void *)(v15 + 56);
      uint64_t v37 = *(void *)(v54 + 72);
      sub_25B1979F4(v38 + v37 * v28, v60, v52);
    }
    sub_25B11FEE0(&qword_26A4D9220);
    uint64_t result = sub_25B290530();
    uint64_t v39 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v40 = result & ~v39;
    unint64_t v41 = v40 >> 6;
    if (((-1 << v40) & ~*(void *)(v22 + 8 * (v40 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v40) & ~*(void *)(v22 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v25 = v56;
    }
    else
    {
      char v42 = 0;
      unint64_t v43 = (unint64_t)(63 - v39) >> 6;
      uint64_t v25 = v56;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v44 = v41 == v43;
        if (v41 == v43) {
          unint64_t v41 = 0;
        }
        v42 |= v44;
        uint64_t v45 = *(void *)(v22 + 8 * v41);
      }
      while (v45 == -1);
      unint64_t v26 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(void *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    (*v57)((char *)(*(void *)(v17 + 48) + v34 * v26), (unint64_t)v25, v59);
    uint64_t result = sub_25B197A5C(v60, *(void *)(v17 + 56) + v37 * v26, v58);
    ++*(void *)(v17 + 16);
    uint64_t v15 = v53;
    uint64_t v13 = v33;
  }
  swift_release();
  uint64_t v8 = v48;
  uint64_t v30 = v50;
  if ((v55 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v46 = 1 << *(unsigned char *)(v15 + 32);
  if (v46 >= 64) {
    bzero(v30, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v30 = -1 << v46;
  }
  *(void *)(v15 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v8 = v17;
  return result;
}

uint64_t sub_25B18F964(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9C30);
  char v42 = a2;
  uint64_t v6 = sub_25B290BF0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    int64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    unint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_25B291210();
    sub_25B290630();
    uint64_t result = sub_25B291260();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *uint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25B18FC8C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7A8);
  uint64_t v6 = sub_25B290BF0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v16 = v15 | (v13 << 6);
      }
      else
      {
        int64_t v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v30) {
          goto LABEL_35;
        }
        unint64_t v18 = v31[v17];
        ++v13;
        if (!v18)
        {
          int64_t v13 = v17 + 1;
          if (v17 + 1 >= v30) {
            goto LABEL_35;
          }
          unint64_t v18 = v31[v13];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v30)
            {
LABEL_35:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 >= 64) {
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v31 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_42;
                }
                if (v13 >= v30) {
                  goto LABEL_35;
                }
                unint64_t v18 = v31[v13];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v19;
          }
        }
LABEL_21:
        unint64_t v10 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      long long v32 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16);
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 16 * v16 + 8);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
      }
      sub_25B291210();
      sub_25B291220();
      if (v21) {
        sub_25B290630();
      }
      uint64_t result = sub_25B291260();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v32;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v20;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25B18FFA0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_25B290080();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA790);
  int v46 = a2;
  uint64_t v10 = sub_25B290BF0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  char v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  unint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  int64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_unknownObjectRetain();
    }
    sub_25B11FEE0(&qword_26A4D9220);
    uint64_t result = sub_25B290530();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_25B1903B0(uint64_t a1, int a2)
{
  return sub_25B18F484(a1, a2, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, &qword_26A4DA7A0, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
}

uint64_t sub_25B1903F8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7C8);
  char v9 = a2;
  uint64_t result = sub_25B290BF0();
  uint64_t v11 = result;
  if (*(void *)(v8 + 16))
  {
    unint64_t v35 = v3;
    int64_t v12 = 0;
    uint64_t v13 = *(void *)(v8 + 64);
    uint64_t v37 = (void *)(v8 + 64);
    uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v13;
    int64_t v36 = (unint64_t)(v14 + 63) >> 6;
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v16)
      {
        unint64_t v19 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v20 = v19 | (v12 << 6);
      }
      else
      {
        int64_t v21 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v12;
        if (!v22)
        {
          int64_t v12 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v12];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              if ((v9 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_41;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v8 + 32);
              if (v34 >= 64) {
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v37 = -1 << v34;
              }
              uint64_t v3 = v35;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v12 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v12 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v12];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v23;
          }
        }
LABEL_21:
        unint64_t v16 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v12 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = *(void *)(v38 + 72);
      uint64_t v26 = *(void *)(v8 + 56) + v25 * v20;
      if (v9) {
        sub_25B197A5C(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
      }
      else {
        sub_25B1979F4(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
      }
      uint64_t result = sub_25B291200();
      uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v18 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v11 + 48) + 8 * v18) = v24;
      uint64_t result = sub_25B197A5C((uint64_t)v7, *(void *)(v11 + 56) + v25 * v18, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
      ++*(void *)(v11 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_25B190784(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9DC8);
  char v38 = a2;
  uint64_t v6 = sub_25B290BF0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    BOOL v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_25B291210();
    sub_25B290630();
    uint64_t result = sub_25B291260();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25B190A94(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA7E0);
  uint64_t v6 = sub_25B290BF0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_25B1979E4((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_25B197934(v25, (uint64_t)&v38);
      sub_25B116E84(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_25B290A40();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_25B1979E4(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25B190DAC(uint64_t a1, int a2)
{
  return sub_25B190DF4(a1, a2, type metadata accessor for NetworkMessenger.ExpiringConnection, &qword_26A4DA7C0, type metadata accessor for NetworkMessenger.ExpiringConnection, type metadata accessor for NetworkMessenger.ExpiringConnection);
}

uint64_t sub_25B190DF4(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v47 = a6;
  uint64_t v50 = a5;
  uint64_t v8 = v6;
  uint64_t v10 = a3(0);
  uint64_t v48 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v49 = a2;
  uint64_t v14 = sub_25B290BF0();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_41;
  }
  uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v17 = *(void *)(v13 + 64);
  int v46 = (void *)(v13 + 64);
  if (v16 < 64) {
    uint64_t v18 = ~(-1 << v16);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v17;
  BOOL v44 = v6;
  int64_t v45 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v20 = v14 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v25 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v26 = v25 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v27 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v45) {
      break;
    }
    uint64_t v28 = v46;
    unint64_t v29 = v46[v27];
    ++v22;
    if (!v29)
    {
      int64_t v22 = v27 + 1;
      if (v27 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v29 = v46[v22];
      if (!v29)
      {
        int64_t v30 = v27 + 2;
        if (v30 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v8 = v44;
          if ((v49 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v29 = v46[v30];
        if (!v29)
        {
          while (1)
          {
            int64_t v22 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v45) {
              goto LABEL_34;
            }
            unint64_t v29 = v46[v22];
            ++v30;
            if (v29) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v30;
      }
    }
LABEL_21:
    unint64_t v19 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v22 << 6);
LABEL_22:
    char v31 = (uint64_t *)(*(void *)(v13 + 48) + 16 * v26);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = *(void *)(v48 + 72);
    uint64_t v35 = *(void *)(v13 + 56) + v34 * v26;
    if (v49)
    {
      sub_25B197A5C(v35, (uint64_t)v12, v50);
    }
    else
    {
      sub_25B1979F4(v35, (uint64_t)v12, v47);
      swift_bridgeObjectRetain();
    }
    sub_25B291210();
    sub_25B290630();
    uint64_t result = sub_25B291260();
    uint64_t v36 = -1 << *(unsigned char *)(v15 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v20 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v37) & ~*(void *)(v20 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v20 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v23 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    int64_t v24 = (void *)(*(void *)(v15 + 48) + 16 * v23);
    *int64_t v24 = v33;
    v24[1] = v32;
    uint64_t result = sub_25B197A5C((uint64_t)v12, *(void *)(v15 + 56) + v34 * v23, v50);
    ++*(void *)(v15 + 16);
  }
  swift_release();
  uint64_t v8 = v44;
  uint64_t v28 = v46;
  if ((v49 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v13 + 32);
  if (v43 >= 64) {
    bzero(v28, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v28 = -1 << v43;
  }
  *(void *)(v13 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v8 = v15;
  return result;
}

uint64_t sub_25B1911AC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7B8);
  char v6 = a2;
  uint64_t v7 = sub_25B290BF0();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      char v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_25B114300(v37, *((unint64_t *)&v37 + 1));
      }
      sub_25B291210();
      sub_25B290630();
      uint64_t result = sub_25B291260();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      uint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *uint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_25B1914BC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = sub_25B290080();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7B0);
  int v45 = a2;
  uint64_t v9 = sub_25B290BF0();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    unint64_t v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    unint64_t v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    BOOL v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    int v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v42 = v8;
    uint64_t v43 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v45)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
                if (v36 >= 64) {
                  bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v40 = -1 << v36;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      unint64_t v27 = v43;
      uint64_t v28 = v44;
      if (v45)
      {
        (*v46)(v43, v26, v44);
        long long v47 = *(_OWORD *)(*(void *)(v8 + 56) + 16 * v20);
      }
      else
      {
        (*v41)(v43, v26, v44);
        long long v47 = *(_OWORD *)(*(void *)(v8 + 56) + 16 * v20);
        swift_retain();
      }
      sub_25B11FEE0(&qword_26A4D9220);
      uint64_t result = sub_25B290530();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v15 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v46)(*(void *)(v10 + 48) + v25 * v18, v27, v28);
      *(_OWORD *)(*(void *)(v10 + 56) + 16 * v18) = v47;
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v42;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_25B1918D4(uint64_t a1, char a2)
{
  return sub_25B1918E0(a1, a2, &qword_26A4DA7D0);
}

uint64_t sub_25B1918E0(uint64_t a1, char a2, uint64_t *a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_25B290BF0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    int64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    unint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_25B291210();
    sub_25B290630();
    uint64_t result = sub_25B291260();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  int64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v4 = v8;
  return result;
}

uint64_t sub_25B191BF4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  uint64_t v37 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7D8);
  int v38 = a2;
  uint64_t result = sub_25B290BF0();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    uint64_t v34 = v2;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v36 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v35 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v19 = v18 | (v11 << 6);
      }
      else
      {
        int64_t v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v36;
        if (v20 >= v35) {
          goto LABEL_34;
        }
        unint64_t v21 = v36[v20];
        ++v11;
        if (!v21)
        {
          int64_t v11 = v20 + 1;
          if (v20 + 1 >= v35) {
            goto LABEL_34;
          }
          unint64_t v21 = v36[v11];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_34:
              if ((v38 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_41;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v8 + 32);
              if (v33 >= 64) {
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v36 = -1 << v33;
              }
              uint64_t v3 = v34;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v11 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v35) {
                  goto LABEL_34;
                }
                unint64_t v21 = v36[v11];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v22;
          }
        }
LABEL_21:
        unint64_t v15 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      char v23 = *(unsigned char *)(*(void *)(v8 + 48) + v19);
      uint64_t v24 = *(void *)(v37 + 72);
      uint64_t v25 = *(void *)(v8 + 56) + v24 * v19;
      if (v38) {
        sub_25B197A5C(v25, (uint64_t)v7, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      }
      else {
        sub_25B1979F4(v25, (uint64_t)v7, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      }
      sub_25B291210();
      sub_25B291240();
      uint64_t result = sub_25B291260();
      uint64_t v26 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v10 + 48) + v17) = v23;
      uint64_t result = sub_25B197A5C((uint64_t)v7, *(void *)(v10 + 56) + v24 * v17, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_25B191F98(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9BE8);
  uint64_t result = sub_25B290BF0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      sub_25B291210();
      sub_25B291220();
      uint64_t result = sub_25B291260();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25B19226C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7F0);
  uint64_t v27 = (void *)sub_25B290BF0();
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v25 = v2;
    char v26 = (void *)(v5 + 64);
    uint64_t v7 = -1;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    unint64_t v8 = v7 & *(void *)(v5 + 64);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v13 = v12 | (v11 << 6);
      }
      else
      {
        int64_t v14 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v14 >= v9) {
          goto LABEL_23;
        }
        unint64_t v15 = v26[v14];
        ++v11;
        if (!v15)
        {
          int64_t v11 = v14 + 1;
          if (v14 + 1 >= v9) {
            goto LABEL_23;
          }
          unint64_t v15 = v26[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 2;
            if (v16 >= v9)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v25;
                goto LABEL_30;
              }
              uint64_t v24 = 1 << *(unsigned char *)(v5 + 32);
              if (v24 >= 64) {
                bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v26 = -1 << v24;
              }
              uint64_t v3 = v25;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v15 = v26[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_32;
                }
                if (v11 >= v9) {
                  goto LABEL_23;
                }
                unint64_t v15 = v26[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
LABEL_20:
        unint64_t v8 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
      }
      uint64_t v17 = *(void *)(v5 + 48) + 56 * v13;
      uint64_t v18 = *(void *)v17;
      uint64_t v19 = *(void *)(v17 + 8);
      uint64_t v20 = *(void *)(v17 + 16);
      uint64_t v21 = *(void *)(v17 + 24);
      char v22 = *(unsigned char *)(v17 + 32);
      unint64_t v23 = (long long *)(*(void *)(v5 + 56) + 40 * v13);
      long long v28 = *(_OWORD *)(v17 + 40);
      if (a2)
      {
        sub_25B180BD4(v23, (uint64_t)v29);
      }
      else
      {
        sub_25B10FF48((uint64_t)v23, (uint64_t)v29);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v30[0] = v18;
      v30[1] = v19;
      _OWORD v30[2] = v20;
      v30[3] = v21;
      char v31 = v22;
      long long v32 = v28;
      uint64_t result = sub_25B192708((uint64_t)v30, v29, v27);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *uint64_t v3 = v27;
  return result;
}

void sub_25B1924BC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA7F8);
  char v30 = a2;
  char v31 = (void *)sub_25B290BF0();
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
    long long v28 = (void *)(v5 + 64);
    uint64_t v7 = -1;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    unint64_t v8 = v7 & *(void *)(v5 + 64);
    char v26 = v2;
    int64_t v27 = (unint64_t)(v6 + 63) >> 6;
    swift_retain();
    int64_t v9 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v10 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v12 >= v27) {
          goto LABEL_22;
        }
        unint64_t v13 = v28[v12];
        ++v9;
        if (!v13)
        {
          int64_t v9 = v12 + 1;
          if (v12 + 1 >= v27) {
            goto LABEL_22;
          }
          unint64_t v13 = v28[v9];
          if (!v13)
          {
            int64_t v14 = v12 + 2;
            if (v14 >= v27)
            {
LABEL_22:
              swift_release();
              uint64_t v3 = v26;
              if (v30)
              {
                uint64_t v25 = 1 << *(unsigned char *)(v5 + 32);
                if (v25 > 63) {
                  bzero(v28, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v28 = -1 << v25;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v13 = v28[v14];
            if (!v13)
            {
              while (1)
              {
                int64_t v9 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_29;
                }
                if (v9 >= v27) {
                  goto LABEL_22;
                }
                unint64_t v13 = v28[v9];
                ++v14;
                if (v13) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v9 = v14;
          }
        }
LABEL_19:
        unint64_t v8 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
      }
      uint64_t v15 = *(void *)(v5 + 48) + 56 * v11;
      uint64_t v17 = *(void *)v15;
      uint64_t v16 = *(void *)(v15 + 8);
      uint64_t v18 = *(void *)(v15 + 16);
      uint64_t v19 = *(void *)(v15 + 24);
      char v20 = *(unsigned char *)(v15 + 32);
      long long v21 = *(_OWORD *)(v15 + 40);
      uint64_t v22 = *(void *)(v5 + 56) + 16 * v11;
      uint64_t v23 = *(void *)v22;
      char v24 = *(unsigned char *)(v22 + 8);
      if ((v30 & 1) == 0)
      {
        long long v29 = *(_OWORD *)(v15 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v21 = v29;
      }
      v32[0] = v17;
      v32[1] = v16;
      v32[2] = v18;
      v32[3] = v19;
      char v33 = v20;
      long long v34 = v21;
      sub_25B192870((uint64_t)v32, v23, v24, v31);
    }
  }
  swift_release();
  *uint64_t v3 = v31;
}

uint64_t sub_25B192708(uint64_t a1, long long *a2, void *a3)
{
  sub_25B291210();
  uint64_t v6 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_25B290630();
  swift_bridgeObjectRelease();
  sub_25B291230();
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
  }
  sub_25B291250();
  sub_25B291250();
  sub_25B291250();
  sub_25B291260();
  unint64_t v7 = sub_25B290A30();
  *(void *)((char *)a3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
  uint64_t v8 = a3[6] + 56 * v7;
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 16) = v9;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(v8 + 48) = *(void *)(a1 + 48);
  uint64_t result = sub_25B180BD4(a2, a3[7] + 40 * v7);
  ++a3[2];
  return result;
}

__n128 sub_25B192870(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  sub_25B291210();
  uint64_t v8 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_25B290630();
  swift_bridgeObjectRelease();
  sub_25B291230();
  if (v8)
  {
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
  }
  sub_25B291250();
  sub_25B291250();
  sub_25B291250();
  sub_25B291260();
  unint64_t v9 = sub_25B290A30();
  *(void *)((char *)a4 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
  uint64_t v10 = a4[6] + 56 * v9;
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 16) = v11;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v10 + 32) = result;
  *(void *)(v10 + 48) = *(void *)(a1 + 48);
  uint64_t v13 = a4[7] + 16 * v9;
  *(void *)uint64_t v13 = a2;
  *(unsigned char *)(v13 + 8) = a3;
  ++a4[2];
  return result;
}

void *sub_25B1929D8()
{
  return sub_25B1929F0((uint64_t *)&unk_26A4D9C10);
}

void *sub_25B1929E4()
{
  return sub_25B1929F0(&qword_26A4D9BE0);
}

void *sub_25B1929F0(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_25B290BE0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_24:
    __n128 result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  __n128 result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    __n128 result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_26;
    }
    if (v10 >= v14) {
      goto LABEL_24;
    }
    unint64_t v33 = *(void *)(v7 + 8 * v10);
    if (!v33) {
      break;
    }
LABEL_23:
    unint64_t v13 = (v33 - 1) & v33;
    unint64_t v16 = __clz(__rbit64(v33)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 32 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + 32 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    uint64_t v23 = 48 * v16;
    uint64_t v24 = *(void *)(v3 + 56) + v23;
    uint64_t v25 = *(void *)v24;
    uint64_t v26 = *(void *)(v24 + 8);
    uint64_t v27 = *(void *)(v24 + 16);
    uint64_t v28 = *(void *)(v24 + 24);
    long long v29 = (void *)(*(void *)(v5 + 48) + v17);
    long long v30 = *(_OWORD *)(v24 + 32);
    *long long v29 = v20;
    v29[1] = v19;
    long long v29[2] = v21;
    v29[3] = v22;
    uint64_t v31 = *(void *)(v5 + 56) + v23;
    *(void *)uint64_t v31 = v25;
    *(void *)(v31 + 8) = v26;
    *(void *)(v31 + 16) = v27;
    *(void *)(v31 + 24) = v28;
    *(_OWORD *)(v31 + 32) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __n128 result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v34 = v10 + 1;
  if (v10 + 1 >= v14) {
    goto LABEL_24;
  }
  unint64_t v33 = *(void *)(v7 + 8 * v34);
  if (v33)
  {
    ++v10;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_24;
    }
    unint64_t v33 = *(void *)(v7 + 8 * v10);
    ++v34;
    if (v33) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_25B192BC4()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA860);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    __n128 result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  __n128 result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    __n128 result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v42 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v42 >= v13) {
      goto LABEL_26;
    }
    unint64_t v43 = *(void *)(v6 + 8 * v42);
    ++v9;
    if (!v43)
    {
      int64_t v9 = v42 + 1;
      if (v42 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v43 = *(void *)(v6 + 8 * v9);
      if (!v43) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v43 - 1) & v43;
    unint64_t v15 = __clz(__rbit64(v43)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 184 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    long long v22 = *(_OWORD *)(v21 + 112);
    long long v24 = *(_OWORD *)(v21 + 64);
    long long v23 = *(_OWORD *)(v21 + 80);
    long long v51 = *(_OWORD *)(v21 + 96);
    long long v52 = v22;
    long long v49 = v24;
    long long v50 = v23;
    long long v26 = *(_OWORD *)(v21 + 144);
    long long v25 = *(_OWORD *)(v21 + 160);
    long long v27 = *(_OWORD *)(v21 + 128);
    uint64_t v56 = *(void *)(v21 + 176);
    long long v54 = v26;
    long long v55 = v25;
    long long v53 = v27;
    long long v29 = *(_OWORD *)v21;
    long long v28 = *(_OWORD *)(v21 + 16);
    long long v30 = *(_OWORD *)(v21 + 48);
    long long v47 = *(_OWORD *)(v21 + 32);
    long long v48 = v30;
    long long v45 = v29;
    long long v46 = v28;
    uint64_t v31 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v31 = v19;
    v31[1] = v18;
    uint64_t v32 = *(void *)(v4 + 56) + v20;
    long long v33 = v45;
    long long v34 = v46;
    long long v35 = v48;
    *(_OWORD *)(v32 + 32) = v47;
    *(_OWORD *)(v32 + 48) = v35;
    *(_OWORD *)uint64_t v32 = v33;
    *(_OWORD *)(v32 + 16) = v34;
    long long v36 = v49;
    long long v37 = v50;
    long long v38 = v52;
    *(_OWORD *)(v32 + 96) = v51;
    *(_OWORD *)(v32 + 112) = v38;
    *(_OWORD *)(v32 + 64) = v36;
    *(_OWORD *)(v32 + 80) = v37;
    long long v39 = v53;
    long long v40 = v54;
    long long v41 = v55;
    *(void *)(v32 + 176) = v56;
    *(_OWORD *)(v32 + 144) = v40;
    *(_OWORD *)(v32 + 160) = v41;
    *(_OWORD *)(v32 + 128) = v39;
    swift_bridgeObjectRetain();
    __n128 result = (void *)sub_25B114244((uint64_t)&v45);
  }
  int64_t v44 = v42 + 2;
  if (v44 >= v13) {
    goto LABEL_26;
  }
  unint64_t v43 = *(void *)(v6 + 8 * v44);
  if (v43)
  {
    int64_t v9 = v44;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v43 = *(void *)(v6 + 8 * v9);
    ++v44;
    if (v43) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25B192E00()
{
  char v1 = v0;
  uint64_t v2 = type metadata accessor for Record.ID(0);
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA808);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25B290BE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    __n128 result = (void *)swift_release();
LABEL_25:
    *char v1 = v7;
    return result;
  }
  long long v27 = v1;
  __n128 result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    __n128 result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v29 + 72) * v16;
    sub_25B1979F4(*(void *)(v5 + 48) + v17, (uint64_t)v4, type metadata accessor for Record.ID);
    uint64_t v18 = 16 * v16;
    uint64_t v19 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v16);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_25B197A5C((uint64_t)v4, *(void *)(v7 + 48) + v17, type metadata accessor for Record.ID);
    long long v22 = (void *)(*(void *)(v7 + 56) + v18);
    void *v22 = v20;
    v22[1] = v21;
    __n128 result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    __n128 result = (void *)swift_release();
    char v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25B193098()
{
  char v1 = v0;
  uint64_t v2 = type metadata accessor for RecordMetadata();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Record.ID(0);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9C20);
  uint64_t v8 = *v0;
  uint64_t v9 = sub_25B290BE0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    __n128 result = (void *)swift_release();
LABEL_25:
    *char v1 = v10;
    return result;
  }
  long long v27 = v1;
  __n128 result = (void *)(v9 + 64);
  uint64_t v12 = v8 + 64;
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v12 + 8 * v13) {
    __n128 result = memmove(result, (const void *)(v8 + 64), 8 * v13);
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v18) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v12 + 8 * v23);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v12 + 8 * v14);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v20 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_9:
    unint64_t v21 = *(void *)(v28 + 72) * v20;
    sub_25B1979F4(*(void *)(v8 + 48) + v21, (uint64_t)v7, type metadata accessor for Record.ID);
    unint64_t v22 = *(void *)(v29 + 72) * v20;
    sub_25B1979F4(*(void *)(v8 + 56) + v22, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    sub_25B197A5C((uint64_t)v7, *(void *)(v10 + 48) + v21, type metadata accessor for Record.ID);
    __n128 result = (void *)sub_25B197A5C((uint64_t)v4, *(void *)(v10 + 56) + v22, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v18)
  {
LABEL_23:
    __n128 result = (void *)swift_release();
    char v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v12 + 8 * v25);
  if (v24)
  {
    int64_t v14 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v14 >= v18) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v12 + 8 * v14);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25B1933C8()
{
  uint64_t v1 = sub_25B290080();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA828);
  int64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25B290BE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    __n128 result = (void *)swift_release();
    *int64_t v23 = v7;
    return result;
  }
  __n128 result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    __n128 result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    __n128 result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25B193660()
{
  uint64_t v41 = sub_25B290080();
  uint64_t v43 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  long long v40 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA820);
  long long v35 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290BE0();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v44 = v3;
  if (!v4)
  {
    uint64_t result = swift_release();
    uint64_t v33 = v44;
    uint64_t v32 = v35;
LABEL_25:
    uint64_t *v32 = v33;
    return result;
  }
  uint64_t v5 = v3;
  uint64_t v6 = (char *)(v3 + 64);
  uint64_t v7 = (char *)(v2 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  uint64_t v36 = v2 + 64;
  if (v5 != v2 || v6 >= &v7[8 * v8])
  {
    memmove(v6, v7, 8 * v8);
    uint64_t v5 = v44;
  }
  int64_t v9 = 0;
  *(void *)(v5 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v42 = v2;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  uint64_t v39 = v43 + 16;
  int64_t v37 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v38 = v43 + 32;
  uint64_t v13 = v43;
  unint64_t v14 = v40;
  uint64_t v15 = v41;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      int64_t v45 = v9;
      unint64_t v17 = v16 | (v9 << 6);
      uint64_t result = v42;
      goto LABEL_9;
    }
    int64_t v28 = v9 + 1;
    uint64_t result = v42;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v28 >= v37) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v36 + 8 * v28);
    int64_t v30 = v9 + 1;
    if (!v29)
    {
      int64_t v30 = v28 + 1;
      if (v28 + 1 >= v37) {
        goto LABEL_23;
      }
      unint64_t v29 = *(void *)(v36 + 8 * v30);
      if (!v29) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v29 - 1) & v29;
    int64_t v45 = v30;
    unint64_t v17 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_9:
    uint64_t v19 = 32 * v17;
    unint64_t v20 = (uint64_t *)(*(void *)(result + 48) + 32 * v17);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = v20[2];
    uint64_t v24 = v20[3];
    unint64_t v25 = *(void *)(v13 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v14, *(void *)(result + 56) + v25, v15);
    uint64_t v26 = v44;
    uint64_t v27 = (void *)(*(void *)(v44 + 48) + v19);
    *uint64_t v27 = v21;
    v27[1] = v22;
    void v27[2] = v23;
    void v27[3] = v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v26 + 56) + v25, v14, v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v9 = v45;
  }
  int64_t v31 = v28 + 2;
  if (v31 >= v37)
  {
LABEL_23:
    uint64_t result = swift_release();
    uint64_t v32 = v35;
    uint64_t v33 = v44;
    goto LABEL_25;
  }
  unint64_t v29 = *(void *)(v36 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v37) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v36 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25B193954()
{
  return sub_25B1944C8((uint64_t (*)(void))type metadata accessor for PairingRelationship, (uint64_t *)&unk_26A4DA810, (uint64_t (*)(void))type metadata accessor for PairingRelationship, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
}

void *sub_25B19399C()
{
  return sub_25B195B90(&qword_26A4DA858);
}

void *sub_25B1939A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9BF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    uint64_t v20 = v17[3];
    uint64_t v21 = 8 * v15;
    uint64_t v22 = *(void *)(*(void *)(v2 + 56) + v21);
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v23 = *v17;
    v23[1] = v18;
    v23[2] = v19;
    v23[3] = v20;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25B193B78()
{
  uint64_t v1 = sub_25B290080();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Record.ID(0);
  uint64_t v29 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA830);
  int64_t v24 = v0;
  uint64_t v8 = *v0;
  uint64_t v9 = sub_25B290BE0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *int64_t v24 = v10;
    return result;
  }
  uint64_t result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    uint64_t result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v8 + 64);
  uint64_t v25 = v8 + 64;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  uint64_t v28 = v2 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v29 + 72) * v18;
    sub_25B1979F4(*(void *)(v8 + 48) + v19, (uint64_t)v7, type metadata accessor for Record.ID);
    unint64_t v20 = *(void *)(v2 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v8 + 56) + v20, v1);
    sub_25B197A5C((uint64_t)v7, *(void *)(v10 + 48) + v19, type metadata accessor for Record.ID);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v10 + 56) + v20, v4, v1);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_25B193EB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Record.ID(0);
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v25 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA840);
  uint64_t v8 = *v0;
  uint64_t v9 = sub_25B290BE0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v10;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v9 + 64);
  uint64_t v12 = v8 + 64;
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v12 + 8 * v13) {
    uint64_t result = memmove(result, (const void *)(v8 + 64), 8 * v13);
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v18) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v12 + 8 * v22);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v12 + 8 * v14);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_9:
    unint64_t v21 = *(void *)(v26 + 72) * v20;
    sub_25B1979F4(*(void *)(v8 + 48) + v21, (uint64_t)v7, type metadata accessor for Record.ID);
    sub_25B1979F4(*(void *)(v8 + 56) + v21, (uint64_t)v5, type metadata accessor for Record.ID);
    sub_25B197A5C((uint64_t)v7, *(void *)(v10 + 48) + v21, type metadata accessor for Record.ID);
    uint64_t result = (void *)sub_25B197A5C((uint64_t)v5, *(void *)(v10 + 56) + v21, type metadata accessor for Record.ID);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v18)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v12 + 8 * v24);
  if (v23)
  {
    int64_t v14 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v14 >= v18) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v12 + 8 * v14);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25B194174()
{
  return sub_25B1954A0((uint64_t (*)(void))type metadata accessor for ZoneVersion, &qword_26A4D9C40, (uint64_t (*)(void))type metadata accessor for ZoneVersion, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
}

void *sub_25B1941BC()
{
  uint64_t v1 = type metadata accessor for ZoneVersion();
  uint64_t v34 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9C00);
  int64_t v31 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_25B290BE0();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v35 = v5;
  if (!v6)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v29 = v35;
    uint64_t v28 = v31;
LABEL_25:
    uint64_t *v28 = v29;
    return result;
  }
  uint64_t v7 = v5;
  uint64_t result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    uint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v35;
  }
  uint64_t v32 = v4 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  int64_t v33 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v25 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v33) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v10;
    if (!v26)
    {
      int64_t v10 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_23;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v10);
      if (!v26) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 32 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v21 = v17[2];
    uint64_t v20 = v17[3];
    unint64_t v22 = *(void *)(v34 + 72) * v15;
    sub_25B1979F4(*(void *)(v4 + 56) + v22, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t v23 = v35;
    int64_t v24 = (void *)(*(void *)(v35 + 48) + v16);
    *int64_t v24 = v18;
    v24[1] = v19;
    void v24[2] = v21;
    v24[3] = v20;
    sub_25B197A5C((uint64_t)v3, *(void *)(v23 + 56) + v22, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v28 = v31;
    uint64_t v29 = v35;
    goto LABEL_25;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v10 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v10 >= v33) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v10);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25B194480()
{
  return sub_25B1944C8(type metadata accessor for Replicator.Session, (uint64_t *)&unk_26A4DA848, type metadata accessor for Replicator.Session, type metadata accessor for Replicator.Session);
}

void *sub_25B1944C8(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v6 = a1(0);
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v29 = v4;
  uint64_t v13 = *v4;
  uint64_t v14 = sub_25B290BE0();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *uint64_t v29 = v15;
    return result;
  }
  uint64_t result = (void *)(v14 + 64);
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v15 + 32)) + 63) >> 6;
  if (v15 != v13 || (unint64_t)result >= v13 + 64 + 8 * v17) {
    uint64_t result = memmove(result, (const void *)(v13 + 64), 8 * v17);
  }
  uint64_t v30 = v13 + 64;
  int64_t v18 = 0;
  *(void *)(v15 + 16) = *(void *)(v13 + 16);
  uint64_t v19 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & *(void *)(v13 + 64);
  uint64_t v33 = v10 + 16;
  int64_t v31 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v32 = v10 + 32;
  while (1)
  {
    if (v21)
    {
      unint64_t v22 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v23 = v22 | (v18 << 6);
      goto LABEL_9;
    }
    int64_t v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v26 >= v31) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v26);
    ++v18;
    if (!v27)
    {
      int64_t v18 = v26 + 1;
      if (v26 + 1 >= v31) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v30 + 8 * v18);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v23 = __clz(__rbit64(v27)) + (v18 << 6);
LABEL_9:
    unint64_t v24 = *(void *)(v10 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, *(void *)(v13 + 48) + v24, v9);
    unint64_t v25 = *(void *)(v34 + 72) * v23;
    sub_25B1979F4(*(void *)(v13 + 56) + v25, (uint64_t)v8, v35);
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(void *)(v15 + 48) + v24, v12, v9);
    uint64_t result = (void *)sub_25B197A5C((uint64_t)v8, *(void *)(v15 + 56) + v25, v36);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v31) {
    goto LABEL_23;
  }
  unint64_t v27 = *(void *)(v30 + 8 * v28);
  if (v27)
  {
    int64_t v18 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v18 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v18 >= v31) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v18);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_25B1947F0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9C30);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    unint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *unint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25B1949AC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25B194B60()
{
  uint64_t v1 = sub_25B290080();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA790);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25B290BE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    uint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_25B194DF8()
{
  return sub_25B1944C8((uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, &qword_26A4DA7A0, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
}

void *sub_25B194E40()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7C8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25B290BE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 8 * v17;
    uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v20 = *(void *)(v25 + 72) * v17;
    sub_25B1979F4(*(void *)(v5 + 56) + v20, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    *(void *)(*(void *)(v7 + 48) + v18) = v19;
    uint64_t result = (void *)sub_25B197A5C((uint64_t)v4, *(void *)(v7 + 56) + v20, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_25B1950BC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9DC8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25B195270()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA7E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_25B197934(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_25B116E84(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_25B1979E4(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25B195458()
{
  return sub_25B1954A0(type metadata accessor for NetworkMessenger.ExpiringConnection, &qword_26A4DA7C0, type metadata accessor for NetworkMessenger.ExpiringConnection, type metadata accessor for NetworkMessenger.ExpiringConnection);
}

void *sub_25B1954A0(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v36 = a3;
  int64_t v37 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a1(0);
  uint64_t v35 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  int64_t v9 = (char *)&v32 - v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *v4;
  uint64_t v11 = sub_25B290BE0();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v6 = v12;
    return result;
  }
  uint64_t v33 = v6;
  id result = (void *)(v11 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14) {
    id result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  }
  uint64_t v34 = v10 + 64;
  int64_t v16 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v17 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v10 + 64);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v29 >= v20) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v34 + 8 * v29);
    ++v16;
    if (!v30)
    {
      int64_t v16 = v29 + 1;
      if (v29 + 1 >= v20) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v34 + 8 * v16);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = (v30 - 1) & v30;
    unint64_t v22 = __clz(__rbit64(v30)) + (v16 << 6);
LABEL_12:
    uint64_t v23 = 16 * v22;
    int64_t v24 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v22);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    unint64_t v27 = *(void *)(v35 + 72) * v22;
    sub_25B1979F4(*(void *)(v10 + 56) + v27, (uint64_t)v9, v36);
    int64_t v28 = (void *)(*(void *)(v12 + 48) + v23);
    void *v28 = v25;
    v28[1] = v26;
    sub_25B197A5C((uint64_t)v9, *(void *)(v12 + 56) + v27, v37);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v20)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v6 = v33;
    goto LABEL_28;
  }
  unint64_t v30 = *(void *)(v34 + 8 * v31);
  if (v30)
  {
    int64_t v16 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v16 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v34 + 8 * v16);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_25B195714()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    int64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    id result = (void *)sub_25B114300(v24, *((unint64_t *)&v24 + 1));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25B1958DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7B0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_25B290BE0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  long long v24 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v25 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 16 * v16;
    unint64_t v19 = *(void *)(v8 + 48) + v17;
    int64_t v20 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    long long v28 = *(_OWORD *)(*(void *)(v6 + 56) + v18);
    v20(v19, v5, v2);
    *(_OWORD *)(*(void *)(v8 + 56) + v18) = v28;
    id result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25B195B84()
{
  return sub_25B195B90(&qword_26A4DA7D0);
}

void *sub_25B195B90(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_25B290BE0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    unint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    void *v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25B195D40()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  uint64_t v24 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7D8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25B290BE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v23 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v9 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    char v18 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    unint64_t v19 = *(void *)(v24 + 72) * v17;
    sub_25B1979F4(*(void *)(v5 + 56) + v19, (uint64_t)v4, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v18;
    id result = (void *)sub_25B197A5C((uint64_t)v4, *(void *)(v7 + 56) + v19, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25B195FB8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9BE8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25B19615C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7F0);
  uint64_t v27 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_25B290BE0();
  uint64_t v30 = v2;
  if (!*(void *)(v1 + 16))
  {
    id result = (void *)swift_release();
    uint64_t v26 = v30;
    int64_t v25 = v0;
LABEL_28:
    *int64_t v25 = v26;
    return result;
  }
  uint64_t v3 = v2;
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5)
  {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    uint64_t v3 = v30;
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  uint64_t v28 = v1 + 64;
  int64_t v29 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v29) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v28 + 8 * v22);
    ++v7;
    if (!v23)
    {
      int64_t v7 = v22 + 1;
      if (v22 + 1 >= v29) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v28 + 8 * v7);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v12 = __clz(__rbit64(v23)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 56 * v12;
    uint64_t v14 = *(void *)(v1 + 48) + 56 * v12;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    uint64_t v18 = *(void *)(v14 + 24);
    char v19 = *(unsigned char *)(v14 + 32);
    long long v31 = *(_OWORD *)(v14 + 40);
    uint64_t v20 = 40 * v12;
    sub_25B10FF48(*(void *)(v1 + 56) + 40 * v12, (uint64_t)v32);
    uint64_t v21 = *(void *)(v30 + 48) + v13;
    *(void *)uint64_t v21 = v15;
    *(void *)(v21 + 8) = v16;
    *(void *)(v21 + 16) = v17;
    *(void *)(v21 + 24) = v18;
    *(unsigned char *)(v21 + 32) = v19;
    *(_OWORD *)(v21 + 40) = v31;
    sub_25B180BD4(v32, *(void *)(v30 + 56) + v20);
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v29)
  {
LABEL_26:
    id result = (void *)swift_release();
    int64_t v25 = v27;
    uint64_t v26 = v30;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v28 + 8 * v24);
  if (v23)
  {
    int64_t v7 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v7 >= v29) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v28 + 8 * v7);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_25B196398()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA7F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 56 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 56 * v15;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v19 = *(void *)(v17 + 24);
    char v21 = *(unsigned char *)(v17 + 32);
    uint64_t v22 = 16 * v15;
    uint64_t v23 = *(void *)(v2 + 56) + v22;
    uint64_t v24 = *(void *)v23;
    LOBYTE(v23) = *(unsigned char *)(v23 + 8);
    uint64_t v25 = *(void *)(v4 + 48) + v16;
    long long v26 = *(_OWORD *)(v17 + 40);
    *(void *)uint64_t v25 = *(void *)v17;
    *(void *)(v25 + 8) = v18;
    *(void *)(v25 + 16) = v20;
    *(void *)(v25 + 24) = v19;
    *(unsigned char *)(v25 + 32) = v21;
    *(_OWORD *)(v25 + 40) = v26;
    uint64_t v27 = *(void *)(v4 + 56) + v22;
    *(void *)uint64_t v27 = v24;
    *(unsigned char *)(v27 + 8) = v23;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _s16ReplicatorEngine16DeviceDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v50 = *(unsigned __int8 *)(a1 + 48);
  double v7 = *(double *)(a1 + 56);
  double v6 = *(double *)(a1 + 64);
  double v9 = *(double *)(a1 + 72);
  double v8 = *(double *)(a1 + 80);
  char v44 = *(unsigned char *)(a1 + 88);
  char v49 = *(unsigned char *)(a1 + 89);
  uint64_t v48 = *(void *)(a1 + 96);
  uint64_t v46 = *(void *)(a1 + 104);
  uint64_t v40 = *(void *)(a1 + 112);
  unint64_t v42 = *(void *)(a1 + 120);
  uint64_t v34 = *(void *)(a1 + 128);
  uint64_t v32 = *(void *)(a1 + 144);
  uint64_t v36 = *(void *)(a1 + 152);
  uint64_t v37 = *(void *)(a1 + 136);
  uint64_t v28 = *(void *)(a1 + 160);
  uint64_t v30 = *(void *)(a1 + 168);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  int v14 = *(unsigned __int8 *)(a2 + 48);
  double v16 = *(double *)(a2 + 56);
  double v15 = *(double *)(a2 + 64);
  double v18 = *(double *)(a2 + 72);
  double v17 = *(double *)(a2 + 80);
  char v43 = *(unsigned char *)(a2 + 88);
  char v19 = *(unsigned char *)(a2 + 89);
  uint64_t v47 = *(void *)(a2 + 96);
  uint64_t v45 = *(void *)(a2 + 104);
  unint64_t v41 = *(void *)(a2 + 120);
  uint64_t v33 = *(void *)(a2 + 128);
  uint64_t v38 = *(void *)(a2 + 136);
  uint64_t v39 = *(void *)(a2 + 112);
  uint64_t v31 = *(void *)(a2 + 144);
  uint64_t v35 = *(void *)(a2 + 152);
  uint64_t v27 = *(void *)(a2 + 160);
  uint64_t v29 = *(void *)(a2 + 168);
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v20 = sub_25B290FB0();
    uint64_t result = 0;
    if ((v20 & 1) == 0) {
      return result;
    }
  }
  if (v2 == v11 && v3 == v10)
  {
    uint64_t result = 0;
  }
  else
  {
    char v22 = sub_25B290FB0();
    uint64_t result = 0;
    if ((v22 & 1) == 0) {
      return result;
    }
  }
  if (v4 != v13 || v5 != v12 || v50 != v14) {
    return result;
  }
  if (v49)
  {
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (v19) {
      return 0;
    }
    uint64_t result = 0;
    if (v7 != v16 || v6 != v15 || v9 != v18) {
      return result;
    }
    if (v44)
    {
      if ((v43 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if ((v43 & 1) != 0 || v8 != v17) {
        return result;
      }
    }
  }
  if ((sub_25B1B8420(v48, v47) & 1) == 0 || (sub_25B1B8438(v46, v45) & 1) == 0) {
    return 0;
  }
  if (v42 >> 60 == 15)
  {
    unint64_t v23 = v41;
    if (v41 >> 60 == 15) {
      goto LABEL_33;
    }
LABEL_31:
    sub_25B1142EC(v40, v42);
    sub_25B1142EC(v39, v23);
    sub_25B111FF0(v40, v42);
    sub_25B111FF0(v39, v23);
    return 0;
  }
  unint64_t v23 = v41;
  if (v41 >> 60 == 15) {
    goto LABEL_31;
  }
  sub_25B1142EC(v40, v42);
  sub_25B1142EC(v39, v41);
  char v24 = sub_25B1BBDD0(v40, v42, v39, v41);
  sub_25B111FF0(v39, v41);
  sub_25B111FF0(v40, v42);
  if ((v24 & 1) == 0) {
    return 0;
  }
LABEL_33:
  if (v37)
  {
    if (!v38) {
      return 0;
    }
    if (v34 != v33 || v37 != v38)
    {
      char v25 = sub_25B290FB0();
      uint64_t result = 0;
      if ((v25 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v38)
  {
    return 0;
  }
  if (!v36)
  {
    if (!v35) {
      goto LABEL_47;
    }
    return 0;
  }
  if (!v35) {
    return 0;
  }
  if (v32 == v31 && v36 == v35 || (v26 = sub_25B290FB0(), uint64_t result = 0, (v26 & 1) != 0))
  {
LABEL_47:
    if (v30)
    {
      if (v29 && (v28 == v27 && v30 == v29 || (sub_25B290FB0() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v29)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_25B196964()
{
  unint64_t result = qword_26A4DA768;
  if (!qword_26A4DA768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA768);
  }
  return result;
}

unint64_t sub_25B1969B8()
{
  unint64_t result = qword_26A4D93D0;
  if (!qword_26A4D93D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D93D0);
  }
  return result;
}

unint64_t sub_25B196A0C()
{
  unint64_t result = qword_26A4D92B8;
  if (!qword_26A4D92B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D92B8);
  }
  return result;
}

unint64_t sub_25B196A60()
{
  unint64_t result = qword_26A4D9430;
  if (!qword_26A4D9430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9430);
  }
  return result;
}

unint64_t sub_25B196AB4()
{
  unint64_t result = qword_26A4D91E0;
  if (!qword_26A4D91E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D91E0);
  }
  return result;
}

unint64_t sub_25B196B08()
{
  unint64_t result = qword_26A4D9840;
  if (!qword_26A4D9840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9840);
  }
  return result;
}

unint64_t sub_25B196B5C()
{
  unint64_t result = qword_26A4D9858;
  if (!qword_26A4D9858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9858);
  }
  return result;
}

uint64_t sub_25B196BB0(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26A4D9A10);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25B196C38()
{
  unint64_t result = qword_26A4D9320;
  if (!qword_26A4D9320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9320);
  }
  return result;
}

unint64_t sub_25B196C8C()
{
  unint64_t result = qword_26A4D9338;
  if (!qword_26A4D9338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9338);
  }
  return result;
}

unint64_t sub_25B196CE0()
{
  unint64_t result = qword_26A4D93C8;
  if (!qword_26A4D93C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D93C8);
  }
  return result;
}

unint64_t sub_25B196D34()
{
  unint64_t result = qword_26A4D9290;
  if (!qword_26A4D9290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9290);
  }
  return result;
}

uint64_t sub_25B196D88(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4D9A30);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25B196E10()
{
  unint64_t result = qword_26A4D9820;
  if (!qword_26A4D9820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9820);
  }
  return result;
}

unint64_t sub_25B196E64()
{
  unint64_t result = qword_26A4D9848;
  if (!qword_26A4D9848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9848);
  }
  return result;
}

unint64_t sub_25B196EB8()
{
  unint64_t result = qword_26A4D9308;
  if (!qword_26A4D9308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9308);
  }
  return result;
}

unint64_t sub_25B196F0C()
{
  unint64_t result = qword_26A4D9330;
  if (!qword_26A4D9330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9330);
  }
  return result;
}

unint64_t sub_25B196F60()
{
  unint64_t result = qword_26A4D9E90;
  if (!qword_26A4D9E90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26A4D9E80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9E90);
  }
  return result;
}

unint64_t sub_25B196FCC()
{
  unint64_t result = qword_26A4D91D0;
  if (!qword_26A4D91D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D91D0);
  }
  return result;
}

unint64_t sub_25B197020()
{
  unint64_t result = qword_26A4D9420;
  if (!qword_26A4D9420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9420);
  }
  return result;
}

uint64_t sub_25B197074()
{
  return MEMORY[0x263F8D320];
}

uint64_t initializeBufferWithCopyOfBuffer for HandshakeDescriptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ZoneVersionAdvertisement.DeviceDescriptor(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(a1 + 120);
  if (v2 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(a1 + 112), v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ZoneVersionAdvertisement.DeviceDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  double v7 = (uint64_t *)(a2 + 112);
  unint64_t v8 = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)v7;
  }
  else
  {
    uint64_t v9 = *v7;
    sub_25B114300(*v7, v8);
    *(void *)(a1 + 112) = v9;
    *(void *)(a1 + 120) = v8;
  }
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  uint64_t v12 = *(void *)(a2 + 160);
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = v12;
  *(void *)(a1 + 168) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ZoneVersionAdvertisement.DeviceDescriptor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v4 = *(_OWORD *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t *)(a2 + 112);
  unint64_t v7 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120) >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      uint64_t v9 = *v6;
      sub_25B114300(*v6, *(void *)(a2 + 120));
      uint64_t v10 = *(void *)(a1 + 112);
      unint64_t v11 = *(void *)(a1 + 120);
      *(void *)(a1 + 112) = v9;
      *(void *)(a1 + 120) = v7;
      sub_25B10DFF0(v10, v11);
      goto LABEL_8;
    }
    sub_25B1973E4(a1 + 112);
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 112) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  uint64_t v8 = *v6;
  sub_25B114300(*v6, *(void *)(a2 + 120));
  *(void *)(a1 + 112) = v8;
  *(void *)(a1 + 120) = v7;
LABEL_8:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25B1973E4(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for ZoneVersionAdvertisement.DeviceDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  long long v6 = (void *)(a2 + 112);
  unint64_t v7 = *(void *)(a1 + 120);
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 120);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *(void *)(a1 + 112);
      *(void *)(a1 + 112) = *v6;
      *(void *)(a1 + 120) = v8;
      sub_25B10DFF0(v9, v7);
      goto LABEL_6;
    }
    sub_25B1973E4(a1 + 112);
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)v6;
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ZoneVersionAdvertisement.DeviceDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ZoneVersionAdvertisement.DeviceDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceDescriptor()
{
  return &type metadata for DeviceDescriptor;
}

uint64_t getEnumTagSinglePayload for DeviceDescriptor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DeviceDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *__n128 result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B1977A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 11;
        break;
    }
  }
  return result;
}

unsigned char *sub_25B1977C8(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DeviceDescriptor.CodingKeys()
{
  return &type metadata for DeviceDescriptor.CodingKeys;
}

unint64_t sub_25B1977E4()
{
  unint64_t result = qword_26A4DA778;
  if (!qword_26A4DA778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA778);
  }
  return result;
}

unint64_t sub_25B19783C()
{
  unint64_t result = qword_26A4DA780;
  if (!qword_26A4DA780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA780);
  }
  return result;
}

unint64_t sub_25B197894()
{
  unint64_t result = qword_26A4DA788;
  if (!qword_26A4DA788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA788);
  }
  return result;
}

uint64_t sub_25B1978E8()
{
  unint64_t v0 = sub_25B290C30();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

uint64_t sub_25B197934(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25B197990(uint64_t a1)
{
  return a1;
}

_OWORD *sub_25B1979E4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_25B1979F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B197A5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B197AC4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9880);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B197B24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_25B197B84(uint64_t a1, unint64_t a2, void (*a3)(void))
{
  if (!a2)
  {
    a3();
    return;
  }
  if (qword_26A4D9F18 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_25B290190();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A4EB1C0);
  swift_bridgeObjectRetain_n();
  unsigned int v6 = sub_25B290160();
  os_log_type_t v7 = sub_25B2908A0();
  if (os_log_type_enabled(v6, v7))
  {
    int v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v28 = v9;
    *(_DWORD *)int v8 = 136446210;
    swift_bridgeObjectRetain();
    sub_25B288E98(a1, a2, &v28);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v6, v7, "Changing persona to %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v9, -1, -1);
    MEMORY[0x261160890](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_currentPersona);
  if (!v11)
  {
    __break(1u);
LABEL_24:

    __break(1u);
    goto LABEL_25;
  }
  uint64_t v12 = v11;
  unsigned int v6 = objc_msgSend(v11, sel_userPersonaUniqueString);

  if (v6)
  {
    uint64_t v26 = sub_25B2905C0();
    unint64_t v14 = v13;
  }
  else
  {
    uint64_t v26 = 0;
    unint64_t v14 = 0;
  }
  id v15 = objc_msgSend(v10, sel_currentPersona);
  if (!v15) {
    goto LABEL_24;
  }
  double v16 = v15;
  double v17 = (void *)sub_25B290590();

  a3();
  id v18 = objc_msgSend(v10, sel_currentPersona);
  if (!v18)
  {
LABEL_25:

    __break(1u);
    return;
  }
  char v19 = v18;

  swift_bridgeObjectRetain();
  char v20 = sub_25B290160();
  os_log_type_t v21 = sub_25B2908A0();
  if (os_log_type_enabled(v20, v21))
  {
    char v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v28 = v23;
    *(_DWORD *)char v22 = 136446210;
    if (v14) {
      uint64_t v24 = v26;
    }
    else {
      uint64_t v24 = 7104878;
    }
    if (v14) {
      unint64_t v25 = v14;
    }
    else {
      unint64_t v25 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    sub_25B288E98(v24, v25, &v28);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v20, v21, "Reverting persona back to %{public}s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v23, -1, -1);
    MEMORY[0x261160890](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_25B197FC0(uint64_t a1, unint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (!a2)
  {
    a3(&v31);
    return;
  }
  if (qword_26A4D9F18 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_25B290190();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A4EB1C0);
  swift_bridgeObjectRetain_n();
  unsigned int v6 = sub_25B290160();
  os_log_type_t v7 = sub_25B2908A0();
  if (os_log_type_enabled(v6, v7))
  {
    int v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v31 = v9;
    *(_DWORD *)int v8 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_25B288E98(a1, a2, &v31);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v6, v7, "Changing persona to %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v9, -1, -1);
    MEMORY[0x261160890](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_currentPersona);
  if (!v11)
  {
    __break(1u);
LABEL_24:

    __break(1u);
    goto LABEL_25;
  }
  uint64_t v12 = v11;
  unsigned int v6 = objc_msgSend(v11, sel_userPersonaUniqueString);

  if (v6)
  {
    uint64_t v27 = sub_25B2905C0();
    unint64_t v14 = v13;
    id v15 = objc_msgSend(v10, sel_currentPersona, v27);
  }
  else
  {
    unint64_t v14 = 0;
    id v15 = objc_msgSend(v10, sel_currentPersona, 0);
  }
  id v16 = v15;
  if (!v16) {
    goto LABEL_24;
  }
  double v17 = v16;
  id v18 = (void *)sub_25B290590();

  a3(&v31);
  id v19 = objc_msgSend(v10, sel_currentPersona);
  if (!v19)
  {
LABEL_25:

    __break(1u);
    return;
  }
  char v20 = v19;

  swift_bridgeObjectRetain();
  os_log_type_t v21 = sub_25B290160();
  os_log_type_t v22 = sub_25B2908A0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v30 = v24;
    *(_DWORD *)uint64_t v23 = 136446210;
    if (v14) {
      uint64_t v25 = v28;
    }
    else {
      uint64_t v25 = 7104878;
    }
    if (v14) {
      unint64_t v26 = v14;
    }
    else {
      unint64_t v26 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    sub_25B288E98(v25, v26, &v30);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v21, v22, "Reverting persona back to %{public}s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v24, -1, -1);
    MEMORY[0x261160890](v23, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_25B198400(uint64_t a1, unint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (!a2)
  {
    a3(&v28);
    return;
  }
  if (qword_26A4D9F18 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_25B290190();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A4EB1C0);
  swift_bridgeObjectRetain_n();
  unsigned int v6 = sub_25B290160();
  os_log_type_t v7 = sub_25B2908A0();
  if (os_log_type_enabled(v6, v7))
  {
    int v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v28 = v9;
    *(_DWORD *)int v8 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_25B288E98(a1, a2, &v28);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v6, v7, "Changing persona to %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v9, -1, -1);
    MEMORY[0x261160890](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_currentPersona);
  if (!v11)
  {
    __break(1u);
LABEL_24:

    __break(1u);
    goto LABEL_25;
  }
  uint64_t v12 = v11;
  unsigned int v6 = objc_msgSend(v11, sel_userPersonaUniqueString);

  if (v6)
  {
    uint64_t v26 = sub_25B2905C0();
    unint64_t v14 = v13;
  }
  else
  {
    uint64_t v26 = 0;
    unint64_t v14 = 0;
  }
  id v15 = objc_msgSend(v10, sel_currentPersona);
  if (!v15) {
    goto LABEL_24;
  }
  id v16 = v15;
  double v17 = (void *)sub_25B290590();

  a3(&v28);
  id v18 = objc_msgSend(v10, sel_currentPersona);
  if (!v18)
  {
LABEL_25:

    __break(1u);
    return;
  }
  id v19 = v18;

  swift_bridgeObjectRetain();
  char v20 = sub_25B290160();
  os_log_type_t v21 = sub_25B2908A0();
  if (os_log_type_enabled(v20, v21))
  {
    os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v29 = v23;
    *(_DWORD *)os_log_type_t v22 = 136446210;
    if (v14) {
      uint64_t v24 = v26;
    }
    else {
      uint64_t v24 = 7104878;
    }
    if (v14) {
      unint64_t v25 = v14;
    }
    else {
      unint64_t v25 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    sub_25B288E98(v24, v25, &v29);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v20, v21, "Reverting persona back to %{public}s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v23, -1, -1);
    MEMORY[0x261160890](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_25B198844(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for NetworkBrowser.Monitor();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v36 = (uint64_t)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v35 = (uint64_t)v29 - v6;
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (!v7) {
    return v8;
  }
  v29[1] = v1;
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_25B224234(0, v7, 0);
  uint64_t result = sub_25B1A7EF4(a1);
  uint64_t v11 = result;
  uint64_t v12 = 0;
  uint64_t v13 = a1 + 64;
  uint64_t v30 = a1 + 80;
  int64_t v31 = v7;
  uint64_t v33 = a1 + 64;
  uint64_t v34 = a1;
  uint64_t v32 = v10;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v16 = (unint64_t)v11 >> 6;
    if ((*(void *)(v13 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0) {
      goto LABEL_28;
    }
    if (*(_DWORD *)(a1 + 36) != v10) {
      goto LABEL_29;
    }
    uint64_t v17 = v35;
    sub_25B1A8FE8(*(void *)(a1 + 56) + *(void *)(v37 + 72) * v11, v35, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    uint64_t v18 = v36;
    sub_25B1A9050(v17, v36, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    uint64_t v19 = *(void *)(v18 + 24);
    if (v19) {
      uint64_t v20 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v20 = 0;
    }
    swift_bridgeObjectRetain();
    sub_25B1A8124(v18);
    uint64_t v8 = v38;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_25B224234(0, *(void *)(v8 + 16) + 1, 1);
      uint64_t v8 = v38;
    }
    unint64_t v22 = *(void *)(v8 + 16);
    unint64_t v21 = *(void *)(v8 + 24);
    if (v22 >= v21 >> 1)
    {
      uint64_t result = sub_25B224234(v21 > 1, v22 + 1, 1);
      uint64_t v8 = v38;
    }
    *(void *)(v8 + 16) = v22 + 1;
    uint64_t v23 = v8 + 16 * v22;
    *(void *)(v23 + 32) = v20;
    *(void *)(v23 + 40) = v19;
    a1 = v34;
    int64_t v14 = 1 << *(unsigned char *)(v34 + 32);
    if (v11 >= v14) {
      goto LABEL_30;
    }
    uint64_t v13 = v33;
    uint64_t v24 = *(void *)(v33 + 8 * v16);
    if ((v24 & (1 << v11)) == 0) {
      goto LABEL_31;
    }
    LODWORD(v10) = v32;
    if (*(_DWORD *)(v34 + 36) != v32) {
      goto LABEL_32;
    }
    unint64_t v25 = v24 & (-2 << (v11 & 0x3F));
    if (v25)
    {
      int64_t v14 = __clz(__rbit64(v25)) | v11 & 0xFFFFFFFFFFFFFFC0;
      int64_t v15 = v31;
    }
    else
    {
      unint64_t v26 = v16 + 1;
      unint64_t v27 = (unint64_t)(v14 + 63) >> 6;
      int64_t v15 = v31;
      if (v16 + 1 < v27)
      {
        unint64_t v28 = *(void *)(v33 + 8 * v26);
        if (v28)
        {
LABEL_25:
          int64_t v14 = __clz(__rbit64(v28)) + (v26 << 6);
        }
        else
        {
          while (v27 - 2 != v16)
          {
            unint64_t v28 = *(void *)(v30 + 8 * v16++);
            if (v28)
            {
              unint64_t v26 = v16 + 1;
              goto LABEL_25;
            }
          }
        }
      }
    }
    ++v12;
    uint64_t v11 = v14;
    if (v12 == v15) {
      return v8;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_25B198B70()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_25B291210();
  sub_25B291220();
  if (v1) {
    sub_25B290630();
  }
  return sub_25B291260();
}

uint64_t sub_25B198BE0()
{
  if (!*(void *)(v0 + 8)) {
    return sub_25B291220();
  }
  sub_25B291220();
  return sub_25B290630();
}

uint64_t sub_25B198C58()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_25B291210();
  sub_25B291220();
  if (v1) {
    sub_25B290630();
  }
  return sub_25B291260();
}

uint64_t sub_25B198CC4(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3) {
    return v4 == 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  else {
    return sub_25B290FB0();
  }
}

uint64_t sub_25B198D10()
{
  uint64_t v1 = (uint64_t *)(v0 + 56);
  swift_beginAccess();
  uint64_t v31 = v0;
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v33 = v2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v2 + 64);
  int64_t v34 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v32 = v2;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_21;
    }
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v10 >= v34) {
      goto LABEL_30;
    }
    unint64_t v11 = *(void *)(v33 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v34) {
        goto LABEL_30;
      }
      unint64_t v11 = *(void *)(v33 + 8 * v7);
      if (!v11)
      {
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v34) {
          goto LABEL_30;
        }
        unint64_t v11 = *(void *)(v33 + 8 * v7);
        if (!v11) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_21:
    uint64_t v13 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v9);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    unint64_t v16 = *(NSObject **)(*(void *)(v2 + 56) + 8 * v9);
    uint64_t v17 = qword_26A4D98C8;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_25B290190();
    __swift_project_value_buffer(v18, (uint64_t)qword_26A4EB168);
    swift_unknownObjectRetain_n();
    uint64_t v19 = sub_25B290160();
    os_log_type_t v20 = sub_25B2908A0();
    int64_t v35 = v7;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v37[0] = v22;
      *(_DWORD *)uint64_t v21 = 136446210;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
      uint64_t v23 = sub_25B290600();
      *(void *)(v21 + 4) = sub_25B288E98(v23, v24, v37);
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v19, v20, "Canceling persona browser: %{public}s", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v22, -1, -1);
      uint64_t v25 = v21;
      uint64_t v2 = v32;
      MEMORY[0x261160890](v25, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    nw_browser_set_state_changed_handler(v16, 0);
    nw_browser_cancel(v16);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_25B18A9C0(v15, v14);
    char v28 = v27;
    swift_bridgeObjectRelease();
    if (v28)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v30 = *v1;
      uint64_t v36 = *v1;
      *uint64_t v1 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_25B1949AC();
        uint64_t v30 = v36;
      }
      swift_bridgeObjectRelease();
      sub_25B21F40C(v26, v30);
      *uint64_t v1 = v30;
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    int64_t v7 = v35;
    swift_endAccess();
    uint64_t result = swift_unknownObjectRelease();
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v34)
  {
LABEL_30:
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return v31;
  }
  unint64_t v11 = *(void *)(v33 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v34) {
      goto LABEL_30;
    }
    unint64_t v11 = *(void *)(v33 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_20;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_25B199180()
{
  sub_25B198D10();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NetworkBrowser()
{
  return self;
}

void *sub_25B1991D8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a2[6];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v11 = *(int *)(a3 + 32);
    uint64_t v17 = (char *)a1 + v11;
    int64_t v12 = (char *)a2 + v11;
    a1[6] = v10;
    uint64_t v13 = sub_25B290000();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v14(v17, v12, v13);
    *((unsigned char *)v4 + *(int *)(a3 + 36)) = *((unsigned char *)a2 + *(int *)(a3 + 36));
  }
  return v4;
}

uint64_t sub_25B199310(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_25B290000();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_25B199398(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v15 = (char *)a1 + v10;
  uint64_t v11 = (char *)a2 + v10;
  a1[6] = v9;
  uint64_t v12 = sub_25B290000();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v13(v15, v11, v12);
  *((unsigned char *)a1 + *(int *)(a3 + 36)) = *((unsigned char *)a2 + *(int *)(a3 + 36));
  return a1;
}

void *sub_25B199480(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_25B290000();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 36)) = *((unsigned char *)a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_25B199570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25B290000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 36)) = *(unsigned char *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_25B199618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_25B290000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(unsigned char *)(a1 + *(int *)(a3 + 36)) = *(unsigned char *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_25B1996E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B1996F4);
}

uint64_t sub_25B1996F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25B290000();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25B1997A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B1997B8);
}

uint64_t sub_25B1997B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25B290000();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for NetworkBrowser.Monitor()
{
  uint64_t result = qword_26A4DA870;
  if (!qword_26A4DA870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25B1998AC()
{
  uint64_t result = sub_25B290000();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for NetworkBrowser.MonitoredPersona(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for NetworkBrowser.MonitoredPersona()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for NetworkBrowser.MonitoredPersona(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for NetworkBrowser.MonitoredPersona(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkBrowser.MonitoredPersona(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NetworkBrowser.MonitoredPersona(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void *sub_25B199AC4(void *result, int a2)
{
  if (a2 < 0)
  {
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkBrowser.MonitoredPersona()
{
  return &type metadata for NetworkBrowser.MonitoredPersona;
}

unint64_t sub_25B199AF8()
{
  unint64_t result = qword_26A4DA888;
  if (!qword_26A4DA888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA888);
  }
  return result;
}

uint64_t sub_25B199B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, char *, uint64_t), uint64_t a6, double a7)
{
  uint64_t v43 = a3;
  char v44 = a5;
  uint64_t v42 = a1;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB1B0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v49 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for NetworkBrowser.Monitor();
  uint64_t v48 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_25B290080();
  int v50 = *(void **)(v41 - 8);
  uint64_t v16 = v50[8];
  uint64_t v17 = MEMORY[0x270FA5388](v41);
  uint64_t v18 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  os_log_type_t v20 = (char *)&v41 - v19;
  sub_25B290070();
  uint64_t v47 = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25B28FFD0();
  *(void *)uint64_t v15 = v42;
  *((void *)v15 + 1) = a2;
  *((void *)v15 + 2) = v43;
  *((void *)v15 + 3) = a4;
  *((double *)v15 + 4) = a7;
  *((void *)v15 + 5) = v44;
  *((void *)v15 + 6) = a6;
  v15[*(int *)(v13 + 36)] = 0;
  uint64_t v45 = v20;
  uint64_t v43 = sub_25B290020();
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = v50;
  char v44 = (void (*)(char *, char *, uint64_t))v50[2];
  uint64_t v23 = v41;
  v44(v18, v20, v41);
  unint64_t v24 = v22;
  unint64_t v25 = (*((unsigned __int8 *)v22 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v22 + 80);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v21;
  ((void (*)(unint64_t, char *, uint64_t))v24[4])(v26 + v25, v18, v23);
  id v27 = objc_allocWithZone(MEMORY[0x263F29CD8]);
  swift_retain();
  char v28 = (void *)sub_25B290590();
  swift_bridgeObjectRelease();
  uint64_t v29 = (void *)sub_25B290590();
  aBlock[4] = sub_25B1A1518;
  void aBlock[5] = v26;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B1A158C;
  aBlock[3] = &block_descriptor_3;
  uint64_t v30 = _Block_copy(aBlock);
  id v31 = objc_msgSend(v27, sel_initWithIdentifier_forReason_invalidationBlock_, v28, v29, v30);

  _Block_release(v30);
  swift_release();
  swift_release();
  uint64_t v33 = v44;
  uint64_t v32 = v45;
  uint64_t v34 = v23;
  v44(v18, v45, v23);
  uint64_t v35 = v49;
  sub_25B1A8FE8((uint64_t)v15, v49, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v35, 0, 1, v47);
  uint64_t v36 = v46;
  swift_beginAccess();
  sub_25B20E9DC(v35, (uint64_t)v18);
  swift_endAccess();
  sub_25B19B9FC();
  v33(v18, v32, v34);
  swift_beginAccess();
  id v37 = v31;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v51 = *(void *)(v36 + 80);
  *(void *)(v36 + 80) = 0x8000000000000000;
  sub_25B1A7F7C((uint64_t)v37, (uint64_t)v18, isUniquelyReferenced_nonNull_native, &v51);
  *(void *)(v36 + 80) = v51;
  swift_bridgeObjectRelease();
  uint64_t v39 = (void (*)(char *, uint64_t))v50[1];
  v39(v18, v34);
  swift_endAccess();
  sub_25B19AD24();

  sub_25B1A8124((uint64_t)v15);
  return ((uint64_t (*)(char *, uint64_t))v39)(v32, v34);
}

uint64_t sub_25B19A074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_25B290320();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v23 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25B290360();
  uint64_t v22 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25B290080();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v20 = *(void *)(result + 24);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v10);
    uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v21 = v7;
    uint64_t v16 = (v15 + 24) & ~v15;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v14;
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v17 + v16, (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    aBlock[4] = sub_25B1A8EE0;
    void aBlock[5] = v17;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_25B10F584;
    aBlock[3] = &block_descriptor_26_0;
    uint64_t v18 = _Block_copy(aBlock);
    swift_retain();
    sub_25B290340();
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_25B1A8FA0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1A8F44();
    uint64_t v19 = v23;
    sub_25B290A00();
    MEMORY[0x26115F250](0, v9, v19, v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v19, v4);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v21);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_25B19A414(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (os_unfair_lock_s *)(*(void *)(a1 + 16) + 16);
  os_unfair_lock_lock(v4);
  sub_25B19A47C(a2, a1);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_25B19A47C(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB1B0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v36 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v35 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v31 - v10;
  if (qword_26A4D98C8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_25B290190();
  __swift_project_value_buffer(v12, (uint64_t)qword_26A4EB168);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v37 = a1;
  uint64_t v34 = v13;
  v13(v11, a1, v6);
  uint64_t v14 = sub_25B290160();
  os_log_type_t v15 = sub_25B2908A0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = v2;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v32 = swift_slowAlloc();
    v39[0] = v32;
    *(_DWORD *)uint64_t v17 = 136446210;
    v31[1] = v17 + 4;
    sub_25B1A8FA0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
    uint64_t v18 = sub_25B290DB0();
    v39[4] = sub_25B288E98(v18, v19, v39);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    _os_log_impl(&dword_25B107000, v14, v15, "Invalidating browser monitor: %{public}s", v17, 0xCu);
    uint64_t v20 = v32;
    swift_arrayDestroy();
    MEMORY[0x261160890](v20, -1, -1);
    MEMORY[0x261160890](v17, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }

  uint64_t v21 = (uint64_t)v35;
  uint64_t v22 = v37;
  v34(v35, v37, v6);
  uint64_t v23 = type metadata accessor for NetworkBrowser.Monitor();
  uint64_t v24 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v36, 1, 1, v23);
  uint64_t v25 = v38;
  swift_beginAccess();
  sub_25B20E9DC(v24, v21);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v26 = *(void *)(v25 + 80);
  if (*(void *)(v26 + 16) && (unint64_t v27 = sub_25B18A93C(v22), (v28 & 1) != 0))
  {
    uint64_t v29 = *(void **)(*(void *)(v26 + 56) + 8 * v27);
    swift_endAccess();
    objc_msgSend(v29, sel_invalidate);
  }
  else
  {
    swift_endAccess();
  }
  swift_beginAccess();
  sub_25B21D13C(v22);
  swift_endAccess();
  swift_unknownObjectRelease();
  sub_25B19A8CC();
  return sub_25B19AD24();
}

uint64_t sub_25B19A8CC()
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v0[2] + 16));
  uint64_t result = swift_beginAccess();
  if (*(void *)(v0[8] + 16)) {
    return result;
  }
  uint64_t v2 = v0 + 7;
  swift_beginAccess();
  uint64_t v3 = v0[7];
  uint64_t v32 = v3 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v3 + 64);
  int64_t v33 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v31 = v3;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_22;
    }
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v10 >= v33) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v32 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v33) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v32 + 8 * v7);
      if (!v11)
      {
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v33) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v32 + 8 * v7);
        if (!v11) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_22:
    uint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = *(NSObject **)(*(void *)(v3 + 56) + 8 * v9);
    uint64_t v17 = qword_26A4D98C8;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_25B290190();
    __swift_project_value_buffer(v18, (uint64_t)qword_26A4EB168);
    swift_unknownObjectRetain_n();
    unint64_t v19 = sub_25B290160();
    os_log_type_t v20 = sub_25B2908A0();
    int64_t v34 = v7;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v36[0] = v22;
      *(_DWORD *)uint64_t v21 = 136446210;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
      uint64_t v23 = sub_25B290600();
      *(void *)(v21 + 4) = sub_25B288E98(v23, v24, v36);
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v19, v20, "Canceling browser: %{public}s", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v22, -1, -1);
      uint64_t v25 = v21;
      uint64_t v3 = v31;
      MEMORY[0x261160890](v25, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    nw_browser_set_state_changed_handler(v16, 0);
    nw_browser_cancel(v16);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_25B18A9C0(v14, v15);
    char v28 = v27;
    swift_bridgeObjectRelease();
    if (v28)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v30 = *v2;
      uint64_t v35 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_25B1949AC();
        uint64_t v30 = v35;
      }
      swift_bridgeObjectRelease();
      sub_25B21F40C(v26, v30);
      *uint64_t v2 = v30;
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    int64_t v7 = v34;
    swift_endAccess();
    uint64_t result = swift_unknownObjectRelease();
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v33) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v32 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v33) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v32 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_25B19AD24()
{
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
  uint64_t v2 = MEMORY[0x270FA5388](v121);
  int v105 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v98 - v5;
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  unint64_t v9 = (char *)&v98 - v8;
  MEMORY[0x270FA5388](v7);
  long long v115 = (char *)&v98 - v10;
  uint64_t v112 = sub_25B290000();
  uint64_t v11 = *(void *)(v112 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v112 - 8);
  uint64_t v101 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v98 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  unint64_t v19 = (char *)&v98 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v107 = (char *)&v98 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  char v104 = (char *)&v98 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v109 = (char *)&v98 - v25;
  MEMORY[0x270FA5388](v24);
  char v27 = (char *)&v98 - v26;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(*(void *)(v0 + 16) + 16));
  char v28 = (uint64_t *)(v0 + 72);
  swift_beginAccess();
  uint64_t v102 = v0;
  uint64_t v29 = *(void *)(v0 + 72);
  int v100 = v16;
  if (v29)
  {
    swift_retain();
    sub_25B1C7520();
    swift_release();
  }
  uint64_t v30 = v102;
  *(void *)(v102 + 72) = 0;
  swift_release();
  swift_beginAccess();
  uint64_t v31 = *(void *)(v30 + 64);
  swift_bridgeObjectRetain();
  sub_25B28FF40();
  uint64_t v32 = *(void *)(v31 + 64);
  uint64_t v110 = v31 + 64;
  uint64_t v33 = 1 << *(unsigned char *)(v31 + 32);
  uint64_t v34 = -1;
  if (v33 < 64) {
    uint64_t v34 = ~(-1 << v33);
  }
  unint64_t v35 = v34 & v32;
  int64_t v111 = (unint64_t)(v33 + 63) >> 6;
  unint64_t v108 = (void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v106 = (void (**)(char *, uint64_t))(v11 + 8);
  unint64_t v103 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v118 = v31;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v37 = 0;
  long long v117 = v27;
  int v99 = v28;
  long long v116 = v19;
  long long v120 = v9;
  while (1)
  {
    if (v35)
    {
      uint64_t v122 = (v35 - 1) & v35;
      int64_t v123 = v37;
      unint64_t v38 = __clz(__rbit64(v35)) | (v37 << 6);
      goto LABEL_29;
    }
    int64_t v39 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    uint64_t v1 = v112;
    if (v39 >= v111) {
      goto LABEL_32;
    }
    unint64_t v40 = *(void *)(v110 + 8 * v39);
    int64_t v41 = v37 + 1;
    if (v40) {
      goto LABEL_28;
    }
    int64_t v41 = v37 + 2;
    if (v37 + 2 >= v111) {
      goto LABEL_32;
    }
    unint64_t v40 = *(void *)(v110 + 8 * v41);
    if (v40) {
      goto LABEL_28;
    }
    int64_t v41 = v37 + 3;
    if (v37 + 3 >= v111) {
      goto LABEL_32;
    }
    unint64_t v40 = *(void *)(v110 + 8 * v41);
    if (v40) {
      goto LABEL_28;
    }
    int64_t v41 = v37 + 4;
    if (v37 + 4 >= v111) {
      goto LABEL_32;
    }
    unint64_t v40 = *(void *)(v110 + 8 * v41);
    if (v40) {
      goto LABEL_28;
    }
    int64_t v41 = v37 + 5;
    if (v37 + 5 >= v111) {
      goto LABEL_32;
    }
    unint64_t v40 = *(void *)(v110 + 8 * v41);
    if (v40) {
      goto LABEL_28;
    }
    uint64_t v42 = v37 + 6;
    if (v37 + 6 >= v111)
    {
LABEL_32:
      swift_release();
      (*v103)(v27, v109, v1);
      swift_bridgeObjectRelease();
      if (qword_26A4D98C8 == -1)
      {
LABEL_33:
        uint64_t v71 = sub_25B290190();
        __swift_project_value_buffer(v71, (uint64_t)qword_26A4EB168);
        uint64_t v72 = *v108;
        (*v108)(v19, v27, v1);
        uint64_t v73 = sub_25B290160();
        os_log_type_t v74 = sub_25B2908A0();
        if (os_log_type_enabled(v73, v74))
        {
          long long v75 = (uint8_t *)swift_slowAlloc();
          uint64_t v76 = swift_slowAlloc();
          long long v124 = v72;
          long long v77 = v19;
          uint64_t v78 = v76;
          *(void *)&long long v126 = v76;
          *(_DWORD *)long long v75 = 136446210;
          sub_25B1A8FA0((unint64_t *)&qword_26A4DB020, MEMORY[0x263F07490]);
          uint64_t v79 = sub_25B290DB0();
          uint64_t v125 = sub_25B288E98(v79, v80, (uint64_t *)&v126);
          sub_25B2909C0();
          swift_bridgeObjectRelease();
          long long v81 = *v106;
          long long v82 = v77;
          uint64_t v72 = v124;
          (*v106)(v82, v1);
          _os_log_impl(&dword_25B107000, v73, v74, "Browser invalidation timer will fire at %{public}s", v75, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x261160890](v78, -1, -1);
          long long v83 = v75;
          char v27 = v117;
          MEMORY[0x261160890](v83, -1, -1);
        }
        else
        {
          long long v81 = *v106;
          (*v106)(v19, v1);
        }

        long long v84 = v107;
        sub_25B28FF40();
        char v85 = sub_25B28FF80();
        v81(v84, v1);
        if ((v85 & 1) == 0) {
          return ((uint64_t (*)(char *, uint64_t))v81)(v27, v1);
        }
        unint64_t v86 = v100;
        sub_25B28FFD0();
        sub_25B1A8FA0(&qword_26A4DB030, MEMORY[0x263F07490]);
        if (sub_25B290570()) {
          uint64_t v87 = v27;
        }
        else {
          uint64_t v87 = v86;
        }
        v72(v101, v87, v1);
        sub_25B28FF50();
        double v89 = v88;
        uint64_t v90 = type metadata accessor for BasicTimer();
        uint64_t v91 = swift_allocObject();
        *(void *)(v91 + 16) = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
        uint64_t v92 = swift_allocObject();
        *(_DWORD *)(v92 + 16) = 0;
        *(void *)(v91 + 24) = v92;
        uint64_t v127 = v90;
        uint64_t v128 = &protocol witness table for BasicTimer;
        *(void *)&long long v126 = v91;
        type metadata accessor for KeepAliveTimer();
        uint64_t v93 = swift_allocObject();
        *(void *)(v93 + 56) = 0;
        sub_25B180BD4(&v126, v93 + 16);
        long long v94 = v99;
        uint64_t *v99 = v93;
        swift_release();
        swift_beginAccess();
        if (*v94)
        {
          swift_endAccess();
          uint64_t v95 = *(void *)(v102 + 24);
          long long v96 = v27;
          uint64_t v97 = swift_allocObject();
          swift_weakInit();
          swift_retain();
          swift_retain();
          sub_25B1C72C8(v95, (uint64_t)sub_25B1A8180, v97, fmax(v89, 1.0));
          swift_release();
          swift_release();
          v81(v101, v1);
          v81(v86, v1);
          v81(v96, v1);
          return swift_release();
        }
        else
        {
          v81(v101, v1);
          v81(v86, v1);
          v81(v27, v1);
          return swift_endAccess();
        }
      }
LABEL_45:
      swift_once();
      goto LABEL_33;
    }
    unint64_t v40 = *(void *)(v110 + 8 * v42);
    if (!v40) {
      break;
    }
    int64_t v41 = v37 + 6;
LABEL_28:
    uint64_t v122 = (v40 - 1) & v40;
    int64_t v123 = v41;
    unint64_t v38 = __clz(__rbit64(v40)) + (v41 << 6);
LABEL_29:
    uint64_t v43 = v118;
    uint64_t v44 = *(void *)(v118 + 48);
    uint64_t v45 = sub_25B290080();
    uint64_t v46 = *(void *)(v45 - 8);
    uint64_t v47 = v46;
    uint64_t v48 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 16);
    uint64_t v49 = v115;
    v48(v115, v44 + *(void *)(v46 + 72) * v38, v45);
    uint64_t v50 = *(void *)(v43 + 56);
    uint64_t v51 = type metadata accessor for NetworkBrowser.Monitor();
    uint64_t v52 = v50 + *(void *)(*(void *)(v51 - 8) + 72) * v38;
    uint64_t v53 = v121;
    sub_25B1A8FE8(v52, (uint64_t)&v49[*(int *)(v121 + 48)], (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    uint64_t v54 = (uint64_t)v49;
    uint64_t v1 = (uint64_t)v120;
    sub_25B187574(v54, (uint64_t)v120, (uint64_t *)&unk_26A4DA890);
    uint64_t v55 = *(int *)(v53 + 48);
    uint64_t v56 = (uint64_t)&v6[v55];
    uint64_t v57 = v1 + v55;
    long long v124 = (void (*)(char *, char *, uint64_t))v48;
    v48(v6, v1, v45);
    sub_25B1A8FE8(v57, v56, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    char v58 = *(unsigned char *)(v56 + *(int *)(v51 + 36));
    sub_25B1A8124(v56);
    uint64_t v59 = *(void (**)(char *, uint64_t))(v47 + 8);
    uint64_t v119 = v47 + 8;
    v59(v6, v45);
    if ((v58 & 1) == 0)
    {
      uint64_t v60 = v121;
      uint64_t v61 = *(int *)(v121 + 48);
      uint64_t v114 = v59;
      uint64_t v62 = (uint64_t)&v6[v61];
      v124(v6, (char *)v1, v45);
      uint64_t v113 = type metadata accessor for NetworkBrowser.Monitor;
      sub_25B1A8FE8(v57, v62, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
      int v63 = v107;
      uint64_t v64 = v112;
      (*v108)(v107, (char *)(v62 + *(int *)(v51 + 32)), v112);
      sub_25B1A8124(v62);
      uint64_t v65 = v105;
      uint64_t v66 = (uint64_t)&v105[*(int *)(v60 + 48)];
      v124(v105, (char *)v1, v45);
      sub_25B1A8FE8(v57, v66, (uint64_t (*)(void))v113);
      sub_25B1A8124(v66);
      uint64_t v67 = v104;
      sub_25B28FF60();
      uint64_t v68 = *v106;
      (*v106)(v63, v64);
      uint64_t v69 = v114;
      v114(v65, v45);
      v69(v6, v45);
      uint64_t v70 = v109;
      if (sub_25B28FF80())
      {
        v68(v70, v64);
        (*v103)(v70, v67, v64);
      }
      else
      {
        v68(v67, v64);
      }
      uint64_t v1 = (uint64_t)v120;
    }
    uint64_t result = sub_25B116DE0(v1, (uint64_t *)&unk_26A4DA890);
    char v27 = v117;
    unint64_t v19 = v116;
    unint64_t v35 = v122;
    int64_t v37 = v123;
  }
  while (1)
  {
    int64_t v41 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      break;
    }
    if (v41 >= v111) {
      goto LABEL_32;
    }
    unint64_t v40 = *(void *)(v110 + 8 * v41);
    ++v42;
    if (v40) {
      goto LABEL_28;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25B19B9FC()
{
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
  uint64_t v1 = MEMORY[0x270FA5388](v81);
  unint64_t v80 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v79 = (void **)((char *)&v75 - v4);
  MEMORY[0x270FA5388](v3);
  uint64_t v78 = (char *)&v75 - v5;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(*(void *)(v0 + 16) + 16));
  swift_beginAccess();
  uint64_t v86 = v0;
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v76 = v6 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v77 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v82 = v6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v12 = 0;
  uint64_t v13 = (uint64_t)v79;
  uint64_t v14 = v80;
  do
  {
    if (v10)
    {
      uint64_t v83 = (v10 - 1) & v10;
      int64_t v84 = v12;
      unint64_t v15 = __clz(__rbit64(v10)) | (v12 << 6);
    }
    else
    {
      int64_t v29 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      if (v29 >= v77) {
        goto LABEL_27;
      }
      unint64_t v30 = *(void *)(v76 + 8 * v29);
      int64_t v31 = v12 + 1;
      if (!v30)
      {
        int64_t v31 = v12 + 2;
        if (v12 + 2 >= v77) {
          goto LABEL_27;
        }
        unint64_t v30 = *(void *)(v76 + 8 * v31);
        if (!v30)
        {
          int64_t v31 = v12 + 3;
          if (v12 + 3 >= v77) {
            goto LABEL_27;
          }
          unint64_t v30 = *(void *)(v76 + 8 * v31);
          if (!v30)
          {
            int64_t v31 = v12 + 4;
            if (v12 + 4 >= v77) {
              goto LABEL_27;
            }
            unint64_t v30 = *(void *)(v76 + 8 * v31);
            if (!v30)
            {
              int64_t v31 = v12 + 5;
              if (v12 + 5 >= v77) {
                goto LABEL_27;
              }
              unint64_t v30 = *(void *)(v76 + 8 * v31);
              if (!v30)
              {
                uint64_t v32 = v12 + 6;
                if (v12 + 6 >= v77) {
                  goto LABEL_27;
                }
                unint64_t v30 = *(void *)(v76 + 8 * v32);
                if (!v30)
                {
                  while (1)
                  {
                    int64_t v31 = v32 + 1;
                    if (__OFADD__(v32, 1)) {
                      goto LABEL_63;
                    }
                    if (v31 >= v77) {
                      break;
                    }
                    unint64_t v30 = *(void *)(v76 + 8 * v31);
                    ++v32;
                    if (v30) {
                      goto LABEL_24;
                    }
                  }
LABEL_27:
                  swift_release();
                  return swift_bridgeObjectRelease();
                }
                int64_t v31 = v12 + 6;
              }
            }
          }
        }
      }
LABEL_24:
      uint64_t v83 = (v30 - 1) & v30;
      int64_t v84 = v31;
      unint64_t v15 = __clz(__rbit64(v30)) + (v31 << 6);
    }
    uint64_t v16 = v82;
    uint64_t v17 = *(void *)(v82 + 48);
    uint64_t v18 = sub_25B290080();
    uint64_t v85 = *(void *)(v18 - 8);
    uint64_t v19 = v17 + *(void *)(v85 + 72) * v15;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
    uint64_t v21 = (uint64_t)v78;
    v20(v78, v19, v18);
    uint64_t v22 = *(void *)(v16 + 56);
    uint64_t v23 = (int *)(type metadata accessor for NetworkBrowser.Monitor() - 8);
    uint64_t v24 = v22 + *(void *)(*(void *)v23 + 72) * v15;
    uint64_t v25 = v81;
    sub_25B1A8FE8(v24, v21 + *(int *)(v81 + 48), (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    sub_25B187574(v21, v13, (uint64_t *)&unk_26A4DA890);
    uint64_t v26 = *(int *)(v25 + 48);
    uint64_t v27 = (uint64_t)&v14[v26];
    uint64_t v28 = v13 + v26;
    v20(v14, v13, v18);
    sub_25B1A8FE8(v28, v27, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    LOBYTE(v20) = *(unsigned char *)(v27 + v23[11]);
    sub_25B1A8124(v27);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v14, v18);
    uint64_t result = sub_25B116DE0(v13, (uint64_t *)&unk_26A4DA890);
    unint64_t v10 = v83;
    int64_t v12 = v84;
  }
  while ((v20 & 1) != 0);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v33 = v86;
  uint64_t v34 = swift_bridgeObjectRetain();
  uint64_t v35 = sub_25B198844(v34);
  uint64_t v85 = 0;
  swift_bridgeObjectRelease();
  uint64_t v36 = sub_25B228044(v35);
  swift_bridgeObjectRelease();
  uint64_t v81 = v33 + 56;
  swift_beginAccess();
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v38 = sub_25B20E16C(v37);
  if (*(void *)(v38 + 16) <= *(void *)(v36 + 16) >> 3)
  {
    uint64_t aBlock = v36;
    sub_25B1A4574(v38);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v39 = (uint64_t)aBlock;
  }
  else
  {
    uint64_t v39 = sub_25B1A5248(v38, v36);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v40 = 0;
  uint64_t v41 = *(void *)(v39 + 56);
  int64_t v77 = v39 + 56;
  uint64_t v42 = 1 << *(unsigned char *)(v39 + 32);
  uint64_t v43 = -1;
  if (v42 < 64) {
    uint64_t v43 = ~(-1 << v42);
  }
  unint64_t v44 = v43 & v41;
  uint64_t v78 = (char *)((unint64_t)(v42 + 63) >> 6);
  uint64_t v79 = &v90;
  unint64_t v80 = (char *)v39;
  if (!v44) {
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v83 = (v44 - 1) & v44;
  int64_t v84 = v40;
  for (unint64_t i = __clz(__rbit64(v44)) | (v40 << 6); ; unint64_t i = __clz(__rbit64(v48)) + (v47 << 6))
  {
    uint64_t v50 = (uint64_t *)(*(void *)(v39 + 48) + 16 * i);
    uint64_t v51 = *v50;
    uint64_t v52 = v50[1];
    uint64_t v82 = *v50;
    if (v52) {
      uint64_t v53 = v51;
    }
    else {
      uint64_t v53 = 0;
    }
    uint64_t v55 = *(void *)(v86 + 32);
    uint64_t v54 = *(void *)(v86 + 40);
    char v56 = *(unsigned char *)(v86 + 48);
    uint64_t v57 = qword_26A4D98C8;
    swift_bridgeObjectRetain_n();
    if (v57 != -1) {
      swift_once();
    }
    uint64_t v58 = sub_25B290190();
    __swift_project_value_buffer(v58, (uint64_t)qword_26A4EB168);
    uint64_t v59 = sub_25B290160();
    os_log_type_t v60 = sub_25B2908A0();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v61 = 0;
      _os_log_impl(&dword_25B107000, v59, v60, "Starting browser", v61, 2u);
      MEMORY[0x261160890](v61, -1, -1);
    }

    uint64_t v63 = MEMORY[0x270FA5388](v62);
    *(&v75 - 6) = v53;
    *(&v75 - 5) = v52;
    *(&v75 - 4) = v55;
    *(&v75 - 3) = v54;
    *((unsigned char *)&v75 - 16) = v56;
    if (qword_26A4D9F00 != -1) {
      uint64_t v63 = swift_once();
    }
    MEMORY[0x270FA5388](v63);
    *(&v75 - 4) = v53;
    *(&v75 - 3) = v52;
    *(&v75 - 2) = (uint64_t)sub_25B1A84B0;
    *(&v75 - 1) = (uint64_t)(&v75 - 8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
    uint64_t v64 = v85;
    sub_25B290900();
    uint64_t v85 = v64;
    uint64_t v65 = aBlock;
    uint64_t v66 = swift_allocObject();
    uint64_t v67 = v86;
    swift_weakInit();
    uint64_t v68 = (void *)swift_allocObject();
    v68[2] = v66;
    v68[3] = v65;
    uint64_t v69 = v82;
    v68[4] = v82;
    v68[5] = v52;
    v68[6] = v53;
    v68[7] = v52;
    uint64_t v92 = sub_25B1A8544;
    uint64_t v93 = v68;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v89 = 1107296256;
    uint64_t v90 = sub_25B19F4CC;
    uint64_t v91 = &block_descriptor_13_1;
    uint64_t v70 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain_n();
    swift_unknownObjectRetain();
    swift_release();
    nw_browser_set_state_changed_handler(v65, v70);
    _Block_release(v70);
    uint64_t v71 = swift_allocObject();
    swift_weakInit();
    uint64_t v72 = (void *)swift_allocObject();
    v72[2] = v71;
    v72[3] = v65;
    v72[4] = v53;
    v72[5] = v52;
    uint64_t v92 = sub_25B1A859C;
    uint64_t v93 = v72;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v89 = 1107296256;
    uint64_t v90 = sub_25B1A13B0;
    uint64_t v91 = &block_descriptor_20;
    uint64_t v73 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_release();
    nw_browser_set_browse_results_changed_handler(v65, v73);
    _Block_release(v73);
    nw_browser_set_queue(v65, *(dispatch_queue_t *)(v67 + 24));
    nw_browser_start(v65);
    swift_beginAccess();
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v87 = *(void *)(v67 + 56);
    *(void *)(v67 + 56) = 0x8000000000000000;
    sub_25B221334((uint64_t)v65, v69, v52, isUniquelyReferenced_nonNull_native);
    *(void *)(v67 + 56) = v87;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t result = swift_unknownObjectRelease();
    uint64_t v39 = (uint64_t)v80;
    unint64_t v44 = v83;
    int64_t v40 = v84;
    if (v83) {
      goto LABEL_32;
    }
LABEL_33:
    BOOL v46 = __OFADD__(v40, 1);
    uint64_t v47 = v40 + 1;
    if (v46)
    {
      __break(1u);
      goto LABEL_61;
    }
    if (v47 >= (uint64_t)v78) {
      return swift_release();
    }
    unint64_t v48 = *(void *)(v77 + 8 * v47);
    if (!v48) {
      break;
    }
LABEL_43:
    uint64_t v83 = (v48 - 1) & v48;
    int64_t v84 = v47;
  }
  uint64_t v49 = v47 + 1;
  if (v47 + 1 >= (uint64_t)v78) {
    return swift_release();
  }
  unint64_t v48 = *(void *)(v77 + 8 * v49);
  if (v48) {
    goto LABEL_42;
  }
  uint64_t v49 = v47 + 2;
  if (v47 + 2 >= (uint64_t)v78) {
    return swift_release();
  }
  unint64_t v48 = *(void *)(v77 + 8 * v49);
  if (v48) {
    goto LABEL_42;
  }
  uint64_t v49 = v47 + 3;
  if (v47 + 3 >= (uint64_t)v78) {
    return swift_release();
  }
  unint64_t v48 = *(void *)(v77 + 8 * v49);
  if (v48)
  {
LABEL_42:
    uint64_t v47 = v49;
    goto LABEL_43;
  }
  while (1)
  {
    uint64_t v47 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      break;
    }
    if (v47 >= (uint64_t)v78) {
      return swift_release();
    }
    unint64_t v48 = *(void *)(v77 + 8 * v47);
    ++v49;
    if (v48) {
      goto LABEL_43;
    }
  }
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

uint64_t sub_25B19C4BC()
{
  uint64_t v0 = sub_25B290080();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for NetworkBrowser.Monitor();
  uint64_t v43 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8A0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  unint64_t v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  int64_t v12 = (char *)v38 - v11;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v14 = result;
  uint64_t v47 = v3;
  uint64_t v54 = MEMORY[0x263F8EE80];
  uint64_t v55 = MEMORY[0x263F8EE80];
  unint64_t v15 = *(os_unfair_lock_s **)(result + 16);
  swift_retain();
  os_unfair_lock_lock(v15 + 4);
  v38[1] = v14;
  sub_25B19CAEC(v14, &v54, &v55);
  os_unfair_lock_unlock(v15 + 4);
  swift_release();
  uint64_t v16 = *(void *)(v54 + 64);
  uint64_t v39 = v54 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v54 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v41 = v1 + 16;
  uint64_t v42 = v1;
  uint64_t v45 = (void (**)(uint64_t, uint64_t))(v1 + 8);
  BOOL v46 = (void (**)(uint64_t, char *, uint64_t))(v1 + 32);
  int64_t v40 = (unint64_t)(v17 + 63) >> 6;
  v38[0] = v40 - 1;
  uint64_t v44 = v54;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v48 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      uint64_t v25 = (uint64_t)v47;
      unint64_t v26 = v24 | (v48 << 6);
LABEL_9:
      uint64_t v27 = v44;
      (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v10, *(void *)(v44 + 48) + *(void *)(v42 + 72) * v26, v0);
      uint64_t v28 = *(void *)(v27 + 56) + *(void *)(v43 + 72) * v26;
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
      sub_25B1A8FE8(v28, (uint64_t)&v10[*(int *)(v29 + 48)], (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 0, 1, v29);
      goto LABEL_28;
    }
    uint64_t v25 = (uint64_t)v47;
    int64_t v30 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v30 < v40)
    {
      unint64_t v31 = *(void *)(v39 + 8 * v30);
      if (v31) {
        goto LABEL_13;
      }
      int64_t v32 = v48 + 2;
      ++v48;
      if (v30 + 1 < v40)
      {
        unint64_t v31 = *(void *)(v39 + 8 * v32);
        if (v31) {
          goto LABEL_16;
        }
        int64_t v48 = v30 + 1;
        if (v30 + 2 < v40)
        {
          unint64_t v31 = *(void *)(v39 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_13;
          }
          int64_t v32 = v30 + 3;
          int64_t v48 = v30 + 2;
          if (v30 + 3 < v40) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v10, 1, 1, v33);
    unint64_t v19 = 0;
LABEL_28:
    sub_25B187574((uint64_t)v10, (uint64_t)v12, &qword_26A4DA8A0);
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v12, 1, v34) == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_25B1A9050((uint64_t)&v12[*(int *)(v34 + 48)], (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    (*v46)(v25, v12, v0);
    uint64_t v35 = v55;
    if (*(void *)(v55 + 16) && (unint64_t v36 = sub_25B18A93C(v25), (v37 & 1) != 0))
    {
      uint64_t v20 = *(void *)(*(void *)(v35 + 56) + 8 * v36);
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v20 = 0;
    }
    (*v45)(v25, v0);
    uint64_t v21 = (void (*)(void **, uint64_t))*((void *)v6 + 5);
    sub_25B1A8188();
    uint64_t v22 = (void *)swift_allocError();
    *uint64_t v23 = 1;
    uint64_t v49 = v22;
    long long v50 = 0u;
    long long v51 = 0u;
    uint64_t v52 = 0;
    char v53 = 1;
    v21(&v49, v20);
    swift_unknownObjectRelease();

    uint64_t result = sub_25B1A8124((uint64_t)v6);
  }
  unint64_t v31 = *(void *)(v39 + 8 * v32);
  if (v31)
  {
LABEL_16:
    int64_t v30 = v32;
LABEL_13:
    unint64_t v19 = (v31 - 1) & v31;
    unint64_t v26 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v48 = v30;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v30 >= v40)
    {
      int64_t v48 = v38[0];
      goto LABEL_27;
    }
    unint64_t v31 = *(void *)(v39 + 8 * v30);
    ++v32;
    if (v31) {
      goto LABEL_13;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_25B19CAEC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  long long v116 = a3;
  long long v115 = a2;
  uint64_t v132 = type metadata accessor for NetworkBrowser.Monitor();
  uint64_t v4 = *(void *)(v132 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v132);
  uint64_t v113 = (uint64_t)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v99 - v7;
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  long long v124 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v112 = (char *)&v99 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v119 = (char *)&v99 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  int64_t v111 = (char *)&v99 - v18;
  MEMORY[0x270FA5388](v17);
  unint64_t v135 = (char *)&v99 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8A0);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v99 - v24;
  uint64_t v123 = sub_25B290000();
  uint64_t v26 = *(void *)(v123 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v123);
  long long v120 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v122 = (char *)&v99 - v29;
  sub_25B28FFD0();
  uint64_t v110 = a1 + 64;
  swift_beginAccess();
  uint64_t v30 = *(void *)(a1 + 64);
  uint64_t v31 = *(void *)(v30 + 64);
  uint64_t v105 = v30 + 64;
  uint64_t v32 = 1 << *(unsigned char *)(v30 + 32);
  uint64_t v33 = -1;
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  unint64_t v34 = v33 & v31;
  uint64_t v102 = a1;
  uint64_t v109 = (uint64_t *)(a1 + 80);
  uint64_t v35 = (uint64_t)v8;
  unint64_t v36 = (unint64_t)(v32 + 63) >> 6;
  uint64_t v134 = (void (**)(char *, char *, uint64_t))(v10 + 16);
  char v37 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v121 = (uint64_t (**)(char *, uint64_t))(v26 + 8);
  uint64_t v129 = v10;
  uint64_t v38 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v106 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  unint64_t v99 = v36 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v40 = 0;
  int64_t v118 = v36;
  unint64_t v101 = v36 - 5;
  uint64_t v127 = result;
  uint64_t v100 = result + 104;
  *(void *)&long long v41 = 136446210;
  long long v104 = v41;
  uint64_t v103 = MEMORY[0x263F8EE58] + 8;
  uint64_t v133 = v35;
  uint64_t v128 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v107 = v25;
  uint64_t v131 = v9;
  uint64_t v114 = v4;
  uint64_t v130 = v23;
  unint64_t v108 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  if (!v34) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v42 = __clz(__rbit64(v34));
  v34 &= v34 - 1;
  unint64_t v137 = v40;
  unint64_t v43 = v42 | (v40 << 6);
LABEL_8:
  uint64_t v44 = v127;
  (*(void (**)(char *, unint64_t, uint64_t))(v129 + 16))(v23, *(void *)(v127 + 48) + *(void *)(v129 + 72) * v43, v9);
  uint64_t v45 = *(void *)(v44 + 56) + *(void *)(v4 + 72) * v43;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
  sub_25B1A8FE8(v45, (uint64_t)&v23[*(int *)(v46 + 48)], (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v23, 0, 1, v46);
  uint64_t v35 = v133;
  while (1)
  {
    sub_25B187574((uint64_t)v23, (uint64_t)v25, &qword_26A4DA8A0);
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v25, 1, v51) == 1)
    {
      swift_release();
      uint64_t v98 = sub_25B19A8CC();
      sub_25B19AD24(v98);
      return (*v121)(v122, v123);
    }
    uint64_t v52 = (uint64_t)&v25[*(int *)(v51 + 48)];
    char v53 = v135;
    uint64_t v9 = v131;
    (*v37)(v135, v25, v131);
    sub_25B1A9050(v52, v35, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    if (*(unsigned char *)(v35 + *(int *)(v132 + 36)))
    {
      sub_25B1A8124(v35);
      uint64_t result = (*v38)(v53, v9);
      goto LABEL_6;
    }
    uint64_t v54 = v120;
    sub_25B28FF60();
    char v55 = sub_25B28FF80();
    (*v121)(v54, v123);
    if ((v55 & 1) == 0)
    {
      sub_25B1A8124(v35);
      uint64_t result = (*v38)(v135, v9);
LABEL_6:
      uint64_t v23 = v130;
      unint64_t v40 = v137;
      if (v34) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_25B290190();
    __swift_project_value_buffer(v56, (uint64_t)qword_26A4EB168);
    uint64_t v57 = v135;
    uint64_t v58 = v111;
    long long v126 = *v134;
    v126(v111, v135, v9);
    uint64_t v59 = sub_25B290160();
    os_log_type_t v60 = sub_25B290880();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      uint64_t v136 = v62;
      *(_DWORD *)uint64_t v61 = v104;
      sub_25B1A8FA0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
      uint64_t v63 = sub_25B290DB0();
      *(void *)(v61 + 4) = sub_25B288E98(v63, v64, &v136);
      swift_bridgeObjectRelease();
      uint64_t v57 = v135;
      uint64_t v125 = *v128;
      v125(v58, v9);
      _os_log_impl(&dword_25B107000, v59, v60, "Browser monitor has failed: %{public}s", (uint8_t *)v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v62, -1, -1);
      MEMORY[0x261160890](v61, -1, -1);
    }
    else
    {
      uint64_t v125 = *v38;
      v125(v58, v9);
    }

    v126(v119, v57, v9);
    swift_beginAccess();
    uint64_t v65 = sub_25B19D8E4(&v136);
    uint64_t v67 = v66;
    uint64_t v68 = v132;
    int v69 = (*v106)(v66, 1, v132);
    unint64_t v117 = v34;
    if (!v69) {
      *(unsigned char *)(v67 + *(int *)(v68 + 36)) = 1;
    }
    ((void (*)(uint64_t *, void))v65)(&v136, 0);
    swift_endAccess();
    uint64_t v70 = v125;
    v125(v119, v9);
    uint64_t v71 = (uint64_t)v112;
    uint64_t v72 = v57;
    uint64_t v73 = (uint64_t)v57;
    os_log_type_t v74 = (void (*)(char *, uint64_t, uint64_t))v126;
    v126(v112, v72, v9);
    uint64_t v75 = v113;
    sub_25B1A8FE8(v133, v113, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    uint64_t v76 = v115;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v136 = *v76;
    *uint64_t v76 = 0x8000000000000000;
    sub_25B2214A4(v75, v71, isUniquelyReferenced_nonNull_native);
    *uint64_t v76 = v136;
    swift_bridgeObjectRelease();
    v70((char *)v71, v9);
    v74(v124, v73, v9);
    uint64_t v78 = v109;
    swift_beginAccess();
    uint64_t v79 = *v78;
    if (*(void *)(v79 + 16) && (unint64_t v80 = sub_25B18A93C(v73), (v81 & 1) != 0))
    {
      uint64_t v82 = *(void *)(*(void *)(v79 + 56) + 8 * v80);
      swift_endAccess();
      swift_unknownObjectRetain();
      uint64_t v83 = v116;
      char v84 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v136 = *v83;
      uint64_t *v83 = 0x8000000000000000;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v86 = v82;
      uint64_t v87 = (uint64_t)v124;
      sub_25B1A81DC(v86, (uint64_t)v124, v84, &v136, ObjectType);
      uint64_t *v83 = v136;
      swift_bridgeObjectRelease();
      uint64_t v38 = v128;
      double v88 = v125;
      v125((char *)v87, v9);
      uint64_t v89 = v114;
      uint64_t v35 = v133;
      uint64_t v23 = v130;
      char v37 = v108;
      uint64_t v25 = v107;
      unint64_t v34 = v117;
    }
    else
    {
      swift_endAccess();
      swift_bridgeObjectRetain();
      unint64_t v90 = sub_25B18A93C((uint64_t)v124);
      char v92 = v91;
      swift_bridgeObjectRelease();
      unint64_t v34 = v117;
      if (v92)
      {
        uint64_t v93 = v116;
        char v94 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v95 = *v93;
        uint64_t v136 = *v93;
        *uint64_t v93 = 0x8000000000000000;
        uint64_t v23 = v130;
        long long v96 = v128;
        if ((v94 & 1) == 0)
        {
          sub_25B194B60();
          uint64_t v95 = v136;
        }
        double v88 = v125;
        v125((char *)(*(void *)(v95 + 48) + *(void *)(v129 + 72) * v90), v9);
        uint64_t v97 = v136;
        sub_25B21E258(v90, v136);
        *long long v116 = v97;
        swift_bridgeObjectRelease();
        uint64_t v38 = v96;
        uint64_t v89 = v114;
        char v37 = v108;
        uint64_t v25 = v107;
      }
      else
      {
        uint64_t v89 = v114;
        uint64_t v23 = v130;
        char v37 = v108;
        uint64_t v38 = v128;
        uint64_t v25 = v107;
        double v88 = v125;
      }
      v88(v124, v9);
      swift_unknownObjectRelease();
      uint64_t v35 = v133;
    }
    sub_25B1A8124(v35);
    uint64_t result = v88(v135, v9);
    unint64_t v40 = v137;
    uint64_t v4 = v89;
    if (v34) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v47 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v47 >= v118)
    {
      unint64_t v49 = v40;
    }
    else
    {
      unint64_t v48 = *(void *)(v105 + 8 * v47);
      if (v48) {
        goto LABEL_12;
      }
      unint64_t v49 = v40 + 1;
      if ((uint64_t)(v40 + 2) < v118)
      {
        unint64_t v48 = *(void *)(v105 + 8 * (v40 + 2));
        if (v48)
        {
          int64_t v47 = v40 + 2;
LABEL_40:
          uint64_t v9 = v131;
LABEL_12:
          unint64_t v34 = (v48 - 1) & v48;
          unint64_t v43 = __clz(__rbit64(v48)) + (v47 << 6);
          unint64_t v137 = v47;
          goto LABEL_8;
        }
        unint64_t v49 = v40 + 2;
        if ((uint64_t)(v40 + 3) < v118)
        {
          unint64_t v48 = *(void *)(v105 + 8 * (v40 + 3));
          if (v48)
          {
            int64_t v47 = v40 + 3;
            goto LABEL_40;
          }
          int64_t v47 = v40 + 4;
          unint64_t v49 = v40 + 3;
          if ((uint64_t)(v40 + 4) < v118)
          {
            unint64_t v48 = *(void *)(v105 + 8 * v47);
            uint64_t v9 = v131;
            if (v48) {
              goto LABEL_12;
            }
            while (v101 != v40)
            {
              unint64_t v48 = *(void *)(v100 + 8 * v40++);
              if (v48)
              {
                int64_t v47 = v40 + 4;
                goto LABEL_40;
              }
            }
            unint64_t v49 = v99;
          }
        }
      }
    }
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v23, 1, 1, v50);
    unint64_t v34 = 0;
    unint64_t v137 = v49;
  }
  __break(1u);
  return result;
}

void (*sub_25B19D8E4(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_25B290080();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_25B1A77A8(v2, (uint64_t)v6);
  return sub_25B19D9D4;
}

void sub_25B19D9D4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

void sub_25B19DA4C(int a1, uint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5, uint64_t a6, char *a7, int64_t a8)
{
  char v94 = a7;
  uint64_t v93 = a6;
  uint64_t v92 = a5;
  uint64_t v100 = (uint64_t)a4;
  LODWORD(v9) = a1;
  uint64_t v10 = sub_25B290080();
  uint64_t v96 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for NetworkBrowser.Monitor();
  uint64_t v95 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v101 = (uint64_t)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8A0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v99 = (uint64_t)&v88 - v19;
  uint64_t v20 = sub_25B290410();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (NSObject **)((char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v25 = (void *)Strong;
    uint64_t v26 = *(void **)(Strong + 24);
    *uint64_t v23 = v26;
    (*(void (**)(void *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x263F8F0E0], v20);
    id v27 = v26;
    LOBYTE(v26) = sub_25B290440();
    (*(void (**)(void *, uint64_t))(v21 + 8))(v23, v20);
    if (v26)
    {
      int64_t v91 = a8;
      if (qword_26A4D98C8 == -1)
      {
LABEL_4:
        uint64_t v28 = sub_25B290190();
        __swift_project_value_buffer(v28, (uint64_t)qword_26A4EB168);
        swift_unknownObjectRetain_n();
        uint64_t v29 = sub_25B290160();
        os_log_type_t v30 = sub_25B2908A0();
        BOOL v31 = os_log_type_enabled(v29, v30);
        uint64_t v97 = v10;
        uint64_t v98 = v12;
        if (v31)
        {
          uint64_t v32 = (uint8_t *)swift_slowAlloc();
          uint64_t v33 = swift_slowAlloc();
          uint64_t v102 = v33;
          *(_DWORD *)uint64_t v32 = 136446210;
          uint64_t v89 = v32 + 4;
          uint64_t v108 = v100;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
          uint64_t v34 = sub_25B290600();
          LODWORD(v90) = v9;
          uint64_t v108 = sub_25B288E98(v34, v35, &v102);
          sub_25B2909C0();
          swift_unknownObjectRelease_n();
          LODWORD(v9) = v90;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25B107000, v29, v30, "%{public}s; Browser state changed", v32, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x261160890](v33, -1, -1);
          MEMORY[0x261160890](v32, -1, -1);
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        switch((int)v9)
        {
          case 1:
            swift_unknownObjectRetain_n();
            unint64_t v36 = sub_25B290160();
            os_log_type_t v37 = sub_25B2908A0();
            if (os_log_type_enabled(v36, v37))
            {
              uint64_t v38 = (uint8_t *)swift_slowAlloc();
              uint64_t v39 = swift_slowAlloc();
              uint64_t v102 = v39;
              *(_DWORD *)uint64_t v38 = 136446210;
              uint64_t v108 = v100;
              swift_unknownObjectRetain();
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
              uint64_t v40 = sub_25B290600();
              uint64_t v108 = sub_25B288E98(v40, v41, &v102);
              sub_25B2909C0();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              unint64_t v42 = "%{public}s; Browser state: ready";
              goto LABEL_16;
            }

            swift_release();
            swift_unknownObjectRelease_n();
            return;
          case 2:
            swift_unknownObjectRetain_n();
            unint64_t v43 = sub_25B290160();
            os_log_type_t v44 = sub_25B290880();
            if (os_log_type_enabled(v43, v44))
            {
              uint64_t v45 = (uint8_t *)swift_slowAlloc();
              uint64_t v46 = swift_slowAlloc();
              uint64_t v102 = v46;
              *(_DWORD *)uint64_t v45 = 136446210;
              unint64_t v90 = v45 + 4;
              uint64_t v108 = v100;
              swift_unknownObjectRetain();
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
              uint64_t v47 = sub_25B290600();
              uint64_t v108 = sub_25B288E98(v47, v48, &v102);
              sub_25B2909C0();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_25B107000, v43, v44, "%{public}s; Browser state: failed", v45, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x261160890](v46, -1, -1);
              MEMORY[0x261160890](v45, -1, -1);
            }
            else
            {

              swift_unknownObjectRelease_n();
            }
            swift_unknownObjectRetain_n();
            char v53 = sub_25B290160();
            os_log_type_t v54 = sub_25B2908A0();
            if (os_log_type_enabled(v53, v54))
            {
              char v55 = (uint8_t *)swift_slowAlloc();
              uint64_t v56 = swift_slowAlloc();
              uint64_t v102 = v56;
              *(_DWORD *)char v55 = 136446210;
              unint64_t v90 = v55 + 4;
              uint64_t v108 = v100;
              swift_unknownObjectRetain();
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
              uint64_t v57 = sub_25B290600();
              uint64_t v108 = sub_25B288E98(v57, v58, &v102);
              sub_25B2909C0();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_25B107000, v53, v54, "Canceling browser: %{public}s", v55, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x261160890](v56, -1, -1);
              MEMORY[0x261160890](v55, -1, -1);
            }
            else
            {

              swift_unknownObjectRelease_n();
            }
            uint64_t v59 = (char *)v91;
            uint64_t v10 = (uint64_t)v94;
            uint64_t v60 = v93;
            uint64_t v61 = v92;
            uint64_t v62 = v100;
            nw_browser_set_state_changed_handler((nw_browser_t)v100, 0);
            nw_browser_cancel(v62);
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_25B21D06C(v61, v60);
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v107 = MEMORY[0x263F8EE80];
            uint64_t v108 = MEMORY[0x263F8EE80];
            uint64_t v63 = (os_unfair_lock_s *)*((void *)v25 + 2);
            swift_retain();
            os_unfair_lock_lock(v63 + 4);
            uint64_t v89 = (uint8_t *)v25;
            sub_25B19E9F0((uint64_t)v25, v10, v59, &v108, &v107);
            os_unfair_lock_unlock(v63 + 4);
            swift_release();
            uint64_t v64 = *(void *)(v107 + 64);
            unint64_t v90 = (uint8_t *)(v107 + 64);
            uint64_t v65 = 1 << *(unsigned char *)(v107 + 32);
            uint64_t v66 = -1;
            if (v65 < 64) {
              uint64_t v66 = ~(-1 << v65);
            }
            unint64_t v9 = v66 & v64;
            uint64_t v92 = v96 + 16;
            uint64_t v67 = (void (**)(char *, uint64_t, uint64_t))(v96 + 32);
            uint64_t v68 = (void (**)(char *, uint64_t))(v96 + 8);
            int64_t v91 = (unint64_t)(v65 + 63) >> 6;
            double v88 = (v91 - 1);
            uint64_t v93 = v107;
            swift_bridgeObjectRetain();
            uint64_t v100 = 0;
            char v94 = v18;
            break;
          case 3:
            swift_unknownObjectRetain_n();
            unint64_t v36 = sub_25B290160();
            os_log_type_t v37 = sub_25B290880();
            if (!os_log_type_enabled(v36, v37)) {
              goto LABEL_17;
            }
            uint64_t v38 = (uint8_t *)swift_slowAlloc();
            uint64_t v39 = swift_slowAlloc();
            uint64_t v102 = v39;
            *(_DWORD *)uint64_t v38 = 136446210;
            uint64_t v108 = v100;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
            uint64_t v49 = sub_25B290600();
            uint64_t v108 = sub_25B288E98(v49, v50, &v102);
            sub_25B2909C0();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            unint64_t v42 = "%{public}s; Browser state: cancelled";
            goto LABEL_16;
          case 4:
            swift_unknownObjectRetain_n();
            unint64_t v36 = sub_25B290160();
            os_log_type_t v37 = sub_25B2908A0();
            if (os_log_type_enabled(v36, v37))
            {
              uint64_t v38 = (uint8_t *)swift_slowAlloc();
              uint64_t v39 = swift_slowAlloc();
              uint64_t v102 = v39;
              *(_DWORD *)uint64_t v38 = 136446210;
              uint64_t v108 = v100;
              swift_unknownObjectRetain();
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
              uint64_t v51 = sub_25B290600();
              uint64_t v108 = sub_25B288E98(v51, v52, &v102);
              sub_25B2909C0();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              unint64_t v42 = "%{public}s; Browser state: waiting";
LABEL_16:
              _os_log_impl(&dword_25B107000, v36, v37, v42, v38, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x261160890](v39, -1, -1);
              MEMORY[0x261160890](v38, -1, -1);
              swift_release();
            }
            else
            {
LABEL_17:

              swift_unknownObjectRelease_n();
LABEL_18:
              swift_release();
            }
            return;
          default:
            goto LABEL_18;
        }
        while (!v9)
        {
          int64_t v79 = v100 + 1;
          uint64_t v12 = v98;
          if (__OFADD__(v100, 1))
          {
            __break(1u);
            goto LABEL_57;
          }
          uint64_t v75 = v97;
          if (v79 < v91)
          {
            unint64_t v80 = *(void *)&v90[8 * v79];
            if (v80) {
              goto LABEL_35;
            }
            uint64_t v81 = v100 + 2;
            ++v100;
            if (v79 + 1 < v91)
            {
              unint64_t v80 = *(void *)&v90[8 * v81];
              if (v80) {
                goto LABEL_38;
              }
              uint64_t v100 = v79 + 1;
              if (v79 + 2 < v91)
              {
                unint64_t v80 = *(void *)&v90[8 * v79 + 16];
                if (v80)
                {
                  v79 += 2;
LABEL_35:
                  unint64_t v9 = (v80 - 1) & v80;
                  unint64_t v74 = __clz(__rbit64(v80)) + (v79 << 6);
                  uint64_t v100 = v79;
LABEL_31:
                  uint64_t v76 = v93;
                  (*(void (**)(char *, unint64_t, uint64_t))(v96 + 16))(v18, *(void *)(v93 + 48) + *(void *)(v96 + 72) * v74, v75);
                  uint64_t v77 = *(void *)(v76 + 56) + *(void *)(v95 + 72) * v74;
                  uint64_t v25 = &unk_26A4DA890;
                  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
                  sub_25B1A8FE8(v77, (uint64_t)&v18[*(int *)(v78 + 48)], (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v18, 0, 1, v78);
                  goto LABEL_50;
                }
                uint64_t v81 = v79 + 3;
                uint64_t v100 = v79 + 2;
                if (v79 + 3 < v91)
                {
                  unint64_t v80 = *(void *)&v90[8 * v81];
                  if (v80)
                  {
LABEL_38:
                    int64_t v79 = v81;
                    goto LABEL_35;
                  }
                  while (1)
                  {
                    int64_t v79 = v81 + 1;
                    if (__OFADD__(v81, 1))
                    {
                      __break(1u);
                      JUMPOUT(0x25B19E9E0);
                    }
                    if (v79 >= v91) {
                      break;
                    }
                    unint64_t v80 = *(void *)&v90[8 * v79];
                    ++v81;
                    if (v80) {
                      goto LABEL_35;
                    }
                  }
                  uint64_t v100 = (uint64_t)v88;
                }
              }
            }
          }
          uint64_t v25 = &unk_26A4DA890;
          uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v18, 1, 1, v82);
          unint64_t v9 = 0;
LABEL_50:
          uint64_t v83 = v99;
          sub_25B187574((uint64_t)v18, v99, &qword_26A4DA8A0);
          uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 48))(v83, 1, v84) == 1)
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
          sub_25B1A9050(v83 + *(int *)(v84 + 48), v101, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
          (*v67)(v12, v83, v75);
          uint64_t v85 = v108;
          if (*(void *)(v108 + 16) && (unint64_t v86 = sub_25B18A93C((uint64_t)v12), (v87 & 1) != 0))
          {
            uint64_t v10 = *(void *)(*(void *)(v85 + 56) + 8 * v86);
            swift_unknownObjectRetain();
          }
          else
          {
            uint64_t v10 = 0;
          }
          (*v68)(v12, v75);
          uint64_t v69 = v101;
          uint64_t v70 = *(void (**)(uint64_t *, uint64_t))(v101 + 40);
          sub_25B1A8188();
          uint64_t v71 = (void *)swift_allocError();
          *uint64_t v72 = 0;
          uint64_t v102 = (uint64_t)v71;
          long long v103 = 0u;
          long long v104 = 0u;
          uint64_t v105 = 0;
          char v106 = 1;
          v70(&v102, v10);
          swift_unknownObjectRelease();

          sub_25B1A8124(v69);
          uint64_t v18 = v94;
        }
        unint64_t v73 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v74 = v73 | (v100 << 6);
        uint64_t v75 = v97;
        uint64_t v12 = v98;
        goto LABEL_31;
      }
    }
    else
    {
LABEL_57:
      __break(1u);
    }
    swift_once();
    goto LABEL_4;
  }
}

uint64_t sub_25B19E9F0(uint64_t a1, uint64_t a2, char *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v109 = a5;
  long long v115 = a3;
  uint64_t v8 = type metadata accessor for NetworkBrowser.Monitor();
  uint64_t v107 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v110 = (uint64_t)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v114 = (uint64_t)&v91 - v11;
  uint64_t v12 = sub_25B290080();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v113 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v112 = (char *)&v91 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  int64_t v111 = (char *)&v91 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v91 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8A0);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v104 = (uint64_t)&v91 - v26;
  uint64_t v108 = a1;
  uint64_t v103 = a1 + 64;
  swift_beginAccess();
  uint64_t v27 = (uint64_t)v115;
  swift_bridgeObjectRetain();
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v29 = v27;
  os_log_type_t v30 = v117;
  uint64_t v31 = sub_25B1A8BD0(v28, a2, v29);
  uint64_t v93 = v30;
  uint64_t v32 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v105 = 0;
  uint64_t v33 = *(void *)(v31 + 64);
  uint64_t v94 = v31 + 64;
  uint64_t v96 = v31;
  uint64_t v34 = 1 << *(unsigned char *)(v31 + 32);
  uint64_t v35 = -1;
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  unint64_t v36 = v35 & v33;
  uint64_t v102 = (uint64_t *)(v108 + 80);
  unint64_t v117 = (void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v101 = (void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  uint64_t v100 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
  uint64_t v106 = v13;
  os_log_type_t v37 = (void (**)(char *, uint64_t))(v13 + 8);
  int64_t v95 = (unint64_t)(v34 + 63) >> 6;
  int64_t v92 = v95 - 1;
  uint64_t v99 = a4;
  uint64_t v98 = v8;
  long long v115 = v21;
  uint64_t v97 = v25;
  while (1)
  {
    if (v36)
    {
      uint64_t v38 = a4;
      uint64_t v39 = v8;
      uint64_t v108 = (v36 - 1) & v36;
      unint64_t v40 = __clz(__rbit64(v36)) | (v105 << 6);
LABEL_8:
      uint64_t v41 = v96;
      (*(void (**)(char *, unint64_t, uint64_t))(v106 + 16))(v25, *(void *)(v96 + 48) + *(void *)(v106 + 72) * v40, v12);
      uint64_t v42 = *(void *)(v41 + 56) + *(void *)(v107 + 72) * v40;
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
      sub_25B1A8FE8(v42, (uint64_t)&v25[*(int *)(v43 + 48)], (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v25, 0, 1, v43);
      uint64_t v32 = v115;
      goto LABEL_27;
    }
    int64_t v44 = v105 + 1;
    if (__OFADD__(v105, 1)) {
      goto LABEL_50;
    }
    if (v44 < v95)
    {
      unint64_t v45 = *(void *)(v94 + 8 * v44);
      if (v45) {
        goto LABEL_12;
      }
      int64_t v46 = v105 + 2;
      ++v105;
      if (v44 + 1 < v95)
      {
        unint64_t v45 = *(void *)(v94 + 8 * v46);
        if (v45) {
          goto LABEL_15;
        }
        int64_t v105 = v44 + 1;
        if (v44 + 2 < v95)
        {
          unint64_t v45 = *(void *)(v94 + 8 * (v44 + 2));
          if (v45)
          {
            v44 += 2;
            goto LABEL_12;
          }
          int64_t v46 = v44 + 3;
          int64_t v105 = v44 + 2;
          if (v44 + 3 < v95) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v38 = a4;
    uint64_t v39 = v8;
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v25, 1, 1, v47);
    uint64_t v108 = 0;
LABEL_27:
    uint64_t v48 = v104;
    sub_25B187574((uint64_t)v25, v104, &qword_26A4DA8A0);
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v48, 1, v49) == 1) {
      return swift_release();
    }
    uint64_t v50 = v48 + *(int *)(v49 + 48);
    (*v101)(v32, v48, v12);
    sub_25B1A9050(v50, v114, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    uint64_t v51 = *v117;
    (*v117)(v111, v32, v12);
    swift_beginAccess();
    unint64_t v52 = sub_25B19D8E4(v116);
    uint64_t v54 = v53;
    if (!(*v100)(v53, 1, v39)) {
      *(unsigned char *)(v54 + *(int *)(v39 + 36)) = 1;
    }
    ((void (*)(uint64_t *, void))v52)(v116, 0);
    swift_endAccess();
    char v55 = *v37;
    (*v37)(v111, v12);
    uint64_t v56 = (uint64_t)v115;
    v51(v112, v115, v12);
    uint64_t v57 = v102;
    swift_beginAccess();
    uint64_t v58 = *v57;
    if (*(void *)(v58 + 16) && (unint64_t v59 = sub_25B18A93C(v56), (v60 & 1) != 0))
    {
      uint64_t v61 = *(void *)(*(void *)(v58 + 56) + 8 * v59);
      swift_endAccess();
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v116[0] = *v38;
      uint64_t *v38 = 0x8000000000000000;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v64 = v61;
      uint64_t v65 = (uint64_t)v112;
      char v66 = isUniquelyReferenced_nonNull_native;
      uint64_t v67 = v115;
      sub_25B1A81DC(v64, (uint64_t)v112, v66, v116, ObjectType);
      uint64_t *v38 = v116[0];
      swift_bridgeObjectRelease();
      v55((char *)v65, v12);
    }
    else
    {
      swift_endAccess();
      swift_bridgeObjectRetain();
      unint64_t v68 = sub_25B18A93C((uint64_t)v112);
      char v70 = v69;
      swift_bridgeObjectRelease();
      if (v70)
      {
        int v71 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v72 = *v38;
        v116[0] = *v38;
        uint64_t *v38 = 0x8000000000000000;
        if (!v71)
        {
          sub_25B194B60();
          uint64_t v72 = v116[0];
        }
        v55((char *)(*(void *)(v72 + 48) + *(void *)(v106 + 72) * v68), v12);
        uint64_t v73 = v116[0];
        sub_25B21E258(v68, v116[0]);
        uint64_t *v38 = v73;
        swift_bridgeObjectRelease();
      }
      v55(v112, v12);
      swift_unknownObjectRelease();
      uint64_t v67 = v115;
    }
    uint64_t v74 = (uint64_t)v113;
    v51(v113, v67, v12);
    sub_25B1A8FE8(v114, v110, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    uint64_t v75 = v109;
    int v76 = swift_isUniquelyReferenced_nonNull_native();
    v116[0] = *v75;
    uint64_t v77 = v116[0];
    *uint64_t v75 = 0x8000000000000000;
    unint64_t v79 = sub_25B18A93C(v74);
    uint64_t v80 = *(void *)(v77 + 16);
    BOOL v81 = (v78 & 1) == 0;
    uint64_t v82 = v80 + v81;
    if (__OFADD__(v80, v81))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    char v83 = v78;
    if (*(void *)(v77 + 24) >= v82)
    {
      if ((v76 & 1) == 0) {
        sub_25B194DF8();
      }
    }
    else
    {
      sub_25B1903B0(v82, v76);
      unint64_t v84 = sub_25B18A93C((uint64_t)v113);
      if ((v83 & 1) != (v85 & 1)) {
        goto LABEL_52;
      }
      unint64_t v79 = v84;
    }
    a4 = v99;
    unint64_t v86 = (void *)v116[0];
    if (v83)
    {
      sub_25B1A8D98(v110, *(void *)(v116[0] + 56) + *(void *)(v107 + 72) * v79);
    }
    else
    {
      *(void *)(v116[0] + 8 * (v79 >> 6) + 64) |= 1 << v79;
      v51((char *)(v86[6] + *(void *)(v106 + 72) * v79), v113, v12);
      sub_25B1A9050(v110, v86[7] + *(void *)(v107 + 72) * v79, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
      uint64_t v87 = v86[2];
      BOOL v88 = __OFADD__(v87, 1);
      uint64_t v89 = v87 + 1;
      if (v88) {
        goto LABEL_49;
      }
      v86[2] = v89;
      unint64_t v86 = (void *)v116[0];
    }
    *uint64_t v109 = (uint64_t)v86;
    swift_bridgeObjectRelease();
    v55(v113, v12);
    sub_25B1A8124(v114);
    uint64_t v32 = v115;
    v55(v115, v12);
    uint64_t v8 = v98;
    uint64_t v25 = v97;
    unint64_t v36 = v108;
  }
  unint64_t v45 = *(void *)(v94 + 8 * v46);
  if (v45)
  {
LABEL_15:
    int64_t v44 = v46;
LABEL_12:
    uint64_t v38 = a4;
    uint64_t v39 = v8;
    uint64_t v108 = (v45 - 1) & v45;
    unint64_t v40 = __clz(__rbit64(v45)) + (v44 << 6);
    int64_t v105 = v44;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v44 = v46 + 1;
    if (__OFADD__(v46, 1)) {
      break;
    }
    if (v44 >= v95)
    {
      int64_t v105 = v92;
      goto LABEL_26;
    }
    unint64_t v45 = *(void *)(v94 + 8 * v44);
    ++v46;
    if (v45) {
      goto LABEL_12;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t sub_25B19F4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v5(a2, a3);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_25B19F53C(NSObject *a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (**a6)(char *, char *, uint64_t), uint64_t a7)
{
  long long v126 = a2;
  uint64_t v129 = sub_25B290080();
  uint64_t v123 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8A0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v125 = (char *)&v107 - v17;
  uint64_t v18 = sub_25B290410();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (uint64_t *)((char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v22 = *(void **)(Strong + 24);
  *uint64_t v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x263F8F0E0], v18);
  id v23 = v22;
  LOBYTE(v22) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if (v22)
  {
    long long v116 = a6;
    if (qword_26A4D98C8 == -1) {
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_4:
  uint64_t v24 = sub_25B290190();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_26A4EB168);
  swift_unknownObjectRetain_n();
  uint64_t v26 = sub_25B290160();
  os_log_type_t v27 = sub_25B2908A0();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v127 = a7;
  uint64_t v128 = v12;
  if (v28)
  {
    unint64_t v122 = v25;
    uint64_t v29 = a5;
    os_log_type_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = (void *)swift_slowAlloc();
    uint64_t v130 = v31;
    *(_DWORD *)os_log_type_t v30 = 136446210;
    v139[0] = v29;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
    uint64_t v32 = sub_25B290600();
    v139[0] = sub_25B288E98(v32, v33, (uint64_t *)&v130);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    uint64_t v25 = v122;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v26, v27, "%{public}s; Browse results changed", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v31, -1, -1);
    uint64_t v34 = v30;
    a5 = v29;
    MEMORY[0x261160890](v34, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  if (!((unint64_t)a1 | (unint64_t)v126))
  {
    swift_release();
    return;
  }
  uint64_t v35 = v126;
  swift_unknownObjectRetain();
  unint64_t v36 = swift_unknownObjectRetain();
  nw_browse_result_change_t changes = nw_browse_result_get_changes(v36, v35);
  if ((changes & 2) != 0)
  {
    swift_unknownObjectRetain_n();
    uint64_t v38 = sub_25B290160();
    os_log_type_t v45 = sub_25B2908A0();
    if (os_log_type_enabled(v38, v45))
    {
      uint64_t v109 = a1;
      int64_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = (void *)swift_slowAlloc();
      uint64_t v130 = v47;
      unint64_t v122 = v25;
      *(_DWORD *)int64_t v46 = 136446210;
      v139[0] = a5;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
      uint64_t v48 = sub_25B290600();
      v139[0] = sub_25B288E98(v48, v49, (uint64_t *)&v130);
      a1 = v109;
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v38, v45, "%{public}s; Browser added device", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v47, -1, -1);
      uint64_t v50 = v46;
LABEL_17:
      MEMORY[0x261160890](v50, -1, -1);

      goto LABEL_19;
    }
  }
  else
  {
    swift_unknownObjectRetain_n();
    uint64_t v38 = sub_25B290160();
    os_log_type_t v39 = sub_25B2908A0();
    BOOL v40 = os_log_type_enabled(v38, v39);
    if ((changes & 4) == 0)
    {
      if (v40)
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = (void *)swift_slowAlloc();
        uint64_t v130 = v42;
        *(_DWORD *)uint64_t v41 = 136446210;
        v139[0] = a5;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
        uint64_t v43 = sub_25B290600();
        v139[0] = sub_25B288E98(v43, v44, (uint64_t *)&v130);
        sub_25B2909C0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25B107000, v38, v39, "%{public}s; Browser found an uninteresting change", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261160890](v42, -1, -1);
        MEMORY[0x261160890](v41, -1, -1);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_release();

        return;
      }

      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_33;
    }
    if (v40)
    {
      unint64_t v122 = v25;
      uint64_t v121 = changes;
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      long long v120 = (void *)swift_slowAlloc();
      uint64_t v130 = v120;
      *(_DWORD *)uint64_t v51 = 136446210;
      v139[0] = a5;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
      uint64_t v52 = sub_25B290600();
      v139[0] = sub_25B288E98(v52, v53, (uint64_t *)&v130);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      LOBYTE(changes) = v121;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v38, v39, "%{public}s; Browser removed device", v51, 0xCu);
      uint64_t v54 = v120;
      swift_arrayDestroy();
      MEMORY[0x261160890](v54, -1, -1);
      uint64_t v50 = v51;
      goto LABEL_17;
    }
  }

  swift_unknownObjectRelease_n();
LABEL_19:
  uint64_t v55 = v127;
  if (!((unint64_t)v126 | (unint64_t)a1))
  {
    swift_unknownObjectRetain_n();
    uint64_t v56 = sub_25B290160();
    os_log_type_t v57 = sub_25B2908A0();
    if (!os_log_type_enabled(v56, v57))
    {

      swift_release();
LABEL_33:
      swift_unknownObjectRelease_n();
      return;
    }
    uint64_t v58 = (uint8_t *)swift_slowAlloc();
    unint64_t v59 = (void *)swift_slowAlloc();
    uint64_t v130 = v59;
    *(_DWORD *)uint64_t v58 = 136446210;
    v139[0] = a5;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
    uint64_t v60 = sub_25B290600();
    v139[0] = sub_25B288E98(v60, v61, (uint64_t *)&v130);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v56, v57, "%{public}s; No usable endpoint found in browser results", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v59, -1, -1);
    MEMORY[0x261160890](v58, -1, -1);
LABEL_37:
    swift_release();

    return;
  }
  if (v126) {
    uint64_t v62 = v126;
  }
  else {
    uint64_t v62 = a1;
  }
  nw_endpoint_t v63 = nw_browse_result_copy_endpoint(v62);
  if (!nw_endpoint_get_device_id())
  {
    uint64_t v56 = sub_25B290160();
    os_log_type_t v75 = sub_25B290880();
    if (os_log_type_enabled(v56, v75))
    {
      int v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v76 = 0;
      uint64_t v77 = "Browser found remote device with no ID";
LABEL_36:
      _os_log_impl(&dword_25B107000, v56, v75, v77, v76, 2u);
      MEMORY[0x261160890](v76, -1, -1);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_37;
    }
LABEL_38:

    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return;
  }
  uint64_t v64 = sub_25B290660();
  unint64_t v66 = v65;
  if (!nw_endpoint_get_device_name())
  {
    swift_bridgeObjectRelease();
    uint64_t v56 = sub_25B290160();
    os_log_type_t v75 = sub_25B290880();
    if (os_log_type_enabled(v56, v75))
    {
      int v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v76 = 0;
      uint64_t v77 = "Browser found Remote device with no name";
      goto LABEL_36;
    }
    goto LABEL_38;
  }
  unint64_t v122 = changes & 2;
  uint64_t v67 = sub_25B290660();
  unint64_t v69 = v68;
  v139[0] = v64;
  v139[1] = v66;
  v139[2] = v67;
  v139[3] = v68;
  v139[4] = v63;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  char v70 = sub_25B290160();
  os_log_type_t v71 = sub_25B2908A0();
  BOOL v72 = os_log_type_enabled(v70, v71);
  long long v120 = (void *)v66;
  unint64_t v119 = v69;
  uint64_t v109 = a1;
  uint64_t v121 = (uint64_t)v63;
  uint64_t v117 = v64;
  uint64_t v118 = v67;
  if (v72)
  {
    uint64_t v73 = swift_slowAlloc();
    long long v115 = (void (**)(void, uint64_t, uint64_t))swift_slowAlloc();
    uint64_t v130 = v115;
    *(_DWORD *)uint64_t v73 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v138 = sub_25B288E98(v64, v66, (uint64_t *)&v130);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v73 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v138 = sub_25B288E98(v118, v69, (uint64_t *)&v130);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v70, v71, "Browser found device with ID: %{public}s; name: %{public}s",
      (uint8_t *)v73,
      0x16u);
    uint64_t v74 = v115;
    swift_arrayDestroy();
    MEMORY[0x261160890](v74, -1, -1);
    MEMORY[0x261160890](v73, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v78 = (uint64_t)v125;
  uint64_t v137 = MEMORY[0x263F8EE80];
  uint64_t v138 = MEMORY[0x263F8EE80];
  uint64_t v79 = Strong;
  uint64_t v80 = *(os_unfair_lock_s **)(Strong + 16);
  swift_retain();
  os_unfair_lock_lock(v80 + 4);
  sub_25B1A07C0(v79, v116, v55, v139, &v138, &v137);
  os_unfair_lock_unlock(v80 + 4);
  swift_release();
  uint64_t v81 = *(void *)(v138 + 64);
  uint64_t v110 = v138 + 64;
  uint64_t v82 = 1 << *(unsigned char *)(v138 + 32);
  uint64_t v83 = -1;
  if (v82 < 64) {
    uint64_t v83 = ~(-1 << v82);
  }
  unint64_t v84 = v83 & v81;
  uint64_t v112 = v123 + 16;
  long long v116 = (void (**)(char *, char *, uint64_t))((v122 >> 1) ^ 1);
  long long v115 = (void (**)(void, uint64_t, uint64_t))(v123 + 32);
  uint64_t v114 = (void (**)(char *, uint64_t))(v123 + 8);
  int64_t v111 = (unint64_t)(v82 + 63) >> 6;
  int64_t v108 = v111 - 1;
  uint64_t v113 = v138;
  swift_bridgeObjectRetain();
  unint64_t v122 = 0;
  uint64_t v85 = (uint64_t)v120;
  uint64_t v86 = v119;
  while (1)
  {
    if (v84)
    {
      unint64_t v88 = __clz(__rbit64(v84));
      uint64_t v89 = (v84 - 1) & v84;
      unint64_t v90 = v88 | (v122 << 6);
LABEL_47:
      uint64_t v91 = v113;
      (*(void (**)(char *, unint64_t, uint64_t))(v123 + 16))(v16, *(void *)(v113 + 48) + *(void *)(v123 + 72) * v90, v129);
      uint64_t v92 = *(void *)(v91 + 56);
      uint64_t v93 = v92 + *(void *)(*(void *)(type metadata accessor for NetworkBrowser.Monitor() - 8) + 72) * v90;
      uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
      sub_25B1A8FE8(v93, (uint64_t)&v16[*(int *)(v94 + 48)], (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v16, 0, 1, v94);
      goto LABEL_66;
    }
    int64_t v95 = v122 + 1;
    if (__OFADD__(v122, 1))
    {
      __break(1u);
      goto LABEL_75;
    }
    if (v95 < v111)
    {
      unint64_t v96 = *(void *)(v110 + 8 * v95);
      if (v96) {
        goto LABEL_51;
      }
      int64_t v97 = v122 + 2;
      ++v122;
      if (v95 + 1 < v111)
      {
        unint64_t v96 = *(void *)(v110 + 8 * v97);
        if (v96) {
          goto LABEL_54;
        }
        unint64_t v122 = v95 + 1;
        if (v95 + 2 < v111)
        {
          unint64_t v96 = *(void *)(v110 + 8 * (v95 + 2));
          if (v96)
          {
            v95 += 2;
            goto LABEL_51;
          }
          int64_t v97 = v95 + 3;
          unint64_t v122 = v95 + 2;
          if (v95 + 3 < v111) {
            break;
          }
        }
      }
    }
LABEL_65:
    uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v16, 1, 1, v98);
    uint64_t v89 = 0;
LABEL_66:
    sub_25B187574((uint64_t)v16, v78, &qword_26A4DA8A0);
    uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 48))(v78, 1, v99) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease_n();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v127 = v89;
    uint64_t v100 = v16;
    uint64_t v101 = v78 + *(int *)(v99 + 48);
    uint64_t v102 = *(void (**)(void **, uint64_t))(v101 + 40);
    swift_retain();
    sub_25B1A8124(v101);
    uint64_t v130 = v116;
    uint64_t v131 = v117;
    uint64_t v132 = v85;
    uint64_t v133 = v118;
    uint64_t v134 = v86;
    uint64_t v135 = v121;
    char v136 = 0;
    uint64_t v103 = (uint64_t)v128;
    (*v115)(v128, v78, v129);
    uint64_t v104 = v137;
    uint64_t v87 = *(void *)(v137 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v87)
    {
      unint64_t v105 = sub_25B18A93C(v103);
      if (v106)
      {
        uint64_t v87 = *(void *)(*(void *)(v104 + 56) + 8 * v105);
        swift_unknownObjectRetain();
      }
      else
      {
        uint64_t v87 = 0;
      }
    }
    uint64_t v16 = v100;
    (*v114)(v128, v129);
    v102(&v130, v87);
    swift_release();
    swift_unknownObjectRelease();
    sub_25B1A85B0(v130, v131, v132, v133, v134, v135, v136);
    uint64_t v78 = (uint64_t)v125;
    unint64_t v84 = v127;
  }
  unint64_t v96 = *(void *)(v110 + 8 * v97);
  if (v96)
  {
LABEL_54:
    int64_t v95 = v97;
LABEL_51:
    uint64_t v89 = (v96 - 1) & v96;
    unint64_t v90 = __clz(__rbit64(v96)) + (v95 << 6);
    unint64_t v122 = v95;
    goto LABEL_47;
  }
  while (1)
  {
    int64_t v95 = v97 + 1;
    if (__OFADD__(v97, 1)) {
      break;
    }
    if (v95 >= v111)
    {
      unint64_t v122 = v108;
      goto LABEL_65;
    }
    unint64_t v96 = *(void *)(v110 + 8 * v95);
    ++v97;
    if (v96) {
      goto LABEL_51;
    }
  }
LABEL_75:
  __break(1u);
}