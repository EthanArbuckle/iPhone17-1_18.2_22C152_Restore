uint64_t sub_25B1A07C0(uint64_t a1, void (**a2)(char *, char *, uint64_t), uint64_t a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  void (**v55)(char *, uint64_t);
  uint64_t v56;
  char v57;
  void (*v58)(char *, char *, uint64_t);
  void (*v59)(void *);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t *v64;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  char v74;
  void *v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t *v85;
  char v86;
  uint64_t ObjectType;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t *v91;
  unint64_t v92;
  char v93;
  char v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t result;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t *v106;
  unsigned int (**v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  char *v109;
  int64_t v110;
  void *v111;
  uint64_t *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  void (**v117)(char *, uint64_t, uint64_t);
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  void (**v124)(char *, uint64_t);
  char *v125;
  unint64_t v126;
  uint64_t v127[4];
  void (**v128)(char *, char *, uint64_t);

  v106 = a6;
  v112 = a5;
  v111 = a4;
  v128 = a2;
  v8 = type metadata accessor for NetworkBrowser.Monitor();
  v123 = *(void *)(v8 - 8);
  v9 = MEMORY[0x270FA5388](v8);
  v113 = (uint64_t)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x270FA5388](v9);
  v109 = (char *)&v99 - v12;
  MEMORY[0x270FA5388](v11);
  v115 = (uint64_t)&v99 - v13;
  v14 = sub_25B290080();
  v15 = *(void *)(v14 - 8);
  v16 = MEMORY[0x270FA5388](v14);
  v118 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x270FA5388](v16);
  v122 = (char *)&v99 - v19;
  v20 = MEMORY[0x270FA5388](v18);
  v114 = (char *)&v99 - v21;
  MEMORY[0x270FA5388](v20);
  v23 = (char *)&v99 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8A0);
  v25 = MEMORY[0x270FA5388](v24 - 8);
  v119 = (char *)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  v120 = (uint64_t)&v99 - v27;
  v108 = a1 + 64;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v28 = swift_bridgeObjectRetain();
  v29 = sub_25B1A8BD0(v28, (uint64_t)v128, a3);
  v30 = v109;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = 0;
  v32 = *(void *)(v29 + 64);
  v103 = v29 + 64;
  v33 = 1 << *(unsigned char *)(v29 + 32);
  v34 = -1;
  if (v33 < 64) {
    v34 = ~(-1 << v33);
  }
  v35 = v34 & v32;
  v104 = (uint64_t *)(a1 + 80);
  v36 = (unint64_t)(v33 + 63) >> 6;
  v128 = (void (**)(char *, char *, uint64_t))(v15 + 16);
  v117 = (void (**)(char *, uint64_t, uint64_t))(v15 + 32);
  v107 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48);
  v37 = v115;
  v121 = v15;
  v124 = (void (**)(char *, uint64_t))(v15 + 8);
  v38 = v23;
  v100 = v36 - 1;
  v110 = v36;
  v102 = v36 - 5;
  v116 = v29;
  v101 = v29 + 104;
  v105 = v8;
  v125 = v23;
  if (!v35) {
    goto LABEL_9;
  }
LABEL_7:
  v39 = __clz(__rbit64(v35));
  v35 &= v35 - 1;
  v126 = v31;
  v40 = v39 | (v31 << 6);
LABEL_8:
  v41 = v116;
  v42 = v119;
  (*(void (**)(char *, unint64_t, uint64_t))(v121 + 16))(v119, *(void *)(v116 + 48) + *(void *)(v121 + 72) * v40, v14);
  v43 = *(void *)(v41 + 56) + *(void *)(v123 + 72) * v40;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
  sub_25B1A8FE8(v43, (uint64_t)&v42[*(int *)(v44 + 48)], (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v42, 0, 1, v44);
  v38 = v125;
  while (1)
  {
    v50 = (uint64_t)v42;
    v51 = v120;
    sub_25B187574(v50, v120, &qword_26A4DA8A0);
    v52 = v51;
    v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
    v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v52, 1, v53);
    v55 = v124;
    if (v54 == 1) {
      return swift_release();
    }
    v56 = v52 + *(int *)(v53 + 48);
    (*v117)(v38, v52, v14);
    sub_25B1A9050(v56, v37, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    LOBYTE(v56) = *(unsigned char *)(v37 + *(int *)(v8 + 36));
    sub_25B1A8FE8(v37, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    if (v56)
    {
      sub_25B1A8124((uint64_t)v30);
LABEL_6:
      sub_25B1A8124(v37);
      (*v55)(v38, v14);
      v31 = v126;
      if (v35) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    if (*v30 == *v111 && v30[1] == v111[1])
    {
      sub_25B1A8124((uint64_t)v30);
    }
    else
    {
      v57 = sub_25B290FB0();
      sub_25B1A8124((uint64_t)v30);
      if ((v57 & 1) == 0) {
        goto LABEL_6;
      }
    }
    v58 = *v128;
    (*v128)(v114, v38, v14);
    swift_beginAccess();
    v59 = sub_25B19D8E4(v127);
    v61 = v60;
    if (!(*v107)(v60, 1, v8)) {
      *(unsigned char *)(v61 + *(int *)(v8 + 36)) = 1;
    }
    ((void (*)(uint64_t *, void))v59)(v127, 0);
    swift_endAccess();
    v62 = *v55;
    (*v55)(v114, v14);
    v63 = (uint64_t)v122;
    v58(v122, v125, v14);
    sub_25B1A8FE8(v115, v113, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    v64 = v112;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v127[0] = *v64;
    v66 = v127[0];
    *v64 = 0x8000000000000000;
    v68 = sub_25B18A93C(v63);
    v69 = *(void *)(v66 + 16);
    v70 = (v67 & 1) == 0;
    v71 = v69 + v70;
    if (__OFADD__(v69, v70)) {
      goto LABEL_57;
    }
    v72 = v67;
    if (*(void *)(v66 + 24) >= v71)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_25B194DF8();
      }
    }
    else
    {
      sub_25B1903B0(v71, isUniquelyReferenced_nonNull_native);
      v73 = sub_25B18A93C((uint64_t)v122);
      if ((v72 & 1) != (v74 & 1)) {
        goto LABEL_59;
      }
      v68 = v73;
    }
    v75 = (void *)v127[0];
    if (v72)
    {
      sub_25B1A8D98(v113, *(void *)(v127[0] + 56) + *(void *)(v123 + 72) * v68);
    }
    else
    {
      *(void *)(v127[0] + 8 * (v68 >> 6) + 64) |= 1 << v68;
      v58((char *)(v75[6] + *(void *)(v121 + 72) * v68), v122, v14);
      sub_25B1A9050(v113, v75[7] + *(void *)(v123 + 72) * v68, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
      v76 = v75[2];
      v77 = __OFADD__(v76, 1);
      v78 = v76 + 1;
      if (v77) {
        goto LABEL_58;
      }
      v75[2] = v78;
      v75 = (void *)v127[0];
    }
    *v112 = (uint64_t)v75;
    swift_bridgeObjectRelease();
    v62(v122, v14);
    v79 = (uint64_t)v125;
    v58(v118, v125, v14);
    v80 = v104;
    swift_beginAccess();
    v81 = *v80;
    if (*(void *)(v81 + 16) && (v82 = sub_25B18A93C(v79), (v83 & 1) != 0))
    {
      v84 = *(void *)(*(void *)(v81 + 56) + 8 * v82);
      swift_endAccess();
      swift_unknownObjectRetain();
      v85 = v106;
      v86 = swift_isUniquelyReferenced_nonNull_native();
      v127[0] = *v85;
      *v85 = 0x8000000000000000;
      ObjectType = swift_getObjectType();
      v88 = v84;
      v89 = (uint64_t)v118;
      v90 = v86;
      v38 = v125;
      sub_25B1A81DC(v88, (uint64_t)v118, v90, v127, ObjectType);
      *v85 = v127[0];
      swift_bridgeObjectRelease();
      v62((char *)v89, v14);
      v30 = v109;
      v37 = v115;
    }
    else
    {
      swift_endAccess();
      v91 = v106;
      swift_bridgeObjectRetain();
      v92 = sub_25B18A93C((uint64_t)v118);
      v94 = v93;
      swift_bridgeObjectRelease();
      if (v94)
      {
        v95 = swift_isUniquelyReferenced_nonNull_native();
        v96 = *v91;
        v127[0] = *v91;
        *v91 = 0x8000000000000000;
        if (!v95)
        {
          sub_25B194B60();
          v96 = v127[0];
        }
        v62((char *)(*(void *)(v96 + 48) + *(void *)(v121 + 72) * v92), v14);
        v97 = v127[0];
        sub_25B21E258(v92, v127[0]);
        *v91 = v97;
        swift_bridgeObjectRelease();
      }
      v37 = v115;
      v62(v118, v14);
      swift_unknownObjectRelease();
      v30 = v109;
      v38 = v125;
    }
    sub_25B1A8124(v37);
    v62(v38, v14);
    v8 = v105;
    v31 = v126;
    if (v35) {
      goto LABEL_7;
    }
LABEL_9:
    v45 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v45 >= v110)
    {
      v47 = v31;
    }
    else
    {
      v46 = *(void *)(v103 + 8 * v45);
      if (v46) {
        goto LABEL_12;
      }
      v47 = v31 + 1;
      if ((uint64_t)(v31 + 2) < v110)
      {
        v46 = *(void *)(v103 + 8 * (v31 + 2));
        if (v46)
        {
          v45 = v31 + 2;
LABEL_12:
          v35 = (v46 - 1) & v46;
          v40 = __clz(__rbit64(v46)) + (v45 << 6);
          v126 = v45;
          goto LABEL_8;
        }
        v47 = v31 + 2;
        if ((uint64_t)(v31 + 3) < v110)
        {
          v46 = *(void *)(v103 + 8 * (v31 + 3));
          if (v46)
          {
            v45 = v31 + 3;
            goto LABEL_12;
          }
          v45 = v31 + 4;
          v47 = v31 + 3;
          if ((uint64_t)(v31 + 4) < v110)
          {
            v46 = *(void *)(v103 + 8 * v45);
            if (v46) {
              goto LABEL_12;
            }
            while (v102 != v31)
            {
              v46 = *(void *)(v101 + 8 * v31++);
              if (v46)
              {
                v45 = v31 + 4;
                goto LABEL_12;
              }
            }
            v47 = v100;
          }
        }
      }
    }
    v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
    v49 = v119;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v119, 1, 1, v48);
    v35 = 0;
    v126 = v47;
    v42 = v49;
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t sub_25B1A13B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v7(a2, a3, a4);
  swift_release();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

void sub_25B1A143C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, char *, uint64_t), uint64_t a6, double a7)
{
  v15 = (os_unfair_lock_s *)(*(void *)(*(void *)v7 + 16) + 16);
  os_unfair_lock_lock(v15);
  sub_25B199B4C(a1, a2, a3, a4, a5, a6, a7);
  os_unfair_lock_unlock(v15);
}

uint64_t sub_25B1A14DC()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B1A1518(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_25B290080() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_25B19A074(a1, v4, v5);
}

void sub_25B1A158C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_25B1A160C(void (*a1)(uint64_t))
{
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v4);
  sub_25B1A8FA0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
  uint64_t v7 = sub_25B290DB0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7;
}

void *sub_25B1A1734()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290A70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_25B1A18E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8C8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_25B290A70();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v22 = v1;
  result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_25B1A1B8C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EC0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290A70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    uint64_t v20 = v17[3];
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    v21[2] = v19;
    v21[3] = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_25B1A1D50()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9F60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290A70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_25B1A1EE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Record.ID(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB2B0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_25B290A70();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_25:
    result = (void *)swift_release();
    *uint64_t v1 = v8;
    return result;
  }
  result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_25;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v16) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v12);
        if (!v21) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_25B1A8FE8(*(void *)(v6 + 48) + v19, (uint64_t)v5, type metadata accessor for Record.ID);
    result = (void *)sub_25B1A9050((uint64_t)v5, *(void *)(v8 + 48) + v19, type metadata accessor for Record.ID);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v16) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25B1A2148()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA8B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25B290A70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_25B1A22F8(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_25B1A347C(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for PairingRelationship, (uint64_t *)&unk_26A4DA810, (uint64_t (*)(void))type metadata accessor for PairingRelationship, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
}

uint64_t sub_25B1A2340(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v54 = a2;
  v53 = a1;
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  v52 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for RecordMetadata();
  uint64_t v63 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  unint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v62 = (uint64_t)&v49 - v16;
  uint64_t v17 = type metadata accessor for Record.ID(0);
  uint64_t v60 = *(void *)(v17 - 8);
  uint64_t v61 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  int64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v59 = (uint64_t)&v49 - v21;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9C20);
  uint64_t result = sub_25B290C00();
  uint64_t v23 = result;
  if (v54 < 1) {
    unint64_t v24 = 0;
  }
  else {
    unint64_t v24 = *v53;
  }
  uint64_t v25 = 0;
  v56 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v51 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
  v50 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v26 = result + 64;
  v57 = v11;
  uint64_t v58 = v6;
  v55 = a4;
  while (1)
  {
    if (v24)
    {
      uint64_t v64 = (v24 - 1) & v24;
      uint64_t v65 = v25;
      unint64_t v27 = __clz(__rbit64(v24)) | (v25 << 6);
    }
    else
    {
      uint64_t v28 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        goto LABEL_43;
      }
      if (v28 >= v54) {
        return v23;
      }
      unint64_t v29 = v53[v28];
      uint64_t v30 = v25 + 1;
      if (!v29)
      {
        uint64_t v30 = v25 + 2;
        if (v25 + 2 >= v54) {
          return v23;
        }
        unint64_t v29 = v53[v30];
        if (!v29)
        {
          uint64_t v30 = v25 + 3;
          if (v25 + 3 >= v54) {
            return v23;
          }
          unint64_t v29 = v53[v30];
          if (!v29)
          {
            uint64_t v31 = v25 + 4;
            if (v25 + 4 >= v54) {
              return v23;
            }
            unint64_t v29 = v53[v31];
            if (!v29)
            {
              while (1)
              {
                uint64_t v30 = v31 + 1;
                if (__OFADD__(v31, 1)) {
                  goto LABEL_44;
                }
                if (v30 >= v54) {
                  return v23;
                }
                unint64_t v29 = v53[v30];
                ++v31;
                if (v29) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v30 = v25 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v64 = (v29 - 1) & v29;
      uint64_t v65 = v30;
      unint64_t v27 = __clz(__rbit64(v29)) + (v30 << 6);
    }
    uint64_t v32 = a4[6];
    uint64_t v33 = v59;
    uint64_t v66 = *(void *)(v60 + 72);
    sub_25B1A8FE8(v32 + v66 * v27, v59, type metadata accessor for Record.ID);
    uint64_t v34 = *(void *)(v63 + 72);
    uint64_t v35 = a4[7] + v34 * v27;
    uint64_t v36 = v62;
    sub_25B1A8FE8(v35, v62, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    sub_25B1A9050(v33, (uint64_t)v20, type metadata accessor for Record.ID);
    sub_25B1A9050(v36, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    sub_25B291210();
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B290630();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = (uint64_t)v57;
    sub_25B1A8FE8((uint64_t)&v20[*(int *)(v61 + 24)], (uint64_t)v57, type metadata accessor for Record.ID.Ownership);
    uint64_t v38 = v58;
    if ((*v56)(v37, 1, v58) == 1)
    {
      sub_25B291220();
    }
    else
    {
      v39 = v52;
      (*v51)(v52, v37, v38);
      sub_25B291220();
      sub_25B1A8FA0(&qword_26A4D9220, MEMORY[0x263F07508]);
      sub_25B290540();
      (*v50)(v39, v38);
    }
    uint64_t result = sub_25B291260();
    uint64_t v40 = -1 << *(unsigned char *)(v23 + 32);
    unint64_t v41 = result & ~v40;
    unint64_t v42 = v41 >> 6;
    if (((-1 << v41) & ~*(void *)(v26 + 8 * (v41 >> 6))) != 0)
    {
      unint64_t v43 = __clz(__rbit64((-1 << v41) & ~*(void *)(v26 + 8 * (v41 >> 6)))) | v41 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v44 = 0;
      unint64_t v45 = (unint64_t)(63 - v40) >> 6;
      do
      {
        if (++v42 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v46 = v42 == v45;
        if (v42 == v45) {
          unint64_t v42 = 0;
        }
        v44 |= v46;
        uint64_t v47 = *(void *)(v26 + 8 * v42);
      }
      while (v47 == -1);
      unint64_t v43 = __clz(__rbit64(~v47)) + (v42 << 6);
    }
    *(void *)(v26 + ((v43 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v43;
    sub_25B1A9050((uint64_t)v20, *(void *)(v23 + 48) + v43 * v66, type metadata accessor for Record.ID);
    uint64_t result = sub_25B1A9050((uint64_t)v15, *(void *)(v23 + 56) + v43 * v34, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    ++*(void *)(v23 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v55;
    unint64_t v24 = v64;
    uint64_t v25 = v65;
    if (!a3) {
      return v23;
    }
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_25B1A2A84(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9BE0);
  uint64_t result = sub_25B290C00();
  uint64_t v7 = result;
  if (a2 < 1) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = *a1;
  }
  uint64_t v9 = 0;
  uint64_t v10 = result + 64;
  uint64_t v38 = v4;
  while (1)
  {
    if (v8)
    {
      uint64_t v39 = (v8 - 1) & v8;
      uint64_t v40 = v9;
      unint64_t v11 = __clz(__rbit64(v8)) | (v9 << 6);
    }
    else
    {
      uint64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_40;
      }
      if (v12 >= a2) {
        return v7;
      }
      unint64_t v13 = a1[v12];
      uint64_t v14 = v9 + 1;
      if (!v13)
      {
        uint64_t v14 = v9 + 2;
        if (v9 + 2 >= a2) {
          return v7;
        }
        unint64_t v13 = a1[v14];
        if (!v13)
        {
          uint64_t v14 = v9 + 3;
          if (v9 + 3 >= a2) {
            return v7;
          }
          unint64_t v13 = a1[v14];
          if (!v13)
          {
            uint64_t v15 = v9 + 4;
            if (v9 + 4 >= a2) {
              return v7;
            }
            unint64_t v13 = a1[v15];
            if (!v13)
            {
              while (1)
              {
                uint64_t v14 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= a2) {
                  return v7;
                }
                unint64_t v13 = a1[v14];
                ++v15;
                if (v13) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v14 = v9 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v39 = (v13 - 1) & v13;
      uint64_t v40 = v14;
      unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    }
    uint64_t v16 = *(void *)(v4 + 56);
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v11);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v21 = v17[2];
    uint64_t v20 = v17[3];
    int64_t v22 = (uint64_t *)(v16 + 48 * v11);
    uint64_t v23 = v22[1];
    uint64_t v24 = v22[3];
    uint64_t v41 = *v22;
    uint64_t v42 = v22[2];
    uint64_t v43 = v22[5];
    uint64_t v44 = v22[4];
    sub_25B291210();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
    uint64_t result = sub_25B291260();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v10 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v10 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v10 + 8 * v27);
      }
      while (v32 == -1);
      unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(void *)(v10 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t v33 = (void *)(*(void *)(v7 + 48) + 32 * v28);
    *uint64_t v33 = v18;
    v33[1] = v19;
    v33[2] = v21;
    v33[3] = v20;
    uint64_t v34 = (void *)(*(void *)(v7 + 56) + 48 * v28);
    *uint64_t v34 = v41;
    v34[1] = v23;
    v34[2] = v42;
    v34[3] = v24;
    v34[4] = v44;
    v34[5] = v43;
    ++*(void *)(v7 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v38;
    unint64_t v8 = v39;
    uint64_t v9 = v40;
    if (!v5) {
      return v7;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25B1A2DD0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9BF8);
  uint64_t result = sub_25B290C00();
  uint64_t v8 = result;
  uint64_t v35 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  uint64_t v37 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v38 = v10;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v35) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      uint64_t v16 = v10 + 1;
      if (!v15)
      {
        uint64_t v16 = v10 + 2;
        if (v10 + 2 >= v35) {
          return v8;
        }
        unint64_t v15 = a1[v16];
        if (!v15)
        {
          uint64_t v16 = v10 + 3;
          if (v10 + 3 >= v35) {
            return v8;
          }
          unint64_t v15 = a1[v16];
          if (!v15)
          {
            uint64_t v17 = v10 + 4;
            if (v10 + 4 >= v35) {
              return v8;
            }
            unint64_t v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                uint64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v35) {
                  return v8;
                }
                unint64_t v15 = a1[v16];
                ++v17;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      uint64_t v38 = v16;
      unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    uint64_t v18 = *(void *)(v4 + 56);
    uint64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v13);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v23 = v19[2];
    uint64_t v22 = v19[3];
    uint64_t v24 = *(void *)(v18 + 8 * v13);
    sub_25B291210();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_25B290630();
    sub_25B290630();
    uint64_t result = sub_25B291260();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v27);
      }
      while (v32 == -1);
      unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(void *)(v11 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t v33 = (void *)(*(void *)(v8 + 48) + 32 * v28);
    *uint64_t v33 = v20;
    v33[1] = v21;
    v33[2] = v23;
    v33[3] = v22;
    *(void *)(*(void *)(v8 + 56) + 8 * v28) = v24;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v37;
    uint64_t v10 = v38;
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25B1A30B0(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for ZoneVersion();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v46 = (uint64_t)&v41 - v11;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  uint64_t v45 = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9C00);
  uint64_t result = sub_25B290C00();
  uint64_t v13 = result;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *a1;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 64;
  uint64_t v17 = v45;
  uint64_t v44 = a4;
  while (1)
  {
    if (v14)
    {
      uint64_t v48 = (v14 - 1) & v14;
      uint64_t v49 = v15;
      unint64_t v18 = __clz(__rbit64(v14)) | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_40;
      }
      if (v19 >= v43) {
        return v13;
      }
      unint64_t v20 = v42[v19];
      uint64_t v21 = v15 + 1;
      if (!v20)
      {
        uint64_t v21 = v15 + 2;
        if (v15 + 2 >= v43) {
          return v13;
        }
        unint64_t v20 = v42[v21];
        if (!v20)
        {
          uint64_t v21 = v15 + 3;
          if (v15 + 3 >= v43) {
            return v13;
          }
          unint64_t v20 = v42[v21];
          if (!v20)
          {
            uint64_t v22 = v15 + 4;
            if (v15 + 4 >= v43) {
              return v13;
            }
            unint64_t v20 = v42[v22];
            if (!v20)
            {
              while (1)
              {
                uint64_t v21 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v21 >= v43) {
                  return v13;
                }
                unint64_t v20 = v42[v21];
                ++v22;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v21 = v15 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v48 = (v20 - 1) & v20;
      uint64_t v49 = v21;
      unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
    }
    uint64_t v23 = a4[7];
    uint64_t v24 = (uint64_t *)(a4[6] + 32 * v18);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    uint64_t v27 = v24[2];
    uint64_t v28 = v24[3];
    uint64_t v29 = v46;
    uint64_t v30 = *(void *)(v47 + 72);
    sub_25B1A8FE8(v23 + v30 * v18, v46, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    sub_25B1A9050(v29, v17, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    sub_25B291210();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B290630();
    sub_25B290630();
    uint64_t result = sub_25B291260();
    uint64_t v31 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v16 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v34 = __clz(__rbit64((-1 << v32) & ~*(void *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v17 = v45;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v31) >> 6;
      uint64_t v17 = v45;
      do
      {
        if (++v33 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v37 = v33 == v36;
        if (v33 == v36) {
          unint64_t v33 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v16 + 8 * v33);
      }
      while (v38 == -1);
      unint64_t v34 = __clz(__rbit64(~v38)) + (v33 << 6);
    }
    *(void *)(v16 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
    uint64_t v39 = (void *)(*(void *)(v13 + 48) + 32 * v34);
    void *v39 = v26;
    v39[1] = v25;
    v39[2] = v27;
    v39[3] = v28;
    uint64_t result = sub_25B1A9050(v17, *(void *)(v13 + 56) + v34 * v30, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    ++*(void *)(v13 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v44;
    unint64_t v14 = v48;
    uint64_t v15 = v49;
    if (!a3) {
      return v13;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25B1A347C(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t *a6, uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  uint64_t v63 = a8;
  v57 = a7;
  uint64_t v49 = a1;
  uint64_t v12 = a5(0);
  uint64_t v56 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v62 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v55 = (uint64_t)&v48 - v15;
  uint64_t v61 = sub_25B290080();
  uint64_t v58 = *(void *)(v61 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v61);
  unint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v54 = (char *)&v48 - v19;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t result = sub_25B290C00();
  uint64_t v21 = result;
  uint64_t v48 = a2;
  if (a2 < 1) {
    unint64_t v22 = 0;
  }
  else {
    unint64_t v22 = *v49;
  }
  uint64_t v23 = 0;
  uint64_t v51 = v58 + 32;
  uint64_t v52 = v58 + 16;
  uint64_t v24 = result + 64;
  v53 = v18;
  v50 = a4;
  uint64_t v25 = v61;
  while (1)
  {
    if (v22)
    {
      uint64_t v59 = (v22 - 1) & v22;
      uint64_t v60 = v23;
      unint64_t v26 = __clz(__rbit64(v22)) | (v23 << 6);
    }
    else
    {
      uint64_t v27 = v23 + 1;
      if (__OFADD__(v23, 1)) {
        goto LABEL_40;
      }
      if (v27 >= v48) {
        return v21;
      }
      unint64_t v28 = v49[v27];
      uint64_t v29 = v23 + 1;
      if (!v28)
      {
        uint64_t v29 = v23 + 2;
        if (v23 + 2 >= v48) {
          return v21;
        }
        unint64_t v28 = v49[v29];
        if (!v28)
        {
          uint64_t v29 = v23 + 3;
          if (v23 + 3 >= v48) {
            return v21;
          }
          unint64_t v28 = v49[v29];
          if (!v28)
          {
            uint64_t v30 = v23 + 4;
            if (v23 + 4 >= v48) {
              return v21;
            }
            unint64_t v28 = v49[v30];
            if (!v28)
            {
              while (1)
              {
                uint64_t v29 = v30 + 1;
                if (__OFADD__(v30, 1)) {
                  goto LABEL_41;
                }
                if (v29 >= v48) {
                  return v21;
                }
                unint64_t v28 = v49[v29];
                ++v30;
                if (v28) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v29 = v23 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v59 = (v28 - 1) & v28;
      uint64_t v60 = v29;
      unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    }
    uint64_t v31 = v58;
    uint64_t v32 = *(void *)(v58 + 72);
    unint64_t v33 = v54;
    (*(void (**)(char *, unint64_t, uint64_t))(v58 + 16))(v54, a4[6] + v32 * v26, v25);
    uint64_t v34 = *(void *)(v56 + 72);
    uint64_t v35 = a4[7] + v34 * v26;
    uint64_t v36 = v55;
    sub_25B1A8FE8(v35, v55, v57);
    BOOL v37 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    uint64_t v38 = v53;
    v37(v53, v33, v25);
    sub_25B1A9050(v36, v62, v63);
    sub_25B1A8FA0(&qword_26A4D9220, MEMORY[0x263F07508]);
    uint64_t result = sub_25B290530();
    uint64_t v39 = -1 << *(unsigned char *)(v21 + 32);
    unint64_t v40 = result & ~v39;
    unint64_t v41 = v40 >> 6;
    if (((-1 << v40) & ~*(void *)(v24 + 8 * (v40 >> 6))) != 0)
    {
      unint64_t v42 = __clz(__rbit64((-1 << v40) & ~*(void *)(v24 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v43 = 0;
      unint64_t v44 = (unint64_t)(63 - v39) >> 6;
      do
      {
        if (++v41 == v44 && (v43 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v45 = v41 == v44;
        if (v41 == v44) {
          unint64_t v41 = 0;
        }
        v43 |= v45;
        uint64_t v46 = *(void *)(v24 + 8 * v41);
      }
      while (v46 == -1);
      unint64_t v42 = __clz(__rbit64(~v46)) + (v41 << 6);
    }
    *(void *)(v24 + ((v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v42;
    v37((char *)(*(void *)(v21 + 48) + v42 * v32), v38, v61);
    uint64_t result = sub_25B1A9050(v62, *(void *)(v21 + 56) + v42 * v34, v63);
    ++*(void *)(v21 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v50;
    unint64_t v22 = v59;
    uint64_t v23 = v60;
    if (!a3) {
      return v21;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25B1A3934(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v35 - v12;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7C8);
  uint64_t result = sub_25B290C00();
  uint64_t v15 = result;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  if (a2 < 1) {
    unint64_t v16 = 0;
  }
  else {
    unint64_t v16 = *a1;
  }
  uint64_t v17 = 0;
  uint64_t v18 = result + 64;
  while (1)
  {
    if (v16)
    {
      unint64_t v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v20 = v19 | (v17 << 6);
    }
    else
    {
      uint64_t v21 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_40;
      }
      if (v21 >= v37) {
        return v15;
      }
      unint64_t v22 = v36[v21];
      ++v17;
      if (!v22)
      {
        uint64_t v17 = v21 + 1;
        if (v21 + 1 >= v37) {
          return v15;
        }
        unint64_t v22 = v36[v17];
        if (!v22)
        {
          uint64_t v17 = v21 + 2;
          if (v21 + 2 >= v37) {
            return v15;
          }
          unint64_t v22 = v36[v17];
          if (!v22)
          {
            uint64_t v23 = v21 + 3;
            if (v23 >= v37) {
              return v15;
            }
            unint64_t v22 = v36[v23];
            if (!v22)
            {
              while (1)
              {
                uint64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v37) {
                  return v15;
                }
                unint64_t v22 = v36[v17];
                ++v23;
                if (v22) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v23;
          }
        }
      }
LABEL_24:
      unint64_t v16 = (v22 - 1) & v22;
      unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
    }
    uint64_t v24 = *(void *)(a4[6] + 8 * v20);
    uint64_t v25 = *(void *)(v38 + 72);
    sub_25B1A8FE8(a4[7] + v25 * v20, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    sub_25B1A9050((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    uint64_t result = sub_25B291200();
    uint64_t v26 = -1 << *(unsigned char *)(v15 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v18 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v18 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v18 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(void *)(v18 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    *(void *)(*(void *)(v15 + 48) + 8 * v29) = v24;
    uint64_t result = sub_25B1A9050((uint64_t)v11, *(void *)(v15 + 56) + v29 * v25, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    ++*(void *)(v15 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      return v15;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25B1A3C90(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v40 = a1;
  uint64_t v7 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  MEMORY[0x270FA5388](v8);
  char v43 = (char *)&v38 - v10;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  uint64_t v42 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7C0);
  uint64_t result = sub_25B290C00();
  uint64_t v12 = result;
  uint64_t v39 = a2;
  if (a2 < 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = *v40;
  }
  uint64_t v14 = 0;
  uint64_t v15 = result + 64;
  uint64_t v16 = v42;
  uint64_t v17 = (uint64_t)v43;
  unint64_t v41 = a4;
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v19 = v18 | (v14 << 6);
    }
    else
    {
      uint64_t v20 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_40;
      }
      if (v20 >= v39) {
        return v12;
      }
      unint64_t v21 = v40[v20];
      ++v14;
      if (!v21)
      {
        uint64_t v14 = v20 + 1;
        if (v20 + 1 >= v39) {
          return v12;
        }
        unint64_t v21 = v40[v14];
        if (!v21)
        {
          uint64_t v14 = v20 + 2;
          if (v20 + 2 >= v39) {
            return v12;
          }
          unint64_t v21 = v40[v14];
          if (!v21)
          {
            uint64_t v22 = v20 + 3;
            if (v22 >= v39) {
              return v12;
            }
            unint64_t v21 = v40[v22];
            if (!v21)
            {
              while (1)
              {
                uint64_t v14 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= v39) {
                  return v12;
                }
                unint64_t v21 = v40[v14];
                ++v22;
                if (v21) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v14 = v22;
          }
        }
      }
LABEL_24:
      unint64_t v13 = (v21 - 1) & v21;
      unint64_t v19 = __clz(__rbit64(v21)) + (v14 << 6);
    }
    uint64_t v23 = a4[7];
    uint64_t v24 = (uint64_t *)(a4[6] + 16 * v19);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = *(void *)(v44 + 72);
    sub_25B1A8FE8(v23 + v27 * v19, v17, type metadata accessor for NetworkMessenger.ExpiringConnection);
    sub_25B1A9050(v17, v16, type metadata accessor for NetworkMessenger.ExpiringConnection);
    sub_25B291210();
    swift_bridgeObjectRetain();
    sub_25B290630();
    uint64_t result = sub_25B291260();
    uint64_t v28 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v16 = v42;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v28) >> 6;
      uint64_t v16 = v42;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v30 == v33;
        if (v30 == v33) {
          unint64_t v30 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v15 + 8 * v30);
      }
      while (v35 == -1);
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(void *)(v15 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    uint64_t v36 = (void *)(*(void *)(v12 + 48) + 16 * v31);
    *uint64_t v36 = v25;
    v36[1] = v26;
    uint64_t result = sub_25B1A9050(v16, *(void *)(v12 + 56) + v31 * v27, type metadata accessor for NetworkMessenger.ExpiringConnection);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v41;
    if (!a3) {
      return v12;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25B1A4044(uint64_t a1)
{
  uint64_t v3 = sub_25B290080();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  unint64_t v13 = (char *)&v24 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v24 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v27 = v4 + 16;
  uint64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  int64_t v25 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v26 = v4 + 48;
  uint64_t v29 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v17) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v13, *(void *)(v29 + 48) + *(void *)(v4 + 72) * i, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    sub_25B1A56B4((uint64_t)v6, (uint64_t)v10);
    sub_25B116DE0((uint64_t)v10, &qword_26B33F200);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v17) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v25) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v25) {
        goto LABEL_25;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v25) {
          goto LABEL_25;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v25) {
            goto LABEL_25;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v18);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v25)
  {
LABEL_25:
    (*v28)(v13, 1, 1, v3);
    return swift_release();
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v25) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_25B1A43CC(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_25B1A5994(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_25B1A4574(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v16 >= v7) {
      goto LABEL_24;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v16);
    ++v8;
    if (!v17)
    {
      int64_t v8 = v16 + 1;
      if (v16 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v17 = *(void *)(v3 + 8 * v8);
      if (!v17)
      {
        int64_t v8 = v16 + 2;
        if (v16 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v17 = *(void *)(v3 + 8 * v8);
        if (!v17)
        {
          int64_t v8 = v16 + 3;
          if (v16 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v17 = *(void *)(v3 + 8 * v8);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v17 - 1) & v17;
    unint64_t v10 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_25B1A5B24(v12, v13);
    sub_25B1A8DFC(v14, v15);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v18 = v16 + 4;
  if (v18 < v7)
  {
    unint64_t v17 = *(void *)(v3 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v8 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v17 = *(void *)(v3 + 8 * v8);
        ++v18;
        if (v17) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v18;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_25B1A4714(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25B290080();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v59 = (char *)&v49 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v60 = a1;
  uint64_t v61 = a1 + 56;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v55 = v6;
  uint64_t v62 = v14;
  uint64_t v63 = 0;
  unint64_t v64 = v18;
  v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v57 = v8 + 16;
  uint64_t v58 = (char *)(a2 + 56);
  unint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v56 = v8;
  uint64_t v52 = a2;
  uint64_t v50 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  int64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v55;
  v25(v55, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v54)(v26, v27, 1, v7);
    uint64_t v60 = a1;
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    uint64_t v63 = v23;
    unint64_t v64 = v21;
    if ((*v53)(v26, 1, v7) == 1)
    {
      sub_25B1A85A8();
      sub_25B116DE0(v26, &qword_26B33F200);
      return v52;
    }
    (*v51)(v59, v26, v7);
    uint64_t v31 = v52;
    sub_25B1A8FA0(&qword_26A4D9220, MEMORY[0x263F07508]);
    uint64_t v32 = sub_25B290530();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    unint64_t v40 = *v19;
    uint64_t v8 = v56;
LABEL_35:
    v40(v59, v7);
    int64_t v20 = v63;
    unint64_t v18 = v64;
    a1 = v60;
    uint64_t v15 = v61;
    uint64_t v14 = v62;
    uint64_t v50 = v63;
    if (v64) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v50 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v55;
  }
  uint64_t v50 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v56 + 72);
  uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
  while (1)
  {
    v38(v11, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_25B1A8FA0((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
    char v39 = sub_25B290580();
    unint64_t v40 = *v19;
    (*v19)(v11, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v56;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v59, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v44);
    uint64_t v45 = sub_25B1A5CC0((unint64_t *)((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v60);
    swift_release();
    sub_25B1A85A8();
    return v45;
  }
  else
  {
    uint64_t v47 = (void *)swift_slowAlloc();
    memcpy(v47, v58, v44);
    uint64_t v48 = sub_25B1A5CC0((unint64_t *)v47, v43, v35, v34, &v60);
    swift_release();
    sub_25B1A85A8();
    MEMORY[0x261160890](v47, -1, -1);
    return v48;
  }
}

uint64_t sub_25B1A4DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_25B1A85A8();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_25B291210();
      swift_bridgeObjectRetain();
      sub_25B290630();
      uint64_t v19 = sub_25B291260();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    int64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_25B290FB0() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_25B290FB0() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x270FA5388](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_25B1A6244((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_25B1A85A8();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_25B1A6244((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_25B1A85A8();
      MEMORY[0x261160890](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_25B1A5248(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v41 = *MEMORY[0x263EF8340];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v35 = a1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v33 = ~v5;
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v4;
  int64_t v34 = (unint64_t)(63 - v5) >> 6;
  uint64_t v8 = a2 + 56;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
    }
    else
    {
      int64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_49;
      }
      if (v12 >= v34) {
        goto LABEL_47;
      }
      unint64_t v13 = *(void *)(v35 + 8 * v12);
      int64_t v14 = v9 + 1;
      if (!v13)
      {
        int64_t v14 = v9 + 2;
        if (v9 + 2 >= v34) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v35 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v9 + 3;
          if (v9 + 3 >= v34) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v35 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 4;
            if (v9 + 4 >= v34) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v35 + 8 * v14);
            if (!v13)
            {
              int64_t v15 = v9 + 5;
              if (v9 + 5 >= v34)
              {
LABEL_47:
                sub_25B1A85A8();
                return v2;
              }
              unint64_t v13 = *(void *)(v35 + 8 * v15);
              if (!v13)
              {
                while (1)
                {
                  int64_t v14 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    break;
                  }
                  if (v14 >= v34) {
                    goto LABEL_47;
                  }
                  unint64_t v13 = *(void *)(v35 + 8 * v14);
                  ++v15;
                  if (v13) {
                    goto LABEL_24;
                  }
                }
LABEL_49:
                __break(1u);
              }
              int64_t v14 = v9 + 5;
            }
          }
        }
      }
LABEL_24:
      unint64_t v7 = (v13 - 1) & v13;
      unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
      int64_t v9 = v14;
    }
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_25B291210();
    sub_25B291220();
    if (v17)
    {
      swift_bridgeObjectRetain();
      sub_25B290630();
    }
    uint64_t isStackAllocationSafe = sub_25B291260();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = isStackAllocationSafe & ~v20;
    if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
      break;
    }
LABEL_6:
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = ~v20;
  uint64_t v23 = *(void *)(v2 + 48);
  while (1)
  {
    BOOL v24 = (void *)(v23 + 16 * v21);
    uint64_t v25 = v24[1];
    if (!v25) {
      break;
    }
    if (v17)
    {
      BOOL v26 = *v24 == v18 && v25 == v17;
      if (v26 || (uint64_t isStackAllocationSafe = sub_25B290FB0(), (isStackAllocationSafe & 1) != 0))
      {
        uint64_t v36 = a1;
        uint64_t v37 = v35;
        uint64_t v38 = v33;
        int64_t v39 = v9;
        unint64_t v40 = v7;
        uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
        goto LABEL_41;
      }
    }
LABEL_30:
    unint64_t v21 = (v21 + 1) & v22;
    if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
      goto LABEL_6;
    }
  }
  if (v17) {
    goto LABEL_30;
  }
  uint64_t v36 = a1;
  uint64_t v37 = v35;
  uint64_t v38 = v33;
  int64_t v39 = v9;
  unint64_t v40 = v7;
LABEL_41:
  char v27 = *(unsigned char *)(v2 + 32);
  unint64_t v28 = (unint64_t)((1 << v27) + 63) >> 6;
  size_t v29 = 8 * v28;
  if ((v27 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    memcpy((char *)&v33 - ((v29 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v29);
    uint64_t v30 = sub_25B1A653C((uint64_t)&v33 - ((v29 + 15) & 0x3FFFFFFFFFFFFFF0), v28, v2, v21, &v36);
    swift_release();
    sub_25B1A85A8();
  }
  else
  {
    size_t v31 = (void *)swift_slowAlloc();
    memcpy(v31, (const void *)(v2 + 56), v29);
    uint64_t v30 = sub_25B1A653C((uint64_t)v31, v28, v2, v21, &v36);
    swift_release();
    sub_25B1A85A8();
    MEMORY[0x261160890](v31, -1, -1);
  }
  return v30;
}

uint64_t sub_25B1A56B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25B290080();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_25B1A8FA0(&qword_26A4D9220, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_25B290530();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    BOOL v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    int64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_25B1A8FA0((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
      char v19 = sub_25B290580();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *unint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_25B1A18E8();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_25B1A70D8(v12);
    *unint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_25B1A5994(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_25B291210();
  swift_bridgeObjectRetain();
  sub_25B290630();
  uint64_t v6 = sub_25B291260();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_25B290FB0() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_25B290FB0() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_25B1A1734();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_25B1A73F4(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_25B1A5B24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_25B291210();
  sub_25B291220();
  swift_bridgeObjectRetain();
  if (a2) {
    sub_25B290630();
  }
  uint64_t v6 = sub_25B291260();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = ~v7;
  uint64_t v10 = *(void *)(v5 + 48);
  while (1)
  {
    BOOL v11 = (void *)(v10 + 16 * v8);
    uint64_t v12 = v11[1];
    if (v12) {
      break;
    }
    if (!a2) {
      goto LABEL_14;
    }
LABEL_6:
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_17;
    }
  }
  if (!a2) {
    goto LABEL_6;
  }
  BOOL v13 = *v11 == a1 && v12 == a2;
  if (!v13 && (sub_25B290FB0() & 1) == 0) {
    goto LABEL_6;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *v2;
  uint64_t v18 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_25B1A2148();
    uint64_t v15 = v18;
  }
  uint64_t v16 = *(void *)(*(void *)(v15 + 48) + 16 * v8);
  sub_25B1A75BC(v8);
  *uint64_t v2 = v18;
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_25B1A5CC0(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v52 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v9 - 8);
  BOOL v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25B290080();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v65 = (char *)&v52 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v54 = a1;
  uint64_t v55 = v11;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v63 = v21 + 16;
  uint64_t v64 = a3;
  uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v56 = a5;
  uint64_t v57 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v62 = a3 + 56;
  BOOL v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v60 = v21;
  while (2)
  {
    uint64_t v53 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v29 = a5[2];
        int64_t v28 = a5[3];
        unint64_t v30 = a5[4];
        if (v30)
        {
          uint64_t v61 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v28 << 6);
LABEL_7:
          unint64_t v32 = *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31;
          uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
          uint64_t v34 = v26;
          v33(v11, v32, v12);
          uint64_t v35 = 0;
          goto LABEL_8;
        }
        int64_t v44 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        int64_t v45 = (unint64_t)(v29 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v44);
        if (v46) {
          goto LABEL_17;
        }
        int64_t v49 = v28 + 2;
        if (v28 + 2 >= v45) {
          goto LABEL_35;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v49);
        if (v46) {
          goto LABEL_23;
        }
        if (v28 + 3 >= v45) {
          goto LABEL_36;
        }
        unint64_t v46 = *(void *)(v27 + 8 * (v28 + 3));
        if (v46)
        {
          int64_t v44 = v28 + 3;
          goto LABEL_17;
        }
        int64_t v49 = v28 + 4;
        if (v28 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v27 + 8 * v49);
          if (v46)
          {
LABEL_23:
            int64_t v44 = v49;
LABEL_17:
            uint64_t v61 = (v46 - 1) & v46;
            unint64_t v31 = __clz(__rbit64(v46)) + (v44 << 6);
            int64_t v28 = v44;
            goto LABEL_7;
          }
          int64_t v44 = v28 + 5;
          if (v28 + 5 < v45)
          {
            unint64_t v46 = *(void *)(v27 + 8 * v44);
            if (v46) {
              goto LABEL_17;
            }
            int64_t v44 = v45 - 1;
            int64_t v50 = v28 + 6;
            while (v45 != v50)
            {
              unint64_t v46 = *(void *)(v27 + 8 * v50++);
              if (v46)
              {
                int64_t v44 = v50 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            uint64_t v61 = 0;
            uint64_t v35 = 1;
            int64_t v28 = v44;
            uint64_t v34 = v26;
            goto LABEL_8;
          }
LABEL_36:
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          int64_t v28 = v49;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        uint64_t v61 = 0;
        uint64_t v35 = 1;
        v28 += 3;
        uint64_t v34 = v26;
LABEL_8:
        (*v59)(v11, v35, 1, v12);
        *a5 = v34;
        a5[1] = v27;
        a5[2] = v29;
        a5[3] = v28;
        a5[4] = v61;
        if ((*v58)(v11, 1, v12) == 1)
        {
          sub_25B116DE0((uint64_t)v11, &qword_26B33F200);
          uint64_t v51 = v64;
          swift_retain();
          return sub_25B1A6800(v54, v52, v53, v51);
        }
        (*v57)(v65, v11, v12);
        uint64_t v36 = v64;
        sub_25B1A8FA0(&qword_26A4D9220, MEMORY[0x263F07508]);
        uint64_t v37 = sub_25B290530();
        uint64_t v38 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v39 = v37 & ~v38;
        if ((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39)) {
          break;
        }
        uint64_t v25 = *v24;
        uint64_t v22 = v60;
LABEL_4:
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      }
      uint64_t v61 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v40 = ~v38;
      uint64_t v41 = *(void *)(v60 + 72);
      unint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
      while (1)
      {
        v42(v15, *(void *)(v64 + 48) + v41 * v39, v12);
        sub_25B1A8FA0((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
        char v43 = sub_25B290580();
        uint64_t v25 = *v24;
        (*v24)(v15, v12);
        if (v43) {
          break;
        }
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        {
          BOOL v11 = v55;
          a5 = v56;
          uint64_t v22 = v60;
          goto LABEL_4;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      uint64_t v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      BOOL v11 = v55;
      uint64_t v48 = *(unint64_t *)((char *)v54 + v47);
      *(unint64_t *)((char *)v54 + v47) = v48 & ~(1 << v39);
      a5 = v56;
      uint64_t v22 = v60;
    }
    while ((v48 & (1 << v39)) == 0);
    uint64_t v23 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v53 != 1) {
      continue;
    }
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_25B1A6244(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  unint64_t v39 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_25B1A6B8C(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_25B291210();
        swift_bridgeObjectRetain();
        sub_25B290630();
        uint64_t v22 = sub_25B291260();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        int64_t v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_25B290FB0() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_25B290FB0() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_25B1A653C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = (unint64_t *)result;
  uint64_t v8 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v9 = v8 - 1;
  uint64_t v10 = a3 + 56;
LABEL_2:
  uint64_t v33 = v9;
LABEL_4:
  while (2)
  {
    int64_t v12 = a5[3];
    unint64_t v11 = a5[4];
    if (v11)
    {
      uint64_t v13 = (v11 - 1) & v11;
      unint64_t v14 = __clz(__rbit64(v11)) | (v12 << 6);
LABEL_22:
      uint64_t v20 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v14);
      uint64_t v22 = *v20;
      uint64_t v21 = v20[1];
      a5[3] = v12;
      a5[4] = v13;
      sub_25B291210();
      sub_25B291220();
      if (v21)
      {
        swift_bridgeObjectRetain();
        sub_25B290630();
      }
      uint64_t result = sub_25B291260();
      uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v24 = result & ~v23;
      if (((*(void *)(v10 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
      {
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
        continue;
      }
      uint64_t v25 = ~v23;
      uint64_t v26 = *(void *)(a3 + 48);
      while (1)
      {
        uint64_t v27 = (void *)(v26 + 16 * v24);
        uint64_t v28 = v27[1];
        if (v28)
        {
          if (v21)
          {
            BOOL v29 = *v27 == v22 && v28 == v21;
            if (v29 || (uint64_t result = sub_25B290FB0(), (result & 1) != 0))
            {
              uint64_t result = swift_bridgeObjectRelease();
LABEL_36:
              uint64_t v30 = (v24 >> 3) & 0x1FFFFFFFFFFFFFF8;
              uint64_t v31 = *(unint64_t *)((char *)v7 + v30);
              *(unint64_t *)((char *)v7 + v30) = v31 & ~(1 << v24);
              if ((v31 & (1 << v24)) != 0)
              {
                uint64_t v9 = v33 - 1;
                if (__OFSUB__(v33, 1)) {
                  goto LABEL_45;
                }
                if (v33 == 1) {
                  return MEMORY[0x263F8EE88];
                }
                goto LABEL_2;
              }
              goto LABEL_4;
            }
          }
        }
        else if (!v21)
        {
          goto LABEL_36;
        }
        unint64_t v24 = (v24 + 1) & v25;
        if (((*(void *)(v10 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
          goto LABEL_3;
        }
      }
    }
    break;
  }
  int64_t v15 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    int64_t v16 = (unint64_t)(a5[2] + 64) >> 6;
    if (v15 >= v16)
    {
      int64_t v15 = a5[3];
LABEL_41:
      a5[3] = v15;
      a5[4] = 0;
      swift_retain();
      return sub_25B1A6E24(v7, a2, v33, a3);
    }
    uint64_t v17 = a5[1];
    unint64_t v18 = *(void *)(v17 + 8 * v15);
    if (!v18)
    {
      if (v12 + 2 >= v16) {
        goto LABEL_41;
      }
      unint64_t v18 = *(void *)(v17 + 8 * (v12 + 2));
      if (v18)
      {
        int64_t v15 = v12 + 2;
      }
      else
      {
        if (v12 + 3 >= v16)
        {
          int64_t v15 = v12 + 2;
          goto LABEL_41;
        }
        unint64_t v18 = *(void *)(v17 + 8 * (v12 + 3));
        if (v18)
        {
          int64_t v15 = v12 + 3;
        }
        else
        {
          int64_t v15 = v12 + 4;
          if (v12 + 4 >= v16)
          {
            int64_t v15 = v12 + 3;
            goto LABEL_41;
          }
          unint64_t v18 = *(void *)(v17 + 8 * v15);
          if (!v18)
          {
            int64_t v15 = v16 - 1;
            int64_t v19 = v12 + 5;
            while (v16 != v19)
            {
              unint64_t v18 = *(void *)(v17 + 8 * v19++);
              if (v18)
              {
                int64_t v15 = v19 - 1;
                goto LABEL_21;
              }
            }
            goto LABEL_41;
          }
        }
      }
    }
LABEL_21:
    uint64_t v13 = (v18 - 1) & v18;
    unint64_t v14 = __clz(__rbit64(v18)) + (v15 << 6);
    int64_t v12 = v15;
    goto LABEL_22;
  }
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_25B1A6800(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_25B290080();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8C8);
  uint64_t result = sub_25B290A90();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  BOOL v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_25B1A8FA0(&qword_26A4D9220, MEMORY[0x263F07508]);
    uint64_t result = sub_25B290530();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25B1A6B8C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8C0);
  uint64_t result = sub_25B290A90();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_25B291210();
    swift_bridgeObjectRetain();
    sub_25B290630();
    uint64_t result = sub_25B291260();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_25B1A6E24(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_38:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA8B0);
  uint64_t result = sub_25B290A90();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_41;
    }
    if (v14 >= v30) {
      goto LABEL_38;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_38;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_38;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_25B291210();
    sub_25B291220();
    if (v18)
    {
      swift_bridgeObjectRetain();
      sub_25B290630();
    }
    uint64_t result = sub_25B291260();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *unint64_t v28 = v19;
    v28[1] = v18;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (!v5) {
      goto LABEL_38;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_38;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_38;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_25B1A70D8(int64_t a1)
{
  uint64_t v3 = sub_25B290080();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_25B290A10();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      uint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_25B1A8FA0(&qword_26A4D9220, MEMORY[0x263F07508]);
        uint64_t v21 = sub_25B290530();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

unint64_t sub_25B1A73F4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_25B290A10();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_25B291210();
        swift_bridgeObjectRetain();
        sub_25B290630();
        uint64_t v10 = sub_25B291260();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_25B1A75BC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_25B290A10();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(*(void *)(v3 + 48) + 16 * v6 + 8);
        sub_25B291210();
        sub_25B291220();
        if (v10)
        {
          swift_bridgeObjectRetain();
          sub_25B290630();
        }
        uint64_t v11 = sub_25B291260();
        swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v9)
        {
          goto LABEL_13;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_13:
          uint64_t v13 = *(void *)(v3 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v2);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void (*sub_25B1A77A8(void *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x68uLL);
  *a1 = v4;
  uint64_t v5 = sub_25B290080();
  v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  v4[9] = v6;
  uint64_t v8 = malloc(*(void *)(v6 + 64));
  v4[10] = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v8, a2, v5);
  v4[11] = sub_25B1A7BE4(v4);
  v4[12] = sub_25B1A7960(v4 + 4, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  return sub_25B1A78C8;
}

void sub_25B1A78C8(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 96))();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_25B1A7960(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  *uint64_t v8 = a2;
  v8[1] = v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB1B0);
  uint64_t v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  v8[2] = v10;
  uint64_t v11 = *v3;
  unint64_t v13 = sub_25B18A93C(a2);
  *((unsigned char *)v8 + 32) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v4 + 56);
        uint64_t v20 = type metadata accessor for NetworkBrowser.Monitor();
        uint64_t v21 = *(void *)(v20 - 8);
        sub_25B1A9050(v19 + *(void *)(v21 + 72) * v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
        uint64_t v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_25B1A7B84;
      }
LABEL_11:
      uint64_t v20 = type metadata accessor for NetworkBrowser.Monitor();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_25B194DF8();
      goto LABEL_7;
    }
    sub_25B1903B0(v16, a3 & 1);
    unint64_t v23 = sub_25B18A93C(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      unint64_t v13 = v23;
      v8[3] = v23;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_25B290080();
  uint64_t result = (void (*)(uint64_t **))sub_25B291190();
  __break(1u);
  return result;
}

void sub_25B1A7B84(uint64_t **a1)
{
  uint64_t v1 = *a1;
  int64_t v2 = (void *)(*a1)[2];
  sub_25B1A7C20((uint64_t)v2, *((unsigned char *)*a1 + 32), (uint64_t *)(*a1)[1], (*a1)[3], **a1);
  sub_25B116DE0((uint64_t)v2, (uint64_t *)&unk_26A4DB1B0);
  free(v2);
  free(v1);
}

uint64_t (*sub_25B1A7BE4(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_25B1A7C14;
}

uint64_t sub_25B1A7C14(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

unint64_t sub_25B1A7C20(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v25 = a5;
  unint64_t v27 = a4;
  uint64_t v8 = sub_25B290080();
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB1B0);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for NetworkBrowser.Monitor();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v24 - v19;
  sub_25B1A8448(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    unint64_t result = sub_25B116DE0((uint64_t)v13, (uint64_t *)&unk_26A4DB1B0);
    if (a2)
    {
      int64_t v22 = v27;
      swift_arrayDestroy();
      return sub_25B21F608(v22, *a3);
    }
  }
  else
  {
    sub_25B1A9050((uint64_t)v13, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    unint64_t v23 = (void *)*a3;
    if (a2)
    {
      return sub_25B1A9050((uint64_t)v20, v23[7] + *(void *)(v15 + 72) * v27, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v10, v25, v8);
      sub_25B1A9050((uint64_t)v20, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
      return sub_25B222930(v27, (uint64_t)v10, (uint64_t)v18, v23);
    }
  }
  return result;
}

uint64_t sub_25B1A7EF4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_25B1A7F7C(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8 = sub_25B290080();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*a4;
  unint64_t v14 = sub_25B18A93C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = (void *)*a4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_25B194B60();
    goto LABEL_7;
  }
  sub_25B18FFA0(v17, a3 & 1);
  unint64_t v23 = sub_25B18A93C(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*a4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_25B1A8390(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_25B1A8124(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NetworkBrowser.Monitor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B1A8180()
{
  return sub_25B19C4BC();
}

unint64_t sub_25B1A8188()
{
  unint64_t result = qword_26A4DA8A8;
  if (!qword_26A4DA8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA8A8);
  }
  return result;
}

uint64_t sub_25B1A81DC(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t a5)
{
  v26[1] = a5;
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = (void *)*a4;
  unint64_t v15 = sub_25B18A93C(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v21 = (void *)*a4;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v22 + 8 * v15) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_25B194B60();
    goto LABEL_7;
  }
  sub_25B18FFA0(v18, a3 & 1);
  unint64_t v24 = sub_25B18A93C(a2);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v15 = v24;
  uint64_t v21 = (void *)*a4;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  return sub_25B1A8390(v15, (uint64_t)v12, a1, v21);
}

uint64_t sub_25B1A8390(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_25B290080();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_25B1A8448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_25B1A84B0@<X0>(nw_browser_t *a1@<X8>)
{
  return sub_25B1CC08C(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 48), a1);
}

void sub_25B1A84C0(void *a1@<X8>)
{
  sub_25B197FC0(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *__return_ptr))(v1 + 32));
  if (!v2) {
    *a1 = v4;
  }
}

uint64_t sub_25B1A84F4()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_25B1A8544(int a1, uint64_t a2)
{
  sub_25B19DA4C(a1, a2, *(void *)(v2 + 16), *(NSObject **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(char **)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_25B1A8554()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_25B1A859C(NSObject *a1, NSObject *a2, uint64_t a3)
{
  sub_25B19F53C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void (***)(char *, char *, uint64_t))(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_25B1A85A8()
{
  return swift_release();
}

void sub_25B1A85B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_25B1A860C(unint64_t *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v50 = a2;
  uint64_t v57 = a5;
  uint64_t v53 = a4;
  uint64_t v51 = a1;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA890);
  uint64_t v6 = MEMORY[0x270FA5388](v61);
  v68 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v49 - v8;
  uint64_t v10 = type metadata accessor for NetworkBrowser.Monitor();
  uint64_t v60 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v67 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25B290080();
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v66 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = 0;
  int64_t v16 = 0;
  uint64_t v63 = a3;
  uint64_t v19 = a3[8];
  uint64_t v18 = a3 + 8;
  uint64_t v17 = v19;
  uint64_t v20 = 1 << *((unsigned char *)v18 - 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v17;
  uint64_t v54 = v18;
  int64_t v55 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v58 = v14 + 16;
  uint64_t v59 = v14;
  uint64_t v56 = (void (**)(char *, uint64_t))(v14 + 8);
  while (v22)
  {
    uint64_t v64 = (v22 - 1) & v22;
    int64_t v65 = v16;
    unint64_t v25 = __clz(__rbit64(v22)) | (v16 << 6);
LABEL_22:
    uint64_t v30 = v63;
    uint64_t v31 = *(void (**)(void))(v59 + 16);
    uint64_t v32 = v66;
    ((void (*)(char *, unint64_t, uint64_t))v31)(v66, v63[6] + *(void *)(v59 + 72) * v25, v12);
    uint64_t v33 = v30[7];
    uint64_t v34 = *(void *)(v60 + 72);
    unint64_t v62 = v25;
    uint64_t v35 = v33 + v34 * v25;
    uint64_t v36 = v12;
    uint64_t v37 = v67;
    sub_25B1A8FE8(v35, v67, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    uint64_t v38 = v61;
    uint64_t v39 = (uint64_t)&v9[*(int *)(v61 + 48)];
    ((void (*)(char *, char *, uint64_t))v31)(v9, v32, v36);
    uint64_t v40 = v37;
    uint64_t v12 = v36;
    sub_25B1A8FE8(v40, v39, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    uint64_t v41 = (uint64_t)&v68[*(int *)(v38 + 48)];
    v31();
    sub_25B1A8FE8(v39, v41, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    uint64_t v42 = *(void *)(v41 + 16);
    uint64_t v43 = *(void *)(v41 + 24);
    swift_bridgeObjectRetain();
    sub_25B1A8124(v41);
    if (v43)
    {
      if (v57)
      {
        if (v42 == v53 && v43 == v57)
        {
          sub_25B116DE0((uint64_t)v9, (uint64_t *)&unk_26A4DA890);
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
        char v45 = sub_25B290FB0();
        sub_25B116DE0((uint64_t)v9, (uint64_t *)&unk_26A4DA890);
        swift_bridgeObjectRelease();
        unint64_t v46 = *v56;
        (*v56)(v68, v36);
        sub_25B1A8124(v67);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v46)(v66, v36);
        unint64_t v22 = v64;
        int64_t v16 = v65;
        if (v45) {
          goto LABEL_33;
        }
      }
      else
      {
        sub_25B116DE0((uint64_t)v9, (uint64_t *)&unk_26A4DA890);
LABEL_5:
        swift_bridgeObjectRelease();
        unint64_t v24 = *v56;
        (*v56)(v68, v36);
        sub_25B1A8124(v67);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v66, v36);
        unint64_t v22 = v64;
        int64_t v16 = v65;
      }
    }
    else
    {
      uint64_t v23 = v57;
      swift_bridgeObjectRetain();
      sub_25B116DE0((uint64_t)v9, (uint64_t *)&unk_26A4DA890);
      if (v23) {
        goto LABEL_5;
      }
LABEL_32:
      uint64_t v47 = *v56;
      (*v56)(v68, v36);
      sub_25B1A8124(v67);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v47)(v66, v36);
      unint64_t v22 = v64;
      int64_t v16 = v65;
LABEL_33:
      *(unint64_t *)((char *)v51 + ((v62 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v62;
      if (__OFADD__(v52++, 1))
      {
        __break(1u);
        return sub_25B1A347C(v51, v50, v52, v63, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, &qword_26A4DA7A0, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
      }
    }
  }
  int64_t v26 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v26 >= v55) {
    return sub_25B1A347C(v51, v50, v52, v63, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, &qword_26A4DA7A0, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
  }
  unint64_t v27 = v54[v26];
  int64_t v28 = v16 + 1;
  if (v27) {
    goto LABEL_21;
  }
  int64_t v28 = v16 + 2;
  if (v16 + 2 >= v55) {
    return sub_25B1A347C(v51, v50, v52, v63, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, &qword_26A4DA7A0, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
  }
  unint64_t v27 = v54[v28];
  if (v27) {
    goto LABEL_21;
  }
  int64_t v28 = v16 + 3;
  if (v16 + 3 >= v55) {
    return sub_25B1A347C(v51, v50, v52, v63, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, &qword_26A4DA7A0, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
  }
  unint64_t v27 = v54[v28];
  if (v27)
  {
LABEL_21:
    uint64_t v64 = (v27 - 1) & v27;
    int64_t v65 = v28;
    unint64_t v25 = __clz(__rbit64(v27)) + (v28 << 6);
    goto LABEL_22;
  }
  uint64_t v29 = v16 + 4;
  if (v16 + 4 >= v55) {
    return sub_25B1A347C(v51, v50, v52, v63, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, &qword_26A4DA7A0, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
  }
  unint64_t v27 = v54[v29];
  if (v27)
  {
    int64_t v28 = v16 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v55) {
      return sub_25B1A347C(v51, v50, v52, v63, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, &qword_26A4DA7A0, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    }
    unint64_t v27 = v54[v28];
    ++v29;
    if (v27) {
      goto LABEL_21;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_25B1A8BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v15[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_25B1A860C((void *)((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, (void *)a1, a2, a3);
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_25B1A860C((unint64_t *)v13, v9, (void *)a1, a2, a3);
    swift_bridgeObjectRelease();
    MEMORY[0x261160890](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_25B1A8D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetworkBrowser.Monitor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B1A8DFC(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t objectdestroy_4Tm()
{
  uint64_t v1 = sub_25B290080();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_25B1A8EE0()
{
  uint64_t v1 = *(void *)(sub_25B290080() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_25B19A414(v2, v3);
}

unint64_t sub_25B1A8F44()
{
  unint64_t result = qword_26A4D9AE0;
  if (!qword_26A4D9AE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26A4D9AD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9AE0);
  }
  return result;
}

uint64_t sub_25B1A8FA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B1A8FE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B1A9050(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for NetworkBrowser.NetworkBrowserError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B1A9184);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkBrowser.NetworkBrowserError()
{
  return &type metadata for NetworkBrowser.NetworkBrowserError;
}

unint64_t sub_25B1A91C0()
{
  unint64_t result = qword_26A4DA8E0;
  if (!qword_26A4DA8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA8E0);
  }
  return result;
}

uint64_t RecordStub.init(recordID:clientDefinedID:version:expiration:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13 = *a6;
  uint64_t v14 = (int *)type metadata accessor for RecordStub();
  uint64_t v15 = a7 + v14[7];
  uint64_t v16 = sub_25B290000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_25B1A9398(a1, a7);
  uint64_t v17 = (void *)(a7 + v14[5]);
  void *v17 = a2;
  v17[1] = a3;
  uint64_t v18 = a7 + v14[6];
  uint64_t v19 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a4, v19);
  uint64_t result = sub_25B1A93FC(a5, v15);
  *(void *)(a7 + v14[8]) = v13;
  return result;
}

uint64_t type metadata accessor for RecordStub()
{
  uint64_t result = qword_26A4D92C0;
  if (!qword_26A4D92C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25B1A9398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Record.ID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B1A93FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for RecordStub(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = *(int *)(type metadata accessor for Record.ID(0) + 24);
    __dst = (char *)v4 + v9;
    size_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_25B290080();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = type metadata accessor for Record.ID.Ownership(0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[5];
    uint64_t v17 = a3[6];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (char *)v4 + v17;
    unint64_t v22 = (char *)a2 + v17;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v23(v21, v22, v11);
    uint64_t v24 = a3[7];
    unint64_t v25 = (char *)v4 + v24;
    int64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_25B290000();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t destroy for RecordStub(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for Record.ID(0) + 24);
  uint64_t v5 = sub_25B290080();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1 + *(int *)(a2 + 24), v5);
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = sub_25B290000();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    size_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *initializeWithCopy for RecordStub(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = *(int *)(type metadata accessor for Record.ID(0) + 24);
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_25B290080();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[5];
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (char *)a1 + v15;
  uint64_t v20 = (char *)a2 + v15;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v21(v19, v20, v10);
  uint64_t v22 = a3[7];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_25B290000();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

char *assignWithCopy for RecordStub(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for Record.ID(0) + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[5];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_25B290000();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  return a1;
}

char *initializeWithTake for RecordStub(char *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v7 = *(int *)(type metadata accessor for Record.ID(0) + 24);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_25B290080();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    int v13 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  }
  else
  {
    int v13 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v13(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v13(&a1[v14], &a2[v14], v10);
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_25B290000();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  return a1;
}

char *assignWithTake for RecordStub(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)a2 + 5);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(type metadata accessor for Record.ID(0) + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_25B290080();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[5];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v22 = *(void *)v20;
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(&a1[a3[6]], &a2[a3[6]], v12);
  uint64_t v23 = a3[7];
  int v24 = &a1[v23];
  int v25 = &a2[v23];
  uint64_t v26 = sub_25B290000();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v24, v25, v26);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_13:
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordStub(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B1AA490);
}

uint64_t sub_25B1AA490(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Record.ID(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = sub_25B290080();
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[6];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
    int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[7];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for RecordStub(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B1AA62C);
}

uint64_t sub_25B1AA62C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for Record.ID(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_25B290080();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[7];
  return v16(v18, a2, a2, v17);
}

void sub_25B1AA7B4()
{
  type metadata accessor for Record.ID(319);
  if (v0 <= 0x3F)
  {
    sub_25B290080();
    if (v1 <= 0x3F)
    {
      sub_25B1AA8CC();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_25B1AA8CC()
{
  if (!qword_26A4D9200)
  {
    sub_25B290000();
    unint64_t v0 = sub_25B2909B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A4D9200);
    }
  }
}

uint64_t dispatch thunk of ZoneVersionStoring.zoneVersions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ZoneVersionStoring.zoneVersion(relationshipID:zoneID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ZoneVersionStoring.update(relationshipID:zoneID:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of ZoneVersionStoring.remove(relationshipID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ZoneVersionStoring.remove(recordIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ZoneVersionStoring.removeAll()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t Record.ID.init(identifier:zoneIdentifier:ownership:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  long long v7 = *a3;
  uint64_t v8 = *((void *)a3 + 2);
  uint64_t v9 = *((void *)a3 + 3);
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(_OWORD *)(a5 + 16) = v7;
  *(void *)(a5 + 32) = v8;
  *(void *)(a5 + 40) = v9;
  uint64_t v10 = type metadata accessor for Record.ID(0);
  return sub_25B1AABF4(a4, a5 + *(int *)(v10 + 24), type metadata accessor for Record.ID.Ownership);
}

uint64_t type metadata accessor for Record.ID(uint64_t a1)
{
  return sub_25B180000(a1, (uint64_t *)&unk_26A4D9890);
}

uint64_t type metadata accessor for Record.ID.Ownership(uint64_t a1)
{
  return sub_25B180000(a1, qword_26A4D9868);
}

uint64_t Record.Value.init(protocolVersion:data:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for Record.Value(0);
  uint64_t v11 = (uint64_t)a5 + *(int *)(v10 + 20);
  uint64_t v12 = sub_25B28FEA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)((char *)a5 + *(int *)(v10 + 24)) = a1;
  *a5 = a2;
  a5[1] = a3;
  return sub_25B1AAB20(a4, v11);
}

uint64_t type metadata accessor for Record.Value(uint64_t a1)
{
  return sub_25B180000(a1, (uint64_t *)&unk_26A4D98A0);
}

uint64_t sub_25B1AAB20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t Record.init(metadata:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_25B1AABF4(a1, a3, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  uint64_t v5 = type metadata accessor for Record(0);
  return sub_25B1AABF4(a2, a3 + *(int *)(v5 + 20), type metadata accessor for Record.Value);
}

uint64_t sub_25B1AABF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for Record(uint64_t a1)
{
  return sub_25B180000(a1, (uint64_t *)&unk_26A4DA9C8);
}

uint64_t Record.ID.Ownership.hash(into:)()
{
  uint64_t v1 = sub_25B290080();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v5 - 8);
  long long v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B1B0B40(v0, (uint64_t)v7, type metadata accessor for Record.ID.Ownership);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1) {
    return sub_25B291220();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_25B291220();
  sub_25B1B05DC(&qword_26A4D9220, MEMORY[0x263F07508]);
  sub_25B290540();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_25B1AAE58()
{
  if (*v0) {
    return 0x65746F6D6572;
  }
  else {
    return 0x6C61636F6CLL;
  }
}

uint64_t sub_25B1AAE8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B1B5CB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B1AAEB4(uint64_t a1)
{
  unint64_t v2 = sub_25B1B0534();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1AAEF0(uint64_t a1)
{
  unint64_t v2 = sub_25B1B0534();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1AAF2C(uint64_t a1)
{
  unint64_t v2 = sub_25B1B0624();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1AAF68(uint64_t a1)
{
  unint64_t v2 = sub_25B1B0624();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1AAFA4(uint64_t a1)
{
  unint64_t v2 = sub_25B1B0588();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1AAFE0(uint64_t a1)
{
  unint64_t v2 = sub_25B1B0588();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Record.ID.Ownership.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8F0);
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v25 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v23 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25B290080();
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v28 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8F8);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA900);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1B0534();
  uint64_t v16 = v26;
  sub_25B291290();
  sub_25B1B0B40(v27, (uint64_t)v11, type metadata accessor for Record.ID.Ownership);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v4) == 1)
  {
    char v29 = 0;
    sub_25B1B0624();
    sub_25B290D10();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v28, v11, v4);
    char v30 = 1;
    sub_25B1B0588();
    uint64_t v18 = v23;
    sub_25B290D10();
    sub_25B1B05DC((unint64_t *)&unk_26A4D9210, MEMORY[0x263F07508]);
    uint64_t v19 = v25;
    sub_25B290D60();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v19);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v28, v4);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t Record.ID.Ownership.hashValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B291210();
  sub_25B1B0B40(v1, (uint64_t)v8, type metadata accessor for Record.ID.Ownership);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_25B291220();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_25B291220();
    sub_25B1B05DC(&qword_26A4D9220, MEMORY[0x263F07508]);
    sub_25B290540();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_25B291260();
}

uint64_t Record.ID.Ownership.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA920);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  uint64_t v37 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v41 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA928);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v40 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA930);
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Record.ID.Ownership(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v31 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1B0534();
  uint64_t v17 = v42;
  sub_25B291280();
  if (!v17)
  {
    uint64_t v32 = v14;
    uint64_t v33 = v16;
    uint64_t v18 = v40;
    uint64_t v19 = v41;
    uint64_t v42 = a1;
    uint64_t v20 = sub_25B290CF0();
    if (*(void *)(v20 + 16) == 1)
    {
      a1 = v42;
      if (*(unsigned char *)(v20 + 32))
      {
        uint64_t v40 = (char *)v20;
        char v44 = 1;
        sub_25B1B0588();
        uint64_t v21 = v19;
        sub_25B290C40();
        uint64_t v26 = sub_25B290080();
        sub_25B1B05DC(&qword_26A4D9228, MEMORY[0x263F07508]);
        uint64_t v27 = (uint64_t)v32;
        uint64_t v28 = v36;
        sub_25B290CC0();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v28);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v8);
        a1 = v42;
        uint64_t v29 = (uint64_t)v33;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v27, 0, 1, v26);
        sub_25B1AABF4(v27, v29, type metadata accessor for Record.ID.Ownership);
      }
      else
      {
        char v43 = 0;
        sub_25B1B0624();
        sub_25B290C40();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v8);
        uint64_t v30 = sub_25B290080();
        uint64_t v29 = (uint64_t)v33;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v33, 1, 1, v30);
      }
      sub_25B1AABF4(v29, v38, type metadata accessor for Record.ID.Ownership);
    }
    else
    {
      uint64_t v22 = sub_25B290AF0();
      swift_allocError();
      uint64_t v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F360);
      *uint64_t v24 = v11;
      sub_25B290C50();
      sub_25B290AD0();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x263F8DCB0], v22);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v8);
      a1 = v42;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_25B1ABC84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Record.ID.Ownership.init(from:)(a1, a2);
}

uint64_t sub_25B1ABC9C(void *a1)
{
  return Record.ID.Ownership.encode(to:)(a1);
}

uint64_t sub_25B1ABCB8()
{
  uint64_t v1 = sub_25B290080();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B1B0B40(v0, (uint64_t)v7, type metadata accessor for Record.ID.Ownership);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1) {
    return sub_25B291220();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
  sub_25B291220();
  sub_25B1B05DC(&qword_26A4D9220, MEMORY[0x263F07508]);
  sub_25B290540();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_25B1ABE84()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B291210();
  sub_25B1B0B40(v1, (uint64_t)v8, type metadata accessor for Record.ID.Ownership);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_25B291220();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    sub_25B291220();
    sub_25B1B05DC(&qword_26A4D9220, MEMORY[0x263F07508]);
    sub_25B290540();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return sub_25B291260();
}

uint64_t Record.ID.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Record.ID.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Record.ID.identifier.modify())()
{
  return nullsub_1;
}

uint64_t Record.ID.zoneIdentifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 Record.ID.zoneIdentifier.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  v1[1] = v5;
  v1[2].n128_u64[0] = v2;
  v1[2].n128_u64[1] = v3;
  return result;
}

uint64_t (*Record.ID.zoneIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Record.ID.ownership.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Record.ID(0);
  return sub_25B1B0B40(v1 + *(int *)(v3 + 24), a1, type metadata accessor for Record.ID.Ownership);
}

uint64_t Record.ID.ownership.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Record.ID(0);
  return sub_25B1B0BA8(a1, v1 + *(int *)(v3 + 24), type metadata accessor for Record.ID.Ownership);
}

uint64_t (*Record.ID.ownership.modify())(void)
{
  return nullsub_1;
}

uint64_t Record.ID.description.getter()
{
  return 0;
}

uint64_t Record.ID.hash(into:)()
{
  uint64_t v1 = sub_25B290080();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_25B290630();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25B290630();
  sub_25B290630();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for Record.ID(0);
  sub_25B1B0B40(v0 + *(int *)(v8 + 24), (uint64_t)v7, type metadata accessor for Record.ID.Ownership);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1) {
    return sub_25B291220();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_25B291220();
  sub_25B1B05DC(&qword_26A4D9220, MEMORY[0x263F07508]);
  sub_25B290540();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t Record.ID.hashValue.getter()
{
  return sub_25B291260();
}

uint64_t sub_25B1AC730()
{
  return sub_25B291260();
}

uint64_t sub_25B1AC774()
{
  return sub_25B291260();
}

uint64_t Record.Value.data.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_25B114300(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t Record.Value.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25B10DFF0(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*Record.Value.data.modify())()
{
  return nullsub_1;
}

uint64_t Record.Value.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Record.Value(0) + 20);
  return sub_25B116D78(v3, a1);
}

uint64_t Record.Value.url.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Record.Value(0) + 20);
  return sub_25B1AAB20(a1, v3);
}

uint64_t (*Record.Value.url.modify())(void)
{
  return nullsub_1;
}

uint64_t Record.Value.protocolVersion.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Record.Value(0) + 24));
}

uint64_t Record.Value.protocolVersion.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for Record.Value(0);
  *(void *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*Record.Value.protocolVersion.modify())(void)
{
  return nullsub_1;
}

uint64_t Record.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25B1B0B40(v1, a1, type metadata accessor for Record.ID);
}

uint64_t Record.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25B1B0B40(v1, a1, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
}

uint64_t Record.metadata.setter(uint64_t a1)
{
  return sub_25B1B0BA8(a1, v1, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
}

uint64_t (*Record.metadata.modify())()
{
  return nullsub_1;
}

uint64_t Record.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Record(0);
  return sub_25B1B0B40(v1 + *(int *)(v3 + 20), a1, type metadata accessor for Record.Value);
}

uint64_t Record.value.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Record(0);
  return sub_25B1B0BA8(a1, v1 + *(int *)(v3 + 20), type metadata accessor for Record.Value);
}

uint64_t (*Record.value.modify())(void)
{
  return nullsub_1;
}

uint64_t Record.description.getter()
{
  uint64_t v1 = type metadata accessor for Record.Value(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  sub_25B290AA0();
  swift_bridgeObjectRelease();
  uint64_t v6 = 0x617461646174656DLL;
  unint64_t v7 = 0xEA0000000000203ALL;
  RecordMetadata.description.getter();
  sub_25B290650();
  swift_bridgeObjectRelease();
  sub_25B290650();
  uint64_t v4 = type metadata accessor for Record(0);
  sub_25B1B0B40(v0 + *(int *)(v4 + 20), (uint64_t)v3, type metadata accessor for Record.Value);
  sub_25B290600();
  sub_25B290650();
  swift_bridgeObjectRelease();
  sub_25B290650();
  return v6;
}

BOOL static Record.== infix(_:_:)(void *a1, void *a2)
{
  if (!_s16ReplicatorEngine14RecordMetadataV2eeoiySbAC_ACtFZ_0(a1, a2)) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for Record(0) + 20);
  return _s16ReplicatorEngine6RecordV5ValueV2eeoiySbAE_AEtFZ_0((uint64_t)a1 + v4, (uint64_t)a2 + v4);
}

uint64_t sub_25B1ACCFC()
{
  if (*v0) {
    return 0x65756C6176;
  }
  else {
    return 0x617461646174656DLL;
  }
}

uint64_t sub_25B1ACD34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B1B5D94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B1ACD5C(uint64_t a1)
{
  unint64_t v2 = sub_25B1B0C10();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1ACD98(uint64_t a1)
{
  unint64_t v2 = sub_25B1B0C10();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Record.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA938);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1B0C10();
  sub_25B291290();
  v8[15] = 0;
  type metadata accessor for RecordMetadata();
  sub_25B1B05DC(&qword_26A4DA948, (void (*)(uint64_t))type metadata accessor for RecordMetadata);
  sub_25B290D60();
  if (!v1)
  {
    type metadata accessor for Record(0);
    v8[14] = 1;
    type metadata accessor for Record.Value(0);
    sub_25B1B05DC(&qword_26A4DA950, (void (*)(uint64_t))type metadata accessor for Record.Value);
    sub_25B290D60();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Record.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v20 = type metadata accessor for Record.Value(0);
  MEMORY[0x270FA5388](v20);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for RecordMetadata();
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA958);
  uint64_t v21 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Record(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1B0C10();
  sub_25B291280();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v18 = a1;
  uint64_t v12 = v21;
  uint64_t v13 = (uint64_t)v11;
  char v26 = 0;
  sub_25B1B05DC(&qword_26A4DA960, (void (*)(uint64_t))type metadata accessor for RecordMetadata);
  uint64_t v14 = (uint64_t)v23;
  uint64_t v15 = v24;
  sub_25B290CC0();
  sub_25B1AABF4(v14, v13, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  char v25 = 1;
  sub_25B1B05DC(&qword_26A4DA968, (void (*)(uint64_t))type metadata accessor for Record.Value);
  sub_25B290CC0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v15);
  sub_25B1AABF4((uint64_t)v5, v13 + *(int *)(v9 + 20), type metadata accessor for Record.Value);
  sub_25B1B0B40(v13, v19, type metadata accessor for Record);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return sub_25B1B0C64(v13, type metadata accessor for Record);
}

uint64_t sub_25B1AD394@<X0>(uint64_t a1@<X8>)
{
  return sub_25B1B0B40(v1, a1, type metadata accessor for Record.ID);
}

uint64_t sub_25B1AD3C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Record.init(from:)(a1, a2);
}

uint64_t sub_25B1AD3E0(void *a1)
{
  return Record.encode(to:)(a1);
}

uint64_t sub_25B1AD3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static RecordMetadata.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  return static Record.Value.== infix(_:_:)(a1 + v6, a2 + v6);
}

uint64_t sub_25B1AD464(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25B270A08(*a1, *a2);
}

uint64_t sub_25B1AD470()
{
  return sub_25B291260();
}

uint64_t sub_25B1AD514()
{
  sub_25B290630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1AD5A4()
{
  return sub_25B291260();
}

uint64_t sub_25B1AD644@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B1B66D0();
  *a1 = result;
  return result;
}

void sub_25B1AD67C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA00000000007265;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1701736314;
  if (v2 != 1)
  {
    uint64_t v5 = 0x69687372656E776FLL;
    unint64_t v4 = 0xE900000000000070;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x696669746E656469;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_25B1AD6DC()
{
  uint64_t v1 = 1701736314;
  if (*v0 != 1) {
    uint64_t v1 = 0x69687372656E776FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_25B1AD738@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B1B66D0();
  *a1 = result;
  return result;
}

void sub_25B1AD768(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_25B1AD774(uint64_t a1)
{
  unint64_t v2 = sub_25B1B5ED4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1AD7B0(uint64_t a1)
{
  unint64_t v2 = sub_25B1B5ED4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1AD7EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v4);
  BOOL v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAAD8);
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Record.ID.Versions.V0(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (void *)((char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = a1[3];
  char v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_25B1B5ED4();
  sub_25B291280();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  v21[1] = v4;
  uint64_t v13 = (uint64_t)v6;
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  char v28 = 0;
  uint64_t v16 = (uint64_t)v11;
  *uint64_t v11 = sub_25B290CA0();
  v11[1] = v17;
  char v27 = 1;
  v11[2] = sub_25B290CA0();
  v11[3] = v18;
  char v26 = 2;
  sub_25B1B05DC(&qword_26A4DAAE0, (void (*)(uint64_t))type metadata accessor for Record.ID.Ownership);
  uint64_t v19 = v24;
  sub_25B290CC0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v19);
  sub_25B1AABF4(v13, v16 + *(int *)(v9 + 24), type metadata accessor for Record.ID.Ownership);
  sub_25B1B0B40(v16, v15, type metadata accessor for Record.ID.Versions.V0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_25B1B0C64(v16, type metadata accessor for Record.ID.Versions.V0);
}

uint64_t sub_25B1ADB50(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAA88);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1B5ED4();
  sub_25B291290();
  v8[15] = 0;
  sub_25B290D40();
  if (!v1)
  {
    v8[14] = 1;
    sub_25B290D40();
    type metadata accessor for Record.ID.Versions.V0(0);
    v8[13] = 2;
    type metadata accessor for Record.ID.Ownership(0);
    sub_25B1B05DC(&qword_26A4DAA80, (void (*)(uint64_t))type metadata accessor for Record.ID.Ownership);
    sub_25B290D60();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_25B1ADD30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25B1AD7EC(a1, a2);
}

uint64_t sub_25B1ADD48(void *a1)
{
  return sub_25B1ADB50(a1);
}

uint64_t sub_25B1ADD60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25B2708CC(*a1, *a2);
}

uint64_t sub_25B1ADD6C()
{
  return sub_25B291260();
}

uint64_t sub_25B1ADE24()
{
  sub_25B290630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1ADEC8()
{
  return sub_25B291260();
}

uint64_t sub_25B1ADF7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B1B66D0();
  *a1 = result;
  return result;
}

void sub_25B1ADFB4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA00000000007265;
  unint64_t v4 = 0xEE00726569666974;
  uint64_t v5 = 0x6E656449656E6F7ALL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x69687372656E776FLL;
    unint64_t v4 = 0xE900000000000070;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x696669746E656469;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_25B1AE028()
{
  uint64_t v1 = 0x6E656449656E6F7ALL;
  if (*v0 != 1) {
    uint64_t v1 = 0x69687372656E776FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_25B1AE098@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B1B66D0();
  *a1 = result;
  return result;
}

uint64_t sub_25B1AE0C8(uint64_t a1)
{
  unint64_t v2 = sub_25B1B5E80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1AE104(uint64_t a1)
{
  unint64_t v2 = sub_25B1B5E80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1AE140@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v4);
  BOOL v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAAE8);
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Record.ID.Versions.V8(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  char v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_25B1B5E80();
  sub_25B291280();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  v22[1] = v4;
  uint64_t v13 = (uint64_t)v6;
  uint64_t v15 = v23;
  uint64_t v14 = v24;
  LOBYTE(v27) = 0;
  uint64_t v16 = (uint64_t)v11;
  *(void *)uint64_t v11 = sub_25B290CA0();
  *((void *)v11 + 1) = v17;
  char v30 = 1;
  sub_25B196B08();
  sub_25B290CC0();
  uint64_t v18 = v28;
  uint64_t v19 = v29;
  *((_OWORD *)v11 + 1) = v27;
  *((void *)v11 + 4) = v18;
  *((void *)v11 + 5) = v19;
  LOBYTE(v27) = 2;
  sub_25B1B05DC(&qword_26A4DAAE0, (void (*)(uint64_t))type metadata accessor for Record.ID.Ownership);
  uint64_t v20 = v25;
  sub_25B290CC0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v20);
  sub_25B1AABF4(v13, v16 + *(int *)(v9 + 24), type metadata accessor for Record.ID.Ownership);
  sub_25B1B0B40(v16, v14, type metadata accessor for Record.ID.Versions.V8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_25B1B0C64(v16, type metadata accessor for Record.ID.Versions.V8);
}

uint64_t sub_25B1AE4D4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAA70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1B5E80();
  sub_25B291290();
  LOBYTE(v13) = 0;
  sub_25B290D40();
  if (!v2)
  {
    uint64_t v9 = *(void *)(v3 + 32);
    uint64_t v10 = *(void *)(v3 + 40);
    long long v13 = *(_OWORD *)(v3 + 16);
    uint64_t v14 = v9;
    uint64_t v15 = v10;
    v12[15] = 1;
    sub_25B196E10();
    sub_25B290D60();
    type metadata accessor for Record.ID.Versions.V8(0);
    LOBYTE(v13) = 2;
    type metadata accessor for Record.ID.Ownership(0);
    sub_25B1B05DC(&qword_26A4DAA80, (void (*)(uint64_t))type metadata accessor for Record.ID.Ownership);
    sub_25B290D60();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25B1AE6D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25B1AE140(a1, a2);
}

uint64_t sub_25B1AE6EC(void *a1)
{
  return sub_25B1AE4D4(a1);
}

uint64_t Record.ID.encode(to:)(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_25B10FF48(a1, (uint64_t)v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA970);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA978);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v38 = v2;
    uint64_t v31 = 0;
    memset(v30, 0, sizeof(v30));
    sub_25B116DE0((uint64_t)v30, &qword_26A4DA980);
LABEL_7:
    uint64_t v16 = *v1;
    uint64_t v15 = v1[1];
    uint64_t v17 = v1[2];
    uint64_t v18 = v1[3];
    uint64_t v20 = v1[4];
    uint64_t v19 = v1[5];
    uint64_t v21 = (uint64_t)v3 + *(int *)(type metadata accessor for Record.ID(0) + 24);
    uint64_t v22 = type metadata accessor for Record.ID.Versions.V8(0);
    uint64_t v36 = v22;
    uint64_t v37 = sub_25B1B05DC(&qword_26A4DA988, (void (*)(uint64_t))type metadata accessor for Record.ID.Versions.V8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v35);
    sub_25B1B0B40(v21, (uint64_t)boxed_opaque_existential_1 + *(int *)(v22 + 24), type metadata accessor for Record.ID.Ownership);
    uint64_t *boxed_opaque_existential_1 = v16;
    boxed_opaque_existential_1[1] = v15;
    boxed_opaque_existential_1[2] = v17;
    boxed_opaque_existential_1[3] = v18;
    boxed_opaque_existential_1[4] = v20;
    boxed_opaque_existential_1[5] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  sub_25B180BD4(v30, (uint64_t)v32);
  uint64_t v4 = v33;
  uint64_t v5 = v34;
  __swift_project_boxed_opaque_existential_1(v32, v33);
  unint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  if (v7)
  {
    uint64_t v38 = v2;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    goto LABEL_7;
  }
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v11 = v1[2];
  uint64_t v10 = v1[3];
  if (v6 > 7)
  {
    uint64_t v38 = v3[4];
    uint64_t v29 = v11;
    uint64_t v24 = v3[5];
    uint64_t v25 = (uint64_t)v3 + *(int *)(type metadata accessor for Record.ID(0) + 24);
    uint64_t v26 = type metadata accessor for Record.ID.Versions.V8(0);
    uint64_t v36 = v26;
    uint64_t v37 = sub_25B1B05DC(&qword_26A4DA988, (void (*)(uint64_t))type metadata accessor for Record.ID.Versions.V8);
    long long v27 = __swift_allocate_boxed_opaque_existential_1(v35);
    sub_25B1B0B40(v25, (uint64_t)v27 + *(int *)(v26 + 24), type metadata accessor for Record.ID.Ownership);
    *long long v27 = v9;
    v27[1] = v8;
    v27[2] = v29;
    v27[3] = v10;
    v27[4] = v38;
    v27[5] = v24;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = (uint64_t)v3 + *(int *)(type metadata accessor for Record.ID(0) + 24);
    uint64_t v13 = type metadata accessor for Record.ID.Versions.V0(0);
    uint64_t v36 = v13;
    uint64_t v37 = sub_25B1B05DC(&qword_26A4DA990, (void (*)(uint64_t))type metadata accessor for Record.ID.Versions.V0);
    uint64_t v14 = __swift_allocate_boxed_opaque_existential_1(v35);
    sub_25B1B0B40(v12, (uint64_t)v14 + *(int *)(v13 + 24), type metadata accessor for Record.ID.Ownership);
    *uint64_t v14 = v9;
    v14[1] = v8;
    v14[2] = v11;
    v14[3] = v10;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
LABEL_10:
  __swift_project_boxed_opaque_existential_1(v35, v36);
  sub_25B290520();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

uint64_t Record.ID.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Record.ID.Versions.V8(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v38 - v8;
  uint64_t v10 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Record.ID.Versions.V0(0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25B10FF48(a1, (uint64_t)v42);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA998);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA9A0);
  if (swift_dynamicCast())
  {
    uint64_t v38 = v4;
    uint64_t v39 = a2;
    sub_25B180BD4(v40, (uint64_t)v43);
    uint64_t v16 = v44;
    uint64_t v17 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    unint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
    if ((v19 & 1) == 0)
    {
      if (v18 > 7)
      {
        sub_25B10FF48(a1, (uint64_t)v42);
        uint64_t v29 = v46;
        sub_25B1AE140(v42, (uint64_t)v9);
        __swift_destroy_boxed_opaque_existential_1(a1);
        char v30 = v39;
        if (v29) {
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
        }
        uint64_t v31 = *((void *)v9 + 1);
        void *v39 = *(void *)v9;
        v30[1] = v31;
        uint64_t v32 = *((void *)v9 + 4);
        uint64_t v33 = *((void *)v9 + 5);
        *((_OWORD *)v30 + 1) = *((_OWORD *)v9 + 1);
        v30[4] = v32;
        v30[5] = v33;
        uint64_t v12 = &v9[*(int *)(v38 + 24)];
      }
      else
      {
        sub_25B10FF48(a1, (uint64_t)v42);
        uint64_t v20 = v46;
        sub_25B1AD7EC(v42, (uint64_t)v15);
        uint64_t v21 = v39;
        if (v20)
        {
          __swift_destroy_boxed_opaque_existential_1(a1);
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
        }
        uint64_t v34 = v15[1];
        void *v39 = *v15;
        v21[1] = v34;
        uint64_t v36 = v15[2];
        uint64_t v35 = v15[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_destroy_boxed_opaque_existential_1(a1);
        v39[2] = v36;
        char v30 = v39;
        v39[3] = v35;
        v30[4] = 0xD000000000000011;
        v30[5] = 0x800000025B29C8A0;
        sub_25B1B0B40((uint64_t)v15 + *(int *)(v13 + 24), (uint64_t)v12, type metadata accessor for Record.ID.Ownership);
        sub_25B1B0C64((uint64_t)v15, type metadata accessor for Record.ID.Versions.V0);
      }
      uint64_t v37 = type metadata accessor for Record.ID(0);
      sub_25B1AABF4((uint64_t)v12, (uint64_t)v30 + *(int *)(v37 + 24), type metadata accessor for Record.ID.Ownership);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    uint64_t v4 = v38;
    a2 = v39;
  }
  else
  {
    uint64_t v41 = 0;
    memset(v40, 0, sizeof(v40));
    sub_25B116DE0((uint64_t)v40, &qword_26A4DA9A8);
  }
  sub_25B10FF48(a1, (uint64_t)v43);
  uint64_t v22 = v46;
  sub_25B1AE140(v43, (uint64_t)v7);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v22)
  {
    uint64_t v24 = *((void *)v7 + 1);
    *a2 = *(void *)v7;
    a2[1] = v24;
    uint64_t v25 = *((void *)v7 + 4);
    uint64_t v26 = *((void *)v7 + 5);
    *((_OWORD *)a2 + 1) = *((_OWORD *)v7 + 1);
    a2[4] = v25;
    a2[5] = v26;
    uint64_t v27 = (uint64_t)&v7[*(int *)(v4 + 24)];
    uint64_t v28 = type metadata accessor for Record.ID(0);
    return sub_25B1AABF4(v27, (uint64_t)a2 + *(int *)(v28 + 24), type metadata accessor for Record.ID.Ownership);
  }
  return result;
}

uint64_t sub_25B1AEE50@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return Record.ID.init(from:)(a1, a2);
}

uint64_t sub_25B1AEE68(uint64_t a1)
{
  return Record.ID.encode(to:)(a1);
}

uint64_t sub_25B1AEE80(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAAB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1B5F7C();
  sub_25B291290();
  long long v11 = *v3;
  v10[15] = 0;
  sub_25B196FCC();
  sub_25B290D60();
  if (!v2)
  {
    type metadata accessor for Record.Value.Versions.V0(0);
    LOBYTE(v11) = 1;
    sub_25B28FEA0();
    sub_25B1B05DC(&qword_26A4DAAA8, MEMORY[0x263F06EA8]);
    sub_25B290D20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25B1AF050@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAAC0);
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Record.Value.Versions.V0(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (_OWORD *)((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = (uint64_t)v13 + *(int *)(v11 + 28);
  uint64_t v15 = sub_25B28FEA0();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v23 = v14;
  v16(v14, 1, 1, v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1B5F7C();
  sub_25B291280();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_25B116DE0(v23, &qword_26A4D9160);
  }
  else
  {
    uint64_t v17 = v21;
    char v25 = 0;
    sub_25B196AB4();
    uint64_t v18 = v22;
    sub_25B290CC0();
    *uint64_t v13 = v24;
    LOBYTE(v24) = 1;
    sub_25B1B05DC(&qword_26A4DAAC8, MEMORY[0x263F06EA8]);
    sub_25B290C80();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v18);
    sub_25B1AAB20((uint64_t)v6, v23);
    sub_25B1B0B40((uint64_t)v13, v20, type metadata accessor for Record.Value.Versions.V0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_25B1B0C64((uint64_t)v13, type metadata accessor for Record.Value.Versions.V0);
  }
}

uint64_t sub_25B1AF39C()
{
  if (*v0) {
    return 7107189;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_25B1AF3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B1B6718(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B1AF3F0(uint64_t a1)
{
  unint64_t v2 = sub_25B1B5F7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1AF42C(uint64_t a1)
{
  unint64_t v2 = sub_25B1B5F7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1AF468@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25B1AF050(a1, a2);
}

uint64_t sub_25B1AF480(void *a1)
{
  return sub_25B1AEE80(a1);
}

uint64_t sub_25B1AF498(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAA98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1B5F28();
  sub_25B291290();
  long long v11 = *v3;
  v10[15] = 0;
  sub_25B196FCC();
  sub_25B290D60();
  if (!v2)
  {
    type metadata accessor for Record.Value.Versions.V8(0);
    LOBYTE(v11) = 1;
    sub_25B28FEA0();
    sub_25B1B05DC(&qword_26A4DAAA8, MEMORY[0x263F06EA8]);
    sub_25B290D20();
    LOBYTE(v11) = 2;
    sub_25B290D80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25B1AF698@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v27 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAAD0);
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.Value.Versions.V8(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)&v11[*(int *)(v9 + 20)];
  uint64_t v13 = sub_25B28FEA0();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  uint64_t v29 = v12;
  v14(v12, 1, 1, v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1B5F28();
  sub_25B291280();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_25B116DE0(v29, &qword_26A4D9160);
  }
  else
  {
    uint64_t v23 = v11;
    long long v24 = a1;
    uint64_t v16 = v26;
    uint64_t v15 = (uint64_t)v27;
    char v31 = 0;
    sub_25B196AB4();
    uint64_t v17 = v28;
    sub_25B290CC0();
    *uint64_t v23 = v30;
    LOBYTE(v30) = 1;
    sub_25B1B05DC(&qword_26A4DAAC8, MEMORY[0x263F06EA8]);
    sub_25B290C80();
    sub_25B1AAB20(v15, v29);
    LOBYTE(v30) = 2;
    uint64_t v18 = sub_25B290CE0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
    uint64_t v19 = (uint64_t)v24;
    uint64_t v20 = (uint64_t)v23;
    *(void *)((char *)v23 + *(int *)(v8 + 24)) = v18;
    sub_25B1B0B40(v20, v25, type metadata accessor for Record.Value.Versions.V8);
    __swift_destroy_boxed_opaque_existential_1(v19);
    return sub_25B1B0C64(v20, type metadata accessor for Record.Value.Versions.V8);
  }
}

BOOL sub_25B1AFA68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25B1AFA7C()
{
  uint64_t v1 = 7107189;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C6F636F746F7270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_25B1AFAD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B1B67EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B1AFAFC(uint64_t a1)
{
  unint64_t v2 = sub_25B1B5F28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1AFB38(uint64_t a1)
{
  unint64_t v2 = sub_25B1B5F28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1AFB74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25B1AF698(a1, a2);
}

uint64_t sub_25B1AFB8C(void *a1)
{
  return sub_25B1AF498(a1);
}

uint64_t Record.Value.encode(to:)(uint64_t a1)
{
  unint64_t v2 = v1;
  sub_25B10FF48(a1, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA970);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA978);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v27 = 0;
    memset(v26, 0, sizeof(v26));
    sub_25B116DE0((uint64_t)v26, &qword_26A4DA980);
LABEL_7:
    uint64_t v14 = *v1;
    unint64_t v15 = v2[1];
    uint64_t v16 = type metadata accessor for Record.Value(0);
    uint64_t v17 = (uint64_t)v2 + *(int *)(v16 + 20);
    uint64_t v18 = type metadata accessor for Record.Value.Versions.V8(0);
    uint64_t v32 = v18;
    uint64_t v33 = sub_25B1B05DC(&qword_26A4DA9B0, (void (*)(uint64_t))type metadata accessor for Record.Value.Versions.V8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v31);
    sub_25B116D78(v17, (uint64_t)boxed_opaque_existential_1 + *(int *)(v18 + 20));
    uint64_t v20 = *(uint64_t *)((char *)v2 + *(int *)(v16 + 24));
    uint64_t *boxed_opaque_existential_1 = v14;
    boxed_opaque_existential_1[1] = v15;
    *(uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v18 + 24)) = v20;
    sub_25B114300(v14, v15);
    goto LABEL_10;
  }
  sub_25B180BD4(v26, (uint64_t)v28);
  uint64_t v3 = v29;
  uint64_t v4 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  if (v6)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    goto LABEL_7;
  }
  unint64_t v7 = v5;
  uint64_t v8 = *v1;
  unint64_t v9 = v2[1];
  uint64_t v10 = type metadata accessor for Record.Value(0);
  uint64_t v11 = (uint64_t)v2 + *(int *)(v10 + 20);
  if (v7 > 7)
  {
    uint64_t v21 = v10;
    uint64_t v22 = type metadata accessor for Record.Value.Versions.V8(0);
    uint64_t v32 = v22;
    uint64_t v33 = sub_25B1B05DC(&qword_26A4DA9B0, (void (*)(uint64_t))type metadata accessor for Record.Value.Versions.V8);
    uint64_t v23 = __swift_allocate_boxed_opaque_existential_1(v31);
    sub_25B116D78(v11, (uint64_t)v23 + *(int *)(v22 + 20));
    uint64_t v24 = *(uint64_t *)((char *)v2 + *(int *)(v21 + 24));
    *uint64_t v23 = v8;
    v23[1] = v9;
    *(uint64_t *)((char *)v23 + *(int *)(v22 + 24)) = v24;
  }
  else
  {
    uint64_t v12 = type metadata accessor for Record.Value.Versions.V0(0);
    uint64_t v32 = v12;
    uint64_t v33 = sub_25B1B05DC(&qword_26A4DA9B8, (void (*)(uint64_t))type metadata accessor for Record.Value.Versions.V0);
    uint64_t v13 = __swift_allocate_boxed_opaque_existential_1(v31);
    sub_25B116D78(v11, (uint64_t)v13 + *(int *)(v12 + 20));
    *uint64_t v13 = v8;
    v13[1] = v9;
  }
  sub_25B114300(v8, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
LABEL_10:
  __swift_project_boxed_opaque_existential_1(v31, v32);
  sub_25B290520();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

uint64_t Record.Value.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Record.Value.Versions.V8(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unint64_t v7 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (uint64_t *)((char *)&v34 - v8);
  uint64_t v10 = type metadata accessor for Record.Value.Versions.V0(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (_OWORD *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = type metadata accessor for Record.Value(0);
  uint64_t v13 = (uint64_t)a2 + *(int *)(v37 + 20);
  uint64_t v14 = sub_25B28FEA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_25B10FF48(a1, (uint64_t)v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA998);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA9A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v39 = 0;
    memset(v38, 0, sizeof(v38));
    sub_25B116DE0((uint64_t)v38, &qword_26A4DA9A8);
    goto LABEL_8;
  }
  uint64_t v35 = v4;
  uint64_t v36 = a2;
  sub_25B180BD4(v38, (uint64_t)v41);
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  unint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    uint64_t v4 = v35;
    a2 = v36;
LABEL_8:
    sub_25B10FF48(a1, (uint64_t)v41);
    uint64_t v22 = v44;
    sub_25B1AF698(v41, (uint64_t)v7);
    __swift_destroy_boxed_opaque_existential_1(a1);
    if (!v22)
    {
      uint64_t v23 = *v7;
      unint64_t v24 = v7[1];
      *a2 = *v7;
      a2[1] = v24;
      uint64_t v25 = v4;
      uint64_t v26 = (uint64_t)v7 + *(int *)(v4 + 20);
      sub_25B114300(v23, v24);
      sub_25B1B0D44(v26, v13);
      uint64_t v27 = *(uint64_t *)((char *)v7 + *(int *)(v25 + 24));
      uint64_t result = sub_25B1B0C64((uint64_t)v7, type metadata accessor for Record.Value.Versions.V8);
      *(uint64_t *)((char *)a2 + *(int *)(v37 + 24)) = v27;
      return result;
    }
    return sub_25B116DE0(v13, &qword_26A4D9160);
  }
  if (v17 > 7)
  {
    sub_25B10FF48(a1, (uint64_t)v40);
    uint64_t v29 = v44;
    sub_25B1AF698(v40, (uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_1(a1);
    uint64_t v20 = v36;
    if (!v29)
    {
      uint64_t v30 = *v9;
      unint64_t v31 = v9[1];
      *uint64_t v36 = *v9;
      v20[1] = v31;
      uint64_t v32 = v35;
      uint64_t v33 = (uint64_t)v9 + *(int *)(v35 + 20);
      sub_25B114300(v30, v31);
      sub_25B1B0D44(v33, v13);
      uint64_t v21 = *(uint64_t *)((char *)v9 + *(int *)(v32 + 24));
      sub_25B1B0C64((uint64_t)v9, type metadata accessor for Record.Value.Versions.V8);
      goto LABEL_15;
    }
  }
  else
  {
    sub_25B10FF48(a1, (uint64_t)v40);
    uint64_t v19 = v44;
    sub_25B1AF050(v40, (uint64_t)v12);
    __swift_destroy_boxed_opaque_existential_1(a1);
    uint64_t v20 = v36;
    if (!v19)
    {
      *(_OWORD *)uint64_t v36 = *v12;
      sub_25B1AAB20((uint64_t)v12 + *(int *)(v10 + 20), v13);
      uint64_t v21 = 1;
LABEL_15:
      *(uint64_t *)((char *)v20 + *(int *)(v37 + 24)) = v21;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_25B116DE0(v13, &qword_26A4D9160);
}

uint64_t sub_25B1B0224@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return Record.Value.init(from:)(a1, a2);
}

uint64_t sub_25B1B023C(uint64_t a1)
{
  return Record.Value.encode(to:)(a1);
}

uint64_t _s16ReplicatorEngine6RecordV2IDV9OwnershipO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9880);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_25B1B0B40(a1, (uint64_t)v14, type metadata accessor for Record.ID.Ownership);
  sub_25B1B0B40(a2, v15, type metadata accessor for Record.ID.Ownership);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_25B1B0B40((uint64_t)v14, (uint64_t)v10, type metadata accessor for Record.ID.Ownership);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      char v17 = sub_25B290030();
      char v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_25B1B0C64((uint64_t)v14, type metadata accessor for Record.ID.Ownership);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_25B116DE0((uint64_t)v14, &qword_26A4D9880);
    char v17 = 0;
    return v17 & 1;
  }
  sub_25B1B0C64((uint64_t)v14, type metadata accessor for Record.ID.Ownership);
  char v17 = 1;
  return v17 & 1;
}

unint64_t sub_25B1B0534()
{
  unint64_t result = qword_26A4DA908;
  if (!qword_26A4DA908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA908);
  }
  return result;
}

unint64_t sub_25B1B0588()
{
  unint64_t result = qword_26A4DA910;
  if (!qword_26A4DA910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA910);
  }
  return result;
}

uint64_t sub_25B1B05DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25B1B0624()
{
  unint64_t result = qword_26A4DA918;
  if (!qword_26A4DA918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA918);
  }
  return result;
}

uint64_t _s16ReplicatorEngine6RecordV2IDV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_25B290FB0() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  if ((a1[2] != a2[2] || a1[3] != a2[3]) && (sub_25B290FB0() & 1) == 0) {
    return 0;
  }
  if ((v5 != v7 || v6 != v8) && (sub_25B290FB0() & 1) == 0) {
    return 0;
  }
  uint64_t v9 = *(int *)(type metadata accessor for Record.ID(0) + 24);
  return _s16ReplicatorEngine6RecordV2IDV9OwnershipO2eeoiySbAG_AGtFZ_0((uint64_t)a1 + v9, (uint64_t)a2 + v9);
}

BOOL _s16ReplicatorEngine6RecordV5ValueV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B28FEA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAAF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  char v17 = (char *)&v27 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v27 - v18;
  if ((sub_25B1BBDD0(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) == 0) {
    return 0;
  }
  uint64_t v28 = v7;
  uint64_t v20 = type metadata accessor for Record.Value(0);
  sub_25B116D78(a1 + *(int *)(v20 + 20), (uint64_t)v19);
  uint64_t v29 = v20;
  uint64_t v30 = a2;
  sub_25B116D78(a2 + *(int *)(v20 + 20), (uint64_t)v17);
  uint64_t v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_25B116D78((uint64_t)v19, (uint64_t)v10);
  sub_25B116D78((uint64_t)v17, v21);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v10, 1, v4) == 1)
  {
    sub_25B116DE0((uint64_t)v17, &qword_26A4D9160);
    sub_25B116DE0((uint64_t)v19, &qword_26A4D9160);
    if (v22(v21, 1, v4) == 1)
    {
      sub_25B116DE0((uint64_t)v10, &qword_26A4D9160);
      return *(void *)(a1 + *(int *)(v29 + 24)) == *(void *)(v30 + *(int *)(v29 + 24));
    }
    goto LABEL_7;
  }
  sub_25B116D78((uint64_t)v10, (uint64_t)v14);
  if (v22(v21, 1, v4) == 1)
  {
    sub_25B116DE0((uint64_t)v17, &qword_26A4D9160);
    sub_25B116DE0((uint64_t)v19, &qword_26A4D9160);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_7:
    sub_25B116DE0((uint64_t)v10, &qword_26A4DAAF0);
    return 0;
  }
  unint64_t v24 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v28, v21, v4);
  sub_25B1B05DC(&qword_26A4DAAF8, MEMORY[0x263F06EA8]);
  char v25 = sub_25B290580();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v24, v4);
  sub_25B116DE0((uint64_t)v17, &qword_26A4D9160);
  sub_25B116DE0((uint64_t)v19, &qword_26A4D9160);
  v26(v14, v4);
  sub_25B116DE0((uint64_t)v10, &qword_26A4D9160);
  if (v25) {
    return *(void *)(a1 + *(int *)(v29 + 24)) == *(void *)(v30 + *(int *)(v29 + 24));
  }
  return 0;
}

uint64_t sub_25B1B0B40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B1B0BA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_25B1B0C10()
{
  unint64_t result = qword_26A4DA940;
  if (!qword_26A4DA940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DA940);
  }
  return result;
}

uint64_t sub_25B1B0C64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for Record.ID.Versions.V8(uint64_t a1)
{
  return sub_25B180000(a1, (uint64_t *)&unk_26A4DAA08);
}

uint64_t type metadata accessor for Record.ID.Versions.V0(uint64_t a1)
{
  return sub_25B180000(a1, (uint64_t *)&unk_26A4DA9F8);
}

uint64_t type metadata accessor for Record.Value.Versions.V8(uint64_t a1)
{
  return sub_25B180000(a1, (uint64_t *)&unk_26A4DA9E8);
}

uint64_t type metadata accessor for Record.Value.Versions.V0(uint64_t a1)
{
  return sub_25B180000(a1, (uint64_t *)&unk_26A4DA9D8);
}

uint64_t sub_25B1B0D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B1B0DAC()
{
  return sub_25B1B05DC(&qword_26A4DA9C0, (void (*)(uint64_t))type metadata accessor for Record.ID.Ownership);
}

uint64_t sub_25B1B0DF4()
{
  return sub_25B1B05DC(&qword_26A4D9888, (void (*)(uint64_t))type metadata accessor for Record.ID);
}

uint64_t sub_25B1B0E3C()
{
  return sub_25B1B05DC(&qword_26A4DA700, (void (*)(uint64_t))type metadata accessor for Record.ID);
}

uint64_t *initializeBufferWithCopyOfBuffer for Record(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = *(int *)(type metadata accessor for Record.ID(0) + 24);
    __dst = (char *)v4 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_25B290080();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = type metadata accessor for Record.ID.Ownership(0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = (int *)type metadata accessor for RecordMetadata();
    *(uint64_t *)((char *)v4 + v16[5]) = *(uint64_t *)((char *)a2 + v16[5]);
    uint64_t v17 = v16[6];
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_retain();
    v20(v18, v19, v11);
    *(uint64_t *)((char *)v4 + v16[7]) = *(uint64_t *)((char *)a2 + v16[7]);
    uint64_t v21 = v16[8];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_25B290000();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
      memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    *(uint64_t *)((char *)v4 + v16[9]) = *(uint64_t *)((char *)a2 + v16[9]);
    uint64_t v28 = *(int *)(a3 + 20);
    uint64_t v29 = (uint64_t *)((char *)v4 + v28);
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = *(uint64_t *)((char *)a2 + v28);
    unint64_t v32 = *((void *)v30 + 1);
    sub_25B114300(v31, v32);
    *uint64_t v29 = v31;
    v29[1] = v32;
    uint64_t v33 = type metadata accessor for Record.Value(0);
    uint64_t v34 = *(int *)(v33 + 20);
    uint64_t v35 = (char *)v29 + v34;
    uint64_t v36 = &v30[v34];
    uint64_t v37 = sub_25B28FEA0();
    uint64_t v38 = *(void *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
      memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    *(uint64_t *)((char *)v29 + *(int *)(v33 + 24)) = *(void *)&v30[*(int *)(v33 + 24)];
  }
  return v4;
}

uint64_t destroy for Record(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for Record.ID(0) + 24);
  uint64_t v5 = sub_25B290080();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = type metadata accessor for RecordMetadata();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1 + *(int *)(v7 + 24), v5);
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(v7 + 32);
  uint64_t v9 = sub_25B290000();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = a1 + *(int *)(a2 + 20);
  sub_25B10DFF0(*(void *)v11, *(void *)(v11 + 8));
  uint64_t v12 = v11 + *(int *)(type metadata accessor for Record.Value(0) + 20);
  uint64_t v13 = sub_25B28FEA0();
  uint64_t v16 = *(void *)(v13 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v12, 1, v13);
  if (!result)
  {
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
    return v15(v12, v13);
  }
  return result;
}

void *initializeWithCopy for Record(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = *(int *)(type metadata accessor for Record.ID(0) + 24);
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_25B290080();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = (int *)type metadata accessor for RecordMetadata();
  *(void *)((char *)a1 + v14[5]) = *(void *)((char *)a2 + v14[5]);
  uint64_t v15 = v14[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_retain();
  v18(v16, v17, v10);
  *(void *)((char *)a1 + v14[7]) = *(void *)((char *)a2 + v14[7]);
  uint64_t v19 = v14[8];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_25B290000();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  swift_bridgeObjectRetain();
  if (v24(v21, 1, v22))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
    memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  *(void *)((char *)a1 + v14[9]) = *(void *)((char *)a2 + v14[9]);
  uint64_t v26 = *(int *)(a3 + 20);
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = *(void *)((char *)a2 + v26);
  unint64_t v30 = *((void *)v28 + 1);
  sub_25B114300(v29, v30);
  *uint64_t v27 = v29;
  v27[1] = v30;
  uint64_t v31 = type metadata accessor for Record.Value(0);
  uint64_t v32 = *(int *)(v31 + 20);
  uint64_t v33 = (char *)v27 + v32;
  uint64_t v34 = &v28[v32];
  uint64_t v35 = sub_25B28FEA0();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  *(uint64_t *)((char *)v27 + *(int *)(v31 + 24)) = *(void *)&v28[*(int *)(v31 + 24)];
  return a1;
}

char *assignWithCopy for Record(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(int *)(type metadata accessor for Record.ID(0) + 24);
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = sub_25B290080();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
LABEL_6:
    uint64_t v13 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(v6, v7, v8);
LABEL_7:
  uint64_t v14 = (int *)type metadata accessor for RecordMetadata();
  *(void *)&a1[v14[5]] = *(void *)&a2[v14[5]];
  swift_retain();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(&a1[v14[6]], &a2[v14[6]], v8);
  *(void *)&a1[v14[7]] = *(void *)&a2[v14[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v14[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_25B290000();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_13:
  *(void *)&a1[v14[9]] = *(void *)&a2[v14[9]];
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v25 = (uint64_t *)&a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = *(void *)&a2[v24];
  unint64_t v28 = *((void *)v26 + 1);
  sub_25B114300(v27, v28);
  uint64_t v29 = *v25;
  unint64_t v30 = v25[1];
  *uint64_t v25 = v27;
  v25[1] = v28;
  sub_25B10DFF0(v29, v30);
  uint64_t v42 = type metadata accessor for Record.Value(0);
  uint64_t v31 = *(int *)(v42 + 20);
  uint64_t v32 = (char *)v25 + v31;
  uint64_t v33 = &v26[v31];
  uint64_t v34 = sub_25B28FEA0();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v32, v33, v34);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
    goto LABEL_18;
  }
  if (v38)
  {
LABEL_18:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    memcpy(v32, v33, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
LABEL_19:
  *(uint64_t *)((char *)v25 + *(int *)(v42 + 24)) = *(void *)&v26[*(int *)(v42 + 24)];
  return a1;
}

char *initializeWithTake for Record(char *a1, char *a2, uint64_t a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v7 = *(int *)(type metadata accessor for Record.ID(0) + 24);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_25B290080();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = (int *)type metadata accessor for RecordMetadata();
  *(void *)&a1[v13[5]] = *(void *)&a2[v13[5]];
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&a1[v13[6]], &a2[v13[6]], v10);
  *(void *)&a1[v13[7]] = *(void *)&a2[v13[7]];
  uint64_t v14 = v13[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_25B290000();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *(void *)&a1[v13[9]] = *(void *)&a2[v13[9]];
  uint64_t v20 = *(int *)(a3 + 20);
  int v21 = &a1[v20];
  int v22 = &a2[v20];
  *(_OWORD *)&a1[v20] = *(_OWORD *)&a2[v20];
  uint64_t v23 = type metadata accessor for Record.Value(0);
  uint64_t v24 = *(int *)(v23 + 20);
  uint64_t v25 = &v21[v24];
  uint64_t v26 = &v22[v24];
  uint64_t v27 = sub_25B28FEA0();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  *(void *)&v21[*(int *)(v23 + 24)] = *(void *)&v22[*(int *)(v23 + 24)];
  return a1;
}

char *assignWithTake for Record(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 5);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(type metadata accessor for Record.ID(0) + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_25B290080();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = (int *)type metadata accessor for RecordMetadata();
  *(void *)&a1[v17[5]] = *(void *)&a2[v17[5]];
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(&a1[v17[6]], &a2[v17[6]], v11);
  *(void *)&a1[v17[7]] = *(void *)&a2[v17[7]];
  swift_bridgeObjectRelease();
  uint64_t v18 = v17[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_25B290000();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
LABEL_13:
  *(void *)&a1[v17[9]] = *(void *)&a2[v17[9]];
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = *(void *)&a1[v27];
  unint64_t v31 = *(void *)&a1[v27 + 8];
  *(_OWORD *)&a1[v27] = *(_OWORD *)&a2[v27];
  sub_25B10DFF0(v30, v31);
  uint64_t v43 = type metadata accessor for Record.Value(0);
  uint64_t v32 = *(int *)(v43 + 20);
  uint64_t v33 = &v28[v32];
  uint64_t v34 = &v29[v32];
  uint64_t v35 = sub_25B28FEA0();
  uint64_t v36 = *(void *)(v35 - 8);
  int v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v33, 1, v35);
  int v39 = v37(v34, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v33, v34, v35);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v35);
    goto LABEL_18;
  }
  if (v39)
  {
LABEL_18:
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    memcpy(v33, v34, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
LABEL_19:
  *(void *)&v28[*(int *)(v43 + 24)] = *(void *)&v29[*(int *)(v43 + 24)];
  return a1;
}

uint64_t getEnumTagSinglePayload for Record(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B1B25F0);
}

uint64_t sub_25B1B25F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RecordMetadata();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for Record.Value(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for Record(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B1B26FC);
}

uint64_t sub_25B1B26FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for RecordMetadata();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for Record.Value(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_25B1B2800()
{
  uint64_t result = type metadata accessor for RecordMetadata();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Record.Value(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Record.ID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_2Tm);
}

uint64_t storeEnumTagSinglePayload for Record.ID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_3Tm);
}

uint64_t sub_25B1B2910()
{
  return sub_25B1B4EC4();
}

uint64_t *initializeBufferWithCopyOfBuffer for ZoneVersion(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_25B290080();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ZoneVersion(uint64_t a1)
{
  uint64_t v2 = sub_25B290080();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for ZoneVersion(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for ZoneVersion(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for ZoneVersion(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for ZoneVersion(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Record.ID.Ownership(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B1B3054);
}

uint64_t sub_25B1B3054(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Record.ID.Ownership(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B1B30D4);
}

uint64_t sub_25B1B30D4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_25B1B3154(uint64_t a1)
{
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_25B1B31BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t sub_25B1B322C()
{
  uint64_t result = sub_25B290080();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Record.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_8Tm);
}

uint64_t storeEnumTagSinglePayload for Record.Value(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_9Tm);
}

void sub_25B1B32F0()
{
  if (!qword_26A4D91C8)
  {
    sub_25B28FEA0();
    unint64_t v0 = sub_25B2909B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A4D91C8);
    }
  }
}

uint64_t *sub_25B1B3348(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_25B114300(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_25B28FEA0();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t *sub_25B1B34C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_25B114300(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  int v10 = (char *)a2 + v8;
  uint64_t v11 = sub_25B28FEA0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t *sub_25B1B35E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_25B114300(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_25B10DFF0(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_25B28FEA0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v7) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v7)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

_OWORD *sub_25B1B377C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_25B28FEA0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t *sub_25B1B3890(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_25B10DFF0(v6, v7);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_25B28FEA0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_25B1B3A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_8Tm_0);
}

uint64_t sub_25B1B3A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_9Tm_0);
}

void sub_25B1B3A4C()
{
  sub_25B1B32F0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *_s16ReplicatorEngine6RecordV5ValueVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_25B114300(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_25B28FEA0();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t _s16ReplicatorEngine6RecordV5ValueVwxx_0(uint64_t a1, uint64_t a2)
{
  sub_25B10DFF0(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_25B28FEA0();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t *_s16ReplicatorEngine6RecordV5ValueVwcp_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_25B114300(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_25B28FEA0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *_s16ReplicatorEngine6RecordV5ValueVwca_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_25B114300(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_25B10DFF0(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_25B28FEA0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *_s16ReplicatorEngine6RecordV5ValueVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25B28FEA0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *_s16ReplicatorEngine6RecordV5ValueVwta_0(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_25B10DFF0(v6, v7);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_25B28FEA0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_25B1B42F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B1B430C);
}

uint64_t __swift_get_extra_inhabitant_index_8Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25B1B43D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B1B43E4);
}

void *__swift_store_extra_inhabitant_index_9Tm(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    void *result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_25B1B449C()
{
  sub_25B1B32F0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_25B1B4540(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_25B290080();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = type metadata accessor for Record.ID.Ownership(0);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_25B1B46C8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_25B290080();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_25B1B47A0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

void *sub_25B1B48D8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_25B1B4A8C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_25B290080();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_25B1B4B9C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_25B290080();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_25B1B4D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B1B4D44);
}

uint64_t __swift_get_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Record.ID.Ownership(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25B1B4DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B1B4E0C);
}

uint64_t __swift_store_extra_inhabitant_index_3Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Record.ID.Ownership(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25B1B4EB8()
{
  return sub_25B1B4EC4();
}

uint64_t sub_25B1B4EC4()
{
  uint64_t result = type metadata accessor for Record.ID.Ownership(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s16ReplicatorEngine6RecordV2IDVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v11 = sub_25B290080();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v9, 1, v11))
    {
      uint64_t v14 = type metadata accessor for Record.ID.Ownership(0);
      memcpy(v10, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v9, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t _s16ReplicatorEngine6RecordV2IDVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_25B290080();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *_s16ReplicatorEngine6RecordV2IDVwcp_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_25B290080();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v8, 1, v10))
  {
    uint64_t v13 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v9, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v8, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return a1;
}

void *_s16ReplicatorEngine6RecordV2IDVwca_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *_s16ReplicatorEngine6RecordV2IDVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_25B290080();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *_s16ReplicatorEngine6RecordV2IDVwta_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_25B290080();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_25B1B57AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_2Tm_0);
}

uint64_t sub_25B1B57C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_3Tm_0);
}

ValueMetadata *type metadata accessor for Record.CodingKeys()
{
  return &type metadata for Record.CodingKeys;
}

ValueMetadata *type metadata accessor for Record.ID.Ownership.CodingKeys()
{
  return &type metadata for Record.ID.Ownership.CodingKeys;
}

ValueMetadata *type metadata accessor for Record.ID.Ownership.LocalCodingKeys()
{
  return &type metadata for Record.ID.Ownership.LocalCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Record.ID.Ownership.RemoteCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B1B58B0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Record.ID.Ownership.RemoteCodingKeys()
{
  return &type metadata for Record.ID.Ownership.RemoteCodingKeys;
}

unint64_t sub_25B1B58EC()
{
  unint64_t result = qword_26A4DAA18;
  if (!qword_26A4DAA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAA18);
  }
  return result;
}

unint64_t sub_25B1B5944()
{
  unint64_t result = qword_26A4DAA20;
  if (!qword_26A4DAA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAA20);
  }
  return result;
}

unint64_t sub_25B1B599C()
{
  unint64_t result = qword_26A4DAA28;
  if (!qword_26A4DAA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAA28);
  }
  return result;
}

unint64_t sub_25B1B59F4()
{
  unint64_t result = qword_26A4DAA30;
  if (!qword_26A4DAA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAA30);
  }
  return result;
}

unint64_t sub_25B1B5A4C()
{
  unint64_t result = qword_26A4DAA38;
  if (!qword_26A4DAA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAA38);
  }
  return result;
}

unint64_t sub_25B1B5AA4()
{
  unint64_t result = qword_26A4DAA40;
  if (!qword_26A4DAA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAA40);
  }
  return result;
}

unint64_t sub_25B1B5AFC()
{
  unint64_t result = qword_26A4DAA48;
  if (!qword_26A4DAA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAA48);
  }
  return result;
}

unint64_t sub_25B1B5B54()
{
  unint64_t result = qword_26A4DAA50;
  if (!qword_26A4DAA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAA50);
  }
  return result;
}

unint64_t sub_25B1B5BAC()
{
  unint64_t result = qword_26A4DAA58;
  if (!qword_26A4DAA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAA58);
  }
  return result;
}

unint64_t sub_25B1B5C04()
{
  unint64_t result = qword_26A4DAA60;
  if (!qword_26A4DAA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAA60);
  }
  return result;
}

unint64_t sub_25B1B5C5C()
{
  unint64_t result = qword_26A4DAA68;
  if (!qword_26A4DAA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAA68);
  }
  return result;
}

uint64_t sub_25B1B5CB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61636F6CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746F6D6572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25B1B5D94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_25B1B5E80()
{
  unint64_t result = qword_26A4DAA78;
  if (!qword_26A4DAA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAA78);
  }
  return result;
}

unint64_t sub_25B1B5ED4()
{
  unint64_t result = qword_26A4DAA90;
  if (!qword_26A4DAA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAA90);
  }
  return result;
}

unint64_t sub_25B1B5F28()
{
  unint64_t result = qword_26A4DAAA0;
  if (!qword_26A4DAAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAAA0);
  }
  return result;
}

unint64_t sub_25B1B5F7C()
{
  unint64_t result = qword_26A4DAAB8;
  if (!qword_26A4DAAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAAB8);
  }
  return result;
}

unsigned char *_s16ReplicatorEngine6RecordV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B1B609CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Record.Value.Versions.V0.CodingKeys()
{
  return &type metadata for Record.Value.Versions.V0.CodingKeys;
}

ValueMetadata *type metadata accessor for Record.Value.Versions()
{
  return &type metadata for Record.Value.Versions;
}

ValueMetadata *type metadata accessor for Record.Value.Versions.V8.CodingKeys()
{
  return &type metadata for Record.Value.Versions.V8.CodingKeys;
}

ValueMetadata *type metadata accessor for Record.ID.Versions.V0.CodingKeys()
{
  return &type metadata for Record.ID.Versions.V0.CodingKeys;
}

ValueMetadata *type metadata accessor for Record.ID.Versions()
{
  return &type metadata for Record.ID.Versions;
}

uint64_t getEnumTagSinglePayload for MessagePriority(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16ReplicatorEngine6RecordV5ValueV8VersionsO2V8V10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B1B6278);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Record.ID.Versions.V8.CodingKeys()
{
  return &type metadata for Record.ID.Versions.V8.CodingKeys;
}

unint64_t sub_25B1B62B4()
{
  unint64_t result = qword_26A4DAB00;
  if (!qword_26A4DAB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB00);
  }
  return result;
}

unint64_t sub_25B1B630C()
{
  unint64_t result = qword_26A4DAB08;
  if (!qword_26A4DAB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB08);
  }
  return result;
}

unint64_t sub_25B1B6364()
{
  unint64_t result = qword_26A4DAB10;
  if (!qword_26A4DAB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB10);
  }
  return result;
}

unint64_t sub_25B1B63BC()
{
  unint64_t result = qword_26A4DAB18;
  if (!qword_26A4DAB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB18);
  }
  return result;
}

unint64_t sub_25B1B6414()
{
  unint64_t result = qword_26A4DAB20;
  if (!qword_26A4DAB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB20);
  }
  return result;
}

unint64_t sub_25B1B646C()
{
  unint64_t result = qword_26A4DAB28;
  if (!qword_26A4DAB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB28);
  }
  return result;
}

unint64_t sub_25B1B64C4()
{
  unint64_t result = qword_26A4DAB30;
  if (!qword_26A4DAB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB30);
  }
  return result;
}

unint64_t sub_25B1B651C()
{
  unint64_t result = qword_26A4DAB38;
  if (!qword_26A4DAB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB38);
  }
  return result;
}

unint64_t sub_25B1B6574()
{
  unint64_t result = qword_26A4DAB40;
  if (!qword_26A4DAB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB40);
  }
  return result;
}

unint64_t sub_25B1B65CC()
{
  unint64_t result = qword_26A4DAB48;
  if (!qword_26A4DAB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB48);
  }
  return result;
}

unint64_t sub_25B1B6624()
{
  unint64_t result = qword_26A4DAB50;
  if (!qword_26A4DAB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB50);
  }
  return result;
}

unint64_t sub_25B1B667C()
{
  unint64_t result = qword_26A4DAB58;
  if (!qword_26A4DAB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB58);
  }
  return result;
}

uint64_t sub_25B1B66D0()
{
  unint64_t v0 = sub_25B290C30();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_25B1B6718(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25B1B67EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6F636F746F7270 && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25B1B695C()
{
  uint64_t v0 = sub_25B2908F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25B2908C0();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_25B290360();
  MEMORY[0x270FA5388](v5 - 8);
  sub_25B1B73F8(0, (unint64_t *)&qword_26A4D9B70);
  sub_25B290350();
  v7[1] = MEMORY[0x263F8EE78];
  sub_25B1B7ADC((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
  sub_25B1B7B24((unint64_t *)&qword_26A4D9B20, (uint64_t *)&unk_26A4D9B10);
  sub_25B290A00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F138], v0);
  uint64_t result = sub_25B290920();
  qword_26A4D9620 = result;
  return result;
}

uint64_t sub_25B1B6BAC(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v26 = *v2;
  uint64_t v25 = sub_25B290320();
  uint64_t v6 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  int v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_25B290360();
  uint64_t v9 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[2] = 0;
  v2[4] = a1;
  v2[5] = a2;
  sub_25B1B73F8(0, (unint64_t *)&qword_26A4D9B80);
  uint64_t v12 = qword_26A4D9630;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  v2[3] = sub_25B290950();
  swift_getObjectType();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a1;
  uint64_t v14 = v26;
  v13[4] = a2;
  v13[5] = v14;
  unint64_t v31 = sub_25B1B7374;
  uint64_t v32 = v13;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v28 = 1107296256;
  uint64_t v23 = a1;
  uint64_t v29 = sub_25B10F584;
  uint64_t v30 = &block_descriptor_4;
  int v15 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_25B248AAC();
  sub_25B248AB0();
  sub_25B290960();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v25);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v24);
  swift_release();
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_25B290980();
  swift_unknownObjectRelease();
  int v16 = qword_26A4D9620;
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = v23;
  v17[2] = v3;
  v17[3] = v18;
  uint64_t v19 = v26;
  v17[4] = a2;
  v17[5] = v19;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_25B1B73DC;
  *(void *)(v20 + 24) = v17;
  unint64_t v31 = sub_25B1168E4;
  uint64_t v32 = (void *)v20;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v28 = 1107296256;
  uint64_t v29 = sub_25B10D184;
  uint64_t v30 = &block_descriptor_14;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v16, v21);
  _Block_release(v21);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v21 & 1) == 0) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_25B1B6FE8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_25B290190();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    sub_25B290180();
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_25B290160();
    os_log_type_t v12 = sub_25B2908A0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v17 = v6;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v16 = a2;
      uint64_t v14 = (uint8_t *)v13;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = v15;
      *(_DWORD *)uint64_t v14 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_25B288E98(v16, a3, &v19);
      uint64_t v6 = v17;
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25B107000, v11, v12, "Dropping transaction for SIGTERM: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v15, -1, -1);
      MEMORY[0x261160890](v14, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    byte_26A4DAB68 = 1;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    *(void *)(a1 + 16) = 0;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_25B1B7214(uint64_t a1)
{
  if (byte_26A4DAB68)
  {
    *(void *)(a1 + 16) = 0;
  }
  else
  {
    sub_25B290610();
    uint64_t v2 = os_transaction_create();
    swift_release();
    *(void *)(a1 + 16) = v2;
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_25B1B7290(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result)
  {
    *(void *)(a1 + 16) = 0;
    swift_unknownObjectRelease();
    swift_getObjectType();
    return sub_25B290970();
  }
  return result;
}

uint64_t sub_25B1B72D0()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KeepAliveTransaction()
{
  return self;
}

uint64_t sub_25B1B733C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_25B1B7374()
{
  return sub_25B1B6FE8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25B1B73DC()
{
  return sub_25B1B7214(*(void *)(v0 + 16));
}

uint64_t sub_25B1B73E8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B1B73F8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_25B1B7434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = a3;
  uint64_t v46 = a1;
  uint64_t v8 = sub_25B290320();
  uint64_t v45 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25B290360();
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v44 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25B290310();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (uint64_t *)((char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_25B2903E0();
  uint64_t v38 = *(void *)(v18 - 8);
  uint64_t v39 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v37 - v22;
  type metadata accessor for KeepAliveTransaction();
  uint64_t v24 = swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t result = sub_25B1B6BAC(v46, a2);
  if (a6 <= 0.0)
  {
    uint64_t v34 = (void *)swift_allocObject();
    uint64_t v35 = v41;
    v34[2] = v40;
    v34[3] = v35;
    v34[4] = v24;
    uint64_t v52 = sub_25B1B7AC4;
    uint64_t v53 = v34;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v49 = 1107296256;
    uint64_t v50 = sub_25B10F584;
    uint64_t v51 = &block_descriptor_20_0;
    uint64_t v36 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    sub_25B290340();
    uint64_t v47 = MEMORY[0x263F8EE78];
    sub_25B1B7ADC((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
    sub_25B290A00();
    MEMORY[0x26115F250](0, v13, v10, v36);
    _Block_release(v36);
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v44);
    return swift_release();
  }
  int v37 = v10;
  uint64_t v46 = v8;
  double v26 = a6 * 1000.0;
  if ((~COERCE__INT64(a6 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v26 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v26 < 9.22337204e18)
  {
    uint64_t v27 = (uint64_t)v26;
    sub_25B2903C0();
    uint64_t *v17 = v27;
    (*(void (**)(uint64_t *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F000], v14);
    sub_25B2903D0();
    (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v38 = *(void *)(v38 + 8);
    ((void (*)(char *, uint64_t))v38)(v21, v39);
    uint64_t v28 = (void *)swift_allocObject();
    uint64_t v29 = v41;
    v28[2] = v40;
    void v28[3] = v29;
    v28[4] = v24;
    uint64_t v52 = sub_25B1B7AC4;
    uint64_t v53 = v28;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v49 = 1107296256;
    uint64_t v50 = sub_25B10F584;
    uint64_t v51 = &block_descriptor_26_1;
    uint64_t v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    unint64_t v31 = v13;
    sub_25B290340();
    uint64_t v47 = MEMORY[0x263F8EE78];
    sub_25B1B7ADC((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
    uint64_t v32 = v37;
    uint64_t v33 = v46;
    sub_25B290A00();
    MEMORY[0x26115F210](v23, v31, v32, v30);
    _Block_release(v30);
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v44);
    ((void (*)(char *, uint64_t))v38)(v23, v39);
    return swift_release();
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_25B1B7AC4()
{
  return sub_25B1B7BB8((uint64_t)sub_25B1B7C20);
}

uint64_t sub_25B1B7ADC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B1B7B24(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_16Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25B1B7BB8(uint64_t a1)
{
  int v3 = *(void (**)(uint64_t, uint64_t))(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  swift_retain();
  v3(a1, v4);
  return swift_release();
}

uint64_t sub_25B1B7C20()
{
  return sub_25B1B7290(v0);
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.handshakeDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 160);
  uint64_t v4 = *(void *)(v1 + 168);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B1B7CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v64 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9390);
  MEMORY[0x270FA5388](v68);
  uint64_t v66 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ZoneVersion();
  uint64_t v71 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v72 = (uint64_t)&v57 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v57 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9A90);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (uint64_t *)((char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (uint64_t *)((char *)&v57 - v21);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v70 = 0;
  uint64_t v65 = a1;
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v23 = v25;
  uint64_t v26 = 1 << *(unsigned char *)(v24 - 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v23;
  uint64_t v67 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v59 = v24;
  uint64_t v60 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  unint64_t v62 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v63 = v11;
  int64_t v61 = (unint64_t)(v26 + 63) >> 6;
  int64_t v58 = v61 - 1;
  v69 = v15;
  uint64_t v29 = v4;
  uint64_t v30 = v66;
  while (1)
  {
    if (v28)
    {
      unint64_t v31 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v32 = v31 | (v70 << 6);
LABEL_10:
      uint64_t v33 = (uint64_t *)(*(void *)(v65 + 48) + 16 * v32);
      uint64_t v34 = *v33;
      uint64_t v35 = v33[1];
      uint64_t v36 = *(void *)(v65 + 56) + *(void *)(v71 + 72) * v32;
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A88);
      sub_25B1BD2C8(v36, (uint64_t)v19 + *(int *)(v37 + 48), (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      void *v19 = v34;
      v19[1] = v35;
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v19, 0, 1, v37);
      swift_bridgeObjectRetain();
      uint64_t v15 = v69;
      goto LABEL_29;
    }
    int64_t v38 = v70 + 1;
    if (__OFADD__(v70, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v38 < v61)
    {
      unint64_t v39 = *(void *)(v59 + 8 * v38);
      if (v39) {
        goto LABEL_14;
      }
      int64_t v40 = v70 + 2;
      ++v70;
      if (v38 + 1 < v61)
      {
        unint64_t v39 = *(void *)(v59 + 8 * v40);
        if (v39) {
          goto LABEL_17;
        }
        int64_t v70 = v38 + 1;
        if (v38 + 2 < v61)
        {
          unint64_t v39 = *(void *)(v59 + 8 * (v38 + 2));
          if (v39)
          {
            v38 += 2;
            goto LABEL_14;
          }
          int64_t v40 = v38 + 3;
          int64_t v70 = v38 + 2;
          if (v38 + 3 < v61) {
            break;
          }
        }
      }
    }
LABEL_28:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A88);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v19, 1, 1, v41);
    unint64_t v28 = 0;
LABEL_29:
    sub_25B187574((uint64_t)v19, (uint64_t)v22, (uint64_t *)&unk_26A4D9A90);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A88);
    uint64_t v43 = 1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v22, 1, v42) == 1) {
      return v43;
    }
    uint64_t v44 = (uint64_t)v22 + *(int *)(v42 + 48);
    uint64_t v45 = *v22;
    uint64_t v46 = v22[1];
    sub_25B1BD330(v44, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    unint64_t v47 = sub_25B18A634(v45, v46);
    LOBYTE(v45) = v48;
    swift_bridgeObjectRelease();
    if ((v45 & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v49 = v72;
    sub_25B1BD2C8(*(void *)(a2 + 56) + *(void *)(v71 + 72) * v47, v72, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t v50 = v30 + *(int *)(v68 + 48);
    sub_25B1BD2C8(v49, v30, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    sub_25B1BD2C8((uint64_t)v15, v50, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t v51 = *v67;
    if ((*v67)(v30, 1, v29) == 1)
    {
      if (v51(v50, 1, v29) != 1) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v52 = v30;
      uint64_t v53 = (uint64_t)v63;
      sub_25B1BD2C8(v52, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      if (v51(v50, 1, v29) == 1)
      {
        (*v62)(v53, v29);
        uint64_t v30 = v66;
LABEL_37:
        sub_25B1BD268(v30);
        goto LABEL_38;
      }
      uint64_t v54 = v64;
      (*v60)(v64, v50, v29);
      char v55 = sub_25B290030();
      uint64_t v56 = *v62;
      (*v62)((uint64_t)v54, v29);
      v56(v53, v29);
      uint64_t v15 = v69;
      uint64_t v30 = v66;
      if ((v55 & 1) == 0)
      {
        sub_25B1BD398(v66, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
LABEL_38:
        sub_25B1BD398(v72, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
LABEL_39:
        sub_25B1BD398((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        return 0;
      }
    }
    sub_25B1BD398(v30, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    sub_25B1BD398(v72, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t result = sub_25B1BD398((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
  }
  unint64_t v39 = *(void *)(v59 + 8 * v40);
  if (v39)
  {
LABEL_17:
    int64_t v38 = v40;
LABEL_14:
    unint64_t v28 = (v39 - 1) & v39;
    unint64_t v32 = __clz(__rbit64(v39)) + (v38 << 6);
    int64_t v70 = v38;
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v38 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v38 >= v61)
    {
      int64_t v70 = v58;
      goto LABEL_28;
    }
    unint64_t v39 = *(void *)(v59 + 8 * v38);
    ++v40;
    if (v39) {
      goto LABEL_14;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_25B1B8420(uint64_t a1, uint64_t a2)
{
  return sub_25B1B8450(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25B18A768);
}

uint64_t sub_25B1B8438(uint64_t a1, uint64_t a2)
{
  return sub_25B1B8450(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25B18A6AC);
}

uint64_t sub_25B1B8450(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = a2;
  uint64_t v4 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v5 = 0;
  uint64_t v37 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v38 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v39 = result;
  while (v8)
  {
    uint64_t v41 = (v8 - 1) & v8;
    int64_t v42 = v5;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_27:
    uint64_t v15 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v10);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v19 = v15[2];
    uint64_t v18 = v15[3];
    uint64_t v20 = (uint64_t *)(*(void *)(v4 + 56) + 48 * v10);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v24 = v20[2];
    uint64_t v23 = v20[3];
    uint64_t v43 = v20[4];
    uint64_t v44 = v20[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = v3;
    uint64_t v26 = a3(v16, v17, v19, v18);
    LOBYTE(v19) = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0
      || ((unint64_t v28 = (void *)(*(void *)(v3 + 56) + 48 * v26),
           uint64_t v29 = v28[2],
           uint64_t v30 = v28[3],
           uint64_t v32 = v28[4],
           uint64_t v31 = v28[5],
           *v28 == v22)
        ? (BOOL v33 = v28[1] == v21)
        : (BOOL v33 = 0),
          !v33 && (sub_25B290FB0() & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v29 == v24 && v30 == v23)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      int64_t v5 = v42;
      BOOL v9 = v32 == v43 && v31 == v44;
      uint64_t v3 = v25;
      uint64_t v4 = v39;
      unint64_t v8 = v41;
      if (!v9) {
        return 0;
      }
    }
    else
    {
      char v35 = sub_25B290FB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if ((v35 & 1) == 0) {
        return result;
      }
      int64_t v5 = v42;
      BOOL v36 = v32 == v43 && v31 == v44;
      uint64_t v3 = v25;
      uint64_t v4 = v39;
      unint64_t v8 = v41;
      if (!v36) {
        return result;
      }
    }
  }
  int64_t v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v11 >= v38) {
    return 1;
  }
  unint64_t v12 = *(void *)(v37 + 8 * v11);
  int64_t v13 = v5 + 1;
  if (v12) {
    goto LABEL_26;
  }
  int64_t v13 = v5 + 2;
  if (v5 + 2 >= v38) {
    return 1;
  }
  unint64_t v12 = *(void *)(v37 + 8 * v13);
  if (v12) {
    goto LABEL_26;
  }
  int64_t v13 = v5 + 3;
  if (v5 + 3 >= v38) {
    return 1;
  }
  unint64_t v12 = *(void *)(v37 + 8 * v13);
  if (v12)
  {
LABEL_26:
    uint64_t v41 = (v12 - 1) & v12;
    int64_t v42 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    goto LABEL_27;
  }
  uint64_t v14 = v5 + 4;
  if (v5 + 4 >= v38) {
    return 1;
  }
  unint64_t v12 = *(void *)(v37 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v5 + 4;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v38) {
      return 1;
    }
    unint64_t v12 = *(void *)(v37 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_26;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_25B1B8748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PairingRelationship();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v8 = &v61[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = &v61[-v9];
  uint64_t v77 = sub_25B290080();
  uint64_t v74 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  v73 = &v61[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EF0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = &v61[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = MEMORY[0x270FA5388](v13);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v76 = v5;
  uint64_t v71 = &v61[-v17];
  int64_t v72 = 0;
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v64 = a1 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  int64_t v65 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v66 = v74 + 16;
  v69 = (void (**)(uint64_t, uint64_t))(v74 + 8);
  int64_t v70 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v74 + 32);
  int64_t v63 = v65 - 1;
  uint64_t v67 = v15;
  uint64_t v68 = a2;
  if ((v20 & v18) == 0) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v75 = (v21 - 1) & v21;
  unint64_t v22 = __clz(__rbit64(v21)) | (v72 << 6);
LABEL_7:
  (*(void (**)(unsigned char *, unint64_t, uint64_t))(v74 + 16))(v15, *(void *)(a1 + 48) + *(void *)(v74 + 72) * v22, v77);
  uint64_t v23 = a1;
  uint64_t v24 = *(void *)(a1 + 56) + *(void *)(v76 + 72) * v22;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  sub_25B1BD2C8(v24, (uint64_t)&v15[*(int *)(v25 + 48)], (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v15, 0, 1, v25);
  while (1)
  {
    uint64_t v30 = v71;
    sub_25B187574((uint64_t)v15, (uint64_t)v71, &qword_26A4D9EF0);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
    uint64_t v32 = 1;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31) == 1) {
      return v32;
    }
    uint64_t v33 = (uint64_t)&v30[*(int *)(v31 + 48)];
    uint64_t v34 = (uint64_t)v73;
    char v35 = v30;
    uint64_t v36 = v77;
    (*v70)(v73, v35, v77);
    sub_25B1BD330(v33, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    unint64_t v37 = sub_25B18A93C(v34);
    char v39 = v38;
    (*v69)(v34, v36);
    if ((v39 & 1) == 0) {
      goto LABEL_57;
    }
    sub_25B1BD2C8(*(void *)(a2 + 56) + *(void *)(v76 + 72) * v37, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    if ((sub_25B290030() & 1) == 0) {
      goto LABEL_56;
    }
    int64_t v40 = &v8[*(int *)(v4 + 20)];
    long long v41 = v40[9];
    v79[8] = v40[8];
    v79[9] = v41;
    v79[10] = v40[10];
    long long v42 = v40[5];
    v79[4] = v40[4];
    v79[5] = v42;
    long long v43 = v40[7];
    v79[6] = v40[6];
    v79[7] = v43;
    long long v44 = v40[3];
    v79[2] = v40[2];
    v79[3] = v44;
    long long v45 = v40[1];
    v79[0] = *v40;
    v79[1] = v45;
    uint64_t v46 = &v10[*(int *)(v4 + 20)];
    long long v47 = v46[9];
    v78[8] = v46[8];
    v78[9] = v47;
    v78[10] = v46[10];
    long long v48 = v46[5];
    v78[4] = v46[4];
    v78[5] = v48;
    long long v49 = v46[7];
    v78[6] = v46[6];
    v78[7] = v49;
    long long v50 = v46[1];
    v78[0] = *v46;
    v78[1] = v50;
    long long v51 = v46[3];
    v78[2] = v46[2];
    v78[3] = v51;
    if ((_s16ReplicatorEngine16DeviceDescriptorV2eeoiySbAC_ACtFZ_0((uint64_t)v79, (uint64_t)v78) & 1) == 0
      || (sub_25B28FFC0() & 1) == 0
      || (sub_25B28FFC0() & 1) == 0)
    {
      goto LABEL_56;
    }
    uint64_t v52 = v4;
    uint64_t v53 = *(int *)(v4 + 32);
    uint64_t v54 = *(void *)&v8[v53];
    unint64_t v55 = *(void *)&v8[v53 + 8];
    uint64_t v56 = (uint64_t *)&v10[v53];
    uint64_t v57 = *v56;
    unint64_t v58 = v56[1];
    switch(v55)
    {
      case 0uLL:
        if (v58) {
          goto LABEL_55;
        }
        sub_25B1200A4(v54, 0);
        uint64_t v59 = v57;
        unint64_t v60 = 0;
        goto LABEL_48;
      case 1uLL:
        if (v58 != 1) {
          goto LABEL_55;
        }
        sub_25B1200A4(v54, 1uLL);
        uint64_t v59 = v57;
        unint64_t v60 = 1;
        goto LABEL_48;
      case 2uLL:
        if (v58 != 2) {
          goto LABEL_55;
        }
        sub_25B1200A4(v54, 2uLL);
        uint64_t v59 = v57;
        unint64_t v60 = 2;
        goto LABEL_48;
    }
    if (v58 < 3) {
      break;
    }
    if (v54 == v57 && v55 == v58)
    {
      sub_25B120090(v54, v55);
      sub_25B120090(v54, v55);
      sub_25B1200A4(v54, v55);
      uint64_t v59 = v54;
      unint64_t v60 = v55;
LABEL_48:
      sub_25B1200A4(v59, v60);
      a1 = v23;
      uint64_t v4 = v52;
      a2 = v68;
      goto LABEL_49;
    }
    int v62 = sub_25B290FB0();
    sub_25B120090(v54, v55);
    sub_25B120090(v57, v58);
    sub_25B1200A4(v54, v55);
    sub_25B1200A4(v57, v58);
    a1 = v23;
    uint64_t v4 = v52;
    a2 = v68;
    if ((v62 & 1) == 0) {
      goto LABEL_56;
    }
LABEL_49:
    if ((sub_25B28FFC0() & 1) == 0) {
      goto LABEL_56;
    }
    sub_25B1BD398((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t result = sub_25B1BD398((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v15 = v67;
    unint64_t v21 = v75;
    if (v75) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v26 = v72 + 1;
    if (__OFADD__(v72, 1))
    {
      __break(1u);
      goto LABEL_61;
    }
    if (v26 < v65)
    {
      unint64_t v27 = *(void *)(v64 + 8 * v26);
      if (v27) {
        goto LABEL_11;
      }
      int64_t v28 = v72 + 2;
      ++v72;
      if (v26 + 1 < v65)
      {
        unint64_t v27 = *(void *)(v64 + 8 * v28);
        if (v27) {
          goto LABEL_14;
        }
        int64_t v72 = v26 + 1;
        if (v26 + 2 < v65)
        {
          unint64_t v27 = *(void *)(v64 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_11;
          }
          int64_t v72 = v26 + 2;
          if (v26 + 3 < v65)
          {
            unint64_t v27 = *(void *)(v64 + 8 * (v26 + 3));
            if (v27)
            {
              v26 += 3;
              goto LABEL_11;
            }
            int64_t v28 = v26 + 4;
            int64_t v72 = v26 + 3;
            if (v26 + 4 < v65)
            {
              unint64_t v27 = *(void *)(v64 + 8 * v28);
              if (!v27)
              {
                while (1)
                {
                  int64_t v26 = v28 + 1;
                  if (__OFADD__(v28, 1)) {
                    break;
                  }
                  if (v26 >= v65)
                  {
                    int64_t v72 = v63;
                    goto LABEL_28;
                  }
                  unint64_t v27 = *(void *)(v64 + 8 * v26);
                  ++v28;
                  if (v27) {
                    goto LABEL_11;
                  }
                }
LABEL_61:
                __break(1u);
                return result;
              }
LABEL_14:
              int64_t v26 = v28;
LABEL_11:
              uint64_t v75 = (v27 - 1) & v27;
              unint64_t v22 = __clz(__rbit64(v27)) + (v26 << 6);
              int64_t v72 = v26;
              goto LABEL_7;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v23 = a1;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v15, 1, 1, v29);
    uint64_t v75 = 0;
  }
LABEL_55:
  sub_25B120090(v54, v55);
  sub_25B120090(v57, v58);
  sub_25B1200A4(v54, v55);
  sub_25B1200A4(v57, v58);
LABEL_56:
  sub_25B1BD398((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
LABEL_57:
  sub_25B1BD398((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  return 0;
}

uint64_t sub_25B1B8FA0()
{
  sub_25B290630();
  return swift_bridgeObjectRelease();
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.id.modify())()
{
  return nullsub_1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.name.modify())()
{
  return nullsub_1;
}

__n128 ZoneVersionAdvertisement.DeviceDescriptor.protocolVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = v1[2];
  *a1 = result;
  return result;
}

__n128 ZoneVersionAdvertisement.DeviceDescriptor.protocolVersion.setter(__n128 *a1)
{
  __n128 result = *a1;
  v1[2] = *a1;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.protocolVersion.modify())()
{
  return nullsub_1;
}

void ZoneVersionAdvertisement.DeviceDescriptor.deviceType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

unsigned char *ZoneVersionAdvertisement.DeviceDescriptor.deviceType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.deviceType.modify())()
{
  return nullsub_1;
}

__n128 ZoneVersionAdvertisement.DeviceDescriptor.screenDescriptor.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 88);
  char v3 = *(unsigned char *)(v1 + 89);
  __n128 result = *(__n128 *)(v1 + 56);
  long long v5 = *(_OWORD *)(v1 + 72);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 33) = v3;
  return result;
}

__n128 ZoneVersionAdvertisement.DeviceDescriptor.screenDescriptor.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 33);
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 72) = v5;
  *(unsigned char *)(v1 + 88) = v2;
  *(unsigned char *)(v1 + 89) = v3;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.screenDescriptor.modify())()
{
  return nullsub_1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.zones.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.zones.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.zones.modify())()
{
  return nullsub_1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.messageTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.messageTypes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.messageTypes.modify())()
{
  return nullsub_1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.idsIdentityBlob.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  sub_25B1142EC(v1, *(void *)(v0 + 120));
  return v1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.idsIdentityBlob.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25B111FF0(*(void *)(v2 + 112), *(void *)(v2 + 120));
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.idsIdentityBlob.modify())()
{
  return nullsub_1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.marketingName.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.marketingName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.marketingName.modify())()
{
  return nullsub_1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.productType.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.productType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = a2;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.productType.modify())()
{
  return nullsub_1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.personaID.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.personaID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = a2;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.personaID.modify())()
{
  return nullsub_1;
}

BOOL ZoneVersionAdvertisement.DeviceDescriptor.isSource.getter()
{
  return *(unsigned char *)(v0 + 48) == 2;
}

uint64_t ZoneVersionAdvertisement.description.getter()
{
  return 0;
}

uint64_t ZoneVersionAdvertisement.remoteDevice.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[7];
  long long v3 = v1[9];
  long long v24 = v1[8];
  long long v25 = v3;
  long long v4 = v1[9];
  long long v26 = v1[10];
  long long v5 = v1[3];
  long long v6 = v1[5];
  long long v20 = v1[4];
  long long v7 = v20;
  long long v21 = v6;
  long long v8 = v1[5];
  long long v9 = v1[7];
  long long v22 = v1[6];
  long long v10 = v22;
  long long v23 = v9;
  long long v11 = v1[1];
  v17[0] = *v1;
  v17[1] = v11;
  long long v12 = v1[3];
  long long v14 = *v1;
  long long v13 = v1[1];
  long long v18 = v1[2];
  long long v15 = v18;
  long long v19 = v12;
  a1[8] = v24;
  a1[9] = v4;
  a1[10] = v1[10];
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v10;
  a1[7] = v2;
  *a1 = v14;
  a1[1] = v13;
  a1[2] = v15;
  a1[3] = v5;
  return sub_25B1172F8((uint64_t)v17);
}

uint64_t ZoneVersionAdvertisement.zoneVersions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static ZoneVersionAdvertisement.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 144);
  v16[8] = *(_OWORD *)(a1 + 128);
  v16[9] = v2;
  v16[10] = *(_OWORD *)(a1 + 160);
  long long v3 = *(_OWORD *)(a1 + 80);
  v16[4] = *(_OWORD *)(a1 + 64);
  v16[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 112);
  v16[6] = *(_OWORD *)(a1 + 96);
  v16[7] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  v16[2] = *(_OWORD *)(a1 + 32);
  v16[3] = v6;
  uint64_t v7 = *(void *)(a1 + 176);
  long long v8 = *(_OWORD *)(a2 + 144);
  v15[8] = *(_OWORD *)(a2 + 128);
  v15[9] = v8;
  v15[10] = *(_OWORD *)(a2 + 160);
  long long v9 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v9;
  long long v10 = *(_OWORD *)(a2 + 112);
  v15[6] = *(_OWORD *)(a2 + 96);
  v15[7] = v10;
  long long v11 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v11;
  long long v12 = *(_OWORD *)(a2 + 48);
  void v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v12;
  uint64_t v13 = *(void *)(a2 + 176);
  if ((_s16ReplicatorEngine24ZoneVersionAdvertisementV16DeviceDescriptorV2eeoiySbAE_AEtFZ_0((uint64_t)v16, (uint64_t)v15) & 1) == 0) {
    return 0;
  }
  return sub_25B1B7CA8(v7, v13);
}

uint64_t sub_25B1B98AC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 144);
  v16[8] = *(_OWORD *)(a1 + 128);
  v16[9] = v2;
  v16[10] = *(_OWORD *)(a1 + 160);
  long long v3 = *(_OWORD *)(a1 + 80);
  v16[4] = *(_OWORD *)(a1 + 64);
  v16[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 112);
  v16[6] = *(_OWORD *)(a1 + 96);
  v16[7] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  v16[2] = *(_OWORD *)(a1 + 32);
  v16[3] = v6;
  uint64_t v7 = *(void *)(a1 + 176);
  long long v8 = *(_OWORD *)(a2 + 144);
  v15[8] = *(_OWORD *)(a2 + 128);
  v15[9] = v8;
  v15[10] = *(_OWORD *)(a2 + 160);
  long long v9 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v9;
  long long v10 = *(_OWORD *)(a2 + 112);
  v15[6] = *(_OWORD *)(a2 + 96);
  v15[7] = v10;
  long long v11 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v11;
  long long v12 = *(_OWORD *)(a2 + 48);
  void v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v12;
  uint64_t v13 = *(void *)(a2 + 176);
  if ((_s16ReplicatorEngine24ZoneVersionAdvertisementV16DeviceDescriptorV2eeoiySbAE_AEtFZ_0((uint64_t)v16, (uint64_t)v15) & 1) == 0) {
    return 0;
  }
  return sub_25B1B7CA8(v7, v13);
}

ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional __swiftcall ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  long long v2 = v1;
  unint64_t v3 = sub_25B290C30();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *long long v2 = v5;
  return result;
}

ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional __swiftcall ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  long long v2 = v1;
  result.value = ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.init(rawValue:)(stringValue).value;
  *long long v2 = v4;
  return result;
}

ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional __swiftcall ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  *uint64_t v1 = 11;
  return (ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional)intValue;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.intValue.getter()
{
  return 0;
}

unint64_t ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.rawValue.getter()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x6C6F636F746F7270;
      break;
    case 3:
      unint64_t result = 0x656372756F537369;
      break;
    case 4:
      unint64_t result = 0x7954656369766564;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x73656E6F7ALL;
      break;
    case 7:
      unint64_t result = 0x546567617373656DLL;
      break;
    case 8:
      unint64_t result = 0x746E656449736469;
      break;
    case 9:
      unint64_t result = 0x6E6974656B72616DLL;
      break;
    case 0xA:
      unint64_t result = 0x54746375646F7270;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.stringValue.getter()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x6C6F636F746F7270;
      break;
    case 3:
      unint64_t result = 0x656372756F537369;
      break;
    case 4:
      unint64_t result = 0x7954656369766564;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x73656E6F7ALL;
      break;
    case 7:
      unint64_t result = 0x546567617373656DLL;
      break;
    case 8:
      unint64_t result = 0x746E656449736469;
      break;
    case 9:
      unint64_t result = 0x6E6974656B72616DLL;
      break;
    case 0xA:
      unint64_t result = 0x54746375646F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B1B9D1C(char *a1, char *a2)
{
  return sub_25B270B1C(*a1, *a2);
}

uint64_t sub_25B1B9D28()
{
  return sub_25B291260();
}

uint64_t sub_25B1B9D70()
{
  return sub_25B1B8FA0();
}

uint64_t sub_25B1B9D78()
{
  return sub_25B291260();
}

ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional sub_25B1B9DBC(Swift::String *a1)
{
  return ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.init(rawValue:)(*a1);
}

unint64_t sub_25B1B9DC8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional sub_25B1B9DF4@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.value = ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_25B1B9E2C(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_25B1B9E38(uint64_t a1)
{
  unint64_t v2 = sub_25B1BC478();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1B9E74(uint64_t a1)
{
  unint64_t v2 = sub_25B1BC478();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9C90);
  unint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v93 = 1;
  uint64_t v9 = a1[3];
  v95 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_25B1BC478();
  sub_25B291280();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
    sub_25B111FF0(0, 0xF000000000000000);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v51 = v6;
    LOBYTE(v63) = 0;
    uint64_t v10 = sub_25B290CA0();
    uint64_t v12 = v11;
    LOBYTE(v63) = 1;
    uint64_t v13 = sub_25B290CA0();
    uint64_t v15 = v14;
    uint64_t v50 = v13;
    LOBYTE(v52) = 2;
    sub_25B1969B8();
    sub_25B290CC0();
    uint64_t v48 = v63;
    uint64_t v49 = v15;
    uint64_t v16 = v64;
    LOBYTE(v52) = 4;
    sub_25B196A0C();
    sub_25B290C80();
    uint64_t v47 = v16;
    int v17 = v63;
    if (v63 == 6)
    {
      LOBYTE(v63) = 3;
      if (sub_25B290CB0()) {
        int v17 = 2;
      }
      else {
        int v17 = 1;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A30);
    LOBYTE(v52) = 6;
    sub_25B196D88(&qword_26A4D9A48, (void (*)(void))sub_25B196B08, (void (*)(void))sub_25B196B5C);
    sub_25B290C80();
    if (v63)
    {
      uint64_t v46 = v63;
    }
    else
    {
      uint64_t v46 = sub_25B1BA8CC((uint64_t)&unk_2708D6E18, (void (*)(void **__return_ptr, uint64_t, uint64_t))sub_25B1BA848, 0, v50, v49, (void (*)(void **__return_ptr, void *))sub_25B1BA84C, 0, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))sub_25B18A768, (void (*)(void))sub_25B18BDC0, (uint64_t)&type metadata for Zone.ID, (void (*)(void))sub_25B1929D8);
      swift_arrayDestroy();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9A10);
    LOBYTE(v52) = 7;
    sub_25B196BB0(&qword_26A4D9A28, (void (*)(void))sub_25B196C38, (void (*)(void))sub_25B196C8C);
    sub_25B290C80();
    if (v63)
    {
      uint64_t v45 = v63;
    }
    else
    {
      uint64_t v45 = sub_25B1BA8CC((uint64_t)&unk_2708D6DB8, (void (*)(void **__return_ptr, uint64_t, uint64_t))sub_25B1BA848, 0, v50, v49, (void (*)(void **__return_ptr, void *))sub_25B1BA84C, 0, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))sub_25B18A6AC, (void (*)(void))sub_25B18C134, (uint64_t)&type metadata for MessageType.ID, (void (*)(void))sub_25B1929E4);
      swift_arrayDestroy();
    }
    LOBYTE(v52) = 5;
    sub_25B196A60();
    sub_25B290C80();
    uint64_t v41 = v64;
    uint64_t v42 = v63;
    uint64_t v39 = v66;
    uint64_t v40 = v65;
    int v38 = v67;
    int v43 = v17;
    int v44 = BYTE1(v67);
    LOBYTE(v63) = 9;
    uint64_t v19 = sub_25B290C60();
    uint64_t v21 = v20;
    uint64_t v36 = v19;
    uint64_t v37 = v12;
    LOBYTE(v63) = 10;
    uint64_t v35 = sub_25B290C60();
    uint64_t v23 = v22;
    char v93 = v44;
    LOBYTE(v63) = 8;
    sub_25B196AB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = v5;
    sub_25B290C80();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v34);
    uint64_t v25 = v89;
    unint64_t v24 = v90;
    sub_25B1142EC(v89, v90);
    sub_25B111FF0(0, 0xF000000000000000);
    *(void *)&long long v52 = v10;
    *((void *)&v52 + 1) = v37;
    uint64_t v26 = v49;
    *(void *)&long long v53 = v50;
    *((void *)&v53 + 1) = v49;
    *(void *)&long long v54 = v48;
    *((void *)&v54 + 1) = v47;
    LOBYTE(v55) = v43;
    *((void *)&v55 + 1) = v42;
    *(void *)&long long v56 = v41;
    *((void *)&v56 + 1) = v40;
    *(void *)&long long v57 = v39;
    BYTE8(v57) = v38;
    BYTE9(v57) = v44;
    *(void *)&long long v58 = v46;
    *((void *)&v58 + 1) = v45;
    *(void *)&long long v59 = v25;
    *((void *)&v59 + 1) = v24;
    uint64_t v34 = v25;
    unint64_t v51 = v24;
    *(void *)&long long v60 = v36;
    *((void *)&v60 + 1) = v21;
    *(void *)&long long v61 = v35;
    *((void *)&v61 + 1) = v23;
    long long v62 = 0uLL;
    sub_25B1172F8((uint64_t)&v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B111FF0(v25, v24);
    uint64_t v27 = v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = v45;
    swift_bridgeObjectRelease();
    long long v29 = v61;
    a2[8] = v60;
    a2[9] = v29;
    a2[10] = v62;
    long long v30 = v57;
    a2[4] = v56;
    a2[5] = v30;
    long long v31 = v59;
    a2[6] = v58;
    a2[7] = v31;
    long long v32 = v53;
    *a2 = v52;
    a2[1] = v32;
    long long v33 = v55;
    a2[2] = v54;
    a2[3] = v33;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
    uint64_t v63 = v10;
    uint64_t v64 = v27;
    uint64_t v65 = v50;
    uint64_t v66 = v26;
    uint64_t v67 = v48;
    uint64_t v68 = v47;
    char v69 = v43;
    *(_DWORD *)int64_t v70 = v94[0];
    *(_DWORD *)&v70[3] = *(_DWORD *)((char *)v94 + 3);
    uint64_t v71 = v42;
    uint64_t v72 = v41;
    uint64_t v73 = v40;
    uint64_t v74 = v39;
    char v75 = v38;
    char v76 = v93;
    __int16 v78 = v92;
    int v77 = v91;
    uint64_t v79 = v46;
    uint64_t v80 = v28;
    uint64_t v81 = v34;
    unint64_t v82 = v51;
    uint64_t v83 = v36;
    uint64_t v84 = v21;
    uint64_t v85 = v35;
    uint64_t v86 = v23;
    uint64_t v87 = 0;
    uint64_t v88 = 0;
    return sub_25B11DEBC((uint64_t)&v63);
  }
}

uint64_t sub_25B1BA850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0xD000000000000011;
  a3[3] = 0x800000025B29C8A0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B1BA878@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  *(void *)a2 = *a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 32) = xmmword_25B294AF0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B1BA8CC(uint64_t a1, void (*a2)(void **__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void **__return_ptr, void *), uint64_t a7, uint64_t (*a8)(void *, uint64_t, uint64_t, uint64_t), void (*a9)(void), uint64_t a10, void (*a11)(void))
{
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    return MEMORY[0x263F8EE80];
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)MEMORY[0x263F8EE80];
  uint64_t v13 = 40;
  while (1)
  {
    uint64_t v39 = v13;
    uint64_t v40 = v11;
    swift_bridgeObjectRetain();
    a2(&v47, a4, a5);
    uint64_t v16 = v47;
    uint64_t v15 = v48;
    uint64_t v18 = v49;
    uint64_t v17 = v50;
    v46[0] = v47;
    v46[1] = v48;
    v46[2] = v49;
    v46[3] = v50;
    a6(&v47, v46);
    uint64_t v19 = v47;
    uint64_t v41 = v48;
    uint64_t v42 = v49;
    uint64_t v43 = v50;
    uint64_t v44 = v51;
    uint64_t v45 = v52;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v47 = v12;
    unint64_t v22 = a8(v16, v15, v18, v17);
    uint64_t v23 = v12[2];
    BOOL v24 = (v21 & 1) == 0;
    if (__OFADD__(v23, v24)) {
      break;
    }
    char v25 = v21;
    if (v12[3] >= v23 + v24)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v12 = v47;
        if (v21) {
          goto LABEL_3;
        }
      }
      else
      {
        a11();
        uint64_t v12 = v47;
        if (v25) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      a9();
      uint64_t v26 = a8(v16, v15, v18, v17);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_21;
      }
      unint64_t v22 = v26;
      uint64_t v12 = v47;
      if (v25)
      {
LABEL_3:
        uint64_t v14 = (void *)(v12[7] + 48 * v22);
        *uint64_t v14 = v19;
        v14[1] = v41;
        v14[2] = v42;
        v14[3] = v43;
        v14[4] = v44;
        v14[5] = v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    v12[(v22 >> 6) + 8] |= 1 << v22;
    uint64_t v28 = (void *)(v12[6] + 32 * v22);
    *uint64_t v28 = v16;
    v28[1] = v15;
    v28[2] = v18;
    void v28[3] = v17;
    long long v29 = (void *)(v12[7] + 48 * v22);
    *long long v29 = v19;
    v29[1] = v41;
    v29[2] = v42;
    v29[3] = v43;
    v29[4] = v44;
    v29[5] = v45;
    uint64_t v30 = v12[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_20;
    }
    v12[2] = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v39 + 16;
    uint64_t v11 = v40 - 1;
    if (v40 == 1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v12;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9CE8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v41 = *(void *)(v1 + 24);
  uint64_t v42 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v39 = *(void *)(v1 + 40);
  uint64_t v40 = v8;
  int v50 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v38 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 72);
  uint64_t v32 = *(void *)(v1 + 64);
  uint64_t v33 = v9;
  uint64_t v34 = *(void *)(v1 + 80);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 88);
  int v35 = *(unsigned __int8 *)(v1 + 89);
  int v36 = v8;
  uint64_t v10 = *(void *)(v1 + 96);
  uint64_t v30 = *(void *)(v1 + 104);
  uint64_t v31 = v10;
  uint64_t v11 = *(void *)(v1 + 120);
  uint64_t v28 = *(void *)(v1 + 112);
  uint64_t v29 = v11;
  uint64_t v26 = *(void *)(v1 + 128);
  uint64_t v27 = *(void *)(v1 + 136);
  uint64_t v12 = *(void *)(v1 + 152);
  uint64_t v37 = *(void *)(v1 + 144);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1;
  uint64_t v16 = v15;
  __swift_project_boxed_opaque_existential_1(v14, v13);
  sub_25B1BC478();
  sub_25B291290();
  LOBYTE(v44) = 0;
  uint64_t v17 = v6;
  uint64_t v18 = v43;
  sub_25B290D40();
  if (!v18)
  {
    uint64_t v20 = v39;
    uint64_t v19 = v40;
    char v21 = v50;
    uint64_t v43 = v12;
    uint64_t v22 = v37;
    uint64_t v23 = v38;
    LOBYTE(v44) = 1;
    sub_25B290D40();
    uint64_t v44 = v19;
    uint64_t v45 = v20;
    char v51 = 2;
    sub_25B196CE0();
    sub_25B290D60();
    LOBYTE(v44) = 3;
    sub_25B290D50();
    LOBYTE(v44) = v21;
    char v51 = 4;
    sub_25B196D34();
    sub_25B290D60();
    uint64_t v44 = v23;
    uint64_t v45 = v32;
    uint64_t v46 = v33;
    uint64_t v47 = v34;
    char v48 = v36;
    char v49 = v35;
    char v51 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9438);
    sub_25B1BC4CC(&qword_26A4D9440, &qword_26A4D9438, (void (*)(void))sub_25B197020);
    sub_25B290D60();
    uint64_t v44 = v31;
    char v51 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A30);
    sub_25B196D88((unint64_t *)&unk_26A4D9A38, (void (*)(void))sub_25B196E10, (void (*)(void))sub_25B196E64);
    sub_25B290D60();
    uint64_t v44 = v30;
    char v51 = 7;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9A10);
    sub_25B196BB0(&qword_26A4D9A20, (void (*)(void))sub_25B196EB8, (void (*)(void))sub_25B196F0C);
    sub_25B290D60();
    uint64_t v44 = v28;
    uint64_t v45 = v29;
    char v51 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91E8);
    sub_25B1BC4CC(&qword_26A4D91F0, &qword_26A4D91E8, (void (*)(void))sub_25B196FCC);
    sub_25B290D60();
    uint64_t v44 = v26;
    uint64_t v45 = v27;
    char v51 = 9;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E80);
    sub_25B196F60();
    sub_25B290D60();
    uint64_t v44 = v22;
    uint64_t v45 = v43;
    char v51 = 10;
    sub_25B290D60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v17, v16);
}

uint64_t sub_25B1BB0D4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return ZoneVersionAdvertisement.DeviceDescriptor.init(from:)(a1, a2);
}

uint64_t sub_25B1BB0EC(void *a1)
{
  return ZoneVersionAdvertisement.DeviceDescriptor.encode(to:)(a1);
}

ReplicatorEngine::ZoneVersionAdvertisement::CodingKeys_optional __swiftcall ZoneVersionAdvertisement.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_25B290C30();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

ReplicatorEngine::ZoneVersionAdvertisement::CodingKeys_optional __swiftcall ZoneVersionAdvertisement.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_25B290C30();
  result.value = swift_bridgeObjectRelease();
  if (v3)
  {
    if (v3 == 1) {
      char v5 = 1;
    }
    else {
      char v5 = 2;
    }
  }
  else
  {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

ReplicatorEngine::ZoneVersionAdvertisement::CodingKeys_optional __swiftcall ZoneVersionAdvertisement.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  *uint64_t v1 = 2;
  return (ReplicatorEngine::ZoneVersionAdvertisement::CodingKeys_optional)intValue;
}

uint64_t ZoneVersionAdvertisement.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t ZoneVersionAdvertisement.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x73726556656E6F7ALL;
  }
  else {
    return 0x654465746F6D6572;
  }
}

uint64_t ZoneVersionAdvertisement.CodingKeys.stringValue.getter()
{
  if (*v0) {
    return 0x73726556656E6F7ALL;
  }
  else {
    return 0x654465746F6D6572;
  }
}

uint64_t sub_25B1BB288(char *a1, char *a2)
{
  return sub_25B270EB4(*a1, *a2);
}

uint64_t sub_25B1BB294()
{
  return sub_25B291260();
}

uint64_t sub_25B1BB328()
{
  sub_25B290630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1BB3A8()
{
  return sub_25B291260();
}

ReplicatorEngine::ZoneVersionAdvertisement::CodingKeys_optional sub_25B1BB438(Swift::String *a1)
{
  return ZoneVersionAdvertisement.CodingKeys.init(rawValue:)(*a1);
}

void sub_25B1BB444(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x654465746F6D6572;
  if (*v1) {
    uint64_t v2 = 0x73726556656E6F7ALL;
  }
  unint64_t v3 = 0xEC00000065636976;
  if (*v1) {
    unint64_t v3 = 0xEC000000736E6F69;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_25B1BB494()
{
  if (*v0) {
    return 0x73726556656E6F7ALL;
  }
  else {
    return 0x654465746F6D6572;
  }
}

uint64_t sub_25B1BB4E4(uint64_t a1)
{
  unint64_t v2 = sub_25B1BC544();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1BB520(uint64_t a1)
{
  unint64_t v2 = sub_25B1BC544();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ZoneVersionAdvertisement.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9C88);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1BC544();
  sub_25B291280();
  if (!v2)
  {
    uint64_t v8 = v5;
    uint64_t v9 = v42;
    char v30 = 0;
    sub_25B1BC598();
    sub_25B290CC0();
    long long v27 = v39;
    long long v28 = v40;
    long long v29 = v41;
    long long v23 = v35;
    long long v24 = v36;
    long long v25 = v37;
    long long v26 = v38;
    long long v19 = v31;
    long long v20 = v32;
    long long v21 = v33;
    long long v22 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A68);
    v17[7] = 1;
    sub_25B1BC5EC();
    sub_25B290CC0();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v7, v4);
    uint64_t v10 = v18;
    long long v11 = v28;
    *(_OWORD *)(v9 + 128) = v27;
    *(_OWORD *)(v9 + 144) = v11;
    *(_OWORD *)(v9 + 160) = v29;
    long long v12 = v24;
    *(_OWORD *)(v9 + 64) = v23;
    *(_OWORD *)(v9 + 80) = v12;
    long long v13 = v26;
    *(_OWORD *)(v9 + 96) = v25;
    *(_OWORD *)(v9 + 112) = v13;
    long long v14 = v20;
    *(_OWORD *)uint64_t v9 = v19;
    *(_OWORD *)(v9 + 16) = v14;
    long long v15 = v22;
    *(_OWORD *)(v9 + 32) = v21;
    *(_OWORD *)(v9 + 48) = v15;
    *(void *)(v9 + 176) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t ZoneVersionAdvertisement.encode(to:)(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9CE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *((void *)v3 + 22);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1BC544();
  sub_25B291290();
  long long v9 = v3[9];
  long long v25 = v3[8];
  long long v26 = v9;
  long long v27 = v3[10];
  long long v10 = v3[5];
  long long v21 = v3[4];
  long long v22 = v10;
  long long v11 = v3[7];
  long long v23 = v3[6];
  long long v24 = v11;
  long long v12 = v3[1];
  long long v17 = *v3;
  long long v13 = v3[2];
  long long v20 = v3[3];
  long long v18 = v12;
  long long v19 = v13;
  char v16 = 0;
  sub_25B1BC684();
  sub_25B290D60();
  if (!v2)
  {
    *(void *)&long long v17 = v28;
    char v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A68);
    sub_25B1BC6D8();
    sub_25B290D60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25B1BB99C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ZoneVersionAdvertisement.init(from:)(a1, a2);
}

uint64_t sub_25B1BB9B4(void *a1)
{
  return ZoneVersionAdvertisement.encode(to:)(a1);
}

uint64_t sub_25B1BB9CC@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_25B114300(a2, a3);
      long long v10 = (char *)sub_25B28FD00();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_25B28FD30();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_25B28FD20();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x25B1BBC30);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_25B10DFF0(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      long long v17 = (char *)sub_25B28FD00();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_25B28FD30();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_25B28FD20();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_25B1BBC40(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_25B1BB9CC((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_25B1BBD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_25B28FD00();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_25B28FD30();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_25B28FD20();
  sub_25B1BB9CC(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_25B1BBDD0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x25B1BC038);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_25B114300(a3, a4);
                  sub_25B114300(a1, a2);
                  char v17 = sub_25B1BBD18((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_25B10DFF0(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_25B114300(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_25B1BBD18(v21, v22, v20, a3, a4);
                  sub_25B10DFF0(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_25B114300(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_25B114300(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_25B1BBC40(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_25B10DFF0(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s16ReplicatorEngine24ZoneVersionAdvertisementV16DeviceDescriptorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v50 = *(unsigned __int8 *)(a1 + 48);
  double v7 = *(double *)(a1 + 56);
  double v6 = *(double *)(a1 + 64);
  double v9 = *(double *)(a1 + 72);
  double v8 = *(double *)(a1 + 80);
  char v44 = *(unsigned char *)(a1 + 88);
  char v49 = *(unsigned char *)(a1 + 89);
  uint64_t v48 = *(void *)(a1 + 96);
  uint64_t v46 = *(void *)(a1 + 104);
  uint64_t v40 = *(void *)(a1 + 112);
  unint64_t v42 = *(void *)(a1 + 120);
  uint64_t v34 = *(void *)(a1 + 128);
  uint64_t v32 = *(void *)(a1 + 144);
  uint64_t v36 = *(void *)(a1 + 152);
  uint64_t v37 = *(void *)(a1 + 136);
  uint64_t v28 = *(void *)(a1 + 160);
  uint64_t v30 = *(void *)(a1 + 168);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  int v14 = *(unsigned __int8 *)(a2 + 48);
  double v16 = *(double *)(a2 + 56);
  double v15 = *(double *)(a2 + 64);
  double v18 = *(double *)(a2 + 72);
  double v17 = *(double *)(a2 + 80);
  char v43 = *(unsigned char *)(a2 + 88);
  char v19 = *(unsigned char *)(a2 + 89);
  uint64_t v47 = *(void *)(a2 + 96);
  uint64_t v45 = *(void *)(a2 + 104);
  unint64_t v41 = *(void *)(a2 + 120);
  uint64_t v33 = *(void *)(a2 + 128);
  uint64_t v38 = *(void *)(a2 + 136);
  uint64_t v39 = *(void *)(a2 + 112);
  uint64_t v31 = *(void *)(a2 + 144);
  uint64_t v35 = *(void *)(a2 + 152);
  uint64_t v27 = *(void *)(a2 + 160);
  uint64_t v29 = *(void *)(a2 + 168);
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v20 = sub_25B290FB0();
    uint64_t result = 0;
    if ((v20 & 1) == 0) {
      return result;
    }
  }
  if (v2 == v11 && v3 == v10)
  {
    uint64_t result = 0;
  }
  else
  {
    char v22 = sub_25B290FB0();
    uint64_t result = 0;
    if ((v22 & 1) == 0) {
      return result;
    }
  }
  if (v4 != v12 || v5 != v13 || v50 != v14) {
    return result;
  }
  if (v49)
  {
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (v19) {
      return 0;
    }
    uint64_t result = 0;
    if (v7 != v16 || v6 != v15 || v9 != v18) {
      return result;
    }
    if (v44)
    {
      if ((v43 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if ((v43 & 1) != 0 || v8 != v17) {
        return result;
      }
    }
  }
  if ((sub_25B1B8450(v48, v47, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25B18A768) & 1) == 0
    || (sub_25B1B8450(v46, v45, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25B18A6AC) & 1) == 0)
  {
    return 0;
  }
  if (v42 >> 60 == 15)
  {
    unint64_t v23 = v41;
    if (v41 >> 60 == 15) {
      goto LABEL_33;
    }
LABEL_31:
    sub_25B1142EC(v40, v42);
    sub_25B1142EC(v39, v23);
    sub_25B111FF0(v40, v42);
    sub_25B111FF0(v39, v23);
    return 0;
  }
  unint64_t v23 = v41;
  if (v41 >> 60 == 15) {
    goto LABEL_31;
  }
  sub_25B1142EC(v40, v42);
  sub_25B1142EC(v39, v41);
  char v24 = sub_25B1BBDD0(v40, v42, v39, v41);
  sub_25B111FF0(v39, v41);
  sub_25B111FF0(v40, v42);
  if ((v24 & 1) == 0) {
    return 0;
  }
LABEL_33:
  if (v37)
  {
    if (!v38) {
      return 0;
    }
    if (v34 != v33 || v37 != v38)
    {
      char v25 = sub_25B290FB0();
      uint64_t result = 0;
      if ((v25 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v38)
  {
    return 0;
  }
  if (!v36)
  {
    if (!v35) {
      goto LABEL_47;
    }
    return 0;
  }
  if (!v35) {
    return 0;
  }
  if (v32 == v31 && v36 == v35 || (v26 = sub_25B290FB0(), uint64_t result = 0, (v26 & 1) != 0))
  {
LABEL_47:
    if (v30)
    {
      if (v29 && (v28 == v27 && v30 == v29 || (sub_25B290FB0() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v29)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_25B1BC478()
{
  unint64_t result = qword_26A4D9788;
  if (!qword_26A4D9788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9788);
  }
  return result;
}

uint64_t sub_25B1BC4CC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25B1BC544()
{
  unint64_t result = qword_26A4D9770;
  if (!qword_26A4D9770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9770);
  }
  return result;
}

unint64_t sub_25B1BC598()
{
  unint64_t result = qword_26A4D97A8;
  if (!qword_26A4D97A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D97A8);
  }
  return result;
}

unint64_t sub_25B1BC5EC()
{
  unint64_t result = qword_26A4D9A78;
  if (!qword_26A4D9A78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4D9A68);
    sub_25B1BC770(&qword_26A4D9388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9A78);
  }
  return result;
}

unint64_t sub_25B1BC684()
{
  unint64_t result = qword_26A4D97A0;
  if (!qword_26A4D97A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D97A0);
  }
  return result;
}

unint64_t sub_25B1BC6D8()
{
  unint64_t result = qword_26A4D9A70;
  if (!qword_26A4D9A70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4D9A68);
    sub_25B1BC770(&qword_26A4D9380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9A70);
  }
  return result;
}

uint64_t sub_25B1BC770(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ZoneVersion();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25B1BC7B8()
{
  unint64_t result = qword_26A4DAB70;
  if (!qword_26A4DAB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB70);
  }
  return result;
}

unint64_t sub_25B1BC810()
{
  unint64_t result = qword_26A4D9798;
  if (!qword_26A4D9798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9798);
  }
  return result;
}

unint64_t sub_25B1BC868()
{
  unint64_t result = qword_26A4D9790;
  if (!qword_26A4D9790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9790);
  }
  return result;
}

unint64_t sub_25B1BC8C0()
{
  unint64_t result = qword_26A4DAB78;
  if (!qword_26A4DAB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAB78);
  }
  return result;
}

unint64_t sub_25B1BC918()
{
  unint64_t result = qword_26A4D9780;
  if (!qword_26A4D9780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9780);
  }
  return result;
}

unint64_t sub_25B1BC970()
{
  unint64_t result = qword_26A4D9778;
  if (!qword_26A4D9778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9778);
  }
  return result;
}

uint64_t destroy for ZoneVersionAdvertisement(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(a1 + 120);
  if (v2 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(a1 + 112), v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ZoneVersionAdvertisement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  double v7 = (uint64_t *)(a2 + 112);
  unint64_t v8 = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)v7;
  }
  else
  {
    uint64_t v9 = *v7;
    sub_25B114300(*v7, v8);
    *(void *)(a1 + 112) = v9;
    *(void *)(a1 + 120) = v8;
  }
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ZoneVersionAdvertisement(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v4 = *(_OWORD *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t *)(a2 + 112);
  unint64_t v7 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120) >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      uint64_t v9 = *v6;
      sub_25B114300(*v6, *(void *)(a2 + 120));
      uint64_t v10 = *(void *)(a1 + 112);
      unint64_t v11 = *(void *)(a1 + 120);
      *(void *)(a1 + 112) = v9;
      *(void *)(a1 + 120) = v7;
      sub_25B10DFF0(v10, v11);
      goto LABEL_8;
    }
    sub_25B1973E4(a1 + 112);
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 112) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  uint64_t v8 = *v6;
  sub_25B114300(*v6, *(void *)(a2 + 120));
  *(void *)(a1 + 112) = v8;
  *(void *)(a1 + 120) = v7;
LABEL_8:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy184_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for ZoneVersionAdvertisement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  long long v6 = (void *)(a2 + 112);
  unint64_t v7 = *(void *)(a1 + 120);
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 120);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *(void *)(a1 + 112);
      *(void *)(a1 + 112) = *v6;
      *(void *)(a1 + 120) = v8;
      sub_25B10DFF0(v9, v7);
      goto LABEL_6;
    }
    sub_25B1973E4(a1 + 112);
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)v6;
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ZoneVersionAdvertisement(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 184)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ZoneVersionAdvertisement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ZoneVersionAdvertisement()
{
  return &type metadata for ZoneVersionAdvertisement;
}

ValueMetadata *type metadata accessor for ZoneVersionAdvertisement.DeviceDescriptor()
{
  return &type metadata for ZoneVersionAdvertisement.DeviceDescriptor;
}

uint64_t getEnumTagSinglePayload for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    void *result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B1BD0B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys()
{
  return &type metadata for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ZoneVersionAdvertisement.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B1BD1B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ZoneVersionAdvertisement.CodingKeys()
{
  return &type metadata for ZoneVersionAdvertisement.CodingKeys;
}

uint64_t dispatch thunk of ZoneVersionAdvertising.zoneVersionPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ZoneVersionAdvertising.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ZoneVersionAdvertising.isEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ZoneVersionAdvertising.isEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ZoneVersionAdvertising.advertise(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ZoneVersionAdvertising.subscribe()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_25B1BD268(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9390);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B1BD2C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B1BD330(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B1BD398(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t BasicTimer.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t BasicTimer.init()()
{
  *(void *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t sub_25B1BD490()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_25B1BE1C0();
  os_unfair_lock_unlock(v1 + 4);
  return swift_release();
}

void sub_25B1BD518(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_25B1BD550()
{
  sub_25B1BD62C(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(double *)(v0 + 24));
}

uint64_t sub_25B1BD58C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_25B1BE41C();
  os_unfair_lock_unlock(v1 + 4);
  return swift_release();
}

uint64_t sub_25B1BD600()
{
  return sub_25B1BDF88();
}

void sub_25B1BD62C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v54 = a3;
  uint64_t v51 = a2;
  uint64_t v48 = a1;
  uint64_t v7 = sub_25B290320();
  uint64_t v59 = *(void *)(v7 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  long long v57 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_25B290360();
  uint64_t v55 = *(void *)(v58 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  long long v53 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_25B290310();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  int v50 = (uint64_t *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  int v14 = (uint64_t *)((char *)&v44 - v13);
  uint64_t v60 = sub_25B290400();
  uint64_t v56 = *(void *)(v60 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v60);
  uint64_t v46 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  double v18 = (char *)&v44 - v17;
  uint64_t v19 = sub_25B290930();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  char v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = *(const os_unfair_lock **)(v4 + 24);
  swift_retain();
  os_unfair_lock_assert_owner(v23 + 4);
  swift_release();
  if (*(void *)(v5 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25B290970();
    swift_unknownObjectRelease();
  }
  uint64_t v49 = v5;
  *(void *)(v5 + 16) = 0;
  swift_unknownObjectRelease();
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_25B290190();
  __swift_project_value_buffer(v24, (uint64_t)qword_26A4EB150);
  char v25 = sub_25B290160();
  os_log_type_t v26 = sub_25B290870();
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v52 = v18;
  if (v27)
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 134349056;
    *(double *)uint64_t aBlock = a4;
    sub_25B2909C0();
    _os_log_impl(&dword_25B107000, v25, v26, "Timer will fire in %{public}fs", v28, 0xCu);
    MEMORY[0x261160890](v28, -1, -1);
  }

  double v29 = a4 * 1000.0;
  if ((~COERCE__INT64(a4 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v29 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v29 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    return;
  }
  uint64_t v45 = v7;
  if ((uint64_t)v29 >= 0x7FFFFFFF) {
    uint64_t v30 = 0x7FFFFFFFLL;
  }
  else {
    uint64_t v30 = (uint64_t)v29;
  }
  sub_25B1BE2A8();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_25B1BE2E8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9EA0);
  sub_25B1BE340();
  sub_25B290A00();
  uint64_t v31 = sub_25B290940();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v32 = v46;
  sub_25B2903F0();
  *int v14 = v30;
  uint64_t v33 = v47;
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v14, *MEMORY[0x263F8F000], v47);
  uint64_t v34 = v52;
  MEMORY[0x26115ED70](v32, v14);
  uint64_t v35 = *(void (**)(uint64_t *, uint64_t))(v10 + 8);
  v35(v14, v33);
  uint64_t v56 = *(void *)(v56 + 8);
  ((void (*)(char *, uint64_t))v56)(v32, v60);
  uint64_t ObjectType = swift_getObjectType();
  sub_25B248B78((uint64_t)v14);
  uint64_t v37 = v50;
  sub_25B248BEC(v50);
  MEMORY[0x26115F2D0](v34, v14, v37, ObjectType);
  v35(v37, v33);
  v35(v14, v33);
  uint64_t v38 = (void *)swift_allocObject();
  uint64_t v39 = v49;
  uint64_t v40 = v51;
  long long v38[2] = v49;
  v38[3] = v40;
  v38[4] = v54;
  aBlock[4] = sub_25B1BE3DC;
  aBlock[5] = v38;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_5;
  unint64_t v41 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  unint64_t v42 = v53;
  sub_25B248AAC();
  char v43 = v57;
  sub_25B248AB0();
  sub_25B290960();
  _Block_release(v41);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v45);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v58);
  swift_release();
  *(void *)(v39 + 16) = v31;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  if (*(void *)(v39 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25B290980();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    ((void (*)(char *, uint64_t))v56)(v34, v60);
  }
  else
  {
    ((void (*)(char *, uint64_t))v56)(v34, v60);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_25B1BDE04(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(os_unfair_lock_s **)(a1 + 24);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  sub_25B1BE41C();
  os_unfair_lock_unlock(v3 + 4);
  uint64_t v4 = swift_release();
  return a2(v4);
}

uint64_t sub_25B1BDE94()
{
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25B290190();
  __swift_project_value_buffer(v0, (uint64_t)qword_26A4EB150);
  uint64_t v1 = sub_25B290160();
  os_log_type_t v2 = sub_25B290870();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_25B107000, v1, v2, "Timer fired", v3, 2u);
    MEMORY[0x261160890](v3, -1, -1);
  }

  return sub_25B1BDF88();
}

uint64_t sub_25B1BDF88()
{
  uint64_t v1 = v0;
  os_log_type_t v2 = *(const os_unfair_lock **)(v0 + 24);
  swift_retain();
  os_unfair_lock_assert_owner(v2 + 4);
  uint64_t result = swift_release();
  if (*(void *)(v1 + 16))
  {
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_25B290190();
    __swift_project_value_buffer(v4, (uint64_t)qword_26A4EB150);
    uint64_t v5 = sub_25B290160();
    os_log_type_t v6 = sub_25B290870();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_25B107000, v5, v6, "Cancelling timer", v7, 2u);
      MEMORY[0x261160890](v7, -1, -1);
    }

    if (*(void *)(v1 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_25B290970();
      swift_unknownObjectRelease();
    }
    *(void *)(v1 + 16) = 0;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t BasicTimer.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t BasicTimer.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_25B1BE150()
{
  return sub_25B1BD490();
}

uint64_t sub_25B1BE174()
{
  return sub_25B1BD58C();
}

uint64_t sub_25B1BE198(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_25B1BE1C0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_25B1BE1E8()
{
  return sub_25B1BDF88();
}

uint64_t type metadata accessor for BasicTimer()
{
  return self;
}

uint64_t method lookup function for BasicTimer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BasicTimer);
}

uint64_t dispatch thunk of BasicTimer.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of BasicTimer.start(duration:queue:handler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of BasicTimer.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

unint64_t sub_25B1BE2A8()
{
  unint64_t result = qword_26A4D9B80;
  if (!qword_26A4D9B80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A4D9B80);
  }
  return result;
}

unint64_t sub_25B1BE2E8()
{
  unint64_t result = qword_26A4D9EB8;
  if (!qword_26A4D9EB8)
  {
    sub_25B290930();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9EB8);
  }
  return result;
}

unint64_t sub_25B1BE340()
{
  unint64_t result = qword_26A4D9DB8;
  if (!qword_26A4D9DB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26A4D9EA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9DB8);
  }
  return result;
}

uint64_t sub_25B1BE39C()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25B1BE3DC()
{
  return sub_25B1BDE04(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_25B1BE400()
{
  return sub_25B1BDE94();
}

uint64_t sub_25B1BE41C()
{
  return sub_25B1BE1C0();
}

uint64_t dispatch thunk of PinnedIdentityManaging.fetchIdentityBlob(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PinnedIdentityManaging.setIdentityBlob(blob:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of TimerProtocol.start(duration:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of TimerProtocol.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_25B1BE484()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_25B290650();
  sub_25B290DB0();
  sub_25B290650();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_25B1BE500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB1C0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  sub_25B28FFD0();
  *uint64_t v12 = a1;
  v12[1] = a2;
  v12[2] = a3;
  sub_25B1BFB90((uint64_t)v12, (uint64_t)v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  swift_beginAccess();
  sub_25B20EC4C((uint64_t)v8, a3);
  swift_endAccess();
  sub_25B1BE794();
  return sub_25B1BFBF4((uint64_t)v12);
}

uint64_t sub_25B1BE6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB1C0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  swift_beginAccess();
  sub_25B20EC4C((uint64_t)v5, a2);
  swift_endAccess();
  return sub_25B1BE794();
}

uint64_t sub_25B1BE794()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (void *)v1[2];
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  char v8 = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v8)
  {
    uint64_t v10 = v1[4];
    if (v10)
    {
      uint64_t v11 = *(os_unfair_lock_s **)(v10 + 24);
      MEMORY[0x270FA5388](result);
      v22[-2] = sub_25B10DCB4;
      v22[-1] = v10;
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v11 + 4);
      sub_25B10DCD0(v12);
      os_unfair_lock_unlock(v11 + 4);
      swift_release();
      swift_release();
    }
    v1[4] = 0;
    swift_release();
    sub_25B1BEB10();
    uint64_t result = swift_beginAccess();
    if (*(void *)(v1[3] + 16))
    {
      type metadata accessor for BasicTimer();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
      uint64_t v14 = swift_allocObject();
      *(_DWORD *)(v14 + 16) = 0;
      *(void *)(v13 + 24) = v14;
      v1[4] = v13;
      uint64_t result = swift_release();
      uint64_t v15 = v1[4];
      if (v15)
      {
        uint64_t v16 = swift_allocObject();
        uint64_t v17 = swift_weakInit();
        double v18 = *(os_unfair_lock_s **)(v15 + 24);
        uint64_t v19 = MEMORY[0x270FA5388](v17);
        v22[-6] = v15;
        v22[-5] = 0x4072C00000000000;
        v22[-4] = v7;
        v22[-3] = sub_25B1C00B0;
        v22[-2] = v16;
        MEMORY[0x270FA5388](v19);
        v22[-2] = sub_25B10DD5C;
        v22[-1] = v20;
        swift_retain();
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v18 + 4);
        sub_25B10DDCC(v21);
        os_unfair_lock_unlock(v18 + 4);
        swift_release();
        swift_release_n();
        return swift_release();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B1BEAB8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_25B1BE794();
    return swift_release();
  }
  return result;
}

uint64_t sub_25B1BEB10()
{
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAB90);
  uint64_t v1 = MEMORY[0x270FA5388](v60);
  uint64_t v59 = (uint64_t *)((char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v58 = (uint64_t *)((char *)&v49 - v4);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  long long v57 = (uint64_t *)((char *)&v49 - v6);
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = (uint64_t *)((char *)&v49 - v7);
  uint64_t v8 = sub_25B290000();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v49 - v13;
  sub_25B28FFD0();
  sub_25B28FF60();
  uint64_t v15 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  uint64_t v16 = *(void *)(v0 + 24);
  long long v62 = v12;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_25B222ED4((uint64_t)sub_25B1BFC50, (uint64_t)v61, v16);
  swift_bridgeObjectRelease();
  int64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v49 = 0;
    int v50 = v15;
    uint64_t v51 = v14;
    uint64_t v52 = v9;
    long long v53 = v12;
    uint64_t v54 = v8;
    uint64_t v66 = MEMORY[0x263F8EE78];
    sub_25B224214(0, v18, 0);
    uint64_t v19 = sub_25B1A7EF0(v17);
    int v21 = v20;
    uint64_t v55 = v17 + 64;
    char v23 = v22 & 1;
    for (int64_t i = v18 - 1; ; --i)
    {
      uint64_t v25 = v60;
      os_log_type_t v26 = v56;
      uint64_t v27 = (uint64_t)v56 + *(int *)(v60 + 48);
      uint64_t v28 = sub_25B1BFEEC(v27, v19, v21, v23 & 1, v17);
      *os_log_type_t v26 = v28;
      uint64_t v29 = (uint64_t)v57;
      uint64_t *v57 = v28;
      sub_25B1BFB90(v27, v29 + *(int *)(v25 + 48));
      uint64_t v30 = v58;
      sub_25B1BFF90(v29, (uint64_t)v58);
      sub_25B1BFFF8((uint64_t)v26);
      uint64_t v31 = *(int *)(v25 + 48);
      uint64_t v32 = (void *)((char *)v59 + v31);
      *uint64_t v59 = *v30;
      sub_25B1BFB90((uint64_t)v30 + v31, (uint64_t)v32);
      uint64_t v33 = v32[1];
      uint64_t v64 = *v32;
      uint64_t v65 = v33;
      swift_bridgeObjectRetain();
      sub_25B290650();
      uint64_t v63 = v32[2];
      sub_25B290DB0();
      sub_25B290650();
      swift_bridgeObjectRelease();
      uint64_t v34 = v64;
      uint64_t v35 = v65;
      sub_25B1BFBF4((uint64_t)v32);
      sub_25B1BFFF8((uint64_t)v30);
      uint64_t v36 = v66;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_25B224214(0, *(void *)(v36 + 16) + 1, 1);
        uint64_t v36 = v66;
      }
      unint64_t v39 = *(void *)(v36 + 16);
      unint64_t v38 = *(void *)(v36 + 24);
      if (v39 >= v38 >> 1)
      {
        uint64_t result = sub_25B224214(v38 > 1, v39 + 1, 1);
        uint64_t v36 = v66;
      }
      *(void *)(v36 + 16) = v39 + 1;
      uint64_t v40 = v36 + 16 * v39;
      *(void *)(v40 + 32) = v34;
      *(void *)(v40 + 40) = v35;
      if (v19 < 0 || v19 >= -(-1 << *(unsigned char *)(v17 + 32)))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        return result;
      }
      if (((*(void *)(v55 + (((unint64_t)v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        goto LABEL_19;
      }
      if (*(_DWORD *)(v17 + 36) != v21) {
        goto LABEL_20;
      }
      uint64_t v41 = sub_25B290A20();
      if (!i) {
        break;
      }
      uint64_t v19 = v41;
      char v23 = 0;
      int v21 = *(_DWORD *)(v17 + 36);
    }
    swift_release();
    uint64_t v12 = v53;
    uint64_t v8 = v54;
    uint64_t v14 = v51;
    uint64_t v9 = v52;
    uint64_t v15 = v50;
    if (!*(void *)(v36 + 16)) {
      goto LABEL_16;
    }
  }
  else
  {
    swift_release();
    uint64_t v36 = MEMORY[0x263F8EE78];
    if (!*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_16:
      uint64_t v48 = *(void (**)(char *, uint64_t))(v9 + 8);
      v48(v14, v8);
      goto LABEL_17;
    }
  }
  uint64_t v64 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AF0);
  sub_25B116394(&qword_26A4D9AF8, &qword_26A4D9AF0);
  uint64_t v42 = sub_25B290550();
  unint64_t v44 = v43;
  swift_bridgeObjectRelease();
  sub_25B2569B0(0xD000000000000012, 0x800000025B29CCF0, 0xD000000000000012, (id)0x800000025B29CD10, 0xD000000000000012, 0x800000025B29CD10, v42, v44);
  uint64_t v45 = swift_bridgeObjectRelease();
  uint64_t v46 = *v15;
  MEMORY[0x270FA5388](v45);
  *(&v49 - 2) = (uint64_t)v12;
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_25B222ED4((uint64_t)sub_25B1C0058, (uint64_t)(&v49 - 4), v46);
  swift_bridgeObjectRelease();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v9 + 8);
  v48(v14, v8);
  uint64_t *v15 = v47;
LABEL_17:
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v48)(v12, v8);
}

BOOL sub_25B1BF0F8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  v21[1] = a3;
  uint64_t v5 = sub_25B290000();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAB90);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (void *)((char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v21 - v14;
  uint64_t v16 = *a1;
  uint64_t v17 = (char *)v21 + *(int *)(v10 + 56) - v14;
  *(void *)((char *)v21 - v14) = v16;
  sub_25B1BFB90(a2, (uint64_t)v17);
  uint64_t v18 = (uint64_t)v13 + *(int *)(v10 + 56);
  *uint64_t v13 = v16;
  sub_25B1BFB90((uint64_t)v17, v18);
  uint64_t v19 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18 + *(int *)(v19 + 24), v5);
  sub_25B1BFBF4(v18);
  sub_25B1C00B8(&qword_26A4DB030, MEMORY[0x263F07490]);
  LOBYTE(v16) = sub_25B290560();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_25B1BFFF8((uint64_t)v15);
  return (v16 & 1) == 0;
}

uint64_t sub_25B1BF310(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  v21[1] = a3;
  uint64_t v5 = sub_25B290000();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAB90);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (void *)((char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v21 - v14;
  uint64_t v16 = *a1;
  uint64_t v17 = (char *)v21 + *(int *)(v10 + 56) - v14;
  *(void *)((char *)v21 - v14) = v16;
  sub_25B1BFB90(a2, (uint64_t)v17);
  uint64_t v18 = (uint64_t)v13 + *(int *)(v10 + 56);
  *uint64_t v13 = v16;
  sub_25B1BFB90((uint64_t)v17, v18);
  uint64_t v19 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18 + *(int *)(v19 + 24), v5);
  sub_25B1BFBF4(v18);
  LOBYTE(v16) = sub_25B28FF70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_25B1BFFF8((uint64_t)v15);
  return v16 & 1;
}

uint64_t sub_25B1BF4E8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConnectionDurationMonitor()
{
  return self;
}

uint64_t *sub_25B1BF55C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_25B290000();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_25B1BF64C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_25B290000();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_25B1BF6C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_25B290000();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_25B1BF764(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25B290000();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_25B1BF808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_25B290000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_25B1BF88C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_25B290000();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_25B1BF920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B1BF934);
}

uint64_t sub_25B1BF934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25B290000();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25B1BF9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B1BF9F8);
}

uint64_t sub_25B1BF9F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25B290000();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor()
{
  uint64_t result = qword_26A4DAB80;
  if (!qword_26A4DAB80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25B1BFAEC()
{
  uint64_t result = sub_25B290000();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_25B1BFB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B1BFBF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_25B1BFC50(uint64_t *a1, uint64_t a2)
{
  return sub_25B1BF0F8(a1, a2, *(void *)(v2 + 16));
}

void *sub_25B1BFC70()
{
  uint64_t v1 = sub_25B2908F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25B2908C0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_25B290360();
  MEMORY[0x270FA5388](v6 - 8);
  v10[0] = sub_25B10CB64();
  sub_25B290340();
  v10[1] = MEMORY[0x263F8EE78];
  sub_25B1C00B8((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
  sub_25B116394((unint64_t *)&qword_26A4D9B20, (uint64_t *)&unk_26A4D9B10);
  sub_25B290A00();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F130], v1);
  uint64_t v7 = sub_25B290920();
  uint64_t v8 = MEMORY[0x263F8EE80];
  v0[2] = v7;
  v0[3] = v8;
  v0[4] = 0;
  type metadata accessor for BugCapture();
  v0[5] = swift_allocObject();
  return v0;
}

uint64_t sub_25B1BFEEC(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(a5 + 56);
    uint64_t v8 = *(void *)(*(void *)(a5 + 48) + 8 * a2);
    uint64_t v9 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
    sub_25B1BFB90(v7 + *(void *)(*(void *)(v9 - 8) + 72) * a2, v6);
    return v8;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_25B1BFF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAB90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B1BFFF8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAB90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B1C0058(uint64_t *a1, uint64_t a2)
{
  return sub_25B1BF310(a1, a2, *(void *)(v2 + 16)) & 1;
}

uint64_t sub_25B1C0078()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B1C00B0()
{
  return sub_25B1BEAB8();
}

uint64_t sub_25B1C00B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PinnedIdentityManager.__allocating_init(firstLockStateProvider:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  PinnedIdentityManager.init(firstLockStateProvider:)(a1);
  return v2;
}

uint64_t PinnedIdentityManager.init(firstLockStateProvider:)(long long *a1)
{
  uint64_t v19 = a1;
  uint64_t v1 = sub_25B2908F0();
  uint64_t v14 = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25B2908C0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_25B290360();
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v17 = sub_25B10CB64();
  sub_25B290350();
  uint64_t v20 = MEMORY[0x263F8EE78];
  uint64_t v16 = sub_25B1B7ADC((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
  sub_25B1B7B24((unint64_t *)&qword_26A4D9B20, (uint64_t *)&unk_26A4D9B10);
  sub_25B290A00();
  uint64_t v7 = *MEMORY[0x263F8F138];
  uint64_t v8 = v2 + 104;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  uint64_t v13 = v8;
  v9(v4, v7, v1);
  uint64_t v10 = sub_25B290920();
  uint64_t v11 = v18;
  *(void *)(v18 + 64) = v10;
  sub_25B290350();
  uint64_t v20 = MEMORY[0x263F8EE78];
  sub_25B290A00();
  v9(v4, v7, v14);
  *(void *)(v11 + 72) = sub_25B290920();
  *(void *)(v11 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F4A088]), sel_init);
  sub_25B180BD4(v19, v11 + 24);
  return v11;
}

uint64_t PinnedIdentityManager.fetchIdentityBlob(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_25B290320();
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_25B290360();
  uint64_t v8 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v2[6];
  uint64_t v12 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v11);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12))
  {
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v2;
    v13[3] = a1;
    v13[4] = a2;
    unint64_t v38 = sub_25B1C15A0;
    unint64_t v39 = v13;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_25B10F584;
    uint64_t v37 = &block_descriptor_6;
    uint64_t v14 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    sub_25B290340();
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_25B1B7ADC((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
    sub_25B290A00();
    MEMORY[0x26115F250](0, v10, v7, v14);
    _Block_release(v14);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v31);
  }
  else
  {
    uint64_t v29 = a1;
    uint64_t v30 = v8;
    uint64_t v15 = v10;
    uint64_t v16 = v7;
    uint64_t v17 = v5;
    uint64_t v18 = v31;
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_25B290190();
    __swift_project_value_buffer(v19, (uint64_t)qword_26A4EB150);
    uint64_t v20 = sub_25B290160();
    os_log_type_t v21 = sub_25B290880();
    char v22 = v16;
    char v23 = v15;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_25B107000, v20, v21, "Cannot fetch IDS identity blob before first unlock", v24, 2u);
      MEMORY[0x261160890](v24, -1, -1);
    }

    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v29;
    *(void *)(v25 + 24) = a2;
    unint64_t v38 = sub_25B1C1548;
    unint64_t v39 = (void *)v25;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_25B10F584;
    uint64_t v37 = &block_descriptor_6;
    os_log_type_t v26 = _Block_copy(&aBlock);
    swift_retain();
    sub_25B290340();
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_25B1B7ADC((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
    sub_25B290A00();
    MEMORY[0x26115F250](0, v23, v22, v26);
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v17);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v18);
  }
  return swift_release();
}

void sub_25B1C0998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v9[4] = sub_25B1C1640;
  v9[5] = v7;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = sub_25B1C0FEC;
  v9[3] = &block_descriptor_20_1;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_fetchIdentityForPinningWithCompletion_, v8);
  _Block_release(v8);
}

uint64_t sub_25B1C0A94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_25B290320();
  uint64_t v37 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25B290360();
  uint64_t v35 = *(void *)(v12 - 8);
  uint64_t v36 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = qword_26A4D98C0;
  id v16 = a1;
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_25B290190();
  __swift_project_value_buffer(v17, (uint64_t)qword_26A4EB150);
  id v18 = v16;
  uint64_t v19 = sub_25B290160();
  os_log_type_t v20 = sub_25B2908A0();
  if (os_log_type_enabled(v19, v20))
  {
    v32[1] = a3;
    uint64_t v33 = a4;
    uint64_t v34 = a5;
    os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v21 = 134349056;
    id v22 = objc_msgSend(v18, sel_identityBlob);
    uint64_t v23 = sub_25B28FF10();
    unint64_t v25 = v24;

    switch(v25 >> 62)
    {
      case 1uLL:
        sub_25B10DFF0(v23, v25);

        LODWORD(v26) = HIDWORD(v23) - v23;
        if (__OFSUB__(HIDWORD(v23), v23))
        {
          __break(1u);
          JUMPOUT(0x25B1C0F44);
        }
        uint64_t v26 = (int)v26;
        break;
      case 2uLL:
        uint64_t v27 = *(void *)(v23 + 16);
        v32[0] = *(void *)(v23 + 24);
        sub_25B10DFF0(v23, v25);

        uint64_t v26 = v32[0] - v27;
        if (__OFSUB__(v32[0], v27))
        {
          __break(1u);
          goto LABEL_12;
        }
        break;
      case 3uLL:
LABEL_12:
        sub_25B10DFF0(v23, v25);

        uint64_t v26 = 0;
        break;
      default:
        sub_25B10DFF0(v23, v25);

        uint64_t v26 = BYTE6(v25);
        break;
    }
    a4 = v33;
    a5 = v34;
    aBlock[0] = v26;
    sub_25B2909C0();

    _os_log_impl(&dword_25B107000, v19, v20, "Fetched IDS identity blob of size: %{public}ld", v21, 0xCu);
    MEMORY[0x261160890](v21, -1, -1);
  }
  else
  {
  }
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = a4;
  void v28[3] = a5;
  v28[4] = v18;
  aBlock[4] = sub_25B1C168C;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_26_2;
  uint64_t v29 = _Block_copy(aBlock);
  id v30 = v18;
  swift_retain();
  sub_25B290340();
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_25B1B7ADC((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v14, v11, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
  return swift_release();
}

uint64_t sub_25B1C0F54(void (*a1)(uint64_t, unint64_t), int a2, id a3)
{
  if (a3)
  {
    id v4 = objc_msgSend(a3, sel_identityBlob);
    uint64_t v5 = sub_25B28FF10();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  a1(v5, v7);
  return sub_25B111FF0(v5, v7);
}

void sub_25B1C0FEC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

void PinnedIdentityManager.setIdentityBlob(blob:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_25B28FF00();
  v4[4] = sub_25B1C1138;
  v4[5] = 0;
  v4[0] = MEMORY[0x263EF8330];
  v4[1] = 1107296256;
  v4[2] = sub_25B1C132C;
  v4[3] = &block_descriptor_9;
  uint64_t v3 = _Block_copy(v4);
  objc_msgSend(v1, sel_pinIdentityBlob_withCompletion_, v2, v3);
  _Block_release(v3);
}

void sub_25B1C1138(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_25B290190();
    __swift_project_value_buffer(v3, (uint64_t)qword_26A4EB150);
    id v4 = a1;
    id v5 = a1;
    oslog = sub_25B290160();
    os_log_type_t v6 = sub_25B290880();
    if (os_log_type_enabled(oslog, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)id v7 = 138543362;
      id v9 = a1;
      uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
      sub_25B2909C0();
      *uint64_t v8 = v11;

      _os_log_impl(&dword_25B107000, oslog, v6, "Error while attempting to pin IDS identity blob: %{public}@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
      swift_arrayDestroy();
      MEMORY[0x261160890](v8, -1, -1);
      MEMORY[0x261160890](v7, -1, -1);
    }
    else
    {
    }
  }
}

void sub_25B1C132C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

id *PinnedIdentityManager.deinit()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 3));
  return v0;
}

uint64_t PinnedIdentityManager.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 3));
  return swift_deallocClassInstance();
}

uint64_t sub_25B1C1420(uint64_t a1, uint64_t a2)
{
  return PinnedIdentityManager.fetchIdentityBlob(completion:)(a1, a2);
}

void sub_25B1C1444()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 16);
  id v2 = (void *)sub_25B28FF00();
  v4[4] = sub_25B1C1138;
  v4[5] = 0;
  v4[0] = MEMORY[0x263EF8330];
  v4[1] = 1107296256;
  v4[2] = sub_25B1C132C;
  v4[3] = &block_descriptor_14_0;
  uint64_t v3 = _Block_copy(v4);
  objc_msgSend(v1, sel_pinIdentityBlob_withCompletion_, v2, v3);
  _Block_release(v3);
}

uint64_t sub_25B1C1508()
{
  return swift_slowAlloc();
}

uint64_t sub_25B1C1510()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B1C1548()
{
  return (*(uint64_t (**)(void, unint64_t))(v0 + 16))(0, 0xF000000000000000);
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

void sub_25B1C1590()
{
}

void sub_25B1C15A0()
{
  sub_25B1C0998(v0[2], v0[3], v0[4]);
}

uint64_t type metadata accessor for PinnedIdentityManager()
{
  return self;
}

uint64_t method lookup function for PinnedIdentityManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PinnedIdentityManager);
}

uint64_t dispatch thunk of PinnedIdentityManager.__allocating_init(firstLockStateProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t objectdestroy_2Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25B1C1640(void *a1, uint64_t a2)
{
  return sub_25B1C0A94(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_25B1C164C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25B1C168C()
{
  return sub_25B1C0F54(*(void (**)(uint64_t, unint64_t))(v0 + 16), *(void *)(v0 + 24), *(id *)(v0 + 32));
}

uint64_t sub_25B1C16C0()
{
  return sub_25B1C1708(&OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper____lazy_storage___messagePublisher, (uint64_t)&OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__messagePublisher, &qword_26A4D9E60, &qword_26A4D9E58);
}

uint64_t sub_25B1C16E4()
{
  return sub_25B1C1708(&OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper____lazy_storage___devicesDidChangePublisher, (uint64_t)&OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__devicesDidChangePublisher, (uint64_t *)&unk_26A4D9E70, &qword_26A4D9E68);
}

uint64_t sub_25B1C1708(uint64_t *a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(v4 + *a1);
  if (v6)
  {
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v10 = v4;
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_25B116394(a4, a3);
    uint64_t v7 = sub_25B290240();
    *(void *)(v10 + v5) = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

uint64_t sub_25B1C17C8()
{
  return sub_25B1C1708(&OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper____lazy_storage___didUpdatePairedDevicePublisher, (uint64_t)&OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__didUpdatePairedDevicePublisher, &qword_26A4D9E50, &qword_26A4D9E48);
}

uint64_t sub_25B1C17EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice;
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice);
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  *(unsigned char *)(a2 + 32) = *(unsigned char *)(v2 + 32);
  return sub_25B1163D8(v3, v4);
}

uint64_t sub_25B1C1838()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EC8);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = MEMORY[0x263F8EE80];
  qword_26A4D9DD0 = result;
  return result;
}

uint64_t sub_25B1C187C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v34 = a4;
  uint64_t v7 = sub_25B2908F0();
  uint64_t v33 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_25B2908C0();
  MEMORY[0x270FA5388](v32);
  uint64_t v10 = sub_25B290360();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  if (!*(void *)(*a1 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_25B18A634(a2, a3);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v17 = sub_25B1B73F8(0, (unint64_t *)&qword_26A4D9B70);
    uint64_t v29 = v12;
    uint64_t v30 = v17;
    sub_25B290350();
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_25B1C5E04((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
    uint64_t v31 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
    uint64_t v28 = v7;
    id v18 = a1;
    sub_25B116394((unint64_t *)&qword_26A4D9B20, (uint64_t *)&unk_26A4D9B10);
    sub_25B290A00();
    (*(void (**)(char *, void, uint64_t))(v33 + 104))(v9, *MEMORY[0x263F8F138], v28);
    uint64_t v19 = (void *)sub_25B290920();
    id v20 = objc_allocWithZone((Class)type metadata accessor for IDSServiceWrapper());
    swift_bridgeObjectRetain();
    id v21 = v19;
    uint64_t v22 = v31;
    sub_25B1C1BF4(v31, a3, v21);
    unint64_t v24 = v23;
    swift_bridgeObjectRetain();
    id v16 = v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = *v18;
    *id v18 = 0x8000000000000000;
    sub_25B2217F4((uint64_t)v16, v22, a3, isUniquelyReferenced_nonNull_native);
    *id v18 = v35;

    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  id v16 = *(id *)(*(void *)(v13 + 56) + 8 * v14);
LABEL_6:
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v34 = v16;
  return result;
}

void sub_25B1C1BF4(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper____lazy_storage___messagePublisher] = 0;
  uint64_t v5 = OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__messagePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9E60);
  swift_allocObject();
  uint64_t v6 = v3;
  *(void *)&v3[v5] = sub_25B290220();
  *(void *)&v6[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper____lazy_storage___devicesDidChangePublisher] = 0;
  uint64_t v7 = OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__devicesDidChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E70);
  swift_allocObject();
  *(void *)&v6[v7] = sub_25B290220();
  *(void *)&v6[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper____lazy_storage___didUpdatePairedDevicePublisher] = 0;
  uint64_t v8 = OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__didUpdatePairedDevicePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9E50);
  swift_allocObject();
  *(void *)&v6[v8] = sub_25B290220();
  uint64_t v9 = OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  *(void *)&v6[v9] = v10;
  uint64_t v11 = &v6[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice];
  v11[32] = 0;
  *(_OWORD *)uint64_t v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *(_DWORD *)&v6[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceNotificationToken] = -1;
  id v12 = objc_allocWithZone(MEMORY[0x263F4A0C0]);
  uint64_t v13 = (void *)sub_25B290590();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithService_, v13);

  if (v14)
  {
    *(void *)&v6[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_idsService] = v14;
    *(void *)&v6[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_queue] = a3;
    id v15 = a3;

    v21.receiver = v6;
    v21.super_class = (Class)type metadata accessor for IDSServiceWrapper();
    id v16 = (char *)objc_msgSendSuper2(&v21, sel_init);
    uint64_t v17 = *(os_unfair_lock_s **)&v16[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceLock];
    uint64_t v20 = MEMORY[0x270FA5388](v16);
    id v18 = (char *)(id)MEMORY[0x270FA5388](v20);
    swift_retain();
    os_unfair_lock_lock(v17 + 4);
    sub_25B10DCD0(v19);
    os_unfair_lock_unlock(v17 + 4);
    swift_release();
    objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_idsService], sel_addDelegate_queue_, v18, *(void *)&v18[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_queue]);
    sub_25B1C1F04();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25B1C1EA0(uint64_t a1)
{
  sub_25B1C348C((uint64_t)v8);
  char v2 = v9;
  uint64_t v3 = a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice;
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice + 8);
  long long v6 = v8[1];
  *(_OWORD *)uint64_t v3 = v8[0];
  *(_OWORD *)(v3 + 16) = v6;
  *(unsigned char *)(v3 + 32) = v2;
  return sub_25B11641C(v4, v5);
}

uint64_t sub_25B1C1F04()
{
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v2, sel_addObserver_selector_name_object_, v0, sel_pairedDeviceStateChangedWithNotification_, *MEMORY[0x263F576A8], 0);

  id v3 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v3, sel_addObserver_selector_name_object_, v0, sel_pairedDeviceStateChangedWithNotification_, *MEMORY[0x263F576B8], 0);

  id v4 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v4, sel_addObserver_selector_name_object_, v0, sel_pairedDeviceStateChangedWithNotification_, *MEMORY[0x263F57688], 0);

  id v5 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v5, sel_addObserver_selector_name_object_, v0, sel_pairedDeviceStateChangedWithNotification_, *MEMORY[0x263F57690], 0);

  sub_25B2905C0();
  long long v6 = *(NSObject **)(v0 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_queue);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12[4] = sub_25B1C5EA0;
  v12[5] = v7;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  v12[2] = sub_25B22AEF4;
  v12[3] = &block_descriptor_7;
  uint64_t v8 = _Block_copy(v12);
  swift_release();
  uint64_t v9 = sub_25B290610();
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)(v0 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceNotificationToken);
  swift_beginAccess();
  notify_register_dispatch((const char *)(v9 + 32), v10, v6, v8);
  swift_endAccess();
  _Block_release(v8);
  return swift_release();
}

id sub_25B1C2160()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  id v2 = (int *)&v0[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceNotificationToken];
  swift_beginAccess();
  notify_cancel(*v2);
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for IDSServiceWrapper();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_25B1C2384@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned __int8 a3@<W3>, uint64_t a4@<X8>)
{
  unsigned __int8 v7 = a3;
  uint64_t result = sub_25B1C23DC(a1, a2, &v7);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t sub_25B1C23DC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v4 = v3;
  v104[5] = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_25B290410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v12 = *a3;
  uint64_t v13 = *(void **)(v4 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_queue);
  *uint64_t v11 = v13;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  id v14 = v13;
  LOBYTE(v13) = sub_25B290440();
  id v16 = *(void (**)(void *, uint64_t))(v9 + 8);
  id v15 = (void *)(v9 + 8);
  v16(v11, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    swift_once();
    uint64_t v20 = sub_25B290190();
    __swift_project_value_buffer(v20, (uint64_t)qword_26A4EB180);
    id v21 = v15;
    id v22 = v15;
    uint64_t v23 = sub_25B290160();
    os_log_type_t v24 = sub_25B290880();
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v104[0] = v26;
      *(_DWORD *)unint64_t v25 = 136446210;
      *(void *)&long long v102 = v15;
      id v27 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
      uint64_t v28 = sub_25B290600();
      *(void *)&long long v102 = sub_25B288E98(v28, v29, v104);
      sub_25B2909C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_25B107000, v23, v24, "Failed to encode message: %{public}s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v26, -1, -1);
      MEMORY[0x261160890](v25, -1, -1);
    }
    else
    {
    }
    return (uint64_t)v15;
  }
  v104[3] = type metadata accessor for Message();
  v104[4] = sub_25B1C5E04((unint64_t *)&unk_26A4DAC70, (void (*)(uint64_t))type metadata accessor for Message);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v104);
  sub_25B116D14(a1, (uint64_t)boxed_opaque_existential_1);
  type metadata accessor for PropertyListTypeEncoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  *(unsigned char *)(inited + 24) = 1;
  uint64_t v19 = (void *)sub_25B281964(v104);
  uint64_t v31 = sub_25B2851A4(v19);
  unint64_t v33 = v32;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
  *(void *)&long long v102 = 0x6567617373656DLL;
  *((void *)&v102 + 1) = 0xE700000000000000;
  sub_25B114300(v31, v33);
  sub_25B290A60();
  uint64_t v103 = MEMORY[0x263F06F78];
  *(void *)&long long v102 = v31;
  *((void *)&v102 + 1) = v33;
  sub_25B1979E4(&v102, v101);
  uint64_t v34 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v100 = v34;
  sub_25B221964(v101, (uint64_t)v104, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_25B197990((uint64_t)v104);
  uint64_t v36 = *(void **)(v4 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_idsService);
  id v37 = objc_msgSend(v36, sel_devices);
  if (v37)
  {
    uint64_t v38 = v37;
    sub_25B1B73F8(0, (unint64_t *)&unk_26A4D9BB0);
    unint64_t v39 = sub_25B290730();

    swift_bridgeObjectRetain();
    uint64_t v40 = sub_25B1C46E0(v39, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_25B227BD0((uint64_t)v40);
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_25B1C3198(v41);
    swift_bridgeObjectRelease();
    if (*(void *)(v42 + 16)) {
      goto LABEL_10;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26A4D91A0 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_25B290190();
    __swift_project_value_buffer(v69, (uint64_t)qword_26A4EB180);
    swift_bridgeObjectRetain_n();
    int64_t v70 = sub_25B290160();
    os_log_type_t v71 = sub_25B290880();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      v104[0] = v73;
      unint64_t v99 = v31;
      *(_DWORD *)uint64_t v72 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_25B290820();
      unint64_t v76 = v75;
      swift_bridgeObjectRelease();
      *(void *)&long long v102 = sub_25B288E98(v74, v76, v104);
      uint64_t v31 = v99;
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v70, v71, "Unable to find matching IDS identifier for destinations: %{public}s", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v73, -1, -1);
      MEMORY[0x261160890](v72, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_25B1C5DB0();
    id v15 = (void *)swift_allocError();
    uint64_t v89 = v31;
    unint64_t v90 = v33;
    goto LABEL_38;
  }
  if (qword_26A4D91A0 != -1) {
    swift_once();
  }
  uint64_t v65 = sub_25B290190();
  __swift_project_value_buffer(v65, (uint64_t)qword_26A4EB180);
  uint64_t v66 = sub_25B290160();
  os_log_type_t v67 = sub_25B290880();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v68 = 0;
    _os_log_impl(&dword_25B107000, v66, v67, "Unable to find any IDS devices", v68, 2u);
    MEMORY[0x261160890](v68, -1, -1);
  }

  if (!*(void *)(MEMORY[0x263F8EE88] + 16)) {
    goto LABEL_21;
  }
LABEL_10:
  unint64_t v99 = v33;
  unint64_t v43 = (void *)sub_25B2904B0();
  swift_bridgeObjectRelease();
  unint64_t v44 = (void *)sub_25B290810();
  swift_bridgeObjectRelease();
  uint64_t v45 = (void *)sub_25B2904B0();
  v104[0] = 0;
  *(void *)&long long v102 = 0;
  unsigned int v46 = objc_msgSend(v36, sel_sendMessage_toDestinations_priority_options_identifier_error_, v43, v44, -100 * v12 + 300, v45, v104, &v102);

  uint64_t v47 = (void *)v104[0];
  if (v46)
  {
    uint64_t v48 = qword_26A4D91A0;
    id v49 = (id)v102;
    if (v47)
    {
      id v50 = v47;
      if (v48 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_25B290190();
      __swift_project_value_buffer(v51, (uint64_t)qword_26A4EB180);
      swift_bridgeObjectRetain_n();
      id v52 = v50;
      long long v53 = sub_25B290160();
      os_log_type_t v54 = sub_25B2908A0();
      int v55 = v54;
      os_log_t v98 = v53;
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v56 = swift_slowAlloc();
        long long v57 = (void *)swift_slowAlloc();
        uint64_t v97 = swift_slowAlloc();
        v104[0] = v97;
        *(_DWORD *)uint64_t v56 = 138543618;
        *(void *)&long long v102 = v52;
        id v58 = v52;
        int v96 = v55;
        id v59 = v58;
        sub_25B2909C0();
        void *v57 = v47;

        *(_WORD *)(v56 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v60 = sub_25B290820();
        unint64_t v62 = v61;
        swift_bridgeObjectRelease();
        *(void *)&long long v102 = sub_25B288E98(v60, v62, v104);
        sub_25B2909C0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        os_log_t v63 = v98;
        _os_log_impl(&dword_25B107000, v98, (os_log_type_t)v96, "Sent IDS message %{public}@ to %{public}s", (uint8_t *)v56, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
        swift_arrayDestroy();
        MEMORY[0x261160890](v57, -1, -1);
        uint64_t v64 = v97;
        swift_arrayDestroy();
        MEMORY[0x261160890](v64, -1, -1);
        MEMORY[0x261160890](v56, -1, -1);
        sub_25B10DFF0(v31, v99);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        sub_25B10DFF0(v31, v99);
      }

      return 1;
    }
    if (v48 != -1) {
      swift_once();
    }
    uint64_t v91 = sub_25B290190();
    __swift_project_value_buffer(v91, (uint64_t)qword_26A4EB180);
    __int16 v92 = sub_25B290160();
    os_log_type_t v93 = sub_25B290880();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v94 = 0;
      _os_log_impl(&dword_25B107000, v92, v93, "Failed to retrieve identifier for message", v94, 2u);
      MEMORY[0x261160890](v94, -1, -1);
    }

    sub_25B1C5DB0();
    id v15 = (void *)swift_allocError();
    uint64_t v89 = v31;
    unint64_t v90 = v99;
LABEL_38:
    sub_25B10DFF0(v89, v90);
    return (uint64_t)v15;
  }
  id v77 = (id)v102;
  id v78 = v47;
  id v15 = (void *)sub_25B28FE20();

  swift_willThrow();
  if (qword_26A4D91A0 != -1) {
    swift_once();
  }
  uint64_t v79 = sub_25B290190();
  __swift_project_value_buffer(v79, (uint64_t)qword_26A4EB180);
  id v80 = v15;
  id v81 = v15;
  unint64_t v82 = sub_25B290160();
  os_log_type_t v83 = sub_25B290880();
  if (os_log_type_enabled(v82, v83))
  {
    uint64_t v84 = (uint8_t *)swift_slowAlloc();
    uint64_t v85 = swift_slowAlloc();
    v104[0] = v85;
    *(_DWORD *)uint64_t v84 = 136446210;
    *(void *)&long long v102 = v15;
    id v86 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
    uint64_t v87 = sub_25B290600();
    *(void *)&long long v102 = sub_25B288E98(v87, v88, v104);
    sub_25B2909C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_25B107000, v82, v83, "Failed to send message: %{public}s", v84, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v85, -1, -1);
    MEMORY[0x261160890](v84, -1, -1);
    sub_25B10DFF0(v31, v99);
  }
  else
  {
    sub_25B10DFF0(v31, v99);
  }
  return (uint64_t)v15;
}

uint64_t sub_25B1C3198(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAC88);
    uint64_t v2 = sub_25B290A90();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE88];
  }
  uint64_t v3 = a1 + 56;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  uint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(63 - v4) >> 6;
  uint64_t v8 = v2 + 56;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_28;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v7) {
      goto LABEL_37;
    }
    uint64_t v14 = *(void *)(v3 + 8 * v13);
    int64_t v15 = v10 + 1;
    if (!v14)
    {
      int64_t v15 = v10 + 2;
      if (v10 + 2 >= v7) {
        goto LABEL_37;
      }
      uint64_t v14 = *(void *)(v3 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v10 + 3;
        if (v10 + 3 >= v7) {
          goto LABEL_37;
        }
        uint64_t v14 = *(void *)(v3 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v10 + 4;
          if (v10 + 4 >= v7) {
            goto LABEL_37;
          }
          uint64_t v14 = *(void *)(v3 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v6 = (v14 - 1) & v14;
    int64_t v10 = v15;
LABEL_28:
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    uint64_t result = sub_25B290A40();
    uint64_t v17 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)(v8 + 8 * (v18 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v18) & ~*(void *)(v8 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v20 = 0;
      unint64_t v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v22 = v19 == v21;
        if (v19 == v21) {
          unint64_t v19 = 0;
        }
        v20 |= v22;
        uint64_t v23 = *(void *)(v8 + 8 * v19);
      }
      while (v23 == -1);
      unint64_t v11 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v2 + 48) + 40 * v11;
    *(_OWORD *)uint64_t v12 = v24;
    *(_OWORD *)(v12 + 16) = v25;
    *(void *)(v12 + 32) = v26;
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v10 + 5;
  if (v10 + 5 >= v7)
  {
LABEL_37:
    swift_release();
    sub_25B1A85A8();
    return v2;
  }
  uint64_t v14 = *(void *)(v3 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v10 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v7) {
      goto LABEL_37;
    }
    uint64_t v14 = *(void *)(v3 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_25B1C348C(uint64_t a1@<X8>)
{
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_idsService), sel_devices));
  if (!v3)
  {
    if (qword_26A4D91A0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_25B290190();
    __swift_project_value_buffer(v16, (uint64_t)qword_26A4EB180);
    uint64_t v17 = sub_25B290160();
    os_log_type_t v18 = sub_25B290880();
    if (os_log_type_enabled(v17, v18))
    {
      unint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v19 = 0;
      _os_log_impl(&dword_25B107000, v17, v18, "Unable to find any IDS devices; cannot find paired device", v19, 2u);
      MEMORY[0x261160890](v19, -1, -1);
    }

    goto LABEL_34;
  }
  uint64_t v4 = v3;
  uint64_t v5 = (void *)sub_25B1B73F8(0, (unint64_t *)&unk_26A4D9BB0);
  unint64_t v6 = sub_25B290730();

  if (qword_26A4D91A0 != -1) {
LABEL_31:
  }
    swift_once();
  uint64_t v7 = sub_25B290190();
  __swift_project_value_buffer(v7, (uint64_t)qword_26A4EB180);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_25B290160();
  os_log_type_t v9 = sub_25B2908A0();
  if (os_log_type_enabled(v8, v9))
  {
    int64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v44[0] = v11;
    *(_DWORD *)int64_t v10 = 136446210;
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = MEMORY[0x26115F080](v12, v5);
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_25B288E98(v13, v15, v44);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v8, v9, "Finding active paired device in devices: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v11, -1, -1);
    MEMORY[0x261160890](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_25B290BD0();
    if (v20) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
  uint64_t v20 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v20)
  {
LABEL_33:
    swift_bridgeObjectRelease_n();
LABEL_34:
    *(unsigned char *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return;
  }
LABEL_13:
  uint64_t v21 = 4;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v22 = (id)MEMORY[0x26115F400](v21 - 4, v6);
    }
    else {
      id v22 = *(id *)(v6 + 8 * v21);
    }
    uint64_t v5 = v22;
    uint64_t v23 = v21 - 3;
    if (__OFADD__(v21 - 4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (objc_msgSend(v22, sel_isLocallyPaired) && objc_msgSend(v5, sel_isActive)) {
      break;
    }

    ++v21;
    if (v23 == v20) {
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRelease_n();
  id v24 = v5;
  id v25 = objc_msgSend(v24, sel_uniqueIDOverride);
  if (!v25)
  {
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v26 = v25;
  uint64_t v42 = a1;
  uint64_t v27 = sub_25B2905C0();
  uint64_t v29 = v28;

  id v30 = objc_msgSend(v24, sel_name);
  if (!v30)
  {
LABEL_36:
    __break(1u);
    return;
  }
  uint64_t v31 = v30;
  uint64_t v32 = sub_25B2905C0();
  uint64_t v34 = v33;

  id v35 = objc_msgSend(v24, sel_deviceType);
  if ((unint64_t)v35 >= 7) {
    char v36 = 0;
  }
  else {
    char v36 = 0x3040101010200uLL >> (8 * v35);
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v37 = sub_25B290160();
  os_log_type_t v38 = sub_25B2908A0();
  if (os_log_type_enabled(v37, v38))
  {
    unint64_t v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v46 = v43;
    *(_DWORD *)unint64_t v39 = 136446210;
    v44[0] = v27;
    v44[1] = v29;
    v44[2] = v32;
    v44[3] = v34;
    char v45 = v36;
    uint64_t v40 = PairedDevice.description.getter();
    v44[0] = sub_25B288E98(v40, v41, &v46);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v37, v38, "IDS PairedDevice is %{public}s", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v43, -1, -1);
    MEMORY[0x261160890](v39, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  *(void *)uint64_t v42 = v27;
  *(void *)(v42 + 8) = v29;
  *(void *)(v42 + 16) = v32;
  *(void *)(v42 + 24) = v34;
  *(unsigned char *)(v42 + 32) = v36;
}

uint64_t type metadata accessor for IDSServiceWrapper()
{
  return self;
}

uint64_t sub_25B1C3E74()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceLock);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_25B10DCD0(v2);
  os_unfair_lock_unlock(v1 + 4);
  swift_release();
  if (v4) {
    sub_25B290210();
  }
  return sub_25B11641C(v5, v6);
}

void sub_25B1C3FC8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice + 16);
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice + 24);
  uint64_t v32 = a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice;
  uint64_t v39 = *(void *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice + 8);
  int v40 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice + 32);
  sub_25B1163D8(v2, v39);
  sub_25B1C348C((uint64_t)&v42);
  uint64_t v5 = v42;
  uint64_t v6 = v43;
  uint64_t v7 = v45;
  uint64_t v38 = v44;
  int v8 = v46;
  if (qword_26A4D91A0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_25B290190();
  __swift_project_value_buffer(v9, (uint64_t)qword_26A4EB180);
  sub_25B1163D8(v2, v39);
  sub_25B1163D8(v5, v6);
  uint64_t v36 = v3;
  uint64_t v37 = v2;
  sub_25B1163D8(v2, v39);
  uint64_t v10 = v5;
  uint64_t v34 = v6;
  sub_25B1163D8(v5, v6);
  uint64_t v11 = sub_25B290160();
  os_log_type_t v12 = sub_25B2908A0();
  log = v11;
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = v4;
  int v15 = v8;
  uint64_t v16 = v7;
  if (v13)
  {
    os_log_type_t type = v12;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v47 = v31;
    *(_DWORD *)uint64_t v17 = 136446466;
    uint64_t v42 = v2;
    uint64_t v43 = v39;
    uint64_t v44 = v4;
    uint64_t v45 = v36;
    unsigned __int8 v46 = v40;
    sub_25B1163D8(v2, v39);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA560);
    uint64_t v18 = v7;
    uint64_t v19 = v34;
    uint64_t v20 = sub_25B290600();
    uint64_t v42 = sub_25B288E98(v20, v21, &v47);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B11641C(v2, v39);
    uint64_t v22 = v36;
    sub_25B11641C(v2, v39);
    *(_WORD *)(v17 + 12) = 2082;
    uint64_t v42 = v10;
    uint64_t v43 = v34;
    uint64_t v44 = v38;
    uint64_t v45 = v18;
    unsigned __int8 v46 = v15;
    sub_25B1163D8(v10, v34);
    uint64_t v23 = sub_25B290600();
    uint64_t v42 = sub_25B288E98(v23, v24, &v47);
    uint64_t v25 = v38;
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B11641C(v10, v34);
    sub_25B11641C(v10, v34);
    _os_log_impl(&dword_25B107000, log, type, "Updating paired device from %{public}s to %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v31, -1, -1);
    MEMORY[0x261160890](v17, -1, -1);

    uint64_t v26 = v39;
    if (v39) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v19)
    {
      char v28 = 0;
      uint64_t v10 = v37;
      uint64_t v19 = v26;
      uint64_t v25 = v4;
      uint64_t v18 = v22;
      LOBYTE(v15) = v40;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  uint64_t v26 = v39;
  sub_25B11641C(v2, v39);
  sub_25B11641C(v2, v39);
  uint64_t v25 = v38;
  sub_25B11641C(v10, v34);
  sub_25B11641C(v10, v34);

  uint64_t v22 = v36;
  uint64_t v18 = v16;
  uint64_t v19 = v34;
  if (!v39) {
    goto LABEL_15;
  }
LABEL_5:
  if (!v19)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_18:
    sub_25B1163D8(v10, v19);
    uint64_t v27 = v37;
    sub_25B11641C(v37, v26);
    sub_25B11641C(v10, v19);
LABEL_19:
    sub_25B11641C(v27, v26);
    uint64_t v29 = *(void *)(v32 + 8);
    uint64_t v41 = *(void *)v32;
    *(void *)uint64_t v32 = v10;
    *(void *)(v32 + 8) = v19;
    *(void *)(v32 + 16) = v25;
    *(void *)(v32 + 24) = v18;
    *(unsigned char *)(v32 + 32) = v15;
    sub_25B1163D8(v10, v19);
    sub_25B11641C(v41, v29);
    char v28 = 1;
    goto LABEL_20;
  }
  uint64_t v27 = v37;
  if ((v37 != v10 || v26 != v19) && (sub_25B290FB0() & 1) == 0
    || (v14 != v25 || v22 != v18) && (sub_25B290FB0() & 1) == 0
    || v40 != v15)
  {
    goto LABEL_19;
  }
  LOBYTE(v15) = v40;
  sub_25B11641C(v10, v19);
  char v28 = 0;
  uint64_t v10 = v37;
  uint64_t v19 = v26;
  uint64_t v25 = v14;
  uint64_t v18 = v22;
LABEL_20:
  *(unsigned char *)a2 = v28;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v25;
  *(void *)(a2 + 32) = v18;
  *(unsigned char *)(a2 + 40) = v15;
}

void sub_25B1C45B0(uint64_t a1@<X8>)
{
  sub_25B1C3FC8(*(void *)(v1 + 16), a1);
}

void sub_25B1C45CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x261160990](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    if (qword_26A4D91A0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_25B290190();
    __swift_project_value_buffer(v5, (uint64_t)qword_26A4EB180);
    uint64_t v6 = sub_25B290160();
    os_log_type_t v7 = sub_25B2908A0();
    if (os_log_type_enabled(v6, v7))
    {
      int v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v8 = 0;
      _os_log_impl(&dword_25B107000, v6, v7, "Paired watch updated, will check for pairing change", v8, 2u);
      MEMORY[0x261160890](v8, -1, -1);
    }

    sub_25B1C3E74();
  }
}

void *sub_25B1C46E0(unint64_t a1, uint64_t a2)
{
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_20:
    uint64_t v4 = (void *)MEMORY[0x263F8EE78];
LABEL_21:
    swift_bridgeObjectRelease();
    return v4;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_25B290BD0();
  if (!v3) {
    goto LABEL_20;
  }
LABEL_3:
  uint64_t v4 = (void *)MEMORY[0x263F8EE78];
  uint64_t v5 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x26115F400](v5 - 4, a1);
    }
    else {
      id v6 = *(id *)(a1 + 8 * v5);
    }
    os_log_type_t v7 = v6;
    uint64_t v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    uint64_t result = objc_msgSend(v6, sel_uniqueIDOverride);
    if (!result) {
      break;
    }
    uint64_t v10 = result;
    uint64_t v11 = sub_25B2905C0();
    uint64_t v13 = v12;

    LOBYTE(v10) = sub_25B2109B4(v11, v13, a2);
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0 && (uint64_t v14 = IDSCopyIDForDevice()) != 0)
    {
      int v15 = (void *)v14;
      uint64_t v16 = sub_25B2905C0();
      uint64_t v18 = v17;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_25B21822C(0, v4[2] + 1, 1, v4);
      }
      unint64_t v20 = v4[2];
      unint64_t v19 = v4[3];
      if (v20 >= v19 >> 1) {
        uint64_t v4 = sub_25B21822C((void *)(v19 > 1), v20 + 1, 1, v4);
      }
      v4[2] = v20 + 1;
      unint64_t v21 = &v4[2 * v20];
      v21[4] = v16;
      v21[5] = v18;
    }
    else
    {
    }
    ++v5;
    if (v8 == v3) {
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

void sub_25B1C48C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  uint64_t v8 = MEMORY[0x270FA5388](v57);
  uint64_t v56 = (uint64_t)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v47 - v10;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA590);
  MEMORY[0x270FA5388](v52);
  uint64_t v13 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB070);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v55 = (uint64_t)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for Message();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v51 = (uint64_t)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A4D91A0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_25B290190();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_26A4EB180);
  id v19 = a3;
  unint64_t v20 = sub_25B290160();
  os_log_type_t v21 = sub_25B290860();
  if (!os_log_type_enabled(v20, v21))
  {

    goto LABEL_11;
  }
  uint64_t v48 = v13;
  uint64_t v49 = v4;
  uint64_t v22 = (uint8_t *)swift_slowAlloc();
  uint64_t v23 = swift_slowAlloc();
  *(void *)&long long v58 = v23;
  *(_DWORD *)uint64_t v22 = 136446210;
  uint64_t v50 = a1;
  v47[1] = v18;
  if (!a3) {
    goto LABEL_9;
  }
  id v24 = objc_msgSend(v19, sel_originalGUID);
  if (!v24)
  {
    a3 = 0;
LABEL_9:
    unint64_t v27 = 0;
    goto LABEL_10;
  }
  uint64_t v25 = v24;
  a3 = (void *)sub_25B2905C0();
  unint64_t v27 = v26;

LABEL_10:
  uint64_t v61 = (uint64_t)a3;
  unint64_t v62 = v27;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E80);
  uint64_t v28 = sub_25B290600();
  uint64_t v61 = sub_25B288E98(v28, v29, (uint64_t *)&v58);
  sub_25B2909C0();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_25B107000, v20, v21, "IDS incomingResourceAt:%{public}s", v22, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x261160890](v23, -1, -1);
  MEMORY[0x261160890](v22, -1, -1);

  a1 = v50;
  uint64_t v13 = v48;
LABEL_11:
  if (a2)
  {
    *(void *)&v65[0] = 0x6567617373656DLL;
    *((void *)&v65[0] + 1) = 0xE700000000000000;
    sub_25B290A60();
    if (*(void *)(a2 + 16) && (unint64_t v30 = sub_25B18AA54((uint64_t)&v61), (v31 & 1) != 0))
    {
      sub_25B116E84(*(void *)(a2 + 56) + 32 * v30, (uint64_t)&v58);
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
    }
    sub_25B197990((uint64_t)&v61);
    if (*((void *)&v59 + 1))
    {
      if (swift_dynamicCast())
      {
        long long v32 = v65[0];
        type metadata accessor for OPACKCoder();
        sub_25B284F38(v65);
        sub_25B116E84((uint64_t)v65, (uint64_t)v63);
        uint64_t v42 = MEMORY[0x263F8EE78];
        unint64_t v43 = sub_25B20D420(MEMORY[0x263F8EE78]);
        uint64_t v61 = v42;
        unint64_t v62 = v43;
        v63[4] = 0;
        char v64 = 1;
        *((void *)&v59 + 1) = &type metadata for PropertyListTypeDecoder.RootDecoder;
        unint64_t v60 = sub_25B116EE0();
        *(void *)&long long v58 = swift_allocObject();
        sub_25B116F7C((uint64_t)&v61, v58 + 16);
        uint64_t v44 = v55;
        Message.init(from:)(&v58, v55);
        sub_25B116FD8((uint64_t)&v61);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v44, 0, 1, v54);
        uint64_t v45 = v51;
        sub_25B116BFC(v44, v51);
        uint64_t v46 = (uint64_t)&v13[*(int *)(v52 + 48)];
        sub_25B116D14(v45, (uint64_t)v13);
        sub_25B116D78(a1, v46);
        sub_25B290210();
        sub_25B10DFF0(v32, *((unint64_t *)&v32 + 1));
        sub_25B116DE0((uint64_t)v13, &qword_26A4DA590);
        sub_25B116C7C(v45);
        return;
      }
    }
    else
    {
      sub_25B116DE0((uint64_t)&v58, &qword_26B33F4C0);
    }
    sub_25B116D78(a1, (uint64_t)v11);
    swift_bridgeObjectRetain_n();
    uint64_t v33 = sub_25B290160();
    os_log_type_t v34 = sub_25B290880();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v61 = v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      sub_25B116D78((uint64_t)v11, v56);
      uint64_t v37 = sub_25B290600();
      *(void *)&long long v58 = sub_25B288E98(v37, v38, &v61);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B116DE0((uint64_t)v11, &qword_26A4D9160);
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_25B2904F0();
      unint64_t v41 = v40;
      swift_bridgeObjectRelease();
      *(void *)&long long v58 = sub_25B288E98(v39, v41, &v61);
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v33, v34, "Message has no payload, url:%s, metadata.keys:%s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v36, -1, -1);
      MEMORY[0x261160890](v35, -1, -1);
    }
    else
    {
      sub_25B116DE0((uint64_t)v11, &qword_26A4D9160);

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_25B1C5160(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA590);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v49 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB070);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Message();
  uint64_t v50 = *(void *)(v14 - 8);
  uint64_t v51 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v48 = (uint64_t)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A4D91A0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_25B290190();
  __swift_project_value_buffer(v16, (uint64_t)qword_26A4EB180);
  id v17 = a2;
  uint64_t v18 = sub_25B290160();
  os_log_type_t v19 = sub_25B290860();
  if (!os_log_type_enabled(v18, v19))
  {

    goto LABEL_11;
  }
  v45[0] = v13;
  v45[1] = v3;
  unint64_t v20 = (uint8_t *)swift_slowAlloc();
  uint64_t v21 = swift_slowAlloc();
  *(void *)&long long v52 = v21;
  *(_DWORD *)unint64_t v20 = 136446210;
  uint64_t v47 = v8;
  uint64_t v46 = v6;
  if (!a2) {
    goto LABEL_9;
  }
  id v22 = objc_msgSend(v17, sel_originalGUID);
  if (!v22)
  {
    a2 = 0;
LABEL_9:
    unint64_t v25 = 0;
    goto LABEL_10;
  }
  uint64_t v23 = v22;
  a2 = (void *)sub_25B2905C0();
  unint64_t v25 = v24;

LABEL_10:
  uint64_t v55 = (uint64_t)a2;
  unint64_t v56 = v25;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E80);
  uint64_t v26 = sub_25B290600();
  uint64_t v55 = sub_25B288E98(v26, v27, (uint64_t *)&v52);
  sub_25B2909C0();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_25B107000, v18, v19, "IDS incomingMessage:%{public}s", v20, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x261160890](v21, -1, -1);
  MEMORY[0x261160890](v20, -1, -1);

  uint64_t v8 = v47;
  uint64_t v6 = v46;
  uint64_t v13 = (char *)v45[0];
LABEL_11:
  if (a1)
  {
    *(void *)&v59[0] = 0x6567617373656DLL;
    *((void *)&v59[0] + 1) = 0xE700000000000000;
    sub_25B290A60();
    if (*(void *)(a1 + 16) && (unint64_t v28 = sub_25B18AA54((uint64_t)&v55), (v29 & 1) != 0))
    {
      sub_25B116E84(*(void *)(a1 + 56) + 32 * v28, (uint64_t)&v52);
    }
    else
    {
      long long v52 = 0u;
      long long v53 = 0u;
    }
    sub_25B197990((uint64_t)&v55);
    if (*((void *)&v53 + 1))
    {
      if (swift_dynamicCast())
      {
        long long v30 = v59[0];
        type metadata accessor for OPACKCoder();
        sub_25B284F38(v59);
        sub_25B116E84((uint64_t)v59, (uint64_t)v57);
        uint64_t v31 = (uint64_t)v13;
        uint64_t v32 = MEMORY[0x263F8EE78];
        unint64_t v33 = sub_25B20D420(MEMORY[0x263F8EE78]);
        uint64_t v55 = v32;
        unint64_t v56 = v33;
        v57[4] = 0;
        char v58 = 1;
        *((void *)&v53 + 1) = &type metadata for PropertyListTypeDecoder.RootDecoder;
        unint64_t v54 = sub_25B116EE0();
        *(void *)&long long v52 = swift_allocObject();
        sub_25B116F7C((uint64_t)&v55, v52 + 16);
        Message.init(from:)(&v52, v31);
        sub_25B116FD8((uint64_t)&v55);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v31, 0, 1, v51);
        uint64_t v41 = v48;
        sub_25B116BFC(v31, v48);
        uint64_t v42 = sub_25B28FEA0();
        uint64_t v43 = (uint64_t)v49;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v49, 1, 1, v42);
        uint64_t v44 = (uint64_t)&v8[*(int *)(v6 + 48)];
        sub_25B116D14(v41, (uint64_t)v8);
        sub_25B1C5D48(v43, v44);
        sub_25B290210();
        sub_25B10DFF0(v30, *((unint64_t *)&v30 + 1));
        sub_25B116DE0((uint64_t)v8, &qword_26A4DA590);
        sub_25B116C7C(v41);
        return;
      }
    }
    else
    {
      sub_25B116DE0((uint64_t)&v52, &qword_26B33F4C0);
    }
    swift_bridgeObjectRetain_n();
    os_log_type_t v34 = sub_25B290160();
    os_log_type_t v35 = sub_25B290880();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v55 = v37;
      *(_DWORD *)uint64_t v36 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_25B2904F0();
      unint64_t v40 = v39;
      swift_bridgeObjectRelease();
      *(void *)&long long v52 = sub_25B288E98(v38, v40, &v55);
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v34, v35, "Message has no payload, message.keys:%s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v37, -1, -1);
      MEMORY[0x261160890](v36, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_25B1C5964(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  v28[1] = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_25B290190();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A4D91A0 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v8, (uint64_t)qword_26A4EB180);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  swift_bridgeObjectRetain();
  id v13 = a4;
  swift_bridgeObjectRetain();
  id v14 = a4;
  uint64_t v15 = sub_25B290160();
  os_log_type_t v16 = sub_25B290860();
  if (!os_log_type_enabled(v15, v16))
  {
    swift_bridgeObjectRelease_n();

LABEL_10:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return;
  }
  int v26 = a3;
  uint64_t v23 = v15;
  uint64_t v17 = swift_slowAlloc();
  unint64_t v24 = (void *)swift_slowAlloc();
  uint64_t v25 = swift_slowAlloc();
  v28[0] = v25;
  *(_DWORD *)uint64_t v17 = 136446722;
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_25B288E98(a1, a2, v28);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 1026;
    LODWORD(v27) = v26 & 1;
    sub_25B2909C0();
    *(_WORD *)(v17 + 18) = 2114;
    if (a4)
    {
      id v18 = a4;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v27 = v19;
      sub_25B2909C0();
    }
    else
    {
      uint64_t v27 = 0;
      sub_25B2909C0();
      uint64_t v19 = 0;
    }
    uint64_t v15 = v23;
    unint64_t v20 = v24;
    *unint64_t v24 = v19;

    _os_log_impl(&dword_25B107000, v15, v16, "IDS message:%{public}s didSendWithSuccess:%{BOOL,public}d error:%{public}@", (uint8_t *)v17, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
    swift_arrayDestroy();
    MEMORY[0x261160890](v20, -1, -1);
    uint64_t v21 = v25;
    swift_arrayDestroy();
    MEMORY[0x261160890](v21, -1, -1);
    MEMORY[0x261160890](v17, -1, -1);
    goto LABEL_10;
  }

  __break(1u);
}

uint64_t sub_25B1C5D00()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return MEMORY[0x270FA0238](v0, 73, 7);
}

uint64_t sub_25B1C5D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_25B1C5DB0()
{
  unint64_t result = qword_26A4DAC80;
  if (!qword_26A4DAC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAC80);
  }
  return result;
}

uint64_t sub_25B1C5E04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B1C5E4C()
{
  return sub_25B1C1EA0(*(void *)(v0 + 16));
}

uint64_t sub_25B1C5E68()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_25B1C5EA0(uint64_t a1)
{
  sub_25B1C45CC(a1, v1);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for IDSServiceWrapper.SyncError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B1C5F5CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSServiceWrapper.SyncError()
{
  return &type metadata for IDSServiceWrapper.SyncError;
}

unint64_t sub_25B1C5F98()
{
  unint64_t result = qword_26A4DAC90;
  if (!qword_26A4DAC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAC90);
  }
  return result;
}

uint64_t sub_25B1C5FEC()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99E0);
    sub_25B116394((unint64_t *)&qword_26A4D99D8, &qword_26A4D99E0);
    uint64_t v1 = sub_25B290240();
    *(void *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_25B1C60A0(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t (*sub_25B1C60B0(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = sub_25B1C5FEC();
  return sub_25B1C60F8;
}

uint64_t sub_25B1C60F8(void *a1)
{
  *(void *)(a1[1] + 24) = *a1;
  return swift_release();
}

void sub_25B1C6108(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *(os_unfair_lock_s **)(*(void *)a1 + 16);
  unsigned int v4 = (uint64_t *)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_25B1C6238(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_25B1C6174(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)a2 + 16);
  int v3 = v2 + 4;
  unsigned int v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_25B1C7248(v3);
  os_unfair_lock_unlock(v4);
}

BOOL sub_25B1C61D8()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  int v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25B1C6238(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_25B1C6238@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v20 = MEMORY[0x263F8EE78];
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v15 = a2;
    unint64_t v7 = 0;
    uint64_t v8 = v3 + 32;
    uint64_t v9 = MEMORY[0x263F8EE78];
    while (v7 < *(void *)(v3 + 16))
    {
      sub_25B10FF48(v8, (uint64_t)&v17);
      uint64_t v10 = v18;
      uint64_t v11 = v19;
      __swift_project_boxed_opaque_existential_1(&v17, v18);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11))
      {
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
      }
      else
      {
        sub_25B180BD4(&v17, (uint64_t)v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_25B224254(0, *(void *)(v9 + 16) + 1, 1);
        }
        uint64_t v9 = v20;
        unint64_t v13 = *(void *)(v20 + 16);
        unint64_t v12 = *(void *)(v20 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_25B224254(v12 > 1, v13 + 1, 1);
          uint64_t v9 = v20;
        }
        *(void *)(v9 + 16) = v13 + 1;
        uint64_t result = sub_25B180BD4(v16, v9 + 40 * v13 + 32);
      }
      ++v7;
      v8 += 40;
      if (v5 == v7)
      {
        uint64_t v4 = v20;
        a2 = v15;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v4 + 16);
    uint64_t result = swift_release();
    *a2 = v14 == 0;
  }
  return result;
}

void sub_25B1C63D0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25B1C65D8(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_25B1C642C(void *a1, char a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = *a1;
  int64_t v4 = *(void *)(*a1 + 16);
  if (v4)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25B224254(0, v4, 0);
    uint64_t v6 = v3 + 32;
    uint64_t v7 = v20;
    uint64_t v8 = a2 & 1;
    do
    {
      sub_25B10FF48(v6, (uint64_t)v18);
      sub_25B10FF48((uint64_t)v18, (uint64_t)&v15);
      uint64_t v10 = v16;
      uint64_t v9 = v17;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v15, v16);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v8, v10, v9);
      sub_25B180BD4(&v15, (uint64_t)v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25B224254(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v20;
      }
      unint64_t v12 = *(void *)(v7 + 16);
      unint64_t v11 = *(void *)(v7 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_25B224254(v11 > 1, v12 + 1, 1);
        uint64_t v7 = v20;
      }
      *(void *)(v7 + 16) = v12 + 1;
      sub_25B180BD4(v19, v7 + 40 * v12 + 32);
      v6 += 40;
      --v4;
    }
    while (v4);
    uint64_t v2 = a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = v7;
  return result;
}

uint64_t sub_25B1C65D8(void *a1)
{
  return sub_25B1C642C(a1, *(unsigned char *)(v1 + 16));
}

void (*sub_25B1C65F4(uint64_t a1))(os_unfair_lock_s **a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
  *(void *)a1 = v3;
  int64_t v4 = (uint64_t *)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_25B1C6238(v4, &v7);
  *(void *)(a1 + 8) = 0;
  os_unfair_lock_unlock(v5);
  *(unsigned char *)(a1 + 16) = v7;
  return sub_25B1C6680;
}

void sub_25B1C6680(os_unfair_lock_s **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *a1 + 6;
  os_unfair_lock_lock(v2);
  sub_25B1C7248(&v1[4]._os_unfair_lock_opaque);
  os_unfair_lock_unlock(v2);
}

void *MuxingZoneAdvertiser.__allocating_init(zoneAdvertisers:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_25B1C6DA0(a1);
  swift_bridgeObjectRelease();
  return v2;
}

void *MuxingZoneAdvertiser.init(zoneAdvertisers:)(uint64_t a1)
{
  uint64_t v1 = sub_25B1C6DA0(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_25B1C6784()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_25B290210();
    return swift_release();
  }
  return result;
}

void sub_25B1C6828()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25B1C6FBC(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_25B1C68C8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)result + 16);
  if (v2)
  {
    int64_t v4 = (void *)(*(void *)result + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v5);
      long long v7 = *(_OWORD *)(a2 + 144);
      v12[8] = *(_OWORD *)(a2 + 128);
      v12[9] = v7;
      v12[10] = *(_OWORD *)(a2 + 160);
      uint64_t v13 = *(void *)(a2 + 176);
      long long v8 = *(_OWORD *)(a2 + 80);
      v12[4] = *(_OWORD *)(a2 + 64);
      v12[5] = v8;
      long long v9 = *(_OWORD *)(a2 + 112);
      void v12[6] = *(_OWORD *)(a2 + 96);
      v12[7] = v9;
      long long v10 = *(_OWORD *)(a2 + 16);
      v12[0] = *(_OWORD *)a2;
      v12[1] = v10;
      long long v11 = *(_OWORD *)(a2 + 48);
      v12[2] = *(_OWORD *)(a2 + 32);
      v12[3] = v11;
      (*(void (**)(_OWORD *, uint64_t, uint64_t))(v6 + 40))(v12, v5, v6);
      v4 += 5;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_25B1C69B0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25B1C6A14(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_25B1C6A14(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)result + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)result + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_25B10FF48(v2, (uint64_t)v5);
      uint64_t v3 = v6;
      uint64_t v4 = v7;
      __swift_project_boxed_opaque_existential_1(v5, v6);
      (*(void (**)(uint64_t, uint64_t))(v4 + 48))(v3, v4);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      v2 += 40;
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t MuxingZoneAdvertiser.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MuxingZoneAdvertiser.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_25B1C6B50()
{
  return sub_25B1C5FEC();
}

BOOL sub_25B1C6B74()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25B1C6238(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_25B1C6BD8()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25B1C7248(v2);
  os_unfair_lock_unlock(v3);
}

void (*sub_25B1C6C38(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_25B1C65F4((uint64_t)v2);
  return sub_25B139148;
}

void sub_25B1C6C94()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25B1C7260(v2);
  os_unfair_lock_unlock(v3);
}

void sub_25B1C6D38()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25B1C6A14(v2);
  os_unfair_lock_unlock(v3);
}

void *sub_25B1C6DA0(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9BD0);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  uint64_t v4 = (os_unfair_lock_s *)(v3 + 24);
  *(void *)(v3 + 16) = MEMORY[0x263F8EE78];
  BOOL v5 = (void *)(v3 + 16);
  v1[2] = v3;
  v1[3] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99E0);
  swift_allocObject();
  uint64_t v6 = sub_25B290220();
  v1[5] = MEMORY[0x263F8EE88];
  v1[4] = v6;
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_25B1C71C0(v5);
  os_unfair_lock_unlock(v4);
  swift_release();
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    long long v8 = (void *)(a1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v9 = v8[3];
      uint64_t v10 = v8[4];
      __swift_project_boxed_opaque_existential_1(v8, v9);
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      swift_allocObject();
      swift_weakInit();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9990);
      sub_25B116394(&qword_26A4D9988, &qword_26A4D9990);
      sub_25B290270();
      swift_release();
      swift_release();
      swift_beginAccess();
      sub_25B2901F0();
      swift_endAccess();
      swift_release();
      v8 += 5;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_25B1C6FBC(uint64_t a1)
{
  return sub_25B1C68C8(a1, *(void *)(v1 + 16));
}

uint64_t sub_25B1C6FD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25B1C5FEC();
  *a1 = result;
  return result;
}

uint64_t sub_25B1C7004(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 24) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for MuxingZoneAdvertiser()
{
  return self;
}

uint64_t method lookup function for MuxingZoneAdvertiser(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MuxingZoneAdvertiser);
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.zoneVersionPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.zoneVersionPublisher.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.zoneVersionPublisher.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.isEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.isEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.isEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.__allocating_init(zoneAdvertisers:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.advertise(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.subscribe()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t sub_25B1C71C0(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRelease();
  *a1 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B1C7208()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B1C7240()
{
  return sub_25B1C6784();
}

uint64_t sub_25B1C7248(void *a1)
{
  return sub_25B1C65D8(a1);
}

uint64_t sub_25B1C7260(uint64_t a1)
{
  return sub_25B1C6FBC(a1);
}

uint64_t dispatch thunk of HandshakeTask.handshakeDescriptor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HandshakeTask.schedule.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HandshakeTask.init(handshakeDescriptor:schedule:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of HandshakeTask.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_25B1C72C8(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v9 = v4[7];
  if (v9 && *(void *)(v9 + 16))
  {
    *(void *)(v9 + 16) = 0;
    swift_retain();
    swift_unknownObjectRelease();
    swift_getObjectType();
    sub_25B290970();
    swift_release();
  }
  type metadata accessor for KeepAliveTransaction();
  swift_allocObject();
  v4[7] = sub_25B1B6BAC(0x76696C417065654BLL, 0xEE0072656D695465);
  swift_release();
  uint64_t v10 = v4[5];
  uint64_t v11 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v10);
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a2;
  v13[4] = a3;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t, double))(v11 + 8);
  swift_retain();
  swift_retain();
  v14(a1, sub_25B1C76F4, v13, v10, v11, a4);
  swift_release();
  return swift_release();
}

uint64_t sub_25B1C7468(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    a2();
    uint64_t v5 = *(void *)(v4 + 56);
    if (v5)
    {
      if (*(void *)(v5 + 16))
      {
        *(void *)(v5 + 16) = 0;
        swift_retain();
        swift_unknownObjectRelease();
        swift_getObjectType();
        sub_25B290970();
        swift_release();
      }
    }
    *(void *)(v4 + 56) = 0;
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_25B1C7520()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  uint64_t v3 = v0[7];
  if (v3 && *(void *)(v3 + 16))
  {
    *(void *)(v3 + 16) = 0;
    swift_retain();
    swift_unknownObjectRelease();
    swift_getObjectType();
    sub_25B290970();
    swift_release();
  }
  v0[7] = 0;
  return swift_release();
}

uint64_t sub_25B1C75D0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KeepAliveTimer()
{
  return self;
}

uint64_t sub_25B1C7634(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_25B1C72C8(a1, a2, a3, a4);
}

uint64_t sub_25B1C7658()
{
  return sub_25B1C7520();
}

uint64_t sub_25B1C767C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B1C76B4()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25B1C76F4()
{
  return sub_25B1C7468(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_25B1C7700(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD08);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1CBA84();
  sub_25B291290();
  long long v8 = v2[9];
  v14[8] = v2[8];
  v14[9] = v8;
  v14[10] = v2[10];
  long long v9 = v2[5];
  v14[4] = v2[4];
  v14[5] = v9;
  long long v10 = v2[7];
  v14[6] = v2[6];
  v14[7] = v10;
  long long v11 = v2[1];
  v14[0] = *v2;
  v14[1] = v11;
  long long v12 = v2[3];
  v14[2] = v2[2];
  v14[3] = v12;
  sub_25B1CBD28();
  sub_25B290D60();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_25B1C7870@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DACB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1CBA84();
  sub_25B291280();
  if (!v2)
  {
    sub_25B1CB9F4();
    sub_25B290CC0();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    long long v9 = v23;
    a2[8] = v22;
    a2[9] = v9;
    a2[10] = v24;
    long long v10 = v19;
    a2[4] = v18;
    a2[5] = v10;
    long long v11 = v21;
    a2[6] = v20;
    a2[7] = v11;
    long long v12 = *(_OWORD *)&v15[24];
    *a2 = *(_OWORD *)&v15[8];
    a2[1] = v12;
    long long v13 = v17;
    a2[2] = v16;
    a2[3] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_25B1C7A1C()
{
  return 0xD000000000000010;
}

uint64_t sub_25B1C7A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B1CA904(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25B1C7A64(uint64_t a1)
{
  unint64_t v2 = sub_25B1CBA84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1C7AA0(uint64_t a1)
{
  unint64_t v2 = sub_25B1CBA84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1C7ADC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_25B1C7870(a1, a2);
}

uint64_t sub_25B1C7AF4(void *a1)
{
  return sub_25B1C7700(a1);
}

uint64_t sub_25B1C7B0C(uint64_t a1)
{
  unint64_t v2 = sub_25B1CBCD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1C7B48(uint64_t a1)
{
  unint64_t v2 = sub_25B1CBCD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1C7B84(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_25B1C7BAC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DACF8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1CBCD4();
  sub_25B291290();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t PersonaIntroducer.__allocating_init(personaMonitor:syncService:replicator:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 120) = MEMORY[0x263F8EE88];
  sub_25B1C7D90(a1, v8 + 16);
  *(void *)(v8 + 56) = a2;
  *(void *)(v8 + 64) = a3;
  sub_25B1C7DF8(a4, (_OWORD *)(v8 + 72));
  return v8;
}

uint64_t PersonaIntroducer.init(personaMonitor:syncService:replicator:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  *(void *)(v4 + 120) = MEMORY[0x263F8EE88];
  sub_25B1C7D90(a1, v4 + 16);
  *(void *)(v4 + 56) = a2;
  *(void *)(v4 + 64) = a3;
  sub_25B1C7DF8(a4, (_OWORD *)(v4 + 72));
  return v4;
}

uint64_t sub_25B1C7D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9F08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_25B1C7DF8(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_25B1C7E10()
{
  uint64_t v1 = v0;
  if (qword_26A4D9F18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B290190();
  __swift_project_value_buffer(v2, (uint64_t)qword_26A4EB1C0);
  long long v3 = sub_25B290160();
  os_log_type_t v4 = sub_25B2908A0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_25B107000, v3, v4, "Starting persona introducer", v5, 2u);
    MEMORY[0x261160890](v5, -1, -1);
  }

  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v6 + 24))(v1, &protocol witness table for PersonaIntroducer, ObjectType, v6);
  sub_25B187628(v1 + 16, (uint64_t)&v11, (uint64_t *)&unk_26A4D9F08);
  if (!v12) {
    return sub_25B116DE0((uint64_t)&v11, (uint64_t *)&unk_26A4D9F08);
  }
  sub_25B180BD4(&v11, (uint64_t)v13);
  uint64_t v8 = v14;
  uint64_t v9 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  *(void *)&long long v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA730);
  sub_25B116394(&qword_26A4DA738, &qword_26A4DA730);
  sub_25B290270();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_25B2901F0();
  swift_endAccess();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_25B1C8068(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  unint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a1 + 24);
  int v5 = *(unsigned __int8 *)(a1 + 32);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if ((v5 & 0xFFFFFF81) == 0) {
      sub_25B1C80F8(v1, v2, v3, v4);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_25B1C80F8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  int v5 = v4;
  uint64_t v10 = *v4;
  if (qword_26A4D9F18 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_25B290190();
  __swift_project_value_buffer(v11, (uint64_t)qword_26A4EB1C0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_25B290160();
  os_log_type_t v13 = sub_25B2908A0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = a3;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = v15;
    *(_DWORD *)uint64_t v14 = 136446466;
    swift_bridgeObjectRetain();
    sub_25B288E98(a1, a2, &v25);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_25B288E98(v24, a4, &v25);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    os_log_type_t v16 = v13;
    uint64_t v17 = a1;
    _os_log_impl(&dword_25B107000, v12, v16, "Fetching local device ID for introduction message to %{public}s:%{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    uint64_t v18 = v15;
    a3 = v24;
    MEMORY[0x261160890](v18, -1, -1);
    MEMORY[0x261160890](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v17 = a1;
  }
  uint64_t v19 = v5[8];
  uint64_t ObjectType = swift_getObjectType();
  long long v21 = (void *)swift_allocObject();
  void v21[2] = v17;
  v21[3] = a2;
  v21[4] = a3;
  v21[5] = a4;
  v21[6] = v5;
  v21[7] = v10;
  long long v22 = *(void (**)(void, void, void, void))(v19 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v22(sub_25B1CB940, v21, ObjectType, v19);
  return swift_release();
}

void sub_25B1C83D4(uint64_t a1, void (*a2)(void, void, void, void), uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, void *a7)
{
  void (*v33)(_OWORD *__return_ptr, uint64_t, uint64_t);
  _OWORD *v34;
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  long long v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  void (*v71)(uint64_t, uint64_t, long long *, char *, uint64_t *, void (*)(uint64_t), _OWORD *, uint64_t, uint64_t);
  long long v72;
  uint64_t v73;
  void (*v74)(void, void, void, void);
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t ObjectType;
  long long v87;
  long long v88;
  long long v89;
  long long v90;
  long long v91;
  long long v92;
  long long v93;
  long long v94;
  long long v95;
  long long v96;
  long long v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  _OWORD v101[2];
  long long v102;
  long long v103;
  long long v104;
  long long v105;
  long long v106;
  long long v107;
  long long v108;
  long long v109;
  long long v110;
  long long v111;
  long long v112;
  long long v113;
  long long v114;
  long long v115;
  long long v116;
  long long v117;
  long long v118;
  long long v119;
  long long v120;
  long long v121;

  uint64_t ObjectType = a5;
  id v80 = a1;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v82 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25B290080();
  id v78 = *(void *)(v14 - 8);
  uint64_t v79 = v14;
  MEMORY[0x270FA5388](v14);
  id v77 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v16 - 8);
  os_log_type_t v83 = (uint64_t)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v76 = type metadata accessor for Message();
  uint64_t v18 = MEMORY[0x270FA5388](v76);
  unint64_t v75 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  id v81 = (char *)&v73 - v20;
  if (qword_26A4D9F18 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_25B290190();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_26A4EB1C0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v85 = v22;
  long long v23 = sub_25B290160();
  os_log_type_t v24 = sub_25B2908A0();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v84 = a3;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v74 = a2;
    unint64_t v28 = a7;
    uint64_t v29 = v27;
    *(void *)&v111 = v27;
    *(_DWORD *)uint64_t v26 = 136446466;
    swift_bridgeObjectRetain();
    *(void *)&v101[0] = sub_25B288E98(a3, a4, (uint64_t *)&v111);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)&v101[0] = sub_25B288E98(ObjectType, a6, (uint64_t *)&v111);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v23, v24, "Sending introduction message to %{public}s:%{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v29;
    a7 = v28;
    a2 = v74;
    MEMORY[0x261160890](v30, -1, -1);
    MEMORY[0x261160890](v26, -1, -1);

    if (a2)
    {
LABEL_5:
      uint64_t v31 = a7[12];
      uint64_t v32 = a7[14];
      __swift_project_boxed_opaque_existential_1(a7 + 9, v31);
      unint64_t v33 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v32 + 48);
      swift_bridgeObjectRetain();
      v33(v101, v31, v32);
      unint64_t v99 = *((void *)&v102 + 1);
      uint64_t v100 = *((void *)&v102 + 1);
      os_log_t v98 = 0;
      uint64_t v87 = 0u;
      unint64_t v88 = 0u;
      LOWORD(v89) = 256;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      *((void *)&v72 + 1) = a6;
      *(void *)&uint64_t v72 = ObjectType;
      DeviceDescriptor.init(id:name:protocolVersion:deviceType:screenDescriptor:zones:messageTypes:idsIdentityBlob:marketingName:productType:personaID:)(v84, a4, 0x6E776F6E6B6E75, 0xE700000000000000, &v99, &v98, (uint64_t *)&v87, MEMORY[0x263F8EE78], &v111, MEMORY[0x263F8EE78], 0, 0xF000000000000000, 0, 0, v72);
      *((void *)&v88 + 1) = &type metadata for PersonaIntroducer.IntroductionMessage;
      *(void *)&uint64_t v89 = sub_25B1CB950();
      os_log_type_t v34 = (_OWORD *)swift_allocObject();
      *(void *)&uint64_t v87 = v34;
      os_log_type_t v35 = v109;
      v34[9] = v108;
      v34[10] = v35;
      v34[11] = v110;
      uint64_t v36 = v105;
      v34[5] = v104;
      v34[6] = v36;
      uint64_t v37 = v107;
      v34[7] = v106;
      v34[8] = v37;
      uint64_t v38 = v101[1];
      v34[1] = v101[0];
      v34[2] = v38;
      unint64_t v39 = v103;
      v34[3] = v102;
      v34[4] = v39;
      unint64_t v40 = qword_26A4DACA0;
      type metadata accessor for PropertyListTypeEncoder();
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v40;
      *(unsigned char *)(v41 + 24) = 0;
      sub_25B1172F8((uint64_t)v101);
      sub_25B1172F8((uint64_t)v101);
      uint64_t v42 = (void *)sub_25B281964(&v87);
      swift_setDeallocating();
      swift_deallocClassInstance();
      uint64_t v46 = sub_25B2851A4(v42);
      uint64_t v48 = v47;
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
      uint64_t v49 = v78;
      uint64_t v50 = v79;
      uint64_t v74 = *(void (**)(void, void, void, void))(v78 + 56);
      v74(v83, 1, 1, v79);
      uint64_t ObjectType = qword_26A4DACA0;
      sub_25B114300(v46, v48);
      uint64_t v85 = v48;
      uint64_t v51 = v77;
      sub_25B290070();
      long long v52 = (int *)v76;
      long long v53 = *(int *)(v76 + 20);
      uint64_t v84 = v46;
      unint64_t v54 = (uint64_t)v75;
      uint64_t v55 = (uint64_t)&v75[v53];
      v74(&v75[v53], 1, 1, v50);
      (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v54, v51, v50);
      sub_25B116B94(v83, v55);
      unint64_t v56 = (void *)(v54 + v52[6]);
      *unint64_t v56 = 0xD000000000000015;
      v56[1] = 0x800000025B29D260;
      uint64_t v57 = (void *)(v54 + v52[7]);
      char v58 = (uint64_t)v81;
      void *v57 = v80;
      v57[1] = a2;
      long long v59 = v85;
      *(void *)(v54 + v52[8]) = ObjectType;
      unint64_t v60 = (void *)(v54 + v52[9]);
      uint64_t v61 = v84;
      *unint64_t v60 = v84;
      v60[1] = v59;
      sub_25B116BFC(v54, v58);
      unint64_t v62 = a7[8];
      uint64_t ObjectType = swift_getObjectType();
      os_log_t v63 = sub_25B28FEA0();
      char v64 = (uint64_t)v82;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v82, 1, 1, v63);
      uint64_t v95 = v119;
      int v96 = v120;
      uint64_t v97 = v121;
      uint64_t v91 = v115;
      __int16 v92 = v116;
      os_log_type_t v93 = v117;
      v94 = v118;
      uint64_t v87 = v111;
      unint64_t v88 = v112;
      uint64_t v89 = v113;
      unint64_t v90 = v114;
      os_log_t v98 = 0;
      unint64_t v99 = 0x4014000000000000;
      uint64_t v100 = 3;
      uint64_t v65 = (_OWORD *)swift_allocObject();
      uint64_t v66 = v120;
      v65[9] = v119;
      v65[10] = v66;
      v65[11] = v121;
      os_log_type_t v67 = v116;
      v65[5] = v115;
      v65[6] = v67;
      uint64_t v68 = v118;
      v65[7] = v117;
      v65[8] = v68;
      uint64_t v69 = v112;
      v65[1] = v111;
      _OWORD v65[2] = v69;
      int64_t v70 = v114;
      v65[3] = v113;
      v65[4] = v70;
      os_log_type_t v71 = *(void (**)(uint64_t, uint64_t, long long *, char *, uint64_t *, void (*)(uint64_t), _OWORD *, uint64_t, uint64_t))(v62 + 48);
      sub_25B1172F8((uint64_t)&v111);
      v71(v58, v64, &v87, &v98, &v99, sub_25B1CB9AC, v65, ObjectType, v62);
      swift_release();
      sub_25B10DFF0(v61, v59);
      sub_25B11DEBC((uint64_t)v101);
      sub_25B11DEBC((uint64_t)v101);
      sub_25B116DE0(v64, &qword_26A4D9160);
      sub_25B116C7C(v58);
      sub_25B11DEBC((uint64_t)&v111);
      return;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    if (a2) {
      goto LABEL_5;
    }
  }
  uint64_t v43 = sub_25B290160();
  uint64_t v44 = sub_25B2908A0();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 0;
    _os_log_impl(&dword_25B107000, v43, v44, "Cannot send introduction message as we have no local device ID", v45, 2u);
    MEMORY[0x261160890](v45, -1, -1);
  }
}

void sub_25B1C8F40(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA6D0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (void **)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25B187628(a1, (uint64_t)v6, &qword_26A4DA6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = *v6;
    if (qword_26A4D9F18 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_25B290190();
    __swift_project_value_buffer(v8, (uint64_t)qword_26A4EB1C0);
    sub_25B1172F8((uint64_t)a2);
    id v9 = v7;
    sub_25B1172F8((uint64_t)a2);
    id v10 = v7;
    uint64_t v11 = sub_25B290160();
    os_log_type_t v12 = sub_25B290880();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v28 = v15;
      *(_DWORD *)uint64_t v13 = 136446466;
      uint64_t v16 = *a2;
      unint64_t v17 = a2[1];
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_25B288E98(v16, v17, &v28);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B11DEBC((uint64_t)a2);
      sub_25B11DEBC((uint64_t)a2);
      *(_WORD *)(v13 + 12) = 2114;
      id v18 = v7;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v27 = v19;
      sub_25B2909C0();
      *uint64_t v14 = v19;

      _os_log_impl(&dword_25B107000, v11, v12, "Sync service failed to send introduction message to %{public}s: %{public}@", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
      swift_arrayDestroy();
      MEMORY[0x261160890](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x261160890](v15, -1, -1);
      MEMORY[0x261160890](v13, -1, -1);
    }
    else
    {

      sub_25B11DEBC((uint64_t)a2);
      sub_25B11DEBC((uint64_t)a2);
    }
  }
  else
  {
    if (qword_26A4D9F18 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_25B290190();
    __swift_project_value_buffer(v20, (uint64_t)qword_26A4EB1C0);
    sub_25B1172F8((uint64_t)a2);
    uint64_t v21 = sub_25B290160();
    os_log_type_t v22 = sub_25B2908A0();
    if (os_log_type_enabled(v21, v22))
    {
      long long v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v28 = v24;
      *(_DWORD *)long long v23 = 136446210;
      uint64_t v25 = *a2;
      unint64_t v26 = a2[1];
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_25B288E98(v25, v26, &v28);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B11DEBC((uint64_t)a2);
      _os_log_impl(&dword_25B107000, v21, v22, "Sent introduction message to %{public}s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v24, -1, -1);
      MEMORY[0x261160890](v23, -1, -1);
    }
    else
    {
      sub_25B11DEBC((uint64_t)a2);
    }

    sub_25B116DE0((uint64_t)v6, &qword_26A4DA6D0);
  }
}

void sub_25B1C93AC(uint64_t a1, long long *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v76 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v78 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for Message();
  uint64_t v10 = MEMORY[0x270FA5388](v74);
  uint64_t v73 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v75 = (uint64_t)&v70 - v12;
  uint64_t v13 = sub_25B290080();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v80 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v77 = (char *)&v70 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v70 - v19;
  long long v21 = a2[9];
  long long v106 = a2[8];
  long long v107 = v21;
  long long v108 = a2[10];
  long long v22 = a2[5];
  long long v102 = a2[4];
  long long v103 = v22;
  long long v23 = a2[7];
  long long v104 = a2[6];
  long long v105 = v23;
  long long v24 = a2[1];
  long long v98 = *a2;
  long long v99 = v24;
  long long v25 = a2[3];
  long long v100 = a2[2];
  long long v101 = v25;
  if (qword_26A4D9F18 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_25B290190();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_26A4EB1C0);
  id v81 = *(char **)(v14 + 16);
  unint64_t v82 = (void (*)(void))(v14 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v81)(v20, a1, v13);
  sub_25B1172F8((uint64_t)&v98);
  sub_25B1172F8((uint64_t)&v98);
  unint64_t v85 = v27;
  uint64_t v28 = sub_25B290160();
  os_log_type_t v29 = sub_25B2908A0();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v83 = a1;
  uint64_t v84 = v14;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v72 = v3;
    uint64_t v32 = v31;
    uint64_t v71 = swift_slowAlloc();
    *(void *)&long long v86 = v71;
    *(_DWORD *)uint64_t v32 = 136446466;
    sub_25B1CB890();
    uint64_t v33 = sub_25B290DB0();
    v97[0] = sub_25B288E98(v33, v34, (uint64_t *)&v86);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    uint64_t v35 = v13;
    uint64_t v79 = *(void (**)(char *, uint64_t))(v14 + 8);
    v79(v20, v13);
    *(_WORD *)(v32 + 12) = 2082;
    long long v36 = v98;
    swift_bridgeObjectRetain();
    v97[0] = sub_25B288E98(v36, *((unint64_t *)&v36 + 1), (uint64_t *)&v86);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B11DEBC((uint64_t)&v98);
    sub_25B11DEBC((uint64_t)&v98);
    _os_log_impl(&dword_25B107000, v28, v29, "Sending ack message for %{public}s to %{public}s", (uint8_t *)v32, 0x16u);
    uint64_t v37 = v71;
    swift_arrayDestroy();
    MEMORY[0x261160890](v37, -1, -1);
    uint64_t v38 = v32;
    uint64_t v3 = v72;
    MEMORY[0x261160890](v38, -1, -1);
  }
  else
  {
    uint64_t v35 = v13;
    uint64_t v79 = *(void (**)(char *, uint64_t))(v14 + 8);
    v79(v20, v13);
    sub_25B11DEBC((uint64_t)&v98);
    sub_25B11DEBC((uint64_t)&v98);
  }

  uint64_t v39 = *(void *)(v3 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(ObjectType, v39);
  if (v42)
  {
    uint64_t v43 = v41;
    uint64_t v44 = v42;
    *((void *)&v87 + 1) = &type metadata for PersonaIntroducer.AckMessage;
    *(void *)&long long v88 = sub_25B1CB83C();
    uint64_t v45 = qword_26A4DACA0;
    type metadata accessor for PropertyListTypeEncoder();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v45;
    *(unsigned char *)(inited + 24) = 0;
    uint64_t v47 = (void *)sub_25B281964(&v86);
    uint64_t v71 = v43;
    uint64_t v72 = sub_25B2851A4(v47);
    unint64_t v85 = v51;
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
    uint64_t v52 = v78;
    ((void (*)(uint64_t, uint64_t, uint64_t))v81)(v78, v83, v35);
    uint64_t v53 = v84;
    unint64_t v82 = *(void (**)(void))(v84 + 56);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v82)(v52, 0, 1, v35);
    uint64_t v83 = qword_26A4DACA0;
    sub_25B114300(v72, v85);
    sub_25B290070();
    uint64_t v55 = (uint64_t)v73;
    unint64_t v54 = (int *)v74;
    id v81 = &v73[*(int *)(v74 + 20)];
    v82();
    (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v55, v77, v35);
    sub_25B116B94(v78, (uint64_t)v81);
    unint64_t v56 = (void *)(v55 + v54[6]);
    *unint64_t v56 = 0xD000000000000014;
    v56[1] = 0x800000025B29D240;
    uint64_t v57 = (uint64_t *)(v55 + v54[7]);
    uint64_t *v57 = v71;
    v57[1] = v44;
    *(void *)(v55 + v54[8]) = v83;
    char v58 = (void *)(v55 + v54[9]);
    unint64_t v59 = v85;
    *char v58 = v72;
    v58[1] = v59;
    uint64_t v60 = v75;
    sub_25B116BFC(v55, v75);
    uint64_t v61 = sub_25B28FEA0();
    uint64_t v62 = (uint64_t)v76;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v76, 1, 1, v61);
    long long v94 = v106;
    long long v95 = v107;
    long long v96 = v108;
    long long v90 = v102;
    long long v91 = v103;
    long long v92 = v104;
    long long v93 = v105;
    long long v86 = v98;
    long long v87 = v99;
    long long v88 = v100;
    long long v89 = v101;
    LOBYTE(v97[0]) = 0;
    os_log_t v63 = (_OWORD *)swift_allocObject();
    long long v64 = v107;
    v63[9] = v106;
    v63[10] = v64;
    v63[11] = v108;
    long long v65 = v103;
    void v63[5] = v102;
    v63[6] = v65;
    long long v66 = v105;
    v63[7] = v104;
    v63[8] = v66;
    long long v67 = v99;
    v63[1] = v98;
    v63[2] = v67;
    long long v68 = v101;
    v63[3] = v100;
    v63[4] = v68;
    uint64_t v69 = *(void (**)(uint64_t, uint64_t, long long *, uint64_t *, void (*)(void *, char), _OWORD *, uint64_t, uint64_t))(v39 + 40);
    sub_25B1172F8((uint64_t)&v98);
    v69(v60, v62, &v86, v97, sub_25B1CB8EC, v63, ObjectType, v39);
    swift_release();
    sub_25B10DFF0(v72, v85);
    sub_25B116DE0(v62, &qword_26A4D9160);
    sub_25B116C7C(v60);
  }
  else
  {
    uint64_t v48 = sub_25B290160();
    os_log_type_t v49 = sub_25B2908A0();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl(&dword_25B107000, v48, v49, "Cannot send ack message as we have no local device ID", v50, 2u);
      MEMORY[0x261160890](v50, -1, -1);
    }
  }
}

void sub_25B1C9E6C(void *a1, char a2, uint64_t *a3)
{
  if (a2)
  {
    id v11 = a1;
    if (qword_26A4D9F18 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_25B290190();
    __swift_project_value_buffer(v12, (uint64_t)qword_26A4EB1C0);
    sub_25B1172F8((uint64_t)a3);
    sub_25B116CFC(a1, 1);
    sub_25B1172F8((uint64_t)a3);
    sub_25B116CFC(a1, 1);
    oslog = sub_25B290160();
    os_log_type_t v13 = sub_25B290880();
    if (os_log_type_enabled(oslog, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v22 = v16;
      *(_DWORD *)uint64_t v14 = 136446466;
      uint64_t v17 = *a3;
      unint64_t v18 = a3[1];
      swift_bridgeObjectRetain();
      sub_25B288E98(v17, v18, &v22);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B11DEBC((uint64_t)a3);
      sub_25B11DEBC((uint64_t)a3);
      *(_WORD *)(v14 + 12) = 2114;
      id v19 = a1;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_25B2909C0();
      void *v15 = v21;
      sub_25B116D08(a1, 1);
      sub_25B116D08(a1, 1);
      _os_log_impl(&dword_25B107000, oslog, v13, "Sync service failed to send ack message to %{public}s: %{public}@", (uint8_t *)v14, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
      swift_arrayDestroy();
      MEMORY[0x261160890](v15, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x261160890](v16, -1, -1);
      MEMORY[0x261160890](v14, -1, -1);

      sub_25B116D08(a1, 1);
      return;
    }
    sub_25B116D08(a1, 1);
    sub_25B11DEBC((uint64_t)a3);
    sub_25B11DEBC((uint64_t)a3);
    sub_25B116D08(a1, 1);
    sub_25B116D08(a1, 1);
  }
  else
  {
    if (qword_26A4D9F18 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_25B290190();
    __swift_project_value_buffer(v4, (uint64_t)qword_26A4EB1C0);
    sub_25B1172F8((uint64_t)a3);
    oslog = sub_25B290160();
    os_log_type_t v5 = sub_25B2908A0();
    if (os_log_type_enabled(oslog, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v22 = v7;
      *(_DWORD *)uint64_t v6 = 136446210;
      uint64_t v8 = *a3;
      unint64_t v9 = a3[1];
      swift_bridgeObjectRetain();
      sub_25B288E98(v8, v9, &v22);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B11DEBC((uint64_t)a3);
      _os_log_impl(&dword_25B107000, oslog, v5, "Sent ack message to %{public}s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v7, -1, -1);
      MEMORY[0x261160890](v6, -1, -1);

      return;
    }
    sub_25B11DEBC((uint64_t)a3);
  }
}

void sub_25B1CA2A8(void *a1, unsigned __int8 a2, uint64_t *a3)
{
  if (a2 == 0xFF)
  {
    if (qword_26A4D9F18 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_25B290190();
    __swift_project_value_buffer(v12, (uint64_t)qword_26A4EB1C0);
    sub_25B1172F8((uint64_t)a3);
    oslog = sub_25B290160();
    os_log_type_t v6 = sub_25B290880();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v25 = v8;
      *(_DWORD *)uint64_t v7 = 136446210;
      uint64_t v13 = *a3;
      unint64_t v14 = a3[1];
      swift_bridgeObjectRetain();
      sub_25B288E98(v13, v14, &v25);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B11DEBC((uint64_t)a3);
      id v11 = "Received unexpected response to pairing attempt with device %{public}s";
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  if ((a2 & 1) == 0)
  {
    if (qword_26A4D9F18 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_25B290190();
    __swift_project_value_buffer(v5, (uint64_t)qword_26A4EB1C0);
    sub_25B1172F8((uint64_t)a3);
    oslog = sub_25B290160();
    os_log_type_t v6 = sub_25B2908A0();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v25 = v8;
      *(_DWORD *)uint64_t v7 = 136446210;
      uint64_t v9 = *a3;
      unint64_t v10 = a3[1];
      swift_bridgeObjectRetain();
      sub_25B288E98(v9, v10, &v25);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B11DEBC((uint64_t)a3);
      id v11 = "Successfully paired with device %{public}s";
LABEL_11:
      _os_log_impl(&dword_25B107000, oslog, v6, v11, v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v8, -1, -1);
      MEMORY[0x261160890](v7, -1, -1);

      return;
    }
LABEL_12:
    sub_25B11DEBC((uint64_t)a3);
    goto LABEL_18;
  }
  sub_25B116CFC(a1, 1);
  if (qword_26A4D9F18 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_25B290190();
  __swift_project_value_buffer(v16, (uint64_t)qword_26A4EB1C0);
  sub_25B1172F8((uint64_t)a3);
  sub_25B1CBA54(a1, a2);
  sub_25B1172F8((uint64_t)a3);
  sub_25B1CBA54(a1, a2);
  oslog = sub_25B290160();
  os_log_type_t v17 = sub_25B290880();
  if (os_log_type_enabled(oslog, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    id v19 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v25 = v20;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v21 = *a3;
    unint64_t v22 = a3[1];
    swift_bridgeObjectRetain();
    sub_25B288E98(v21, v22, &v25);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B11DEBC((uint64_t)a3);
    sub_25B11DEBC((uint64_t)a3);
    *(_WORD *)(v18 + 12) = 2114;
    sub_25B116CFC(a1, 1);
    uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
    sub_25B2909C0();
    void *v19 = v24;
    sub_25B1CBA6C(a1, a2);
    sub_25B1CBA6C(a1, a2);
    _os_log_impl(&dword_25B107000, oslog, v17, "Failed to pair with device %{public}s: %{public}@", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
    swift_arrayDestroy();
    MEMORY[0x261160890](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x261160890](v20, -1, -1);
    MEMORY[0x261160890](v18, -1, -1);

    sub_25B1CBA6C(a1, a2);
    return;
  }
  sub_25B1CBA6C(a1, a2);
  sub_25B11DEBC((uint64_t)a3);
  sub_25B11DEBC((uint64_t)a3);
  sub_25B1CBA6C(a1, a2);
  sub_25B1CBA6C(a1, a2);
LABEL_18:
}

uint64_t PersonaIntroducer.deinit()
{
  sub_25B116DE0(v0 + 16, (uint64_t *)&unk_26A4D9F08);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PersonaIntroducer.__deallocating_deinit()
{
  sub_25B116DE0(v0 + 16, (uint64_t *)&unk_26A4D9F08);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void PersonaIntroducer.syncService(_:didReceiveMessage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t PersonaIntroducer.syncService(_:shouldAcceptIncomingMessage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B1CB678(a3);
}

void sub_25B1CA8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_25B1CA8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B1CB678(a3);
}

uint64_t sub_25B1CA8C4()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B1CA8FC(uint64_t a1)
{
  return sub_25B1C8068(a1);
}

uint64_t sub_25B1CA904(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000025B29D280)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void sub_25B1CA98C(uint64_t a1)
{
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DACB8);
  uint64_t v85 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  long long v86 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Message();
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v89 = (uint64_t)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v82 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  id v11 = (char *)&v82 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  unint64_t v14 = (char *)&v82 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  os_log_type_t v17 = (char *)&v82 - v16;
  uint64_t v18 = v15;
  id v19 = (uint64_t *)(a1 + *(int *)(v15 + 24));
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  if ((*v19 != 0xD000000000000015 || v21 != 0x800000025B29D260) && (sub_25B290FB0() & 1) == 0)
  {
    if (v20 == 0xD000000000000014 && v21 == 0x800000025B29D240 || (sub_25B290FB0() & 1) != 0)
    {
      if (qword_26A4D9F18 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_25B290190();
      __swift_project_value_buffer(v37, (uint64_t)qword_26A4EB1C0);
      sub_25B116D14(a1, (uint64_t)v14);
      uint64_t v38 = sub_25B290160();
      os_log_type_t v39 = sub_25B2908A0();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 136446210;
        *(void *)&long long v120 = v41;
        uint64_t v42 = (uint64_t *)&v14[*(int *)(v18 + 28)];
        uint64_t v43 = *v42;
        unint64_t v44 = v42[1];
        swift_bridgeObjectRetain();
        *(void *)&long long v102 = sub_25B288E98(v43, v44, (uint64_t *)&v120);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B116C7C((uint64_t)v14);
        _os_log_impl(&dword_25B107000, v38, v39, "Received ack message from %{public}s", (uint8_t *)v40, 0xCu);
        swift_arrayDestroy();
        uint64_t v45 = v41;
LABEL_26:
        MEMORY[0x261160890](v45, -1, -1);
        MEMORY[0x261160890](v40, -1, -1);
LABEL_29:

        return;
      }
      uint64_t v62 = (uint64_t)v14;
    }
    else
    {
      if (qword_26A4D9F18 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_25B290190();
      __swift_project_value_buffer(v63, (uint64_t)qword_26A4EB1C0);
      sub_25B116D14(a1, (uint64_t)v11);
      sub_25B116D14(a1, (uint64_t)v8);
      uint64_t v38 = sub_25B290160();
      os_log_type_t v64 = sub_25B290880();
      if (os_log_type_enabled(v38, v64))
      {
        uint64_t v65 = v18;
        uint64_t v40 = swift_slowAlloc();
        uint64_t v89 = swift_slowAlloc();
        *(void *)&long long v120 = v89;
        *(_DWORD *)uint64_t v40 = 136446466;
        long long v66 = (uint64_t *)&v11[*(int *)(v18 + 24)];
        uint64_t v67 = *v66;
        unint64_t v68 = v66[1];
        swift_bridgeObjectRetain();
        *(void *)&long long v102 = sub_25B288E98(v67, v68, (uint64_t *)&v120);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B116C7C((uint64_t)v11);
        *(_WORD *)(v40 + 12) = 2082;
        uint64_t v69 = (uint64_t *)&v8[*(int *)(v65 + 28)];
        uint64_t v70 = *v69;
        unint64_t v71 = v69[1];
        swift_bridgeObjectRetain();
        *(void *)&long long v102 = sub_25B288E98(v70, v71, (uint64_t *)&v120);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B116C7C((uint64_t)v8);
        _os_log_impl(&dword_25B107000, v38, v64, "Received unexpected message type %{public}s from %{public}s", (uint8_t *)v40, 0x16u);
        uint64_t v72 = v89;
        swift_arrayDestroy();
        uint64_t v45 = v72;
        goto LABEL_26;
      }
      sub_25B116C7C((uint64_t)v11);
      uint64_t v62 = (uint64_t)v8;
    }
    sub_25B116C7C(v62);
    goto LABEL_29;
  }
  if (qword_26A4D9F18 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_25B290190();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_26A4EB1C0);
  sub_25B116D14(a1, (uint64_t)v17);
  uint64_t v88 = v23;
  uint64_t v24 = sub_25B290160();
  os_log_type_t v25 = sub_25B2908A0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136446210;
    *(void *)&long long v120 = v27;
    unint64_t v82 = v26 + 4;
    uint64_t v83 = a1;
    uint64_t v28 = (uint64_t *)&v17[*(int *)(v18 + 28)];
    uint64_t v30 = *v28;
    unint64_t v29 = v28[1];
    swift_bridgeObjectRetain();
    *(void *)&long long v102 = sub_25B288E98(v30, v29, (uint64_t *)&v120);
    a1 = v83;
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B116C7C((uint64_t)v17);
    _os_log_impl(&dword_25B107000, v24, v25, "Received introduction message from %{public}s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v27, -1, -1);
    MEMORY[0x261160890](v26, -1, -1);
  }
  else
  {
    sub_25B116C7C((uint64_t)v17);
  }

  uint64_t v31 = qword_26A4DACA0;
  type metadata accessor for OPACKCoder();
  sub_25B284F38(v119);
  sub_25B116E84((uint64_t)v119, (uint64_t)v117);
  uint64_t v32 = MEMORY[0x263F8EE78];
  unint64_t v33 = sub_25B20D420(MEMORY[0x263F8EE78]);
  v116[0] = v32;
  v116[1] = v33;
  v117[4] = v31;
  char v118 = 0;
  sub_25B116F7C((uint64_t)v116, (uint64_t)v113);
  unint64_t v34 = sub_25B1CB9B4();
  sub_25B116E84((uint64_t)v114, (uint64_t)&v120);
  if (swift_dynamicCast())
  {
    *(void *)&long long v120 = v113[0];
    *((void *)&v120 + 1) = v114[4];
    LOBYTE(v121) = v115;
    *((void *)&v121 + 1) = v102;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DACC0);
    sub_25B116394(&qword_26A4DACC8, &qword_26A4DACC0);
    uint64_t v35 = v86;
    sub_25B290D00();
    sub_25B1CB9F4();
    uint64_t v36 = v87;
    sub_25B290CC0();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v35, v36);
    long long v128 = v110;
    long long v129 = v111;
    long long v130 = v112;
    long long v124 = v106;
    long long v125 = v107;
    long long v126 = v108;
    long long v127 = v109;
    long long v120 = v102;
    long long v121 = v103;
    long long v122 = v104;
    long long v123 = v105;
    v101[8] = v110;
    v101[9] = v111;
    v101[10] = v112;
    v101[4] = v106;
    v101[5] = v107;
    v101[6] = v108;
    v101[7] = v109;
    v101[0] = v102;
    v101[1] = v103;
    _OWORD v101[2] = v104;
    v101[3] = v105;
    sub_25B116FD8((uint64_t)v113);
    sub_25B116FD8((uint64_t)v116);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v119);
    uint64_t v73 = v84[12];
    uint64_t v74 = v84[13];
    __swift_project_boxed_opaque_existential_1(v84 + 9, v73);
    long long v98 = v128;
    long long v99 = v129;
    long long v100 = v130;
    long long v94 = v124;
    long long v95 = v125;
    long long v96 = v126;
    long long v97 = v127;
    long long v90 = v120;
    long long v91 = v121;
    long long v92 = v122;
    long long v93 = v123;
    uint64_t v75 = (_OWORD *)swift_allocObject();
    long long v76 = v129;
    v75[9] = v128;
    v75[10] = v76;
    v75[11] = v130;
    long long v77 = v125;
    v75[5] = v124;
    v75[6] = v77;
    long long v78 = v127;
    v75[7] = v126;
    v75[8] = v78;
    long long v79 = v121;
    v75[1] = v120;
    v75[2] = v79;
    long long v80 = v123;
    v75[3] = v122;
    v75[4] = v80;
    id v81 = *(void (**)(long long *, void (*)(void *, unsigned __int8), _OWORD *, uint64_t, uint64_t))(v74 + 16);
    sub_25B1172F8((uint64_t)v101);
    sub_25B1172F8((uint64_t)&v120);
    v81(&v90, sub_25B1CBA4C, v75, v73, v74);
    swift_release();
    sub_25B11DEBC((uint64_t)&v120);
    long long v98 = v128;
    long long v99 = v129;
    long long v100 = v130;
    long long v94 = v124;
    long long v95 = v125;
    long long v96 = v126;
    long long v97 = v127;
    long long v90 = v120;
    long long v91 = v121;
    long long v92 = v122;
    long long v93 = v123;
    sub_25B1172F8((uint64_t)v101);
    sub_25B1C93AC(a1, &v90);
    sub_25B11DEBC((uint64_t)&v120);
    sub_25B11DEBC((uint64_t)&v120);
  }
  else
  {
    uint64_t v46 = sub_25B290AF0();
    uint64_t v47 = (void *)swift_allocError();
    os_log_type_t v49 = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F360);
    *os_log_type_t v49 = v34;
    swift_bridgeObjectRetain();
    sub_25B290AD0();
    (*(void (**)(unint64_t *, void, uint64_t))(*(void *)(v46 - 8) + 104))(v49, *MEMORY[0x263F8DCB0], v46);
    swift_willThrow();
    sub_25B116FD8((uint64_t)v113);
    sub_25B116FD8((uint64_t)v116);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v119);
    uint64_t v50 = v89;
    sub_25B116D14(a1, v89);
    id v51 = v47;
    id v52 = v47;
    uint64_t v53 = sub_25B290160();
    os_log_type_t v54 = sub_25B290880();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      unint64_t v56 = (void *)swift_slowAlloc();
      uint64_t v89 = swift_slowAlloc();
      *(void *)&long long v120 = v89;
      *(_DWORD *)uint64_t v55 = 136446466;
      sub_25B290080();
      sub_25B1CB890();
      uint64_t v57 = sub_25B290DB0();
      *(void *)&long long v102 = sub_25B288E98(v57, v58, (uint64_t *)&v120);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B116C7C(v50);
      *(_WORD *)(v55 + 12) = 2114;
      id v59 = v47;
      uint64_t v60 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v102 = v60;
      sub_25B2909C0();
      *unint64_t v56 = v60;

      _os_log_impl(&dword_25B107000, v53, v54, "Failed to process incoming message %{public}s: %{public}@", (uint8_t *)v55, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
      swift_arrayDestroy();
      MEMORY[0x261160890](v56, -1, -1);
      uint64_t v61 = v89;
      swift_arrayDestroy();
      MEMORY[0x261160890](v61, -1, -1);
      MEMORY[0x261160890](v55, -1, -1);
    }
    else
    {

      sub_25B116C7C(v50);
    }
  }
}

uint64_t sub_25B1CB678(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Message();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)(a1 + *(int *)(v3 + 24));
  if (*v6 == 0xD000000000000015 && v6[1] == 0x800000025B29D260)
  {
    sub_25B116D14(a1, (uint64_t)v5);
    char v7 = 1;
  }
  else
  {
    char v8 = sub_25B290FB0();
    sub_25B116D14(a1, (uint64_t)v5);
    if ((v8 & 1) != 0
      || (uint64_t v9 = &v5[*(int *)(v2 + 24)], *(void *)v9 == 0xD000000000000014)
      && *((void *)v9 + 1) == 0x800000025B29D240)
    {
      char v7 = 1;
    }
    else
    {
      char v7 = sub_25B290FB0();
    }
  }
  sub_25B116C7C((uint64_t)v5);
  return v7 & 1;
}

uint64_t type metadata accessor for PersonaIntroducer()
{
  return self;
}

uint64_t method lookup function for PersonaIntroducer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PersonaIntroducer);
}

uint64_t dispatch thunk of PersonaIntroducer.__allocating_init(personaMonitor:syncService:replicator:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of PersonaIntroducer.start()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

unint64_t sub_25B1CB83C()
{
  unint64_t result = qword_26A4DACA8;
  if (!qword_26A4DACA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DACA8);
  }
  return result;
}

unint64_t sub_25B1CB890()
{
  unint64_t result = qword_26A4D9230;
  if (!qword_26A4D9230)
  {
    sub_25B290080();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9230);
  }
  return result;
}

void sub_25B1CB8EC(void *a1, char a2)
{
  sub_25B1C9E6C(a1, a2 & 1, (uint64_t *)(v2 + 16));
}

uint64_t sub_25B1CB8F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_25B1CB940(uint64_t a1, void (*a2)(void, void, void, void))
{
  sub_25B1C83D4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48));
}

unint64_t sub_25B1CB950()
{
  unint64_t result = qword_26A4DACB0;
  if (!qword_26A4DACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DACB0);
  }
  return result;
}

void sub_25B1CB9AC(uint64_t a1)
{
  sub_25B1C8F40(a1, (uint64_t *)(v1 + 16));
}

unint64_t sub_25B1CB9B4()
{
  unint64_t result = qword_26B33F350;
  if (!qword_26B33F350)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B33F350);
  }
  return result;
}

unint64_t sub_25B1CB9F4()
{
  unint64_t result = qword_26A4DACD0;
  if (!qword_26A4DACD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DACD0);
  }
  return result;
}

void sub_25B1CBA4C(void *a1, unsigned __int8 a2)
{
  sub_25B1CA2A8(a1, a2, (uint64_t *)(v2 + 16));
}

id sub_25B1CBA54(id result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_25B116CFC(result, a2 & 1);
  }
  return result;
}

void sub_25B1CBA6C(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_25B116D08(a1, a2 & 1);
  }
}

unint64_t sub_25B1CBA84()
{
  unint64_t result = qword_26A4DACD8;
  if (!qword_26A4DACD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DACD8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PersonaIntroducer.IntroductionMessage.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B1CBB74);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonaIntroducer.IntroductionMessage.CodingKeys()
{
  return &type metadata for PersonaIntroducer.IntroductionMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for PersonaIntroducer.IntroductionMessage()
{
  return &type metadata for PersonaIntroducer.IntroductionMessage;
}

ValueMetadata *type metadata accessor for PersonaIntroducer.AckMessage()
{
  return &type metadata for PersonaIntroducer.AckMessage;
}

unint64_t sub_25B1CBBD0()
{
  unint64_t result = qword_26A4DACE0;
  if (!qword_26A4DACE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DACE0);
  }
  return result;
}

unint64_t sub_25B1CBC28()
{
  unint64_t result = qword_26A4DACE8;
  if (!qword_26A4DACE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DACE8);
  }
  return result;
}

unint64_t sub_25B1CBC80()
{
  unint64_t result = qword_26A4DACF0;
  if (!qword_26A4DACF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DACF0);
  }
  return result;
}

unint64_t sub_25B1CBCD4()
{
  unint64_t result = qword_26A4DAD00;
  if (!qword_26A4DAD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAD00);
  }
  return result;
}

unint64_t sub_25B1CBD28()
{
  unint64_t result = qword_26A4DAD10;
  if (!qword_26A4DAD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAD10);
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonaIntroducer.AckMessage.CodingKeys()
{
  return &type metadata for PersonaIntroducer.AckMessage.CodingKeys;
}

unint64_t sub_25B1CBD90()
{
  unint64_t result = qword_26A4DAD18;
  if (!qword_26A4DAD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAD18);
  }
  return result;
}

unint64_t sub_25B1CBDE8()
{
  unint64_t result = qword_26A4DAD20;
  if (!qword_26A4DAD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAD20);
  }
  return result;
}

void sub_25B1CBE3C()
{
  if (__OFSUB__(*(void *)(v0 + 16), *(void *)(v0 + 32))) {
    __break(1u);
  }
}

uint64_t ExponentialBackoffRetryTimer.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 16) = 3;
  *(void *)(v0 + 24) = 0x4030000000000000;
  *(_OWORD *)(v0 + 32) = xmmword_25B295590;
  return v0;
}

void *ExponentialBackoffRetryTimer.init()()
{
  v0[5] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  v0[6] = v1;
  v0[2] = 3;
  v0[3] = 0x4030000000000000;
  v0[4] = 3;
  return v0;
}

uint64_t ExponentialBackoffRetryTimer.__allocating_init(maxRetries:intervalUntilRetry:)(uint64_t a1, double a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 40) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(void *)(v4 + 48) = v5;
  *(void *)(v4 + 16) = a1;
  *(double *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a1;
  return v4;
}

uint64_t ExponentialBackoffRetryTimer.init(maxRetries:intervalUntilRetry:)(uint64_t a1, double a2)
{
  *(void *)(v2 + 40) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(void *)(v2 + 48) = v5;
  *(void *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
  *(void *)(v2 + 32) = a1;
  return v2;
}

uint64_t ExponentialBackoffRetryTimer.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t ExponentialBackoffRetryTimer.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ExponentialBackoffRetryTimer()
{
  return self;
}

id sub_25B1CC08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W4>, nw_browser_t *a4@<X8>)
{
  uint64_t v6 = sub_25B1CC310(a1, a2);
  char v7 = (void *)sub_25B290590();
  char v8 = (const char *)objc_msgSend(v7, sel_UTF8String);
  id result = v7;
  if (v8)
  {
    application_service = nw_browse_descriptor_create_application_service(v8);
    nw_browse_descriptor_set_browse_scope();
    if (a3 == 2 || a3 == 1) {
      nw_browse_descriptor_set_device_types();
    }
    nw_browser_t v11 = nw_browser_create(application_service, v6);
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_25B290190();
    __swift_project_value_buffer(v12, (uint64_t)qword_26A4EB168);
    swift_unknownObjectRetain_n();
    uint64_t v13 = sub_25B290160();
    os_log_type_t v14 = sub_25B2908A0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v19 = v16;
      *(_DWORD *)uint64_t v15 = 136446210;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD30);
      uint64_t v17 = sub_25B290600();
      sub_25B288E98(v17, v18, &v19);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v13, v14, "Browser created %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v16, -1, -1);
      MEMORY[0x261160890](v15, -1, -1);
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
      swift_unknownObjectRelease_n();
    }
    id result = (id)swift_unknownObjectRelease();
    *a4 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

nw_parameters_t sub_25B1CC310(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD38);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  nw_parameters_t application_service = nw_parameters_create_application_service();
  xpc_object_t v7 = xpc_array_create(0, 0);
  size_t v8 = sub_25B2901A0();
  xpc_array_set_string(v7, v8, "com.apple.rapport.browse");
  xpc_object_t v9 = xpc_array_create(0, 0);
  size_t v10 = sub_25B2901A0();
  xpc_array_set_string(v9, v10, "RapportBrowseAgent");
  nw_parameters_set_required_netagent_classes();
  if (a2)
  {
    swift_unknownObjectRetain();
    sub_25B2902E0();
    uint64_t v11 = sub_25B2902F0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11) == 1)
    {
      sub_25B1CC52C((uint64_t)v5);
    }
    else
    {
      sub_25B2902D0();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v5, v11);
    }
    nw_parameters_set_application_id();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  nw_parameters_set_include_screen_off_devices();
  nw_parameters_set_include_ble();
  swift_unknownObjectRelease();
  xpc_object_t v13 = xpc_array_create(0, 0);
  size_t v14 = sub_25B2901A0();
  xpc_array_set_uint64(v13, v14, 0x3E9uLL);
  nw_parameters_set_preferred_interface_subtypes();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return application_service;
}

uint64_t sub_25B1CC52C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL static PersonaMonitorEvent.DeviceEvent.EventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PersonaMonitorEvent.DeviceEvent.EventType.hash(into:)()
{
  return sub_25B291220();
}

uint64_t PersonaMonitorEvent.DeviceEvent.EventType.hashValue.getter()
{
  return sub_25B291260();
}

uint64_t PersonaMonitorEvent.DeviceEvent.deviceID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PersonaMonitorEvent.DeviceEvent.deviceID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PersonaMonitorEvent.DeviceEvent.deviceID.modify())()
{
  return nullsub_1;
}

uint64_t PersonaMonitorEvent.DeviceEvent.personaID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PersonaMonitorEvent.DeviceEvent.personaID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PersonaMonitorEvent.DeviceEvent.personaID.modify())()
{
  return nullsub_1;
}

void PersonaMonitorEvent.DeviceEvent.eventType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *PersonaMonitorEvent.DeviceEvent.eventType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*PersonaMonitorEvent.DeviceEvent.eventType.modify())()
{
  return nullsub_1;
}

unint64_t sub_25B1CC764()
{
  unint64_t result = qword_26A4DAD40;
  if (!qword_26A4DAD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAD40);
  }
  return result;
}

uint64_t sub_25B1CC7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 0x80) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = vars8;
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for PersonaMonitorEvent(uint64_t a1)
{
  return sub_25B1CC80C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_25B1CC80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 0x80) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = vars8;
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PersonaMonitorEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_25B1CC7B8(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PersonaMonitorEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_25B1CC7B8(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_25B1CC80C(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PersonaMonitorEvent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_25B1CC80C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonaMonitorEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for PersonaMonitorEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_25B1CCA30(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_25B1CCA3C(uint64_t result)
{
  *(unsigned char *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_25B1CCA4C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for PersonaMonitorEvent()
{
  return &type metadata for PersonaMonitorEvent;
}

uint64_t destroy for PairedDevice()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PairedDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PairedDevice(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for PairedDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PairedDevice(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PairedDevice(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonaMonitorEvent.DeviceEvent()
{
  return &type metadata for PersonaMonitorEvent.DeviceEvent;
}

unsigned char *storeEnumTagSinglePayload for PersonaMonitorEvent.DeviceEvent.EventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B1CCD24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonaMonitorEvent.DeviceEvent.EventType()
{
  return &type metadata for PersonaMonitorEvent.DeviceEvent.EventType;
}

uint64_t dispatch thunk of PersonaMonitoring.eventPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PersonaMonitoring.monitor()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PersonaMonitoring.personaID(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  long long v31 = a2[8];
  long long v32 = a2[9];
  long long v33 = a2[10];
  long long v27 = a2[4];
  long long v28 = a2[5];
  long long v29 = a2[6];
  long long v30 = a2[7];
  long long v23 = *a2;
  long long v24 = a2[1];
  long long v25 = a2[2];
  long long v26 = a2[3];
  uint64_t v12 = *a5;
  uint64_t v13 = a5[1];
  uint64_t v14 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a7, a1, v14);
  uint64_t v15 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v16 = (_OWORD *)(a7 + v15[5]);
  v16[8] = v31;
  v16[9] = v32;
  v16[10] = v33;
  v16[4] = v27;
  v16[5] = v28;
  v16[6] = v29;
  v16[7] = v30;
  *uint64_t v16 = v23;
  v16[1] = v24;
  long long v16[2] = v25;
  v16[3] = v26;
  uint64_t v17 = a7 + v15[6];
  uint64_t v18 = sub_25B290000();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v22)((void *)(v18 - 8), v17, a3, v18);
  v22(a7 + v15[7], a4, v18);
  uint64_t v19 = (void *)(a7 + v15[8]);
  void *v19 = v12;
  v19[1] = v13;
  uint64_t v20 = a7 + v15[9];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v22)(v20, a6, v18);
}

BOOL PairingRelationship.isPaired.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PairingRelationship() + 32) + 8) != 0;
}

uint64_t sub_25B1CCF80()
{
  uint64_t result = 0x6375646F72746E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E6972696170;
      break;
    case 2:
      uint64_t result = 0x646572696170;
      break;
    case 3:
      uint64_t result = 0x6E6974617267696DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B1CD014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B1D06CC(a1, a2);
  *a3 = result;
  return result;
}

void sub_25B1CD03C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_25B1CD048(uint64_t a1)
{
  unint64_t v2 = sub_25B1CEA2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1CD084(uint64_t a1)
{
  unint64_t v2 = sub_25B1CEA2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1CD0C0(uint64_t a1)
{
  unint64_t v2 = sub_25B1CEB7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1CD0FC(uint64_t a1)
{
  unint64_t v2 = sub_25B1CEB7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1CD138()
{
  return 1836020326;
}

uint64_t sub_25B1CD148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1836020326 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25B290FB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25B1CD1D0(uint64_t a1)
{
  unint64_t v2 = sub_25B1CEA80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1CD20C(uint64_t a1)
{
  unint64_t v2 = sub_25B1CEA80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1CD248(uint64_t a1)
{
  unint64_t v2 = sub_25B1CEAD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1CD284(uint64_t a1)
{
  unint64_t v2 = sub_25B1CEAD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1CD2C0(uint64_t a1)
{
  unint64_t v2 = sub_25B1CEB28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1CD2FC(uint64_t a1)
{
  unint64_t v2 = sub_25B1CEB28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PairingRelationship.State.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD48);
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x270FA5388](v4);
  long long v30 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD50);
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  MEMORY[0x270FA5388](v6);
  long long v27 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD58);
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD60);
  uint64_t v24 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD68);
  uint64_t v33 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *v2;
  uint64_t v18 = v2[1];
  uint64_t v23 = v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1CEA2C();
  sub_25B291290();
  switch(v18)
  {
    case 0:
      char v34 = 0;
      sub_25B1CEB7C();
      sub_25B290D10();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v16, v14);
    case 1:
      char v35 = 1;
      sub_25B1CEB28();
      sub_25B290D10();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v26);
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v16, v14);
    case 2:
      char v36 = 2;
      sub_25B1CEAD4();
      uint64_t v19 = v27;
      sub_25B290D10();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v16, v14);
  }
  char v37 = 3;
  sub_25B1CEA80();
  uint64_t v21 = v30;
  sub_25B290D10();
  uint64_t v22 = v32;
  sub_25B290D40();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v16, v14);
}

uint64_t PairingRelationship.State.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAD98);
  uint64_t v44 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v46 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DADA0);
  uint64_t v38 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v45 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DADA8);
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DADB0);
  uint64_t v39 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DADB8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_25B1CEA2C();
  uint64_t v15 = v49;
  sub_25B291280();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  }
  uint64_t v16 = v9;
  uint64_t v36 = v7;
  uint64_t v37 = 0;
  uint64_t v17 = v6;
  uint64_t v19 = v45;
  uint64_t v18 = v46;
  uint64_t v49 = v11;
  uint64_t v20 = v47;
  uint64_t v21 = sub_25B290CF0();
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v25 = sub_25B290AF0();
    swift_allocError();
    long long v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F360);
    *long long v27 = &type metadata for PairingRelationship.State;
    sub_25B290C50();
    sub_25B290AD0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  }
  switch(*(unsigned char *)(v21 + 32))
  {
    case 1:
      char v51 = 1;
      sub_25B1CEB28();
      uint64_t v28 = v37;
      sub_25B290C40();
      if (v28) {
        goto LABEL_12;
      }
      uint64_t v37 = 0;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v10);
      uint64_t v24 = 0;
      uint64_t v23 = 1;
      goto LABEL_16;
    case 2:
      char v52 = 2;
      sub_25B1CEAD4();
      uint64_t v29 = v37;
      sub_25B290C40();
      if (v29) {
        goto LABEL_12;
      }
      uint64_t v37 = 0;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v10);
      uint64_t v24 = 0;
      uint64_t v23 = 2;
      goto LABEL_16;
    case 3:
      char v53 = 3;
      sub_25B1CEA80();
      uint64_t v30 = v37;
      sub_25B290C40();
      if (v30) {
        goto LABEL_12;
      }
      uint64_t v32 = v41;
      uint64_t v33 = sub_25B290CA0();
      uint64_t v34 = v49;
      uint64_t v37 = 0;
      uint64_t v24 = v33;
      uint64_t v23 = v35;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v10);
      goto LABEL_16;
    default:
      char v50 = 0;
      sub_25B1CEB7C();
      uint64_t v22 = v37;
      sub_25B290C40();
      uint64_t v23 = v22;
      if (v22)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v10);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
      }
      uint64_t v37 = 0;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v10);
      uint64_t v24 = 0;
LABEL_16:
      *uint64_t v20 = v24;
      v20[1] = v23;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
      break;
  }
  return result;
}

uint64_t sub_25B1CDED8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PairingRelationship.State.init(from:)(a1, a2);
}

uint64_t sub_25B1CDEF0(void *a1)
{
  return PairingRelationship.State.encode(to:)(a1);
}

uint64_t PairingRelationship.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25B290080();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t PairingRelationship.id.setter(uint64_t a1)
{
  uint64_t v3 = sub_25B290080();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*PairingRelationship.id.modify())()
{
  return nullsub_1;
}

uint64_t PairingRelationship.remoteDevice.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = (_OWORD *)(v1 + *(int *)(type metadata accessor for PairingRelationship() + 20));
  long long v4 = v3[7];
  long long v5 = v3[9];
  long long v26 = v3[8];
  long long v27 = v5;
  long long v6 = v3[9];
  long long v28 = v3[10];
  long long v7 = v3[3];
  long long v8 = v3[5];
  long long v22 = v3[4];
  long long v9 = v22;
  long long v23 = v8;
  long long v10 = v3[5];
  long long v11 = v3[7];
  long long v24 = v3[6];
  long long v12 = v24;
  long long v25 = v11;
  long long v13 = v3[1];
  long long v14 = v3[3];
  long long v20 = v3[2];
  long long v15 = v20;
  long long v21 = v14;
  long long v16 = v3[1];
  v19[0] = *v3;
  long long v17 = v19[0];
  v19[1] = v16;
  a1[8] = v26;
  a1[9] = v6;
  a1[10] = v3[10];
  a1[4] = v9;
  a1[5] = v10;
  a1[6] = v12;
  a1[7] = v4;
  *a1 = v17;
  a1[1] = v13;
  a1[2] = v15;
  a1[3] = v7;
  return sub_25B1172F8((uint64_t)v19);
}

__n128 PairingRelationship.remoteDevice.setter(uint64_t a1)
{
  uint64_t v3 = (_OWORD *)(v1 + *(int *)(type metadata accessor for PairingRelationship() + 20));
  long long v4 = v3[9];
  v14[8] = v3[8];
  v14[9] = v4;
  v14[10] = v3[10];
  long long v5 = v3[5];
  v14[4] = v3[4];
  v14[5] = v5;
  long long v6 = v3[7];
  v14[6] = v3[6];
  v14[7] = v6;
  long long v7 = v3[3];
  v14[2] = v3[2];
  v14[3] = v7;
  long long v8 = v3[1];
  v14[0] = *v3;
  v14[1] = v8;
  sub_25B11DEBC((uint64_t)v14);
  long long v9 = *(_OWORD *)(a1 + 144);
  v3[8] = *(_OWORD *)(a1 + 128);
  v3[9] = v9;
  v3[10] = *(_OWORD *)(a1 + 160);
  long long v10 = *(_OWORD *)(a1 + 80);
  v3[4] = *(_OWORD *)(a1 + 64);
  v3[5] = v10;
  long long v11 = *(_OWORD *)(a1 + 112);
  v3[6] = *(_OWORD *)(a1 + 96);
  v3[7] = v11;
  long long v12 = *(_OWORD *)(a1 + 16);
  *uint64_t v3 = *(_OWORD *)a1;
  v3[1] = v12;
  __n128 result = *(__n128 *)(a1 + 48);
  v3[2] = *(_OWORD *)(a1 + 32);
  v3[3] = result;
  return result;
}

uint64_t (*PairingRelationship.remoteDevice.modify())(void)
{
  return nullsub_1;
}

uint64_t PairingRelationship.lastIncomingConnectionDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 24);
  uint64_t v4 = sub_25B290000();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PairingRelationship.lastIncomingConnectionDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 24);
  uint64_t v4 = sub_25B290000();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PairingRelationship.lastIncomingConnectionDate.modify())(void)
{
  return nullsub_1;
}

uint64_t PairingRelationship.lastOutgoingConnectionDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 28);
  uint64_t v4 = sub_25B290000();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PairingRelationship.lastOutgoingConnectionDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 28);
  uint64_t v4 = sub_25B290000();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PairingRelationship.lastOutgoingConnectionDate.modify())(void)
{
  return nullsub_1;
}

uint64_t PairingRelationship.state.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PairingRelationship() + 32));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_25B120090(v4, v5);
}

uint64_t PairingRelationship.state.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 32);
  uint64_t result = sub_25B1200A4(*(void *)v4, *(void *)(v4 + 8));
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = v3;
  return result;
}

uint64_t (*PairingRelationship.state.modify())(void)
{
  return nullsub_1;
}

uint64_t PairingRelationship.initialPairingDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 36);
  uint64_t v4 = sub_25B290000();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PairingRelationship.initialPairingDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 36);
  uint64_t v4 = sub_25B290000();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PairingRelationship.initialPairingDate.modify())(void)
{
  return nullsub_1;
}

uint64_t PairingRelationship.description.getter()
{
  return 0;
}

uint64_t _s16ReplicatorEngine19PairingRelationshipV5StateO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      unint64_t v3 = 0;
      char v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      unint64_t v3 = 1;
      char v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 != 2)
  {
    if (v5 >= 3)
    {
      if (v2 == v4 && v3 == v5) {
        char v6 = 1;
      }
      else {
        char v6 = sub_25B290FB0();
      }
      goto LABEL_12;
    }
LABEL_11:
    char v6 = 0;
LABEL_12:
    sub_25B120090(v4, v5);
    sub_25B120090(v2, v3);
    goto LABEL_13;
  }
  if (v5 != 2) {
    goto LABEL_11;
  }
  char v6 = 1;
  unint64_t v3 = 2;
LABEL_13:
  sub_25B1200A4(v2, v3);
  sub_25B1200A4(v4, v5);
  return v6 & 1;
}

uint64_t type metadata accessor for PairingRelationship()
{
  uint64_t result = qword_26A4D95F8;
  if (!qword_26A4D95F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_25B1CEA2C()
{
  unint64_t result = qword_26A4DAD70;
  if (!qword_26A4DAD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAD70);
  }
  return result;
}

unint64_t sub_25B1CEA80()
{
  unint64_t result = qword_26A4DAD78;
  if (!qword_26A4DAD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAD78);
  }
  return result;
}

unint64_t sub_25B1CEAD4()
{
  unint64_t result = qword_26A4DAD80;
  if (!qword_26A4DAD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAD80);
  }
  return result;
}

unint64_t sub_25B1CEB28()
{
  unint64_t result = qword_26A4DAD88;
  if (!qword_26A4DAD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAD88);
  }
  return result;
}

unint64_t sub_25B1CEB7C()
{
  unint64_t result = qword_26A4DAD90;
  if (!qword_26A4DAD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAD90);
  }
  return result;
}

uint64_t _s16ReplicatorEngine19PairingRelationshipV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_25B290030() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for PairingRelationship();
  unint64_t v5 = (_OWORD *)(a1 + *(int *)(v4 + 20));
  long long v6 = v5[9];
  v20[8] = v5[8];
  v20[9] = v6;
  v20[10] = v5[10];
  long long v7 = v5[5];
  v20[4] = v5[4];
  v20[5] = v7;
  long long v8 = v5[7];
  v20[6] = v5[6];
  v20[7] = v8;
  long long v9 = v5[3];
  v20[2] = v5[2];
  v20[3] = v9;
  long long v10 = v5[1];
  v20[0] = *v5;
  v20[1] = v10;
  long long v11 = (_OWORD *)(a2 + *(int *)(v4 + 20));
  long long v12 = v11[9];
  v19[8] = v11[8];
  v19[9] = v12;
  v19[10] = v11[10];
  long long v13 = v11[5];
  v19[4] = v11[4];
  v19[5] = v13;
  long long v14 = v11[7];
  v19[6] = v11[6];
  v19[7] = v14;
  long long v15 = v11[1];
  v19[0] = *v11;
  v19[1] = v15;
  long long v16 = v11[3];
  _OWORD v19[2] = v11[2];
  v19[3] = v16;
  if ((_s16ReplicatorEngine16DeviceDescriptorV2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v19) & 1) == 0) {
    return 0;
  }
  if ((sub_25B28FFC0() & 1) == 0) {
    return 0;
  }
  if ((sub_25B28FFC0() & 1) == 0) {
    return 0;
  }
  uint64_t v17 = *(int *)(v4 + 32);
  v20[0] = *(_OWORD *)(a1 + v17);
  v19[0] = *(_OWORD *)(a2 + v17);
  if ((_s16ReplicatorEngine19PairingRelationshipV5StateO2eeoiySbAE_AEtFZ_0((uint64_t *)v20, (uint64_t *)v19) & 1) == 0) {
    return 0;
  }
  return sub_25B28FFC0();
}

uint64_t sub_25B1CED18()
{
  return sub_25B1CED60(&qword_26A4D9220, MEMORY[0x263F07508]);
}

uint64_t sub_25B1CED60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for PairingRelationship(char *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25B290080();
    (*(void (**)(char *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    long long v9 = &a1[v8];
    long long v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
    *(void *)long long v9 = *(void *)((char *)a2 + v8);
    *((void *)v9 + 1) = v11;
    uint64_t v12 = *(void *)((char *)a2 + v8 + 24);
    *((void *)v9 + 2) = *(void *)((char *)a2 + v8 + 16);
    *((void *)v9 + 3) = v12;
    *((_OWORD *)v9 + 2) = *(_OWORD *)((char *)a2 + v8 + 32);
    v9[48] = *((unsigned char *)a2 + v8 + 48);
    *(_OWORD *)(v9 + 56) = *(_OWORD *)((char *)a2 + v8 + 56);
    *(_OWORD *)(v9 + 72) = *(_OWORD *)((char *)a2 + v8 + 72);
    *((_WORD *)v9 + 44) = *(_WORD *)((char *)a2 + v8 + 88);
    uint64_t v13 = *(void *)((char *)a2 + v8 + 104);
    *((void *)v9 + 12) = *(void *)((char *)a2 + v8 + 96);
    *((void *)v9 + 13) = v13;
    long long v14 = (void *)((char *)a2 + v8 + 112);
    unint64_t v15 = *(void *)((char *)a2 + v8 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15 >> 60 == 15)
    {
      *((_OWORD *)v9 + 7) = *(_OWORD *)v14;
    }
    else
    {
      uint64_t v17 = *v14;
      sub_25B114300(*v14, v15);
      *((void *)v9 + 14) = v17;
      *((void *)v9 + 15) = v15;
    }
    uint64_t v18 = v10[17];
    *((void *)v9 + 16) = v10[16];
    *((void *)v9 + 17) = v18;
    uint64_t v19 = v10[19];
    *((void *)v9 + 18) = v10[18];
    *((void *)v9 + 19) = v19;
    uint64_t v20 = v10[21];
    *((void *)v9 + 20) = v10[20];
    *((void *)v9 + 21) = v20;
    uint64_t v21 = a3[6];
    uint64_t v30 = &a1[v21];
    long long v22 = (char *)a2 + v21;
    uint64_t v23 = sub_25B290000();
    long long v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v30, v22, v23);
    v24(&a1[a3[7]], (char *)a2 + a3[7], v23);
    uint64_t v25 = a3[8];
    long long v26 = &a1[v25];
    long long v27 = (void *)((char *)a2 + v25);
    unint64_t v28 = v27[1];
    if (v28 >= 3)
    {
      *(void *)long long v26 = *v27;
      *((void *)v26 + 1) = v28;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)long long v26 = *(_OWORD *)v27;
    }
    v24(&a1[a3[9]], (char *)a2 + a3[9], v23);
  }
  return a1;
}

uint64_t destroy for PairingRelationship(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(v5 + 120);
  if (v6 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v5 + 112), v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_25B290000();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v11)((void *)(v8 - 8), v7, v8);
  v11(a1 + a2[7], v8);
  if (*(void *)(a1 + a2[8] + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = a1 + a2[9];
  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v8);
}

uint64_t initializeWithCopy for PairingRelationship(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v29 = a3;
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  uint64_t v11 = *(void *)(a2 + v7 + 24);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  *(void *)(v8 + 24) = v11;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + v7 + 32);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a2 + v7 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(a2 + v7 + 72);
  *(_WORD *)(v8 + 88) = *(_WORD *)(a2 + v7 + 88);
  uint64_t v12 = *(void *)(a2 + v7 + 104);
  *(void *)(v8 + 96) = *(void *)(a2 + v7 + 96);
  *(void *)(v8 + 104) = v12;
  uint64_t v13 = (uint64_t *)(a2 + v7 + 112);
  unint64_t v14 = *(void *)(a2 + v7 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14 >> 60 == 15)
  {
    *(_OWORD *)(v8 + 112) = *(_OWORD *)v13;
  }
  else
  {
    uint64_t v15 = *v13;
    sub_25B114300(*v13, v14);
    *(void *)(v8 + 112) = v15;
    *(void *)(v8 + 120) = v14;
  }
  uint64_t v16 = v9[17];
  *(void *)(v8 + 128) = v9[16];
  *(void *)(v8 + 136) = v16;
  uint64_t v17 = v9[19];
  *(void *)(v8 + 144) = v9[18];
  *(void *)(v8 + 152) = v17;
  uint64_t v18 = v9[21];
  *(void *)(v8 + 160) = v9[20];
  *(void *)(v8 + 168) = v18;
  uint64_t v19 = v29[6];
  uint64_t v28 = a1 + v19;
  uint64_t v20 = a2 + v19;
  uint64_t v21 = sub_25B290000();
  long long v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v28, v20, v21);
  v22(a1 + v29[7], a2 + v29[7], v21);
  uint64_t v23 = v29[8];
  long long v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  unint64_t v26 = v25[1];
  if (v26 >= 3)
  {
    *long long v24 = *v25;
    v24[1] = v26;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)long long v24 = *(_OWORD *)v25;
  }
  v22(a1 + v29[9], a2 + v29[9], v21);
  return a1;
}

uint64_t assignWithCopy for PairingRelationship(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  long long v10 = *(_OWORD *)(v9 + 56);
  long long v11 = *(_OWORD *)(v9 + 72);
  *(_WORD *)(v8 + 88) = *(_WORD *)(v9 + 88);
  *(_OWORD *)(v8 + 72) = v11;
  *(_OWORD *)(v8 + 56) = v10;
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)(v9 + 112);
  unint64_t v13 = *(void *)(v9 + 120);
  if (*(void *)(v8 + 120) >> 60 == 15)
  {
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *v12;
      sub_25B114300(*v12, *(void *)(v9 + 120));
      *(void *)(v8 + 112) = v14;
      *(void *)(v8 + 120) = v13;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v13 >> 60 == 15)
  {
    sub_25B1973E4(v8 + 112);
LABEL_6:
    *(_OWORD *)(v8 + 112) = *(_OWORD *)v12;
    goto LABEL_8;
  }
  uint64_t v15 = *v12;
  sub_25B114300(*v12, *(void *)(v9 + 120));
  uint64_t v16 = *(void *)(v8 + 112);
  unint64_t v17 = *(void *)(v8 + 120);
  *(void *)(v8 + 112) = v15;
  *(void *)(v8 + 120) = v13;
  sub_25B10DFF0(v16, v17);
LABEL_8:
  *(void *)(v8 + 128) = *(void *)(v9 + 128);
  *(void *)(v8 + 136) = *(void *)(v9 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 144) = *(void *)(v9 + 144);
  *(void *)(v8 + 152) = *(void *)(v9 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 160) = *(void *)(v9 + 160);
  *(void *)(v8 + 168) = *(void *)(v9 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[6];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_25B290000();
  long long v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24);
  v22(v19, v20, v21);
  v22(a1 + a3[7], a2 + a3[7], v21);
  uint64_t v23 = a3[8];
  long long v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  unint64_t v26 = *(void *)(a1 + v23 + 8);
  unint64_t v27 = *(void *)(a2 + v23 + 8);
  if (v26 >= 3)
  {
    if (v27 >= 3)
    {
      *long long v24 = *v25;
      v24[1] = v25[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_25B1CF6A8((uint64_t)v24);
    goto LABEL_13;
  }
  if (v27 < 3)
  {
LABEL_13:
    *(_OWORD *)long long v24 = *(_OWORD *)v25;
    goto LABEL_15;
  }
  *long long v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
LABEL_15:
  v22(a1 + a3[9], a2 + a3[9], v21);
  return a1;
}

uint64_t sub_25B1CF6A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DADC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for PairingRelationship(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  long long v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[9];
  v9[8] = v10[8];
  v9[9] = v11;
  v9[10] = v10[10];
  long long v12 = v10[5];
  v9[4] = v10[4];
  v9[5] = v12;
  long long v13 = v10[7];
  void v9[6] = v10[6];
  v9[7] = v13;
  long long v14 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v14;
  long long v15 = v10[3];
  v9[2] = v10[2];
  v9[3] = v15;
  uint64_t v16 = a1 + v8;
  uint64_t v17 = a2 + v8;
  uint64_t v18 = sub_25B290000();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v19(a1 + a3[7], a2 + a3[7], v18);
  uint64_t v20 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v19(a1 + v20, a2 + v20, v18);
  return a1;
}

uint64_t assignWithTake for PairingRelationship(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
  *(_WORD *)(v8 + 88) = *(_WORD *)(v9 + 88);
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  swift_bridgeObjectRelease();
  long long v12 = (_OWORD *)(v9 + 112);
  unint64_t v13 = *(void *)(v8 + 120);
  if (v13 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v14 = *(void *)(v9 + 120);
  if (v14 >> 60 == 15)
  {
    sub_25B1973E4(v8 + 112);
LABEL_4:
    *(_OWORD *)(v8 + 112) = *v12;
    goto LABEL_6;
  }
  uint64_t v15 = *(void *)(v8 + 112);
  *(void *)(v8 + 112) = *(void *)v12;
  *(void *)(v8 + 120) = v14;
  sub_25B10DFF0(v15, v13);
LABEL_6:
  uint64_t v16 = *(void *)(v9 + 136);
  *(void *)(v8 + 128) = *(void *)(v9 + 128);
  *(void *)(v8 + 136) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v9 + 152);
  *(void *)(v8 + 144) = *(void *)(v9 + 144);
  *(void *)(v8 + 152) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v9 + 168);
  *(void *)(v8 + 160) = *(void *)(v9 + 160);
  *(void *)(v8 + 168) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[6];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_25B290000();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40);
  v23(v20, v21, v22);
  v23(a1 + a3[7], a2 + a3[7], v22);
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)(a1 + v24);
  unint64_t v26 = (void *)(a2 + v24);
  if (*(void *)(a1 + v24 + 8) >= 3uLL)
  {
    unint64_t v27 = v26[1];
    if (v27 >= 3)
    {
      *uint64_t v25 = *v26;
      v25[1] = v27;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_25B1CF6A8((uint64_t)v25);
  }
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
LABEL_11:
  v23(a1 + a3[9], a2 + a3[9], v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for PairingRelationship(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B1CFA98);
}

uint64_t sub_25B1CFA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_25B290000();
    long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for PairingRelationship(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B1CFBDC);
}

uint64_t sub_25B1CFBDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_25B290080();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_25B290000();
    long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_25B1CFD0C()
{
  uint64_t result = sub_25B290080();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25B290000();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t destroy for PairingRelationship.State(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s16ReplicatorEngine19PairingRelationshipV5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for PairingRelationship.State(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PairingRelationship.State(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PairingRelationship.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PairingRelationship.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PairingRelationship.State()
{
  return &type metadata for PairingRelationship.State;
}

uint64_t getEnumTagSinglePayload for PairingRelationship.State.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PairingRelationship.State.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B1D0170);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PairingRelationship.State.CodingKeys()
{
  return &type metadata for PairingRelationship.State.CodingKeys;
}

ValueMetadata *type metadata accessor for PairingRelationship.State.IntroducedCodingKeys()
{
  return &type metadata for PairingRelationship.State.IntroducedCodingKeys;
}

ValueMetadata *type metadata accessor for PairingRelationship.State.PairingCodingKeys()
{
  return &type metadata for PairingRelationship.State.PairingCodingKeys;
}

ValueMetadata *type metadata accessor for PairingRelationship.State.PairedCodingKeys()
{
  return &type metadata for PairingRelationship.State.PairedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PairingRelationship.State.MigratingCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B1D0274);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PairingRelationship.State.MigratingCodingKeys()
{
  return &type metadata for PairingRelationship.State.MigratingCodingKeys;
}

unint64_t sub_25B1D02B0()
{
  unint64_t result = qword_26A4DADC8;
  if (!qword_26A4DADC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DADC8);
  }
  return result;
}

unint64_t sub_25B1D0308()
{
  unint64_t result = qword_26A4DADD0;
  if (!qword_26A4DADD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DADD0);
  }
  return result;
}

unint64_t sub_25B1D0360()
{
  unint64_t result = qword_26A4DADD8;
  if (!qword_26A4DADD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DADD8);
  }
  return result;
}

unint64_t sub_25B1D03B8()
{
  unint64_t result = qword_26A4DADE0;
  if (!qword_26A4DADE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DADE0);
  }
  return result;
}

unint64_t sub_25B1D0410()
{
  unint64_t result = qword_26A4DADE8;
  if (!qword_26A4DADE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DADE8);
  }
  return result;
}

unint64_t sub_25B1D0468()
{
  unint64_t result = qword_26A4DADF0;
  if (!qword_26A4DADF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DADF0);
  }
  return result;
}

unint64_t sub_25B1D04C0()
{
  unint64_t result = qword_26A4DADF8;
  if (!qword_26A4DADF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DADF8);
  }
  return result;
}

unint64_t sub_25B1D0518()
{
  unint64_t result = qword_26A4DAE00;
  if (!qword_26A4DAE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE00);
  }
  return result;
}

unint64_t sub_25B1D0570()
{
  unint64_t result = qword_26A4DAE08;
  if (!qword_26A4DAE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE08);
  }
  return result;
}

unint64_t sub_25B1D05C8()
{
  unint64_t result = qword_26A4DAE10;
  if (!qword_26A4DAE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE10);
  }
  return result;
}

unint64_t sub_25B1D0620()
{
  unint64_t result = qword_26A4DAE18;
  if (!qword_26A4DAE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE18);
  }
  return result;
}

unint64_t sub_25B1D0678()
{
  unint64_t result = qword_26A4DAE20;
  if (!qword_26A4DAE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE20);
  }
  return result;
}

uint64_t sub_25B1D06CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6375646F72746E69 && a2 == 0xEA00000000006465;
  if (v2 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6972696170 && a2 == 0xE700000000000000 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646572696170 && a2 == 0xE600000000000000 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6974617267696DLL && a2 == 0xE900000000000067)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_25B1D089C()
{
  return sub_25B291260();
}

uint64_t sub_25B1D08E4()
{
  return sub_25B291240();
}

uint64_t sub_25B1D0910()
{
  return sub_25B291260();
}

uint64_t sub_25B1D0954@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_25B1D2A60(*a1);
  *a2 = result;
  return result;
}

void sub_25B1D0980(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_25B1D098C()
{
  return sub_25B290710();
}

uint64_t sub_25B1D09EC()
{
  return sub_25B2906E0();
}

uint64_t sub_25B1D0A3C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v0 - 8);
  BOOL v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_25B290080();
  __swift_allocate_value_buffer(v3, qword_26A4EB1F8);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_26A4EB1F8);
  sub_25B290010();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_25B1D0B6C@<X0>(int a1@<W0>, unint64_t a2@<X1>, unint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v100 = *MEMORY[0x263EF8340];
  uint64_t v97 = sub_25B290080();
  uint64_t v8 = *(void *)(v97 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v97);
  uint64_t v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v86 - v12;
  unint64_t v98 = a3;
  long long v95 = (char *)&v86 - v12;
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 > (uint64_t)a2 >> 32)
      {
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      long long v94 = v11;
      sub_25B114300(a2, a3);
      uint64_t v17 = sub_25B28FD00();
      if (!v17)
      {
        sub_25B28FD20();
        __break(1u);
        goto LABEL_61;
      }
      uint64_t v18 = v17;
      uint64_t v19 = sub_25B28FD30();
      uint64_t v20 = (int)a2 - v19;
      if (__OFSUB__((int)a2, v19))
      {
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
      }
      sub_25B28FD20();
      long long v96 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v96(v13, v18 + v20, v97);
      sub_25B10DFF0(a2, a3);
      sub_25B114300(a2, a3);
      uint64_t v21 = sub_25B28FD00();
      if (!v21)
      {
LABEL_61:
        sub_25B28FD20();
        __break(1u);
        goto LABEL_62;
      }
      uint64_t v22 = v21;
      uint64_t v23 = sub_25B28FD30();
      uint64_t v24 = (int)a2 - v23;
      if (__OFSUB__((int)a2, v23)) {
        goto LABEL_49;
      }
      sub_25B28FD20();
      v96(v94, v22 + v24 + 16, v97);
      sub_25B10DFF0(a2, a3);
      sub_25B114300(a2, a3);
      uint64_t v25 = sub_25B28FD00();
      if (!v25)
      {
LABEL_62:
        sub_25B28FD20();
        __break(1u);
        goto LABEL_63;
      }
      uint64_t v26 = v25;
      uint64_t v27 = sub_25B28FD30();
      uint64_t v28 = (int)a2 - v27;
      if (__OFSUB__((int)a2, v27)) {
        goto LABEL_51;
      }
      sub_25B28FD20();
      LODWORD(v93) = *(_DWORD *)(v26 + v28 + 32);
      sub_25B10DFF0(a2, a3);
      sub_25B114300(a2, a3);
      uint64_t v29 = sub_25B28FD00();
      if (!v29)
      {
LABEL_63:
        sub_25B28FD20();
        __break(1u);
        goto LABEL_64;
      }
      uint64_t v30 = v29;
      uint64_t v31 = sub_25B28FD30();
      uint64_t v32 = (int)a2 - v31;
      if (__OFSUB__((int)a2, v31)) {
        goto LABEL_53;
      }
      sub_25B28FD20();
      LODWORD(v13) = *(_DWORD *)(v30 + v32 + 36);
      sub_25B10DFF0(a2, a3);
      sub_25B114300(a2, a3);
      uint64_t v33 = sub_25B28FD00();
      if (!v33)
      {
LABEL_64:
        sub_25B28FD20();
        __break(1u);
        goto LABEL_65;
      }
      uint64_t v34 = v33;
      uint64_t v35 = sub_25B28FD30();
      uint64_t v36 = (int)a2 - v35;
      if (__OFSUB__((int)a2, v35)) {
        goto LABEL_55;
      }
      sub_25B28FD20();
      LODWORD(v92) = *(_DWORD *)(v34 + v36 + 40);
      sub_25B10DFF0(a2, a3);
      sub_25B114300(a2, a3);
      uint64_t v37 = sub_25B28FD00();
      if (!v37)
      {
LABEL_65:
        sub_25B28FD20();
        __break(1u);
        goto LABEL_66;
      }
      uint64_t v38 = v37;
      uint64_t v39 = sub_25B28FD30();
      uint64_t v14 = (int)a2 - v39;
      if (__OFSUB__((int)a2, v39)) {
        goto LABEL_57;
      }
      sub_25B28FD20();
      LODWORD(v14) = *(_DWORD *)(v38 + v14 + 44);
      sub_25B10DFF0(a2, a3);
      sub_25B114300(a2, a3);
      uint64_t v40 = sub_25B28FD00();
      if (!v40)
      {
LABEL_66:
        sub_25B28FD20();
        __break(1u);
LABEL_67:
        sub_25B28FD20();
        __break(1u);
LABEL_68:
        sub_25B28FD20();
        __break(1u);
LABEL_69:
        sub_25B28FD20();
        __break(1u);
LABEL_70:
        sub_25B28FD20();
        __break(1u);
LABEL_71:
        sub_25B28FD20();
        __break(1u);
LABEL_72:
        sub_25B28FD20();
        __break(1u);
LABEL_73:
        sub_25B28FD20();
        __break(1u);
        JUMPOUT(0x25B1D141CLL);
      }
      uint64_t v41 = v40;
      uint64_t v42 = sub_25B28FD30();
      uint64_t v15 = (char *)((int)a2 - v42);
      if (__OFSUB__((int)a2, v42)) {
        goto LABEL_59;
      }
      sub_25B28FD20();
      LODWORD(v15) = *(_DWORD *)&v15[v41 + 48];
      sub_25B10DFF0(a2, a3);
LABEL_34:
      uint64_t v11 = v94;
LABEL_36:
      if (qword_26A4DA040 != -1) {
        swift_once();
      }
      uint64_t v79 = v97;
      uint64_t v80 = __swift_project_value_buffer(v97, (uint64_t)qword_26A4EB1F8);
      v96(a4, v80, v79);
      sub_25B10DFF0(a2, v98);
      id v81 = (int *)type metadata accessor for NetworkSyncHeader(0);
      *(_DWORD *)&a4[v81[5]] = a1;
      unint64_t v82 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v82(&a4[v81[6]], v95, v79);
      uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v82)(&a4[v81[7]], v11, v79);
      *(_DWORD *)&a4[v81[8]] = v93;
      *(_DWORD *)&a4[v81[10]] = v92;
      *(_DWORD *)&a4[v81[11]] = v14;
      if (v13 >= 4) {
        char v84 = 0;
      }
      else {
        char v84 = (char)v13;
      }
      a4[v81[9]] = v84;
      if (v15 >= 3) {
        char v85 = 2;
      }
      else {
        char v85 = (char)v15;
      }
      a4[v81[12]] = v85;
      return result;
    case 2uLL:
      long long v94 = v11;
      uint64_t v43 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      uint64_t v44 = sub_25B28FD00();
      if (!v44) {
        goto LABEL_67;
      }
      uint64_t v45 = v44;
      uint64_t v46 = sub_25B28FD30();
      BOOL v47 = __OFSUB__(v43, v46);
      uint64_t v48 = v43 - v46;
      if (v47) {
        goto LABEL_46;
      }
      sub_25B28FD20();
      uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v49(v13, v45 + v48, v97);
      swift_release();
      swift_release();
      uint64_t v50 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      uint64_t v51 = sub_25B28FD00();
      if (!v51) {
        goto LABEL_68;
      }
      uint64_t v52 = v51;
      uint64_t v53 = sub_25B28FD30();
      BOOL v47 = __OFSUB__(v50, v53);
      uint64_t v54 = v50 - v53;
      if (v47) {
        goto LABEL_48;
      }
      sub_25B28FD20();
      v49(v94, v52 + v54 + 16, v97);
      swift_release();
      swift_release();
      uint64_t v55 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      uint64_t v56 = sub_25B28FD00();
      if (!v56) {
        goto LABEL_69;
      }
      uint64_t v57 = v56;
      uint64_t v58 = sub_25B28FD30();
      BOOL v47 = __OFSUB__(v55, v58);
      uint64_t v59 = v55 - v58;
      if (v47) {
        goto LABEL_50;
      }
      sub_25B28FD20();
      int v60 = *(_DWORD *)(v57 + v59 + 32);
      swift_release();
      swift_release();
      uint64_t v61 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      uint64_t v62 = sub_25B28FD00();
      if (!v62) {
        goto LABEL_70;
      }
      uint64_t v63 = v62;
      uint64_t v64 = sub_25B28FD30();
      BOOL v47 = __OFSUB__(v61, v64);
      uint64_t v65 = v61 - v64;
      if (v47) {
        goto LABEL_52;
      }
      sub_25B28FD20();
      LODWORD(v13) = *(_DWORD *)(v63 + v65 + 36);
      swift_release();
      swift_release();
      uint64_t v66 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      uint64_t v67 = sub_25B28FD00();
      if (!v67) {
        goto LABEL_71;
      }
      uint64_t v68 = v67;
      uint64_t v69 = sub_25B28FD30();
      BOOL v47 = __OFSUB__(v66, v69);
      uint64_t v70 = v66 - v69;
      if (v47) {
        goto LABEL_54;
      }
      sub_25B28FD20();
      LODWORD(v92) = *(_DWORD *)(v68 + v70 + 40);
      swift_release();
      swift_release();
      uint64_t v71 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      uint64_t v72 = sub_25B28FD00();
      if (!v72) {
        goto LABEL_72;
      }
      uint64_t v73 = v72;
      uint64_t v74 = sub_25B28FD30();
      BOOL v47 = __OFSUB__(v71, v74);
      uint64_t v14 = v71 - v74;
      if (v47) {
        goto LABEL_56;
      }
      LODWORD(v93) = v60;
      long long v96 = v49;
      sub_25B28FD20();
      LODWORD(v14) = *(_DWORD *)(v73 + v14 + 44);
      swift_release();
      swift_release();
      uint64_t v75 = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      uint64_t v76 = sub_25B28FD00();
      if (!v76) {
        goto LABEL_73;
      }
      uint64_t v77 = v76;
      uint64_t v78 = sub_25B28FD30();
      BOOL v47 = __OFSUB__(v75, v78);
      uint64_t v15 = (char *)(v75 - v78);
      if (v47) {
        goto LABEL_58;
      }
      sub_25B28FD20();
      LODWORD(v15) = *(_DWORD *)&v15[v77 + 48];
      swift_release();
      swift_release();
      goto LABEL_34;
    case 3uLL:
      memset(v99, 0, 14);
      uint64_t v15 = *(char **)(v8 + 16);
      uint64_t v14 = v97;
      ((void (*)(char *, void *, uint64_t))v15)((char *)&v86 - v12, v99, v97);
      memset(v99, 0, 14);
      long long v96 = (void (*)(char *, uint64_t, uint64_t))v15;
      ((void (*)(char *, uint64_t *, uint64_t))v15)(v11, &v100, v14);
      goto LABEL_36;
    default:
      v99[0] = a2;
      uint64_t v14 = a2 >> 16;
      uint64_t v13 = (char *)(a2 >> 24);
      uint64_t v15 = (char *)HIDWORD(a2);
      long long v94 = v11;
      long long v90 = a4;
      uint64_t v91 = v8;
      LODWORD(v99[1]) = v98;
      unint64_t v92 = v98 >> 16;
      unint64_t v93 = v98 >> 8;
      unint64_t v87 = HIDWORD(v98);
      unint64_t v88 = v98 >> 24;
      long long v96 = (void (*)(char *, uint64_t, uint64_t))(v98 >> 40);
      WORD2(v99[1]) = WORD2(v98);
      int v89 = a1;
      uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v16((char *)&v86 - v12, (uint64_t)v99, v97);
      v99[0] = a2;
      a4 = v90;
      uint64_t v8 = v91;
      LOBYTE(v99[1]) = v98;
      uint64_t v11 = v94;
      BYTE1(v99[1]) = v93;
      BYTE2(v99[1]) = v92;
      BYTE3(v99[1]) = v88;
      BYTE4(v99[1]) = v87;
      BYTE5(v99[1]) = (_BYTE)v96;
      long long v96 = v16;
      v16(v94, (uint64_t)&v100, v97);
      a1 = v89;
      goto LABEL_36;
  }
}

uint64_t sub_25B1D142C()
{
  uint64_t v89 = *MEMORY[0x263EF8340];
  uint64_t v78 = sub_25B290060();
  char v79 = v1;
  char v80 = v2;
  char v81 = v3;
  char v82 = v4;
  char v83 = v5;
  char v84 = v6;
  char v85 = v7;
  char v86 = v8;
  uint64_t v9 = (int *)type metadata accessor for NetworkSyncHeader(0);
  int __src = *(_DWORD *)(v0 + v9[5]);
  uint64_t v68 = sub_25B290060();
  char v69 = v10;
  char v70 = v11;
  char v71 = v12;
  char v72 = v13;
  char v73 = v14;
  char v74 = v15;
  char v75 = v16;
  char v76 = v17;
  uint64_t v59 = sub_25B290060();
  char v60 = v18;
  char v61 = v19;
  char v62 = v20;
  char v63 = v21;
  char v64 = v22;
  char v65 = v23;
  char v66 = v24;
  char v67 = v25;
  uint64_t v26 = v9[9];
  int v58 = *(_DWORD *)(v0 + v9[8]);
  int v57 = *(unsigned __int8 *)(v0 + v26);
  int v27 = *(_DWORD *)(v0 + v9[10]);
  int v55 = *(_DWORD *)(v0 + v9[11]);
  int v56 = v27;
  int v54 = *(unsigned __int8 *)(v0 + v9[12]);
  uint64_t v87 = sub_25B1D2A70(&v78, 16);
  uint64_t v88 = v28;
  uint64_t v29 = sub_25B1D299C(&__src, &v78);
  unint64_t v31 = v30 & 0xFFFFFFFFFFFFFFLL;
  sub_25B28FF30();
  sub_25B10DFF0(v29, v31);
  uint64_t v32 = sub_25B1D2A70(&v68, 16);
  unint64_t v34 = v33;
  sub_25B28FF30();
  sub_25B10DFF0(v32, v34);
  uint64_t v35 = sub_25B1D2A70(&v59, 16);
  unint64_t v37 = v36;
  sub_25B28FF30();
  sub_25B10DFF0(v35, v37);
  uint64_t v38 = sub_25B1D299C(&v58, &v59);
  unint64_t v40 = v39 & 0xFFFFFFFFFFFFFFLL;
  sub_25B28FF30();
  sub_25B10DFF0(v38, v40);
  uint64_t v41 = sub_25B1D299C(&v57, &v58);
  unint64_t v43 = v42 & 0xFFFFFFFFFFFFFFLL;
  sub_25B28FF30();
  sub_25B10DFF0(v41, v43);
  uint64_t v44 = sub_25B1D299C(&v56, &v57);
  unint64_t v46 = v45 & 0xFFFFFFFFFFFFFFLL;
  sub_25B28FF30();
  sub_25B10DFF0(v44, v46);
  uint64_t v47 = sub_25B1D299C(&v55, &v56);
  unint64_t v49 = v48 & 0xFFFFFFFFFFFFFFLL;
  sub_25B28FF30();
  sub_25B10DFF0(v47, v49);
  uint64_t v50 = sub_25B1D299C(&v54, &v55);
  unint64_t v52 = v51 & 0xFFFFFFFFFFFFFFLL;
  sub_25B28FF30();
  sub_25B10DFF0(v50, v52);
  return v87;
}

uint64_t type metadata accessor for NetworkSyncHeader(uint64_t a1)
{
  return sub_25B180000(a1, (uint64_t *)&unk_26A4DAE40);
}

uint64_t sub_25B1D17D8(char a1)
{
  uint64_t result = 0x786966657270;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x654C726564616568;
      break;
    case 2:
      uint64_t result = 0x496567617373656DLL;
      break;
    case 3:
      uint64_t result = 0x44497265646E6573;
      break;
    case 4:
      uint64_t result = 0x6874676E656CLL;
      break;
    case 5:
      uint64_t result = 0x546567617373656DLL;
      break;
    case 6:
    case 7:
      uint64_t result = 0x65636E6575716573;
      break;
    case 8:
      uint64_t result = 0x797469726F697270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B1D1904(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAE78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1D39A0();
  sub_25B291290();
  v11[31] = 0;
  sub_25B290080();
  sub_25B11FEE0((unint64_t *)&unk_26A4D9210);
  sub_25B290D60();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for NetworkSyncHeader(0);
    v11[30] = 1;
    sub_25B290D70();
    v11[29] = 2;
    sub_25B290D60();
    v11[28] = 3;
    sub_25B290D60();
    v11[27] = 4;
    sub_25B290D70();
    v11[26] = *(unsigned char *)(v3 + *(int *)(v9 + 36));
    v11[25] = 5;
    sub_25B1D3B5C();
    sub_25B290D60();
    v11[24] = 6;
    sub_25B290D70();
    v11[15] = 7;
    sub_25B290D70();
    v11[14] = *(unsigned char *)(v3 + *(int *)(v9 + 48));
    v11[13] = 8;
    sub_25B1D3BB0();
    sub_25B290D60();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25B1D1C28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_25B290080();
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v27 - v8;
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v27 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAE58);
  uint64_t v29 = *(void *)(v12 - 8);
  uint64_t v30 = v12;
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v34 = (int *)type metadata accessor for NetworkSyncHeader(0);
  MEMORY[0x270FA5388](v34);
  unint64_t v33 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  unint64_t v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_25B1D39A0();
  char v17 = v32;
  sub_25B291280();
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  uint64_t v32 = v6;
  char v46 = 0;
  uint64_t v18 = sub_25B11FEE0(&qword_26A4D9228);
  sub_25B290CC0();
  uint64_t v27 = v18;
  char v19 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  char v20 = v33;
  v19(v33, v11, v3);
  char v45 = 1;
  *(_DWORD *)&v20[v34[5]] = sub_25B290CD0();
  char v44 = 2;
  sub_25B290CC0();
  v19(&v20[v34[6]], v9, v3);
  char v43 = 3;
  char v21 = v32;
  sub_25B290CC0();
  char v22 = v34;
  v19(&v20[v34[7]], v21, v3);
  char v42 = 4;
  int v23 = sub_25B290CD0();
  uint64_t v24 = (uint64_t)v31;
  uint64_t v25 = (uint64_t)v33;
  *(_DWORD *)&v33[v22[8]] = v23;
  char v40 = 5;
  sub_25B1D39F4();
  sub_25B290CC0();
  *(unsigned char *)(v25 + v22[9]) = v41;
  char v39 = 6;
  *(_DWORD *)(v25 + v22[10]) = sub_25B290CD0();
  char v38 = 7;
  *(_DWORD *)(v25 + v34[11]) = sub_25B290CD0();
  char v36 = 8;
  sub_25B1D3A48();
  sub_25B290CC0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v30);
  *(unsigned char *)(v25 + v34[12]) = v37;
  sub_25B1D3A9C(v25, v28);
  __swift_destroy_boxed_opaque_existential_1(v24);
  return sub_25B1D3B00(v25);
}

uint64_t sub_25B1D229C()
{
  return sub_25B1D17D8(*v0);
}

uint64_t sub_25B1D22A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B1D3FFC(a1, a2);
  *a3 = result;
  return result;
}

void sub_25B1D22CC(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_25B1D22D8(uint64_t a1)
{
  unint64_t v2 = sub_25B1D39A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1D2314(uint64_t a1)
{
  unint64_t v2 = sub_25B1D39A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1D2350@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25B1D1C28(a1, a2);
}

uint64_t sub_25B1D2368(void *a1)
{
  return sub_25B1D1904(a1);
}

uint64_t sub_25B1D2384@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v11) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v11 = (int)v11;
LABEL_6:
      if (v11 != 20)
      {
LABEL_13:
        sub_25B1D2B24();
        swift_allocError();
        swift_willThrow();
        return sub_25B10DFF0(a1, a2);
      }
      uint64_t v40 = a3;
      if (v10)
      {
        uint64_t v39 = v7;
        if (v10 == 1)
        {
          if ((int)a1 <= a1 >> 32)
          {
            sub_25B114300(a1, a2);
            uint64_t v15 = sub_25B28FD00();
            if (v15)
            {
              uint64_t v16 = v15;
              uint64_t v17 = sub_25B28FD30();
              uint64_t v18 = (int)a1 - v17;
              if (!__OFSUB__((int)a1, v17))
              {
                sub_25B28FD20();
                uint64_t v19 = v16 + v18;
                uint64_t v7 = v39;
                (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v9, v19, v6);
                sub_25B10DFF0(a1, a2);
                goto LABEL_18;
              }
LABEL_37:
              __break(1u);
LABEL_38:
              __break(1u);
              goto LABEL_39;
            }
            sub_25B28FD20();
            __break(1u);
LABEL_42:
            sub_25B28FD20();
            __break(1u);
            goto LABEL_43;
          }
          goto LABEL_35;
        }
        uint64_t v21 = *(void *)(a1 + 16);
        swift_retain();
        swift_retain();
        uint64_t v22 = sub_25B28FD00();
        if (!v22) {
          goto LABEL_42;
        }
        uint64_t v23 = v22;
        uint64_t v24 = sub_25B28FD30();
        BOOL v14 = __OFSUB__(v21, v24);
        uint64_t v25 = v21 - v24;
        if (v14)
        {
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        sub_25B28FD20();
        uint64_t v26 = v23 + v25;
        uint64_t v7 = v39;
        (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v9, v26, v6);
        swift_release();
        swift_release();
      }
      else
      {
        uint64_t v41 = a1;
        __int16 v42 = a2;
        char v43 = BYTE2(a2);
        char v44 = BYTE3(a2);
        char v45 = BYTE4(a2);
        char v46 = BYTE5(a2);
        (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 16))(v9, &v41, v6);
      }
LABEL_18:
      if (qword_26A4DA040 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v6, (uint64_t)qword_26A4EB1F8);
      if ((sub_25B290030() & 1) == 0 || !v10) {
        goto LABEL_31;
      }
      if (v10 == 1)
      {
        if ((int)a1 <= a1 >> 32)
        {
          sub_25B114300(a1, a2);
          uint64_t v27 = sub_25B28FD00();
          if (v27)
          {
            uint64_t v28 = v27;
            uint64_t v29 = sub_25B28FD30();
            uint64_t v30 = (int)a1 - v29;
            if (!__OFSUB__((int)a1, v29))
            {
              sub_25B28FD20();
              unsigned int v31 = *(_DWORD *)(v28 + v30 + 16);
              sub_25B10DFF0(a1, a2);
              goto LABEL_30;
            }
LABEL_40:
            __break(1u);
          }
LABEL_44:
          sub_25B28FD20();
          __break(1u);
          JUMPOUT(0x25B1D2850);
        }
        goto LABEL_38;
      }
      uint64_t v32 = *(void *)(a1 + 16);
      swift_retain();
      swift_retain();
      uint64_t v33 = sub_25B28FD00();
      if (!v33)
      {
LABEL_43:
        sub_25B28FD20();
        __break(1u);
        goto LABEL_44;
      }
      uint64_t v34 = v33;
      uint64_t v35 = sub_25B28FD30();
      BOOL v14 = __OFSUB__(v32, v35);
      uint64_t v36 = v32 - v35;
      if (v14)
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      sub_25B28FD20();
      unsigned int v31 = *(_DWORD *)(v34 + v36 + 16);
      swift_release();
      swift_release();
LABEL_30:
      uint64_t v37 = v40;
      if (v31 < 0x48)
      {
LABEL_31:
        sub_25B1D2B24();
        swift_allocError();
        swift_willThrow();
        sub_25B10DFF0(a1, a2);
        return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
      sub_25B10DFF0(a1, a2);
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v37, v9, v6);
      uint64_t result = type metadata accessor for NetworkSyncHeaderPreamble(0);
      *(_DWORD *)(v37 + *(int *)(result + 20)) = v31;
      return result;
    case 2uLL:
      uint64_t v13 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      BOOL v14 = __OFSUB__(v12, v13);
      uint64_t v11 = v12 - v13;
      if (!v14) {
        goto LABEL_6;
      }
      goto LABEL_34;
    case 3uLL:
      goto LABEL_13;
    default:
      uint64_t v11 = BYTE6(a2);
      goto LABEL_6;
  }
}

BOOL sub_25B1D2860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_25B290030() & 1) != 0 && *(_DWORD *)(a1 + *(int *)(a3 + 20)) == *(_DWORD *)(a2 + *(int *)(a3 + 20));
}

BOOL sub_25B1D28B4(uint64_t a1, uint64_t a2)
{
  if ((sub_25B290030() & 1) != 0
    && (uint64_t v4 = type metadata accessor for NetworkSyncHeader(0),
        *(_DWORD *)(a1 + *(int *)(v4 + 20)) == *(_DWORD *)(a2 + *(int *)(v4 + 20)))
    && (uint64_t v5 = (int *)v4, (sub_25B290030() & 1) != 0)
    && (sub_25B290030() & 1) != 0
    && *(_DWORD *)(a1 + v5[8]) == *(_DWORD *)(a2 + v5[8])
    && *(unsigned __int8 *)(a1 + v5[9]) == *(unsigned __int8 *)(a2 + v5[9])
    && *(_DWORD *)(a1 + v5[10]) == *(_DWORD *)(a2 + v5[10])
    && *(_DWORD *)(a1 + v5[11]) == *(_DWORD *)(a2 + v5[11]))
  {
    return *(unsigned __int8 *)(a1 + v5[12]) == *(unsigned __int8 *)(a2 + v5[12]);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_25B1D299C(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_25B1D2A60(uint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  else {
    return result;
  }
}

uint64_t sub_25B1D2A70(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_25B1D299C(__src, &__src[a2]);
  }
  sub_25B28FD40();
  swift_allocObject();
  sub_25B28FCF0();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_25B28FED0();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

unint64_t sub_25B1D2B24()
{
  unint64_t result = qword_26A4DAE28;
  if (!qword_26A4DAE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE28);
  }
  return result;
}

uint64_t type metadata accessor for NetworkSyncHeaderPreamble(uint64_t a1)
{
  return sub_25B180000(a1, (uint64_t *)&unk_26A4DAE30);
}

unsigned char *storeEnumTagSinglePayload for NetworkSyncHeader.NetworkSyncHeaderError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B1D2C34);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkSyncHeader.NetworkSyncHeaderError()
{
  return &type metadata for NetworkSyncHeader.NetworkSyncHeaderError;
}

uint64_t *sub_25B1D2C6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25B290080();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_25B1D2D38(uint64_t a1)
{
  uint64_t v2 = sub_25B290080();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_25B1D2D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_25B1D2E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_25B1D2E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_25B1D2F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_25B1D2F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B1D2FA0);
}

uint64_t sub_25B1D2FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_25B1D300C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B1D3020);
}

uint64_t sub_25B1D3020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_25B1D3090()
{
  uint64_t result = sub_25B290080();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_25B1D3128(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25B290080();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
    v8((void *)((char *)a1 + v9), (void *)((char *)a2 + v9), v7);
    v8((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]), v7);
    uint64_t v10 = a3[9];
    *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
    uint64_t v11 = a3[11];
    *(_DWORD *)((char *)a1 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
    *(_DWORD *)((char *)a1 + v11) = *(_DWORD *)((char *)a2 + v11);
    *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  }
  return a1;
}

uint64_t sub_25B1D3268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  v7(a1 + *(int *)(a2 + 24), v4);
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
}

uint64_t sub_25B1D3324(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v9 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v10) = *(_DWORD *)(a2 + v10);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_25B1D3414(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_25B1D3510(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v9 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v10) = *(_DWORD *)(a2 + v10);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_25B1D3600(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v9 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v10) = *(_DWORD *)(a2 + v10);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_25B1D36F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B1D3704);
}

uint64_t sub_25B1D3704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 48));
    if (v10 >= 3) {
      return v10 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_25B1D37C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B1D37D4);
}

uint64_t sub_25B1D37D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_25B290080();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 48)) = a2 + 2;
  }
  return result;
}

uint64_t sub_25B1D3890()
{
  uint64_t result = sub_25B290080();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_25B1D394C()
{
  unint64_t result = qword_26A4DAE50;
  if (!qword_26A4DAE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE50);
  }
  return result;
}

unint64_t sub_25B1D39A0()
{
  unint64_t result = qword_26A4DAE60;
  if (!qword_26A4DAE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE60);
  }
  return result;
}

unint64_t sub_25B1D39F4()
{
  unint64_t result = qword_26A4DAE68;
  if (!qword_26A4DAE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE68);
  }
  return result;
}

unint64_t sub_25B1D3A48()
{
  unint64_t result = qword_26A4DAE70;
  if (!qword_26A4DAE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE70);
  }
  return result;
}

uint64_t sub_25B1D3A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetworkSyncHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B1D3B00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NetworkSyncHeader(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25B1D3B5C()
{
  unint64_t result = qword_26A4DAE80;
  if (!qword_26A4DAE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE80);
  }
  return result;
}

unint64_t sub_25B1D3BB0()
{
  unint64_t result = qword_26A4DAE88;
  if (!qword_26A4DAE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE88);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkSyncHeader.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NetworkSyncHeader.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    void *result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B1D3D60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkSyncHeader.CodingKeys()
{
  return &type metadata for NetworkSyncHeader.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for NetworkSyncHeader.MessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B1D3E64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkSyncHeader.MessageType()
{
  return &type metadata for NetworkSyncHeader.MessageType;
}

unint64_t sub_25B1D3EA0()
{
  unint64_t result = qword_26A4DAE90;
  if (!qword_26A4DAE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE90);
  }
  return result;
}

unint64_t sub_25B1D3EF8()
{
  unint64_t result = qword_26A4DAE98;
  if (!qword_26A4DAE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAE98);
  }
  return result;
}

unint64_t sub_25B1D3F50()
{
  unint64_t result = qword_26A4DAEA0;
  if (!qword_26A4DAEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAEA0);
  }
  return result;
}

unint64_t sub_25B1D3FA8()
{
  unint64_t result = qword_26A4DAEA8;
  if (!qword_26A4DAEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAEA8);
  }
  return result;
}

uint64_t sub_25B1D3FFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x786966657270 && a2 == 0xE600000000000000;
  if (v2 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x654C726564616568 && a2 == 0xEC0000006874676ELL || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496567617373656DLL && a2 == 0xE900000000000044 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44497265646E6573 && a2 == 0xE800000000000000 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6874676E656CLL && a2 == 0xE600000000000000 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x546567617373656DLL && a2 == 0xEB00000000657079 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x65636E6575716573 && a2 == 0xED0000746E756F43 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65636E6575716573 && a2 == 0xED00007865646E49 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

unint64_t sub_25B1D4420()
{
  unint64_t result = qword_26A4DAEB0;
  if (!qword_26A4DAEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAEB0);
  }
  return result;
}

__n128 HandshakeDescriptor.init(remoteDeviceID:personaID:deviceType:protocolVersion:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, __n128 *a6@<X5>, uint64_t a7@<X8>)
{
  char v7 = *a5;
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(unsigned char *)(a7 + 32) = v7;
  __n128 result = *a6;
  *(__n128 *)(a7 + 40) = *a6;
  return result;
}

uint64_t HandshakeDescriptor.remoteDeviceID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HandshakeDescriptor.remoteDeviceID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*HandshakeDescriptor.remoteDeviceID.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeDescriptor.personaID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HandshakeDescriptor.personaID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*HandshakeDescriptor.personaID.modify())()
{
  return nullsub_1;
}

void HandshakeDescriptor.deviceType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *HandshakeDescriptor.deviceType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*HandshakeDescriptor.deviceType.modify())()
{
  return nullsub_1;
}

__n128 HandshakeDescriptor.protocolVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 40);
  *a1 = result;
  return result;
}

__n128 HandshakeDescriptor.protocolVersion.setter(__n128 *a1)
{
  __n128 result = *a1;
  *(__n128 *)(v1 + 40) = *a1;
  return result;
}

uint64_t (*HandshakeDescriptor.protocolVersion.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeDescriptor.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_25B290630();
  swift_bridgeObjectRelease();
  sub_25B291230();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
  }
  sub_25B291250();
  sub_25B291250();
  return sub_25B291250();
}

uint64_t HandshakeDescriptor.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_25B291210();
  swift_bridgeObjectRetain();
  sub_25B290630();
  swift_bridgeObjectRelease();
  sub_25B291230();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
  }
  sub_25B291250();
  sub_25B291250();
  sub_25B291250();
  return sub_25B291260();
}

uint64_t sub_25B1D47B8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_25B291210();
  swift_bridgeObjectRetain();
  sub_25B290630();
  swift_bridgeObjectRelease();
  sub_25B291230();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
  }
  sub_25B291250();
  sub_25B291250();
  sub_25B291250();
  return sub_25B291260();
}

uint64_t HandshakeSchedulerEvent.handshakeDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 HandshakeSchedulerEvent.handshakeDescriptor.setter(__n128 *a1)
{
  __n128 v8 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  unint64_t v5 = a1[2].n128_u64[1];
  unint64_t v6 = a1[3].n128_u64[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v8;
  *uint64_t v1 = v8;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  v1[2].n128_u8[0] = v4;
  v1[2].n128_u64[1] = v5;
  v1[3].n128_u64[0] = v6;
  return result;
}

uint64_t (*HandshakeSchedulerEvent.handshakeDescriptor.modify())()
{
  return nullsub_1;
}

void HandshakeSchedulerEvent.schedule.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 64);
  *(void *)a1 = *(void *)(v1 + 56);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t HandshakeSchedulerEvent.schedule.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 56) = *(void *)result;
  *(unsigned char *)(v1 + 64) = v2;
  return result;
}

uint64_t (*HandshakeSchedulerEvent.schedule.modify())()
{
  return nullsub_1;
}

BOOL _s16ReplicatorEngine19HandshakeDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  int v9 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_25B290FB0(), result = 0, (v12 & 1) != 0))
  {
    if (v3)
    {
      if (!v7) {
        return 0;
      }
      if (v2 == v8 && v3 == v7)
      {
        if (v4 != v9) {
          return 0;
        }
        return v5 == v10 && v6 == v11;
      }
      char v14 = sub_25B290FB0();
      BOOL result = 0;
      if ((v14 & 1) == 0) {
        return result;
      }
    }
    else
    {
      BOOL result = 0;
      if (v7) {
        return result;
      }
    }
    if (v4 != v9) {
      return result;
    }
    return v5 == v10 && v6 == v11;
  }
  return result;
}

unint64_t sub_25B1D4AC8()
{
  unint64_t result = qword_26A4DAEB8;
  if (!qword_26A4DAEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAEB8);
  }
  return result;
}

uint64_t initializeWithCopy for HandshakeDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HandshakeDescriptor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HandshakeDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for HandshakeDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HandshakeDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HandshakeDescriptor()
{
  return &type metadata for HandshakeDescriptor;
}

uint64_t initializeWithCopy for HandshakeSchedulerEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HandshakeSchedulerEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for HandshakeSchedulerEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for HandshakeSchedulerEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HandshakeSchedulerEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HandshakeSchedulerEvent()
{
  return &type metadata for HandshakeSchedulerEvent;
}

uint64_t dispatch thunk of HandshakeScheduling.handshakePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HandshakeScheduling.scheduleHandshake(with:schedule:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_25B1D4F68(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PairingRelationship();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v43 = (uint64_t)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v42 = (uint64_t)v35 - v6;
  uint64_t v7 = sub_25B290080();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (!v12) {
    return v13;
  }
  v35[1] = v1;
  uint64_t v46 = MEMORY[0x263F8EE78];
  uint64_t v45 = v9;
  sub_25B224084(0, v12, 0);
  uint64_t result = sub_25B1A7EF0(v45);
  uint64_t v16 = result;
  uint64_t v17 = v45;
  uint64_t v18 = v8;
  uint64_t v19 = 0;
  uint64_t v20 = v45 + 64;
  uint64_t v38 = (void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v39 = v18;
  uint64_t v36 = v15;
  uint64_t v37 = v18 + 32;
  char v21 = *(unsigned char *)(v45 + 32);
  v35[0] = v45 + 88;
  uint64_t v40 = v11;
  uint64_t v41 = v7;
  while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << v21)
  {
    unint64_t v23 = (unint64_t)v16 >> 6;
    if ((*(void *)(v20 + 8 * ((unint64_t)v16 >> 6)) & (1 << v16)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(v17 + 36) != v15) {
      goto LABEL_28;
    }
    uint64_t v24 = v42;
    sub_25B1D748C(*(void *)(v17 + 56) + *(void *)(v44 + 72) * v16, v42);
    uint64_t v25 = v24;
    uint64_t v26 = v43;
    sub_25B1D73CC(v25, v43);
    (*v38)(v11, v26, v7);
    sub_25B1D7430(v26);
    uint64_t v13 = v46;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25B224084(0, *(void *)(v13 + 16) + 1, 1);
      uint64_t v13 = v46;
    }
    unint64_t v28 = *(void *)(v13 + 16);
    unint64_t v27 = *(void *)(v13 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_25B224084(v27 > 1, v28 + 1, 1);
      uint64_t v13 = v46;
    }
    *(void *)(v13 + 16) = v28 + 1;
    uint64_t v11 = v40;
    unint64_t v29 = v13
        + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))
        + *(void *)(v39 + 72) * v28;
    uint64_t v7 = v41;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v39 + 32))(v29, v40, v41);
    uint64_t v46 = v13;
    uint64_t v17 = v45;
    char v21 = *(unsigned char *)(v45 + 32);
    unint64_t v22 = 1 << v21;
    if (v16 >= 1 << v21) {
      goto LABEL_29;
    }
    uint64_t v30 = *(void *)(v20 + 8 * v23);
    if ((v30 & (1 << v16)) == 0) {
      goto LABEL_30;
    }
    LODWORD(v15) = v36;
    if (*(_DWORD *)(v45 + 36) != v36) {
      goto LABEL_31;
    }
    unint64_t v31 = v30 & (-2 << (v16 & 0x3F));
    if (v31)
    {
      unint64_t v22 = __clz(__rbit64(v31)) | v16 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v32 = v23 + 1;
      unint64_t v33 = (v22 + 63) >> 6;
      if (v23 + 1 < v33)
      {
        unint64_t v34 = *(void *)(v20 + 8 * v32);
        if (!v34)
        {
          unint64_t v32 = v23 + 2;
          if (v23 + 2 >= v33) {
            goto LABEL_4;
          }
          unint64_t v34 = *(void *)(v20 + 8 * v32);
          if (!v34)
          {
            while (v33 - 3 != v23)
            {
              unint64_t v34 = *(void *)(v35[0] + 8 * v23++);
              if (v34)
              {
                unint64_t v32 = v23 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        unint64_t v22 = __clz(__rbit64(v34)) + (v32 << 6);
      }
    }
LABEL_4:
    ++v19;
    uint64_t v16 = v22;
    if (v19 == v12) {
      return v13;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_25B1D5350@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v28 = type metadata accessor for PairingRelationship();
  uint64_t v6 = *(void *)(v28 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v28);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v30 = a2 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v31 = (unint64_t)(v13 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    sub_25B1D748C(*(void *)(a2 + 56) + *(void *)(v6 + 72) * i, (uint64_t)v11);
    sub_25B1D73CC((uint64_t)v11, (uint64_t)v9);
    char v23 = a1(v9);
    if (v3)
    {
      sub_25B1D7430((uint64_t)v9);
      return swift_release();
    }
    if (v23)
    {
      swift_release();
      uint64_t v24 = v29;
      sub_25B1D73CC((uint64_t)v9, v29);
      uint64_t v25 = 0;
      uint64_t v26 = v28;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v24, v25, 1, v26);
    }
    uint64_t result = sub_25B1D7430((uint64_t)v9);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v17++, 1)) {
      break;
    }
    if (v17 >= v31) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v30 + 8 * v17);
    if (!v21)
    {
      int64_t v22 = v17 + 1;
      if (v17 + 1 >= v31) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v30 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 2;
      if (v17 + 2 >= v31) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v30 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 3;
      if (v17 + 3 >= v31) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v30 + 8 * v22);
      if (v21)
      {
LABEL_16:
        int64_t v17 = v22;
        goto LABEL_17;
      }
      int64_t v22 = v17 + 4;
      if (v17 + 4 < v31)
      {
        unint64_t v21 = *(void *)(v30 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v17 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_31;
            }
            if (v17 >= v31) {
              goto LABEL_28;
            }
            unint64_t v21 = *(void *)(v30 + 8 * v17);
            ++v22;
            if (v21) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v26 = v28;
      uint64_t v24 = v29;
      swift_release();
      uint64_t v25 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v24, v25, 1, v26);
    }
LABEL_17:
    unint64_t v15 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_25B1D562C()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99E0);
    sub_25B1D56BC();
    uint64_t v1 = sub_25B290240();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

unint64_t sub_25B1D56BC()
{
  unint64_t result = qword_26A4D99D8;
  if (!qword_26A4D99D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4D99E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D99D8);
  }
  return result;
}

uint64_t sub_25B1D5718(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*sub_25B1D5728(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = sub_25B1D562C();
  return sub_25B1D5770;
}

uint64_t sub_25B1D5770(void *a1)
{
  *(void *)(a1[1] + 16) = *a1;
  return swift_release();
}

void sub_25B1D5780(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(*(void *)a1 + 32) + 16);
  os_unfair_lock_lock(v3);
  sub_25B1D6A20(&v4);
  os_unfair_lock_unlock(v3);
  *a2 = v4;
}

uint64_t sub_25B1D57F8()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1D6A20(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

void sub_25B1D5864(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

void *sub_25B1D5870()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  sub_25B10DCD0(v2);
  os_unfair_lock_unlock(v1);
  sub_25B10FEE0((uint64_t)v10, (uint64_t)v7);
  sub_25B10FEE0((uint64_t)v7, (uint64_t)v8);
  unint64_t result = (void *)sub_25B116460((uint64_t)v8);
  if (result != 1)
  {
    v4[8] = v8[8];
    v4[9] = v8[9];
    v4[10] = v8[10];
    uint64_t v5 = v9;
    v4[4] = v8[4];
    v4[5] = v8[5];
    void v4[6] = v8[6];
    v4[7] = v8[7];
    v4[0] = v8[0];
    v4[1] = v8[1];
    v4[2] = v8[2];
    v4[3] = v8[3];
    sub_25B10FEE0((uint64_t)v7, (uint64_t)v6);
    sub_25B114244((uint64_t)v6);
    sub_25B1D5C64((uint64_t)v4, 1);
    sub_25B11702C(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
    return sub_25B11702C(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
  }
  return result;
}

uint64_t sub_25B1D59B0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a1 + 40) = a2;
  if (a2)
  {
    sub_25B10FEE0(a1 + 136, (uint64_t)v5);
    sub_25B11702C(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B1170A0);
  }
  else
  {
    sub_25B10FEBC((uint64_t)v5);
  }
  sub_25B10FEE0((uint64_t)v5, (uint64_t)v6);
  return sub_25B10FEE0((uint64_t)v6, a3);
}

void *(*sub_25B1D5A3C(uint64_t a1))()
{
  *(void *)a1 = v1;
  unsigned __int8 v3 = (os_unfair_lock_s *)(*(void *)(v1 + 32) + 16);
  os_unfair_lock_lock(v3);
  sub_25B1D6A20(v5);
  os_unfair_lock_unlock(v3);
  *(unsigned char *)(a1 + 8) = v5[0];
  return sub_25B1D5AD0;
}

void *sub_25B1D5AD0()
{
  return sub_25B1D5870();
}

uint64_t HandshakeZoneAdvertiser.__allocating_init(handshakeScheduler:pairingRelationshipReader:remoteDeviceTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  HandshakeZoneAdvertiser.init(handshakeScheduler:pairingRelationshipReader:remoteDeviceTypes:)(a1, a2, a3);
  return v6;
}

uint64_t HandshakeZoneAdvertiser.init(handshakeScheduler:pairingRelationshipReader:remoteDeviceTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  *(void *)(v3 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99E0);
  swift_allocObject();
  *(void *)(v3 + 24) = sub_25B290220();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  *(void *)(v3 + 32) = v8;
  *(unsigned char *)(v3 + 40) = 0;
  sub_25B10FEBC((uint64_t)v12);
  sub_25B10FEE0((uint64_t)v12, v3 + 136);
  *(void *)(v3 + 320) = MEMORY[0x263F8EE88];
  sub_25B10FF48(a1, v3 + 48);
  sub_25B10FF48(a2, v3 + 88);
  uint64_t v9 = sub_25B227FD0(a3);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_25B22A11C((uint64_t)&unk_2708D9128, v9);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(void *)(v4 + 128) = v10;
  return v4;
}

uint64_t sub_25B1D5C5C(uint64_t a1)
{
  return sub_25B1D5C64(a1, 0);
}

uint64_t sub_25B1D5C64(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v84 = type metadata accessor for PairingRelationship();
  int64_t v86 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v66 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v88 = (uint64_t)&v63 - v11;
  uint64_t v12 = sub_25B290080();
  uint64_t v68 = *(void *)(v12 - 8);
  uint64_t v69 = v12;
  MEMORY[0x270FA5388](v12);
  char v81 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v14 - 8);
  char v82 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = *(_OWORD *)(a1 + 144);
  v101[8] = *(_OWORD *)(a1 + 128);
  v101[9] = v16;
  v101[10] = *(_OWORD *)(a1 + 160);
  uint64_t v102 = *(void *)(a1 + 176);
  long long v17 = *(_OWORD *)(a1 + 80);
  v101[4] = *(_OWORD *)(a1 + 64);
  v101[5] = v17;
  long long v18 = *(_OWORD *)(a1 + 112);
  v101[6] = *(_OWORD *)(a1 + 96);
  v101[7] = v18;
  long long v19 = *(_OWORD *)(a1 + 16);
  v101[0] = *(_OWORD *)a1;
  v101[1] = v19;
  long long v20 = *(_OWORD *)(a1 + 48);
  _OWORD v101[2] = *(_OWORD *)(a1 + 32);
  v101[3] = v20;
  uint64_t v21 = v3[14];
  uint64_t v22 = v3[15];
  __swift_project_boxed_opaque_existential_1(v3 + 11, v21);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
  swift_retain();
  uint64_t v24 = sub_25B1D6ED8(v23, (uint64_t)v3);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v79 = v24;
  uint64_t v25 = sub_25B1D4F68(v24);
  uint64_t v26 = sub_25B227C68(v25);
  swift_bridgeObjectRelease();
  uint64_t v27 = (os_unfair_lock_s *)v3[4];
  v91[16] = a2;
  unint64_t v92 = v101;
  unint64_t v93 = v3;
  uint64_t v94 = v26;
  uint64_t v89 = sub_25B1D72F4;
  long long v90 = v91;
  uint64_t v28 = v27 + 4;
  os_unfair_lock_lock(v27 + 4);
  sub_25B1D7318(v97);
  uint64_t v87 = 0;
  uint64_t v29 = v81;
  uint64_t v30 = v28;
  uint64_t v31 = v68;
  os_unfair_lock_unlock(v30);
  uint64_t v32 = v97[0];
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v34 = 0;
  uint64_t v35 = *(void *)(v32 + 56);
  uint64_t v70 = v32 + 56;
  uint64_t v83 = v32;
  uint64_t v36 = 1 << *(unsigned char *)(v32 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  unint64_t v38 = v37 & v35;
  char v67 = v3;
  char v64 = v3 + 6;
  char v65 = v10;
  uint64_t v39 = v69;
  int64_t v71 = (unint64_t)(v36 + 63) >> 6;
  char v80 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  uint64_t v77 = v31 + 48;
  uint64_t v78 = v31 + 16;
  char v75 = (unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
  char v76 = (uint64_t (**)(char *, char *, uint64_t))(v31 + 32);
  char v74 = (void (**)(char *, uint64_t))(v31 + 8);
  while (1)
  {
    if (v38)
    {
      uint64_t v85 = (v38 - 1) & v38;
      int64_t v86 = v34;
      unint64_t v40 = __clz(__rbit64(v38)) | (v34 << 6);
      uint64_t v41 = v82;
      goto LABEL_19;
    }
    BOOL v42 = __OFADD__(v34, 1);
    int64_t v43 = v34 + 1;
    uint64_t v41 = v82;
    if (v42)
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v43 >= v71) {
      goto LABEL_26;
    }
    unint64_t v44 = *(void *)(v70 + 8 * v43);
    if (!v44) {
      break;
    }
LABEL_18:
    uint64_t v85 = (v44 - 1) & v44;
    int64_t v86 = v43;
    unint64_t v40 = __clz(__rbit64(v44)) + (v43 << 6);
LABEL_19:
    (*(void (**)(char *, unint64_t, uint64_t))(v31 + 16))(v41, *(void *)(v83 + 48) + *(void *)(v31 + 72) * v40, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v41, 0, 1, v39);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v41, 1, v39) == 1) {
      goto LABEL_27;
    }
    uint64_t v46 = (*v76)(v29, v41, v39);
    MEMORY[0x270FA5388](v46);
    *(&v63 - 2) = (uint64_t)v29;
    uint64_t v47 = v87;
    uint64_t v48 = v88;
    sub_25B1D5350((uint64_t (*)(char *))sub_25B1D7334, v79, v88);
    uint64_t v87 = v47;
    sub_25B1D7364(v48, (uint64_t)v10);
    if ((*v75)(v10, 1, v84) == 1)
    {
      sub_25B116DE0(v88, &qword_26A4D9610);
      uint64_t v29 = v81;
      (*v74)(v81, v39);
      uint64_t result = sub_25B116DE0((uint64_t)v10, &qword_26A4D9610);
    }
    else
    {
      uint64_t v49 = v66;
      sub_25B1D73CC((uint64_t)v10, v66);
      uint64_t v50 = v49 + *(int *)(v84 + 20);
      uint64_t v52 = *(void *)v50;
      uint64_t v51 = *(void *)(v50 + 8);
      uint64_t v54 = *(void *)(v50 + 160);
      uint64_t v53 = *(void *)(v50 + 168);
      char v55 = *(unsigned char *)(v50 + 48);
      uint64_t v56 = *(void *)(v50 + 40);
      uint64_t v72 = *(void *)(v50 + 32);
      uint64_t v58 = v67[9];
      uint64_t v57 = v67[10];
      char v73 = __swift_project_boxed_opaque_existential_1(v64, v58);
      v97[0] = v52;
      v97[1] = v51;
      v97[2] = v54;
      v97[3] = v53;
      char v98 = v55;
      uint64_t v99 = v72;
      uint64_t v100 = v56;
      uint64_t v95 = 0;
      char v96 = 0;
      uint64_t v59 = *(void (**)(void *, uint64_t *, uint64_t, uint64_t))(v57 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v60 = v58;
      uint64_t v10 = v65;
      uint64_t v61 = v57;
      uint64_t v39 = v69;
      v59(v97, &v95, v60, v61);
      uint64_t v62 = v49;
      uint64_t v31 = v68;
      sub_25B1D7430(v62);
      sub_25B116DE0(v88, &qword_26A4D9610);
      uint64_t v29 = v81;
      (*v74)(v81, v39);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    unint64_t v38 = v85;
    int64_t v34 = v86;
  }
  int64_t v45 = v43 + 1;
  if (v43 + 1 >= v71) {
    goto LABEL_26;
  }
  unint64_t v44 = *(void *)(v70 + 8 * v45);
  if (v44) {
    goto LABEL_17;
  }
  int64_t v45 = v43 + 2;
  if (v43 + 2 >= v71) {
    goto LABEL_26;
  }
  unint64_t v44 = *(void *)(v70 + 8 * v45);
  if (v44) {
    goto LABEL_17;
  }
  int64_t v45 = v43 + 3;
  if (v43 + 3 >= v71)
  {
LABEL_26:
    (*v80)(v82, 1, 1, v39);
LABEL_27:
    swift_release();
    return swift_release();
  }
  unint64_t v44 = *(void *)(v70 + 8 * v45);
  if (v44)
  {
LABEL_17:
    int64_t v43 = v45;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v43 = v45 + 1;
    if (__OFADD__(v45, 1)) {
      break;
    }
    if (v43 >= v71) {
      goto LABEL_26;
    }
    unint64_t v44 = *(void *)(v70 + 8 * v43);
    ++v45;
    if (v44) {
      goto LABEL_18;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_25B1D6384@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  long long v9 = *(_OWORD *)(a2 + 144);
  long long v78 = *(_OWORD *)(a2 + 128);
  long long v79 = v9;
  long long v80 = *(_OWORD *)(a2 + 160);
  uint64_t v81 = *(void *)(a2 + 176);
  long long v10 = *(_OWORD *)(a2 + 80);
  long long v74 = *(_OWORD *)(a2 + 64);
  long long v75 = v10;
  long long v11 = *(_OWORD *)(a2 + 112);
  long long v76 = *(_OWORD *)(a2 + 96);
  long long v77 = v11;
  long long v12 = *(_OWORD *)(a2 + 16);
  long long v70 = *(_OWORD *)a2;
  long long v71 = v12;
  long long v13 = *(_OWORD *)(a2 + 48);
  long long v72 = *(_OWORD *)(a2 + 32);
  long long v73 = v13;
  if (a1) {
    goto LABEL_9;
  }
  long long v14 = *(_OWORD *)(a2 + 144);
  v65[8] = *(_OWORD *)(a2 + 128);
  v65[9] = v14;
  v65[10] = *(_OWORD *)(a2 + 160);
  uint64_t v66 = *(void *)(a2 + 176);
  long long v15 = *(_OWORD *)(a2 + 80);
  v65[4] = *(_OWORD *)(a2 + 64);
  v65[5] = v15;
  long long v16 = *(_OWORD *)(a2 + 112);
  v65[6] = *(_OWORD *)(a2 + 96);
  v65[7] = v16;
  long long v17 = *(_OWORD *)(a2 + 16);
  v65[0] = *(_OWORD *)a2;
  v65[1] = v17;
  long long v18 = *(_OWORD *)(a2 + 48);
  _OWORD v65[2] = *(_OWORD *)(a2 + 32);
  v65[3] = v18;
  nullsub_1(v65);
  sub_25B10FEE0(a3 + 136, (uint64_t)v67);
  sub_25B10FEE0((uint64_t)v65, (uint64_t)&v53);
  sub_25B10FEE0((uint64_t)v67, (uint64_t)v68);
  if (sub_25B116460((uint64_t)v68) == 1)
  {
    long long v46 = v61;
    long long v47 = v62;
    long long v48 = v63;
    uint64_t v49 = v64;
    long long v42 = v57;
    long long v43 = v58;
    long long v44 = v59;
    long long v45 = v60;
    long long v38 = v53;
    long long v39 = v54;
    long long v40 = v55;
    long long v41 = v56;
    sub_25B114244(a2);
    sub_25B114244(a2);
    sub_25B11677C((uint64_t)&v38);
    sub_25B10FEE0((uint64_t)v65, (uint64_t)v50);
    sub_25B10FEE0((uint64_t)v67, (uint64_t)&v52);
    sub_25B117154((uint64_t)v50);
    goto LABEL_9;
  }
  sub_25B10FEE0((uint64_t)v67, (uint64_t)v50);
  long long v35 = v61;
  long long v36 = v62;
  long long v37 = v63;
  long long v31 = v57;
  long long v32 = v58;
  long long v33 = v59;
  long long v34 = v60;
  long long v27 = v53;
  long long v28 = v54;
  long long v29 = v55;
  long long v30 = v56;
  long long v46 = v61;
  long long v47 = v62;
  long long v48 = v63;
  long long v42 = v57;
  long long v43 = v58;
  long long v44 = v59;
  long long v45 = v60;
  long long v38 = v53;
  long long v39 = v54;
  uint64_t v19 = v64;
  long long v40 = v55;
  long long v41 = v56;
  v26[8] = v50[8];
  v26[9] = v50[9];
  v26[10] = v50[10];
  v26[4] = v50[4];
  v26[5] = v50[5];
  v26[6] = v50[6];
  v26[7] = v50[7];
  v26[0] = v50[0];
  v26[1] = v50[1];
  long long v26[2] = v50[2];
  v26[3] = v50[3];
  sub_25B114244(a2);
  sub_25B114244(a2);
  sub_25B11702C(v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B1170A0);
  if ((_s16ReplicatorEngine24ZoneVersionAdvertisementV16DeviceDescriptorV2eeoiySbAE_AEtFZ_0((uint64_t)&v38, (uint64_t)v26) & 1) == 0)
  {
    sub_25B11702C(v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
    long long v46 = v35;
    long long v47 = v36;
    long long v48 = v37;
    long long v42 = v31;
    long long v43 = v32;
    long long v44 = v33;
    long long v45 = v34;
    long long v38 = v27;
    long long v39 = v28;
    long long v40 = v29;
    long long v41 = v30;
    uint64_t v49 = v19;
    sub_25B11677C((uint64_t)&v38);
    sub_25B11677C(a2);
    goto LABEL_9;
  }
  char v20 = sub_25B1B7CA8(v19, v51);
  sub_25B11702C(v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
  long long v46 = v35;
  long long v47 = v36;
  long long v48 = v37;
  long long v42 = v31;
  long long v43 = v32;
  long long v44 = v33;
  long long v45 = v34;
  long long v38 = v27;
  long long v39 = v28;
  long long v40 = v29;
  long long v41 = v30;
  uint64_t v49 = v19;
  sub_25B11677C((uint64_t)&v38);
  sub_25B11677C(a2);
  if ((v20 & 1) == 0)
  {
LABEL_9:
    v68[8] = v78;
    v68[9] = v79;
    v68[10] = v80;
    uint64_t v69 = v81;
    v68[4] = v74;
    v68[5] = v75;
    v68[6] = v76;
    v68[7] = v77;
    v68[0] = v70;
    v68[1] = v71;
    v68[2] = v72;
    v68[3] = v73;
    nullsub_1(v68);
    uint64_t v23 = a3 + 136;
    sub_25B10FEE0(v23, (uint64_t)v50);
    sub_25B10FEE0((uint64_t)v68, v23);
    sub_25B114244(a2);
    sub_25B11702C(v50, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
    *a5 = a4;
    return swift_bridgeObjectRetain();
  }
  if (*(void *)(*(void *)(a3 + 320) + 16) <= *(void *)(a4 + 16) >> 3)
  {
    *(void *)&v26[0] = a4;
    swift_bridgeObjectRetain();
    uint64_t v25 = swift_bridgeObjectRetain();
    sub_25B1A4044(v25);
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void *)&v26[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = sub_25B1A4714(v21, a4);
    swift_bridgeObjectRelease();
  }
  *(void *)(a3 + 320) = a4;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v22;
  return result;
}

uint64_t HandshakeZoneAdvertiser.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_bridgeObjectRelease();
  sub_25B10FEE0(v0 + 136, (uint64_t)v2);
  sub_25B11702C(v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B111F3C);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t HandshakeZoneAdvertiser.__deallocating_deinit()
{
  HandshakeZoneAdvertiser.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_25B1D68A0()
{
  return sub_25B1D562C();
}

uint64_t sub_25B1D68C4()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1D6A20(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

void *sub_25B1D6934()
{
  return sub_25B1D5870();
}

void (*sub_25B1D6958(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_25B1D5A3C((uint64_t)v2);
  return sub_25B139148;
}

uint64_t sub_25B1D69B4(uint64_t a1)
{
  return sub_25B1D5C64(a1, 0);
}

void *sub_25B1D69DC@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, unsigned char *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void *sub_25B1D6A20@<X0>(unsigned char *a1@<X8>)
{
  return sub_25B1D72B0(a1);
}

uint64_t sub_25B1D6A38@<X0>(uint64_t a1@<X8>)
{
  return sub_25B1D59B0(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_25B1D6A58(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v54 = a4;
  uint64_t v39 = a2;
  long long v40 = a1;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v5 = MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v38 - v7;
  uint64_t v8 = type metadata accessor for PairingRelationship();
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  MEMORY[0x270FA5388](v8);
  long long v48 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_25B290080();
  uint64_t result = MEMORY[0x270FA5388](v47);
  long long v60 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = 0;
  long long v56 = (void *)a3;
  uint64_t v14 = *(void *)(a3 + 64);
  uint64_t v41 = 0;
  uint64_t v42 = a3 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v45 = v11 + 16;
  uint64_t v46 = v11;
  int64_t v43 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v44 = v11 + 8;
  uint64_t v18 = v47;
  uint64_t v19 = (uint64_t)v48;
  while (1)
  {
    if (v17)
    {
      uint64_t v58 = (v17 - 1) & v17;
      int64_t v59 = v13;
      unint64_t v20 = __clz(__rbit64(v17)) | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v33 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v33 >= v43) {
      return sub_25B1A22F8(v40, v39, v41, v56);
    }
    unint64_t v34 = *(void *)(v42 + 8 * v33);
    int64_t v35 = v13 + 1;
    if (!v34)
    {
      int64_t v35 = v13 + 2;
      if (v13 + 2 >= v43) {
        return sub_25B1A22F8(v40, v39, v41, v56);
      }
      unint64_t v34 = *(void *)(v42 + 8 * v35);
      if (!v34)
      {
        int64_t v35 = v13 + 3;
        if (v13 + 3 >= v43) {
          return sub_25B1A22F8(v40, v39, v41, v56);
        }
        unint64_t v34 = *(void *)(v42 + 8 * v35);
        if (!v34) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v58 = (v34 - 1) & v34;
    int64_t v59 = v35;
    unint64_t v20 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_5:
    uint64_t v21 = v56;
    uint64_t v22 = v46;
    uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 16);
    uint64_t v24 = v60;
    v23(v60, v56[6] + *(void *)(v46 + 72) * v20, v18);
    uint64_t v25 = v21[7];
    uint64_t v26 = *(void *)(v49 + 72);
    unint64_t v55 = v20;
    sub_25B1D748C(v25 + v26 * v20, v19);
    uint64_t v27 = v53;
    uint64_t v28 = (uint64_t)v51;
    uint64_t v29 = (uint64_t)&v51[*(int *)(v53 + 48)];
    v23(v51, (unint64_t)v24, v18);
    sub_25B1D748C(v19, v29);
    uint64_t v57 = *(void *)(v54 + 128);
    long long v30 = v52;
    uint64_t v31 = (uint64_t)&v52[*(int *)(v27 + 48)];
    v23(v52, v28, v18);
    sub_25B1D748C(v29, v31);
    LOBYTE(v29) = *(unsigned char *)(v31 + *(int *)(v50 + 20) + 48);
    sub_25B1D7430(v31);
    LOBYTE(v29) = sub_25B210AEC(v29, v57);
    sub_25B116DE0(v28, &qword_26A4D9EE8);
    long long v32 = *(void (**)(char *, uint64_t))(v22 + 8);
    v32(v30, v18);
    sub_25B1D7430(v19);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v32)(v60, v18);
    unint64_t v17 = v58;
    int64_t v13 = v59;
    if (v29)
    {
      *(unint64_t *)((char *)v40 + ((v55 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v55;
      if (__OFADD__(v41++, 1))
      {
        __break(1u);
        return sub_25B1A22F8(v40, v39, v41, v56);
      }
    }
  }
  uint64_t v36 = v13 + 4;
  if (v13 + 4 >= v43) {
    return sub_25B1A22F8(v40, v39, v41, v56);
  }
  unint64_t v34 = *(void *)(v42 + 8 * v36);
  if (v34)
  {
    int64_t v35 = v13 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v35 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v35 >= v43) {
      return sub_25B1A22F8(v40, v39, v41, v56);
    }
    unint64_t v34 = *(void *)(v42 + 8 * v35);
    ++v36;
    if (v34) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_25B1D6ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v14[1] = *MEMORY[0x263EF8340];
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v9 = 8 * v8;
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    uint64_t v11 = sub_25B1D6A58((void *)((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    swift_release();
    if (v3) {
      swift_willThrow();
    }
    swift_release_n();
  }
  else
  {
    uint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v9);
    swift_retain();
    uint64_t v11 = sub_25B1D6A58((unint64_t *)v12, v8, a1, a2);
    swift_release();
    MEMORY[0x261160890](v12, -1, -1);
    swift_release_n();
  }
  return v11;
}

uint64_t sub_25B1D7094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25B1D562C();
  *a1 = result;
  return result;
}

uint64_t sub_25B1D70C0(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 16) = *a1;
  swift_retain();
  return swift_release();
}

void *sub_25B1D7108()
{
  return sub_25B1D5870();
}

uint64_t type metadata accessor for HandshakeZoneAdvertiser()
{
  return self;
}

uint64_t method lookup function for HandshakeZoneAdvertiser(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for HandshakeZoneAdvertiser);
}

uint64_t dispatch thunk of HandshakeZoneAdvertiser.zoneVersionPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of HandshakeZoneAdvertiser.zoneVersionPublisher.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of HandshakeZoneAdvertiser.zoneVersionPublisher.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of HandshakeZoneAdvertiser.isEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of HandshakeZoneAdvertiser.isEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of HandshakeZoneAdvertiser.isEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of HandshakeZoneAdvertiser.__allocating_init(handshakeScheduler:pairingRelationshipReader:remoteDeviceTypes:)()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of HandshakeZoneAdvertiser.advertise(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of HandshakeZoneAdvertiser.subscribe()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

void *sub_25B1D72B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_25B1D72F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_25B1D6384(*(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

void *sub_25B1D7318@<X0>(void *a1@<X8>)
{
  return sub_25B1E40B4(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_25B1D7334()
{
  return sub_25B290030() & 1;
}

uint64_t sub_25B1D7364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B1D73CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PairingRelationship();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B1D7430(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PairingRelationship();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B1D748C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PairingRelationship();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_25B1D74F0(unsigned char *a1@<X8>)
{
}

uint64_t sub_25B1D7508()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = v1[2];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_25B1D87C4;
  *(void *)(v5 + 24) = v4;
  v8[4] = sub_25B117398;
  v8[5] = v5;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_25B10D184;
  v8[3] = &block_descriptor_27;
  char v6 = _Block_copy(v8);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B1D7684(void *a1, uint64_t a2)
{
  uint64_t v77 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v79 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v71 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v71 - v10;
  MEMORY[0x270FA5388](v9);
  int64_t v13 = (char *)&v71 - v12;
  uint64_t v83 = (char *)&v71 - v12;
  uint64_t v14 = sub_25B290000();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  long long v78 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  long long v76 = (char *)&v71 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  long long v80 = (char *)&v71 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v84 = (char *)&v71 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v71 - v25;
  uint64_t v75 = v27;
  MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)&v71 - v28;
  sub_25B28FFD0();
  uint64_t v30 = (uint64_t)a1 + OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_currentAssertionCreationDate;
  swift_beginAccess();
  sub_25B1D86FC(v30, (uint64_t)v13);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v31(v11, v29, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  sub_25B1D87DC((uint64_t)v11, (uint64_t)v8);
  swift_beginAccess();
  sub_25B1A93FC((uint64_t)v8, v30);
  swift_endAccess();
  uint64_t v81 = (void (*)(void, void, void))v26;
  char v82 = v29;
  long long v32 = v29;
  uint64_t v33 = v14;
  long long v73 = v31;
  uint64_t v74 = v15 + 16;
  v31(v26, v32, v14);
  unint64_t v34 = a1 + 12;
  swift_beginAccess();
  unint64_t v35 = a1[12];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  a1[12] = v35;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v35 = sub_25B2189E8(0, *(void *)(v35 + 16) + 1, 1, v35);
    *unint64_t v34 = v35;
  }
  unint64_t v38 = *(void *)(v35 + 16);
  unint64_t v37 = *(void *)(v35 + 24);
  if (v38 >= v37 >> 1)
  {
    unint64_t v35 = sub_25B2189E8(v37 > 1, v38 + 1, 1, v35);
    *unint64_t v34 = v35;
  }
  *(void *)(v35 + 16) = v38 + 1;
  uint64_t v72 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v39 = v35 + ((v72 + 32) & ~v72) + *(void *)(v15 + 72) * v38;
  long long v40 = v81;
  uint64_t v81 = *(void (**)(void, void, void))(v15 + 32);
  v81(v39, v40, v14);
  swift_endAccess();
  uint64_t v41 = v80;
  sub_25B28FFD0();
  uint64_t v42 = v84;
  sub_25B28FF60();
  int64_t v43 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  uint64_t v44 = v43(v41, v33);
  uint64_t v45 = a1[12];
  MEMORY[0x270FA5388](v44);
  *(&v71 - 2) = (uint64_t)v42;
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_25B210238((uint64_t (*)(char *))sub_25B1D8844, (uint64_t)(&v71 - 4), v45);
  uint64_t v47 = *(void *)(v46 + 16);
  if (a1[9] < v47)
  {
    swift_bridgeObjectRelease();
    uint64_t v85 = v47;
    uint64_t v48 = sub_25B290DB0();
    sub_25B2569B0(0x7373416863746157, 0xEE006E6F69747265, 0x7669737365637845, (id)0xEE00746E756F4365, 0x7669737365637845, 0xEE00746E756F4365, v48, v49);
    swift_bridgeObjectRelease();
    uint64_t v46 = MEMORY[0x263F8EE78];
  }
  uint64_t v50 = (uint64_t)v83;
  a1[12] = v46;
  swift_bridgeObjectRelease();
  uint64_t v51 = OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_assertionTimer;
  if (*(void *)((char *)a1 + OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_assertionTimer))
  {
    uint64_t v52 = v79;
    sub_25B1D86FC(v50, v79);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v52, 1, v33) == 1)
    {
      sub_25B1D8764(v52);
      sub_25B2569B0(0x7373416863746157, 0xEE006E6F69747265, 0x6465706D6F7453, (id)0xE700000000000000, 0x6465706D6F7453, 0xE700000000000000, 1701736270, 0xE400000000000000);
    }
    else
    {
      char v67 = v78;
      v81(v78, v52, v33);
      sub_25B1D8874();
      uint64_t v68 = sub_25B290DB0();
      sub_25B2569B0(0x7373416863746157, 0xEE006E6F69747265, 0x6465706D6F7453, (id)0xE700000000000000, 0x6465706D6F7453, 0xE700000000000000, v68, v69);
      swift_bridgeObjectRelease();
      v43(v67, v33);
    }
  }
  else
  {
    type metadata accessor for BasicTimer();
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
    uint64_t v54 = swift_allocObject();
    *(_DWORD *)(v54 + 16) = 0;
    *(void *)(v53 + 24) = v54;
    *(void *)((char *)a1 + v51) = v53;
    if (v53)
    {
      uint64_t v55 = v72;
      uint64_t v56 = a1[11];
      uint64_t v79 = 0;
      uint64_t v57 = a1[2];
      uint64_t v58 = v76;
      v73(v76, v82, v33);
      uint64_t v59 = (v55 + 24) & ~v55;
      long long v80 = (char *)v43;
      unint64_t v60 = (v75 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = a1;
      uint64_t v62 = ((uint64_t (*)(uint64_t, char *, uint64_t))v81)(v61 + v59, v58, v33);
      *(void *)(v61 + v60) = v77;
      long long v63 = *(os_unfair_lock_s **)(v53 + 24);
      uint64_t v64 = MEMORY[0x270FA5388](v62);
      *(&v71 - 6) = v53;
      *(&v71 - 5) = v56;
      *(&v71 - 4) = v57;
      *(&v71 - 3) = (uint64_t)sub_25B1D89A4;
      *(&v71 - 2) = v61;
      MEMORY[0x270FA5388](v64);
      *(&v71 - 2) = (uint64_t)sub_25B10DD5C;
      *(&v71 - 1) = v65;
      swift_retain();
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v63 + 4);
      sub_25B10DDCC(v66);
      os_unfair_lock_unlock(v63 + 4);
      swift_release();
      uint64_t v50 = (uint64_t)v83;
      swift_release();
      int64_t v43 = (uint64_t (*)(char *, uint64_t))v80;
      swift_release();
    }
  }
  sub_25B1D8764(v50);
  v43(v82, v33);
  return v43(v84, v33);
}

uint64_t sub_25B1D7EE0()
{
  sub_25B290000();
  sub_25B1D8874();
  uint64_t v0 = sub_25B290DB0();
  sub_25B2569B0(0x7373416863746157, 0xEE006E6F69747265, 0x74756F656D6954, (id)0xE700000000000000, 0x74756F656D6954, 0xE700000000000000, v0, v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1D7F88()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = v1[2];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_25B1D86CC;
  *(void *)(v5 + 24) = v4;
  v8[4] = sub_25B1168E4;
  v8[5] = v5;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_25B10D184;
  v8[3] = &block_descriptor_8;
  uint64_t v6 = _Block_copy(v8);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B1D8104(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v24 - v6;
  uint64_t v8 = sub_25B290000();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v24 - v13;
  uint64_t v15 = a1 + OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_currentAssertionCreationDate;
  swift_beginAccess();
  sub_25B1D86FC(v15, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_25B1D8764((uint64_t)v7);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  sub_25B28FFD0();
  sub_25B28FF50();
  if (*(double *)(a1 + 64) < v17)
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_25B2907E0();
    sub_25B2569B0(0x7373416863746157, 0xEE006E6F69747265, 0x646C65687265764FLL, (id)0xE800000000000000, 0x646C65687265764FLL, 0xE800000000000000, v26, v27);
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, 1, 1, v8);
  swift_beginAccess();
  sub_25B1A93FC((uint64_t)v5, v15);
  uint64_t v18 = swift_endAccess();
  uint64_t v19 = OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_assertionTimer;
  uint64_t v20 = *(void *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_assertionTimer);
  if (v20)
  {
    v24[1] = v24;
    uint64_t v25 = a1;
    uint64_t v21 = *(os_unfair_lock_s **)(v20 + 24);
    MEMORY[0x270FA5388](v18);
    v24[-2] = sub_25B10DCB4;
    v24[-1] = v20;
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v21 + 4);
    sub_25B10DCD0(v22);
    os_unfair_lock_unlock(v21 + 4);
    swift_release();
    a1 = v25;
    swift_release();
  }
  uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  v23(v12, v8);
  v23(v14, v8);
  *(void *)(a1 + v19) = 0;
  return swift_release();
}

uint64_t sub_25B1D8484()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  sub_25B1D8764(v0 + OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_currentAssertionCreationDate);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_25B1D8510()
{
  return type metadata accessor for WatchAssertionMonitor();
}

uint64_t type metadata accessor for WatchAssertionMonitor()
{
  uint64_t result = qword_26A4DAEC0;
  if (!qword_26A4DAEC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25B1D8564()
{
  sub_25B1AA8CC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for WatchAssertionMonitor.Options(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WatchAssertionMonitor.Options(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WatchAssertionMonitor.Options()
{
  return &type metadata for WatchAssertionMonitor.Options;
}

uint64_t sub_25B1D8694()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B1D86CC()
{
  return sub_25B1D8104(*(void *)(v0 + 16));
}

uint64_t sub_25B1D86D4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_25B1D86FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B1D8764(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B1D87C4()
{
  return sub_25B1D7684(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25B1D87CC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B1D87DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B1D8844()
{
  return sub_25B28FF70() & 1;
}

unint64_t sub_25B1D8874()
{
  unint64_t result = qword_26A4DB020;
  if (!qword_26A4DB020)
  {
    sub_25B290000();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DB020);
  }
  return result;
}

uint64_t sub_25B1D88CC()
{
  uint64_t v1 = sub_25B290000();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_25B1D89A4()
{
  sub_25B290000();
  return sub_25B1D7EE0();
}

uint64_t UnfilteredReplicationPolicy.allowSync<A>(replicator:recordID:pairingRelationship:)()
{
  return 1;
}

ValueMetadata *type metadata accessor for UnfilteredReplicationPolicy()
{
  return &type metadata for UnfilteredReplicationPolicy;
}

uint64_t sub_25B1D8A5C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1D8ABC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B1D8AF4(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_25B1D8B3C())()
{
  return j__swift_endAccess;
}

uint64_t sub_25B1D8B90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v8 = a2[3];
  swift_beginAccess();
  uint64_t v10 = *(void *)(v3 + 16);
  if (!*(void *)(v10 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_25B18A93C(a1);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v20 = sub_25B290080();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a3, 1, 1, v20);
  }
  uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_25B18A768(v7, v6, v9, v8);
    if (v15)
    {
      unint64_t v16 = v14;
      uint64_t v17 = *(void *)(v13 + 56);
      uint64_t v18 = sub_25B290080();
      uint64_t v19 = *(void *)(v18 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v19 + 16))(a3, v17 + *(void *)(v19 + 72) * v16, v18);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(a3, 0, 1, v18);
    }
    else
    {
      uint64_t v23 = sub_25B290080();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a3, 1, 1, v23);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = sub_25B290080();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 1, 1, v22);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1D8DF4(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v48 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v42 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = sub_25B290080();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  char v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v42 - v16;
  uint64_t v18 = *a2;
  uint64_t v19 = a2[1];
  uint64_t v43 = a2[2];
  uint64_t v44 = v18;
  uint64_t v45 = a2[3];
  uint64_t v46 = v19;
  uint64_t v20 = *(void (**)(void, void, void))(v12 + 16);
  uint64_t v47 = a1;
  uint64_t v21 = v20;
  v20((char *)&v42 - v16, a1, v11);
  uint64_t v22 = (uint64_t *)(v3 + 16);
  swift_beginAccess();
  uint64_t v23 = *(void *)(v3 + 16);
  uint64_t v24 = *(void *)(v23 + 16);
  swift_bridgeObjectRetain();
  if (v24 && (unint64_t v25 = sub_25B18A93C((uint64_t)v17), (v26 & 1) != 0))
  {
    unint64_t v27 = *(void *)(*(void *)(v23 + 56) + 8 * v25);
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v27 = sub_25B20D814(MEMORY[0x263F8EE78]);
  }
  swift_bridgeObjectRelease();
  unint64_t v52 = v27;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v28(v17, v11);
  uint64_t v29 = v21;
  v21(v10, v48, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  unint64_t v49 = v28;
  if (v30 == 1)
  {
    uint64_t v31 = v46;
    swift_bridgeObjectRetain();
    uint64_t v48 = v15;
    long long v32 = v29;
    uint64_t v33 = v45;
    swift_bridgeObjectRetain();
    sub_25B1DA620((uint64_t)v10);
    uint64_t v34 = v42;
    sub_25B21CB10(v44, v31, v43, v33, v42);
    uint64_t v29 = v32;
    char v15 = v48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B1DA620(v34);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
    uint64_t v35 = v46;
    swift_bridgeObjectRetain();
    uint64_t v36 = v45;
    swift_bridgeObjectRetain();
    unint64_t v37 = v52;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v51 = v37;
    sub_25B220698((uint64_t)v15, v44, v35, v43, v36, isUniquelyReferenced_nonNull_native);
    unint64_t v52 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v29(v15, v47, v11);
  uint64_t v39 = v52;
  swift_beginAccess();
  char v40 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v50 = *v22;
  *uint64_t v22 = 0x8000000000000000;
  sub_25B2204F0(v39, (uint64_t)v15, v40);
  *uint64_t v22 = v50;
  swift_bridgeObjectRelease();
  v49(v15, v11);
  return swift_endAccess();
}

uint64_t sub_25B1D91EC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_25B18A93C(a1);
  char v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    uint64_t v12 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_25B1933C8();
      uint64_t v8 = v12;
    }
    uint64_t v9 = *(void *)(v8 + 48);
    uint64_t v10 = sub_25B290080();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * v4, v10);
    sub_25B21E258(v4, v12);
    *uint64_t v3 = v12;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1D9300(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  v142 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  v145 = (char *)&v127 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAED0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (int64_t *)((char *)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (int64_t *)((char *)&v127 - v11);
  uint64_t v13 = sub_25B290080();
  uint64_t v153 = *(void *)(v13 - 8);
  uint64_t v154 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  v133 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v141 = (char *)&v127 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v160 = (char *)&v127 - v19;
  MEMORY[0x270FA5388](v18);
  v137 = (char *)&v127 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAED8);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v24 = (char *)&v127 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v134 = (uint64_t)&v127 - v25;
  uint64_t v26 = type metadata accessor for Record.ID(0);
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v29 = (int64_t *)((char *)&v127 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v30 = *(void *)(a1 + 16);
  uint64_t v31 = MEMORY[0x263F8EE78];
  v150 = v10;
  v136 = v24;
  v151 = v12;
  if (v30)
  {
    v158 = v1;
    unint64_t v162 = MEMORY[0x263F8EE78];
    sub_25B2240C0(0, v30, 0);
    uint64_t v32 = a1 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
    uint64_t v33 = *(void *)(v27 + 72);
    uint64_t v31 = v162;
    uint64_t v159 = v33;
    do
    {
      sub_25B1DA680(v32, (uint64_t)v29);
      uint64_t v34 = v29[2];
      uint64_t v35 = v29[3];
      uint64_t v36 = v29[5];
      uint64_t v161 = v29[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B1DA6E4((uint64_t)v29);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25B2240C0(0, *(void *)(v31 + 16) + 1, 1);
        uint64_t v33 = v159;
        uint64_t v31 = v162;
      }
      unint64_t v38 = *(void *)(v31 + 16);
      unint64_t v37 = *(void *)(v31 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_25B2240C0(v37 > 1, v38 + 1, 1);
        uint64_t v33 = v159;
        uint64_t v31 = v162;
      }
      *(void *)(v31 + 16) = v38 + 1;
      uint64_t v39 = (void *)(v31 + 32 * v38);
      v39[4] = v34;
      v39[5] = v35;
      v39[6] = v161;
      v39[7] = v36;
      v32 += v33;
      --v30;
    }
    while (v30);
    uint64_t v10 = v150;
    uint64_t v12 = v151;
    uint64_t v24 = v136;
    uint64_t v1 = v158;
  }
  uint64_t v40 = sub_25B227F10(v31);
  swift_bridgeObjectRelease();
  unint64_t v41 = sub_25B20D620(MEMORY[0x263F8EE78]);
  long long v128 = (unint64_t *)(v1 + 2);
  swift_beginAccess();
  uint64_t v42 = v1[2];
  unint64_t v43 = v41;
  uint64_t v44 = v42[8];
  long long v129 = v42 + 8;
  uint64_t v45 = 1 << *((unsigned char *)v42 + 32);
  if (v45 < 64) {
    uint64_t v46 = ~(-1 << v45);
  }
  else {
    uint64_t v46 = -1;
  }
  unint64_t v139 = v46 & v44;
  v155 = (void (**)(char *, char *, uint64_t))(v153 + 16);
  v158 = (void (**)(void, void, void))(v153 + 32);
  uint64_t v161 = v40;
  uint64_t v47 = v40 + 56;
  v152 = (void (**)(uint64_t, uint64_t))(v153 + 8);
  v147 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56);
  v144 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v153 + 48);
  uint64_t v140 = v153 + 40;
  int64_t v130 = (unint64_t)(v45 + 63) >> 6;
  int64_t v127 = v130 - 1;
  v131 = v42;
  swift_bridgeObjectRetain();
  int64_t v135 = 0;
  uint64_t v48 = v154;
LABEL_14:
  unint64_t v138 = v43;
  if (v139)
  {
    unint64_t v54 = __clz(__rbit64(v139));
    v139 &= v139 - 1;
    unint64_t v55 = v54 | (v135 << 6);
LABEL_16:
    uint64_t v56 = v131;
    uint64_t v24 = v136;
    (*(void (**)(char *, unint64_t, uint64_t))(v153 + 16))(v136, v131[6] + *(void *)(v153 + 72) * v55, v48);
    uint64_t v57 = v56[7];
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAEE0);
    *(void *)&v24[*(int *)(v58 + 48)] = *(void *)(v57 + 8 * v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v24, 0, 1, v58);
    swift_bridgeObjectRetain();
    goto LABEL_35;
  }
  int64_t v59 = v135 + 1;
  if (__OFADD__(v135, 1))
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  if (v59 < v130)
  {
    unint64_t v60 = v129[v59];
    if (v60)
    {
LABEL_20:
      unint64_t v139 = (v60 - 1) & v60;
      unint64_t v55 = __clz(__rbit64(v60)) + (v59 << 6);
      int64_t v135 = v59;
      goto LABEL_16;
    }
    int64_t v61 = v135 + 2;
    ++v135;
    if (v59 + 1 < v130)
    {
      unint64_t v60 = v129[v61];
      if (v60)
      {
LABEL_23:
        int64_t v59 = v61;
        goto LABEL_20;
      }
      int64_t v135 = v59 + 1;
      if (v59 + 2 < v130)
      {
        unint64_t v60 = v129[v59 + 2];
        if (v60)
        {
          v59 += 2;
          goto LABEL_20;
        }
        int64_t v61 = v59 + 3;
        int64_t v135 = v59 + 2;
        if (v59 + 3 < v130)
        {
          unint64_t v60 = v129[v61];
          if (v60) {
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v59 = v61 + 1;
            if (__OFADD__(v61, 1)) {
              goto LABEL_103;
            }
            if (v59 >= v130) {
              break;
            }
            unint64_t v60 = v129[v59];
            ++v61;
            if (v60) {
              goto LABEL_20;
            }
          }
          int64_t v135 = v127;
        }
      }
    }
  }
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAEE0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v24, 1, 1, v62);
  unint64_t v139 = 0;
LABEL_35:
  uint64_t v63 = v134;
  sub_25B187574((uint64_t)v24, v134, &qword_26A4DAED8);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAEE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 48))(v63, 1, v64) == 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    *long long v128 = v138;
    return swift_bridgeObjectRelease();
  }
  uint64_t v65 = *(void *)(v63 + *(int *)(v64 + 48));
  v157 = (void (*)(char *, uint64_t, uint64_t))*v158;
  v157(v137, v63, v48);
  unint64_t v148 = sub_25B20D814(MEMORY[0x263F8EE78]);
  int64_t v156 = 0;
  uint64_t v66 = *(void *)(v65 + 64);
  uint64_t v143 = v65 + 64;
  uint64_t v149 = v65;
  uint64_t v67 = 1 << *(unsigned char *)(v65 + 32);
  if (v67 < 64) {
    uint64_t v68 = ~(-1 << v67);
  }
  else {
    uint64_t v68 = -1;
  }
  unint64_t v69 = v68 & v66;
  int64_t v146 = (unint64_t)(v67 + 63) >> 6;
  int64_t v132 = v146 - 1;
  if (v69)
  {
LABEL_40:
    uint64_t v159 = (v69 - 1) & v69;
    unint64_t v70 = __clz(__rbit64(v69)) | (v156 << 6);
LABEL_41:
    uint64_t v71 = *(void *)(v149 + 56);
    uint64_t v72 = (void *)(*(void *)(v149 + 48) + 32 * v70);
    uint64_t v73 = v72[1];
    uint64_t v74 = v72[2];
    uint64_t v75 = v72[3];
    *uint64_t v10 = *v72;
    v10[1] = v73;
    void v10[2] = v74;
    v10[3] = v75;
    uint64_t v76 = v153;
    uint64_t v77 = v71 + *(void *)(v153 + 72) * v70;
    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAEE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))((char *)v10 + *(int *)(v78 + 48), v77, v48);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v10, 0, 1, v78);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_60;
  }
  while (1)
  {
    int64_t v79 = v156 + 1;
    if (__OFADD__(v156, 1))
    {
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
    if (v79 < v146)
    {
      unint64_t v80 = *(void *)(v143 + 8 * v79);
      if (v80) {
        goto LABEL_45;
      }
      int64_t v81 = v156 + 2;
      ++v156;
      if (v79 + 1 < v146)
      {
        unint64_t v80 = *(void *)(v143 + 8 * v81);
        if (v80) {
          goto LABEL_48;
        }
        int64_t v156 = v79 + 1;
        if (v79 + 2 < v146)
        {
          unint64_t v80 = *(void *)(v143 + 8 * (v79 + 2));
          if (v80)
          {
            v79 += 2;
            goto LABEL_45;
          }
          int64_t v81 = v79 + 3;
          int64_t v156 = v79 + 2;
          if (v79 + 3 < v146) {
            break;
          }
        }
      }
    }
LABEL_59:
    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAEE8);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v10, 1, 1, v82);
    uint64_t v159 = 0;
LABEL_60:
    sub_25B187574((uint64_t)v10, (uint64_t)v12, &qword_26A4DAED0);
    uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAEE8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v83 - 8) + 48))(v12, 1, v83) == 1)
    {
      swift_release();
      uint64_t v49 = (uint64_t)v133;
      uint64_t v50 = v137;
      (*v155)(v133, v137, v48);
      unint64_t v51 = v138;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v162 = v51;
      sub_25B2204F0(v148, v49, isUniquelyReferenced_nonNull_native);
      unint64_t v43 = v162;
      swift_bridgeObjectRelease();
      uint64_t v53 = *v152;
      (*v152)(v49, v48);
      v53((uint64_t)v50, v48);
      uint64_t v24 = v136;
      goto LABEL_14;
    }
    uint64_t v85 = *v12;
    uint64_t v84 = v12[1];
    uint64_t v86 = v12[2];
    uint64_t v87 = v12[3];
    v157(v160, (uint64_t)v12 + *(int *)(v83 + 48), v48);
    if (*(void *)(v161 + 16)
      && (uint64_t v88 = v161,
          sub_25B291210(),
          sub_25B290630(),
          sub_25B290630(),
          uint64_t v89 = sub_25B291260(),
          uint64_t v90 = -1 << *(unsigned char *)(v88 + 32),
          unint64_t v91 = v89 & ~v90,
          ((*(void *)(v47 + ((v91 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v91) & 1) != 0))
    {
      uint64_t v92 = ~v90;
      uint64_t v93 = *(void *)(v161 + 48);
      while (1)
      {
        uint64_t v94 = (void *)(v93 + 32 * v91);
        uint64_t v95 = v94[2];
        uint64_t v96 = v94[3];
        BOOL v97 = *v94 == v85 && v94[1] == v84;
        if (v97 || (sub_25B290FB0() & 1) != 0)
        {
          BOOL v98 = v95 == v86 && v96 == v87;
          if (v98 || (sub_25B290FB0() & 1) != 0) {
            break;
          }
        }
        unint64_t v91 = (v91 + 1) & v92;
        if (((*(void *)(v47 + ((v91 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v91) & 1) == 0) {
          goto LABEL_77;
        }
      }
      uint64_t v48 = v154;
      (*v152)((uint64_t)v160, v154);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = v150;
      uint64_t v12 = v151;
      unint64_t v69 = v159;
      if (v159) {
        goto LABEL_40;
      }
    }
    else
    {
LABEL_77:
      uint64_t v48 = v154;
      uint64_t v99 = (uint64_t)v145;
      (*v155)(v145, v160, v154);
      uint64_t v100 = *v147;
      (*v147)(v99, 0, 1, v48);
      if ((*v144)(v99, 1, v48) == 1)
      {
        sub_25B1DA620(v99);
        uint64_t v101 = v148;
        swift_bridgeObjectRetain();
        unint64_t v102 = sub_25B18A768(v85, v84, v86, v87);
        char v104 = v103;
        swift_bridgeObjectRelease();
        if (v104)
        {
          int v105 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v162 = v101;
          uint64_t v10 = v150;
          if (!v105)
          {
            sub_25B193660();
            uint64_t v101 = v162;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v106 = (uint64_t)v142;
          v157(v142, *(void *)(v101 + 56) + *(void *)(v153 + 72) * v102, v48);
          unint64_t v148 = v101;
          sub_25B21E550(v102, v101);
          swift_bridgeObjectRelease();
          uint64_t v107 = 0;
          uint64_t v12 = v151;
        }
        else
        {
          uint64_t v107 = 1;
          uint64_t v106 = (uint64_t)v142;
          uint64_t v10 = v150;
          uint64_t v12 = v151;
        }
        v100(v106, v107, 1, v48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25B1DA620(v106);
      }
      else
      {
        long long v108 = v141;
        v157(v141, v99, v48);
        unint64_t v109 = v148;
        int v110 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v162 = v109;
        unint64_t v112 = sub_25B18A768(v85, v84, v86, v87);
        uint64_t v113 = *(void *)(v109 + 16);
        BOOL v114 = (v111 & 1) == 0;
        uint64_t v115 = v113 + v114;
        if (__OFADD__(v113, v114)) {
          goto LABEL_99;
        }
        char v116 = v111;
        if (*(void *)(v109 + 24) >= v115)
        {
          if ((v110 & 1) == 0) {
            sub_25B193660();
          }
        }
        else
        {
          sub_25B18DB34(v115, v110);
          unint64_t v117 = sub_25B18A768(v85, v84, v86, v87);
          if ((v116 & 1) != (v118 & 1)) {
            goto LABEL_104;
          }
          unint64_t v112 = v117;
        }
        uint64_t v12 = v151;
        v119 = (void *)v162;
        if (v116)
        {
          unint64_t v120 = *(void *)(v162 + 56) + *(void *)(v153 + 72) * v112;
          uint64_t v48 = v154;
          (*(void (**)(unint64_t, char *, uint64_t))(v153 + 40))(v120, v108, v154);
        }
        else
        {
          *(void *)(v162 + 8 * (v112 >> 6) + 64) |= 1 << v112;
          long long v121 = (uint64_t *)(v119[6] + 32 * v112);
          *long long v121 = v85;
          v121[1] = v84;
          v121[2] = v86;
          v121[3] = v87;
          unint64_t v122 = v119[7] + *(void *)(v153 + 72) * v112;
          uint64_t v48 = v154;
          v157((char *)v122, (uint64_t)v108, v154);
          uint64_t v123 = v119[2];
          BOOL v124 = __OFADD__(v123, 1);
          uint64_t v125 = v123 + 1;
          if (v124) {
            goto LABEL_100;
          }
          _OWORD v119[2] = v125;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        unint64_t v148 = v162;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v150;
      }
      (*v152)((uint64_t)v160, v48);
      unint64_t v69 = v159;
      if (v159) {
        goto LABEL_40;
      }
    }
  }
  unint64_t v80 = *(void *)(v143 + 8 * v81);
  if (v80)
  {
LABEL_48:
    int64_t v79 = v81;
LABEL_45:
    uint64_t v159 = (v80 - 1) & v80;
    unint64_t v70 = __clz(__rbit64(v80)) + (v79 << 6);
    int64_t v156 = v79;
    goto LABEL_41;
  }
  while (1)
  {
    int64_t v79 = v81 + 1;
    if (__OFADD__(v81, 1)) {
      break;
    }
    if (v79 >= v146)
    {
      int64_t v156 = v132;
      goto LABEL_59;
    }
    unint64_t v80 = *(void *)(v143 + 8 * v79);
    ++v81;
    if (v80) {
      goto LABEL_45;
    }
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t sub_25B1DA424()
{
  swift_beginAccess();
  *(void *)(v0 + 16) = MEMORY[0x263F8EE80];
  return swift_bridgeObjectRelease();
}

uint64_t ZoneVersionInMemoryStore.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ZoneVersionInMemoryStore.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_25B1DA4C0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B1DA504@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25B1D8B90(a1, a2, a3);
}

uint64_t sub_25B1DA528(uint64_t a1, uint64_t *a2, char *a3)
{
  return sub_25B1D8DF4(a1, a2, a3);
}

uint64_t sub_25B1DA54C(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1DA5AC(uint64_t a1)
{
  return sub_25B1D9300(a1);
}

uint64_t sub_25B1DA5D0()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  *(void *)(v1 + 16) = MEMORY[0x263F8EE80];
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1DA620(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B1DA680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Record.ID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B1DA6E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Record.ID(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B1DA740@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ZoneVersionInMemoryStore()
{
  return self;
}

uint64_t method lookup function for ZoneVersionInMemoryStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ZoneVersionInMemoryStore);
}

uint64_t dispatch thunk of ZoneVersionInMemoryStore.zoneVersions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of ZoneVersionInMemoryStore.zoneVersions.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ZoneVersionInMemoryStore.zoneVersions.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ZoneVersionInMemoryStore.zoneVersion(relationshipID:zoneID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ZoneVersionInMemoryStore.update(relationshipID:zoneID:version:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ZoneVersionInMemoryStore.remove(relationshipID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ZoneVersionInMemoryStore.remove(recordIDs:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ZoneVersionInMemoryStore.removeAll()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t sub_25B1DA8F0()
{
  if (*v0) {
    return 1752392040;
  }
  else {
    return 0x7974706D65;
  }
}

uint64_t sub_25B1DA920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B1DBF3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B1DA948(uint64_t a1)
{
  unint64_t v2 = sub_25B1DB7BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1DA984(uint64_t a1)
{
  unint64_t v2 = sub_25B1DB7BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1DA9C0(uint64_t a1)
{
  unint64_t v2 = sub_25B1DB8C8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1DA9FC(uint64_t a1)
{
  unint64_t v2 = sub_25B1DB8C8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B1DAA38(uint64_t a1)
{
  unint64_t v2 = sub_25B1DB874();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1DAA74(uint64_t a1)
{
  unint64_t v2 = sub_25B1DB874();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ZoneVersion.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9CC0);
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v25 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25B290080();
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v24 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9CC8);
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ZoneVersion();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9CB8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1DB7BC();
  uint64_t v16 = v28;
  sub_25B291290();
  sub_25B1DB810(v29, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v4) == 1)
  {
    char v30 = 0;
    sub_25B1DB8C8();
    sub_25B290D10();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v23);
  }
  else
  {
    uint64_t v18 = v24;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v24, v11, v4);
    char v31 = 1;
    sub_25B1DB874();
    uint64_t v19 = v25;
    sub_25B290D10();
    sub_25B11FEE0((unint64_t *)&unk_26A4D9210);
    uint64_t v20 = v27;
    sub_25B290D60();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v20);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v4);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t ZoneVersion.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9C68);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v42 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9C70);
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v41 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9C60);
  uint64_t v40 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ZoneVersion();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v32 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1DB7BC();
  uint64_t v17 = v43;
  sub_25B291280();
  if (!v17)
  {
    uint64_t v33 = v14;
    uint64_t v34 = v16;
    uint64_t v18 = v41;
    uint64_t v19 = v42;
    unint64_t v43 = a1;
    uint64_t v20 = sub_25B290CF0();
    uint64_t v21 = (char *)v20;
    if (*(void *)(v20 + 16) == 1)
    {
      a1 = v43;
      if (*(unsigned char *)(v20 + 32))
      {
        char v45 = 1;
        sub_25B1DB874();
        uint64_t v22 = v19;
        sub_25B290C40();
        uint64_t v27 = sub_25B290080();
        sub_25B11FEE0(&qword_26A4D9228);
        uint64_t v28 = (uint64_t)v33;
        unint64_t v41 = v21;
        uint64_t v29 = v37;
        sub_25B290CC0();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v29);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v8);
        a1 = v43;
        uint64_t v30 = (uint64_t)v34;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v28, 0, 1, v27);
        sub_25B1DB91C(v28, v30);
      }
      else
      {
        char v44 = 0;
        sub_25B1DB8C8();
        sub_25B290C40();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v36);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v8);
        uint64_t v31 = sub_25B290080();
        uint64_t v30 = (uint64_t)v34;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v34, 1, 1, v31);
      }
      sub_25B1DB91C(v30, v39);
    }
    else
    {
      uint64_t v23 = sub_25B290AF0();
      swift_allocError();
      uint64_t v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F360);
      *uint64_t v25 = v11;
      sub_25B290C50();
      sub_25B290AD0();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x263F8DCB0], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v8);
      a1 = v43;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_25B1DB4C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ZoneVersion.init(from:)(a1, a2);
}

uint64_t sub_25B1DB4E0(void *a1)
{
  return ZoneVersion.encode(to:)(a1);
}

uint64_t _s16ReplicatorEngine11ZoneVersionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ZoneVersion();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9390);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_25B1DB810(a1, (uint64_t)v14);
  sub_25B1DB810(a2, v15);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_25B1DB810((uint64_t)v14, (uint64_t)v10);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      char v17 = sub_25B290030();
      uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_25B1DC018((uint64_t)v14);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_25B1BD268((uint64_t)v14);
    char v17 = 0;
    return v17 & 1;
  }
  sub_25B1DC018((uint64_t)v14);
  char v17 = 1;
  return v17 & 1;
}

uint64_t type metadata accessor for ZoneVersion()
{
  uint64_t result = qword_26A4D9170;
  if (!qword_26A4D9170) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_25B1DB7BC()
{
  unint64_t result = qword_26A4D9340;
  if (!qword_26A4D9340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9340);
  }
  return result;
}

uint64_t sub_25B1DB810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ZoneVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_25B1DB874()
{
  unint64_t result = qword_26A4D9358;
  if (!qword_26A4D9358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9358);
  }
  return result;
}

unint64_t sub_25B1DB8C8()
{
  unint64_t result = qword_26A4D9ED8;
  if (!qword_26A4D9ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9ED8);
  }
  return result;
}

uint64_t sub_25B1DB91C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ZoneVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for ZoneVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B1DB994);
}

uint64_t sub_25B1DB994(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ZoneVersion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B1DBA14);
}

uint64_t sub_25B1DBA14(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

unsigned char *storeEnumTagSinglePayload for ZoneVersion.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B1DBB60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ZoneVersion.CodingKeys()
{
  return &type metadata for ZoneVersion.CodingKeys;
}

ValueMetadata *type metadata accessor for ZoneVersion.EmptyCodingKeys()
{
  return &type metadata for ZoneVersion.EmptyCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ZoneVersion.HashCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B1DBC44);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ZoneVersion.HashCodingKeys()
{
  return &type metadata for ZoneVersion.HashCodingKeys;
}

unint64_t sub_25B1DBC80()
{
  unint64_t result = qword_26A4DAEF0;
  if (!qword_26A4DAEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAEF0);
  }
  return result;
}

unint64_t sub_25B1DBCD8()
{
  unint64_t result = qword_26A4DAEF8;
  if (!qword_26A4DAEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAEF8);
  }
  return result;
}

unint64_t sub_25B1DBD30()
{
  unint64_t result = qword_26A4D9378;
  if (!qword_26A4D9378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9378);
  }
  return result;
}

unint64_t sub_25B1DBD88()
{
  unint64_t result = qword_26A4D9370;
  if (!qword_26A4D9370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9370);
  }
  return result;
}

unint64_t sub_25B1DBDE0()
{
  unint64_t result = qword_26A4D9368;
  if (!qword_26A4D9368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9368);
  }
  return result;
}

unint64_t sub_25B1DBE38()
{
  unint64_t result = qword_26A4D9360;
  if (!qword_26A4D9360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9360);
  }
  return result;
}

unint64_t sub_25B1DBE90()
{
  unint64_t result = qword_26A4D9350;
  if (!qword_26A4D9350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9350);
  }
  return result;
}

unint64_t sub_25B1DBEE8()
{
  unint64_t result = qword_26A4D9348;
  if (!qword_26A4D9348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9348);
  }
  return result;
}

uint64_t sub_25B1DBF3C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974706D65 && a2 == 0xE500000000000000;
  if (v2 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1752392040 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25B1DC018(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ZoneVersion();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B1DC074()
{
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v1 = MEMORY[0x270FA5388](v43);
  int v3 = (uint64_t *)((char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = MEMORY[0x270FA5388](v1);
  uint64_t v42 = (uint64_t)&v38 - v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v41 = (uint64_t)&v38 - v6;
  uint64_t v7 = *(os_unfair_lock_s **)(v0 + 96);
  uint64_t v46 = sub_25B1DC4F0;
  uint64_t v47 = v0;
  uint64_t v8 = v7 + 4;
  os_unfair_lock_lock(v7 + 4);
  sub_25B1E3FE4(&v48);
  os_unfair_lock_unlock(v8);
  uint64_t v49 = MEMORY[0x263F8EE88];
  uint64_t v9 = *(void *)(v48 + 64);
  uint64_t v39 = v48 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v48 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v40 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v44 = v48;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v45)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      int64_t v45 = i;
      unint64_t v16 = v15 | (i << 6);
      goto LABEL_5;
    }
    int64_t v33 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v33 >= v40) {
      goto LABEL_23;
    }
    unint64_t v34 = *(void *)(v39 + 8 * v33);
    int64_t v35 = i + 1;
    if (!v34)
    {
      int64_t v35 = i + 2;
      if (i + 2 >= v40) {
        goto LABEL_23;
      }
      unint64_t v34 = *(void *)(v39 + 8 * v35);
      if (!v34)
      {
        int64_t v35 = i + 3;
        if (i + 3 >= v40) {
          goto LABEL_23;
        }
        unint64_t v34 = *(void *)(v39 + 8 * v35);
        if (!v34)
        {
          int64_t v35 = i + 4;
          if (i + 4 >= v40) {
            goto LABEL_23;
          }
          unint64_t v34 = *(void *)(v39 + 8 * v35);
          if (!v34) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v34 - 1) & v34;
    int64_t v45 = v35;
    unint64_t v16 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_5:
    uint64_t v17 = v44;
    uint64_t v18 = *(void *)(v44 + 48);
    uint64_t v19 = type metadata accessor for Record.ID(0);
    uint64_t v20 = v41;
    sub_25B1E4998(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v16, v41, type metadata accessor for Record.ID);
    uint64_t v21 = *(void *)(v17 + 56);
    uint64_t v22 = v21 + *(void *)(*(void *)(type metadata accessor for RecordMetadata() - 8) + 72) * v16;
    uint64_t v23 = v43;
    sub_25B1E4998(v22, v20 + *(int *)(v43 + 48), (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v24 = v20;
    uint64_t v25 = v42;
    sub_25B187574(v24, v42, &qword_26A4D9860);
    uint64_t v26 = *(int *)(v23 + 48);
    uint64_t v27 = (uint64_t)v3 + v26;
    uint64_t v28 = v25 + v26;
    sub_25B1E4998(v25, (uint64_t)v3, type metadata accessor for Record.ID);
    sub_25B1E4998(v28, v27, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v29 = v3[2];
    uint64_t v30 = v3[3];
    uint64_t v31 = v3[4];
    uint64_t v32 = v3[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B1E48AC((uint64_t)v3, type metadata accessor for Record.ID);
    sub_25B219270(&v48, v29, v30, v31, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B1E48AC(v27, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t result = sub_25B116DE0(v25, &qword_26A4D9860);
  }
  uint64_t v36 = i + 5;
  if (i + 5 >= v40)
  {
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_25B2257B4(v49);
    swift_bridgeObjectRelease();
    return (uint64_t)v37;
  }
  unint64_t v34 = *(void *)(v39 + 8 * v36);
  if (v34)
  {
    int64_t v35 = i + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v35 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v35 >= v40) {
      goto LABEL_23;
    }
    unint64_t v34 = *(void *)(v39 + 8 * v35);
    ++v36;
    if (v34) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25B1DC484()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1E3FE4(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_25B1DC4F0@<X0>(void *a1@<X8>)
{
  return sub_25B1E4A00(a1);
}

uint64_t sub_25B1DC508()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1E3FE4(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t MetadataStore.__allocating_init(persistentStore:zoneVersionStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  MetadataStore.init(persistentStore:zoneVersionStore:)(a1, a2);
  return v4;
}

uint64_t MetadataStore.init(persistentStore:zoneVersionStore:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = 0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x263F8EE80];
  *(void *)(v2 + 96) = v5;
  *(void *)(v2 + 104) = v6;
  *(void *)(v2 + 120) = 0;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 112) = v6;
  *(_WORD *)(v2 + 136) = 1;
  *(void *)(v2 + 144) = MEMORY[0x263F8EE88];
  swift_beginAccess();
  sub_25B1E4014(a1, v2 + 16);
  swift_endAccess();
  uint64_t v7 = sub_25B10FF48(a2, v2 + 56);
  uint64_t v8 = (void *)MEMORY[0x26115FD30](v7);
  sub_25B1E18B4(v2);
  __swift_destroy_boxed_opaque_existential_1(a2);
  sub_25B116DE0(a1, &qword_26A4D97D0);
  return v2;
}

uint64_t MetadataStore.deinit()
{
  sub_25B116DE0(v0 + 16, &qword_26A4D97D0);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MetadataStore.__deallocating_deinit()
{
  sub_25B116DE0(v0 + 16, &qword_26A4D97D0);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_25B1DC78C()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1E3FE4(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

void sub_25B1DC7FC()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B10DDCC(v2);
  os_unfair_lock_unlock(v1);
}

void MetadataStore.zoneVersion(for:pairingRelationship:)()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B10DCD0(v2);
  os_unfair_lock_unlock(v1);
}

unint64_t sub_25B1DC910(uint64_t a1)
{
  return MetadataStore.zoneVersions(for:)(a1);
}

unint64_t MetadataStore.zoneVersions(for:)(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for PairingRelationship() + 32);
  uint64_t v2 = *(void *)v1;
  unint64_t v3 = *(void *)(v1 + 8);
  if (v3 == 2)
  {
    sub_25B1200A4(*(void *)v1, 2uLL);
    sub_25B1200A4(0, 2uLL);
    uint64_t v4 = sub_25B1DC074();
    uint64_t v10 = MEMORY[0x270FA5388](v4);
    MEMORY[0x270FA5388](v10);
    uint64_t v6 = v5 + 4;
    os_unfair_lock_lock(v5 + 4);
    sub_25B1E3FE4(&v11);
    os_unfair_lock_unlock(v6);
    uint64_t v7 = v11;
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    sub_25B120090(*(void *)v1, *(void *)(v1 + 8));
    sub_25B1200A4(v2, v3);
    sub_25B1200A4(0, 2uLL);
    uint64_t v9 = MEMORY[0x263F8EE78];
    return sub_25B20DA2C(v9);
  }
}

uint64_t MetadataStore.clientDefinedID(for:)(uint64_t a1)
{
  swift_beginAccess();
  sub_25B187628(v1 + 16, (uint64_t)v10, &qword_26A4D97D0);
  if (v11)
  {
    sub_25B10FF48((uint64_t)v10, (uint64_t)v7);
    sub_25B116DE0((uint64_t)v10, &qword_26A4D97D0);
    uint64_t v3 = v8;
    uint64_t v4 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 + 8) + 56))(a1, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    sub_25B116DE0((uint64_t)v10, &qword_26A4D97D0);
    return 0;
  }
  return v5;
}

uint64_t sub_25B1DCB7C()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1E4190(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t MetadataStore.localDeviceID.getter()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1E4190(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_25B1DCC58()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1E4AE0(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t MetadataStore.isEnabled.getter()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1E41B4(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_25B1DCD34()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1E3FE4(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_25B1DCDA4()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1E4AE0(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t MetadataStore.allowListEnabled.getter()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1E4AE0(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_25B1DCE80()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1E3FE4(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t MetadataStore.allowList.getter()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1E3FE4(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_25B1DCF5C(uint64_t a1)
{
  return MetadataStore.clientDefinedID(for:)(a1);
}

void sub_25B1DCF80(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(*(void *)a1 + 96) + 16);
  os_unfair_lock_lock(v3);
  sub_25B1E4AE0(&v4);
  os_unfair_lock_unlock(v3);
  *a2 = v4;
}

uint64_t MetadataStore.allowListEnabled.setter(char a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 96) + 16);
  os_unfair_lock_lock(v3);
  sub_25B10DCD0(v4);
  os_unfair_lock_unlock(v3);
  uint64_t v6 = sub_25B1D8B3C();
  uint64_t v7 = *(void *)(v5 + 24);
  if (v7)
  {
    uint64_t v8 = *(void *)(v5 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v5, *(void *)(v5 + 24));
    (*(void (**)(void, uint64_t, uint64_t))(v8 + 48))(a1 & 1, v7, v8);
  }
  return ((uint64_t (*)(unsigned char *, void))v6)(v10, 0);
}

uint64_t (*MetadataStore.allowListEnabled.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 96) + 16);
  os_unfair_lock_lock(v3);
  sub_25B1E4AE0(v5);
  os_unfair_lock_unlock(v3);
  *(unsigned char *)(a1 + 8) = v5[0];
  return sub_25B1DD170;
}

uint64_t sub_25B1DD170(uint64_t a1)
{
  return MetadataStore.allowListEnabled.setter(*(unsigned char *)(a1 + 8));
}

void sub_25B1DD198(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(*(void *)a1 + 96) + 16);
  os_unfair_lock_lock(v3);
  sub_25B1E3FE4(&v4);
  os_unfair_lock_unlock(v3);
  *a2 = v4;
}

uint64_t MetadataStore.allowList.setter(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 96) + 16);
  os_unfair_lock_lock(v3);
  sub_25B10DDCC(v4);
  os_unfair_lock_unlock(v3);
  uint64_t v6 = sub_25B1D8B3C();
  uint64_t v7 = *(void *)(v5 + 24);
  if (v7)
  {
    uint64_t v8 = *(void *)(v5 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v5, *(void *)(v5 + 24));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 64))(a1, v7, v8);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return ((uint64_t (*)(unsigned char *, void))v6)(v10, 0);
}

uint64_t (*MetadataStore.allowList.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 96) + 16);
  os_unfair_lock_lock(v3);
  sub_25B1E3FE4(&v5);
  os_unfair_lock_unlock(v3);
  *a1 = v5;
  return sub_25B1DD390;
}

uint64_t sub_25B1DD390(uint64_t *a1, char a2)
{
  if ((a2 & 1) == 0) {
    return MetadataStore.allowList.setter(*a1);
  }
  uint64_t v2 = swift_bridgeObjectRetain();
  MetadataStore.allowList.setter(v2);
  return swift_bridgeObjectRelease();
}

double sub_25B1DD3E8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(*(void *)a1 + 96) + 16);
  os_unfair_lock_lock(v3);
  sub_25B1E4190(&v5);
  os_unfair_lock_unlock(v3);
  double result = *(double *)&v5;
  *a2 = v5;
  return result;
}

uint64_t MetadataStore.localDeviceID.setter(uint64_t a1, uint64_t a2)
{
  long long v5 = (os_unfair_lock_s *)(*(void *)(v2 + 96) + 16);
  os_unfair_lock_lock(v5);
  sub_25B10DDCC(v6);
  os_unfair_lock_unlock(v5);
  uint64_t v8 = sub_25B1D8B3C();
  uint64_t v9 = *(void *)(v7 + 24);
  if (v9)
  {
    uint64_t v10 = *(void *)(v7 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v7, *(void *)(v7 + 24));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, a2, v9, v10);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return ((uint64_t (*)(unsigned char *, void))v8)(v12, 0);
}

uint64_t (*MetadataStore.localDeviceID.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 96) + 16);
  os_unfair_lock_lock(v3);
  sub_25B1E4190(&v5);
  os_unfair_lock_unlock(v3);
  *(_OWORD *)a1 = v5;
  return sub_25B1DD5F4;
}

uint64_t sub_25B1DD5F4(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if ((a2 & 1) == 0) {
    return MetadataStore.localDeviceID.setter(*a1, v2);
  }
  swift_bridgeObjectRetain();
  MetadataStore.localDeviceID.setter(v3, v2);
  return swift_bridgeObjectRelease();
}

void sub_25B1DD668(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(*(void *)a1 + 96) + 16);
  os_unfair_lock_lock(v3);
  sub_25B1E4AE0(&v4);
  os_unfair_lock_unlock(v3);
  *a2 = v4;
}

uint64_t MetadataStore.isEnabled.setter(char a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 96) + 16);
  os_unfair_lock_lock(v3);
  sub_25B10DDCC(v4);
  os_unfair_lock_unlock(v3);
  uint64_t v6 = sub_25B1D8B3C();
  uint64_t v7 = *(void *)(v5 + 24);
  if (v7)
  {
    uint64_t v8 = *(void *)(v5 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v5, *(void *)(v5 + 24));
    (*(void (**)(void, uint64_t, uint64_t))(v8 + 32))(a1 & 1, v7, v8);
  }
  return ((uint64_t (*)(unsigned char *, void))v6)(v10, 0);
}

uint64_t (*MetadataStore.isEnabled.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 96) + 16);
  os_unfair_lock_lock(v3);
  sub_25B1E4AE0(v5);
  os_unfair_lock_unlock(v3);
  *(unsigned char *)(a1 + 8) = v5[0];
  return sub_25B1DD858;
}

uint64_t sub_25B1DD858(uint64_t a1)
{
  return MetadataStore.isEnabled.setter(*(unsigned char *)(a1 + 8));
}

Swift::Void __swiftcall MetadataStore.removeAll()()
{
  uint64_t v1 = v0;
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B290190();
  __swift_project_value_buffer(v2, (uint64_t)qword_26A4EB150);
  uint64_t v3 = sub_25B290160();
  os_log_type_t v4 = sub_25B2908A0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_25B107000, v3, v4, "Removing all metadata store records", v5, 2u);
    MEMORY[0x261160890](v5, -1, -1);
  }

  MEMORY[0x270FA5388](v6);
  uint64_t v8 = v7 + 4;
  os_unfair_lock_lock(v7 + 4);
  sub_25B10DDCC(v9);
  os_unfair_lock_unlock(v8);
  swift_beginAccess();
  sub_25B187628((uint64_t)(v1 + 2), (uint64_t)v18, &qword_26A4D97D0);
  if (v19)
  {
    sub_25B10FF48((uint64_t)v18, (uint64_t)v15);
    sub_25B116DE0((uint64_t)v18, &qword_26A4D97D0);
    uint64_t v10 = v16;
    uint64_t v11 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    (*(void (**)(uint64_t, uint64_t))(v11 + 80))(v10, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    sub_25B116DE0((uint64_t)v18, &qword_26A4D97D0);
  }
  unint64_t v12 = v1 + 7;
  uint64_t v14 = v1[10];
  uint64_t v13 = v1[11];
  __swift_project_boxed_opaque_existential_1(v12, v14);
  (*(void (**)(uint64_t, uint64_t))(v13 + 48))(v14, v13);
}

uint64_t MetadataStore.update(_:)(uint64_t a1)
{
  uint64_t v3 = sub_25B290080();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(os_unfair_lock_s **)(v1 + 96);
  uint64_t v41 = v1;
  uint64_t v42 = a1;
  uint64_t v29 = a1;
  uint64_t v38 = sub_25B1E42EC;
  uint64_t v39 = &v40;
  uint64_t v11 = v10 + 4;
  os_unfair_lock_lock(v10 + 4);
  sub_25B1E3FE4(v46);
  os_unfair_lock_unlock(v11);
  uint64_t v12 = *(void *)(v46[0] + 56);
  uint64_t v30 = v46[0] + 56;
  uint64_t v37 = v46[0];
  uint64_t v13 = 1 << *(unsigned char *)(v46[0] + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v36 = v1 + 16;
  uint64_t result = swift_beginAccess();
  int64_t v17 = 0;
  int64_t v31 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v34 = v4 + 16;
  int64_t v35 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v33 = v4 + 48;
  uint64_t v32 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  uint64_t v18 = (void (**)(char *, uint64_t))(v4 + 8);
  if (v15) {
    goto LABEL_23;
  }
LABEL_6:
  int64_t v19 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v19 < v31)
  {
    unint64_t v20 = *(void *)(v30 + 8 * v19);
    ++v17;
    if (v20) {
      goto LABEL_19;
    }
    int64_t v17 = v19 + 1;
    if (v19 + 1 < v31)
    {
      unint64_t v20 = *(void *)(v30 + 8 * v17);
      if (v20) {
        goto LABEL_19;
      }
      int64_t v17 = v19 + 2;
      if (v19 + 2 < v31)
      {
        unint64_t v20 = *(void *)(v30 + 8 * v17);
        if (v20) {
          goto LABEL_19;
        }
        int64_t v21 = v19 + 3;
        if (v21 < v31)
        {
          unint64_t v20 = *(void *)(v30 + 8 * v21);
          if (v20)
          {
            int64_t v17 = v21;
LABEL_19:
            unint64_t v15 = (v20 - 1) & v20;
            for (unint64_t i = __clz(__rbit64(v20)) + (v17 << 6); ; unint64_t i = v25 | (v17 << 6))
            {
              (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v9, *(void *)(v37 + 48) + *(void *)(v4 + 72) * i, v3);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1) {
                break;
              }
              (*v32)(v6, v9, v3);
              sub_25B187628(v36, (uint64_t)v46, &qword_26A4D97D0);
              if (v47)
              {
                sub_25B10FF48((uint64_t)v46, (uint64_t)v43);
                sub_25B116DE0((uint64_t)v46, &qword_26A4D97D0);
                uint64_t v24 = v44;
                uint64_t v23 = v45;
                __swift_project_boxed_opaque_existential_1(v43, v44);
                (*(void (**)(char *, uint64_t, uint64_t))(v23 + 96))(v6, v24, v23);
                (*v18)(v6, v3);
                uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
                if (!v15) {
                  goto LABEL_6;
                }
              }
              else
              {
                (*v18)(v6, v3);
                uint64_t result = sub_25B116DE0((uint64_t)v46, &qword_26A4D97D0);
                if (!v15) {
                  goto LABEL_6;
                }
              }
LABEL_23:
              unint64_t v25 = __clz(__rbit64(v15));
              v15 &= v15 - 1;
            }
            goto LABEL_25;
          }
          while (1)
          {
            int64_t v17 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              break;
            }
            if (v17 >= v31) {
              goto LABEL_24;
            }
            unint64_t v20 = *(void *)(v30 + 8 * v17);
            ++v21;
            if (v20) {
              goto LABEL_19;
            }
          }
LABEL_29:
          __break(1u);
          return result;
        }
      }
    }
  }
LABEL_24:
  (*v35)(v9, 1, 1, v3);
LABEL_25:
  swift_release();
  sub_25B187628(v36, (uint64_t)v46, &qword_26A4D97D0);
  if (!v47) {
    return sub_25B116DE0((uint64_t)v46, &qword_26A4D97D0);
  }
  sub_25B10FF48((uint64_t)v46, (uint64_t)v43);
  sub_25B116DE0((uint64_t)v46, &qword_26A4D97D0);
  uint64_t v26 = v44;
  uint64_t v27 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 88))(v29, v26, v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

uint64_t sub_25B1DDFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v94 = a2;
  int64_t v81 = a3;
  uint64_t v88 = type metadata accessor for PairingRelationship();
  uint64_t v4 = *(void *)(v88 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v88);
  uint64_t v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v77 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v99 = (uint64_t)&v77 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  unint64_t v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (uint64_t)&v77 - v16;
  uint64_t v17 = sub_25B290080();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v83 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v101 = (char *)&v77 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v96 = (uint64_t)&v77 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EF0);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v93 = (uint64_t)&v77 - v28;
  uint64_t v105 = MEMORY[0x263F8EE88];
  uint64_t v85 = (uint64_t *)(a1 + 104);
  swift_beginAccess();
  uint64_t v29 = *(void *)(a1 + 104);
  uint64_t v30 = *(void *)(v29 + 64);
  uint64_t v82 = v29 + 64;
  uint64_t v31 = 1 << *(unsigned char *)(v29 + 32);
  uint64_t v32 = -1;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  unint64_t v33 = v32 & v30;
  unint64_t v34 = (unint64_t)(v31 + 63) >> 6;
  uint64_t v100 = (void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  unint64_t v91 = (void (**)(char *, uint64_t, uint64_t))(v18 + 32);
  uint64_t v89 = v18;
  char v103 = (void (**)(uint64_t, uint64_t))(v18 + 8);
  uint64_t v90 = v4;
  uint64_t v84 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  unint64_t v77 = v34 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v36 = 0;
  int64_t v86 = v34;
  unint64_t v78 = v34 - 5;
  uint64_t v87 = result;
  uint64_t v79 = result + 104;
  uint64_t v92 = v27;
  while (1)
  {
    if (v33)
    {
      uint64_t v97 = (v33 - 1) & v33;
      unint64_t v98 = v36;
      unint64_t v37 = __clz(__rbit64(v33)) | (v36 << 6);
      goto LABEL_8;
    }
    int64_t v41 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v41 >= v86)
    {
      unint64_t v43 = v36;
    }
    else
    {
      unint64_t v42 = *(void *)(v82 + 8 * v41);
      if (v42) {
        goto LABEL_12;
      }
      unint64_t v43 = v36 + 1;
      if ((uint64_t)(v36 + 2) < v86)
      {
        unint64_t v42 = *(void *)(v82 + 8 * (v36 + 2));
        if (v42)
        {
          int64_t v41 = v36 + 2;
          goto LABEL_12;
        }
        unint64_t v43 = v36 + 2;
        if ((uint64_t)(v36 + 3) < v86)
        {
          unint64_t v42 = *(void *)(v82 + 8 * (v36 + 3));
          if (v42)
          {
            int64_t v41 = v36 + 3;
LABEL_12:
            uint64_t v97 = (v42 - 1) & v42;
            unint64_t v98 = v41;
            unint64_t v37 = __clz(__rbit64(v42)) + (v41 << 6);
LABEL_8:
            uint64_t v38 = v87;
            (*(void (**)(char *, unint64_t, uint64_t))(v89 + 16))(v27, *(void *)(v87 + 48) + *(void *)(v89 + 72) * v37, v17);
            uint64_t v39 = *(void *)(v38 + 56) + *(void *)(v90 + 72) * v37;
            uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
            sub_25B1E4998(v39, (uint64_t)&v27[*(int *)(v40 + 48)], (uint64_t (*)(void))type metadata accessor for PairingRelationship);
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v27, 0, 1, v40);
            goto LABEL_15;
          }
          int64_t v41 = v36 + 4;
          unint64_t v43 = v36 + 3;
          if ((uint64_t)(v36 + 4) < v86)
          {
            unint64_t v42 = *(void *)(v82 + 8 * v41);
            if (v42) {
              goto LABEL_12;
            }
            while (v78 != v36)
            {
              unint64_t v42 = *(void *)(v79 + 8 * v36++);
              if (v42)
              {
                int64_t v41 = v36 + 4;
                goto LABEL_12;
              }
            }
            unint64_t v43 = v77;
          }
        }
      }
    }
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v27, 1, 1, v44);
    uint64_t v97 = 0;
    unint64_t v98 = v43;
LABEL_15:
    uint64_t v45 = v93;
    sub_25B187574((uint64_t)v27, v93, &qword_26A4D9EF0);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v45, 1, v46) == 1)
    {
      swift_release();
      uint64_t v73 = v96;
      uint64_t v74 = v94;
      (*v100)(v96, v94, v17);
      uint64_t v75 = v74;
      uint64_t v76 = v80;
      sub_25B1E4998(v75, v80, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      (*v84)(v76, 0, 1, v88);
      swift_beginAccess();
      sub_25B20E308(v76, v73);
      uint64_t result = swift_endAccess();
      *int64_t v81 = v105;
      return result;
    }
    uint64_t v47 = v15;
    uint64_t v48 = v45 + *(int *)(v46 + 48);
    (*v91)(v101, v45, v17);
    uint64_t v49 = v99;
    sub_25B1E4844(v48, v99, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v50 = v96;
    uint64_t v51 = v17;
    uint64_t v52 = (uint64_t)v7;
    uint64_t v53 = v94;
    uint64_t v95 = *v100;
    v95(v96, v94, v51);
    sub_25B1E47FC((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
    char v54 = sub_25B290580();
    uint64_t v55 = v51;
    unint64_t v102 = *v103;
    v102(v50, v51);
    sub_25B1E4998(v49, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v56 = v53;
    uint64_t v7 = (char *)v52;
    sub_25B1E4998(v56, v52, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    if (v54)
    {
      sub_25B1E48AC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      sub_25B1E48AC(v52, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      unint64_t v15 = v47;
      uint64_t v17 = v51;
      goto LABEL_5;
    }
    uint64_t v57 = *(int *)(v88 + 20);
    uint64_t v58 = *(void *)&v10[v57];
    uint64_t v59 = *(void *)&v10[v57 + 8];
    unint64_t v60 = (void *)(v52 + v57);
    unint64_t v15 = v47;
    if (v58 == *v60 && v59 == v60[1])
    {
      sub_25B1E48AC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      sub_25B1E48AC(v52, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v17 = v51;
    }
    else
    {
      char v61 = sub_25B290FB0();
      sub_25B1E48AC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      sub_25B1E48AC(v52, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v17 = v55;
      if ((v61 & 1) == 0) {
        goto LABEL_5;
      }
    }
    uint64_t v62 = v83;
    uint64_t v63 = (uint64_t)v101;
    v95((uint64_t)v83, (uint64_t)v101, v17);
    uint64_t v64 = v96;
    sub_25B218F4C(v96, v62);
    v102(v64, v17);
    uint64_t v65 = v85;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    unint64_t v66 = sub_25B18A93C(v63);
    char v68 = v67;
    swift_bridgeObjectRelease();
    if (v68)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v70 = *v65;
      uint64_t v104 = *v65;
      *uint64_t v65 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_25B193954();
        uint64_t v70 = v104;
      }
      v102(*(void *)(v70 + 48) + *(void *)(v89 + 72) * v66, v17);
      uint64_t v71 = v104;
      sub_25B1E4844(*(void *)(v104 + 56) + *(void *)(v90 + 72) * v66, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      sub_25B21E78C(v66, v71);
      *uint64_t v65 = v71;
      swift_bridgeObjectRelease();
      uint64_t v72 = 0;
    }
    else
    {
      uint64_t v72 = 1;
    }
    (*v84)((uint64_t)v15, v72, 1, v88);
    sub_25B116DE0((uint64_t)v15, &qword_26A4D9610);
    swift_endAccess();
LABEL_5:
    sub_25B1E48AC(v99, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v102)(v101, v17);
    uint64_t v27 = v92;
    unint64_t v33 = v97;
    unint64_t v36 = v98;
  }
  __break(1u);
  return result;
}

uint64_t MetadataStore.removePairingRelationship(with:)(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(v1[12] + 16);
  os_unfair_lock_lock(v3);
  sub_25B10DDCC(v4);
  os_unfair_lock_unlock(v3);
  swift_beginAccess();
  sub_25B187628((uint64_t)(v1 + 2), (uint64_t)v13, &qword_26A4D97D0);
  if (v14)
  {
    sub_25B10FF48((uint64_t)v13, (uint64_t)v10);
    sub_25B116DE0((uint64_t)v13, &qword_26A4D97D0);
    uint64_t v5 = v11;
    uint64_t v6 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 96))(a1, v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_25B116DE0((uint64_t)v13, &qword_26A4D97D0);
  }
  uint64_t v7 = v1[10];
  uint64_t v8 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, v7, v8);
}

uint64_t sub_25B1DEBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25B290080();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, a2);
  uint64_t v10 = type metadata accessor for PairingRelationship();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  swift_beginAccess();
  sub_25B20E308((uint64_t)v5, (uint64_t)v8);
  return swift_endAccess();
}

Swift::Void __swiftcall MetadataStore.update(_:)(Swift::OpaquePointer a1)
{
  uint64_t v2 = (void *)v1;
  uint64_t v4 = type metadata accessor for RecordMetadata();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.ID(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(os_unfair_lock_s **)(v1 + 96);
  rawValue = a1._rawValue;
  uint64_t v32 = v1;
  uint64_t v28 = sub_25B1E4324;
  uint64_t v29 = &v30;
  uint64_t v13 = v12 + 4;
  os_unfair_lock_lock(v12 + 4);
  sub_25B10DDCC(v14);
  os_unfair_lock_unlock(v13);
  swift_beginAccess();
  sub_25B187628(v1 + 16, (uint64_t)v36, &qword_26A4D97D0);
  if (v36[3])
  {
    sub_25B10FF48((uint64_t)v36, (uint64_t)v33);
    sub_25B116DE0((uint64_t)v36, &qword_26A4D97D0);
    uint64_t v15 = v34;
    uint64_t v16 = v35;
    __swift_project_boxed_opaque_existential_1(v33, v34);
    (*(void (**)(void *, uint64_t, uint64_t))(v16 + 104))(a1._rawValue, v15, v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  else
  {
    sub_25B116DE0((uint64_t)v36, &qword_26A4D97D0);
  }
  int64_t v17 = *((void *)a1._rawValue + 2);
  uint64_t v18 = MEMORY[0x263F8EE78];
  if (v17)
  {
    uint64_t v27 = (void *)v1;
    v36[0] = MEMORY[0x263F8EE78];
    sub_25B2240E0(0, v17, 0);
    uint64_t v19 = (char *)a1._rawValue
        + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v20 = *(void *)(v5 + 72);
    uint64_t v18 = v36[0];
    do
    {
      sub_25B1E4998((uint64_t)v19, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      sub_25B1E4998((uint64_t)v7, (uint64_t)v11, type metadata accessor for Record.ID);
      sub_25B1E48AC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25B2240E0(0, *(void *)(v18 + 16) + 1, 1);
        uint64_t v18 = v36[0];
      }
      unint64_t v22 = *(void *)(v18 + 16);
      unint64_t v21 = *(void *)(v18 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_25B2240E0(v21 > 1, v22 + 1, 1);
        uint64_t v18 = v36[0];
      }
      *(void *)(v18 + 16) = v22 + 1;
      sub_25B1E4844((uint64_t)v11, v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v22, type metadata accessor for Record.ID);
      v19 += v20;
      --v17;
    }
    while (v17);
    uint64_t v2 = v27;
  }
  uint64_t v23 = v2 + 7;
  uint64_t v25 = v2[10];
  uint64_t v24 = v2[11];
  __swift_project_boxed_opaque_existential_1(v23, v25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 40))(v18, v25, v24);
  swift_bridgeObjectRelease();
}

uint64_t sub_25B1DF108(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Record.ID(0);
  uint64_t v58 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (void *)((char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = type metadata accessor for RecordMetadata();
  uint64_t v8 = MEMORY[0x270FA5388](v61);
  uint64_t v63 = (uint64_t)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v62 = (uint64_t)v54 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v60 = (uint64_t)v54 - v13;
  uint64_t result = MEMORY[0x270FA5388](v12);
  int64_t v17 = (char *)v54 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18) {
    return result;
  }
  v54[0] = v5;
  uint64_t v19 = (void *)(a2 + 112);
  uint64_t v20 = a1;
  uint64_t v21 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v22 = *(void *)(v15 + 72);
  v54[1] = v20;
  v54[2] = v2;
  swift_bridgeObjectRetain();
  *(void *)&long long v23 = 136446210;
  long long v55 = v23;
  v54[3] = MEMORY[0x263F8EE58] + 8;
  uint64_t v56 = v19;
  uint64_t v57 = v7;
  uint64_t v59 = v22;
  while (1)
  {
    sub_25B1E4998(v21, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_25B290190();
    __swift_project_value_buffer(v25, (uint64_t)qword_26A4EB150);
    uint64_t v26 = v60;
    sub_25B1E4998((uint64_t)v17, v60, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v27 = sub_25B290160();
    os_log_type_t v28 = sub_25B2908A0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = v18;
      char v30 = v17;
      uint64_t v31 = v26;
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v64[0] = v33;
      *(_DWORD *)uint64_t v32 = v55;
      uint64_t v34 = RecordMetadata.description.getter();
      *(void *)(v32 + 4) = sub_25B288E98(v34, v35, v64);
      swift_bridgeObjectRelease();
      uint64_t v36 = v31;
      int64_t v17 = v30;
      uint64_t v18 = v29;
      uint64_t v19 = v56;
      sub_25B1E48AC(v36, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      _os_log_impl(&dword_25B107000, v27, v28, "Updating record metadata: %{public}s", (uint8_t *)v32, 0xCu);
      swift_arrayDestroy();
      uint64_t v37 = v33;
      uint64_t v7 = v57;
      MEMORY[0x261160890](v37, -1, -1);
      MEMORY[0x261160890](v32, -1, -1);
    }
    else
    {
      sub_25B1E48AC(v26, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    }

    uint64_t v38 = v62;
    sub_25B1E4998((uint64_t)v17, v62, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v39 = *(int *)(v61 + 20);
    swift_release();
    *(void *)(v38 + v39) = 0;
    sub_25B1E4998(v38, (uint64_t)v7, type metadata accessor for Record.ID);
    swift_beginAccess();
    sub_25B1E4998(v38, v63, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v65 = (void *)*v19;
    int64_t v41 = v65;
    void *v19 = 0x8000000000000000;
    unint64_t v43 = sub_25B18A8D0(v7);
    uint64_t v44 = v41[2];
    BOOL v45 = (v42 & 1) == 0;
    uint64_t v46 = v44 + v45;
    if (__OFADD__(v44, v45)) {
      break;
    }
    char v47 = v42;
    if (v41[3] >= v46)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v50 = v65;
        if (v42) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_25B193098();
        uint64_t v50 = v65;
        if (v47) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_25B18D018(v46, isUniquelyReferenced_nonNull_native);
      unint64_t v48 = sub_25B18A8D0(v7);
      if ((v47 & 1) != (v49 & 1)) {
        goto LABEL_25;
      }
      unint64_t v43 = v48;
      uint64_t v50 = v65;
      if (v47)
      {
LABEL_3:
        uint64_t v24 = v59;
        sub_25B1E490C(v63, v50[7] + v43 * v59, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        goto LABEL_4;
      }
    }
    v50[(v43 >> 6) + 8] |= 1 << v43;
    sub_25B1E4998((uint64_t)v7, v50[6] + *(void *)(v58 + 72) * v43, type metadata accessor for Record.ID);
    uint64_t v24 = v59;
    sub_25B1E4844(v63, v50[7] + v43 * v59, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v51 = v50[2];
    BOOL v52 = __OFADD__(v51, 1);
    uint64_t v53 = v51 + 1;
    if (v52) {
      goto LABEL_24;
    }
    v50[2] = v53;
LABEL_4:
    void *v19 = v50;
    swift_bridgeObjectRelease();
    sub_25B1E48AC((uint64_t)v7, type metadata accessor for Record.ID);
    swift_endAccess();
    sub_25B1E48AC(v62, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    sub_25B1E48AC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    v21 += v24;
    if (!--v18) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

Swift::Void __swiftcall MetadataStore.remove(recordIDs:)(Swift::OpaquePointer recordIDs)
{
  uint64_t v3 = (os_unfair_lock_s *)(v1[12] + 16);
  os_unfair_lock_lock(v3);
  sub_25B10DDCC(v4);
  os_unfair_lock_unlock(v3);
  swift_beginAccess();
  sub_25B187628((uint64_t)(v1 + 2), (uint64_t)v12, &qword_26A4D97D0);
  if (v13)
  {
    sub_25B10FF48((uint64_t)v12, (uint64_t)v9);
    sub_25B116DE0((uint64_t)v12, &qword_26A4D97D0);
    uint64_t v5 = v10;
    uint64_t v6 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    (*(void (**)(void *, uint64_t, uint64_t))(v6 + 112))(recordIDs._rawValue, v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    sub_25B116DE0((uint64_t)v12, &qword_26A4D97D0);
  }
  uint64_t v7 = v1[10];
  uint64_t v8 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v7);
  (*(void (**)(void *, uint64_t, uint64_t))(v8 + 40))(recordIDs._rawValue, v7, v8);
}

uint64_t sub_25B1DF860(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D93A8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.ID(0) - 8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v9);
  unint64_t v48 = (void *)((char *)v44 - v14);
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    v44[1] = a1;
    v44[2] = v2;
    uint64_t v16 = (uint64_t *)(a2 + 112);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v18 = *(void *)(v13 + 72);
    swift_bridgeObjectRetain();
    *(void *)&long long v19 = 136446210;
    long long v45 = v19;
    v44[3] = MEMORY[0x263F8EE58] + 8;
    char v49 = v11;
    uint64_t v20 = v48;
    uint64_t v46 = v18;
    char v47 = v7;
    do
    {
      sub_25B1E4998(v17, (uint64_t)v20, type metadata accessor for Record.ID);
      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_25B290190();
      __swift_project_value_buffer(v24, (uint64_t)qword_26A4EB150);
      sub_25B1E4998((uint64_t)v20, (uint64_t)v11, type metadata accessor for Record.ID);
      uint64_t v25 = sub_25B290160();
      os_log_type_t v26 = sub_25B2908A0();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        v50[0] = v28;
        *(_DWORD *)uint64_t v27 = v45;
        uint64_t v29 = Record.ID.description.getter();
        *(void *)(v27 + 4) = sub_25B288E98(v29, v30, v50);
        swift_bridgeObjectRelease();
        sub_25B1E48AC((uint64_t)v49, type metadata accessor for Record.ID);
        _os_log_impl(&dword_25B107000, v25, v26, "Removing record metadata: %{public}s", (uint8_t *)v27, 0xCu);
        swift_arrayDestroy();
        uint64_t v31 = v28;
        uint64_t v11 = v49;
        MEMORY[0x261160890](v31, -1, -1);
        uint64_t v32 = v27;
        uint64_t v20 = v48;
        MEMORY[0x261160890](v32, -1, -1);
      }
      else
      {
        sub_25B1E48AC((uint64_t)v11, type metadata accessor for Record.ID);
      }

      swift_beginAccess();
      swift_bridgeObjectRetain();
      unint64_t v33 = sub_25B18A8D0(v20);
      char v35 = v34;
      swift_bridgeObjectRelease();
      if (v35)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v37 = *v16;
        uint64_t v51 = *v16;
        *uint64_t v16 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_25B193098();
          uint64_t v37 = v51;
        }
        uint64_t v23 = v46;
        sub_25B1E48AC(*(void *)(v37 + 48) + v33 * v46, type metadata accessor for Record.ID);
        uint64_t v38 = *(void *)(v37 + 56);
        uint64_t v39 = type metadata accessor for RecordMetadata();
        uint64_t v40 = *(void *)(v39 - 8);
        uint64_t v41 = v38 + *(void *)(v40 + 72) * v33;
        uint64_t v42 = (uint64_t)v47;
        sub_25B1E4844(v41, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
        unint64_t v43 = v33;
        uint64_t v22 = v42;
        sub_25B21DCF8(v43, v37);
        *uint64_t v16 = v37;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v42, 0, 1, v39);
        uint64_t v11 = v49;
      }
      else
      {
        uint64_t v21 = type metadata accessor for RecordMetadata();
        uint64_t v22 = (uint64_t)v47;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v47, 1, 1, v21);
        uint64_t v23 = v46;
      }
      sub_25B116DE0(v22, &qword_26A4D93A8);
      swift_endAccess();
      uint64_t v20 = v48;
      sub_25B1E48AC((uint64_t)v48, type metadata accessor for Record.ID);
      v17 += v23;
      --v15;
    }
    while (v15);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25B1DFD58@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v85 = (uint64_t)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25B290080();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v82 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v84 = (char *)&v78 - v19;
  uint64_t v20 = type metadata accessor for ZoneVersion();
  uint64_t v93 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v96 = (uint64_t)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v87 = (uint64_t)&v78 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v95 = (uint64_t)&v78 - v26;
  uint64_t result = MEMORY[0x270FA5388](v25);
  uint64_t v94 = (char *)&v78 - v28;
  uint64_t v29 = *(void *)(a1 + 16);
  if (!v29)
  {
    unint64_t v30 = (void *)MEMORY[0x263F8EE80];
LABEL_22:
    *a4 = v30;
    return result;
  }
  uint64_t v90 = v15;
  unint64_t v91 = v14;
  uint64_t v92 = a3;
  uint64_t v79 = a4;
  uint64_t v80 = v5;
  uint64_t v97 = a2 + 7;
  uint64_t v89 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  int64_t v86 = (void (**)(char *, uint64_t, uint64_t))(v16 + 32);
  uint64_t v83 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56);
  int64_t v81 = (void (**)(char *, uint64_t))(v16 + 8);
  swift_bridgeObjectRetain();
  unint64_t v30 = (void *)MEMORY[0x263F8EE80];
  uint64_t v78 = a1;
  uint64_t v31 = (uint64_t *)(a1 + 56);
  unint64_t v98 = a2;
  while (1)
  {
    uint64_t v100 = v29;
    uint64_t v101 = v30;
    uint64_t v33 = *(v31 - 3);
    uint64_t v32 = *(v31 - 2);
    uint64_t v34 = *(v31 - 1);
    uint64_t v35 = *v31;
    uint64_t v99 = v31;
    uint64_t v36 = a2[10];
    uint64_t v37 = a2[11];
    __swift_project_boxed_opaque_existential_1(v97, v36);
    uint64_t v102 = v33;
    *(void *)&long long v103 = v33;
    *((void *)&v103 + 1) = v32;
    uint64_t v104 = v34;
    uint64_t v105 = v35;
    uint64_t v38 = *(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v37 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = v92;
    uint64_t v40 = v37;
    uint64_t v41 = (uint64_t)v91;
    v38(v92, &v103, v36, v40);
    uint64_t v42 = v90;
    unint64_t v43 = *v89;
    int v44 = (*v89)(v41, 1, v90);
    uint64_t v106 = v34;
    if (v44 == 1)
    {
      sub_25B116DE0(v41, &qword_26B33F200);
      *(void *)&long long v103 = v102;
      *((void *)&v103 + 1) = v32;
      uint64_t v104 = v34;
      uint64_t v105 = v35;
      uint64_t v45 = v85;
      sub_25B1E4998(v39, v85, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      uint64_t v46 = type metadata accessor for PairingRelationship();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
      uint64_t v47 = v95;
      uint64_t v88 = v35;
      unint64_t v48 = v98;
      sub_25B1E053C(&v103, v45, v95);
      sub_25B116DE0(v45, &qword_26A4D9610);
      uint64_t v49 = v87;
      sub_25B1E4998(v47, v87, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      int v50 = v43(v49, 1, v42);
      uint64_t v51 = v48;
      uint64_t v35 = v88;
      uint64_t v52 = v32;
      uint64_t v53 = v102;
      if (v50 != 1)
      {
        uint64_t v54 = v39;
        long long v55 = v82;
        (*v86)(v82, v87, v42);
        uint64_t v56 = v51[10];
        uint64_t v57 = v51[11];
        __swift_project_boxed_opaque_existential_1(v97, v56);
        *(void *)&long long v103 = v53;
        *((void *)&v103 + 1) = v52;
        uint64_t v104 = v106;
        uint64_t v105 = v35;
        (*(void (**)(uint64_t, long long *, char *, uint64_t, uint64_t))(v57 + 24))(v54, &v103, v55, v56, v57);
        (*v81)(v55, v42);
      }
      uint64_t v58 = (uint64_t)v94;
      sub_25B1E4844(v95, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v59 = v101;
    }
    else
    {
      uint64_t v60 = *v86;
      uint64_t v61 = v84;
      (*v86)(v84, v41, v42);
      uint64_t v58 = (uint64_t)v94;
      v60(v94, (uint64_t)v61, v42);
      (*v83)(v58, 0, 1, v42);
      uint64_t v52 = v32;
      uint64_t v59 = v101;
      uint64_t v53 = v102;
    }
    uint64_t v62 = v96;
    sub_25B1E4998(v58, v96, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v103 = v59;
    unint64_t v65 = sub_25B18A768(v53, v52, v106, v35);
    uint64_t v66 = v59[2];
    BOOL v67 = (v64 & 1) == 0;
    uint64_t v68 = v66 + v67;
    if (__OFADD__(v66, v67)) {
      break;
    }
    char v69 = v64;
    if (v59[3] < v68)
    {
      sub_25B18F048(v68, isUniquelyReferenced_nonNull_native);
      unint64_t v70 = sub_25B18A768(v53, v52, v106, v35);
      if ((v69 & 1) != (v71 & 1)) {
        goto LABEL_25;
      }
      unint64_t v65 = v70;
LABEL_15:
      uint64_t v72 = v53;
      goto LABEL_16;
    }
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_15;
    }
    uint64_t v72 = v53;
    sub_25B1941BC();
LABEL_16:
    uint64_t v73 = v106;
    unint64_t v30 = (void *)v103;
    if (v69)
    {
      sub_25B1E490C(v62, *(void *)(v103 + 56) + *(void *)(v93 + 72) * v65, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    }
    else
    {
      *(void *)(v103 + 8 * (v65 >> 6) + 64) |= 1 << v65;
      uint64_t v74 = (uint64_t *)(v30[6] + 32 * v65);
      *uint64_t v74 = v72;
      v74[1] = v52;
      v74[2] = v73;
      v74[3] = v35;
      sub_25B1E4844(v62, v30[7] + *(void *)(v93 + 72) * v65, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v75 = v30[2];
      BOOL v76 = __OFADD__(v75, 1);
      uint64_t v77 = v75 + 1;
      if (v76) {
        goto LABEL_24;
      }
      long long v30[2] = v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v31 = v99 + 4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B1E48AC(v58, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v100 - 1;
    a2 = v98;
    if (v100 == 1)
    {
      uint64_t result = swift_bridgeObjectRelease();
      a4 = v79;
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t sub_25B1E053C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  long long v18 = *a1;
  uint64_t v11 = *((void *)a1 + 2);
  uint64_t v10 = *((void *)a1 + 3);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v3 + 112);
  long long v20 = v18;
  uint64_t v21 = v11;
  uint64_t v22 = v10;
  uint64_t v23 = a2;
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)sub_25B2130FC(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_25B1E4974, (uint64_t)v19, v12);
  swift_bridgeObjectRelease();
  static MetadataStore.hash(hashes:)(v13, (uint64_t)v9);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_25B290080();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
  {
    sub_25B116DE0((uint64_t)v9, &qword_26B33F200);
    uint64_t v16 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v9, v14);
    uint64_t v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a3, v16, 1, v14);
}

uint64_t sub_25B1E0704(uint64_t a1, uint64_t a2)
{
  return MetadataStore.localDeviceID.setter(a1, a2);
}

uint64_t (*sub_25B1E0728(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MetadataStore.localDeviceID.modify((uint64_t)v2);
  return sub_25B12D81C;
}

uint64_t sub_25B1E0784(char a1)
{
  return MetadataStore.isEnabled.setter(a1);
}

uint64_t (*sub_25B1E07A8(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MetadataStore.isEnabled.modify((uint64_t)v2);
  return sub_25B12D81C;
}

uint64_t sub_25B1E0804(char a1)
{
  return MetadataStore.allowListEnabled.setter(a1);
}

uint64_t (*sub_25B1E0828(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MetadataStore.allowListEnabled.modify((uint64_t)v2);
  return sub_25B12D81C;
}

uint64_t sub_25B1E0884(uint64_t a1)
{
  return MetadataStore.allowList.setter(a1);
}

uint64_t (*sub_25B1E08A8(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MetadataStore.allowList.modify(v2);
  return sub_25B12D81C;
}

void sub_25B1E0904()
{
}

uint64_t sub_25B1E0928(uint64_t a1)
{
  return MetadataStore.update(_:)(a1);
}

uint64_t sub_25B1E094C(uint64_t a1)
{
  return MetadataStore.removePairingRelationship(with:)(a1);
}

void sub_25B1E0970(Swift::OpaquePointer a1)
{
}

void sub_25B1E0994(Swift::OpaquePointer a1)
{
}

uint64_t sub_25B1E09B8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v74 = a7;
  uint64_t v76 = a5;
  uint64_t v77 = a6;
  uint64_t v72 = a1;
  uint64_t v75 = sub_25B290080();
  uint64_t v79 = *(void *)(v75 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v75);
  uint64_t v78 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  char v69 = (char *)&v69 - v12;
  uint64_t v13 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v70 = (uint64_t)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v73 = (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v80 = (uint64_t)&v69 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v81 = (uint64_t)&v69 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char **)((char *)&v69 - v26);
  uint64_t v83 = v25;
  uint64_t v28 = *(int *)(v25 + 48);
  uint64_t v29 = (char *)&v69 + v28 - v26;
  uint64_t v30 = a2 + v28;
  uint64_t v84 = a2;
  sub_25B1E4998(a2, (uint64_t)&v69 - v26, type metadata accessor for Record.ID);
  uint64_t v82 = v30;
  sub_25B1E4998(v30, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  uint64_t v31 = v27[2];
  uint64_t v32 = v27[3];
  uint64_t v34 = v27[4];
  uint64_t v33 = v27[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25B1E48AC((uint64_t)v27, type metadata accessor for Record.ID);
  BOOL v35 = v31 == a3 && v32 == a4;
  if (!v35 && (sub_25B290FB0() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_25B1E48AC((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  }
  BOOL v36 = v34 == v76 && v33 == v77;
  char v71 = v22;
  if (v36)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v39 = v78;
    uint64_t v38 = v79;
  }
  else
  {
    char v37 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v39 = v78;
    uint64_t v38 = v79;
    if ((v37 & 1) == 0) {
      return sub_25B1E48AC((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    }
  }
  sub_25B1E48AC((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  uint64_t v40 = type metadata accessor for PairingRelationship();
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48);
  uint64_t v42 = v74;
  int v43 = v41(v74, 1, v40);
  uint64_t v44 = v81;
  uint64_t v45 = v81 + *(int *)(v83 + 48);
  sub_25B1E4998(v84, v81, type metadata accessor for Record.ID);
  sub_25B1E4998(v82, v45, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  uint64_t v46 = v42;
  uint64_t v47 = v80;
  sub_25B187628(v46, v80, &qword_26A4D9610);
  if (v43 != 1)
  {
    uint64_t v52 = v73;
    sub_25B187628(v47, v73, &qword_26A4D9610);
    uint64_t result = v41(v52, 1, v40);
    uint64_t v48 = v75;
    if (result == 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v54 = type metadata accessor for Record.ID(0);
    uint64_t v55 = v70;
    sub_25B1E4998(v45 + *(int *)(v54 + 24), v70, type metadata accessor for Record.ID.Ownership);
    int v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v55, 1, v48);
    uint64_t v57 = v81;
    uint64_t v49 = v39;
    if (v56 == 1)
    {
      char v58 = 0;
      uint64_t v59 = v73;
    }
    else
    {
      uint64_t v60 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v69, v55, v48);
      uint64_t v59 = v73;
      char v58 = sub_25B290030();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v60, v48);
    }
    uint64_t v51 = (uint64_t)v71;
    uint64_t v61 = type metadata accessor for RecordMetadata();
    if (*(void *)(v45 + *(int *)(v61 + 28)))
    {
      MEMORY[0x270FA5388](v61);
      *(&v69 - 2) = (char *)v59;
      BOOL v63 = sub_25B210ED4((uint64_t (*)(char *))sub_25B187100, (uint64_t)(&v69 - 4), v62);
      if (v56 != 1)
      {
        int v50 = v72;
        uint64_t v57 = v81;
        goto LABEL_29;
      }
      int v50 = v72;
      uint64_t v57 = v81;
      if (!v63)
      {
LABEL_29:
        sub_25B116DE0(v80, &qword_26A4D9610);
        sub_25B116DE0(v57, &qword_26A4D9860);
        uint64_t result = sub_25B1E48AC(v59, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
        if ((v58 & 1) == 0) {
          return result;
        }
        goto LABEL_30;
      }
    }
    else
    {
      BOOL v35 = v56 == 1;
      int v50 = v72;
      if (!v35) {
        goto LABEL_29;
      }
    }
    sub_25B116DE0(v80, &qword_26A4D9610);
    sub_25B116DE0(v57, &qword_26A4D9860);
    sub_25B1E48AC(v59, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    goto LABEL_30;
  }
  sub_25B116DE0(v47, &qword_26A4D9610);
  sub_25B116DE0(v44, &qword_26A4D9860);
  uint64_t v48 = v75;
  uint64_t v49 = v39;
  uint64_t v51 = (uint64_t)v71;
  int v50 = v72;
LABEL_30:
  uint64_t v64 = v51 + *(int *)(v83 + 48);
  sub_25B1E4998(v84, v51, type metadata accessor for Record.ID);
  sub_25B1E4998(v82, v64, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  uint64_t v65 = type metadata accessor for RecordMetadata();
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v49, v64 + *(int *)(v65 + 24), v48);
  sub_25B1E48AC(v64, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  unint64_t v66 = *v50;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v66 = sub_25B2189B4(0, *(void *)(v66 + 16) + 1, 1, v66);
  }
  unint64_t v68 = *(void *)(v66 + 16);
  unint64_t v67 = *(void *)(v66 + 24);
  if (v68 >= v67 >> 1) {
    unint64_t v66 = sub_25B2189B4(v67 > 1, v68 + 1, 1, v66);
  }
  *(void *)(v66 + 16) = v68 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v66+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v68, v49, v48);
  unint64_t *v50 = v66;
  return sub_25B1E48AC(v51, type metadata accessor for Record.ID);
}

uint64_t static MetadataStore.hash(hashes:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v31[3] = *(void **)MEMORY[0x263EF8340];
  uint64_t v3 = sub_25B290080();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25B290470();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25B2904A0();
  uint64_t v25 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B28FCA0();
  swift_allocObject();
  uint64_t v12 = sub_25B28FC90();
  v31[0] = a1;
  swift_bridgeObjectRetain();
  sub_25B1E22E4(v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AA8);
  sub_25B1E435C();
  uint64_t v13 = sub_25B28FC80();
  unint64_t v15 = v14;
  v24[1] = v12;
  swift_release();
  _s16ReplicatorEngine13UniformHasherVACycfC_0();
  uint64_t v16 = v9;
  switch(v15 >> 62)
  {
    case 1uLL:
      if (v13 >> 32 < (int)v13) {
        __break(1u);
      }
      sub_25B114300(v13, v15);
      sub_25B1E3F04((int)v13, v13 >> 32);
      break;
    case 2uLL:
      uint64_t v17 = *(void *)(v13 + 16);
      uint64_t v18 = *(void *)(v13 + 24);
      sub_25B114300(v13, v15);
      swift_retain();
      swift_retain();
      sub_25B1E3F04(v17, v18);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      sub_25B1E47FC((unint64_t *)&qword_26B33F220, MEMORY[0x263F047F8]);
      memset(v31, 0, 14);
      goto LABEL_5;
    default:
      v31[0] = (void *)v13;
      LOWORD(v31[1]) = v15;
      BYTE2(v31[1]) = BYTE2(v15);
      BYTE3(v31[1]) = BYTE3(v15);
      BYTE4(v31[1]) = BYTE4(v15);
      BYTE5(v31[1]) = BYTE5(v15);
      sub_25B1E47FC((unint64_t *)&qword_26B33F220, MEMORY[0x263F047F8]);
LABEL_5:
      sub_25B290450();
      break;
  }
  sub_25B10DFF0(v13, v15);
  uint64_t v19 = v30;
  uint64_t v20 = v16;
  sub_25B290480();
  uint64_t v21 = v29;
  sub_25B290460();
  sub_25B10DFF0(v13, v15);
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v20);
  uint64_t v22 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v19, v5, v21);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
}

uint64_t sub_25B1E16F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D98);
  v21[3] = v9;
  v21[4] = sub_25B1E467C();
  uint64_t v10 = swift_allocObject();
  v21[0] = v10;
  *(_OWORD *)(v10 + 16) = xmmword_25B296690;
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a2;
  uint64_t v11 = __swift_project_boxed_opaque_existential_1(v21, v9);
  long long v12 = v11[1];
  v18[0] = *v11;
  v18[1] = v12;
  sub_25B2911F0();
  uint64_t v13 = v19;
  unint64_t v14 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  sub_25B10DDE4(v13, v14, (uint64_t)v8);
  uint64_t v15 = sub_25B290080();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a3, v8, v15);
  }
  __break(1u);
  return result;
}

void sub_25B1E18B4(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  swift_beginAccess();
  sub_25B187628(v2, (uint64_t)&v16, &qword_26A4D97D0);
  if (v17)
  {
    sub_25B180BD4(&v16, (uint64_t)v18);
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_25B290190();
    __swift_project_value_buffer(v3, (uint64_t)qword_26A4EB150);
    uint64_t v4 = sub_25B290160();
    os_log_type_t v5 = sub_25B2908A0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_25B107000, v4, v5, "Restoring metadata", v6, 2u);
      MEMORY[0x261160890](v6, -1, -1);
    }

    uint64_t v8 = MEMORY[0x270FA5388](v7);
    MEMORY[0x270FA5388](v8);
    uint64_t v10 = v9 + 4;
    os_unfair_lock_lock(v9 + 4);
    sub_25B10DDCC(v11);
    os_unfair_lock_unlock(v10);
    if (v1) {
      __break(1u);
    }
    else {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
  }
  else
  {
    sub_25B116DE0((uint64_t)&v16, &qword_26A4D97D0);
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_25B290190();
    __swift_project_value_buffer(v12, (uint64_t)qword_26A4EB150);
    uint64_t v13 = sub_25B290160();
    os_log_type_t v14 = sub_25B2908A0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_25B107000, v13, v14, "Persistent store is not set; not restoring metadata", v15, 2u);
      MEMORY[0x261160890](v15, -1, -1);
    }
  }
}

void sub_25B1E1B50(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[3];
  uint64_t v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 24))(v5);
  swift_beginAccess();
  *(void *)(a1 + 112) = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[3];
  uint64_t v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v8);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)(v7 + 8) + 32))(v8);
  swift_beginAccess();
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[3];
  uint64_t v10 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v11);
  *(void *)(a1 + 120) = (*(uint64_t (**)(uint64_t))(*(void *)(v10 + 8) + 8))(v11);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[3];
  uint64_t v13 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v14);
  *(void *)(a1 + 144) = (*(uint64_t (**)(uint64_t))(*(void *)(v13 + 8) + 48))(v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = a2[3];
  uint64_t v15 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v16);
  *(unsigned char *)(a1 + 137) = (*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 40))(v16) & 1;
  uint64_t v18 = a2[3];
  uint64_t v17 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v18);
  *(unsigned char *)(a1 + 136) = (*(uint64_t (**)(uint64_t))(*(void *)(v17 + 8) + 16))(v18) & 1;
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_25B290190();
  __swift_project_value_buffer(v19, (uint64_t)qword_26A4EB150);
  swift_retain();
  unint64_t v20 = sub_25B290160();
  os_log_type_t v21 = sub_25B2908A0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 134349056;
    sub_25B2909C0();
    swift_release();
    _os_log_impl(&dword_25B107000, v20, v21, "Restored %{public}ld record metadata items", v22, 0xCu);
    MEMORY[0x261160890](v22, -1, -1);
  }
  else
  {

    swift_release();
  }
}

unint64_t MetadataStore.description.getter()
{
  sub_25B290AA0();
  swift_bridgeObjectRelease();
  unint64_t v4 = 0xD000000000000010;
  unint64_t v5 = 0x800000025B29D550;
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 96) + 16);
  os_unfair_lock_lock(v1);
  sub_25B1E3FE4(&v3);
  os_unfair_lock_unlock(v1);
  type metadata accessor for Record.ID(0);
  type metadata accessor for RecordMetadata();
  sub_25B1E47FC(&qword_26A4DA700, (void (*)(uint64_t))type metadata accessor for Record.ID);
  sub_25B2904E0();
  sub_25B290650();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B290650();
  os_unfair_lock_lock(v1);
  sub_25B1E3FE4(&v3);
  os_unfair_lock_unlock(v1);
  sub_25B290080();
  type metadata accessor for PairingRelationship();
  sub_25B1E47FC(&qword_26A4D9220, MEMORY[0x263F07508]);
  sub_25B2904E0();
  sub_25B290650();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_25B1E203C()
{
  return MetadataStore.description.getter();
}

Swift::Bool __swiftcall MetadataStore.blockedByAllowList(ID:)(Swift::String ID)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v5 = *(os_unfair_lock_s **)(v1 + 96);
  uint64_t v16 = sub_25B1E4AB0;
  uint64_t v17 = v1;
  uint64_t v6 = v5 + 4;
  os_unfair_lock_lock(v5 + 4);
  sub_25B1E4AE0(v18);
  os_unfair_lock_unlock(v6);
  if (v18[0] == 1)
  {
    MEMORY[0x270FA5388](v7);
    *(void *)&v15[-16] = sub_25B1E4AF8;
    *(void *)&v15[-8] = v1;
    os_unfair_lock_lock(v6);
    sub_25B1E3FE4(v18);
    os_unfair_lock_unlock(v6);
    uint64_t v8 = *(void *)v18;
    sub_25B290010();
    uint64_t v9 = sub_25B290080();
    uint64_t v10 = *(void *)(v9 - 8);
    int v11 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9);
    if (v11 == 1)
    {
      __break(1u);
      return v11;
    }
    char v12 = sub_25B2107A0((uint64_t)v4, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v4, v9);
    char v13 = v12 ^ 1;
  }
  else
  {
    char v13 = 0;
  }
  LOBYTE(v11) = v13 & 1;
  return v11;
}

BOOL sub_25B1E2244(uint64_t a1, uint64_t a2)
{
  return MetadataStore.blockedByAllowList(ID:)(*(Swift::String *)&a1);
}

unsigned char *sub_25B1E226C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_25B1D299C(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_25B1E46F8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_25B1E4774((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_25B1E22E4(void **a1)
{
  uint64_t v2 = *(void *)(sub_25B290080() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_25B1E4164(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_25B1E238C(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_25B1E238C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v153 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  v165 = (char *)&v145 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v168 = (char *)&v145 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v167 = (char *)&v145 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v148 = (char *)&v145 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v155 = (char *)&v145 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v151 = (char *)&v145 - v19;
  MEMORY[0x270FA5388](v18);
  v150 = (char *)&v145 - v20;
  v170 = a1;
  uint64_t v21 = a1[1];
  uint64_t result = sub_25B290DA0();
  if (result >= v21)
  {
    if (v21 < 0) {
      goto LABEL_151;
    }
    if (v21) {
      return sub_25B1E30A0(0, v21, 1, v170);
    }
    return result;
  }
  if (v21 >= 0) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 + 1;
  }
  if (v21 < -1) {
    goto LABEL_159;
  }
  uint64_t v146 = result;
  if (v21 < 2)
  {
    uint64_t v26 = v5;
    uint64_t v28 = (char *)MEMORY[0x263F8EE78];
    unint64_t v156 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v145 = MEMORY[0x263F8EE78];
    if (v21 != 1)
    {
      unint64_t v30 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_117:
      if (v30 >= 2)
      {
        uint64_t v136 = *v170;
        do
        {
          unint64_t v137 = v30 - 2;
          if (v30 < 2) {
            goto LABEL_146;
          }
          if (!v136) {
            goto LABEL_158;
          }
          unint64_t v138 = v28;
          unint64_t v139 = v28 + 32;
          uint64_t v140 = *(void *)&v28[16 * v137 + 32];
          uint64_t v141 = *(void *)&v28[16 * v30 + 24];
          uint64_t v142 = v26;
          sub_25B1E33EC(v136 + *(void *)(v26 + 72) * v140, v136 + *(void *)(v26 + 72) * *(void *)&v139[16 * v30 - 16], v136 + *(void *)(v26 + 72) * v141, v156);
          if (v2) {
            break;
          }
          if (v141 < v140) {
            goto LABEL_147;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v138 = sub_25B1E3EF0((uint64_t)v138);
          }
          if (v137 >= *((void *)v138 + 2)) {
            goto LABEL_148;
          }
          uint64_t v143 = &v138[16 * v137 + 32];
          *(void *)uint64_t v143 = v140;
          *((void *)v143 + 1) = v141;
          unint64_t v144 = *((void *)v138 + 2);
          if (v30 > v144) {
            goto LABEL_149;
          }
          uint64_t v28 = v138;
          memmove(&v138[16 * v30 + 16], &v138[16 * v30 + 32], 16 * (v144 - v30));
          *((void *)v138 + 2) = v144 - 1;
          unint64_t v30 = v144 - 1;
          uint64_t v26 = v142;
        }
        while (v144 > 2);
      }
LABEL_128:
      swift_bridgeObjectRelease();
      *(void *)(v145 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = sub_25B290750();
    *(void *)(v25 + 16) = v24;
    uint64_t v26 = v5;
    unint64_t v27 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v145 = v25;
    unint64_t v156 = v25 + v27;
  }
  uint64_t v29 = 0;
  uint64_t v161 = v26 + 16;
  unint64_t v162 = (void (**)(char *, uint64_t))(v26 + 8);
  v166 = (char **)(v26 + 32);
  uint64_t v28 = (char *)MEMORY[0x263F8EE78];
  uint64_t v157 = v26;
  uint64_t v164 = v4;
  while (1)
  {
    uint64_t v31 = v29;
    uint64_t v32 = v29 + 1;
    uint64_t v154 = v29;
    if (v29 + 1 >= v21)
    {
      uint64_t v40 = v29 + 1;
      goto LABEL_69;
    }
    uint64_t v163 = v21;
    uint64_t v149 = v28;
    uint64_t v33 = *v170;
    uint64_t v34 = *(void *)(v26 + 72);
    BOOL v35 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v35(v150, *v170 + v34 * v32, v4);
    v158 = (char *)v33;
    uint64_t v169 = v34;
    v35(v151, v33 + v34 * v31, v4);
    uint64_t v36 = sub_25B290020();
    uint64_t v38 = v37;
    if (v36 != sub_25B290020()) {
      goto LABEL_20;
    }
    if (v38 == v39) {
      LODWORD(v160) = 0;
    }
    else {
LABEL_20:
    }
      LODWORD(v160) = sub_25B290FB0();
    uint64_t v41 = v148;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = *v162;
    uint64_t v43 = v164;
    (*v162)(v151, v164);
    v42(v150, v43);
    uint64_t v40 = v154 + 2;
    if (v154 + 2 >= v163)
    {
      uint64_t v55 = v157;
    }
    else
    {
      uint64_t v147 = v2;
      uint64_t v159 = v169 * v32;
      uint64_t v44 = v158;
      uint64_t v45 = v169 * v40;
      while (1)
      {
        uint64_t v46 = v40;
        uint64_t v47 = v164;
        v35(v155, (uint64_t)&v44[v45], v164);
        v35(v41, (uint64_t)&v44[v159], v47);
        uint64_t v48 = sub_25B290020();
        uint64_t v50 = v49;
        if (v48 == sub_25B290020() && v50 == v51) {
          int v52 = 0;
        }
        else {
          int v52 = sub_25B290FB0();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = v164;
        v42(v41, v164);
        v42(v155, v53);
        if ((v160 ^ v52)) {
          break;
        }
        uint64_t v40 = v46 + 1;
        v44 += v169;
        if (v163 == v46 + 1)
        {
          uint64_t v54 = v163;
          uint64_t v40 = v163;
          uint64_t v2 = v147;
          uint64_t v55 = v157;
          goto LABEL_33;
        }
      }
      uint64_t v2 = v147;
      uint64_t v55 = v157;
      uint64_t v40 = v46;
    }
    uint64_t v54 = v163;
LABEL_33:
    uint64_t v28 = v149;
    uint64_t v31 = v154;
    int v56 = v158;
    if ((v160 & 1) == 0) {
      break;
    }
    if (v40 < v154) {
      goto LABEL_152;
    }
    if (v154 >= v40) {
      break;
    }
    uint64_t v147 = v2;
    uint64_t v57 = 0;
    uint64_t v58 = v169 * (v40 - 1);
    uint64_t v59 = v40 * v169;
    uint64_t v60 = v154;
    uint64_t v61 = v154 * v169;
    do
    {
      if (v60 != v40 + v57 - 1)
      {
        if (!v56) {
          goto LABEL_157;
        }
        BOOL v63 = &v56[v58];
        v160 = *v166;
        ((void (*)(char *, char *, uint64_t))v160)(v153, &v56[v61], v164);
        if (v61 < v58 || &v56[v61] >= &v56[v59])
        {
          uint64_t v62 = v164;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v62 = v164;
          if (v61 != v58) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        ((void (*)(char *, char *, uint64_t))v160)(v63, v153, v62);
        uint64_t v55 = v157;
        int v56 = v158;
      }
      ++v60;
      --v57;
      v58 -= v169;
      v59 -= v169;
      v61 += v169;
    }
    while (v60 < v40 + v57);
    uint64_t v2 = v147;
    uint64_t v54 = v163;
    uint64_t v64 = v164;
    uint64_t v28 = v149;
    uint64_t v31 = v154;
    if (v40 < v163) {
      goto LABEL_49;
    }
LABEL_69:
    if (v40 < v31) {
      goto LABEL_145;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v28 = sub_25B1E3AB4(0, *((void *)v28 + 2) + 1, 1, v28);
    }
    unint64_t v85 = *((void *)v28 + 2);
    unint64_t v84 = *((void *)v28 + 3);
    unint64_t v30 = v85 + 1;
    uint64_t v26 = v157;
    uint64_t v163 = v40;
    if (v85 >= v84 >> 1)
    {
      int64_t v135 = sub_25B1E3AB4((char *)(v84 > 1), v85 + 1, 1, v28);
      uint64_t v26 = v157;
      uint64_t v28 = v135;
    }
    *((void *)v28 + 2) = v30;
    int64_t v86 = v28 + 32;
    uint64_t v87 = &v28[16 * v85 + 32];
    uint64_t v88 = v163;
    *(void *)uint64_t v87 = v31;
    *((void *)v87 + 1) = v88;
    if (v85)
    {
      while (1)
      {
        unint64_t v89 = v30 - 1;
        if (v30 >= 4)
        {
          uint64_t v94 = &v86[16 * v30];
          uint64_t v95 = *((void *)v94 - 8);
          uint64_t v96 = *((void *)v94 - 7);
          BOOL v100 = __OFSUB__(v96, v95);
          uint64_t v97 = v96 - v95;
          if (v100) {
            goto LABEL_134;
          }
          uint64_t v99 = *((void *)v94 - 6);
          uint64_t v98 = *((void *)v94 - 5);
          BOOL v100 = __OFSUB__(v98, v99);
          uint64_t v92 = v98 - v99;
          char v93 = v100;
          if (v100) {
            goto LABEL_135;
          }
          unint64_t v101 = v30 - 2;
          uint64_t v102 = &v86[16 * v30 - 32];
          uint64_t v104 = *(void *)v102;
          uint64_t v103 = *((void *)v102 + 1);
          BOOL v100 = __OFSUB__(v103, v104);
          uint64_t v105 = v103 - v104;
          if (v100) {
            goto LABEL_137;
          }
          BOOL v100 = __OFADD__(v92, v105);
          uint64_t v106 = v92 + v105;
          if (v100) {
            goto LABEL_140;
          }
          if (v106 >= v97)
          {
            BOOL v124 = &v86[16 * v89];
            uint64_t v126 = *(void *)v124;
            uint64_t v125 = *((void *)v124 + 1);
            BOOL v100 = __OFSUB__(v125, v126);
            uint64_t v127 = v125 - v126;
            if (v100) {
              goto LABEL_144;
            }
            BOOL v117 = v92 < v127;
            goto LABEL_106;
          }
        }
        else
        {
          if (v30 != 3)
          {
            uint64_t v118 = *((void *)v28 + 4);
            uint64_t v119 = *((void *)v28 + 5);
            BOOL v100 = __OFSUB__(v119, v118);
            uint64_t v111 = v119 - v118;
            char v112 = v100;
            goto LABEL_100;
          }
          uint64_t v91 = *((void *)v28 + 4);
          uint64_t v90 = *((void *)v28 + 5);
          BOOL v100 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          char v93 = v100;
        }
        if (v93) {
          goto LABEL_136;
        }
        unint64_t v101 = v30 - 2;
        uint64_t v107 = &v86[16 * v30 - 32];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v110 = __OFSUB__(v108, v109);
        uint64_t v111 = v108 - v109;
        char v112 = v110;
        if (v110) {
          goto LABEL_139;
        }
        uint64_t v113 = &v86[16 * v89];
        uint64_t v115 = *(void *)v113;
        uint64_t v114 = *((void *)v113 + 1);
        BOOL v100 = __OFSUB__(v114, v115);
        uint64_t v116 = v114 - v115;
        if (v100) {
          goto LABEL_142;
        }
        if (__OFADD__(v111, v116)) {
          goto LABEL_143;
        }
        if (v111 + v116 >= v92)
        {
          BOOL v117 = v92 < v116;
LABEL_106:
          if (v117) {
            unint64_t v89 = v101;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v112) {
          goto LABEL_138;
        }
        unint64_t v120 = &v86[16 * v89];
        uint64_t v122 = *(void *)v120;
        uint64_t v121 = *((void *)v120 + 1);
        BOOL v100 = __OFSUB__(v121, v122);
        uint64_t v123 = v121 - v122;
        if (v100) {
          goto LABEL_141;
        }
        if (v123 < v111) {
          goto LABEL_14;
        }
LABEL_108:
        unint64_t v128 = v89 - 1;
        if (v89 - 1 >= v30)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!*v170) {
          goto LABEL_156;
        }
        long long v129 = v28;
        int64_t v130 = &v86[16 * v128];
        uint64_t v131 = *(void *)v130;
        int64_t v132 = &v86[16 * v89];
        uint64_t v133 = *((void *)v132 + 1);
        sub_25B1E33EC(*v170 + *(void *)(v26 + 72) * *(void *)v130, *v170 + *(void *)(v26 + 72) * *(void *)v132, *v170 + *(void *)(v26 + 72) * v133, v156);
        if (v2) {
          goto LABEL_128;
        }
        if (v133 < v131) {
          goto LABEL_131;
        }
        if (v89 > *((void *)v129 + 2)) {
          goto LABEL_132;
        }
        *(void *)int64_t v130 = v131;
        *(void *)&v86[16 * v128 + 8] = v133;
        unint64_t v134 = *((void *)v129 + 2);
        if (v89 >= v134) {
          goto LABEL_133;
        }
        uint64_t v28 = v129;
        unint64_t v30 = v134 - 1;
        memmove(&v86[16 * v89], v132 + 16, 16 * (v134 - 1 - v89));
        *((void *)v129 + 2) = v134 - 1;
        uint64_t v26 = v157;
        if (v134 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v30 = 1;
LABEL_14:
    uint64_t v21 = v170[1];
    uint64_t v29 = v163;
    uint64_t v4 = v164;
    if (v163 >= v21) {
      goto LABEL_117;
    }
  }
  uint64_t v64 = v164;
  if (v40 >= v54) {
    goto LABEL_69;
  }
LABEL_49:
  if (__OFSUB__(v40, v31)) {
    goto LABEL_150;
  }
  if (v40 - v31 >= v146) {
    goto LABEL_69;
  }
  if (__OFADD__(v31, v146)) {
    goto LABEL_153;
  }
  if (v31 + v146 >= v54) {
    uint64_t v65 = v54;
  }
  else {
    uint64_t v65 = v31 + v146;
  }
  if (v65 >= v31)
  {
    if (v40 != v65)
    {
      uint64_t v149 = v28;
      uint64_t v147 = v2;
      uint64_t v66 = *(void *)(v55 + 72);
      v158 = *(char **)(v55 + 16);
      uint64_t v159 = v66;
      uint64_t v169 = v66 * (v40 - 1);
      unint64_t v67 = (char *)(v40 * v66);
      uint64_t v152 = v65;
      do
      {
        uint64_t v70 = 0;
        uint64_t v71 = v31;
        uint64_t v163 = v40;
        v160 = v67;
        while (1)
        {
          uint64_t v72 = *v170;
          uint64_t v73 = (uint64_t)&v67[v70 + *v170];
          uint64_t v74 = v158;
          ((void (*)(char *, uint64_t, uint64_t))v158)(v167, v73, v64);
          ((void (*)(char *, uint64_t, uint64_t))v74)(v168, v169 + v70 + v72, v64);
          uint64_t v75 = sub_25B290020();
          uint64_t v77 = v76;
          if (v75 == sub_25B290020() && v77 == v78) {
            break;
          }
          char v79 = sub_25B290FB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v80 = *v162;
          uint64_t v64 = v164;
          (*v162)(v168, v164);
          v80(v167, v64);
          if ((v79 & 1) == 0) {
            goto LABEL_59;
          }
          uint64_t v81 = *v170;
          unint64_t v67 = v160;
          if (!*v170) {
            goto LABEL_155;
          }
          uint64_t v82 = v81 + v169 + v70;
          uint64_t v83 = *v166;
          ((void (*)(char *, char *, uint64_t))*v166)(v165, &v160[v81 + v70], v64);
          swift_arrayInitWithTakeFrontToBack();
          ((void (*)(uint64_t, char *, uint64_t))v83)(v82, v165, v64);
          v70 -= v159;
          ++v71;
          uint64_t v69 = v163;
          if (v163 == v71) {
            goto LABEL_60;
          }
        }
        swift_bridgeObjectRelease_n();
        unint64_t v68 = *v162;
        uint64_t v64 = v164;
        (*v162)(v168, v164);
        v68(v167, v64);
LABEL_59:
        uint64_t v69 = v163;
        unint64_t v67 = v160;
LABEL_60:
        uint64_t v40 = v69 + 1;
        v169 += v159;
        v67 += v159;
        uint64_t v31 = v154;
      }
      while (v40 != v152);
      uint64_t v40 = v152;
      uint64_t v2 = v147;
      uint64_t v28 = v149;
    }
    goto LABEL_69;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  uint64_t result = sub_25B290BB0();
  __break(1u);
  return result;
}

uint64_t sub_25B1E30A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v46 = a4;
  uint64_t v34 = a1;
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v44 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v48 = (char *)&v32 - v10;
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v47 = (char *)&v32 - v13;
  uint64_t v42 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v38 = v12 + 16;
    uint64_t v14 = *(void *)(v12 + 72);
    BOOL v35 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v36 = v6;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v15 = v14 * (v42 - 1);
    uint64_t v39 = v14;
    uint64_t v16 = v14 * v42;
LABEL_6:
    uint64_t v18 = 0;
    uint64_t v19 = v34;
    uint64_t v40 = v16;
    uint64_t v41 = v15;
    while (1)
    {
      uint64_t v20 = *v46;
      uint64_t v45 = v16 + v18;
      uint64_t v21 = v16 + v18 + v20;
      uint64_t v22 = v37;
      v37(v47, v21, v6);
      v22(v48, v15 + v18 + v20, v6);
      uint64_t v23 = sub_25B290020();
      uint64_t v25 = v24;
      if (v23 == sub_25B290020() && v25 == v26)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v36;
        uint64_t v17 = *v35;
        (*v35)(v48, v36);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v17)(v47, v6);
        uint64_t v16 = v40;
        uint64_t v15 = v41;
LABEL_5:
        v15 += v39;
        v16 += v39;
        if (++v42 == v33) {
          return result;
        }
        goto LABEL_6;
      }
      char v27 = sub_25B290FB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v36;
      uint64_t v28 = *v35;
      (*v35)(v48, v36);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v47, v6);
      uint64_t v16 = v40;
      uint64_t v15 = v41;
      if ((v27 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v29 = *v46;
      if (!*v46) {
        break;
      }
      uint64_t v30 = v29 + v41 + v18;
      uint64_t v31 = *v43;
      (*v43)(v44, v29 + v40 + v18, v6);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(v30, v44, v6);
      v18 -= v39;
      if (v42 == ++v19) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25B1E33EC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v66 = sub_25B290080();
  uint64_t v8 = *(void *)(v66 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v66);
  uint64_t v64 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  BOOL v63 = (char *)&v58 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)&v58 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v65 = *(void *)(v17 + 72);
  if (!v65)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_69;
  }
  int64_t v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_70;
  }
  uint64_t v19 = (uint64_t)(a2 - a1) / v65;
  unint64_t v69 = a1;
  unint64_t v68 = a4;
  uint64_t v20 = v18 / v65;
  if (v19 >= v18 / v65)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v22 = v20 * v65;
      if (a4 < a2 || a2 + v22 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v40 = a4 + v22;
      unint64_t v67 = a4 + v22;
      unint64_t v69 = a2;
      uint64_t v62 = (char *)a1;
      if (v22 >= 1 && a1 < a2)
      {
        uint64_t v42 = -v65;
        uint64_t v65 = *(void *)(v8 + 16);
        unint64_t v60 = a4;
        uint64_t v61 = v8 + 16;
        uint64_t v59 = (void (**)(char *, uint64_t))(v8 + 8);
        do
        {
          unint64_t v43 = a3;
          uint64_t v44 = (void (*)(char *, unint64_t, uint64_t))v65;
          uint64_t v45 = v66;
          ((void (*)(char *, unint64_t, uint64_t))v65)(v63, v40 + v42, v66);
          unint64_t v46 = a2 + v42;
          v44(v64, a2 + v42, v45);
          uint64_t v47 = sub_25B290020();
          uint64_t v49 = v48;
          if (v47 == sub_25B290020() && v49 == v50) {
            char v51 = 0;
          }
          else {
            char v51 = sub_25B290FB0();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v52 = v43 + v42;
          uint64_t v53 = *v59;
          uint64_t v54 = v66;
          (*v59)(v64, v66);
          v53(v63, v54);
          unint64_t v55 = v60;
          if (v51)
          {
            if (v43 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v69 += v42;
          }
          else
          {
            unint64_t v56 = v67;
            v67 += v42;
            if (v43 < v56 || v52 >= v56)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != v56)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v46 = a2;
          }
          unint64_t v40 = v67;
          if (v67 <= v55) {
            break;
          }
          a2 = v46;
          a3 = v43 + v42;
        }
        while (v46 > (unint64_t)v62);
      }
LABEL_67:
      sub_25B1E3DB0(&v69, &v68, (uint64_t *)&v67);
      return 1;
    }
  }
  else if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = v19 * v65;
    if (a4 < a1 || a1 + v21 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v64 = (char *)(a4 + v21);
    unint64_t v67 = a4 + v21;
    if (v21 >= 1 && a2 < a3)
    {
      BOOL v63 = *(char **)(v8 + 16);
      uint64_t v61 = v8 + 16;
      uint64_t v24 = (void (**)(char *, uint64_t))(v8 + 8);
      while (1)
      {
        unint64_t v25 = a3;
        uint64_t v26 = v66;
        char v27 = (void (*)(char *, unint64_t, uint64_t))v63;
        ((void (*)(char *, unint64_t, uint64_t))v63)(v16, a2, v66);
        v27(v62, a4, v26);
        uint64_t v28 = sub_25B290020();
        uint64_t v30 = v29;
        if (v28 == sub_25B290020() && v30 == v31) {
          break;
        }
        char v34 = sub_25B290FB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL v35 = *v24;
        uint64_t v36 = v66;
        (*v24)(v62, v66);
        v35(v16, v36);
        if ((v34 & 1) == 0) {
          goto LABEL_31;
        }
        unint64_t v37 = v69;
        unint64_t v38 = a2 + v65;
        if (v69 < a2 || v69 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
          a3 = v25;
        }
        else
        {
          a3 = v25;
          if (v69 == a2) {
            unint64_t v37 = a2;
          }
          else {
            swift_arrayInitWithTakeBackToFront();
          }
        }
LABEL_37:
        unint64_t v69 = v37 + v65;
        a4 = v68;
        if (v68 < (unint64_t)v64)
        {
          a2 = v38;
          if (v38 < a3) {
            continue;
          }
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v32 = *v24;
      uint64_t v33 = v66;
      (*v24)(v62, v66);
      v32(v16, v33);
LABEL_31:
      unint64_t v37 = v69;
      unint64_t v39 = v68 + v65;
      if (v69 < v68 || v69 >= v39)
      {
        swift_arrayInitWithTakeFrontToBack();
        a3 = v25;
      }
      else
      {
        a3 = v25;
        if (v69 != v68) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v68 = v39;
      unint64_t v38 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

char *sub_25B1E3AB4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D78);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_25B1E3BB0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_25B290C10();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_25B1E3CF4(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_25B290C10();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

uint64_t sub_25B1E3DB0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_25B290080();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_25B290C10();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_25B1E3EF0(uint64_t a1)
{
  return sub_25B1E3AB4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_25B1E3F04(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25B28FD00();
  if (!result || (uint64_t result = sub_25B28FD30(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_25B28FD20();
      sub_25B2904A0();
      sub_25B1E47FC((unint64_t *)&qword_26B33F220, MEMORY[0x263F047F8]);
      return sub_25B290450();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_25B1E3FE4@<X0>(void *a1@<X8>)
{
  return sub_25B1E4A50(a1);
}

uint64_t sub_25B1E3FFC@<X0>(void *a1@<X8>)
{
  return sub_25B1E462C(a1);
}

uint64_t sub_25B1E4014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D97D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B1E407C@<X0>(uint64_t a1@<X8>)
{
  return sub_25B1E45DC(a1);
}

uint64_t sub_25B1E4094@<X0>(void *a1@<X8>)
{
  return sub_25B1DFD58(*(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

void *sub_25B1E40B4@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, void *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

double sub_25B1E40F8@<D0>(void (*a1)(long long *__return_ptr)@<X1>, _OWORD *a2@<X8>)
{
  a1(&v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *a2 = v5;
  }
  return result;
}

uint64_t sub_25B1E413C(void *a1)
{
  return sub_25B22447C(0, a1[2], 0, a1);
}

uint64_t sub_25B1E4150(uint64_t a1)
{
  return sub_25B224850(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_25B1E4164(void *a1)
{
  return sub_25B2242F0(0, a1[2], 0, a1);
}

uint64_t sub_25B1E4178@<X0>(void *a1@<X8>)
{
  return sub_25B1E4578(a1);
}

double sub_25B1E4190@<D0>(_OWORD *a1@<X8>)
{
  return sub_25B1E4598(a1);
}

void sub_25B1E41A8(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 136);
}

void *sub_25B1E41B4@<X0>(unsigned char *a1@<X8>)
{
  return sub_25B1D69DC(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

void sub_25B1E41D0(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 137);
}

uint64_t sub_25B1E41DC@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 144);
  return swift_bridgeObjectRetain();
}

void sub_25B1E41FC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 137) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_25B1E420C()
{
  *(void *)(*(void *)(v0 + 16) + 144) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1E4248()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  *(void *)(v1 + 120) = v0[3];
  *(void *)(v1 + 128) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_25B1E4288()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 136) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_25B1E4298()
{
  swift_beginAccess();
  *(void *)(v0 + 112) = MEMORY[0x263F8EE80];
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1E42EC@<X0>(void *a1@<X8>)
{
  return sub_25B1DDFC8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_25B1E4308()
{
  return sub_25B1DEBEC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25B1E4324()
{
  return sub_25B1DF108(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25B1E4340()
{
  return sub_25B1DF860(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_25B1E435C()
{
  unint64_t result = qword_26A4D9AB0;
  if (!qword_26A4D9AB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4D9AA8);
    sub_25B1E47FC((unint64_t *)&unk_26A4D9210, MEMORY[0x263F07508]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9AB0);
  }
  return result;
}

uint64_t sub_25B1E4404(char *a1)
{
  return MetadataStore.allowListEnabled.setter(*a1);
}

uint64_t sub_25B1E4430()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return MetadataStore.allowList.setter(v0);
}

uint64_t sub_25B1E4460(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return MetadataStore.localDeviceID.setter(v1, v2);
}

uint64_t sub_25B1E44A4(char *a1)
{
  return MetadataStore.isEnabled.setter(*a1);
}

uint64_t dispatch thunk of PairingRelationshipReading.pairingRelationships.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for MetadataStore()
{
  return self;
}

uint64_t method lookup function for MetadataStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MetadataStore);
}

uint64_t dispatch thunk of MetadataStore.recordMetadata.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of MetadataStore.pairingRelationships.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of MetadataStore.__allocating_init(persistentStore:zoneVersionStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t sub_25B1E4578@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 128);
  *a1 = *(void *)(v1 + 120);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

double sub_25B1E4598@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(long long *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *a1 = v5;
  }
  return result;
}

uint64_t sub_25B1E45DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  long long v6 = *(_OWORD *)(v1 + 24);
  uint64_t v7 = v2;
  uint64_t v8 = v3;
  return sub_25B1E053C(&v6, v4, a1);
}

uint64_t sub_25B1E462C@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 104);
  return swift_bridgeObjectRetain();
}

unint64_t sub_25B1E467C()
{
  unint64_t result = qword_26A4D9D90;
  if (!qword_26A4D9D90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4D9D98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9D90);
  }
  return result;
}

uint64_t sub_25B1E46E8()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25B1E46F8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25B28FD40();
  swift_allocObject();
  uint64_t result = sub_25B28FCF0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_25B28FED0();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_25B1E4774(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25B28FD40();
  swift_allocObject();
  uint64_t result = sub_25B28FCF0();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_25B1E47FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B1E4844(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B1E48AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25B1E490C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B1E4974(unint64_t *a1, uint64_t a2)
{
  return sub_25B1E09B8(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_25B1E4998(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B1E4A00@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 112);
  return swift_bridgeObjectRetain();
}

void *sub_25B1E4A50@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

void sub_25B1E4A94()
{
  sub_25B1E1B50(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_25B1E4AB0(unsigned char *a1@<X8>)
{
}

void sub_25B1E4AC8(unsigned char *a1@<X8>)
{
}

void *sub_25B1E4AE0@<X0>(unsigned char *a1@<X8>)
{
  return sub_25B1E41B4(a1);
}

uint64_t sub_25B1E4AF8@<X0>(void *a1@<X8>)
{
  return sub_25B1E41DC(a1);
}

double ScreenDescriptor.pointSize.getter()
{
  return *v0 / v0[2];
}

double ScreenDescriptor.size.getter()
{
  return *(double *)v0;
}

void ScreenDescriptor.size.setter(double a1, double a2)
{
  *uint64_t v2 = a1;
  v2[1] = a2;
}

uint64_t (*ScreenDescriptor.size.modify())()
{
  return nullsub_1;
}

double ScreenDescriptor.scale.getter()
{
  return *(double *)(v0 + 16);
}

void ScreenDescriptor.scale.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*ScreenDescriptor.scale.modify())()
{
  return nullsub_1;
}

uint64_t ScreenDescriptor.cornerRadius.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t ScreenDescriptor.cornerRadius.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*ScreenDescriptor.cornerRadius.modify())()
{
  return nullsub_1;
}

uint64_t ScreenDescriptor.init(size:scale:cornerRadius:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(double *)(a3 + 16) = a6;
  *(void *)(a3 + 24) = result;
  *(unsigned char *)(a3 + 32) = a2 & 1;
  return result;
}

void static ScreenDescriptor.mainScreen.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_mainDisplay);
  if (!v3) {
    goto LABEL_22;
  }
  uint64_t v4 = v3;
  id v5 = objc_msgSend(v3, sel_nativeOrientation);
  uint64_t v6 = sub_25B2905C0();
  uint64_t v8 = v7;

  objc_msgSend(v4, sel_frame);
  double Width = CGRectGetWidth(v25);
  objc_msgSend(v4, sel_frame);
  double Height = CGRectGetHeight(v26);
  if (sub_25B2905C0() == v6 && v11 == v8)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    if (v13)
    {
      swift_bridgeObjectRelease();
    }
    else if (sub_25B2905C0() == v6 && v14 == v8)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v15 = sub_25B290FB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v15) {
        double v16 = Width;
      }
      else {
        double v16 = Height;
      }
      if ((v15 & 1) == 0) {
        double Height = Width;
      }
      double Width = v16;
    }
  }
  id v17 = objc_msgSend(v2, sel_mainDisplay);
  if (v17)
  {
    int64_t v18 = v17;
    id v19 = objc_msgSend(v17, sel_currentMode);
    id v20 = objc_msgSend(v19, sel_preferredScale);

    sub_25B1E4E44();
    uint64_t v21 = (void *)sub_25B2909A0();
    MGGetFloat32Answer();
    float v23 = v22;

    *(double *)a1 = Height;
    *(double *)(a1 + 8) = Width;
    double v24 = v23;
    if (v23 <= -1.0) {
      double v24 = 0.0;
    }
    *(double *)(a1 + 16) = (double)(uint64_t)v20;
    *(double *)(a1 + 24) = v24;
    *(unsigned char *)(a1 + 32) = v23 <= -1.0;
    *(unsigned char *)(a1 + 33) = 0;
  }
  else
  {
LABEL_22:
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_WORD *)(a1 + 32) = 256;
  }
}

unint64_t sub_25B1E4E44()
{
  unint64_t result = qword_26A4D9BA0;
  if (!qword_26A4D9BA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A4D9BA0);
  }
  return result;
}

uint64_t sub_25B1E4E88()
{
  uint64_t v1 = 0x656C616373;
  if (*v0 != 1) {
    uint64_t v1 = 0x615272656E726F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1702521203;
  }
}

uint64_t sub_25B1E4EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B1E5820(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B1E4F08(uint64_t a1)
{
  unint64_t v2 = sub_25B1E5474();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1E4F44(uint64_t a1)
{
  unint64_t v2 = sub_25B1E5474();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ScreenDescriptor.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9CD8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v10 = v1[2];
  uint64_t v14 = v1[3];
  char v11 = *((unsigned char *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1E5474();
  sub_25B291290();
  uint64_t v16 = v8;
  uint64_t v17 = v9;
  char v15 = 0;
  type metadata accessor for CGSize(0);
  sub_25B1E551C(&qword_26A4D9B88);
  sub_25B290D60();
  if (!v2)
  {
    uint64_t v12 = v14;
    uint64_t v16 = v10;
    char v15 = 1;
    sub_25B1E54C8();
    sub_25B290D60();
    uint64_t v16 = v12;
    LOBYTE(v17) = v11;
    char v15 = 2;
    sub_25B290D20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ScreenDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9C80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B1E5474();
  sub_25B291280();
  if (!v2)
  {
    type metadata accessor for CGSize(0);
    char v16 = 0;
    sub_25B1E551C(&qword_26A4D9B90);
    sub_25B290CC0();
    uint64_t v9 = v17;
    uint64_t v10 = v18;
    char v16 = 1;
    sub_25B1E5560();
    sub_25B290CC0();
    uint64_t v12 = v17;
    char v16 = 2;
    sub_25B290C80();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v17;
    char v14 = v18;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v13;
    *(unsigned char *)(a2 + 32) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_25B1E53F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ScreenDescriptor.init(from:)(a1, a2);
}

uint64_t sub_25B1E5408(void *a1)
{
  return ScreenDescriptor.encode(to:)(a1);
}

uint64_t _s16ReplicatorEngine16ScreenDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  char v4 = *(unsigned char *)(a2 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 24) != *(double *)(a2 + 24)) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  return 1;
}

unint64_t sub_25B1E5474()
{
  unint64_t result = qword_26A4D9408;
  if (!qword_26A4D9408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9408);
  }
  return result;
}

unint64_t sub_25B1E54C8()
{
  unint64_t result = qword_26A4D9240;
  if (!qword_26A4D9240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9240);
  }
  return result;
}

uint64_t sub_25B1E551C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGSize(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25B1E5560()
{
  unint64_t result = qword_26A4D9248;
  if (!qword_26A4D9248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9248);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScreenDescriptor(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ScreenDescriptor(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ScreenDescriptor()
{
  return &type metadata for ScreenDescriptor;
}

unsigned char *storeEnumTagSinglePayload for ScreenDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B1E56E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreenDescriptor.CodingKeys()
{
  return &type metadata for ScreenDescriptor.CodingKeys;
}

unint64_t sub_25B1E571C()
{
  unint64_t result = qword_26A4DAF00;
  if (!qword_26A4DAF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAF00);
  }
  return result;
}

unint64_t sub_25B1E5774()
{
  unint64_t result = qword_26A4D9418;
  if (!qword_26A4D9418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9418);
  }
  return result;
}

unint64_t sub_25B1E57CC()
{
  unint64_t result = qword_26A4D9410;
  if (!qword_26A4D9410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9410);
  }
  return result;
}

uint64_t sub_25B1E5820(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702521203 && a2 == 0xE400000000000000;
  if (v2 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_25B290FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25B1E5978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v39 = a2;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB010);
  uint64_t v35 = *(void *)(v41 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v41);
  char v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (uint64_t *)((char *)&v34 - v8);
  MEMORY[0x270FA5388](v7);
  char v11 = (uint64_t *)((char *)&v34 - v10);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v37 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v38 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v40 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    uint64_t v23 = *(void *)(v40 + 56);
    double v24 = (uint64_t *)(*(void *)(v40 + 48) + 16 * i);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = v23
        + *(void *)(*(void *)(type metadata accessor for NetworkMessenger.ExpiringConnection(0) - 8) + 72) * i;
    uint64_t v28 = v41;
    sub_25B207948(v27, (uint64_t)v11 + *(int *)(v41 + 48), type metadata accessor for NetworkMessenger.ExpiringConnection);
    *char v11 = v25;
    v11[1] = v26;
    sub_25B187574((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_26A4DB010);
    uint64_t v29 = *(int *)(v28 + 48);
    uint64_t v30 = (void *)((char *)v6 + v29);
    uint64_t v31 = v9[1];
    void *v6 = *v9;
    v6[1] = v31;
    sub_25B207948((uint64_t)v9 + v29, (uint64_t)v6 + v29, type metadata accessor for NetworkMessenger.ExpiringConnection);
    uint64_t v32 = *v30;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_25B207870((uint64_t)v30, type metadata accessor for NetworkMessenger.ExpiringConnection);
    swift_unknownObjectRelease();
    if (v32 == v39)
    {
      swift_release();
      uint64_t v33 = v36;
      sub_25B187574((uint64_t)v9, v36, (uint64_t *)&unk_26A4DB010);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v33, 0, 1, v41);
      return swift_unknownObjectRelease();
    }
    uint64_t result = sub_25B116DE0((uint64_t)v9, (uint64_t *)&unk_26A4DB010);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v20 >= v38) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v37 + 8 * v20);
    ++v17;
    if (v21) {
      goto LABEL_20;
    }
    int64_t v17 = v20 + 1;
    if (v20 + 1 >= v38) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v37 + 8 * v17);
    if (v21) {
      goto LABEL_20;
    }
    int64_t v17 = v20 + 2;
    if (v20 + 2 >= v38) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v37 + 8 * v17);
    if (v21) {
      goto LABEL_20;
    }
    int64_t v17 = v20 + 3;
    if (v20 + 3 >= v38) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v37 + 8 * v17);
    if (v21) {
      goto LABEL_20;
    }
    int64_t v22 = v20 + 4;
    if (v22 >= v38)
    {
LABEL_25:
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v36, 1, 1, v41);
      return swift_unknownObjectRelease();
    }
    unint64_t v21 = *(void *)(v37 + 8 * v22);
    if (!v21)
    {
      while (1)
      {
        int64_t v17 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          goto LABEL_28;
        }
        if (v17 >= v38) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v37 + 8 * v17);
        ++v22;
        if (v21) {
          goto LABEL_20;
        }
      }
    }
    int64_t v17 = v22;
LABEL_20:
    unint64_t v15 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_25B1E5D18(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB100);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B20A190();
  sub_25B291290();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB0B0);
  sub_25B20AAC0(&qword_26A4DB108, (void (*)(void))sub_25B196FCC);
  sub_25B290D60();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_25B1E5EA0()
{
  return 0x7475626972747461;
}

uint64_t sub_25B1E5EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25B290FB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25B1E5F60(uint64_t a1)
{
  unint64_t v2 = sub_25B20A190();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B1E5F9C(uint64_t a1)
{
  unint64_t v2 = sub_25B20A190();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_25B1E5FD8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_25B2071B8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_25B1E6004(void *a1)
{
  return sub_25B1E5D18(a1, *v1);
}

uint64_t sub_25B1E6020()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB038);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 1;
  qword_26A4DAF10 = result;
  return result;
}

uint64_t *sub_25B1E6060@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *result;
  if (*result == -1)
  {
    __break(1u);
  }
  else
  {
    ++*result;
    *a2 = v2;
  }
  return result;
}

uint64_t sub_25B1E607C@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  int v3 = sub_25B225BC0(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_25B1E60EC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B1E610C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(NSObject **)(v3 + 24);
  char v7 = (void *)swift_allocObject();
  void v7[2] = v3;
  void v7[3] = a1;
  v7[4] = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_25B20A6C0;
  *(void *)(v8 + 24) = v7;
  v11[4] = sub_25B117398;
  v11[5] = v8;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_25B10D184;
  v11[3] = &block_descriptor_341;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B1E626C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25B290410();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v3 + 24);
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F0E0], v6);
  id v11 = v10;
  uint64_t v12 = sub_25B290440();
  uint64_t v13 = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  MEMORY[0x270FA5388](v13);
  *(&v24 - 2) = a1;
  *(&v24 - 1) = a2;
  unint64_t v15 = (uint64_t *)&v14[4];
  char v16 = v14 + 8;
  os_unfair_lock_lock(v14 + 8);
  sub_25B209B44(v15, (uint64_t)v26);
  os_unfair_lock_unlock(v16);
  uint64_t v9 = (void *)v26[2];
  if (LOBYTE(v26[0]) != 1) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v12 = v26[1];
  if (qword_26A4D98C8 != -1) {
    goto LABEL_10;
  }
LABEL_4:
  uint64_t v17 = sub_25B290190();
  __swift_project_value_buffer(v17, (uint64_t)qword_26A4EB168);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v18 = sub_25B290160();
  os_log_type_t v19 = sub_25B2908A0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v26[0] = v21;
    *(_DWORD *)uint64_t v20 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_25B288E98(a1, a2, v26);
    uint64_t v24 = a1;
    uint64_t v25 = v22;
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_25B288E98(v12, (unint64_t)v9, v26);
    a1 = v24;
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v18, v19, "set terminusRemoteDeviceID:%{public}s changed from %{public}s; updating connections key",
      (uint8_t *)v20,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v21, -1, -1);
    MEMORY[0x261160890](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_25B1E669C(a1, a2, v12, (unint64_t)v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1E65F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (*a1 == a2 && v6 == a3)
  {
    char v12 = 0;
  }
  else
  {
    char v11 = sub_25B290FB0();
    char v12 = 0;
    if ((v11 & 1) == 0)
    {
      *a1 = a2;
      a1[1] = a3;
      char v12 = 1;
    }
  }
  *(unsigned char *)a4 = v12;
  *(void *)(a4 + 8) = v5;
  *(void *)(a4 + 16) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B1E669C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v43 = (void *)a3;
  unint64_t v44 = a2;
  uint64_t v41 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB000);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  char v11 = &v37[-v10];
  uint64_t v12 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v42 = &v37[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_25B290410();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = &v37[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  os_log_type_t v19 = *(void **)(v4 + 24);
  *unint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F8F0E0], v15);
  id v20 = v19;
  LOBYTE(v19) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
LABEL_15:
    swift_once();
    goto LABEL_10;
  }
  swift_beginAccess();
  uint64_t v21 = *(void *)(v4 + 56);
  if (!*(void *)(v21 + 16))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_8:
    sub_25B116DE0((uint64_t)v11, &qword_26A4DB000);
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  unint64_t v18 = v43;
  unint64_t v22 = sub_25B18A634((uint64_t)v43, a4);
  if (v23)
  {
    sub_25B207948(*(void *)(v21 + 56) + *(void *)(v13 + 72) * v22, (uint64_t)v11, type metadata accessor for NetworkMessenger.ExpiringConnection);
    uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v24(v11, 0, 1, v12);
  }
  else
  {
    uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v24(v11, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    goto LABEL_8;
  }
  uint64_t v40 = v24;
  sub_25B20913C((uint64_t)v11, (uint64_t)v42, type metadata accessor for NetworkMessenger.ExpiringConnection);
  swift_endAccess();
  if (qword_26A4D98C8 != -1) {
    goto LABEL_15;
  }
LABEL_10:
  uint64_t v26 = sub_25B290190();
  __swift_project_value_buffer(v26, (uint64_t)qword_26A4EB168);
  swift_bridgeObjectRetain_n();
  uint64_t v27 = v44;
  swift_bridgeObjectRetain_n();
  uint64_t v28 = sub_25B290160();
  os_log_type_t v29 = sub_25B2908A0();
  int v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v46[0] = v39;
    *(_DWORD *)uint64_t v31 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_25B288E98((uint64_t)v18, a4, v46);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 2082;
    swift_bridgeObjectRetain();
    int v38 = v30;
    uint64_t v32 = v41;
    uint64_t v45 = sub_25B288E98(v41, v44, v46);
    unint64_t v18 = v43;
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v28, (os_log_type_t)v38, "updating connection key from %{public}s to %{public}s", (uint8_t *)v31, 0x16u);
    uint64_t v33 = v39;
    swift_arrayDestroy();
    MEMORY[0x261160890](v33, -1, -1);
    uint64_t v34 = v31;
    uint64_t v35 = v32;
    uint64_t v27 = v44;
    MEMORY[0x261160890](v34, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v35 = v41;
  }
  swift_beginAccess();
  sub_25B21D420((uint64_t)v18, a4, (uint64_t)v9);
  swift_endAccess();
  sub_25B116DE0((uint64_t)v9, &qword_26A4DB000);
  uint64_t v36 = v42;
  sub_25B207948((uint64_t)v42, (uint64_t)v9, type metadata accessor for NetworkMessenger.ExpiringConnection);
  v40(v9, 0, 1, v12);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_25B20EEAC((uint64_t)v9, v35, v27);
  swift_endAccess();
  return sub_25B207870((uint64_t)v36, type metadata accessor for NetworkMessenger.ExpiringConnection);
}

uint64_t sub_25B1E6C9C(uint64_t isEscapingClosureAtFileLocation)
{
  uint64_t v2 = v1;
  uint64_t v26 = *MEMORY[0x263EF8340];
  int out_token = -1;
  uint64_t v5 = *(void **)(v1 + 120);
  unint64_t v4 = *(void *)(v1 + 128);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  uint64_t v24 = sub_25B20A750;
  unint64_t v25 = v6;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v21 = 1107296256;
  unint64_t v22 = sub_25B22AEF4;
  char v23 = &block_descriptor_347;
  uint64_t v7 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain_n();
  swift_release();
  uint64_t v8 = sub_25B290610();
  uint32_t v9 = notify_register_dispatch((const char *)(v8 + 32), &out_token, (dispatch_queue_t)isEscapingClosureAtFileLocation, v7);
  swift_release();
  _Block_release(v7);
  if (!v9)
  {
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_25B290190();
    __swift_project_value_buffer(v16, (uint64_t)qword_26A4EB150);
    swift_bridgeObjectRetain();
    char v11 = sub_25B290160();
    os_log_type_t v12 = sub_25B2908A0();
    if (!os_log_type_enabled(v11, v12)) {
      goto LABEL_10;
    }
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t aBlock = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_25B288E98((uint64_t)v5, v4, &aBlock);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    uint64_t v15 = "registered for %s notifications";
    goto LABEL_9;
  }
  if (qword_26A4D98C0 != -1) {
    goto LABEL_13;
  }
  while (1)
  {
    uint64_t v10 = sub_25B290190();
    __swift_project_value_buffer(v10, (uint64_t)qword_26A4EB150);
    swift_bridgeObjectRetain();
    char v11 = sub_25B290160();
    os_log_type_t v12 = sub_25B290880();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t aBlock = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      swift_bridgeObjectRetain();
      sub_25B288E98((uint64_t)v5, v4, &aBlock);
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      uint64_t v15 = "Could not register for %s notifications";
LABEL_9:
      _os_log_impl(&dword_25B107000, v11, v12, v15, v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v14, -1, -1);
      MEMORY[0x261160890](v13, -1, -1);
    }
    else
    {
LABEL_10:

      swift_bridgeObjectRelease_n();
    }
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v2;
    *(void *)(v17 + 24) = &out_token;
    unint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_25B20A758;
    *(void *)(v4 + 24) = v17;
    uint64_t v24 = sub_25B117398;
    unint64_t v25 = v4;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v21 = 1107296256;
    unint64_t v22 = sub_25B10D184;
    char v23 = &block_descriptor_357;
    uint64_t v5 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)isEscapingClosureAtFileLocation, v5);
    _Block_release(v5);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_13:
    swift_once();
  }
  return result;
}

id *sub_25B1E7160()
{
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_temporaryFileURL;
  uint64_t v2 = sub_25B28FEA0();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25B1E725C()
{
  sub_25B1E7160();
  return swift_deallocClassInstance();
}

uint64_t sub_25B1E72B4()
{
  return type metadata accessor for NetworkMessenger(0);
}

uint64_t type metadata accessor for NetworkMessenger(uint64_t a1)
{
  return sub_25B180000(a1, (uint64_t *)&unk_26A4D93F8);
}

uint64_t sub_25B1E72DC()
{
  uint64_t result = sub_25B28FEA0();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

char *sub_25B1E73E4(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25B290080();
    uint64_t v8 = *(void *)(v7 - 8);
    uint32_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = (int *)type metadata accessor for Message();
    uint64_t v11 = v10[5];
    os_log_type_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v9(v12, v13, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
    }
    uint64_t v16 = v10[6];
    uint64_t v17 = &a1[v16];
    unint64_t v18 = &a2[v16];
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    uint64_t v20 = v10[7];
    uint64_t v21 = &a1[v20];
    unint64_t v22 = &a2[v20];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    *(void *)&a1[v10[8]] = *(void *)&a2[v10[8]];
    uint64_t v24 = v10[9];
    unint64_t v25 = (uint64_t *)&a1[v24];
    uint64_t v26 = (uint64_t *)&a2[v24];
    uint64_t v27 = *v26;
    unint64_t v28 = v26[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B114300(v27, v28);
    *unint64_t v25 = v27;
    v25[1] = v28;
    uint64_t v29 = *(int *)(a3 + 24);
    *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
    a1[v29] = a2[v29];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_25B1E7608(uint64_t a1)
{
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v4(a1, v2);
  uint64_t v5 = type metadata accessor for Message();
  uint64_t v6 = a1 + *(int *)(v5 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v2)) {
    v4(v6, v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B10DFF0(*(void *)(a1 + *(int *)(v5 + 36)), *(void *)(a1 + *(int *)(v5 + 36) + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B1E773C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint32_t v9 = (int *)type metadata accessor for Message();
  uint64_t v10 = v9[5];
  uint64_t v11 = (void *)(a1 + v10);
  os_log_type_t v12 = (const void *)(a2 + v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v10, 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v11, (uint64_t)v12, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = v9[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = v9[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  *(void *)(a1 + v9[8]) = *(void *)(a2 + v9[8]);
  uint64_t v22 = v9[9];
  uint64_t v23 = (uint64_t *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  unint64_t v26 = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25B114300(v25, v26);
  *uint64_t v23 = v25;
  v23[1] = v26;
  uint64_t v27 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_25B1E7910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25B290080();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v29 = (int *)type metadata accessor for Message();
  uint64_t v8 = v29[5];
  uint32_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = *(uint64_t (**)(void))(v6 + 48);
  int v30 = (void *)(a1 + v8);
  int v11 = v10();
  int v12 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v10)(v9, 1, v5);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v30, v9, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v30, 0, 1, v5);
      goto LABEL_9;
    }
    size_t v13 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200) - 8) + 64);
    uint64_t v14 = v30;
  }
  else
  {
    if (!v12)
    {
      v7((uint64_t)v30, (uint64_t)v9, v5);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v30, v5);
    size_t v13 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200) - 8) + 64);
    uint64_t v14 = v30;
  }
  memcpy(v14, v9, v13);
LABEL_9:
  uint64_t v15 = v29[6];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v29[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  void *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v29[8]) = *(void *)(a2 + v29[8]);
  uint64_t v21 = v29[9];
  uint64_t v22 = (uint64_t *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *v23;
  unint64_t v25 = v23[1];
  sub_25B114300(*v23, v25);
  uint64_t v26 = *v22;
  unint64_t v27 = v22[1];
  *uint64_t v22 = v24;
  v22[1] = v25;
  sub_25B10DFF0(v26, v27);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_25B1E7BBC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint32_t v9 = (int *)type metadata accessor for Message();
  uint64_t v10 = v9[5];
  int v11 = &a1[v10];
  int v12 = &a2[v10];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
  *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
  *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
  *(_OWORD *)&a1[v9[9]] = *(_OWORD *)&a2[v9[9]];
  uint64_t v14 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  a1[v14] = a2[v14];
  return a1;
}

uint64_t sub_25B1E7D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25B290080();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v29(a1, a2, v5);
  uint64_t v7 = (int *)type metadata accessor for Message();
  uint64_t v8 = v7[5];
  uint32_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = *(uint64_t (**)(void))(v6 + 48);
  int v30 = (void *)(a1 + v8);
  int v11 = v10();
  int v12 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v10)(v9, 1, v5);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v30, v9, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v30, 0, 1, v5);
      goto LABEL_9;
    }
    size_t v13 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200) - 8) + 64);
    uint64_t v14 = v30;
  }
  else
  {
    if (!v12)
    {
      v29((uint64_t)v30, (uint64_t)v9, v5);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v30, v5);
    size_t v13 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200) - 8) + 64);
    uint64_t v14 = v30;
  }
  memcpy(v14, v9, v13);
LABEL_9:
  uint64_t v15 = v7[6];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = v7[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v25 = v7[9];
  uint64_t v26 = *(void *)(a1 + v25);
  unint64_t v27 = *(void *)(a1 + v25 + 8);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  sub_25B10DFF0(v26, v27);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_25B1E7FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B1E7FE8);
}

uint64_t sub_25B1E7FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Message();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_25B1E80B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B1E80C8);
}

uint64_t sub_25B1E80C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Message();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for NetworkMessenger.PartialIncomingMessage(uint64_t a1)
{
  return sub_25B180000(a1, qword_26A4DAF20);
}

uint64_t sub_25B1E81A4()
{
  uint64_t result = type metadata accessor for Message();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25B1E8244(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_25B290000();
    unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_unknownObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_25B1E8328(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_25B290000();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_25B1E83A0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_25B290000();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_unknownObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_25B1E8438(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25B290000();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_25B1E84CC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_25B290000();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_25B1E8548(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25B290000();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_25B1E85D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B1E85E8);
}

uint64_t sub_25B1E85E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25B290000();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    int v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25B1E8698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B1E86AC);
}

void *sub_25B1E86AC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    void *result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25B290000();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for NetworkMessenger.ExpiringConnection(uint64_t a1)
{
  return sub_25B180000(a1, qword_26A4DAF38);
}

uint64_t sub_25B1E8774()
{
  uint64_t result = sub_25B290000();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_25B1E880C()
{
  unint64_t v1 = *(NSObject **)(v0 + 24);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_25B20A540;
  *(void *)(v2 + 24) = v0;
  v5[4] = sub_25B117398;
  v5[5] = v2;
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 1107296256;
  v5[2] = sub_25B10D184;
  void v5[3] = &block_descriptor_296;
  int v3 = _Block_copy(v5);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v1) {
    __break(1u);
  }
  return result;
}

NSObject *sub_25B1E8940()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (void *)v1[3];
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  uint64_t v7 = v6;
  LOBYTE(v6) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    dispatch_queue_t v41 = v7;
    if (qword_26A4D98C8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v8 = sub_25B290190();
  __swift_project_value_buffer(v8, (uint64_t)qword_26A4EB168);
  swift_retain_n();
  uint64_t v9 = sub_25B290160();
  os_log_type_t v10 = sub_25B2908A0();
  if (os_log_type_enabled(v9, v10))
  {
    int v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t aBlock = v12;
    *(_DWORD *)int v11 = 136446210;
    if (*((unsigned char *)v1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType)) {
      uint64_t v13 = 0xD000000000000011;
    }
    else {
      uint64_t v13 = 0x72656E657473696CLL;
    }
    if (*((unsigned char *)v1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType)) {
      unint64_t v14 = 0x800000025B29DB80;
    }
    else {
      unint64_t v14 = 0xE800000000000000;
    }
    uint64_t v42 = sub_25B288E98(v13, v14, &aBlock);
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v9, v10, "Starting %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v12, -1, -1);
    MEMORY[0x261160890](v11, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  int v15 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType);
  LOBYTE(aBlock) = *((unsigned char *)v1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType);
  uint64_t result = sub_25B208274((unsigned __int8 *)&aBlock);
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v18 = (void *)sub_25B290590();
    uint64_t v19 = (const char *)objc_msgSend(v18, sel_UTF8String);
    uint64_t result = v18;
    if (v19)
    {
      nw_parameters_t application_service = nw_advertise_descriptor_create_application_service(v19);
      nw_listener_t v21 = nw_listener_create(v17);
      if (v21)
      {
        uint64_t v22 = v21;
        swift_retain_n();
        swift_unknownObjectRetain_n();
        uint64_t v23 = sub_25B290160();
        os_log_type_t v24 = sub_25B2908A0();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = swift_slowAlloc();
          uint64_t v26 = swift_slowAlloc();
          uint64_t v40 = application_service;
          uint64_t v27 = v26;
          uint64_t aBlock = v26;
          *(_DWORD *)uint64_t v25 = 136446466;
          if (v15) {
            uint64_t v28 = 0xD000000000000011;
          }
          else {
            uint64_t v28 = 0x72656E657473694CLL;
          }
          if (v15) {
            unint64_t v29 = 0x800000025B29DB60;
          }
          else {
            unint64_t v29 = 0xE800000000000000;
          }
          uint64_t v42 = sub_25B288E98(v28, v29, &aBlock);
          sub_25B2909C0();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 12) = 2082;
          uint64_t v42 = (uint64_t)v22;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B30);
          uint64_t v30 = sub_25B290600();
          uint64_t v42 = sub_25B288E98(v30, v31, &aBlock);
          sub_25B2909C0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25B107000, v23, v24, "%{public}s created %{public}s", (uint8_t *)v25, 0x16u);
          swift_arrayDestroy();
          uint64_t v32 = v27;
          nw_parameters_t application_service = v40;
          MEMORY[0x261160890](v32, -1, -1);
          MEMORY[0x261160890](v25, -1, -1);
        }
        else
        {

          swift_unknownObjectRelease_n();
          swift_release_n();
        }
        nw_listener_set_advertise_descriptor(v22, application_service);
        uint64_t v33 = swift_allocObject();
        swift_weakInit();
        uint64_t v34 = swift_allocObject();
        *(void *)(v34 + 16) = v33;
        *(void *)(v34 + 24) = v22;
        uint64_t v47 = sub_25B20A5A8;
        uint64_t v48 = v34;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v44 = 1107296256;
        uint64_t v45 = sub_25B1F6138;
        unint64_t v46 = &block_descriptor_303;
        uint64_t v35 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        swift_release();
        nw_listener_set_new_connection_handler(v22, v35);
        _Block_release(v35);
        uint64_t v36 = swift_allocObject();
        *(void *)(v36 + 16) = v22;
        uint64_t v47 = sub_25B20A5E8;
        uint64_t v48 = v36;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v44 = 1107296256;
        uint64_t v45 = sub_25B1F7948;
        unint64_t v46 = &block_descriptor_309;
        uint64_t v37 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        swift_release();
        MEMORY[0x261160040](v22, v37);
        _Block_release(v37);
        v1[5] = v22;
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        nw_listener_set_queue(v22, v41);
        nw_listener_start(v22);
        int v38 = (void *)v1[6];
        if (v38)
        {
          v1[6] = 0;
          sub_25B2083B4(v38);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      return swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_25B1E9028(NSObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v121 = a2;
  uint64_t v7 = sub_25B290080();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v111 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB000);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (nw_connection_t *)((char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v114 = (uint64_t)&v108 - v14;
  uint64_t v15 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  uint64_t v16 = *(void *)(v15 - 8);
  BOOL v117 = v15;
  uint64_t v118 = v16;
  MEMORY[0x270FA5388](v15);
  char v112 = (nw_connection_t *)((char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_25B290410();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  nw_listener_t v21 = (Class *)((char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  Class isa = v4[3].isa;
  *nw_listener_t v21 = isa;
  (*(void (**)(Class *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x263F8F0E0], v18);
  uint64_t v23 = isa;
  LOBYTE(isa) = sub_25B290440();
  uint64_t v25 = *(void (**)(Class *, uint64_t))(v19 + 8);
  int v24 = v19 + 8;
  v25(v21, v18);
  if ((isa & 1) == 0)
  {
    __break(1u);
LABEL_49:
    swift_once();
    goto LABEL_5;
  }
  int v24 = *((unsigned __int8 *)&v4->isa + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType);
  if (v24 == 1 && !a3)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v109 = v8;
  uint64_t v110 = v7;
  uint64_t v116 = v13;
  if (qword_26A4D98C8 != -1) {
    goto LABEL_49;
  }
LABEL_5:
  uint64_t v26 = sub_25B290190();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_26A4EB168);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_unknownObjectRetain_n();
  uint64_t v28 = sub_25B290160();
  unint64_t v29 = v4;
  os_log_type_t v30 = sub_25B2908A0();
  BOOL v31 = os_log_type_enabled(v28, v30);
  uint64_t v120 = v27;
  if (!v31)
  {

    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
    swift_release_n();
    uint64_t v39 = v4;
    if (v24) {
      goto LABEL_15;
    }
LABEL_17:
    LOBYTE(aBlock) = v24;
    uint64_t v40 = sub_25B2085C4((char *)&aBlock);
    if (!v40)
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    dispatch_queue_t v41 = v40;
    uint64_t v42 = (void *)swift_slowAlloc();
    *uint64_t v42 = 0;
    v42[1] = 0;
    nw_endpoint_set_agent_identifier();
    uint64_t v119 = v41;
    uint64_t v115 = v42;
    if (a3)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v43 = sub_25B290160();
      os_log_type_t v44 = sub_25B2908A0();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        uint64_t aBlock = v46;
        *(_DWORD *)uint64_t v45 = 136315138;
        dispatch_queue_t v41 = v119;
        swift_bridgeObjectRetain();
        v122[0] = sub_25B288E98(v121, a3, &aBlock);
        sub_25B2909C0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25B107000, v43, v44, "Using overrideDeviceID %s", v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261160890](v46, -1, -1);
        MEMORY[0x261160890](v45, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      p_uint64_t aBlock = nw_connection_create(a1, v41);
      unint64_t v49 = a3;
    }
    else
    {
      p_uint64_t aBlock = nw_connection_create(a1, v41);
      swift_getObjectType();
      uint64_t v121 = sub_25B1F734C();
      unint64_t v49 = v48;
    }
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_25B290160();
    os_log_type_t v51 = sub_25B2908A0();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      uint64_t v108 = swift_slowAlloc();
      v122[0] = v108;
      *(_DWORD *)uint64_t v52 = 136446722;
      uint64_t aBlock = (uint64_t)p_aBlock;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v53 = sub_25B290600();
      uint64_t v113 = p_aBlock;
      uint64_t aBlock = sub_25B288E98(v53, v54, v122);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2082;
      uint64_t aBlock = (uint64_t)a1;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB050);
      uint64_t v55 = sub_25B290600();
      uint64_t aBlock = sub_25B288E98(v55, v56, v122);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 22) = 2082;
      uint64_t aBlock = v121;
      unint64_t v125 = v49;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E80);
      uint64_t v57 = sub_25B290600();
      uint64_t aBlock = sub_25B288E98(v57, v58, v122);
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      p_uint64_t aBlock = v113;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v50, v51, "New outgoing connection created %{public}s from %{public}s; DeviceID: %{public}s",
        (uint8_t *)v52,
        0x20u);
      uint64_t v59 = v108;
      swift_arrayDestroy();
      MEMORY[0x261160890](v59, -1, -1);
      MEMORY[0x261160890](v52, -1, -1);

      if (v49) {
        goto LABEL_26;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();
      if (v49)
      {
LABEL_26:
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRetain_n();
        unint64_t v60 = sub_25B290160();
        os_log_type_t v61 = sub_25B2908A0();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = swift_slowAlloc();
          uint64_t v63 = swift_slowAlloc();
          uint64_t aBlock = v63;
          *(_DWORD *)uint64_t v62 = 136446466;
          swift_bridgeObjectRetain();
          v122[0] = sub_25B288E98(v121, v49, &aBlock);
          sub_25B2909C0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v62 + 12) = 2082;
          v122[0] = (uint64_t)p_aBlock;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
          uint64_t v64 = sub_25B290600();
          v122[0] = sub_25B288E98(v64, v65, &aBlock);
          sub_25B2909C0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25B107000, v60, v61, "DeviceID %{public}s will be used for connection: %{public}s", (uint8_t *)v62, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x261160890](v63, -1, -1);
          MEMORY[0x261160890](v62, -1, -1);
        }
        else
        {

          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        uint64_t v77 = v117;
        uint64_t v78 = v118;
        swift_beginAccess();
        Class v79 = v39[7].isa;
        if (!*((void *)v79 + 2))
        {
          uint64_t isEscapingClosureAtFileLocation = *(void *)(v78 + 56);
          uint64_t v83 = v114;
          ((void (*)(uint64_t, uint64_t, uint64_t, NSObject *))isEscapingClosureAtFileLocation)(v114, 1, 1, v77);
LABEL_38:
          sub_25B116DE0(v83, &qword_26A4DB000);
          swift_endAccess();
LABEL_46:
          BOOL v100 = v116;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          sub_25B28FFD0();
          *BOOL v100 = p_aBlock;
          ((void (*)(nw_connection_t *, void, uint64_t, NSObject *))isEscapingClosureAtFileLocation)(v100, 0, 1, v77);
          swift_beginAccess();
          uint64_t v101 = v121;
          sub_25B20EEAC((uint64_t)v100, v121, v49);
          swift_endAccess();
          Class v102 = v39[14].isa;
          uint64_t id = nw_connection_get_id();
          uint64_t v104 = *((void *)v102 + 2);
          uint64_t v105 = (void *)swift_allocObject();
          v105[2] = v101;
          v105[3] = v49;
          v105[4] = id;
          v105[5] = v102;
          uint64_t v106 = swift_allocObject();
          *(void *)(v106 + 16) = sub_25B20AB44;
          *(void *)(v106 + 24) = v105;
          unint64_t v128 = sub_25B117398;
          uint64_t v129 = v106;
          uint64_t aBlock = MEMORY[0x263EF8330];
          unint64_t v125 = 1107296256;
          uint64_t v126 = sub_25B10D184;
          uint64_t v127 = &block_descriptor_234;
          uint64_t v107 = _Block_copy(&aBlock);
          uint64_t v94 = p_aBlock;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_release();
          dispatch_sync(v104, v107);
          _Block_release(v107);
          LOBYTE(v104) = swift_isEscapingClosureAtFileLocation();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          if ((v104 & 1) == 0)
          {
LABEL_47:
            sub_25B208878(v94);
            MEMORY[0x261160890](v115, -1, -1);
            swift_unknownObjectRelease();
            return;
          }
          __break(1u);
          goto LABEL_51;
        }
        swift_bridgeObjectRetain();
        unint64_t v80 = sub_25B18A634(v121, v49);
        if (v81)
        {
          uint64_t v82 = *((void *)v79 + 7) + *(void *)(v78 + 72) * v80;
          uint64_t v83 = v114;
          sub_25B207948(v82, v114, type metadata accessor for NetworkMessenger.ExpiringConnection);
          uint64_t isEscapingClosureAtFileLocation = *(void *)(v78 + 56);
          ((void (*)(uint64_t, void, uint64_t, NSObject *))isEscapingClosureAtFileLocation)(v83, 0, 1, v77);
        }
        else
        {
          uint64_t isEscapingClosureAtFileLocation = *(void *)(v78 + 56);
          uint64_t v83 = v114;
          ((void (*)(uint64_t, uint64_t, uint64_t, NSObject *))isEscapingClosureAtFileLocation)(v114, 1, 1, v77);
        }
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, NSObject *))(v78 + 48))(v83, 1, v77) == 1) {
          goto LABEL_38;
        }
        sub_25B20913C(v83, (uint64_t)v112, type metadata accessor for NetworkMessenger.ExpiringConnection);
        swift_endAccess();
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRetain_n();
        unint64_t v85 = sub_25B290160();
        os_log_type_t v86 = sub_25B2908A0();
        if (os_log_type_enabled(v85, v86))
        {
          uint64_t v87 = swift_slowAlloc();
          uint64_t v120 = swift_slowAlloc();
          uint64_t aBlock = v120;
          *(_DWORD *)uint64_t v87 = 136446466;
          v122[0] = (uint64_t)p_aBlock;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
          uint64_t v113 = v39;
          uint64_t v88 = sub_25B290600();
          v122[0] = sub_25B288E98(v88, v89, &aBlock);
          sub_25B2909C0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v87 + 12) = 2082;
          swift_bridgeObjectRetain();
          v122[0] = sub_25B288E98(v121, v49, &aBlock);
          uint64_t v39 = v113;
          sub_25B2909C0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_25B107000, v85, v86, "Canceling existing connection %{public}s for DeviceID %{public}s", (uint8_t *)v87, 0x16u);
          uint64_t v90 = v120;
          swift_arrayDestroy();
          MEMORY[0x261160890](v90, -1, -1);
          uint64_t v91 = v87;
          uint64_t v77 = v117;
          MEMORY[0x261160890](v91, -1, -1);

LABEL_45:
          uint64_t v99 = v112;
          nw_connection_cancel(*v112);
          sub_25B207870((uint64_t)v99, type metadata accessor for NetworkMessenger.ExpiringConnection);
          goto LABEL_46;
        }
LABEL_44:

        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
        goto LABEL_45;
      }
    }
    uint64_t v66 = v111;
    sub_25B290070();
    uint64_t v67 = sub_25B290020();
    unint64_t v49 = v68;
    (*(void (**)(char *, uint64_t))(v109 + 8))(v66, v110);
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v69 = sub_25B290160();
    os_log_type_t v70 = sub_25B2908A0();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      uint64_t v113 = v39;
      uint64_t v73 = v72;
      uint64_t aBlock = v72;
      *(_DWORD *)uint64_t v71 = 136446466;
      v122[0] = (uint64_t)p_aBlock;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v74 = sub_25B290600();
      v122[0] = sub_25B288E98(v74, v75, &aBlock);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v71 + 12) = 2082;
      swift_bridgeObjectRetain();
      v122[0] = sub_25B288E98(v67, v49, &aBlock);
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25B107000, v69, v70, "Unable to get DeviceID from connection: %{public}s; Using uuidString %{public}s instead",
        (uint8_t *)v71,
        0x16u);
      swift_arrayDestroy();
      uint64_t v76 = v73;
      uint64_t v39 = v113;
      MEMORY[0x261160890](v76, -1, -1);
      MEMORY[0x261160890](v71, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease_n();
    }
    char v93 = v116;
    uint64_t v92 = v117;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B28FFD0();
    *char v93 = p_aBlock;
    (*(void (**)(nw_connection_t *, void, uint64_t, NSObject *))(v118 + 56))(v93, 0, 1, v92);
    uint64_t v94 = p_aBlock;
    p_uint64_t aBlock = (nw_connection_t)&aBlock;
    swift_beginAccess();
    sub_25B20EEAC((uint64_t)v93, v67, v49);
    swift_endAccess();
    uint64_t v95 = (NSObject **)v39[14].isa;
    uint64_t v96 = nw_connection_get_id();
    uint64_t v77 = v95[2];
    unint64_t v85 = swift_allocObject();
    v85[2].Class isa = (Class)v67;
    v85[3].Class isa = (Class)v49;
    v85[4].Class isa = (Class)v96;
    v85[5].Class isa = (Class)v95;
    uint64_t v97 = swift_allocObject();
    *(void *)(v97 + 16) = sub_25B209B14;
    *(void *)(v97 + 24) = v85;
    unint64_t v128 = sub_25B117398;
    uint64_t v129 = v97;
    uint64_t aBlock = MEMORY[0x263EF8330];
    unint64_t v125 = 1107296256;
    uint64_t v126 = sub_25B10D184;
    uint64_t v127 = &block_descriptor_223;
    uint64_t v98 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v77, v98);
    _Block_release(v98);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      goto LABEL_47;
    }
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v32 = swift_slowAlloc();
  uint64_t v33 = swift_slowAlloc();
  uint64_t v123 = v33;
  *(_DWORD *)uint64_t v32 = 136315650;
  if (v24) {
    uint64_t v34 = 0x73756E696D726574;
  }
  else {
    uint64_t v34 = 0x647261646E617473;
  }
  uint64_t aBlock = sub_25B288E98(v34, 0xE800000000000000, &v123);
  sub_25B2909C0();
  uint64_t v113 = v29;
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v32 + 12) = 2082;
  uint64_t aBlock = (uint64_t)a1;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB050);
  uint64_t v35 = sub_25B290600();
  uint64_t aBlock = sub_25B288E98(v35, v36, &v123);
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v32 + 22) = 2080;
  unint64_t v37 = 0xE000000000000000;
  if (a3)
  {
    uint64_t aBlock = 0;
    unint64_t v125 = 0xE000000000000000;
    sub_25B290AA0();
    swift_bridgeObjectRelease();
    uint64_t aBlock = 0xD000000000000012;
    unint64_t v125 = 0x800000025B29DA30;
    v122[0] = v121;
    v122[1] = a3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E80);
    sub_25B290600();
    sub_25B290650();
    swift_bridgeObjectRelease();
    uint64_t v38 = aBlock;
    unint64_t v37 = v125;
  }
  else
  {
    uint64_t v38 = 0;
  }
  uint64_t aBlock = sub_25B288E98(v38, v37, &v123);
  sub_25B2909C0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_25B107000, v28, v30, "Creating %s connection from %{public}s%s", (uint8_t *)v32, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x261160890](v33, -1, -1);
  MEMORY[0x261160890](v32, -1, -1);

  uint64_t v39 = v113;
  if (!v24) {
    goto LABEL_17;
  }
LABEL_15:
  if (a3)
  {
    sub_25B1E626C(v121, a3);
    goto LABEL_17;
  }
LABEL_53:
  __break(1u);
}

uint64_t sub_25B1EA464(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25B290410();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v3 + 24);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F8F0E0], v10);
  id v15 = v14;
  LOBYTE(v14) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType) == 1)
    {
      if (qword_26A4D98C8 == -1) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  swift_once();
LABEL_4:
  uint64_t v16 = sub_25B290190();
  __swift_project_value_buffer(v16, (uint64_t)qword_26A4EB168);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_25B290160();
  os_log_type_t v18 = sub_25B2908A0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = v6;
    uint64_t v36 = v7;
    uint64_t v21 = v20;
    uint64_t v38 = v20;
    *(_DWORD *)uint64_t v19 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_25B288E98(a1, a2, &v38);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v17, v18, "Creating terminus connection to %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v21;
    uint64_t v6 = v35;
    uint64_t v7 = v36;
    MEMORY[0x261160890](v22, -1, -1);
    MEMORY[0x261160890](v19, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_25B290070();
  uint64_t v38 = sub_25B290060();
  char v39 = v23;
  char v40 = v24;
  char v41 = v25;
  char v42 = v26;
  char v43 = v27;
  char v44 = v28;
  char v45 = v29;
  char v46 = v30;
  sub_25B290610();
  nw_parameters_t application_service = nw_endpoint_create_application_service();
  swift_release();
  sub_25B1E9028(application_service, a1, a2);
  uint64_t v33 = v32;
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v33;
}

uint64_t sub_25B1EA8A4(uint64_t a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 24);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_25B209A94;
  *(void *)(v5 + 24) = v4;
  v8[4] = sub_25B117398;
  v8[5] = v5;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_25B10D184;
  v8[3] = &block_descriptor_213;
  uint64_t v6 = _Block_copy(v8);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B1EAA0C(uint64_t a1, NSObject *a2)
{
  return sub_25B1EAA34(a2);
}

uint64_t sub_25B1EAA34(NSObject *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v43[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_25B290410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v43[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(void **)(v3 + 24);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  id v13 = v12;
  LOBYTE(v12) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_11;
  }
  uint64_t v14 = swift_beginAccess();
  MEMORY[0x270FA5388](v14);
  *(void *)&v43[-16] = a1;
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v46 = sub_25B208C04(v15, (uint64_t (*)(void, void, char *))sub_25B2090B4, (uint64_t)&v43[-32]);
  uint64_t v17 = v16;
  int v19 = v18;
  int v20 = ~(_BYTE)v18;
  swift_bridgeObjectRelease();
  if (v20)
  {
    swift_beginAccess();
    uint64_t v21 = v46;
    sub_25B209130(v46, v17, v19 & 1);
    sub_25B206F48((uint64_t)v7, v21, v17);
    swift_endAccess();
    sub_25B209118(v21, v17, v19);
    sub_25B207870((uint64_t)v7, type metadata accessor for NetworkMessenger.ExpiringConnection);
    swift_bridgeObjectRelease();
  }
  int v44 = v19;
  uint64_t v45 = v17;
  sub_25B1F7950();
  uint64_t v22 = *(void *)(v3 + 112);
  uint64_t id = nw_connection_get_id();
  uint64_t v2 = *(NSObject **)(v22 + 16);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v22;
  *(void *)(v24 + 24) = id;
  uint64_t v7 = (unsigned char *)swift_allocObject();
  *((void *)v7 + 2) = sub_25B209100;
  *((void *)v7 + 3) = v24;
  uint64_t v52 = sub_25B117398;
  uint64_t v53 = v7;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v49 = 1107296256;
  uint64_t v50 = sub_25B10D184;
  os_log_type_t v51 = &block_descriptor_172;
  char v25 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v2, v25);
  _Block_release(v25);
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v25) {
    goto LABEL_16;
  }
  swift_getObjectType();
  uint64_t v26 = sub_25B1F734C();
  if (v27)
  {
    uint64_t v2 = v26;
    uint64_t v7 = v27;
  }
  else if (*(unsigned char *)(v3 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType) == 1)
  {
    char v28 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_terminusRemoteDeviceIDLock);
    char v29 = (uint64_t *)&v28[4];
    char v30 = v28 + 8;
    os_unfair_lock_lock(v28 + 8);
    sub_25B1E60EC(v29, &aBlock);
    os_unfair_lock_unlock(v30);
    uint64_t v2 = aBlock;
    uint64_t v7 = (unsigned char *)v49;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v7 = 0;
  }
  if (qword_26A4D98C8 != -1) {
    goto LABEL_17;
  }
LABEL_11:
  uint64_t v31 = sub_25B290190();
  __swift_project_value_buffer(v31, (uint64_t)qword_26A4EB168);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v32 = sub_25B290160();
  os_log_type_t v33 = sub_25B2908A0();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v47 = v35;
    uint64_t aBlock = (uint64_t)a1;
    *(_DWORD *)uint64_t v34 = 136446466;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v36 = sub_25B290600();
    uint64_t aBlock = sub_25B288E98(v36, v37, &v47);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2082;
    uint64_t aBlock = (uint64_t)v2;
    uint64_t v49 = (uint64_t)v7;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E80);
    uint64_t v38 = sub_25B290600();
    uint64_t aBlock = sub_25B288E98(v38, v39, &v47);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v32, v33, "Canceling connection %{public}s for deviceID: %{public}s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v35, -1, -1);
    MEMORY[0x261160890](v34, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
  }
  uint64_t v40 = v45;
  unsigned __int8 v41 = v44;
  nw_connection_cancel(a1);
  return sub_25B209118(v46, v40, v41);
}

uint64_t sub_25B1EB074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB000);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 56);
  if (*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_25B18A634(a2, a3);
    if (v13)
    {
      unint64_t v14 = v12;
      uint64_t v15 = *(void *)(v11 + 56);
      uint64_t v16 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
      uint64_t v17 = *(void *)(v16 - 8);
      sub_25B207948(v15 + *(void *)(v17 + 72) * v14, (uint64_t)v10, type metadata accessor for NetworkMessenger.ExpiringConnection);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
    }
    else
    {
      uint64_t v16 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
  }
  type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v10, 1, v16))
  {
    sub_25B116DE0((uint64_t)v10, &qword_26A4DB000);
    uint64_t result = swift_endAccess();
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = *v10;
    swift_unknownObjectRetain();
    sub_25B116DE0((uint64_t)v10, &qword_26A4DB000);
    uint64_t result = swift_endAccess();
  }
  *a4 = v19;
  return result;
}

uint64_t sub_25B1EB308(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v49 = a5;
  uint64_t v50 = a6;
  uint64_t v47 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v46 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Message();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v44 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v39 - v16;
  int v45 = *a4;
  if (qword_26A4D98C8 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_25B290190();
  __swift_project_value_buffer(v18, (uint64_t)qword_26A4EB168);
  sub_25B207948(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for Message);
  uint64_t v19 = sub_25B290160();
  os_log_type_t v20 = sub_25B2908A0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v43 = v11;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v42 = v10;
    uint64_t v24 = v23;
    uint64_t v52 = v23;
    uint64_t v40 = v13;
    uint64_t v41 = a2;
    *(_DWORD *)uint64_t v22 = 136446210;
    uint64_t v25 = Message.description.getter();
    uint64_t v51 = sub_25B288E98(v25, v26, &v52);
    uint64_t v13 = v40;
    a2 = v41;
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B207870((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for Message);
    _os_log_impl(&dword_25B107000, v19, v20, "Queuing message: %{public}s", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v27 = v24;
    uint64_t v10 = v42;
    MEMORY[0x261160890](v27, -1, -1);
    char v28 = v22;
    uint64_t v11 = v43;
    MEMORY[0x261160890](v28, -1, -1);
  }
  else
  {
    sub_25B207870((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for Message);
  }

  uint64_t v29 = v48;
  uint64_t v43 = *(void *)(v48 + 24);
  uint64_t v30 = v44;
  sub_25B207948(a1, v44, (uint64_t (*)(void))type metadata accessor for Message);
  uint64_t v31 = v46;
  sub_25B187628(a2, v46, &qword_26A4D9160);
  unint64_t v32 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v33 = (v14 + *(unsigned __int8 *)(v10 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v34 = (void *)swift_allocObject();
  uint64_t v36 = v49;
  uint64_t v35 = v50;
  v34[2] = v29;
  v34[3] = v36;
  v34[4] = v35;
  sub_25B20913C(v30, (uint64_t)v34 + v32, (uint64_t (*)(void))type metadata accessor for Message);
  sub_25B187574(v31, (uint64_t)v34 + v33, &qword_26A4D9160);
  unint64_t v37 = (char *)v34 + ((v11 + v33 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v37 = v47;
  v37[8] = v45;
  swift_retain();
  sub_25B207E2C(v36);
  swift_unknownObjectRetain();
  sub_25B1B7434(0xD000000000000018, 0x800000025B29D890, v43, (uint64_t)sub_25B2094E0, (uint64_t)v34, 0.0);
  return swift_release();
}

uint64_t sub_25B1EB770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v48 = a8;
  uint64_t v39 = a4;
  uint64_t v40 = a7;
  uint64_t v43 = a2;
  uint64_t v44 = a5;
  uint64_t v41 = a3;
  uint64_t v42 = a1;
  int v46 = a9;
  uint64_t v47 = sub_25B290410();
  uint64_t v45 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v12 = (uint64_t *)((char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Message();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v17 - 8);
  os_log_type_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B207948(a6, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for Message);
  sub_25B187628(v40, (uint64_t)v16, &qword_26A4D9160);
  unint64_t v21 = (*(unsigned __int8 *)(v18 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v22 = (v19 + *(unsigned __int8 *)(v14 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v23 = (v15 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = (void *)swift_allocObject();
  void v24[2] = a4;
  uint64_t v25 = v43;
  uint64_t v27 = v41;
  uint64_t v26 = v42;
  v24[3] = v44;
  v24[4] = v26;
  v24[5] = v25;
  v24[6] = v27;
  sub_25B20913C((uint64_t)v20, (uint64_t)v24 + v21, (uint64_t (*)(void))type metadata accessor for Message);
  sub_25B187574((uint64_t)v16, (uint64_t)v24 + v22, &qword_26A4D9160);
  char v28 = (char *)v24 + v23;
  uint64_t v29 = v47;
  *(void *)char v28 = v48;
  v28[8] = v46;
  uint64_t v30 = *(void **)(v27 + 24);
  *uint64_t v12 = v30;
  uint64_t v31 = v45;
  (*(void (**)(void *, void, uint64_t))(v45 + 104))(v12, *MEMORY[0x263F8F0E0], v29);
  sub_25B207E2C(v39);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  id v32 = v30;
  LOBYTE(v30) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v31 + 8))(v12, v29);
  if (v30)
  {
    sub_25B10FF48(v27 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency, (uint64_t)v49);
    uint64_t v34 = v50;
    uint64_t v35 = v51;
    __swift_project_boxed_opaque_existential_1(v49, v50);
    uint64_t v36 = (void *)swift_allocObject();
    v36[2] = v27;
    v36[3] = sub_25B2098A4;
    v36[4] = v24;
    unint64_t v37 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v35 + 40);
    swift_retain();
    swift_retain();
    v37(sub_25B20ACCC, v36, v34, v35);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_25B1EBB44(void *a1, void (*a2)(void *, uint64_t), uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, NSObject *a9, unsigned __int8 a10)
{
  if (!a1)
  {
    unsigned __int8 v29 = a10;
    uint64_t v25 = (void *)swift_allocObject();
    v25[2] = a2;
    v25[3] = a3;
    v25[4] = a4;
    v25[5] = a5;
    sub_25B207E2C((uint64_t)a2);
    swift_retain();
    sub_25B1EBDF0(a7, a8, a9, &v29, (uint64_t)sub_25B209A20, (uint64_t)v25);
    swift_release();
    return;
  }
  id v14 = a1;
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_25B290190();
  __swift_project_value_buffer(v15, (uint64_t)qword_26A4EB150);
  id v16 = a1;
  id v17 = a1;
  uint64_t v18 = sub_25B290160();
  os_log_type_t v19 = sub_25B2908A0();
  if (os_log_type_enabled(v18, v19))
  {
    os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
    unint64_t v21 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v20 = 138543362;
    id v22 = a1;
    uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
    sub_25B2909C0();
    *unint64_t v21 = v28;

    _os_log_impl(&dword_25B107000, v18, v19, "Cannot send message because prerequisites are not met: %{public}@", v20, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
    swift_arrayDestroy();
    MEMORY[0x261160890](v21, -1, -1);
    MEMORY[0x261160890](v20, -1, -1);

    if (!a2) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }

  if (a2)
  {
LABEL_9:
    id v26 = a1;
    a2(a1, 1);
  }
LABEL_10:
  a4();
}

uint64_t sub_25B1EBDF0(uint64_t a1, uint64_t a2, NSObject *a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v178 = a5;
  uint64_t v179 = a6;
  uint64_t v159 = a3;
  v167 = (char *)a2;
  uint64_t v180 = a1;
  uint64_t v154 = type metadata accessor for NetworkSyncHeader(0);
  MEMORY[0x270FA5388](v154);
  uint64_t v160 = (uint64_t)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25B290320();
  unint64_t v174 = *(void *)(v9 - 8);
  uint64_t v175 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v172 = (uint64_t)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25B290360();
  uint64_t v171 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v173 = (unint64_t)&v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  uint64_t v155 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v158 = (uint64_t)&v152 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v157 = (uint64_t)&v152 - v17;
  uint64_t v156 = v18;
  MEMORY[0x270FA5388](v16);
  os_log_type_t v20 = (char *)&v152 - v19;
  uint64_t v21 = sub_25B28FEA0();
  uint64_t v166 = *(void *)(v21 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v152 = (char *)&v152 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v163 = (char *)&v152 - v25;
  MEMORY[0x270FA5388](v24);
  v165 = (char *)&v152 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v27 - 8);
  unsigned __int8 v29 = (char *)&v152 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_25B290080();
  uint64_t v176 = *(void *)(v182 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v182);
  unint64_t v162 = (char *)&v152 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v161 = (char *)&v152 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v169 = (char *)&v152 - v34;
  uint64_t v164 = type metadata accessor for Message();
  MEMORY[0x270FA5388](v164);
  uint64_t v36 = (char *)&v152 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_25B290410();
  uint64_t v38 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v40 = (char **)((char *)&v152 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v153 = *a4;
  uint64_t v41 = *(void **)(v6 + 24);
  *uint64_t v40 = v41;
  (*(void (**)(void *, void, uint64_t))(v38 + 104))(v40, *MEMORY[0x263F8F0E0], v37);
  id v42 = v41;
  LOBYTE(v41) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v38 + 8))(v40, v37);
  if (v41)
  {
    uint64_t v168 = v21;
    uint64_t v170 = v11;
    uint64_t v181 = v6;
    if (qword_26A4D98C8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v43 = sub_25B290190();
  uint64_t v44 = __swift_project_value_buffer(v43, (uint64_t)qword_26A4EB168);
  sub_25B207948(v180, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for Message);
  uint64_t v177 = v44;
  uint64_t v45 = sub_25B290160();
  os_log_type_t v46 = sub_25B290870();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t aBlock = v48;
    *(_DWORD *)uint64_t v47 = 136446210;
    sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
    uint64_t v49 = sub_25B290DB0();
    uint64_t v183 = sub_25B288E98(v49, v50, &aBlock);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B207870((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for Message);
    _os_log_impl(&dword_25B107000, v45, v46, "sending message with ID %{public}s", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v48, -1, -1);
    MEMORY[0x261160890](v47, -1, -1);
  }
  else
  {
    sub_25B207870((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for Message);
  }

  uint64_t v51 = *(void *)(v181 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency + 24);
  uint64_t v52 = *(void *)(v181 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency + 32);
  uint64_t v53 = __swift_project_boxed_opaque_existential_1((void *)(v181 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency), v51);
  uint64_t v54 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v53);
  unint64_t v56 = (char *)&v152 - v55;
  (*(void (**)(char *))(v54 + 16))((char *)&v152 - v55);
  uint64_t v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 24))(v51, v52);
  unint64_t v59 = v58;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v51);
  if (!v59)
  {
    uint64_t v66 = sub_25B290160();
    os_log_type_t v67 = sub_25B290880();
    BOOL v68 = os_log_type_enabled(v66, v67);
    uint64_t v69 = v178;
    uint64_t v70 = v171;
    uint64_t v71 = v175;
    if (v68)
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v72 = 0;
      _os_log_impl(&dword_25B107000, v66, v67, "Cannot send messages before we have a local device ID", v72, 2u);
      MEMORY[0x261160890](v72, -1, -1);
    }

    uint64_t v73 = swift_allocObject();
    uint64_t v74 = v179;
    *(void *)(v73 + 16) = v69;
    *(void *)(v73 + 24) = v74;
    v188 = sub_25B20AB40;
    uint64_t v189 = v73;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v185 = 1107296256;
    v186 = sub_25B10F584;
    v187 = &block_descriptor_59;
    unint64_t v75 = _Block_copy(&aBlock);
    swift_retain();
    unint64_t v76 = v173;
    sub_25B290340();
    uint64_t v183 = MEMORY[0x263F8EE78];
    sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1A8F44();
    uint64_t v77 = v172;
    sub_25B290A00();
    MEMORY[0x26115F250](0, v76, v77, v75);
    _Block_release(v75);
    (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v77, v71);
    goto LABEL_17;
  }
  sub_25B290010();
  uint64_t v60 = v176;
  uint64_t v61 = v182;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v29, 1, v182) == 1)
  {
    sub_25B116DE0((uint64_t)v29, &qword_26B33F200);
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_25B290160();
    os_log_type_t v63 = sub_25B290880();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      uint64_t aBlock = v65;
      *(_DWORD *)uint64_t v64 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v183 = sub_25B288E98(v57, v59, &aBlock);
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25B107000, v62, v63, "Cannot create UUID from sender device ID: %{public}s", v64, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v65, -1, -1);
      MEMORY[0x261160890](v64, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v82 = v178;
    uint64_t v70 = v171;
    unint64_t v84 = v174;
    uint64_t v83 = v175;
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = v82;
    *(void *)(v85 + 24) = v179;
    v188 = sub_25B20AB40;
    uint64_t v189 = v85;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v185 = 1107296256;
    v186 = sub_25B10F584;
    v187 = &block_descriptor_65;
    os_log_type_t v86 = _Block_copy(&aBlock);
    swift_retain();
    unint64_t v76 = v173;
    sub_25B290340();
    uint64_t v183 = MEMORY[0x263F8EE78];
    sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1A8F44();
    uint64_t v87 = v172;
    sub_25B290A00();
    MEMORY[0x26115F250](0, v76, v87, v86);
    _Block_release(v86);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v87, v83);
LABEL_17:
    (*(void (**)(unint64_t, uint64_t))(v70 + 8))(v76, v170);
    return swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v78 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
  v78(v169, v29, v61);
  sub_25B187628((uint64_t)v167, (uint64_t)v20, &qword_26A4D9160);
  uint64_t v79 = v166;
  unint64_t v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48);
  uint64_t v81 = v168;
  if (v80(v20, 1, v168) == 1)
  {
    sub_25B116DE0((uint64_t)v20, &qword_26A4D9160);
  }
  else
  {
    uint64_t v88 = v165;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v165, v20, v81);
    id v89 = objc_msgSend(self, sel_defaultManager);
    sub_25B28FE70();
    uint64_t v90 = (void *)sub_25B290590();
    swift_bridgeObjectRelease();
    unsigned __int8 v91 = objc_msgSend(v89, sel_fileExistsAtPath_, v90);

    if ((v91 & 1) == 0)
    {
      uint64_t v97 = v163;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v163, v88, v81);
      uint64_t v98 = sub_25B290160();
      os_log_type_t v99 = sub_25B290890();
      if (os_log_type_enabled(v98, v99))
      {
        BOOL v100 = v97;
        uint64_t v101 = (uint8_t *)swift_slowAlloc();
        uint64_t v102 = swift_slowAlloc();
        uint64_t aBlock = v102;
        *(_DWORD *)uint64_t v101 = 136446210;
        uint64_t v103 = sub_25B28FE70();
        uint64_t v183 = sub_25B288E98(v103, v104, &aBlock);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        uint64_t v105 = *(void (**)(char *, uint64_t))(v79 + 8);
        v105(v100, v81);
        _os_log_impl(&dword_25B107000, v98, v99, "File at given url doesn't exist: %{public}s", v101, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261160890](v102, -1, -1);
        MEMORY[0x261160890](v101, -1, -1);
      }
      else
      {
        uint64_t v105 = *(void (**)(char *, uint64_t))(v79 + 8);
        v105(v97, v81);
      }

      uint64_t v106 = v171;
      uint64_t v107 = swift_allocObject();
      uint64_t v108 = v179;
      *(void *)(v107 + 16) = v178;
      *(void *)(v107 + 24) = v108;
      v188 = (uint64_t (*)())sub_25B2078D0;
      uint64_t v189 = v107;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v185 = 1107296256;
      v186 = sub_25B10F584;
      v187 = &block_descriptor_80;
      uint64_t v109 = _Block_copy(&aBlock);
      swift_retain();
      unint64_t v110 = v173;
      sub_25B290340();
      uint64_t v183 = MEMORY[0x263F8EE78];
      sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
      sub_25B1A8F44();
      uint64_t v111 = v172;
      uint64_t v112 = v175;
      sub_25B290A00();
      MEMORY[0x26115F250](0, v110, v111, v109);
      _Block_release(v109);
      (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v111, v112);
      (*(void (**)(unint64_t, uint64_t))(v106 + 8))(v110, v170);
      v105(v165, v168);
      (*(void (**)(char *, uint64_t))(v176 + 8))(v169, v182);
      return swift_release();
    }
    (*(void (**)(char *, uint64_t))(v79 + 8))(v88, v81);
  }
  v187 = (void *)v164;
  v188 = (uint64_t (*)())sub_25B20A4B0((unint64_t *)&unk_26A4DAC70, (void (*)(uint64_t))type metadata accessor for Message);
  uint64_t v92 = __swift_allocate_boxed_opaque_existential_1(&aBlock);
  uint64_t v93 = v180;
  sub_25B207948(v180, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for Message);
  type metadata accessor for PropertyListTypeEncoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  *(unsigned char *)(inited + 24) = 1;
  uint64_t v95 = (void *)sub_25B281964(&aBlock);
  uint64_t v96 = sub_25B2851A4(v95);
  unint64_t v115 = v114;
  uint64_t v175 = v96;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  uint64_t v116 = *(void (**)(char *, uint64_t, uint64_t))(v176 + 16);
  uint64_t v117 = v93;
  unint64_t v118 = v182;
  v116(v161, v117, v182);
  v116(v162, (uint64_t)v169, v118);
  LODWORD(v118) = 0;
  switch(v115 >> 62)
  {
    case 1uLL:
      uint64_t v119 = v175;
      if (__OFSUB__(HIDWORD(v175), v175)) {
        goto LABEL_48;
      }
      unint64_t v118 = HIDWORD(v175) - (int)v175;
LABEL_31:
      sub_25B114300(v119, v115);
      if ((v118 & 0x8000000000000000) != 0 || HIDWORD(v118)) {
        goto LABEL_50;
      }
LABEL_33:
      unint64_t v174 = v115;
      if (v80(v167, 1, v81) == 1) {
        int v122 = 1;
      }
      else {
        int v122 = 3;
      }
      if (qword_26A4DA040 != -1) {
        swift_once();
      }
      uint64_t v123 = v182;
      uint64_t v124 = __swift_project_value_buffer(v182, (uint64_t)qword_26A4EB1F8);
      uint64_t v125 = v160;
      v116((char *)v160, v124, v123);
      uint64_t v126 = (int *)v154;
      *(_DWORD *)(v125 + *(int *)(v154 + 20)) = 72;
      v78((char *)(v125 + v126[6]), v161, v123);
      v78((char *)(v125 + v126[7]), v162, v123);
      *(_DWORD *)(v125 + v126[8]) = v118;
      *(unsigned char *)(v125 + v126[9]) = 0;
      uint64_t v170 = v126[10];
      *(_DWORD *)(v125 + v170) = v122;
      uint64_t v171 = v126[11];
      *(_DWORD *)(v125 + v171) = 0;
      v165 = (char *)v126[12];
      v165[v125] = v153;
      uint64_t v172 = sub_25B1D142C();
      unint64_t v173 = v127;
      unint64_t v128 = v159;
      sub_25B1F00B4(v172, v127, v159, 0, 0);
      swift_unknownObjectRetain_n();
      uint64_t v129 = sub_25B290160();
      os_log_type_t v130 = sub_25B2908A0();
      if (os_log_type_enabled(v129, v130))
      {
        uint64_t v131 = (uint8_t *)swift_slowAlloc();
        uint64_t v132 = swift_slowAlloc();
        uint64_t v183 = (uint64_t)v128;
        uint64_t aBlock = v132;
        *(_DWORD *)uint64_t v131 = 136446210;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
        uint64_t v133 = sub_25B290600();
        uint64_t v183 = sub_25B288E98(v133, v134, &aBlock);
        sub_25B2909C0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25B107000, v129, v130, "Sending encoded message to connected remote device %{public}s", v131, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261160890](v132, -1, -1);
        MEMORY[0x261160890](v131, -1, -1);
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      uint64_t v135 = (uint64_t)v167;
      uint64_t v136 = v157;
      sub_25B187628((uint64_t)v167, v157, &qword_26A4D9160);
      unint64_t v137 = (*(unsigned __int8 *)(v155 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80);
      unint64_t v138 = (v156 + v137 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v139 = swift_allocObject();
      sub_25B187574(v136, v139 + v137, &qword_26A4D9160);
      *(void *)(v139 + v138) = v181;
      uint64_t v140 = (uint64_t *)(v139 + ((v138 + 15) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v142 = v178;
      uint64_t v141 = v179;
      *uint64_t v140 = v178;
      v140[1] = v141;
      swift_retain();
      swift_retain();
      unint64_t v143 = v174;
      uint64_t v144 = v175;
      sub_25B1F00B4(v175, v174, v128, (uint64_t)sub_25B2077B0, v139);
      sub_25B10DFF0(v144, v143);
      swift_release();
      uint64_t v145 = v158;
      sub_25B187628(v135, v158, &qword_26A4D9160);
      uint64_t v146 = v168;
      if (v80((char *)v145, 1, v168) == 1)
      {
        sub_25B10DFF0(v144, v143);
        sub_25B10DFF0(v172, v173);
        sub_25B207870(v160, type metadata accessor for NetworkSyncHeader);
        (*(void (**)(char *, uint64_t))(v176 + 8))(v169, v182);
        uint64_t result = sub_25B116DE0(v145, &qword_26A4D9160);
      }
      else
      {
        uint64_t v147 = v166;
        uint64_t v148 = (uint64_t)v152;
        (*(void (**)(char *, uint64_t, uint64_t))(v166 + 32))(v152, v145, v146);
        uint64_t v149 = v160;
        int v150 = *(_DWORD *)(v160 + v171);
        if (v150 == -1)
        {
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          sub_25B290BB0();
          __break(1u);
          JUMPOUT(0x25B1ED9DCLL);
        }
        int v151 = *(_DWORD *)(v160 + v170);
        LOBYTE(aBlock) = v165[v160];
        sub_25B1F0A18(v148, v180, v151, v150 + 1, (unsigned __int8 *)&aBlock, v159, v142, v179);
        sub_25B10DFF0(v175, v143);
        sub_25B10DFF0(v172, v173);
        (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v148, v146);
        sub_25B207870(v149, type metadata accessor for NetworkSyncHeader);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v176 + 8))(v169, v182);
      }
      break;
    case 2uLL:
      uint64_t v119 = v175;
      uint64_t v121 = *(void *)(v175 + 16);
      uint64_t v120 = *(void *)(v175 + 24);
      unint64_t v118 = v120 - v121;
      if (!__OFSUB__(v120, v121)) {
        goto LABEL_31;
      }
      goto LABEL_49;
    case 3uLL:
      goto LABEL_33;
    default:
      LODWORD(v118) = BYTE6(v115);
      goto LABEL_33;
  }
  return result;
}

uint64_t sub_25B1ED9EC(uint64_t a1, NSObject *a2, uint64_t a3, unsigned __int8 *a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v57 = a6;
  uint64_t v58 = a7;
  uint64_t v56 = a3;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v55 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Message();
  uint64_t v50 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v51 = v18;
  uint64_t v52 = (uint64_t)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  os_log_type_t v20 = (char *)&v47 - v19;
  int v53 = *a4;
  uint64_t v21 = *a5;
  uint64_t v54 = a5[1];
  if (qword_26A4D98C8 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_25B290190();
  __swift_project_value_buffer(v22, (uint64_t)qword_26A4EB168);
  sub_25B207948(a1, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for Message);
  uint64_t v23 = sub_25B290160();
  os_log_type_t v24 = sub_25B2908A0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v48 = v15;
    uint64_t v26 = (uint8_t *)v25;
    uint64_t v27 = swift_slowAlloc();
    dispatch_queue_t v49 = a2;
    uint64_t v28 = v27;
    aBlock[0] = v27;
    uint64_t v47 = a1;
    *(_DWORD *)uint64_t v26 = 136446210;
    uint64_t v29 = Message.description.getter();
    uint64_t v59 = sub_25B288E98(v29, v30, aBlock);
    a1 = v47;
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B207870((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for Message);
    _os_log_impl(&dword_25B107000, v23, v24, "Queuing message with expected response: %{public}s", v26, 0xCu);
    swift_arrayDestroy();
    uint64_t v31 = v28;
    a2 = v49;
    MEMORY[0x261160890](v31, -1, -1);
    uint64_t v32 = v26;
    uint64_t v15 = v48;
    MEMORY[0x261160890](v32, -1, -1);
  }
  else
  {
    sub_25B207870((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for Message);
  }

  uint64_t v33 = v8;
  dispatch_queue_t v49 = *(dispatch_queue_t *)(v8 + 24);
  uint64_t v34 = a1;
  uint64_t v35 = v52;
  sub_25B207948(v34, v52, (uint64_t (*)(void))type metadata accessor for Message);
  uint64_t v36 = v55;
  sub_25B187628((uint64_t)a2, v55, &qword_26A4D9160);
  unint64_t v37 = (*(unsigned __int8 *)(v50 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v38 = (v51 + *(unsigned __int8 *)(v14 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v39 = (void *)swift_allocObject();
  uint64_t v40 = v57;
  uint64_t v41 = v58;
  v39[2] = v33;
  v39[3] = v40;
  v39[4] = v41;
  sub_25B20913C(v35, (uint64_t)v39 + v37, (uint64_t (*)(void))type metadata accessor for Message);
  sub_25B187574(v36, (uint64_t)v39 + v38, &qword_26A4D9160);
  id v42 = (char *)v39 + ((v38 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)id v42 = v56;
  v42[8] = v53;
  uint64_t v43 = (void *)((char *)v39 + ((v38 + v15 + 23) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v43 = v21;
  v43[1] = v54;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_25B206128;
  *(void *)(v44 + 24) = v39;
  aBlock[4] = (uint64_t)sub_25B1168E4;
  aBlock[5] = v44;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_25B10D184;
  aBlock[3] = (uint64_t)&block_descriptor_9;
  uint64_t v45 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v49, v45);
  _Block_release(v45);
  LOBYTE(v41) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v41) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B1EDF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, double a9)
{
  uint64_t v57 = a8;
  uint64_t v58 = a2;
  int v56 = a7;
  uint64_t v55 = a6;
  uint64_t v51 = a5;
  uint64_t v53 = a3;
  uint64_t v12 = sub_25B290080();
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v50 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v48 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_25B290410();
  uint64_t v52 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v15 = (uint64_t *)((char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = type metadata accessor for Message();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = a4;
  sub_25B207948(a4, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Message);
  sub_25B187628(v51, (uint64_t)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26A4D9160);
  unint64_t v23 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v24 = (v21 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (*(unsigned __int8 *)(v17 + 80) + v24 + 8) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v53;
  *(void *)(v26 + 16) = v58;
  *(void *)(v26 + 24) = v27;
  uint64_t v28 = (uint64_t)v22;
  uint64_t v29 = v27;
  sub_25B20913C(v28, v26 + v23, (uint64_t (*)(void))type metadata accessor for Message);
  *(void *)(v26 + v24) = a1;
  sub_25B187574((uint64_t)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25, &qword_26A4D9160);
  unint64_t v30 = v26 + ((v25 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = v54;
  *(void *)unint64_t v30 = v55;
  *(unsigned char *)(v30 + 8) = v56;
  unint64_t v32 = v26 + ((v25 + v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  *(double *)unint64_t v32 = a9;
  *(void *)(v32 + 8) = v57;
  uint64_t v33 = *(void **)(a1 + 24);
  void *v15 = v33;
  uint64_t v34 = v52;
  (*(void (**)(void *, void, uint64_t))(v52 + 104))(v15, *MEMORY[0x263F8F0E0], v31);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  id v35 = v33;
  LOBYTE(v33) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v34 + 8))(v15, v31);
  if (v33)
  {
    sub_25B10FF48(a1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency, (uint64_t)v60);
    uint64_t v37 = v61;
    uint64_t v38 = v62;
    __swift_project_boxed_opaque_existential_1(v60, v61);
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = a1;
    v39[3] = sub_25B206520;
    v39[4] = v26;
    uint64_t v40 = *(void (**)(uint64_t (*)(uint64_t, uint64_t), void *, uint64_t, uint64_t))(v38 + 40);
    swift_retain();
    swift_retain();
    v40(sub_25B20666C, v39, v37, v38);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    swift_release();
    uint64_t v42 = (uint64_t)v48;
    uint64_t v41 = v49;
    uint64_t v43 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v47, v50);
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = v58;
    *(void *)(v44 + 24) = v29;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = *(void *)(a1 + 64);
    *(void *)(a1 + 64) = 0x8000000000000000;
    sub_25B221C1C((uint64_t)sub_25B206678, v44, v42, isUniquelyReferenced_nonNull_native);
    *(void *)(a1 + 64) = v59;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B1EE480(void *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, int a8, double a9, uint64_t a10)
{
  int v55 = a8;
  uint64_t v56 = a7;
  uint64_t v57 = a3;
  uint64_t v53 = a4;
  unint64_t v54 = a6;
  uint64_t v61 = a5;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAFB8);
  MEMORY[0x270FA5388](v58);
  uint64_t v59 = (void (**)(unint64_t, char *, uint64_t))((char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v60 = (uint64_t)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Message();
  uint64_t v52 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v52 + 64);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_25B290080();
  uint64_t v21 = *(void *)(*(void *)(v20 - 8) + 64);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  unint64_t v23 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v51 - v24;
  if (a1)
  {
    id v27 = a1;
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_25B290190();
    __swift_project_value_buffer(v28, (uint64_t)qword_26A4EB150);
    id v29 = a1;
    id v30 = a1;
    uint64_t v31 = sub_25B290160();
    os_log_type_t v32 = sub_25B2908A0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 138543362;
      id v35 = a1;
      uint64_t v36 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v62 = v36;
      sub_25B2909C0();
      *uint64_t v34 = v36;

      _os_log_impl(&dword_25B107000, v31, v32, "Cannot send message because prerequisites are not met: %{public}@", v33, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
      swift_arrayDestroy();
      MEMORY[0x261160890](v34, -1, -1);
      MEMORY[0x261160890](v33, -1, -1);
    }
    else
    {
    }
    uint64_t v49 = (uint64_t)v59;
    *uint64_t v59 = (void (*)(unint64_t, char *, uint64_t))a1;
    swift_storeEnumTagMultiPayload();
    id v50 = a1;
    a2(v49);

    return sub_25B116DE0(v49, (uint64_t *)&unk_26A4DAFB8);
  }
  else
  {
    uint64_t v57 = a10;
    uint64_t v37 = (void (*)(char *, uint64_t, uint64_t))*((void *)v25 + 2);
    uint64_t v51 = v15;
    uint64_t v38 = v53;
    uint64_t v59 = (void (**)(unint64_t, char *, uint64_t))v25;
    v37((char *)&v51 - v24, v53, v20);
    uint64_t v58 = *(void *)(v61 + 24);
    sub_25B207948(v38, (uint64_t)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for Message);
    sub_25B187628(v54, v60, &qword_26A4D9160);
    v37(v23, (uint64_t)v26, v20);
    unint64_t v39 = (*(unsigned __int8 *)(v52 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    unint64_t v40 = (v18 + *(unsigned __int8 *)(v51 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    unint64_t v41 = (v16 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v42 = (*((unsigned __int8 *)v59 + 80) + v41 + 9) & ~(unint64_t)*((unsigned __int8 *)v59 + 80);
    unint64_t v54 = (v21 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v61;
    sub_25B20913C((uint64_t)v19, v43 + v39, (uint64_t (*)(void))type metadata accessor for Message);
    sub_25B187574(v60, v43 + v40, &qword_26A4D9160);
    unint64_t v44 = v43 + v41;
    *(void *)unint64_t v44 = v56;
    *(unsigned char *)(v44 + 8) = v55;
    unint64_t v45 = v43 + v42;
    uint64_t v46 = (uint64_t (**)(char *, uint64_t))v59;
    v59[4](v45, v23, v20);
    unint64_t v47 = v43 + v54;
    *(double *)unint64_t v47 = a9;
    *(void *)(v47 + 8) = v57;
    swift_retain();
    swift_unknownObjectRetain();
    sub_25B1B7434(0xD000000000000018, 0x800000025B29D890, v58, (uint64_t)sub_25B206CC0, v43, 0.0);
    swift_release();
    return v46[1](v26, v20);
  }
}

uint64_t sub_25B1EEA74(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, void (*a5)(char *, uint64_t), NSObject *a6, char a7, uint64_t a8, double a9)
{
  uint64_t v61 = a5;
  uint64_t v62 = a6;
  uint64_t isa = a4;
  uint64_t v65 = a1;
  uint64_t v66 = a2;
  uint64_t v13 = sub_25B290320();
  uint64_t v58 = *(void *)(v13 - 8);
  uint64_t v59 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v56 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_25B290360();
  uint64_t v55 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  unint64_t v54 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_25B290310();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v17 = (void *)((char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = sub_25B2903E0();
  uint64_t v53 = *(void *)(v64 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v64);
  uint64_t v20 = (char *)v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  os_log_type_t v63 = (char *)v47 - v21;
  uint64_t v22 = sub_25B290080();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  MEMORY[0x270FA5388](v22);
  unint64_t v25 = (char *)v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(aBlock[0]) = a7;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  uint64_t v52 = a8;
  uint64_t v48 = v26;
  v26(v25, a8, v22);
  uint64_t v27 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v28 = (v27 + 24) & ~v27;
  unint64_t v29 = (v24 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47[1] = v29 + 16;
  void v47[2] = v27 | 7;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a3;
  uint64_t v49 = v28;
  v47[0] = *(void *)(v23 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v47[0])(v30 + v28, v25, v22);
  uint64_t v31 = (void *)(v30 + v29);
  uint64_t v32 = v66;
  *uint64_t v31 = v65;
  v31[1] = v32;
  swift_retain();
  swift_retain();
  uint64_t v33 = v62;
  uint64_t v62 = a3;
  sub_25B1EBDF0(isa, (uint64_t)v61, v33, (unsigned __int8 *)aBlock, (uint64_t)sub_25B20736C, v30);
  swift_release();
  uint64_t result = sub_25B2903C0();
  double v35 = (a9 + 1.0) * 1000.0;
  if ((~*(void *)&v35 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v35 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v35 < 9.22337204e18)
  {
    void *v17 = (uint64_t)v35;
    uint64_t v36 = v50;
    uint64_t v37 = v51;
    (*(void (**)(void *, void, uint64_t))(v50 + 104))(v17, *MEMORY[0x263F8F000], v51);
    sub_25B2903D0();
    (*(void (**)(void *, uint64_t))(v36 + 8))(v17, v37);
    uint64_t v61 = *(void (**)(char *, uint64_t))(v53 + 8);
    v61(v20, v64);
    uint64_t v38 = v62;
    uint64_t isa = (uint64_t)v62[3].isa;
    v48(v25, v52, v22);
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v38;
    ((void (*)(uint64_t, char *, uint64_t))v47[0])(v39 + v49, v25, v22);
    unint64_t v40 = (void *)(v39 + v29);
    uint64_t v41 = v66;
    *unint64_t v40 = v65;
    v40[1] = v41;
    aBlock[4] = sub_25B207510;
    aBlock[5] = v39;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_25B10F584;
    aBlock[3] = &block_descriptor_44;
    unint64_t v42 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    uint64_t v43 = v54;
    sub_25B290340();
    uint64_t v67 = MEMORY[0x263F8EE78];
    sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1A8F44();
    unint64_t v44 = v56;
    uint64_t v45 = v59;
    sub_25B290A00();
    uint64_t v46 = v63;
    MEMORY[0x26115F210](v63, v43, v44, v42);
    _Block_release(v42);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v45);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v43, v57);
    v61(v46, v64);
    return swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_25B1EF154(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v12 = sub_25B290320();
  uint64_t v29 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25B290360();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v27[0] = v17;
    v27[1] = a6;
    uint64_t v28 = a5;
    MEMORY[0x270FA5388](v16);
    v27[-2] = a3;
    v27[-1] = a4;
    id v20 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB040);
    sub_25B290900();
    uint64_t v21 = v32;
    if (v32)
    {
      uint64_t v22 = v33;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v21;
      *(void *)(v23 + 24) = v22;
      uint64_t v24 = (void *)swift_allocObject();
      void v24[2] = sub_25B20ACD0;
      v24[3] = v23;
      v24[4] = a1;
      aBlock[4] = sub_25B209228;
      aBlock[5] = v24;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_25B10F584;
      aBlock[3] = &block_descriptor_182;
      unint64_t v25 = _Block_copy(aBlock);
      swift_retain();
      sub_25B116CFC(a1, 1);
      swift_retain();
      sub_25B290340();
      uint64_t v30 = MEMORY[0x263F8EE78];
      sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
      sub_25B1A8F44();
      sub_25B290A00();
      MEMORY[0x26115F250](0, v19, v14, v25);
      _Block_release(v25);
      sub_25B116D08(a1, 1);
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v12);
      (*(void (**)(char *, uint64_t))(v27[0] + 8))(v19, v15);
      uint64_t v16 = swift_release();
    }
    else
    {
      sub_25B116D08(a1, 1);
    }
    a5 = v28;
  }
  return a5(v16);
}

uint64_t sub_25B1EF504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 64);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_25B18A93C(a2), (v8 & 1) != 0))
  {
    unint64_t v9 = v7;
    uint64_t v10 = *(void *)(v6 + 56);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = *(_OWORD *)(v10 + 16 * v9);
    swift_retain();
    char v12 = 0;
    uint64_t v13 = sub_25B20ACD0;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v11 = 0;
    char v12 = 1;
  }
  swift_endAccess();
  swift_beginAccess();
  uint64_t v14 = sub_25B21D5C4(a2);
  swift_endAccess();
  sub_25B207D70(v14);
  uint64_t v15 = 0;
  uint64_t result = 0;
  if ((v12 & 1) == 0)
  {
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v13;
    *(void *)(result + 24) = v11;
    uint64_t v15 = sub_25B20ACC8;
  }
  *a3 = v15;
  a3[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_25B1EF658(void (*a1)(void *), uint64_t a2, void *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAFB8);
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (uint64_t *)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *unint64_t v7 = a3;
  swift_storeEnumTagMultiPayload();
  id v8 = a3;
  a1(v7);
  return sub_25B116DE0((uint64_t)v7, (uint64_t *)&unk_26A4DAFB8);
}

uint64_t sub_25B1EF718(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v49 = a3;
  uint64_t v7 = sub_25B290320();
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v45 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_25B290360();
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25B290080();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v15 = *(void *)(a1 + 64);
  if (!*(void *)(v15 + 16)) {
    return swift_endAccess();
  }
  unint64_t v16 = sub_25B18A93C(a2);
  if ((v17 & 1) == 0) {
    return swift_endAccess();
  }
  unint64_t v18 = v16;
  uint64_t v42 = a4;
  uint64_t v43 = a2;
  uint64_t v19 = *(void *)(v15 + 56);
  uint64_t v20 = swift_allocObject();
  long long v40 = *(_OWORD *)(v19 + 16 * v18);
  uint64_t v41 = v20;
  *(_OWORD *)(v20 + 16) = v40;
  swift_endAccess();
  uint64_t v21 = qword_26A4D98C8;
  swift_retain();
  if (v21 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_25B290190();
  __swift_project_value_buffer(v22, (uint64_t)qword_26A4EB168);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v43, v11);
  uint64_t v23 = sub_25B290160();
  os_log_type_t v24 = sub_25B2908A0();
  if (os_log_type_enabled(v23, v24))
  {
    unint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v40 = swift_slowAlloc();
    aBlock[0] = v40;
    uint64_t v39 = v25;
    *(_DWORD *)unint64_t v25 = 136446210;
    uint64_t v38 = v25 + 4;
    sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
    uint64_t v26 = sub_25B290DB0();
    uint64_t v50 = sub_25B288E98(v26, v27, aBlock);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v28 = v39;
    _os_log_impl(&dword_25B107000, v23, v24, "Backstop fired; timeout when waiting for response for message: %{public}s",
      v39,
      0xCu);
    uint64_t v29 = v40;
    swift_arrayDestroy();
    MEMORY[0x261160890](v29, -1, -1);
    MEMORY[0x261160890](v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  swift_beginAccess();
  uint64_t v31 = sub_25B21D5C4(v43);
  swift_endAccess();
  sub_25B207D70(v31);
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v41;
  *(void *)(v32 + 16) = sub_25B2075A4;
  *(void *)(v32 + 24) = v33;
  aBlock[4] = (uint64_t)sub_25B2075CC;
  aBlock[5] = v32;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_25B10F584;
  aBlock[3] = (uint64_t)&block_descriptor_53;
  uint64_t v34 = _Block_copy(aBlock);
  swift_retain();
  sub_25B290340();
  uint64_t v50 = MEMORY[0x263F8EE78];
  sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B1A8F44();
  double v35 = v45;
  uint64_t v36 = v48;
  sub_25B290A00();
  MEMORY[0x26115F250](0, v10, v35, v34);
  _Block_release(v34);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v46);
  uint64_t v37 = swift_release();
  v49(v37);
  return swift_release();
}

uint64_t sub_25B1EFD08(void (*a1)(uint64_t *))
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAFB8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25B2075D4();
  uint64_t v5 = swift_allocError();
  unsigned char *v6 = 2;
  *uint64_t v4 = v5;
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_25B116DE0((uint64_t)v4, (uint64_t *)&unk_26A4DAFB8);
}

uint64_t sub_25B1EFDE4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AF0);
  sub_25B290900();
  return v1;
}

uint64_t sub_25B1EFE50(uint64_t a1, uint64_t a2)
{
  return sub_25B1E610C(a1, a2);
}

void sub_25B1EFE74(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*v1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType);
}

uint64_t sub_25B1EFE8C@<X0>(uint64_t a1@<X8>)
{
  return sub_25B10FF48(*v1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency, a1);
}

uint64_t sub_25B1EFEA4()
{
  return sub_25B1E880C();
}

uint64_t sub_25B1EFEC8@<X0>(void *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
  uint64_t result = sub_25B290900();
  *a1 = v3;
  return result;
}

uint64_t sub_25B1EFF44@<X0>(void *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
  uint64_t result = sub_25B290900();
  *a1 = v3;
  return result;
}

uint64_t sub_25B1EFFC0(uint64_t *a1)
{
  return sub_25B1EA8A4(*a1);
}

uint64_t sub_25B1EFFE8@<X0>(void *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB048);
  uint64_t result = sub_25B290900();
  *a1 = v3;
  return result;
}

uint64_t sub_25B1F0064(uint64_t a1, uint64_t a2, uint64_t *a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6)
{
  return sub_25B1EB308(a1, a2, *a3, a4, a5, a6);
}

uint64_t sub_25B1F008C(uint64_t a1, NSObject *a2, uint64_t *a3, unsigned __int8 *a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  return sub_25B1ED9EC(a1, a2, *a3, a4, a5, a6, a7);
}

uint64_t sub_25B1F00B4(uint64_t a1, unint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  unint64_t v44 = a2;
  v46[2] = *MEMORY[0x263EF8340];
  uint64_t v11 = sub_25B290410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v6 + 24);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  id v16 = v15;
  char v17 = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if (v17)
  {
    if (qword_26A4DA048 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  unint64_t v18 = (uint64_t *)(qword_26A4DAF10 + 16);
  uint64_t v19 = (os_unfair_lock_s *)(qword_26A4DAF10 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_26A4DAF10 + 24));
  sub_25B1E6060(v18, v46);
  os_unfair_lock_unlock(v19);
  uint64_t v20 = v46[0];
  if (qword_26A4D98C8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_25B290190();
  __swift_project_value_buffer(v21, (uint64_t)qword_26A4EB168);
  swift_unknownObjectRetain_n();
  uint64_t v22 = sub_25B290160();
  os_log_type_t v23 = sub_25B2908A0();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v42 = v20;
  uint64_t v43 = 0;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v41 = a1;
    uint64_t v26 = v25;
    uint64_t v27 = swift_slowAlloc();
    v46[0] = v27;
    *(_DWORD *)uint64_t v26 = 134349314;
    uint64_t v45 = v20;
    sub_25B2909C0();
    *(_WORD *)(v26 + 12) = 2082;
    uint64_t v45 = (uint64_t)a3;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v28 = sub_25B290600();
    uint64_t v45 = sub_25B288E98(v28, v29, v46);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v22, v23, "Sending data (sendID:%{public}llu) to: %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v27, -1, -1);
    uint64_t v30 = v26;
    a1 = v41;
    MEMORY[0x261160890](v30, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  unint64_t v31 = v44;
  sub_25B1F5540((uint64_t)a3);
  switch(v31 >> 62)
  {
    case 1uLL:
      goto LABEL_15;
    case 2uLL:
      uint64_t v33 = *(void *)(a1 + 16);
      uint64_t v34 = *(void *)(a1 + 24);
      swift_retain();
      sub_25B207E2C(a4);
      swift_unknownObjectRetain();
      swift_retain();
      sub_25B207E2C(a4);
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      uint64_t v35 = v34;
      uint64_t v36 = v43;
      sub_25B206E54(v33, v35, v31 & 0x3FFFFFFFFFFFFFFFLL, a3, v6, v42, a4, a5);
      if (v36)
      {
        swift_release();
        swift_unknownObjectRelease();
        sub_25B207D70(a4);
        swift_release();
        swift_release();
        __break(1u);
LABEL_24:
        swift_release();
        swift_unknownObjectRelease();
        sub_25B207D70(a4);
        sub_25B10DFF0(a1, v31);
        __break(1u);
        JUMPOUT(0x25B1F06FCLL);
      }
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v46, 0, 14);
      swift_unknownObjectRetain();
      swift_retain();
      sub_25B207E2C(a4);
      uint64_t v32 = v46;
      goto LABEL_13;
    default:
      v46[0] = a1;
      LOWORD(v46[1]) = v31;
      BYTE2(v46[1]) = BYTE2(v31);
      BYTE3(v46[1]) = BYTE3(v31);
      BYTE4(v46[1]) = BYTE4(v31);
      BYTE5(v46[1]) = BYTE5(v31);
      swift_unknownObjectRetain();
      swift_retain();
      sub_25B207E2C(a4);
      uint64_t v32 = (uint64_t *)((char *)v46 + BYTE6(v31));
LABEL_13:
      uint64_t v37 = v43;
      sub_25B1F5AA0((uint64_t)v46, (uint64_t)v32, a3, v6, v42, a4, a5);
      if (!v37) {
        goto LABEL_18;
      }
      swift_release();
      swift_unknownObjectRelease();
      sub_25B207D70(a4);
      __break(1u);
LABEL_15:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      swift_retain();
      sub_25B207E2C(a4);
      swift_unknownObjectRetain();
      swift_retain();
      sub_25B207E2C(a4);
      swift_unknownObjectRetain();
      sub_25B114300(a1, v31);
      uint64_t v38 = v43;
      sub_25B206E54((int)a1, a1 >> 32, v31 & 0x3FFFFFFFFFFFFFFFLL, a3, v6, v42, a4, a5);
      if (v38) {
        goto LABEL_24;
      }
      sub_25B10DFF0(a1, v31);
LABEL_18:
      swift_unknownObjectRelease();
      break;
  }
  swift_release();
  return sub_25B207D70(a4);
}

uint64_t sub_25B1F070C(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_25B290320();
  uint64_t v24 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_25B290360();
  uint64_t v14 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  id v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_25B28FEA0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(a3, 1, v17);
  if (result == 1)
  {
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a5;
    *(void *)(v19 + 24) = a6;
    *(void *)(v19 + 32) = a1;
    char v20 = a2 & 1;
    *(unsigned char *)(v19 + 40) = a2 & 1;
    aBlock[4] = sub_25B207EF8;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_25B10F584;
    aBlock[3] = &block_descriptor_155;
    uint64_t v21 = _Block_copy(aBlock);
    swift_retain();
    sub_25B116CFC(a1, v20);
    sub_25B290340();
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1A8F44();
    sub_25B290A00();
    MEMORY[0x26115F250](0, v16, v13, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v23);
    return swift_release();
  }
  return result;
}

uint64_t sub_25B1F0A18(uint64_t a1, uint64_t a2, int a3, int a4, unsigned __int8 *a5, NSObject *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v220 = a7;
  v208 = a6;
  int v205 = a4;
  int v204 = a3;
  uint64_t v201 = a2;
  uint64_t v222 = a1;
  uint64_t v228 = *MEMORY[0x263EF8340];
  uint64_t v12 = sub_25B290320();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v215 = v12;
  uint64_t v216 = v13;
  MEMORY[0x270FA5388](v12);
  v213 = (char *)&v192 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25B290360();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v217 = v15;
  uint64_t v218 = v16;
  MEMORY[0x270FA5388](v15);
  unint64_t v214 = (unint64_t)&v192 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25B28FEA0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v211 = v18;
  uint64_t v212 = v19;
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v192 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v210 = (char *)&v192 - v24;
  MEMORY[0x270FA5388](v23);
  v198 = (char *)&v192 - v25;
  uint64_t v194 = type metadata accessor for NetworkSyncHeader(0);
  uint64_t v26 = MEMORY[0x270FA5388](v194);
  uint64_t v193 = (uint64_t)&v192 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v195 = (char *)&v192 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v202 = (uint64_t)&v192 - v30;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v33 = (char *)&v192 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = sub_25B290080();
  uint64_t v207 = *(void *)(v209 - 8);
  uint64_t v34 = *(void *)(v207 + 64);
  uint64_t v35 = MEMORY[0x270FA5388](v209);
  v197 = (char *)&v192 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  v196 = (char *)&v192 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v200 = (char *)&v192 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  v199 = (char *)&v192 - v41;
  MEMORY[0x270FA5388](v40);
  v206 = (char *)&v192 - v42;
  uint64_t v43 = sub_25B290410();
  uint64_t v44 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v46 = (void (**)(uint64_t, char *, uint64_t))((char *)&v192 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v203 = *a5;
  uint64_t v47 = *(void **)(v9 + 24);
  *uint64_t v46 = v47;
  (*(void (**)(void *, void, uint64_t))(v44 + 104))(v46, *MEMORY[0x263F8F0E0], v43);
  id v48 = v47;
  LOBYTE(v47) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v44 + 8))(v46, v43);
  if ((v47 & 1) == 0)
  {
    __break(1u);
    goto LABEL_58;
  }
  uint64_t v219 = a8;
  uint64_t v221 = v9;
  uint64_t v49 = *(void *)(v9 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency + 24);
  uint64_t v50 = *(void *)(v9 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency + 32);
  uint64_t v51 = __swift_project_boxed_opaque_existential_1((void *)(v9 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency), v49);
  uint64_t v52 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v51);
  unint64_t v54 = (char *)&v192 - v53;
  (*(void (**)(char *))(v52 + 16))((char *)&v192 - v53);
  uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 24))(v49, v50);
  unint64_t v57 = v56;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v49);
  if (!v57)
  {
    if (qword_26A4D98C8 == -1)
    {
LABEL_8:
      uint64_t v69 = sub_25B290190();
      __swift_project_value_buffer(v69, (uint64_t)qword_26A4EB168);
      uint64_t v70 = sub_25B290160();
      os_log_type_t v71 = sub_25B290880();
      BOOL v72 = os_log_type_enabled(v70, v71);
      uint64_t v74 = v218;
      uint64_t v73 = v219;
      uint64_t v76 = v216;
      uint64_t v75 = v217;
      if (v72)
      {
        uint64_t v77 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v77 = 0;
        _os_log_impl(&dword_25B107000, v70, v71, "Cannot send messages before we have a local device ID", v77, 2u);
        MEMORY[0x261160890](v77, -1, -1);
      }

      uint64_t v78 = swift_allocObject();
      *(void *)(v78 + 16) = v220;
      *(void *)(v78 + 24) = v73;
      v226 = (void (*)())sub_25B20AB40;
      uint64_t v227 = v78;
      *(void *)&long long aBlock = MEMORY[0x263EF8330];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v225 = sub_25B10F584;
      *((void *)&v225 + 1) = &block_descriptor_86;
      uint64_t v79 = _Block_copy(&aBlock);
      goto LABEL_34;
    }
LABEL_58:
    swift_once();
    goto LABEL_8;
  }
  id v58 = objc_msgSend(self, sel_defaultManager);
  sub_25B28FE70();
  uint64_t v59 = (void *)sub_25B290590();
  swift_bridgeObjectRelease();
  *(void *)&long long aBlock = 0;
  id v60 = objc_msgSend(v58, sel_attributesOfItemAtPath_error_, v59, &aBlock);

  uint64_t v61 = (void *)aBlock;
  if (!v60)
  {
    id v80 = (id)aBlock;
    swift_bridgeObjectRelease();
    uint64_t v81 = (void *)sub_25B28FE20();

    swift_willThrow();
    uint64_t v82 = v212;
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v83 = sub_25B290190();
    __swift_project_value_buffer(v83, (uint64_t)qword_26A4EB168);
    uint64_t v84 = v211;
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v22, v222, v211);
    uint64_t v85 = sub_25B290160();
    os_log_type_t v86 = sub_25B290880();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      *(void *)&long long aBlock = v88;
      *(_DWORD *)uint64_t v87 = 136446210;
      sub_25B20A4B0(&qword_26A4DAFD8, MEMORY[0x263F06EA8]);
      uint64_t v89 = sub_25B290DB0();
      uint64_t v223 = sub_25B288E98(v89, v90, (uint64_t *)&aBlock);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v22, v84);
      _os_log_impl(&dword_25B107000, v85, v86, "Cannot get attributes of file at URL: %{public}s", v87, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v88, -1, -1);
      MEMORY[0x261160890](v87, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v82 + 8))(v22, v84);
    }

    uint64_t v115 = v218;
    uint64_t v114 = v219;
    uint64_t v116 = v217;
    uint64_t v117 = swift_allocObject();
    *(void *)(v117 + 16) = v220;
    *(void *)(v117 + 24) = v114;
    v226 = sub_25B2078F0;
    uint64_t v227 = v117;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v225 = sub_25B10F584;
    *((void *)&v225 + 1) = &block_descriptor_92;
    unint64_t v118 = _Block_copy(&aBlock);
    swift_retain();
    unint64_t v119 = v214;
    sub_25B290340();
    uint64_t v223 = MEMORY[0x263F8EE78];
    sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1A8F44();
    uint64_t v120 = v213;
    uint64_t v121 = v215;
    sub_25B290A00();
    MEMORY[0x26115F250](0, v119, v120, v118);
    _Block_release(v118);
    (*(void (**)(char *, uint64_t))(v216 + 8))(v120, v121);
    (*(void (**)(unint64_t, uint64_t))(v115 + 8))(v119, v116);
    return swift_release();
  }
  uint64_t v62 = v55;
  type metadata accessor for FileAttributeKey(0);
  sub_25B20A4B0(&qword_26A4DA480, type metadata accessor for FileAttributeKey);
  uint64_t v63 = sub_25B2904D0();
  id v64 = v61;

  uint64_t v65 = v212;
  if (*(void *)(v63 + 16))
  {
    id v66 = (id)*MEMORY[0x263F080B8];
    unint64_t v67 = sub_25B18AADC((uint64_t)v66);
    if (v68)
    {
      sub_25B116E84(*(void *)(v63 + 56) + 32 * v67, (uint64_t)&aBlock);
    }
    else
    {
      long long aBlock = 0u;
      long long v225 = 0u;
    }
  }
  else
  {
    long long aBlock = 0u;
    long long v225 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v225 + 1))
  {
    swift_bridgeObjectRelease();
    sub_25B116DE0((uint64_t)&aBlock, &qword_26B33F4C0);
LABEL_27:
    uint64_t v99 = v211;
    BOOL v100 = v210;
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v101 = sub_25B290190();
    __swift_project_value_buffer(v101, (uint64_t)qword_26A4EB168);
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v100, v222, v99);
    uint64_t v102 = sub_25B290160();
    os_log_type_t v103 = sub_25B290880();
    if (os_log_type_enabled(v102, v103))
    {
      unint64_t v104 = (uint8_t *)swift_slowAlloc();
      uint64_t v105 = swift_slowAlloc();
      *(void *)&long long aBlock = v105;
      *(_DWORD *)unint64_t v104 = 136446210;
      sub_25B20A4B0(&qword_26A4DAFD8, MEMORY[0x263F06EA8]);
      uint64_t v106 = sub_25B290DB0();
      uint64_t v223 = sub_25B288E98(v106, v107, (uint64_t *)&aBlock);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v100, v99);
      _os_log_impl(&dword_25B107000, v102, v103, "Cannot retrieve size of file at URL: %{public}s", v104, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v105, -1, -1);
      MEMORY[0x261160890](v104, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v100, v99);
    }

    uint64_t v108 = v220;
    uint64_t v75 = v217;
    uint64_t v74 = v218;
    uint64_t v76 = v216;
    uint64_t v109 = swift_allocObject();
    *(void *)(v109 + 16) = v108;
    *(void *)(v109 + 24) = v219;
    v226 = (void (*)())sub_25B20AB40;
    uint64_t v227 = v109;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    unint64_t v110 = &block_descriptor_98;
    goto LABEL_33;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  uint64_t v91 = v223;
  sub_25B290010();
  uint64_t v92 = v207;
  uint64_t v93 = v209;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v207 + 48))(v33, 1, v209) == 1)
  {
    sub_25B116DE0((uint64_t)v33, &qword_26B33F200);
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v94 = sub_25B290190();
    __swift_project_value_buffer(v94, (uint64_t)qword_26A4EB168);
    swift_bridgeObjectRetain();
    uint64_t v95 = sub_25B290160();
    os_log_type_t v96 = sub_25B290880();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v97 = (uint8_t *)swift_slowAlloc();
      uint64_t v98 = swift_slowAlloc();
      *(void *)&long long aBlock = v98;
      *(_DWORD *)uint64_t v97 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v223 = sub_25B288E98(v62, v57, (uint64_t *)&aBlock);
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25B107000, v95, v96, "Cannot create UUID from sender device ID: %{public}s", v97, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v98, -1, -1);
      MEMORY[0x261160890](v97, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v153 = v220;
    uint64_t v75 = v217;
    uint64_t v74 = v218;
    uint64_t v76 = v216;
    uint64_t v154 = swift_allocObject();
    *(void *)(v154 + 16) = v153;
    *(void *)(v154 + 24) = v219;
    v226 = (void (*)())sub_25B20AB40;
    uint64_t v227 = v154;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    unint64_t v110 = &block_descriptor_104;
LABEL_33:
    *(void *)&long long v225 = sub_25B10F584;
    *((void *)&v225 + 1) = v110;
    uint64_t v79 = _Block_copy(&aBlock);
LABEL_34:
    swift_retain();
    unint64_t v111 = v214;
    sub_25B290340();
    uint64_t v223 = MEMORY[0x263F8EE78];
    sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1A8F44();
    uint64_t v112 = v213;
    uint64_t v113 = v215;
    sub_25B290A00();
    MEMORY[0x26115F250](0, v111, v112, v79);
    _Block_release(v79);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v112, v113);
    (*(void (**)(unint64_t, uint64_t))(v74 + 8))(v111, v75);
    return swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v123 = *(void (**)(uint64_t, char *, uint64_t))(v92 + 32);
  uint64_t v124 = v206;
  v210 = (char *)(v92 + 32);
  v192 = v123;
  v123((uint64_t)v206, v33, v93);
  sub_25B2902B0();
  uint64_t v125 = v93;
  uint64_t v126 = (uint64_t)v208;
  uint64_t v127 = swift_unknownObjectRetain();
  uint64_t v128 = MEMORY[0x26115EC00](v127);
  if (!v128)
  {
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v155 = sub_25B290190();
    __swift_project_value_buffer(v155, (uint64_t)qword_26A4EB168);
    uint64_t v156 = (uint64_t)v208;
    swift_unknownObjectRetain_n();
    uint64_t v157 = sub_25B290160();
    os_log_type_t v158 = sub_25B290880();
    if (os_log_type_enabled(v157, v158))
    {
      uint64_t v159 = (uint8_t *)swift_slowAlloc();
      uint64_t v160 = swift_slowAlloc();
      uint64_t v223 = v156;
      *(void *)&long long aBlock = v160;
      *(_DWORD *)uint64_t v159 = 136446210;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v161 = sub_25B290600();
      uint64_t v223 = sub_25B288E98(v161, v162, (uint64_t *)&aBlock);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v157, v158, "Cannot create NWConnection from nw_connection_t for %{public}s", v159, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v160, -1, -1);
      MEMORY[0x261160890](v159, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    uint64_t v183 = v220;
    uint64_t v185 = v217;
    uint64_t v184 = v218;
    uint64_t v186 = v216;
    uint64_t v187 = swift_allocObject();
    *(void *)(v187 + 16) = v183;
    *(void *)(v187 + 24) = v219;
    v226 = (void (*)())sub_25B20AB40;
    uint64_t v227 = v187;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v225 = sub_25B10F584;
    *((void *)&v225 + 1) = &block_descriptor_110;
    v188 = _Block_copy(&aBlock);
    swift_retain();
    unint64_t v189 = v214;
    sub_25B290340();
    uint64_t v223 = MEMORY[0x263F8EE78];
    sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1A8F44();
    v190 = v213;
    uint64_t v191 = v215;
    sub_25B290A00();
    MEMORY[0x26115F250](0, v189, v190, v188);
    _Block_release(v188);
    (*(void (**)(char *, uint64_t))(v186 + 8))(v190, v191);
    (*(void (**)(unint64_t, uint64_t))(v184 + 8))(v189, v185);
    (*(void (**)(char *, uint64_t))(v207 + 8))(v206, v209);
    return swift_release();
  }
  uint64_t v216 = v128;
  LOBYTE(aBlock) = v203;
  uint64_t v218 = v91;
  uint64_t v129 = v201;
  sub_25B1F2784(v222, v201, v204, v205, (unsigned __int8 *)&aBlock, v126, 0, 0);
  os_log_type_t v130 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
  unint64_t v131 = v218;
  v130(v199, v129, v125);
  uint64_t v132 = v124;
  uint64_t v133 = (void (*)(uint64_t, uint64_t, uint64_t))v130;
  v130(v200, (uint64_t)v132, v125);
  if ((v131 & 0x8000000000000000) == 0)
  {
    uint64_t v134 = v202;
    uint64_t v135 = (uint64_t)v195;
    uint64_t v136 = (int *)v194;
    if (!HIDWORD(v131))
    {
      int v137 = v205 + 1;
      if (v205 == -1)
      {
        __break(1u);
      }
      else if (qword_26A4DA040 == -1)
      {
LABEL_43:
        uint64_t v138 = v209;
        uint64_t v139 = __swift_project_value_buffer(v209, (uint64_t)qword_26A4EB1F8);
        uint64_t v217 = (uint64_t)v133;
        v133(v134, v139, v138);
        *(_DWORD *)(v134 + v136[5]) = 72;
        uint64_t v140 = v192;
        v192(v134 + v136[6], v199, v138);
        v140(v134 + v136[7], v200, v138);
        *(_DWORD *)(v134 + v136[8]) = v218;
        *(unsigned char *)(v134 + v136[9]) = 1;
        *(_DWORD *)(v134 + v136[10]) = v204;
        *(_DWORD *)(v134 + v136[11]) = v137;
        *(unsigned char *)(v134 + v136[12]) = v203;
        if (qword_26A4D98C8 != -1) {
          swift_once();
        }
        uint64_t v141 = sub_25B290190();
        __swift_project_value_buffer(v141, (uint64_t)qword_26A4EB168);
        sub_25B207948(v134, v135, type metadata accessor for NetworkSyncHeader);
        uint64_t v142 = v208;
        swift_unknownObjectRetain_n();
        unint64_t v143 = sub_25B290160();
        os_log_type_t v144 = sub_25B2908A0();
        int v145 = v144;
        if (os_log_type_enabled(v143, v144))
        {
          uint64_t v146 = swift_slowAlloc();
          uint64_t v215 = swift_slowAlloc();
          *(void *)&long long aBlock = v215;
          *(_DWORD *)uint64_t v146 = 136446466;
          LODWORD(v214) = v145;
          sub_25B207948(v135, v193, type metadata accessor for NetworkSyncHeader);
          uint64_t v147 = sub_25B290600();
          uint64_t v223 = sub_25B288E98(v147, v148, (uint64_t *)&aBlock);
          sub_25B2909C0();
          swift_bridgeObjectRelease();
          sub_25B207870(v135, type metadata accessor for NetworkSyncHeader);
          *(_WORD *)(v146 + 12) = 2082;
          uint64_t v223 = (uint64_t)v208;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
          uint64_t v149 = sub_25B290600();
          uint64_t v223 = sub_25B288E98(v149, v150, (uint64_t *)&aBlock);
          sub_25B2909C0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25B107000, v143, (os_log_type_t)v214, "Sending file header: %{public}s to %{public}s", (uint8_t *)v146, 0x16u);
          uint64_t v151 = v215;
          swift_arrayDestroy();
          MEMORY[0x261160890](v151, -1, -1);
          uint64_t v152 = v146;
          uint64_t v142 = v208;
          MEMORY[0x261160890](v152, -1, -1);
        }
        else
        {
          sub_25B207870(v135, type metadata accessor for NetworkSyncHeader);

          swift_unknownObjectRelease_n();
        }
        uint64_t v163 = (void (*)(char *, uint64_t, uint64_t))v217;
        uint64_t v164 = sub_25B1D142C();
        unint64_t v214 = v165;
        uint64_t v215 = v164;
        sub_25B1F00B4(v164, v165, v142, 0, 0);
        uint64_t v217 = swift_allocObject();
        swift_weakInit();
        uint64_t v166 = v212;
        (*(void (**)(char *, uint64_t, uint64_t))(v212 + 16))(v198, v222, v211);
        uint64_t v167 = v209;
        v163(v196, v201, v209);
        v163(v197, (uint64_t)v206, v167);
        unint64_t v168 = (*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80);
        uint64_t v169 = *(unsigned __int8 *)(v207 + 80);
        unint64_t v170 = (v20 + v169 + v168) & ~v169;
        unint64_t v171 = (v34 + v169 + v170) & ~v169;
        uint64_t v221 = v171 + v34;
        unint64_t v172 = (v171 + v34) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v173 = (v172 + 11) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v174 = (v173 + 11) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v175 = (v174 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v176 = swift_allocObject();
        v213 = (char *)(v172 + v176);
        uint64_t v177 = v216;
        *(void *)(v176 + 16) = v217;
        *(void *)(v176 + 24) = v177;
        (*(void (**)(unint64_t, char *, uint64_t))(v166 + 32))(v176 + v168, v198, v211);
        unint64_t v178 = v176 + v170;
        uint64_t v179 = v209;
        uint64_t v180 = (void (*)(unint64_t, char *, uint64_t))v192;
        v192(v178, v196, v209);
        v180(v176 + v171, v197, v179);
        *(unsigned char *)(v176 + v221) = v203;
        *((_DWORD *)v213 + 1) = v204;
        *(_DWORD *)(v176 + v173) = v205;
        *(void *)(v176 + v174) = v208;
        uint64_t v181 = (void *)(v176 + v175);
        uint64_t v182 = v219;
        *uint64_t v181 = v220;
        v181[1] = v182;
        *(void *)(v176 + ((v175 + 23) & 0xFFFFFFFFFFFFFFF8)) = v218;
        sub_25B290290();
        swift_unknownObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_25B290280();
        sub_25B2902A0();
        swift_release();
        swift_release();
        sub_25B10DFF0(v215, v214);
        swift_release();
        sub_25B207870(v202, type metadata accessor for NetworkSyncHeader);
        (*(void (**)(char *, uint64_t))(v207 + 8))(v206, v179);
        return swift_release();
      }
      swift_once();
      goto LABEL_43;
    }
  }
  uint64_t result = sub_25B290BB0();
  __break(1u);
  return result;
}

void sub_25B1F2784(uint64_t a1, uint64_t a2, int a3, int a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t isUniquelyReferenced_nonNull_native)
{
  int v155 = a4;
  int v154 = a3;
  uint64_t v157 = a2;
  unint64_t v173 = (uint8_t *)a1;
  uint64_t v171 = sub_25B290320();
  uint64_t v164 = *(void *)(v171 - 8);
  MEMORY[0x270FA5388](v171);
  uint64_t v161 = (char *)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = (void (*)(char *, char *, uint64_t))sub_25B290360();
  uint64_t v162 = *((void *)v163 - 1);
  MEMORY[0x270FA5388](v163);
  uint64_t v160 = (char *)&v142 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = type metadata accessor for NetworkSyncHeader(0);
  MEMORY[0x270FA5388](v153);
  uint64_t v156 = (char *)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v142 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_25B290080();
  uint64_t v169 = *(void *)(v170 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v170);
  os_log_type_t v158 = (char *)&v142 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v165 = (char *)&v142 - v22;
  MEMORY[0x270FA5388](v21);
  unint64_t v168 = (char *)&v142 - v23;
  uint64_t v167 = sub_25B28FEA0();
  uint64_t v172 = *(void *)(v167 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v167);
  unint64_t v148 = (char *)&v142 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v142 - v26;
  int v152 = *a5;
  uint64_t v166 = v8;
  uint64_t v29 = *(void *)(v8 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency + 24);
  uint64_t v28 = *(void *)(v8 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency + 32);
  uint64_t v30 = __swift_project_boxed_opaque_existential_1((void *)(v8 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency), v29);
  uint64_t v31 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v142 - v32;
  (*(void (**)(char *))(v31 + 16))((char *)&v142 - v32);
  uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v29, v28);
  unint64_t v36 = v35;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v29);
  if (!v36)
  {
    if (qword_26A4D98C8 != -1) {
      goto LABEL_57;
    }
    goto LABEL_6;
  }
  uint64_t v151 = v34;
  uint64_t v150 = a7;
  if (qword_26A4D98C8 != -1) {
    goto LABEL_55;
  }
LABEL_3:
  uint64_t v37 = sub_25B290190();
  uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)qword_26A4EB168);
  uint64_t v39 = v172;
  uint64_t v40 = *(void (**)(char *, uint8_t *, uint64_t))(v172 + 16);
  uint64_t v41 = v167;
  uint64_t v145 = v172 + 16;
  os_log_type_t v144 = v40;
  v40(v27, v173, v167);
  swift_unknownObjectRetain_n();
  uint64_t v159 = v38;
  uint64_t v42 = sub_25B290160();
  os_log_type_t v43 = sub_25B2908A0();
  BOOL v44 = os_log_type_enabled(v42, v43);
  uint64_t v149 = isUniquelyReferenced_nonNull_native;
  uint64_t v147 = a6;
  if (v44)
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v143 = swift_slowAlloc();
    uint64_t aBlock = v143;
    *(_DWORD *)uint64_t v45 = 136446466;
    sub_25B20A4B0(&qword_26A4DAFD8, MEMORY[0x263F06EA8]);
    uint64_t v46 = sub_25B290DB0();
    uint64_t v174 = sub_25B288E98(v46, v47, &aBlock);
    uint64_t v48 = v172;
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    uint64_t v146 = *(void (**)(char *, uint64_t))(v48 + 8);
    v146(v27, v41);
    *(_WORD *)(v45 + 12) = 2082;
    uint64_t v174 = a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v49 = sub_25B290600();
    uint64_t v174 = sub_25B288E98(v49, v50, &aBlock);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v42, v43, "Sending file attributes for URL %{public}s to %{public}s", (uint8_t *)v45, 0x16u);
    uint64_t v51 = v143;
    swift_arrayDestroy();
    MEMORY[0x261160890](v51, -1, -1);
    uint64_t v52 = v45;
    char isUniquelyReferenced_nonNull_native = v149;
    MEMORY[0x261160890](v52, -1, -1);
  }
  else
  {
    uint64_t v146 = *(void (**)(char *, uint64_t))(v39 + 8);
    v146(v27, v41);

    swift_unknownObjectRelease_n();
  }
  uint64_t v62 = v170;
  uint64_t v63 = v169;
  uint64_t v64 = v151;
  sub_25B290010();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v18, 1, v62) == 1)
  {
    sub_25B116DE0((uint64_t)v18, &qword_26B33F200);
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_25B290160();
    os_log_type_t v66 = sub_25B290880();
    if (os_log_type_enabled(v65, v66))
    {
      unint64_t v67 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      uint64_t aBlock = v68;
      *(_DWORD *)unint64_t v67 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v174 = sub_25B288E98(v64, v36, &aBlock);
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25B107000, v65, v66, "Cannot create UUID from sender device ID: %{public}s", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v68, -1, -1);
      MEMORY[0x261160890](v67, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v85 = v150;
    if (v150)
    {
      uint64_t v86 = swift_allocObject();
      *(void *)(v86 + 16) = v85;
      *(void *)(v86 + 24) = isUniquelyReferenced_nonNull_native;
      uint64_t v180 = sub_25B20AB40;
      uint64_t v181 = v86;
      uint64_t aBlock = MEMORY[0x263EF8330];
      unint64_t v177 = 1107296256;
      unint64_t v178 = sub_25B10F584;
      uint64_t v179 = (ValueMetadata *)&block_descriptor_140;
      uint64_t v87 = _Block_copy(&aBlock);
      swift_retain_n();
      uint64_t v59 = v160;
      sub_25B290340();
      uint64_t v174 = MEMORY[0x263F8EE78];
      sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
      sub_25B1A8F44();
      uint64_t v88 = v161;
      uint64_t v89 = v171;
      sub_25B290A00();
      MEMORY[0x26115F250](0, v59, v88, v87);
      _Block_release(v87);
      sub_25B207D70(v85);
      (*(void (**)(char *, uint64_t))(v164 + 8))(v88, v89);
LABEL_20:
      (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v162 + 8))(v59, v163);
      swift_release();
    }
    return;
  }
  swift_bridgeObjectRelease();
  uint64_t v163 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
  v163(v168, v18, v62);
  uint64_t v175 = MEMORY[0x263F8EE80];
  uint64_t v69 = 0;
  URL.extendedAttributeNames()();
  uint64_t v164 = v63 + 32;
  uint64_t v90 = *(void *)(v70 + 16);
  if (!v90)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  uint64_t v162 = v70;
  uint64_t v91 = (uint64_t *)(v70 + 40);
  while (1)
  {
    uint64_t v27 = (char *)*(v91 - 1);
    a6 = *v91;
    MEMORY[0x270FA5388](v70);
    swift_bridgeObjectRetain();
    sub_25B28FE50();
    if (v69)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      os_log_type_t v71 = v69;
      uint64_t v69 = 0;
      BOOL v72 = v148;
      uint64_t v73 = v167;
      v144(v148, v173, v167);
      id v74 = v71;
      id v75 = v71;
      uint64_t v76 = sub_25B290160();
      os_log_type_t v77 = sub_25B290880();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = swift_slowAlloc();
        unint64_t v173 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = (uint64_t)v173;
        *(_DWORD *)uint64_t v78 = 136446466;
        sub_25B20A4B0(&qword_26A4DAFD8, MEMORY[0x263F06EA8]);
        uint64_t v79 = sub_25B290DB0();
        uint64_t v174 = sub_25B288E98(v79, v80, &aBlock);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        v146(v72, v73);
        *(_WORD *)(v78 + 12) = 2082;
        uint64_t v174 = (uint64_t)v71;
        id v81 = v71;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F390);
        uint64_t v82 = sub_25B290600();
        uint64_t v174 = sub_25B288E98(v82, v83, &aBlock);
        sub_25B2909C0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_25B107000, v76, v77, "Could not fetch extended attributes for URL %{public}s; error: %{public}s",
          (uint8_t *)v78,
          0x16u);
        uint64_t v84 = (uint64_t)v173;
        swift_arrayDestroy();
        MEMORY[0x261160890](v84, -1, -1);
        MEMORY[0x261160890](v78, -1, -1);
      }
      else
      {

        v146(v72, v73);
      }
LABEL_40:
      uint64_t v108 = sub_25B290160();
      os_log_type_t v109 = sub_25B2908A0();
      if (os_log_type_enabled(v108, v109))
      {
        unint64_t v110 = (uint8_t *)swift_slowAlloc();
        uint64_t v111 = swift_slowAlloc();
        uint64_t aBlock = v111;
        *(_DWORD *)unint64_t v110 = 136446210;
        unint64_t v173 = v110 + 4;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v112 = sub_25B2904E0();
        unint64_t v114 = v113;
        swift_bridgeObjectRelease();
        uint64_t v174 = sub_25B288E98(v112, v114, &aBlock);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25B107000, v108, v109, "Attributes: %{public}s", v110, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261160890](v111, -1, -1);
        MEMORY[0x261160890](v110, -1, -1);
      }

      uint64_t v115 = v150;
      uint64_t v116 = v147;
      uint64_t v117 = v158;
      swift_beginAccess();
      uint64_t v118 = v175;
      uint64_t v179 = &type metadata for NetworkMessenger.ExtendedAttributes;
      uint64_t v180 = (uint64_t (*)())sub_25B207D80();
      uint64_t aBlock = v118;
      type metadata accessor for PropertyListTypeEncoder();
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = 0;
      *(unsigned char *)(inited + 24) = 1;
      swift_bridgeObjectRetain();
      uint64_t v120 = (void *)sub_25B281964(&aBlock);
      if (!v69)
      {
        uint64_t v121 = sub_25B2851A4(v120);
        unint64_t v123 = v122;
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
        uint64_t v124 = *(void (**)(char *, uint64_t, uint64_t))(v169 + 16);
        unint64_t v125 = v170;
        v124(v165, v157, v170);
        v124(v117, (uint64_t)v168, v125);
        LODWORD(v125) = 0;
        switch(v123 >> 62)
        {
          case 1uLL:
            if (!__OFSUB__(HIDWORD(v121), v121))
            {
              unint64_t v125 = HIDWORD(v121) - (int)v121;
LABEL_48:
              if ((v125 & 0x8000000000000000) == 0 && !HIDWORD(v125))
              {
LABEL_50:
                unint64_t v173 = (uint8_t *)v121;
                uint64_t v128 = v115;
                uint64_t v129 = v116;
                if (qword_26A4DA040 != -1) {
                  swift_once();
                }
                uint64_t v130 = v170;
                uint64_t v131 = __swift_project_value_buffer(v170, (uint64_t)qword_26A4EB1F8);
                uint64_t v132 = (uint64_t)v156;
                v124(v156, v131, v130);
                uint64_t v133 = (int *)v153;
                *(_DWORD *)(v132 + *(int *)(v153 + 20)) = 72;
                uint64_t v134 = (void (*)(uint64_t, char *, uint64_t))v163;
                v163((char *)(v132 + v133[6]), v165, v130);
                v134(v132 + v133[7], v117, v130);
                *(_DWORD *)(v132 + v133[8]) = v125;
                *(unsigned char *)(v132 + v133[9]) = 2;
                *(_DWORD *)(v132 + v133[10]) = v154;
                *(_DWORD *)(v132 + v133[11]) = v155;
                *(unsigned char *)(v132 + v133[12]) = v152;
                uint64_t v135 = sub_25B1D142C();
                unint64_t v137 = v136;
                uint64_t v138 = v129;
                uint64_t v139 = v166;
                sub_25B1F00B4(v135, v136, v129, 0, 0);
                uint64_t v140 = (void *)swift_allocObject();
                v140[2] = v139;
                v140[3] = v128;
                v140[4] = v149;
                swift_retain();
                sub_25B207E2C(v128);
                uint64_t v141 = (uint64_t)v173;
                sub_25B1F00B4((uint64_t)v173, v123, v138, (uint64_t)sub_25B207E1C, (uint64_t)v140);
                swift_release();
                sub_25B10DFF0(v135, v137);
                sub_25B10DFF0(v141, v123);
                sub_25B207870(v132, type metadata accessor for NetworkSyncHeader);
                (*(void (**)(char *, uint64_t))(v169 + 8))(v168, v130);
                swift_bridgeObjectRelease();
                return;
              }
LABEL_62:
              sub_25B290BB0();
              __break(1u);
              JUMPOUT(0x25B1F3E68);
            }
            __break(1u);
LABEL_59:
            __break(1u);
            break;
          case 2uLL:
            uint64_t v127 = *(void *)(v121 + 16);
            uint64_t v126 = *(void *)(v121 + 24);
            unint64_t v125 = v126 - v127;
            if (!__OFSUB__(v126, v127)) {
              goto LABEL_48;
            }
            goto LABEL_59;
          case 3uLL:
            goto LABEL_50;
          default:
            LODWORD(v125) = BYTE6(v123);
            goto LABEL_50;
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
      swift_unexpectedError();
      __break(1u);
LABEL_61:
      sub_25B291190();
      __break(1u);
      goto LABEL_62;
    }
    uint64_t v171 = 0;
    uint64_t v94 = v90;
    a7 = aBlock;
    uint64_t v18 = (char *)v177;
    sub_25B114300(aBlock, v177);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v95 = v175;
    uint64_t aBlock = v175;
    unint64_t v36 = sub_25B18A634((uint64_t)v27, a6);
    uint64_t v97 = *(void *)(v95 + 16);
    BOOL v98 = (v96 & 1) == 0;
    uint64_t v99 = v97 + v98;
    if (__OFADD__(v97, v98))
    {
      __break(1u);
LABEL_55:
      swift_once();
      goto LABEL_3;
    }
    char v100 = v96;
    if (*(void *)(v95 + 24) < v99) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      char isUniquelyReferenced_nonNull_native = aBlock;
      if ((v96 & 1) == 0) {
        goto LABEL_33;
      }
    }
    else
    {
      sub_25B195714();
      char isUniquelyReferenced_nonNull_native = aBlock;
      if ((v100 & 1) == 0) {
        goto LABEL_33;
      }
    }
LABEL_23:
    uint64_t v92 = *(void *)(isUniquelyReferenced_nonNull_native + 56) + 16 * v36;
    sub_25B10DFF0(*(void *)v92, *(void *)(v92 + 8));
    *(void *)uint64_t v92 = a7;
    *(void *)(v92 + 8) = v18;
LABEL_24:
    v91 += 2;
    uint64_t v175 = isUniquelyReferenced_nonNull_native;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v70 = sub_25B10DFF0(a7, (unint64_t)v18);
    uint64_t v90 = v94 - 1;
    BOOL v93 = v94 == 1;
    uint64_t v69 = (void *)v171;
    if (v93) {
      goto LABEL_39;
    }
  }
  sub_25B1911AC(v99, isUniquelyReferenced_nonNull_native);
  unint64_t v101 = sub_25B18A634((uint64_t)v27, a6);
  if ((v100 & 1) != (v102 & 1)) {
    goto LABEL_61;
  }
  unint64_t v36 = v101;
  char isUniquelyReferenced_nonNull_native = aBlock;
  if (v100) {
    goto LABEL_23;
  }
LABEL_33:
  *(void *)(isUniquelyReferenced_nonNull_native + 8 * (v36 >> 6) + 64) |= 1 << v36;
  os_log_type_t v103 = (void *)(*(void *)(isUniquelyReferenced_nonNull_native + 48) + 16 * v36);
  *os_log_type_t v103 = v27;
  v103[1] = a6;
  unint64_t v104 = (uint64_t *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + 16 * v36);
  *unint64_t v104 = a7;
  v104[1] = (uint64_t)v18;
  uint64_t v105 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
  BOOL v106 = __OFADD__(v105, 1);
  uint64_t v107 = v105 + 1;
  if (!v106)
  {
    *(void *)(isUniquelyReferenced_nonNull_native + 16) = v107;
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
  __break(1u);
LABEL_57:
  swift_once();
LABEL_6:
  uint64_t v53 = sub_25B290190();
  __swift_project_value_buffer(v53, (uint64_t)qword_26A4EB168);
  unint64_t v54 = sub_25B290160();
  os_log_type_t v55 = sub_25B290880();
  if (os_log_type_enabled(v54, v55))
  {
    unint64_t v56 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v56 = 0;
    _os_log_impl(&dword_25B107000, v54, v55, "Cannot send messages before we have a local device ID", v56, 2u);
    MEMORY[0x261160890](v56, -1, -1);
  }

  if (a7)
  {
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = a7;
    *(void *)(v57 + 24) = isUniquelyReferenced_nonNull_native;
    uint64_t v180 = sub_25B20AB40;
    uint64_t v181 = v57;
    uint64_t aBlock = MEMORY[0x263EF8330];
    unint64_t v177 = 1107296256;
    unint64_t v178 = sub_25B10F584;
    uint64_t v179 = (ValueMetadata *)&block_descriptor_134;
    id v58 = _Block_copy(&aBlock);
    swift_retain_n();
    uint64_t v59 = v160;
    sub_25B290340();
    uint64_t v174 = MEMORY[0x263F8EE78];
    sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1A8F44();
    id v60 = v161;
    uint64_t v61 = v171;
    sub_25B290A00();
    MEMORY[0x26115F250](0, v59, v60, v58);
    _Block_release(v58);
    sub_25B207D70(a7);
    (*(void (**)(char *, uint64_t))(v164 + 8))(v60, v61);
    goto LABEL_20;
  }
}

uint64_t sub_25B1F3E78(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, int a10, int a11, NSObject *a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v132 = a8;
  uint64_t v131 = a7;
  uint64_t v148 = a6;
  uint64_t v149 = a5;
  uint64_t v147 = a3;
  int v130 = a2;
  uint64_t v127 = a1;
  uint64_t v15 = sub_25B290320();
  uint64_t v142 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v139 = (char *)&v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_25B290360();
  uint64_t v140 = *(void *)(v17 - 8);
  uint64_t v141 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v138 = (char *)&v122 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_25B290080();
  uint64_t v133 = *(void *)(v134 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v134);
  uint64_t v145 = (char *)&v122 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  os_log_type_t v144 = (void (*)(char *, uint64_t, uint64_t))((char *)&v122 - v21);
  uint64_t v22 = (int *)type metadata accessor for NetworkSyncHeader(0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_25B28FEA0();
  uint64_t v150 = *(NSObject **)(v25 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v135 = (char *)&v122 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v122 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v129 = (char *)&v122 - v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFE0);
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v34 = (char *)&v122 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_25B290300();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v126 = (char *)&v122 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v122 - v40;
  MEMORY[0x270FA5388](v39);
  uint64_t v146 = (char *)&v122 - v42;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v44 = Strong;
    uint64_t v137 = a14;
    uint64_t v136 = a13;
    sub_25B187628(v147, (uint64_t)v34, &qword_26A4DAFE0);
    LODWORD(v147) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
    uint64_t v143 = v15;
    if (v147 == 1)
    {
      sub_25B116DE0((uint64_t)v34, &qword_26A4DAFE0);
      if (qword_26A4D98C8 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_25B290190();
      uint64_t v46 = __swift_project_value_buffer(v45, (uint64_t)qword_26A4EB168);
      uint64_t isa = (void (*)(char *, uint64_t, uint64_t))v150[2].isa;
      uint64_t v48 = v129;
      isa(v129, v148, v25);
      uint64_t v49 = v149;
      swift_retain_n();
      unint64_t v50 = sub_25B290160();
      os_log_type_t v51 = sub_25B2908A0();
      LODWORD(v146) = v51;
      uint64_t v52 = v25;
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v133 = a15;
        uint64_t v53 = swift_slowAlloc();
        os_log_type_t v144 = isa;
        uint64_t v145 = (char *)v46;
        uint64_t v54 = v53;
        uint64_t v134 = swift_slowAlloc();
        uint64_t v151 = v49;
        uint64_t aBlock = v134;
        *(_DWORD *)uint64_t v54 = 136315906;
        sub_25B2902B0();
        swift_retain();
        uint64_t v55 = sub_25B290600();
        uint64_t v128 = v44;
        uint64_t v151 = sub_25B288E98(v55, v56, &aBlock);
        sub_25B2909C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v54 + 12) = 2050;
        uint64_t v151 = v133;
        sub_25B2909C0();
        *(_WORD *)(v54 + 22) = 2050;
        uint64_t v151 = v127;
        sub_25B2909C0();
        *(_WORD *)(v54 + 32) = 2082;
        sub_25B20A4B0(&qword_26A4DAFD8, MEMORY[0x263F06EA8]);
        uint64_t v57 = sub_25B290DB0();
        uint64_t v151 = sub_25B288E98(v57, v58, &aBlock);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        uint64_t v59 = (void (*)(char *, uint64_t))v150[1].isa;
        id v60 = v48;
        uint64_t v61 = v52;
        v59(v60, v52);
        _os_log_impl(&dword_25B107000, v50, (os_log_type_t)v146, "%s; file size: %{public}ld; bytes sent: %{public}ld; file path: %{public}s",
          (uint8_t *)v54,
          0x2Au);
        uint64_t v62 = v134;
        swift_arrayDestroy();
        MEMORY[0x261160890](v62, -1, -1);
        uint64_t v63 = v54;
        uint64_t isa = v144;
        MEMORY[0x261160890](v63, -1, -1);
      }
      else
      {
        swift_release_n();
        uint64_t v59 = (void (*)(char *, uint64_t))v150[1].isa;
        uint64_t v82 = v48;
        uint64_t v61 = v52;
        v59(v82, v52);
      }

      unint64_t v83 = v135;
      if ((v130 & 1) == 0) {
        goto LABEL_23;
      }
      isa(v135, v148, v61);
      uint64_t v84 = v149;
      swift_retain_n();
      uint64_t v85 = sub_25B290160();
      os_log_type_t v86 = sub_25B2908A0();
      if (os_log_type_enabled(v85, v86))
      {
        uint64_t v87 = swift_slowAlloc();
        uint64_t v148 = swift_slowAlloc();
        uint64_t v151 = v84;
        uint64_t aBlock = v148;
        *(_DWORD *)uint64_t v87 = 136315394;
        sub_25B2902B0();
        swift_retain();
        uint64_t v88 = sub_25B290600();
        uint64_t v151 = sub_25B288E98(v88, v89, &aBlock);
        sub_25B2909C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v87 + 12) = 2082;
        sub_25B20A4B0(&qword_26A4DAFD8, MEMORY[0x263F06EA8]);
        uint64_t v90 = v135;
        uint64_t v91 = sub_25B290DB0();
        uint64_t v151 = sub_25B288E98(v91, v92, &aBlock);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        v59(v90, v61);
        _os_log_impl(&dword_25B107000, v85, v86, "%s; Send completed for %{public}s", (uint8_t *)v87, 0x16u);
        uint64_t v93 = v148;
        swift_arrayDestroy();
        MEMORY[0x261160890](v93, -1, -1);
        MEMORY[0x261160890](v87, -1, -1);
      }
      else
      {
        swift_release_n();
        v59(v83, v61);
      }

      uint64_t v113 = v141;
      uint64_t v112 = v142;
      uint64_t v114 = v137;
      uint64_t v115 = v136;
      uint64_t v116 = swift_allocObject();
      *(void *)(v116 + 16) = v115;
      *(void *)(v116 + 24) = v114;
      uint64_t v156 = sub_25B207D20;
      uint64_t v157 = v116;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v153 = 1107296256;
      int v154 = sub_25B10F584;
      int v155 = &block_descriptor_122_0;
      uint64_t v117 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v118 = v138;
      sub_25B290340();
      uint64_t v151 = MEMORY[0x263F8EE78];
      sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
      sub_25B1A8F44();
      unint64_t v119 = v139;
      uint64_t v120 = v143;
      sub_25B290A00();
      MEMORY[0x26115F250](0, v118, v119, v117);
      _Block_release(v117);
      (*(void (**)(char *, uint64_t))(v112 + 8))(v119, v120);
      (*(void (**)(char *, uint64_t))(v140 + 8))(v118, v113);
LABEL_22:
      swift_release();
LABEL_23:
      swift_release();
      return v147 == 1;
    }
    uint64_t v128 = v44;
    uint64_t v64 = v146;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v146, v34, v35);
    uint64_t v65 = v36;
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    LODWORD(v135) = a11;
    uint64_t v66 = sub_25B290190();
    __swift_project_value_buffer(v66, (uint64_t)qword_26A4EB168);
    unint64_t v67 = v150;
    ((void (*)(char *, uint64_t, uint64_t))v150[2].isa)(v30, v148, v25);
    uint64_t v148 = v65;
    uint64_t v129 = *(char **)(v65 + 16);
    ((void (*)(char *, char *, uint64_t))v129)(v41, v64, v35);
    uint64_t v68 = v35;
    uint64_t v69 = v149;
    swift_retain_n();
    uint64_t v70 = sub_25B290160();
    os_log_type_t v71 = sub_25B290880();
    int v130 = v71;
    BOOL v72 = os_log_type_enabled(v70, v71);
    unint64_t v125 = (char *)v68;
    if (v72)
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v127 = swift_slowAlloc();
      uint64_t v151 = v69;
      uint64_t aBlock = v127;
      *(_DWORD *)uint64_t v73 = 136315650;
      uint64_t v122 = v73 + 4;
      sub_25B2902B0();
      uint64_t v123 = v25;
      os_log_t v124 = v70;
      swift_retain();
      uint64_t v74 = sub_25B290600();
      uint64_t v151 = sub_25B288E98(v74, v75, &aBlock);
      sub_25B2909C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 12) = 2082;
      sub_25B20A4B0(&qword_26A4DAFD8, MEMORY[0x263F06EA8]);
      uint64_t v76 = v123;
      uint64_t v77 = sub_25B290DB0();
      uint64_t v151 = sub_25B288E98(v77, v78, &aBlock);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v150[1].isa)(v30, v76);
      *(_WORD *)(v73 + 22) = 2082;
      uint64_t v30 = v125;
      ((void (*)(char *, char *, char *))v129)(v126, v41, v125);
      uint64_t v79 = sub_25B290600();
      uint64_t v151 = sub_25B288E98(v79, v80, &aBlock);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v148 + 8))(v41, v30);
      uint64_t v70 = v124;
      _os_log_impl(&dword_25B107000, v124, (os_log_type_t)v130, "%s; Failed to send file %{public}s error: %{public}s",
        (uint8_t *)v73,
        0x20u);
      id v81 = v127;
      swift_arrayDestroy();
      MEMORY[0x261160890](v81, -1, -1);
      MEMORY[0x261160890](v73, -1, -1);
    }
    else
    {
      swift_release_n();
      uint64_t v94 = (void (*)(char *, uint64_t))v67[1].isa;
      id v81 = v67 + 1;
      v94(v30, v25);
      (*(void (**)(char *, uint64_t))(v148 + 8))(v41, v68);
    }

    uint64_t v95 = v134;
    uint64_t v96 = v133;
    uint64_t v97 = *(void (**)(char *, uint64_t, uint64_t))(v133 + 16);
    v97((char *)v144, v131, v134);
    v97(v145, v132, v95);
    int v98 = v135 + 1;
    if (v135 == -1)
    {
      __break(1u);
    }
    else
    {
      id v81 = a12;
      LODWORD(v30) = a10;
      LOBYTE(v70) = a9;
      if (qword_26A4DA040 == -1)
      {
LABEL_18:
        uint64_t v99 = __swift_project_value_buffer(v95, (uint64_t)qword_26A4EB1F8);
        v97(v24, v99, v95);
        *(_DWORD *)&v24[v22[5]] = 72;
        char v100 = *(void (**)(char *, char *, uint64_t))(v96 + 32);
        v100(&v24[v22[6]], (char *)v144, v95);
        v100(&v24[v22[7]], v145, v95);
        *(_DWORD *)&v24[v22[8]] = 0;
        v24[v22[9]] = 3;
        *(_DWORD *)&v24[v22[10]] = v30;
        *(_DWORD *)&v24[v22[11]] = v98;
        v24[v22[12]] = (char)v70;
        uint64_t v101 = sub_25B1D142C();
        unint64_t v103 = v102;
        unint64_t v104 = v81;
        uint64_t v105 = v128;
        sub_25B1F00B4(v101, v102, v104, 0, 0);
        uint64_t v150 = *(NSObject **)(v105 + 32);
        uint64_t v106 = swift_allocObject();
        uint64_t v107 = v137;
        *(void *)(v106 + 16) = v136;
        *(void *)(v106 + 24) = v107;
        uint64_t v156 = sub_25B207D50;
        uint64_t v157 = v106;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v153 = 1107296256;
        int v154 = sub_25B10F584;
        int v155 = &block_descriptor_128;
        uint64_t v108 = _Block_copy(&aBlock);
        swift_retain();
        os_log_type_t v109 = v138;
        sub_25B290340();
        uint64_t v151 = MEMORY[0x263F8EE78];
        sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
        sub_25B1A8F44();
        unint64_t v110 = v139;
        uint64_t v111 = v143;
        sub_25B290A00();
        MEMORY[0x26115F250](0, v109, v110, v108);
        _Block_release(v108);
        sub_25B10DFF0(v101, v103);
        (*(void (**)(char *, uint64_t))(v142 + 8))(v110, v111);
        (*(void (**)(char *, uint64_t))(v140 + 8))(v109, v141);
        sub_25B207870((uint64_t)v24, type metadata accessor for NetworkSyncHeader);
        (*(void (**)(char *, char *))(v148 + 8))(v146, v125);
        goto LABEL_22;
      }
    }
    swift_once();
    goto LABEL_18;
  }
  uint64_t result = sub_25B290BC0();
  __break(1u);
  return result;
}

void sub_25B1F5130(void (*a1)(void *, uint64_t), uint64_t a2, char a3)
{
  sub_25B2075D4();
  uint64_t v5 = (void *)swift_allocError();
  unsigned char *v6 = a3;
  a1(v5, 1);
}

uint64_t sub_25B1F51A4(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_25B290320();
  uint64_t v21 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_25B290360();
  uint64_t v12 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  *(void *)(v15 + 24) = a5;
  *(void *)(v15 + 32) = a1;
  char v16 = a2 & 1;
  *(unsigned char *)(v15 + 40) = a2 & 1;
  aBlock[4] = sub_25B207EA4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_149_0;
  uint64_t v17 = _Block_copy(aBlock);
  sub_25B207E2C(a4);
  sub_25B116CFC(a1, v16);
  sub_25B290340();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B1A8F44();
  sub_25B290A00();
  MEMORY[0x26115F250](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  return swift_release();
}

void sub_25B1F546C(void (*a1)(void *, uint64_t), uint64_t a2, void *a3, char a4)
{
  if (a1)
  {
    if (a4)
    {
      sub_25B207E2C((uint64_t)a1);
      sub_25B116CFC(a3, 1);
      a1(a3, 1);
      sub_25B207D70((uint64_t)a1);
      sub_25B116D08(a3, 1);
    }
    else
    {
      swift_retain();
      a1((void *)1, 0);
      sub_25B207D70((uint64_t)a1);
    }
  }
}

uint64_t sub_25B1F5540(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25B290000();
  uint64_t v43 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB000);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB008);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_25B290410();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (uint64_t *)((char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(void **)(v2 + 24);
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F8F0E0], v15);
  id v20 = v19;
  LOBYTE(v19) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    uint64_t v22 = (uint64_t *)(v2 + 56);
    swift_beginAccess();
    swift_unknownObjectRetain();
    uint64_t v23 = swift_bridgeObjectRetain();
    sub_25B1E5978(v23, a1, (uint64_t)v14);
    swift_bridgeObjectRelease();
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB010);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v14, 1, v24) == 1)
    {
      uint64_t v25 = &qword_26A4DB008;
      uint64_t v26 = (uint64_t)v14;
    }
    else
    {
      uint64_t v27 = *v14;
      uint64_t v28 = v14[1];
      sub_25B207870((uint64_t)v14 + *(int *)(v24 + 48), type metadata accessor for NetworkMessenger.ExpiringConnection);
      swift_beginAccess();
      uint64_t v29 = *v22;
      uint64_t v30 = *(void *)(*v22 + 16);
      uint64_t v41 = v27;
      if (v30)
      {
        swift_bridgeObjectRetain();
        unint64_t v31 = sub_25B18A634(v27, v28);
        if (v32)
        {
          unint64_t v33 = v31;
          uint64_t v34 = *(void *)(v29 + 56);
          uint64_t v35 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
          uint64_t v36 = *(void *)(v35 - 8);
          uint64_t v40 = v4;
          uint64_t v37 = v36;
          sub_25B207948(v34 + *(void *)(v36 + 72) * v33, (uint64_t)v11, type metadata accessor for NetworkMessenger.ExpiringConnection);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v11, 0, 1, v35);
          uint64_t v4 = v40;
        }
        else
        {
          uint64_t v35 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v11, 1, 1, v35);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v35 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v11, 1, 1, v35);
      }
      swift_endAccess();
      type metadata accessor for NetworkMessenger.ExpiringConnection(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v11, 1, v35))
      {
        uint64_t v38 = v42;
        sub_25B28FFD0();
        (*(void (**)(char *, char *, uint64_t))(v43 + 40))(&v11[*(int *)(v35 + 20)], v38, v4);
      }
      sub_25B187628((uint64_t)v11, (uint64_t)v9, &qword_26A4DB000);
      swift_beginAccess();
      sub_25B20EEAC((uint64_t)v9, v41, v28);
      swift_endAccess();
      uint64_t v26 = (uint64_t)v11;
      uint64_t v25 = &qword_26A4DB000;
    }
    sub_25B116DE0(v26, v25);
    sub_25B203C70();
    return sub_25B204350();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B1F5AA0(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = sub_25B2903B0();
  uint64_t v12 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B290390();
  uint64_t v15 = sub_25B290370();
  nw_content_context_t v19 = (nw_content_context_t)*MEMORY[0x263F14440];
  uint64_t v16 = (void *)swift_allocObject();
  long long v16[2] = a4;
  v16[3] = a3;
  v16[4] = a5;
  v16[5] = a6;
  v16[6] = a7;
  aBlock[4] = sub_25B207F7C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B1F6138;
  aBlock[3] = &block_descriptor_161;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  sub_25B207E2C(a6);
  swift_release();
  nw_connection_send(a3, v15, v19, 1, v17);
  _Block_release(v17);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v20);
}

void sub_25B1F5C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  sub_25B1F5540(a3);
  if (!a1)
  {
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_25B290190();
    __swift_project_value_buffer(v19, (uint64_t)qword_26A4EB168);
    swift_unknownObjectRetain_n();
    uint64_t v20 = sub_25B290160();
    os_log_type_t v21 = sub_25B2908A0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v26 = v23;
      *(_DWORD *)uint64_t v22 = 134349314;
      sub_25B2909C0();
      *(_WORD *)(v22 + 12) = 2082;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v24 = sub_25B290600();
      sub_25B288E98(v24, v25, &v26);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v20, v21, "Data (sendID:%{public}llu) sent to: %{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v23, -1, -1);
      MEMORY[0x261160890](v22, -1, -1);

      if (!a5) {
        return;
      }
    }
    else
    {

      swift_unknownObjectRelease_n();
      if (!a5) {
        return;
      }
    }
    a5(1, 0);
    return;
  }
  uint64_t v7 = qword_26A4D98C8;
  swift_unknownObjectRetain();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_25B290190();
  __swift_project_value_buffer(v8, (uint64_t)qword_26A4EB168);
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v9 = sub_25B290160();
  os_log_type_t v10 = sub_25B290880();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v26 = v12;
    *(_DWORD *)uint64_t v11 = 134349570;
    sub_25B2909C0();
    *(_WORD *)(v11 + 12) = 2082;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFF8);
    uint64_t v13 = sub_25B290600();
    sub_25B288E98(v13, v14, &v26);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2082;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v15 = sub_25B290600();
    sub_25B288E98(v15, v16, &v26);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v9, v10, "Failed to send message data (sendID:%{public}llu): %{public}s to %{public}s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v12, -1, -1);
    MEMORY[0x261160890](v11, -1, -1);

    if (a5)
    {
LABEL_6:
      sub_25B207F8C();
      uint64_t v17 = (void *)swift_allocError();
      *uint64_t v18 = 0;
      a5((uint64_t)v17, 1);
      swift_unknownObjectRelease();

      return;
    }
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
    if (a5) {
      goto LABEL_6;
    }
  }
  swift_unknownObjectRelease();
}

uint64_t sub_25B1F6138(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_25B1F6198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(NSObject **)(a3 + 24);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a4;
  *(void *)(v8 + 24) = a5;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_25B20699C;
  *(void *)(v9 + 24) = v8;
  v12[4] = sub_25B117398;
  v12[5] = v9;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  v12[2] = sub_25B10D184;
  v12[3] = &block_descriptor_32;
  os_log_type_t v10 = _Block_copy(v12);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v7, v10);
  _Block_release(v10);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v7) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B1F62F0(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB000);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (NSObject **)((char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v6);
  uint64_t v102 = (uint64_t)&v93 - v9;
  uint64_t v10 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  uint64_t v11 = *(char **)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v95 = (uint64_t)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v93 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (nw_connection_t *)((char *)&v93 - v17);
  uint64_t v19 = sub_25B290080();
  uint64_t v96 = *(void *)(v19 - 8);
  uint64_t v97 = v19;
  MEMORY[0x270FA5388](v19);
  os_log_type_t v21 = ((char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t isEscapingClosureAtFileLocation = result;
  uint64_t v94 = v18;
  uint64_t v101 = v10;
  if (qword_26A4D98C8 != -1) {
    goto LABEL_38;
  }
  while (1)
  {
    uint64_t v24 = sub_25B290190();
    uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_26A4EB168);
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    uint64_t v100 = v25;
    uint64_t v26 = sub_25B290160();
    os_log_type_t v27 = sub_25B2908A0();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v103 = isEscapingClosureAtFileLocation;
    int v98 = v8;
    uint64_t v99 = v11;
    uint64_t v93 = v16;
    if (v28)
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v105 = v30;
      uint64_t aBlock = a3;
      *(_DWORD *)uint64_t v29 = 136446722;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B30);
      uint64_t v31 = sub_25B290600();
      uint64_t aBlock = sub_25B288E98(v31, v32, &v105);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      uint64_t aBlock = (uint64_t)a1;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v33 = sub_25B290600();
      uint64_t aBlock = sub_25B288E98(v33, v34, &v105);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2082;
      swift_getObjectType();
      uint64_t aBlock = sub_25B1F734C();
      uint64_t v107 = v35;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E80);
      uint64_t v36 = sub_25B290600();
      uint64_t aBlock = sub_25B288E98(v36, v37, &v105);
      uint64_t isEscapingClosureAtFileLocation = v103;
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v26, v27, "%{public}s; Received new connection: %{public}s; DeviceID: %{public}s",
        (uint8_t *)v29,
        0x20u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v30, -1, -1);
      MEMORY[0x261160890](v29, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();
    }
    swift_getObjectType();
    uint64_t v104 = sub_25B1F734C();
    uint64_t v39 = v101;
    if (v38)
    {
      unint64_t v40 = v38;
      goto LABEL_10;
    }
    if (*(unsigned char *)(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType) == 1) {
      break;
    }
    sub_25B290070();
    unint64_t v16 = (char *)sub_25B290020();
    a3 = v71;
    (*(void (**)(NSObject *, uint64_t))(v96 + 8))(v21, v97);
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain_n();
    BOOL v72 = sub_25B290160();
    os_log_type_t v73 = sub_25B2908A0();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = swift_slowAlloc();
      uint64_t v104 = swift_slowAlloc();
      uint64_t v105 = (uint64_t)a1;
      uint64_t aBlock = v104;
      *(_DWORD *)uint64_t v74 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v75 = sub_25B290600();
      uint64_t v105 = sub_25B288E98(v75, v76, &aBlock);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_25B288E98((uint64_t)v16, a3, &aBlock);
      uint64_t isEscapingClosureAtFileLocation = v103;
      sub_25B2909C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25B107000, v72, v73, "Unable to get DeviceID from connection: %{public}s; Using uuidString %{public}s instead",
        (uint8_t *)v74,
        0x16u);
      uint64_t v77 = v104;
      swift_arrayDestroy();
      MEMORY[0x261160890](v77, -1, -1);
      MEMORY[0x261160890](v74, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease_n();
    }
    uint64_t v87 = v98;
    uint64_t v88 = v99;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B28FFD0();
    *uint64_t v87 = a1;
    (*((void (**)(NSObject **, void, uint64_t, uint64_t))v88 + 7))(v87, 0, 1, v39);
    swift_beginAccess();
    sub_25B20EEAC((uint64_t)v87, (uint64_t)v16, a3);
    swift_endAccess();
    unint64_t v89 = *(NSObject ***)(isEscapingClosureAtFileLocation + 112);
    swift_retain();
    uint64_t id = nw_connection_get_id();
    os_log_type_t v21 = v89[2];
    uint64_t v91 = swift_allocObject();
    v91[2].uint64_t isa = (Class)v16;
    v91[3].uint64_t isa = (Class)a3;
    v91[4].uint64_t isa = (Class)id;
    v91[5].uint64_t isa = (Class)v89;
    uint64_t v8 = (NSObject **)swift_allocObject();
    _OWORD v8[2] = sub_25B20AB44;
    v8[3] = v91;
    unint64_t v110 = sub_25B117398;
    uint64_t v111 = (char *)v8;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v107 = 1107296256;
    uint64_t v108 = sub_25B10D184;
    os_log_type_t v109 = &block_descriptor_320;
    unint64_t v92 = _Block_copy(&aBlock);
    uint64_t v11 = v111;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v21, v92);
    _Block_release(v92);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      goto LABEL_33;
    }
    __break(1u);
LABEL_38:
    swift_once();
  }
  uint64_t v41 = *(os_unfair_lock_s **)(isEscapingClosureAtFileLocation
                             + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_terminusRemoteDeviceIDLock);
  uint64_t v42 = (uint64_t *)&v41[4];
  uint64_t v43 = v41 + 8;
  os_unfair_lock_lock(v41 + 8);
  sub_25B1E60EC(v42, &aBlock);
  uint64_t v44 = v43;
  uint64_t isEscapingClosureAtFileLocation = v103;
  os_unfair_lock_unlock(v44);
  unint64_t v40 = v107;
  uint64_t v104 = aBlock;
LABEL_10:
  swift_unknownObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v45 = sub_25B290160();
  os_log_type_t v46 = sub_25B2908A0();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t aBlock = v48;
    *(_DWORD *)uint64_t v47 = 136446722;
    if (*(unsigned char *)(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType)) {
      uint64_t v49 = 0xD000000000000016;
    }
    else {
      uint64_t v49 = 0x6920656369766544;
    }
    if (*(unsigned char *)(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType)) {
      unint64_t v50 = 0x800000025B29DBA0;
    }
    else {
      unint64_t v50 = 0xE900000000000064;
    }
    uint64_t v105 = sub_25B288E98(v49, v50, &aBlock);
    sub_25B2909C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v105 = sub_25B288E98(v104, v40, &aBlock);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v47 + 22) = 2082;
    uint64_t v105 = (uint64_t)a1;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v51 = sub_25B290600();
    uint64_t v105 = sub_25B288E98(v51, v52, &aBlock);
    uint64_t isEscapingClosureAtFileLocation = v103;
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v45, v46, "%{public}s %{public}s will be used for connection: %{public}s", (uint8_t *)v47, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v48, -1, -1);
    MEMORY[0x261160890](v47, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  uint64_t v53 = v99;
  swift_beginAccess();
  uint64_t v54 = *(void *)(isEscapingClosureAtFileLocation + 56);
  if (*(void *)(v54 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v55 = sub_25B18A634(v104, v40);
    if (v56)
    {
      uint64_t v57 = *(void *)(v54 + 56) + *((void *)v53 + 9) * v55;
      uint64_t v58 = v102;
      sub_25B207948(v57, v102, type metadata accessor for NetworkMessenger.ExpiringConnection);
      uint64_t v59 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v53 + 7);
      v59(v58, 0, 1, v39);
    }
    else
    {
      uint64_t v59 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v53 + 7);
      uint64_t v58 = v102;
      v59(v102, 1, 1, v39);
    }
    swift_bridgeObjectRelease();
    if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v53 + 6))(v58, 1, v39) != 1)
    {
      uint64_t v60 = v58;
      uint64_t v61 = v94;
      sub_25B20913C(v60, (uint64_t)v94, type metadata accessor for NetworkMessenger.ExpiringConnection);
      swift_endAccess();
      uint64_t v62 = (uint64_t)v93;
      sub_25B207948((uint64_t)v61, (uint64_t)v93, type metadata accessor for NetworkMessenger.ExpiringConnection);
      swift_bridgeObjectRetain_n();
      uint64_t v63 = sub_25B290160();
      os_log_type_t v64 = sub_25B2908A0();
      int v65 = v64;
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v66 = swift_slowAlloc();
        LODWORD(v100) = v65;
        uint64_t v67 = v66;
        uint64_t v102 = swift_slowAlloc();
        uint64_t aBlock = v102;
        *(_DWORD *)uint64_t v67 = 136446466;
        sub_25B207948(v62, v95, type metadata accessor for NetworkMessenger.ExpiringConnection);
        uint64_t v68 = sub_25B290600();
        uint64_t v105 = sub_25B288E98(v68, v69, &aBlock);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B207870(v62, type metadata accessor for NetworkMessenger.ExpiringConnection);
        *(_WORD *)(v67 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v105 = sub_25B288E98(v104, v40, &aBlock);
        uint64_t isEscapingClosureAtFileLocation = v103;
        sub_25B2909C0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25B107000, v63, (os_log_type_t)v100, "Canceling existing connection %{public}s for DeviceID %{public}s", (uint8_t *)v67, 0x16u);
        uint64_t v70 = v102;
        swift_arrayDestroy();
        MEMORY[0x261160890](v70, -1, -1);
        MEMORY[0x261160890](v67, -1, -1);
      }
      else
      {
        sub_25B207870(v62, type metadata accessor for NetworkMessenger.ExpiringConnection);

        swift_bridgeObjectRelease_n();
      }
      unint64_t v78 = v94;
      nw_connection_cancel(*v94);
      sub_25B207870((uint64_t)v78, type metadata accessor for NetworkMessenger.ExpiringConnection);
      uint64_t v39 = v101;
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v59 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v53 + 7);
    uint64_t v58 = v102;
    v59(v102, 1, 1, v39);
  }
  sub_25B116DE0(v58, &qword_26A4DB000);
  swift_endAccess();
LABEL_32:
  uint64_t v79 = v98;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_25B28FFD0();
  *uint64_t v79 = a1;
  v59((uint64_t)v79, 0, 1, v39);
  swift_beginAccess();
  uint64_t v80 = v104;
  sub_25B20EEAC((uint64_t)v79, v104, v40);
  swift_endAccess();
  uint64_t v81 = *(void *)(isEscapingClosureAtFileLocation + 112);
  swift_retain();
  uint64_t v82 = nw_connection_get_id();
  unint64_t v83 = *(NSObject **)(v81 + 16);
  uint64_t v84 = (void *)swift_allocObject();
  v84[2] = v80;
  v84[3] = v40;
  v84[4] = v82;
  v84[5] = v81;
  uint64_t v85 = swift_allocObject();
  *(void *)(v85 + 16) = sub_25B20AB44;
  *(void *)(v85 + 24) = v84;
  unint64_t v110 = sub_25B117398;
  uint64_t v111 = (char *)v85;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v107 = 1107296256;
  uint64_t v108 = sub_25B10D184;
  os_log_type_t v109 = &block_descriptor_331;
  os_log_type_t v86 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v83, v86);
  _Block_release(v86);
  LOBYTE(v86) = swift_isEscapingClosureAtFileLocation();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if ((v86 & 1) == 0)
  {
LABEL_33:
    sub_25B208878(a1);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_25B1F734C()
{
  nw_connection_copy_endpoint(v0);
  if (nw_endpoint_get_device_id())
  {
    uint64_t v1 = sub_25B290660();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v1;
}

void sub_25B1F73B4(int a1, uint64_t a2)
{
  unint64_t v3 = 0x26A4D9000uLL;
  if (a1 == 2)
  {
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_25B290190();
    __swift_project_value_buffer(v4, (uint64_t)qword_26A4EB168);
    swift_unknownObjectRetain_n();
    uint64_t v5 = sub_25B290160();
    os_log_type_t v6 = sub_25B2908A0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v31 = v8;
      *(_DWORD *)uint64_t v7 = 136446210;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B30);
      uint64_t v9 = sub_25B290600();
      sub_25B288E98(v9, v10, &v31);
      unint64_t v3 = 0x26A4D9000;
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v5, v6, "%{public}s; Listener is ready", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v8, -1, -1);
      uint64_t v11 = (uint64_t)v7;
      goto LABEL_10;
    }
  }
  else
  {
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_25B290190();
    __swift_project_value_buffer(v12, (uint64_t)qword_26A4EB168);
    swift_unknownObjectRetain_n();
    uint64_t v5 = sub_25B290160();
    os_log_type_t v13 = sub_25B290860();
    if (os_log_type_enabled(v5, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v31 = v15;
      *(_DWORD *)uint64_t v14 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B30);
      uint64_t v16 = sub_25B290600();
      sub_25B288E98(v16, v17, &v31);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      type metadata accessor for nw_listener_state_t(0);
      uint64_t v18 = sub_25B290600();
      sub_25B288E98(v18, v19, &v31);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v5, v13, "%{public}s; Listener state changed to %{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      uint64_t v20 = v15;
      unint64_t v3 = 0x26A4D9000;
      MEMORY[0x261160890](v20, -1, -1);
      uint64_t v11 = v14;
LABEL_10:
      MEMORY[0x261160890](v11, -1, -1);

      if (!a2) {
        return;
      }
      goto LABEL_13;
    }
  }

  swift_unknownObjectRelease_n();
  if (!a2) {
    return;
  }
LABEL_13:
  uint64_t v21 = *(void *)(v3 + 2248);
  swift_unknownObjectRetain();
  if (v21 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_25B290190();
  __swift_project_value_buffer(v22, (uint64_t)qword_26A4EB168);
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v23 = sub_25B290160();
  os_log_type_t v24 = sub_25B290880();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v31 = v26;
    *(_DWORD *)uint64_t v25 = 136446466;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B30);
    uint64_t v27 = sub_25B290600();
    sub_25B288E98(v27, v28, &v31);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFF8);
    uint64_t v29 = sub_25B290600();
    sub_25B288E98(v29, v30, &v31);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v23, v24, "%{public}s; Listener failed with error: %{public}s",
      (uint8_t *)v25,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v26, -1, -1);
    MEMORY[0x261160890](v25, -1, -1);
    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
  }
}

uint64_t sub_25B1F7948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B203BF8(a1, a2, a3);
}

void sub_25B1F7950()
{
  uint64_t v1 = sub_25B290410();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = (void *)v0[3];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F0E0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_7;
  }
  swift_beginAccess();
  if (*(void *)(v0[7] + 16)) {
    return;
  }
  uint64_t v7 = (void *)v0[12];
  if (!v7) {
    return;
  }
  objc_msgSend(v7, sel_invalidate);
  uint64_t v8 = (void *)v0[12];
  v0[12] = 0;

  if (v0[13])
  {
    swift_retain();
    sub_25B1D7F88();
    swift_release();
  }
  if (qword_26A4D98C8 != -1) {
    goto LABEL_12;
  }
LABEL_7:
  uint64_t v9 = sub_25B290190();
  __swift_project_value_buffer(v9, (uint64_t)qword_26A4EB168);
  unint64_t v10 = sub_25B290160();
  os_log_type_t v11 = sub_25B2908A0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_25B107000, v10, v11, "Invalidated prevent-sleep assertion", v12, 2u);
    MEMORY[0x261160890](v12, -1, -1);
  }
}

void sub_25B1F7B6C(NSObject *a1)
{
  uint64_t v3 = sub_25B290410();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (void *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v1 + 24);
  void *v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F0E0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    uint64_t v9 = swift_allocObject();
    swift_weakInit();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = a1;
    aBlock[4] = sub_25B209B78;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_25B1FB000;
    aBlock[3] = &block_descriptor_248;
    os_log_type_t v11 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_release();
    nw_connection_receive(a1, 0x14u, 0x14u, v11);
    _Block_release(v11);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25B1F7D4C(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v121 = a4;
  v129[4] = *MEMORY[0x263EF8340];
  uint64_t v10 = type metadata accessor for NetworkSyncHeaderPreamble(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v115 = &v103[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v103[-v13];
  uint64_t v114 = sub_25B2903B0();
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  uint64_t v16 = &v103[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_25B290190();
  uint64_t v116 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = &v103[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  int v110 = a3;
  uint64_t v112 = v16;
  uint64_t v117 = result;
  if (qword_26A4D98C8 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v17, (uint64_t)qword_26A4EB168);
  swift_unknownObjectRetain_n();
  uint64_t v22 = sub_25B290160();
  os_log_type_t v23 = sub_25B2908A0();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v119 = v21;
  uint64_t v120 = v19;
  uint64_t v118 = a1;
  os_log_type_t v109 = v14;
  uint64_t v107 = v10;
  if (v24)
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t aBlock = v26;
    *(_DWORD *)uint64_t v25 = 136446210;
    v129[0] = (uint64_t)a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v27 = sub_25B290600();
    v129[0] = sub_25B288E98(v27, v28, &aBlock);
    a1 = v118;
    uint64_t v21 = v119;
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v22, v23, "Received header preamble from: %{public}s", v25, 0xCu);
    swift_arrayDestroy();
    uint64_t v29 = v26;
    unint64_t v19 = v120;
    MEMORY[0x261160890](v29, -1, -1);
    MEMORY[0x261160890](v25, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t v30 = v121;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  id v31 = a1;
  swift_unknownObjectRetain_n();
  id v32 = v31;
  uint64_t v33 = sub_25B290160();
  int v34 = sub_25B2908A0();
  BOOL v35 = os_log_type_enabled(v33, (os_log_type_t)v34);
  id v111 = v32;
  if (!v35)
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();

    swift_unknownObjectRelease_n();
    if (v30) {
      goto LABEL_14;
    }
LABEL_16:
    if (!a2) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  int v104 = v34;
  uint64_t v106 = a2;
  uint64_t v108 = v17;
  uint64_t v36 = swift_slowAlloc();
  unint64_t v37 = (void *)swift_slowAlloc();
  uint64_t v105 = swift_slowAlloc();
  uint64_t aBlock = v105;
  *(_DWORD *)uint64_t v36 = 136447234;
  v129[0] = (uint64_t)a6;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
  uint64_t v38 = sub_25B290600();
  v129[0] = sub_25B288E98(v38, v39, &aBlock);
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v36 + 12) = 2112;
  if (a1)
  {
    v129[0] = (uint64_t)v32;
    id v40 = v32;
  }
  else
  {
    v129[0] = 0;
  }
  sub_25B2909C0();
  uint64_t v41 = v32;
  uint64_t v42 = v118;
  *unint64_t v37 = v118;

  *(_WORD *)(v36 + 22) = 2080;
  a2 = v106;
  v129[0] = v106;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB060);
  uint64_t v43 = sub_25B290600();
  v129[0] = sub_25B288E98(v43, v44, &aBlock);
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v36 + 32) = 1024;
  LODWORD(v129[0]) = v110 & 1;
  sub_25B2909C0();
  *(_WORD *)(v36 + 38) = 2080;
  uint64_t v45 = v121;
  v129[0] = v121;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB068);
  uint64_t v46 = sub_25B290600();
  v129[0] = sub_25B288E98(v46, v47, &aBlock);
  uint64_t v30 = v45;
  a1 = v42;
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_25B107000, v33, (os_log_type_t)v104, "%{public}s; Parameters: content: %@, context: %s, isComplete: %{BOOL}d, error: %s",
    (uint8_t *)v36,
    0x30u);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
  swift_arrayDestroy();
  MEMORY[0x261160890](v37, -1, -1);
  uint64_t v48 = v105;
  swift_arrayDestroy();
  MEMORY[0x261160890](v48, -1, -1);
  MEMORY[0x261160890](v36, -1, -1);

  uint64_t v17 = v108;
  uint64_t v21 = v119;
  unint64_t v19 = v120;
  if (!v30) {
    goto LABEL_16;
  }
LABEL_14:
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v49 = sub_25B290160();
  os_log_type_t v50 = sub_25B290880();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t aBlock = v52;
    *(_DWORD *)uint64_t v51 = 136446466;
    v129[0] = (uint64_t)a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v53 = sub_25B290600();
    v129[0] = sub_25B288E98(v53, v54, &aBlock);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2082;
    v129[0] = v30;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFF8);
    uint64_t v55 = sub_25B290600();
    v129[0] = sub_25B288E98(v55, v56, &aBlock);
    a1 = v118;
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    uint64_t v21 = v119;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v49, v50, "%{public}s; Received error: %{public}s", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    uint64_t v57 = v52;
    unint64_t v19 = v120;
    MEMORY[0x261160890](v57, -1, -1);
    MEMORY[0x261160890](v51, -1, -1);
    swift_unknownObjectRelease();

    goto LABEL_16;
  }

  swift_unknownObjectRelease_n();
  swift_unknownObjectRelease_n();
  if (!a2) {
    goto LABEL_21;
  }
LABEL_19:
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v58 = sub_25B290160();
  os_log_type_t v59 = sub_25B2908A0();
  if (!os_log_type_enabled(v58, v59))
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
    if (a1)
    {
LABEL_22:
      uint64_t v67 = v112;
      sub_25B290380();
      id v68 = v111;
      uint64_t v69 = sub_25B2903A0();
      uint64_t aBlock = sub_25B209B80(v69);
      unint64_t v124 = v70;
      MEMORY[0x270FA5388](aBlock);
      *(void *)&v103[-16] = v67;
      sub_25B2066A0((uint64_t (*)(uint64_t, uint64_t))sub_25B209C20);
      (*(void (**)(unsigned char *, uint64_t))(v113 + 8))(v67, v114);
      uint64_t v72 = aBlock;
      unint64_t v71 = v124;
      sub_25B114300(aBlock, v124);
      os_log_type_t v73 = v115;
      sub_25B1D2384(v72, v71, (uint64_t)v115);
      uint64_t v78 = (uint64_t)v73;
      uint64_t v79 = (uint64_t)v109;
      sub_25B20913C(v78, (uint64_t)v109, type metadata accessor for NetworkSyncHeaderPreamble);
      unsigned int v80 = *(_DWORD *)(v79 + *(int *)(v107 + 20));
      swift_unknownObjectRetain_n();
      uint64_t v81 = sub_25B290160();
      os_log_type_t v82 = sub_25B2908A0();
      if (os_log_type_enabled(v81, v82))
      {
        uint64_t v84 = swift_slowAlloc();
        uint64_t v85 = swift_slowAlloc();
        uint64_t v121 = (uint64_t)v68;
        uint64_t v86 = v85;
        uint64_t aBlock = v85;
        *(_DWORD *)uint64_t v84 = 136446466;
        LODWORD(v129[0]) = v80;
        uint64_t v87 = sub_25B290DB0();
        v129[0] = sub_25B288E98(v87, v88, &aBlock);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v84 + 12) = 2082;
        v129[0] = (uint64_t)a6;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
        uint64_t v89 = sub_25B290600();
        v129[0] = sub_25B288E98(v89, v90, &aBlock);
        sub_25B2909C0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25B107000, v81, v82, "Expecting header with length %{public}s from %{public}s", (uint8_t *)v84, 0x16u);
        swift_arrayDestroy();
        uint64_t v91 = v86;
        id v68 = (id)v121;
        MEMORY[0x261160890](v91, -1, -1);
        MEMORY[0x261160890](v84, -1, -1);
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      if (v80 < 0x14) {
        __break(1u);
      }
      sub_25B1F5540((uint64_t)a6);
      uint64_t v100 = swift_allocObject();
      swift_weakInit();
      uint64_t v101 = swift_allocObject();
      *(void *)(v101 + 16) = v100;
      *(void *)(v101 + 24) = a6;
      *(_DWORD *)(v101 + 32) = v80;
      uint64_t v127 = sub_25B209C40;
      uint64_t v128 = v101;
      uint64_t aBlock = MEMORY[0x263EF8330];
      unint64_t v124 = 1107296256;
      unint64_t v125 = sub_25B1FB000;
      uint64_t v126 = &block_descriptor_255;
      uint64_t v102 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_release();
      nw_connection_receive(a6, v80 - 20, v80 - 20, v102);
      _Block_release(v102);
      swift_release();
      sub_25B10DFF0(v72, v71);

      return sub_25B207870((uint64_t)v109, type metadata accessor for NetworkSyncHeaderPreamble);
    }
    goto LABEL_24;
  }
  uint64_t v60 = swift_slowAlloc();
  uint64_t v61 = swift_slowAlloc();
  uint64_t aBlock = v61;
  *(_DWORD *)uint64_t v60 = 136446466;
  v129[0] = (uint64_t)a6;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
  uint64_t v62 = sub_25B290600();
  v129[0] = sub_25B288E98(v62, v63, &aBlock);
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v60 + 12) = 2082;
  v129[0] = a2;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB058);
  uint64_t v64 = sub_25B290600();
  v129[0] = sub_25B288E98(v64, v65, &aBlock);
  a1 = v118;
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  uint64_t v21 = v119;
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_25B107000, v58, v59, "%{public}s; Received context: %{public}s", (uint8_t *)v60, 0x16u);
  swift_arrayDestroy();
  uint64_t v66 = v61;
  unint64_t v19 = v120;
  MEMORY[0x261160890](v66, -1, -1);
  MEMORY[0x261160890](v60, -1, -1);
  swift_unknownObjectRelease();

LABEL_21:
  if (a1) {
    goto LABEL_22;
  }
LABEL_24:
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v116 + 16))(v19, v21, v17);
  uint64_t v74 = swift_beginAccess();
  MEMORY[0x270FA5388](v74);
  *(void *)&v103[-16] = a6;
  uint64_t v75 = swift_bridgeObjectRetain();
  char v76 = sub_25B207FE0(v75, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_25B20AB3C);
  swift_bridgeObjectRelease();
  if (v76) {
    os_log_type_t v77 = sub_25B290880();
  }
  else {
    os_log_type_t v77 = sub_25B290860();
  }
  os_log_type_t v92 = v77;
  swift_unknownObjectRetain_n();
  uint64_t v93 = sub_25B290160();
  os_log_type_t v94 = v92;
  if (os_log_type_enabled(v93, v92))
  {
    uint64_t v95 = (uint8_t *)swift_slowAlloc();
    uint64_t v96 = swift_slowAlloc();
    v129[0] = v96;
    *(_DWORD *)uint64_t v95 = 136446210;
    uint64_t v122 = (uint64_t)a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v97 = v116;
    uint64_t v108 = v17;
    uint64_t v98 = sub_25B290600();
    uint64_t v122 = sub_25B288E98(v98, v99, v129);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v93, v94, "Received nil instead of header length; destroying connection %{public}s",
      v95,
      0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v96, -1, -1);
    MEMORY[0x261160890](v95, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v97 + 8))(v120, v108);
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(unsigned char *, uint64_t))(v116 + 8))(v19, v17);
  }
  sub_25B1EAA34(a6);
  return swift_release();
}

uint64_t sub_25B1F904C(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, NSObject *a6, int a7)
{
  int v113 = a7;
  int v107 = a3;
  uint64_t v116 = a2;
  id v117 = a1;
  uint64_t v123 = *MEMORY[0x263EF8340];
  uint64_t v9 = type metadata accessor for NetworkSyncHeader(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v100 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v100 - v16;
  uint64_t v18 = sub_25B2903B0();
  uint64_t v111 = *(void *)(v18 - 8);
  uint64_t v112 = v18;
  MEMORY[0x270FA5388](v18);
  int v110 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_25B290190();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  os_log_type_t v109 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v24 = result;
  uint64_t v104 = v9;
  if (qword_26A4D98C8 != -1) {
    swift_once();
  }
  uint64_t v25 = __swift_project_value_buffer(v20, (uint64_t)qword_26A4EB168);
  swift_unknownObjectRetain_n();
  id v118 = (id)v25;
  uint64_t v26 = sub_25B290160();
  os_log_type_t v27 = sub_25B2908A0();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v114 = v17;
  uint64_t v115 = v24;
  uint64_t v103 = v15;
  uint64_t v102 = v12;
  uint64_t v106 = v20;
  uint64_t v105 = v21;
  if (v28)
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v120 = (uint64_t)a6;
    uint64_t v121 = (void *)v30;
    *(_DWORD *)uint64_t v29 = 136446210;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v31 = sub_25B290600();
    uint64_t v120 = sub_25B288E98(v31, v32, (uint64_t *)&v121);
    uint64_t v17 = v114;
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v26, v27, "Received header from: %{public}s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v30, -1, -1);
    MEMORY[0x261160890](v29, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t v33 = v116;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  id v34 = v117;
  id v35 = v117;
  swift_unknownObjectRetain_n();
  id v36 = v35;
  unint64_t v37 = sub_25B290160();
  os_log_type_t v38 = sub_25B2908A0();
  BOOL v39 = os_log_type_enabled(v37, v38);
  id v108 = v36;
  if (!v39)
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();

    swift_unknownObjectRelease_n();
    if (a4) {
      goto LABEL_14;
    }
LABEL_16:
    if (!v33) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  uint64_t v40 = swift_slowAlloc();
  uint64_t v100 = (void *)swift_slowAlloc();
  uint64_t v101 = swift_slowAlloc();
  uint64_t v120 = (uint64_t)a6;
  uint64_t v121 = (void *)v101;
  *(_DWORD *)uint64_t v40 = 136447234;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
  uint64_t v41 = sub_25B290600();
  uint64_t v120 = sub_25B288E98(v41, v42, (uint64_t *)&v121);
  id v43 = v117;
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 12) = 2112;
  if (v43)
  {
    id v44 = v108;
    uint64_t v120 = (uint64_t)v108;
    id v45 = v108;
    sub_25B2909C0();
  }
  else
  {
    uint64_t v120 = 0;
    sub_25B2909C0();
    id v44 = v108;
  }
  uint64_t v46 = v100;
  *uint64_t v100 = v43;

  *(_WORD *)(v40 + 22) = 2080;
  uint64_t v33 = v116;
  uint64_t v120 = v116;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB060);
  uint64_t v47 = sub_25B290600();
  uint64_t v120 = sub_25B288E98(v47, v48, (uint64_t *)&v121);
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 32) = 1024;
  LODWORD(v120) = v107 & 1;
  sub_25B2909C0();
  *(_WORD *)(v40 + 38) = 2080;
  uint64_t v120 = a4;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB068);
  uint64_t v49 = sub_25B290600();
  uint64_t v120 = sub_25B288E98(v49, v50, (uint64_t *)&v121);
  id v34 = v117;
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_25B107000, v37, v38, "%{public}s; Parameters: content: %@, context: %s, isComplete: %{BOOL}d, error: %s",
    (uint8_t *)v40,
    0x30u);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
  swift_arrayDestroy();
  MEMORY[0x261160890](v46, -1, -1);
  uint64_t v51 = v101;
  swift_arrayDestroy();
  MEMORY[0x261160890](v51, -1, -1);
  MEMORY[0x261160890](v40, -1, -1);

  uint64_t v17 = v114;
  if (!a4) {
    goto LABEL_16;
  }
LABEL_14:
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v52 = sub_25B290160();
  os_log_type_t v53 = sub_25B290880();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    uint64_t v120 = (uint64_t)a6;
    uint64_t v121 = (void *)v55;
    *(_DWORD *)uint64_t v54 = 136446466;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v56 = sub_25B290600();
    uint64_t v120 = sub_25B288E98(v56, v57, (uint64_t *)&v121);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2082;
    uint64_t v120 = a4;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFF8);
    uint64_t v58 = sub_25B290600();
    uint64_t v120 = sub_25B288E98(v58, v59, (uint64_t *)&v121);
    id v34 = v117;
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    uint64_t v17 = v114;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v52, v53, "%{public}s; Received error: %{public}s", (uint8_t *)v54, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v55, -1, -1);
    uint64_t v60 = v54;
    uint64_t v33 = v116;
    MEMORY[0x261160890](v60, -1, -1);
    swift_unknownObjectRelease();

    goto LABEL_16;
  }

  swift_unknownObjectRelease_n();
  swift_unknownObjectRelease_n();
  if (!v33) {
    goto LABEL_21;
  }
LABEL_19:
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v61 = sub_25B290160();
  os_log_type_t v62 = sub_25B2908A0();
  if (!os_log_type_enabled(v61, v62))
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
    if (v34) {
      goto LABEL_22;
    }
    goto LABEL_25;
  }
  uint64_t v63 = v33;
  uint64_t v64 = swift_slowAlloc();
  uint64_t v65 = swift_slowAlloc();
  uint64_t v120 = (uint64_t)a6;
  uint64_t v121 = (void *)v65;
  *(_DWORD *)uint64_t v64 = 136446466;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
  uint64_t v66 = sub_25B290600();
  uint64_t v120 = sub_25B288E98(v66, v67, (uint64_t *)&v121);
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v64 + 12) = 2082;
  uint64_t v120 = v63;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB058);
  uint64_t v68 = sub_25B290600();
  uint64_t v120 = sub_25B288E98(v68, v69, (uint64_t *)&v121);
  id v34 = v117;
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_25B107000, v61, v62, "%{public}s; Received context: %{public}s", (uint8_t *)v64, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x261160890](v65, -1, -1);
  MEMORY[0x261160890](v64, -1, -1);
  swift_unknownObjectRelease();

LABEL_21:
  if (v34)
  {
LABEL_22:
    unint64_t v70 = v110;
    sub_25B290380();
    id v71 = v108;
    uint64_t v72 = sub_25B2903A0();
    uint64_t v121 = (void *)sub_25B209B80(v72);
    unint64_t v122 = v73;
    MEMORY[0x270FA5388](v121);
    *(&v100 - 2) = v70;
    sub_25B2066A0((uint64_t (*)(uint64_t, uint64_t))sub_25B209C20);
    (*(void (**)(void *, uint64_t))(v111 + 8))(v70, v112);
    id v75 = v121;
    unint64_t v74 = v122;
    sub_25B114300((uint64_t)v121, v122);
    sub_25B1D0B6C(v113, (unint64_t)v75, v74, v17);
    uint64_t v76 = (uint64_t)v103;
    sub_25B207948((uint64_t)v17, (uint64_t)v103, type metadata accessor for NetworkSyncHeader);
    swift_unknownObjectRetain_n();
    os_log_type_t v77 = sub_25B290160();
    os_log_type_t v78 = sub_25B2908A0();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = swift_slowAlloc();
      id v117 = v75;
      uint64_t v80 = v79;
      uint64_t v116 = swift_slowAlloc();
      uint64_t v120 = (uint64_t)a6;
      uint64_t v121 = (void *)v116;
      *(_DWORD *)uint64_t v80 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      id v118 = v71;
      uint64_t v81 = sub_25B290600();
      uint64_t v120 = sub_25B288E98(v81, v82, (uint64_t *)&v121);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v80 + 12) = 2082;
      sub_25B207948(v76, (uint64_t)v102, type metadata accessor for NetworkSyncHeader);
      uint64_t v83 = v104;
      uint64_t v84 = sub_25B290600();
      uint64_t v120 = sub_25B288E98(v84, v85, (uint64_t *)&v121);
      id v71 = v118;
      uint64_t v17 = v114;
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B207870(v76, type metadata accessor for NetworkSyncHeader);
      _os_log_impl(&dword_25B107000, v77, v78, "%{public}s; Header: %{public}s", (uint8_t *)v80, 0x16u);
      uint64_t v86 = v116;
      swift_arrayDestroy();
      MEMORY[0x261160890](v86, -1, -1);
      uint64_t v87 = v80;
      id v75 = v117;
      MEMORY[0x261160890](v87, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();
      sub_25B207870(v76, type metadata accessor for NetworkSyncHeader);

      uint64_t v83 = v104;
    }
    sub_25B1F5540((uint64_t)a6);
    if (v17[*(int *)(v83 + 36)] == 1) {
      sub_25B1FA0B0((uint64_t)a6, (uint64_t)v17);
    }
    else {
      sub_25B1FAD38(a6, (uint64_t)v17);
    }
    swift_release();
    sub_25B10DFF0((uint64_t)v75, v74);

    return sub_25B207870((uint64_t)v17, type metadata accessor for NetworkSyncHeader);
  }
LABEL_25:
  unint64_t v88 = v109;
  (*(void (**)(char *, id, uint64_t))(v105 + 16))(v109, v118, v106);
  uint64_t v89 = swift_beginAccess();
  MEMORY[0x270FA5388](v89);
  *(&v100 - 2) = &a6->isa;
  uint64_t v90 = swift_bridgeObjectRetain();
  char v91 = sub_25B207FE0(v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_25B20AB3C);
  swift_bridgeObjectRelease();
  if (v91) {
    os_log_type_t v92 = sub_25B290880();
  }
  else {
    os_log_type_t v92 = sub_25B290860();
  }
  os_log_type_t v93 = v92;
  swift_unknownObjectRetain_n();
  os_log_type_t v94 = sub_25B290160();
  os_log_type_t v95 = v93;
  if (os_log_type_enabled(v94, v93))
  {
    uint64_t v96 = (uint8_t *)swift_slowAlloc();
    uint64_t v97 = swift_slowAlloc();
    uint64_t v120 = v97;
    *(_DWORD *)uint64_t v96 = 136446210;
    uint64_t v119 = (uint64_t)a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v98 = sub_25B290600();
    uint64_t v119 = sub_25B288E98(v98, v99, &v120);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v94, v95, "Received nil instead of header; destroying connection %{public}s",
      v96,
      0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v97, -1, -1);
    MEMORY[0x261160890](v96, -1, -1);

    (*(void (**)(char *, uint64_t))(v105 + 8))(v109, v106);
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v88, v106);
  }
  sub_25B1EAA34(a6);
  return swift_release();
}

void sub_25B1FA0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v71 = a1;
  uint64_t v4 = (int *)type metadata accessor for NetworkSyncHeader(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v70 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v69 = (uint64_t)&v64 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v66 = (uint64_t)&v64 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v65 = (uint64_t)&v64 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB088);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  uint64_t v68 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v67 = (uint64_t)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_25B290410();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = *(void **)(v2 + 24);
  *uint64_t v20 = v21;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x263F8F0E0], v17);
  id v22 = v21;
  LOBYTE(v21) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v20 = (void *)a2;
  if (*(_DWORD *)(a2 + v4[10]) != 3)
  {
    if (qword_26A4D98C8 == -1)
    {
LABEL_10:
      uint64_t v36 = sub_25B290190();
      __swift_project_value_buffer(v36, (uint64_t)qword_26A4EB168);
      uint64_t v25 = v70;
      sub_25B207948((uint64_t)v20, v70, type metadata accessor for NetworkSyncHeader);
      uint64_t v37 = v71;
      swift_unknownObjectRetain_n();
      os_log_type_t v27 = sub_25B290160();
      os_log_type_t v38 = sub_25B2908A0();
      if (!os_log_type_enabled(v27, v38)) {
        goto LABEL_18;
      }
      uint64_t v29 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v72 = v37;
      uint64_t v73 = v39;
      *(_DWORD *)uint64_t v29 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v40 = sub_25B290600();
      uint64_t v72 = sub_25B288E98(v40, v41, &v73);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      sub_25B290080();
      sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
      uint64_t v42 = sub_25B290DB0();
      uint64_t v72 = sub_25B288E98(v42, v43, &v73);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B207870(v25, type metadata accessor for NetworkSyncHeader);
      id v44 = "%{public}s; Received unexpected sequence count for file: %{public}s";
LABEL_16:
      _os_log_impl(&dword_25B107000, v27, v38, v44, (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      uint64_t v35 = v39;
      goto LABEL_17;
    }
LABEL_31:
    swift_once();
    goto LABEL_10;
  }
  if (*(_DWORD *)(a2 + v4[11]) != 2)
  {
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_25B290190();
    __swift_project_value_buffer(v45, (uint64_t)qword_26A4EB168);
    uint64_t v25 = v69;
    sub_25B207948(a2, v69, type metadata accessor for NetworkSyncHeader);
    uint64_t v46 = v71;
    swift_unknownObjectRetain_n();
    os_log_type_t v27 = sub_25B290160();
    os_log_type_t v38 = sub_25B2908A0();
    if (!os_log_type_enabled(v27, v38)) {
      goto LABEL_18;
    }
    uint64_t v29 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v72 = v46;
    uint64_t v73 = v39;
    *(_DWORD *)uint64_t v29 = 136446466;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v47 = sub_25B290600();
    uint64_t v72 = sub_25B288E98(v47, v48, &v73);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2082;
    sub_25B290080();
    sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
    uint64_t v49 = sub_25B290DB0();
    uint64_t v72 = sub_25B288E98(v49, v50, &v73);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B207870(v25, type metadata accessor for NetworkSyncHeader);
    id v44 = "%{public}s; Received unexpected sequence index for file: %{public}s";
    goto LABEL_16;
  }
  uint64_t v23 = a2 + v4[6];
  sub_25B1FE740(v23, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v14, 1, v15) == 1)
  {
    sub_25B116DE0((uint64_t)v14, &qword_26A4DB088);
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_25B290190();
    __swift_project_value_buffer(v24, (uint64_t)qword_26A4EB168);
    uint64_t v25 = v66;
    sub_25B207948(a2, v66, type metadata accessor for NetworkSyncHeader);
    uint64_t v26 = v71;
    swift_unknownObjectRetain_n();
    os_log_type_t v27 = sub_25B290160();
    os_log_type_t v28 = sub_25B2908A0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v72 = v26;
      uint64_t v73 = v30;
      *(_DWORD *)uint64_t v29 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v31 = sub_25B290600();
      uint64_t v72 = sub_25B288E98(v31, v32, &v73);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      sub_25B290080();
      sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
      uint64_t v33 = sub_25B290DB0();
      uint64_t v72 = sub_25B288E98(v33, v34, &v73);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B207870(v25, type metadata accessor for NetworkSyncHeader);
      _os_log_impl(&dword_25B107000, v27, v28, "%{public}s; Received unexpected file for nonexistent message: %{public}s",
        (uint8_t *)v29,
        0x16u);
      swift_arrayDestroy();
      uint64_t v35 = v30;
LABEL_17:
      MEMORY[0x261160890](v35, -1, -1);
      MEMORY[0x261160890](v29, -1, -1);
LABEL_19:

      return;
    }
LABEL_18:
    swift_unknownObjectRelease_n();
    sub_25B207870(v25, type metadata accessor for NetworkSyncHeader);
    goto LABEL_19;
  }
  uint64_t v51 = v67;
  sub_25B20913C((uint64_t)v14, v67, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
  if (*(void *)(v51 + *(int *)(v15 + 20)))
  {
    sub_25B1FEDB8(v71, (uint64_t)v20, 0);
  }
  else
  {
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_25B290190();
    __swift_project_value_buffer(v52, (uint64_t)qword_26A4EB168);
    uint64_t v53 = v65;
    sub_25B207948((uint64_t)v20, v65, type metadata accessor for NetworkSyncHeader);
    uint64_t v54 = v71;
    swift_unknownObjectRetain_n();
    uint64_t v55 = sub_25B290160();
    os_log_type_t v56 = sub_25B2908A0();
    int v57 = v56;
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v58 = swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      uint64_t v72 = v54;
      uint64_t v73 = v70;
      *(_DWORD *)uint64_t v58 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v59 = sub_25B290600();
      LODWORD(v69) = v57;
      uint64_t v72 = sub_25B288E98(v59, v60, &v73);
      sub_25B2909C0();
      uint64_t v51 = v67;
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v58 + 12) = 2082;
      sub_25B290080();
      sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
      uint64_t v61 = sub_25B290DB0();
      uint64_t v72 = sub_25B288E98(v61, v62, &v73);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B207870(v53, type metadata accessor for NetworkSyncHeader);
      _os_log_impl(&dword_25B107000, v55, (os_log_type_t)v69, "%{public}s; Received file for message without extended attributes: %{public}s",
        (uint8_t *)v58,
        0x16u);
      uint64_t v63 = v70;
      swift_arrayDestroy();
      MEMORY[0x261160890](v63, -1, -1);
      MEMORY[0x261160890](v58, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();
      sub_25B207870(v53, type metadata accessor for NetworkSyncHeader);
    }

    sub_25B1FDBF0(v23, 1);
  }
  sub_25B207870(v51, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
}

void sub_25B1FAD38(NSObject *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for NetworkSyncHeader(0);
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v19 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = sub_25B290410();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v2 + 24);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F0E0], v7);
  id v12 = v11;
  LOBYTE(v11) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    uint32_t v13 = *(_DWORD *)(a2 + *(int *)(v5 + 32));
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    sub_25B207948(a2, (uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NetworkSyncHeader);
    unint64_t v15 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v14;
    *(void *)(v16 + 24) = a1;
    sub_25B20913C((uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for NetworkSyncHeader);
    aBlock[4] = sub_25B209E10;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_25B1FB000;
    aBlock[3] = &block_descriptor_264;
    uint64_t v17 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_release();
    nw_connection_receive(a1, v13, v13, v17);
    _Block_release(v17);
  }
  else
  {
    __break(1u);
  }
}

void sub_25B1FB000(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  id v10 = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v9(a2, a3, a4, a5);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
}

void sub_25B1FB0B0(void *a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7)
{
  int v140 = a3;
  uint64_t v152 = a2;
  id v153 = a1;
  uint64_t v163 = *MEMORY[0x263EF8340];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB070);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Message();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (void (*)(char *, uint64_t))((char *)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for NetworkSyncHeader(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v138 = (uint64_t)&v131 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v147 = (uint64_t)&v131 - v20;
  uint64_t v146 = sub_25B2903B0();
  uint64_t v145 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  os_log_type_t v144 = (char *)&v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = (uint8_t *)sub_25B290190();
  id v148 = (id)*((void *)v151 - 1);
  MEMORY[0x270FA5388](v151);
  uint64_t v143 = (char *)&v131 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v24 = Strong;
  uint64_t v134 = v16;
  uint64_t v135 = v14;
  if (qword_26A4D98C8 != -1) {
    swift_once();
  }
  uint64_t v25 = __swift_project_value_buffer((uint64_t)v151, (uint64_t)qword_26A4EB168);
  swift_unknownObjectRetain_n();
  uint64_t v26 = sub_25B290160();
  os_log_type_t v27 = sub_25B2908A0();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v150 = v24;
  uint64_t v139 = a7;
  uint64_t v136 = v12;
  uint64_t v142 = v17;
  uint64_t v149 = v25;
  uint64_t v137 = v13;
  if (v28)
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v157 = (void *)v30;
    *(_DWORD *)uint64_t v29 = 136446210;
    v154[0] = (uint64_t)a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v31 = sub_25B290600();
    v154[0] = sub_25B288E98(v31, v32, (uint64_t *)&v157);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    uint64_t v25 = v149;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v26, v27, "Received message data from: %{public}s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v30, -1, -1);
    MEMORY[0x261160890](v29, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t v33 = v152;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  id v34 = v153;
  id v35 = v153;
  swift_unknownObjectRetain_n();
  id v36 = v35;
  uint64_t v37 = sub_25B290160();
  os_log_type_t v38 = sub_25B2908A0();
  BOOL v39 = os_log_type_enabled(v37, v38);
  id v141 = v36;
  if (!v39)
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();

    swift_unknownObjectRelease_n();
    if (a4) {
      goto LABEL_14;
    }
LABEL_16:
    if (!v33) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  uint64_t v40 = swift_slowAlloc();
  unint64_t v41 = (void *)swift_slowAlloc();
  uint64_t v132 = swift_slowAlloc();
  uint64_t v157 = (void *)v132;
  *(_DWORD *)uint64_t v40 = 136447234;
  v154[0] = (uint64_t)a6;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
  uint64_t v42 = sub_25B290600();
  v154[0] = sub_25B288E98(v42, v43, (uint64_t *)&v157);
  sub_25B2909C0();
  uint64_t v133 = a6;
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 12) = 2112;
  if (v34)
  {
    id v44 = v141;
    v154[0] = (uint64_t)v141;
    id v45 = v141;
    sub_25B2909C0();
  }
  else
  {
    v154[0] = 0;
    sub_25B2909C0();
    id v44 = v141;
  }
  *unint64_t v41 = v153;

  *(_WORD *)(v40 + 22) = 2080;
  unint64_t v46 = v152;
  v154[0] = v152;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB060);
  uint64_t v47 = sub_25B290600();
  v154[0] = sub_25B288E98(v47, v48, (uint64_t *)&v157);
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 32) = 1024;
  LODWORD(v154[0]) = v140 & 1;
  sub_25B2909C0();
  *(_WORD *)(v40 + 38) = 2080;
  v154[0] = a4;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB068);
  uint64_t v49 = sub_25B290600();
  v154[0] = sub_25B288E98(v49, v50, (uint64_t *)&v157);
  uint64_t v33 = v46;
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_25B107000, v37, v38, "%{public}s; Parameters: content: %@, context: %s, isComplete: %{BOOL}d, error: %s",
    (uint8_t *)v40,
    0x30u);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
  swift_arrayDestroy();
  MEMORY[0x261160890](v41, -1, -1);
  uint64_t v51 = v132;
  swift_arrayDestroy();
  MEMORY[0x261160890](v51, -1, -1);
  MEMORY[0x261160890](v40, -1, -1);

  uint64_t v25 = v149;
  a6 = v133;
  if (!a4) {
    goto LABEL_16;
  }
LABEL_14:
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v52 = sub_25B290160();
  os_log_type_t v53 = sub_25B290880();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    uint64_t v157 = (void *)v55;
    *(_DWORD *)uint64_t v54 = 136446466;
    v154[0] = (uint64_t)a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v56 = sub_25B290600();
    v154[0] = sub_25B288E98(v56, v57, (uint64_t *)&v157);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2082;
    v154[0] = a4;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFF8);
    uint64_t v58 = sub_25B290600();
    v154[0] = sub_25B288E98(v58, v59, (uint64_t *)&v157);
    uint64_t v33 = v152;
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v52, v53, "%{public}s; Received error: %{public}s", (uint8_t *)v54, 0x16u);
    swift_arrayDestroy();
    uint64_t v60 = v55;
    uint64_t v25 = v149;
    MEMORY[0x261160890](v60, -1, -1);
    MEMORY[0x261160890](v54, -1, -1);
    swift_unknownObjectRelease();

    goto LABEL_16;
  }

  swift_unknownObjectRelease_n();
  swift_unknownObjectRelease_n();
  if (!v33) {
    goto LABEL_22;
  }
LABEL_19:
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v61 = sub_25B290160();
  os_log_type_t v62 = sub_25B2908A0();
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    uint64_t v157 = (void *)v64;
    *(_DWORD *)uint64_t v63 = 136446466;
    v154[0] = (uint64_t)a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v65 = sub_25B290600();
    v154[0] = sub_25B288E98(v65, v66, (uint64_t *)&v157);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v63 + 12) = 2082;
    v154[0] = v33;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB058);
    uint64_t v67 = sub_25B290600();
    v154[0] = sub_25B288E98(v67, v68, (uint64_t *)&v157);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v61, v62, "%{public}s; Received context: %{public}s", (uint8_t *)v63, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v64, -1, -1);
    MEMORY[0x261160890](v63, -1, -1);
    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
  }
LABEL_22:
  if (v153)
  {
    uint64_t v69 = v144;
    sub_25B290380();
    id v70 = v141;
    uint64_t v71 = sub_25B2903A0();
    uint64_t v157 = (void *)sub_25B209B80(v71);
    unint64_t v158 = v72;
    MEMORY[0x270FA5388](v157);
    sub_25B2066A0((uint64_t (*)(uint64_t, uint64_t))sub_25B209C20);
    uint64_t v151 = 0;
    (*(void (**)(char *, uint64_t))(v145 + 8))(v69, v146);
    unint64_t v74 = v157;
    unint64_t v73 = v158;
    uint64_t v75 = v139;
    uint64_t v76 = v147;
    sub_25B207948(v139, v147, type metadata accessor for NetworkSyncHeader);
    swift_unknownObjectRetain();
    sub_25B114300((uint64_t)v74, v73);
    swift_unknownObjectRetain();
    sub_25B114300((uint64_t)v74, v73);
    os_log_type_t v77 = sub_25B290160();
    os_log_type_t v78 = sub_25B2908A0();
    BOOL v79 = os_log_type_enabled(v77, v78);
    id v153 = v74;
    if (v79)
    {
      id v148 = v70;
      uint64_t v152 = v73;
      uint64_t v80 = swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      uint64_t v157 = (void *)v81;
      *(_DWORD *)uint64_t v80 = 136446722;
      v154[0] = (uint64_t)a6;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v82 = sub_25B290600();
      v154[0] = sub_25B288E98(v82, v83, (uint64_t *)&v157);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v80 + 12) = 1026;
      int v84 = *(_DWORD *)(v76 + *(int *)(v142 + 32));
      sub_25B207870(v76, type metadata accessor for NetworkSyncHeader);
      LODWORD(v154[0]) = v84;
      sub_25B2909C0();
      *(_WORD *)(v80 + 18) = 2050;
      uint64_t v85 = (uint64_t)v153;
      switch(v73 >> 62)
      {
        case 1uLL:
          goto LABEL_37;
        case 2uLL:
          uint64_t v100 = *((void *)v153 + 2);
          uint64_t v99 = *((void *)v153 + 3);
          unint64_t v73 = v152;
          sub_25B10DFF0((uint64_t)v153, v152);
          uint64_t v86 = v99 - v100;
          if (__OFSUB__(v99, v100))
          {
            __break(1u);
LABEL_37:
            unint64_t v73 = v152;
            sub_25B10DFF0(v85, v152);
            LODWORD(v86) = HIDWORD(v85) - v85;
            if (__OFSUB__(HIDWORD(v85), v85)) {
              __break(1u);
            }
            uint64_t v86 = (int)v86;
          }
          break;
        case 3uLL:
          unint64_t v73 = v152;
          sub_25B10DFF0((uint64_t)v153, v152);
          uint64_t v86 = 0;
          break;
        default:
          unint64_t v73 = v152;
          sub_25B10DFF0((uint64_t)v153, v152);
          uint64_t v86 = BYTE6(v73);
          break;
      }
      uint64_t v75 = v139;
      v154[0] = v86;
      sub_25B2909C0();
      sub_25B10DFF0(v85, v73);
      _os_log_impl(&dword_25B107000, v77, v78, "%{public}s; Expected %{public}u; got %{public}ld",
        (uint8_t *)v80,
        0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v81, -1, -1);
      MEMORY[0x261160890](v80, -1, -1);

      id v70 = v148;
    }
    else
    {
      sub_25B10DFF0((uint64_t)v74, v73);
      sub_25B207870(v76, type metadata accessor for NetworkSyncHeader);
      swift_unknownObjectRelease_n();
      sub_25B10DFF0((uint64_t)v74, v73);
    }
    uint64_t v101 = v142;
    uint64_t v102 = v137;
    switch(*(unsigned char *)(v75 + *(int *)(v142 + 36)))
    {
      case 1:
        sub_25B290BC0();
        __break(1u);
        JUMPOUT(0x25B1FC97CLL);
      case 2:
        id v112 = v70;
        type metadata accessor for OPACKCoder();
        unint64_t v103 = v73;
        int v113 = v151;
        sub_25B284F38(&v162);
        if (!v113)
        {
          sub_25B116E84((uint64_t)&v162, (uint64_t)v159);
          uint64_t v114 = MEMORY[0x263F8EE78];
          unint64_t v115 = sub_25B20D420(MEMORY[0x263F8EE78]);
          uint64_t v157 = (void *)v114;
          unint64_t v158 = v115;
          uint64_t v160 = 0;
          char v161 = 1;
          int v155 = &type metadata for PropertyListTypeDecoder.RootDecoder;
          unint64_t v156 = sub_25B116EE0();
          v154[0] = swift_allocObject();
          sub_25B116F7C((uint64_t)&v157, v154[0] + 16);
          uint64_t v116 = sub_25B2071B8(v154);
          sub_25B116FD8((uint64_t)&v157);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v162);
          sub_25B1F5540((uint64_t)a6);
          sub_25B1FCEEC((uint64_t)v116, (uint64_t)a6, v75);
          swift_bridgeObjectRelease();
          id v70 = v112;
          goto LABEL_56;
        }

        id v117 = sub_25B290160();
        os_log_type_t v118 = sub_25B290880();
        if (os_log_type_enabled(v117, v118))
        {
          uint64_t v119 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v119 = 0;
          _os_log_impl(&dword_25B107000, v117, v118, "Message could not be decoded", v119, 2u);
          MEMORY[0x261160890](v119, -1, -1);
        }

        sub_25B1F7B6C(a6);
        sub_25B10DFF0((uint64_t)v153, v103);
        swift_release();

        break;
      case 3:
        uint64_t v152 = v73;
        uint64_t v120 = v138;
        sub_25B207948(v75, v138, type metadata accessor for NetworkSyncHeader);
        uint64_t v121 = sub_25B290160();
        os_log_type_t v122 = sub_25B290880();
        if (os_log_type_enabled(v121, v122))
        {
          uint64_t v123 = swift_slowAlloc();
          id v148 = v70;
          unint64_t v124 = (uint8_t *)v123;
          uint64_t v125 = swift_slowAlloc();
          uint64_t v157 = (void *)v125;
          *(_DWORD *)unint64_t v124 = 136446210;
          uint64_t v151 = v124 + 4;
          sub_25B290080();
          sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
          uint64_t v126 = sub_25B290DB0();
          v154[0] = sub_25B288E98(v126, v127, (uint64_t *)&v157);
          sub_25B2909C0();
          swift_bridgeObjectRelease();
          sub_25B207870(v120, type metadata accessor for NetworkSyncHeader);
          _os_log_impl(&dword_25B107000, v121, v122, "Incoming message failed: %{public}s", v124, 0xCu);
          swift_arrayDestroy();
          uint64_t v101 = v142;
          MEMORY[0x261160890](v125, -1, -1);
          uint64_t v128 = v124;
          id v70 = v148;
          MEMORY[0x261160890](v128, -1, -1);
        }
        else
        {
          sub_25B207870(v120, type metadata accessor for NetworkSyncHeader);
        }

        sub_25B1FDBF0(v75 + *(int *)(v101 + 24), 1);
        unint64_t v103 = v152;
        goto LABEL_56;
      default:
        type metadata accessor for OPACKCoder();
        unint64_t v103 = v73;
        uint64_t v104 = v151;
        sub_25B284F38(&v162);
        if (v104)
        {

          uint64_t v108 = (uint64_t)v136;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v135 + 56))(v136, 1, 1, v102);
          sub_25B116DE0(v108, (uint64_t *)&unk_26A4DB070);
          os_log_type_t v109 = sub_25B290160();
          os_log_type_t v110 = sub_25B290880();
          if (os_log_type_enabled(v109, v110))
          {
            uint64_t v111 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v111 = 0;
            _os_log_impl(&dword_25B107000, v109, v110, "Message could not be decoded", v111, 2u);
            MEMORY[0x261160890](v111, -1, -1);
          }

          sub_25B1F7B6C(a6);
          sub_25B10DFF0((uint64_t)v153, v103);
          swift_release();
        }
        else
        {
          sub_25B116E84((uint64_t)&v162, (uint64_t)v159);
          uint64_t v105 = MEMORY[0x263F8EE78];
          unint64_t v106 = sub_25B20D420(MEMORY[0x263F8EE78]);
          uint64_t v157 = (void *)v105;
          unint64_t v158 = v106;
          uint64_t v160 = 0;
          char v161 = 1;
          int v155 = &type metadata for PropertyListTypeDecoder.RootDecoder;
          unint64_t v156 = sub_25B116EE0();
          v154[0] = swift_allocObject();
          sub_25B116F7C((uint64_t)&v157, v154[0] + 16);
          uint64_t v107 = (uint64_t)v136;
          Message.init(from:)(v154, (uint64_t)v136);
          sub_25B116FD8((uint64_t)&v157);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v162);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v135 + 56))(v107, 0, 1, v102);
          int v130 = v134;
          sub_25B20913C(v107, (uint64_t)v134, (uint64_t (*)(void))type metadata accessor for Message);
          sub_25B1F5540((uint64_t)a6);
          sub_25B1FC99C(v130, (uint64_t)a6, v75);
          sub_25B207870((uint64_t)v130, (uint64_t (*)(void))type metadata accessor for Message);
LABEL_56:
          uint64_t v129 = (uint64_t)v153;
          sub_25B1F5540((uint64_t)a6);
          sub_25B1F7B6C(a6);
          swift_release();
          sub_25B10DFF0(v129, v103);
        }

        break;
    }
  }
  else
  {
    uint64_t v87 = v143;
    (*((void (**)(char *, uint64_t, uint8_t *))v148 + 2))(v143, v25, v151);
    uint64_t v88 = swift_beginAccess();
    MEMORY[0x270FA5388](v88);
    uint64_t v89 = swift_bridgeObjectRetain();
    char v90 = sub_25B207FE0(v89, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_25B20AB3C);
    swift_bridgeObjectRelease();
    if (v90) {
      os_log_type_t v91 = sub_25B290880();
    }
    else {
      os_log_type_t v91 = sub_25B290860();
    }
    os_log_type_t v92 = v91;
    swift_unknownObjectRetain_n();
    os_log_type_t v93 = sub_25B290160();
    os_log_type_t v94 = v92;
    if (os_log_type_enabled(v93, v92))
    {
      os_log_type_t v95 = (uint8_t *)swift_slowAlloc();
      uint64_t v96 = swift_slowAlloc();
      v154[0] = v96;
      *(_DWORD *)os_log_type_t v95 = 136446210;
      *(void *)&long long v162 = a6;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v97 = sub_25B290600();
      *(void *)&long long v162 = sub_25B288E98(v97, v98, v154);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v93, v94, "Received nil instead of data; destroying connection %{public}s",
        v95,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v96, -1, -1);
      MEMORY[0x261160890](v95, -1, -1);

      (*((void (**)(char *, uint8_t *))v148 + 1))(v143, v151);
    }
    else
    {

      swift_unknownObjectRelease_n();
      (*((void (**)(char *, uint8_t *))v148 + 1))(v87, v151);
    }
    sub_25B1EAA34(a6);
    swift_release();
  }
}

uint64_t sub_25B1FC99C(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v47 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v46 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for Message();
  MEMORY[0x270FA5388](v45);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25B290410();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (uint64_t *)((char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(void **)(v4 + 24);
  void *v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F0E0], v14);
  id v19 = v18;
  LOBYTE(v18) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if (v18)
  {
    if (qword_26A4D98C8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v20 = sub_25B290190();
  __swift_project_value_buffer(v20, (uint64_t)qword_26A4EB168);
  sub_25B207948((uint64_t)a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Message);
  swift_unknownObjectRetain_n();
  uint64_t v21 = sub_25B290160();
  os_log_type_t v22 = sub_25B2908A0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v44 = v4;
    uint64_t v24 = v23;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v48 = a2;
    uint64_t v49 = v41;
    *(_DWORD *)uint64_t v24 = 136446466;
    unint64_t v43 = a1;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v25 = sub_25B290600();
    uint64_t v42 = a3;
    uint64_t v26 = a2;
    uint64_t v48 = sub_25B288E98(v25, v27, &v49);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    BOOL v28 = (uint64_t *)&v13[*(int *)(v45 + 28)];
    uint64_t v30 = *v28;
    unint64_t v29 = v28[1];
    swift_bridgeObjectRetain();
    uint64_t v31 = v30;
    a2 = v26;
    a3 = v42;
    uint64_t v48 = sub_25B288E98(v31, v29, &v49);
    a1 = v43;
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B207870((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Message);
    _os_log_impl(&dword_25B107000, v21, v22, "%{public}s; Received message from %{public}s", (uint8_t *)v24, 0x16u);
    uint64_t v32 = v41;
    swift_arrayDestroy();
    MEMORY[0x261160890](v32, -1, -1);
    MEMORY[0x261160890](v24, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
    sub_25B207870((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Message);
  }

  uint64_t v33 = type metadata accessor for NetworkSyncHeader(0);
  if (*(_DWORD *)(a3 + *(int *)(v33 + 40)) == 1)
  {
    uint64_t v34 = sub_25B28FEA0();
    uint64_t v35 = (uint64_t)v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v46, 1, 1, v34);
    sub_25B201BAC(a1, v35, a2);
    return sub_25B116DE0(v35, &qword_26A4D9160);
  }
  else
  {
    uint64_t v37 = v33;
    uint64_t v38 = v47;
    sub_25B207948((uint64_t)a1, v47, (uint64_t (*)(void))type metadata accessor for Message);
    char v39 = *(unsigned char *)(a3 + *(int *)(v37 + 48));
    *(void *)(v38 + *(int *)(v8 + 20)) = 0;
    *(unsigned char *)(v38 + *(int *)(v8 + 24)) = v39;
    sub_25B202938(v38);
    return sub_25B207870(v38, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
  }
}

void sub_25B1FCEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB088);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v78 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  uint64_t v74 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v73 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v79 = (int *)type metadata accessor for NetworkSyncHeader(0);
  uint64_t v11 = MEMORY[0x270FA5388](v79);
  uint64_t v77 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v75 = (uint64_t)&v68 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v72 = (uint64_t)&v68 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v68 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v68 - v20;
  uint64_t v22 = sub_25B290410();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (uint64_t *)((char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = *(void **)(v4 + 24);
  *uint64_t v25 = v26;
  (*(void (**)(void *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x263F8F0E0], v22);
  id v27 = v26;
  LOBYTE(v26) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v23 + 8))(v25, v22);
  if (v26)
  {
    if (qword_26A4D98C8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v28 = sub_25B290190();
  uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)qword_26A4EB168);
  sub_25B207948(a3, (uint64_t)v21, type metadata accessor for NetworkSyncHeader);
  sub_25B207948(a3, (uint64_t)v19, type metadata accessor for NetworkSyncHeader);
  swift_unknownObjectRetain_n();
  uint64_t v30 = sub_25B290160();
  os_log_type_t v31 = sub_25B2908A0();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v68 = v29;
    uint64_t v69 = a2;
    uint64_t v70 = a1;
    uint64_t v71 = v4;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v81 = v33;
    *(_DWORD *)uint64_t v32 = 67240706;
    uint64_t v34 = v79;
    int v35 = *(_DWORD *)&v21[v79[11]];
    sub_25B207870((uint64_t)v21, type metadata accessor for NetworkSyncHeader);
    LODWORD(v80) = v35;
    sub_25B2909C0();
    *(_WORD *)(v32 + 8) = 1026;
    int v36 = *(_DWORD *)&v19[v34[10]];
    int v37 = v36 - 1;
    if (!v36)
    {
      __break(1u);
      return;
    }
    sub_25B207870((uint64_t)v19, type metadata accessor for NetworkSyncHeader);
    LODWORD(v80) = v37;
    sub_25B2909C0();
    *(_WORD *)(v32 + 14) = 2082;
    a2 = v69;
    uint64_t v80 = v69;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v38 = sub_25B290600();
    uint64_t v80 = sub_25B288E98(v38, v39, &v81);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v30, v31, "Received extended attributes %{public}u/%{public}u from: %{public}s", (uint8_t *)v32, 0x18u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v33, -1, -1);
    MEMORY[0x261160890](v32, -1, -1);

    a1 = v70;
  }
  else
  {
    sub_25B207870((uint64_t)v19, type metadata accessor for NetworkSyncHeader);
    sub_25B207870((uint64_t)v21, type metadata accessor for NetworkSyncHeader);

    swift_unknownObjectRelease_n();
  }
  uint64_t v40 = v78;
  if (*(_DWORD *)(a3 + v79[10]) != 3)
  {
    uint64_t v41 = v77;
    sub_25B207948(a3, v77, type metadata accessor for NetworkSyncHeader);
    swift_unknownObjectRetain_n();
    uint64_t v42 = sub_25B290160();
    os_log_type_t v43 = sub_25B2908A0();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v81 = v45;
      *(_DWORD *)uint64_t v44 = 136446466;
      sub_25B290080();
      sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
      uint64_t v51 = sub_25B290DB0();
      uint64_t v80 = sub_25B288E98(v51, v52, &v81);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B207870(v41, type metadata accessor for NetworkSyncHeader);
      *(_WORD *)(v44 + 12) = 2082;
      uint64_t v80 = a2;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v53 = sub_25B290600();
      uint64_t v80 = sub_25B288E98(v53, v54, &v81);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      unint64_t v50 = "Received unexpected sequence count for file: %{public}s from: %{public}s";
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  if (*(_DWORD *)(a3 + v79[11]) != 1)
  {
    uint64_t v41 = v75;
    sub_25B207948(a3, v75, type metadata accessor for NetworkSyncHeader);
    swift_unknownObjectRetain_n();
    uint64_t v42 = sub_25B290160();
    os_log_type_t v43 = sub_25B2908A0();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v81 = v45;
      *(_DWORD *)uint64_t v44 = 136446466;
      sub_25B290080();
      sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
      uint64_t v55 = sub_25B290DB0();
      uint64_t v80 = sub_25B288E98(v55, v56, &v81);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B207870(v41, type metadata accessor for NetworkSyncHeader);
      *(_WORD *)(v44 + 12) = 2082;
      uint64_t v80 = a2;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v57 = sub_25B290600();
      uint64_t v80 = sub_25B288E98(v57, v58, &v81);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      unint64_t v50 = "Received unexpected sequence index for file: %{public}s from: %{public}s";
      goto LABEL_16;
    }
LABEL_17:
    sub_25B207870(v41, type metadata accessor for NetworkSyncHeader);

    swift_unknownObjectRelease_n();
    return;
  }
  sub_25B1FE740(a3 + v79[6], v78);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v40, 1, v76) == 1)
  {
    sub_25B116DE0(v40, &qword_26A4DB088);
    uint64_t v41 = v72;
    sub_25B207948(a3, v72, type metadata accessor for NetworkSyncHeader);
    swift_unknownObjectRetain_n();
    uint64_t v42 = sub_25B290160();
    os_log_type_t v43 = sub_25B290880();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v81 = v45;
      *(_DWORD *)uint64_t v44 = 136446466;
      sub_25B290080();
      sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
      uint64_t v46 = sub_25B290DB0();
      uint64_t v80 = sub_25B288E98(v46, v47, &v81);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B207870(v41, type metadata accessor for NetworkSyncHeader);
      *(_WORD *)(v44 + 12) = 2082;
      uint64_t v80 = a2;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v48 = sub_25B290600();
      uint64_t v80 = sub_25B288E98(v48, v49, &v81);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      unint64_t v50 = "Can't receive extended attributes without preexisting metadata: %{public}s from: %{public}s";
LABEL_16:
      _os_log_impl(&dword_25B107000, v42, v43, v50, (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v45, -1, -1);
      MEMORY[0x261160890](v44, -1, -1);

      return;
    }
    goto LABEL_17;
  }
  uint64_t v59 = v73;
  sub_25B20913C(v40, v73, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
  swift_unknownObjectRetain_n();
  uint64_t v60 = sub_25B290160();
  os_log_type_t v61 = sub_25B2908A0();
  if (os_log_type_enabled(v60, v61))
  {
    os_log_type_t v62 = (uint8_t *)swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    uint64_t v80 = a2;
    uint64_t v81 = v63;
    *(_DWORD *)os_log_type_t v62 = 136446210;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v64 = sub_25B290600();
    uint64_t v80 = sub_25B288E98(v64, v65, &v81);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v60, v61, "Updating partial data; waiting for more from: %{public}s", v62, 0xCu);
    swift_arrayDestroy();
    uint64_t v66 = v63;
    uint64_t v59 = v73;
    MEMORY[0x261160890](v66, -1, -1);
    MEMORY[0x261160890](v62, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t v67 = *(int *)(v76 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v59 + v67) = a1;
  sub_25B202938(v59);
  sub_25B207870(v59, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
}

uint64_t sub_25B1FDBF0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v87 = a2;
  uint64_t v101 = a1;
  v104[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v82 = sub_25B28FE30();
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v80 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_25B28FEA0();
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v88 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB088);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v85 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_25B290080();
  unint64_t v98 = *(void (***)(char *, uint64_t))(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Message();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB090);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v77 - v17;
  uint64_t v19 = sub_25B290410();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (uint64_t *)((char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = *(void **)(v3 + 24);
  *uint64_t v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, *MEMORY[0x263F8F0E0], v19);
  id v24 = v23;
  char v25 = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if ((v25 & 1) == 0)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
  }
  int v84 = (uint64_t *)(v3 + 72);
  swift_beginAccess();
  uint64_t v86 = v3;
  uint64_t v26 = *(void *)(v3 + 72);
  uint64_t v27 = *(void *)(v26 + 64);
  uint64_t v89 = v26 + 64;
  uint64_t v28 = 1 << *(unsigned char *)(v26 + 32);
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  else {
    uint64_t v29 = -1;
  }
  unint64_t v30 = v29 & v27;
  int64_t v90 = (unint64_t)(v28 + 63) >> 6;
  os_log_type_t v31 = v98++;
  uint64_t v99 = (void (**)(char *, char *, uint64_t))(v31 + 2);
  uint64_t v32 = swift_bridgeObjectRetain();
  int64_t v33 = 0;
  uint64_t v94 = v32;
  if (!v30) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v92 = (v30 - 1) & v30;
  int64_t v93 = v33;
  unint64_t v34 = __clz(__rbit64(v30)) | (v33 << 6);
LABEL_22:
  uint64_t v39 = *(void *)(v32 + 56);
  uint64_t v40 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v34);
  uint64_t v41 = v40[1];
  uint64_t v91 = *v40;
  uint64_t v42 = *(void *)(v39 + 8 * v34);
  uint64_t v43 = *(void *)(v42 + 64);
  uint64_t v96 = v42 + 64;
  uint64_t v44 = 1 << *(unsigned char *)(v42 + 32);
  if (v44 < 64) {
    uint64_t v45 = ~(-1 << v44);
  }
  else {
    uint64_t v45 = -1;
  }
  unint64_t v46 = v45 & v43;
  int64_t v97 = (unint64_t)(v44 + 63) >> 6;
  int64_t v83 = v97 - 1;
  swift_bridgeObjectRetain_n();
  uint64_t v95 = v41;
  swift_bridgeObjectRetain();
  int64_t v47 = 0;
  do
  {
    if (v46)
    {
      unint64_t v48 = __clz(__rbit64(v46));
      v46 &= v46 - 1;
      unint64_t v49 = v48 | (v47 << 6);
LABEL_28:
      uint64_t v50 = *(void *)(v42 + 56);
      *uint64_t v16 = *(unsigned char *)(*(void *)(v42 + 48) + v49);
      uint64_t v51 = v50
          + *(void *)(*(void *)(type metadata accessor for NetworkMessenger.PartialIncomingMessage(0) - 8) + 72)
          * v49;
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB098);
      sub_25B207948(v51, (uint64_t)&v16[*(int *)(v52 + 48)], type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v16, 0, 1, v52);
      goto LABEL_47;
    }
    int64_t v53 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_57;
    }
    if (v53 < v97)
    {
      unint64_t v54 = *(void *)(v96 + 8 * v53);
      if (v54) {
        goto LABEL_32;
      }
      int64_t v55 = v47 + 2;
      ++v47;
      if (v53 + 1 < v97)
      {
        unint64_t v54 = *(void *)(v96 + 8 * v55);
        if (v54) {
          goto LABEL_35;
        }
        int64_t v47 = v53 + 1;
        if (v53 + 2 < v97)
        {
          unint64_t v54 = *(void *)(v96 + 8 * (v53 + 2));
          if (v54)
          {
            v53 += 2;
            goto LABEL_32;
          }
          int64_t v55 = v53 + 3;
          int64_t v47 = v53 + 2;
          if (v53 + 3 < v97)
          {
            unint64_t v54 = *(void *)(v96 + 8 * v55);
            if (v54)
            {
LABEL_35:
              int64_t v53 = v55;
LABEL_32:
              unint64_t v46 = (v54 - 1) & v54;
              unint64_t v49 = __clz(__rbit64(v54)) + (v53 << 6);
              int64_t v47 = v53;
              goto LABEL_28;
            }
            while (1)
            {
              int64_t v53 = v55 + 1;
              if (__OFADD__(v55, 1)) {
                goto LABEL_59;
              }
              if (v53 >= v97) {
                break;
              }
              unint64_t v54 = *(void *)(v96 + 8 * v53);
              ++v55;
              if (v54) {
                goto LABEL_32;
              }
            }
            int64_t v47 = v83;
          }
        }
      }
    }
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB098);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v16, 1, 1, v56);
    unint64_t v46 = 0;
LABEL_47:
    sub_25B187574((uint64_t)v16, (uint64_t)v18, &qword_26A4DB090);
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB098);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v18, 1, v57) == 1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      int64_t v33 = v93;
      uint64_t v32 = v94;
      unint64_t v30 = v92;
      if (v92) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v35 = v33 + 1;
      if (__OFADD__(v33, 1)) {
        goto LABEL_58;
      }
      if (v35 >= v90) {
        goto LABEL_50;
      }
      unint64_t v36 = *(void *)(v89 + 8 * v35);
      int64_t v37 = v33 + 1;
      if (!v36)
      {
        int64_t v37 = v33 + 2;
        if (v33 + 2 >= v90) {
          goto LABEL_50;
        }
        unint64_t v36 = *(void *)(v89 + 8 * v37);
        if (!v36)
        {
          int64_t v37 = v33 + 3;
          if (v33 + 3 >= v90) {
            goto LABEL_50;
          }
          unint64_t v36 = *(void *)(v89 + 8 * v37);
          if (!v36)
          {
            uint64_t v38 = v33 + 4;
            if (v33 + 4 >= v90) {
              goto LABEL_50;
            }
            unint64_t v36 = *(void *)(v89 + 8 * v38);
            if (!v36)
            {
              while (1)
              {
                int64_t v37 = v38 + 1;
                if (__OFADD__(v38, 1)) {
                  goto LABEL_60;
                }
                if (v37 >= v90) {
                  goto LABEL_50;
                }
                unint64_t v36 = *(void *)(v89 + 8 * v37);
                ++v38;
                if (v36) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v37 = v33 + 4;
          }
        }
      }
LABEL_21:
      uint64_t v92 = (v36 - 1) & v36;
      int64_t v93 = v37;
      unint64_t v34 = __clz(__rbit64(v36)) + (v37 << 6);
      goto LABEL_22;
    }
    char v58 = *v18;
    uint64_t v59 = (uint64_t)&v18[*(int *)(v57 + 48)];
    sub_25B207948(v59, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Message);
    sub_25B207870(v59, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
    uint64_t v60 = v100;
    (*v99)(v9, v12, v100);
    sub_25B207870((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Message);
    LOBYTE(v59) = sub_25B290030();
    (*v98)(v9, v60);
  }
  while ((v59 & 1) == 0);
  uint64_t v103 = v42;
  uint64_t v61 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  uint64_t v62 = (uint64_t)v85;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v85, 1, 1, v61);
  sub_25B20F07C(v62, v58);
  uint64_t v63 = v103;
  uint64_t v64 = v84;
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v102 = *v64;
  *uint64_t v64 = 0x8000000000000000;
  sub_25B221DD4(v63, v91, v95, isUniquelyReferenced_nonNull_native);
  *uint64_t v64 = v102;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
LABEL_50:
  uint64_t result = swift_release();
  if (v87)
  {
    v104[0] = (id)sub_25B290020();
    v104[1] = v67;
    uint64_t v68 = v81;
    uint64_t v69 = v80;
    uint64_t v70 = v82;
    (*(void (**)(char *, void, uint64_t))(v81 + 104))(v80, *MEMORY[0x263F06E50], v82);
    sub_25B20A1E4();
    sub_25B28FE90();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
    swift_bridgeObjectRelease();
    id v71 = objc_msgSend(self, sel_defaultManager);
    uint64_t v72 = (void *)sub_25B28FE40();
    v104[0] = 0;
    unsigned int v73 = objc_msgSend(v71, sel_removeItemAtURL_error_, v72, v104);

    if (v73)
    {
      id v74 = v104[0];
    }
    else
    {
      id v75 = v104[0];
      uint64_t v76 = (void *)sub_25B28FE20();

      swift_willThrow();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v88, v79);
  }
  return result;
}

uint64_t sub_25B1FE740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v50 = a2;
  uint64_t v51 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  uint64_t v58 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB090);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v49 - v9;
  uint64_t v11 = sub_25B290410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (int64_t *)((char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v2 + 24);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  id v16 = v15;
  char v17 = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) == 0) {
    goto LABEL_54;
  }
  swift_beginAccess();
  uint64_t v19 = *(void *)(v2 + 72);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v52 = v19 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(v19 + 32);
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v23 = v22 & v20;
  int64_t v53 = (unint64_t)(v21 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v24 = 0;
  uint64_t v56 = result;
  if (!v23) {
    goto LABEL_8;
  }
  while (2)
  {
    uint64_t v54 = (v23 - 1) & v23;
    int64_t v55 = v24;
    unint64_t v25 = __clz(__rbit64(v23)) | (v24 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(*(void *)(result + 56) + 8 * v25);
    uint64_t v31 = *(void *)(v30 + 64);
    uint64_t v57 = v30 + 64;
    uint64_t v32 = 1 << *(unsigned char *)(v30 + 32);
    if (v32 < 64) {
      uint64_t v33 = ~(-1 << v32);
    }
    else {
      uint64_t v33 = -1;
    }
    unint64_t v34 = v33 & v31;
    int64_t v35 = (unint64_t)(v32 + 63) >> 6;
    int64_t v49 = v35 - 1;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v36 = 0;
    if (v34)
    {
LABEL_26:
      unint64_t v37 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      unint64_t v38 = v37 | (v36 << 6);
LABEL_27:
      uint64_t v39 = *(void *)(v30 + 56);
      *uint64_t v8 = *(unsigned char *)(*(void *)(v30 + 48) + v38);
      uint64_t v40 = v39 + *(void *)(v58 + 72) * v38;
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB098);
      sub_25B207948(v40, (uint64_t)&v8[*(int *)(v41 + 48)], type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v8, 0, 1, v41);
      goto LABEL_46;
    }
    while (1)
    {
      int64_t v42 = v36 + 1;
      if (__OFADD__(v36, 1))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      if (v42 < v35)
      {
        unint64_t v43 = *(void *)(v57 + 8 * v42);
        if (v43) {
          goto LABEL_31;
        }
        int64_t v44 = v36 + 2;
        ++v36;
        if (v42 + 1 < v35)
        {
          unint64_t v43 = *(void *)(v57 + 8 * v44);
          if (v43) {
            goto LABEL_34;
          }
          int64_t v36 = v42 + 1;
          if (v42 + 2 < v35)
          {
            unint64_t v43 = *(void *)(v57 + 8 * (v42 + 2));
            if (v43)
            {
              v42 += 2;
              goto LABEL_31;
            }
            int64_t v44 = v42 + 3;
            int64_t v36 = v42 + 2;
            if (v42 + 3 < v35)
            {
              unint64_t v43 = *(void *)(v57 + 8 * v44);
              if (v43)
              {
LABEL_34:
                int64_t v42 = v44;
LABEL_31:
                unint64_t v34 = (v43 - 1) & v43;
                unint64_t v38 = __clz(__rbit64(v43)) + (v42 << 6);
                int64_t v36 = v42;
                goto LABEL_27;
              }
              while (1)
              {
                int64_t v42 = v44 + 1;
                if (__OFADD__(v44, 1)) {
                  break;
                }
                if (v42 >= v35)
                {
                  int64_t v36 = v49;
                  goto LABEL_45;
                }
                unint64_t v43 = *(void *)(v57 + 8 * v42);
                ++v44;
                if (v43) {
                  goto LABEL_31;
                }
              }
LABEL_56:
              __break(1u);
              goto LABEL_57;
            }
          }
        }
      }
LABEL_45:
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB098);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v8, 1, 1, v45);
      unint64_t v34 = 0;
LABEL_46:
      sub_25B187574((uint64_t)v8, (uint64_t)v10, &qword_26A4DB090);
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB098);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v10, 1, v46) == 1) {
        break;
      }
      sub_25B20913C((uint64_t)&v10[*(int *)(v46 + 48)], (uint64_t)v4, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      if (sub_25B290030())
      {
        swift_release();
        swift_release();
        uint64_t v47 = v50;
        sub_25B20913C((uint64_t)v4, v50, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
        uint64_t v48 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v47, v48, 1, v51);
      }
      uint64_t result = sub_25B207870((uint64_t)v4, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      if (v34) {
        goto LABEL_26;
      }
    }
    swift_release();
    int64_t v24 = v55;
    uint64_t result = v56;
    unint64_t v23 = v54;
    if (v54) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v26 = v24 + 1;
  if (__OFADD__(v24, 1)) {
    goto LABEL_55;
  }
  if (v26 >= v53) {
    goto LABEL_52;
  }
  unint64_t v27 = *(void *)(v52 + 8 * v26);
  int64_t v28 = v24 + 1;
  if (v27) {
    goto LABEL_21;
  }
  int64_t v28 = v24 + 2;
  if (v24 + 2 >= v53) {
    goto LABEL_52;
  }
  unint64_t v27 = *(void *)(v52 + 8 * v28);
  if (v27) {
    goto LABEL_21;
  }
  int64_t v28 = v24 + 3;
  if (v24 + 3 >= v53) {
    goto LABEL_52;
  }
  unint64_t v27 = *(void *)(v52 + 8 * v28);
  if (v27) {
    goto LABEL_21;
  }
  uint64_t v29 = v24 + 4;
  if (v24 + 4 >= v53)
  {
LABEL_52:
    swift_release();
    uint64_t v48 = 1;
    uint64_t v47 = v50;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v47, v48, 1, v51);
  }
  unint64_t v27 = *(void *)(v52 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v24 + 4;
LABEL_21:
    uint64_t v54 = (v27 - 1) & v27;
    int64_t v55 = v28;
    unint64_t v25 = __clz(__rbit64(v27)) + (v28 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v53) {
      goto LABEL_52;
    }
    unint64_t v27 = *(void *)(v52 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_21;
    }
  }
LABEL_57:
  __break(1u);
  return result;
}

void sub_25B1FEDB8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v107 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v100 = (char *)v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25B28FE30();
  uint64_t v103 = *(char **)(v7 - 8);
  int64_t v104 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25B28FEA0();
  uint64_t v101 = *(void *)(v10 - 8);
  uint64_t v102 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v106 = (char *)v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB088);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v105 = (void (*)(char *, uint64_t))((char *)v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for NetworkSyncHeader(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  int64_t v24 = (char *)v99 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v32 = (char *)v99 - v31;
  uint64_t v33 = *(int *)(v27 + 32);
  uint64_t v108 = (char *)a2;
  LODWORD(v33) = *(_DWORD *)(a2 + v33);
  uint32_t v34 = v33 - a3;
  if (v33 < a3)
  {
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v34 >> 15)
  {
    uint32_t v34 = 0x8000;
    goto LABEL_9;
  }
  if (v34)
  {
LABEL_9:
    uint64_t v46 = swift_allocObject();
    swift_weakInit();
    sub_25B207948((uint64_t)v108, (uint64_t)v32, type metadata accessor for NetworkSyncHeader);
    unint64_t v47 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    unint64_t v48 = (v20 + v47 + 3) & 0xFFFFFFFFFFFFFFFCLL;
    uint64_t v49 = swift_allocObject();
    uint64_t v50 = v107;
    *(void *)(v49 + 16) = v46;
    *(void *)(v49 + 24) = v50;
    sub_25B20913C((uint64_t)v32, v49 + v47, type metadata accessor for NetworkSyncHeader);
    *(_DWORD *)(v49 + v48) = v34;
    *(_DWORD *)(v49 + ((v48 + 7) & 0xFFFFFFFFFFFFFFFCLL)) = a3;
    uint64_t v114 = sub_25B20A37C;
    uint64_t v115 = v49;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v111 = 1107296256;
    id v112 = sub_25B1FB000;
    int v113 = &block_descriptor_287;
    uint64_t v51 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_release();
    nw_connection_receive(v50, v34, v34, v51);
    _Block_release(v51);
    return;
  }
  uint64_t v35 = v30;
  uint64_t v36 = v29;
  v99[1] = v28;
  void v99[2] = v27;
  uint64_t v32 = v108;
  uint64_t v19 = (uint64_t)&v108[*(int *)(v27 + 24)];
  sub_25B1FE740(v19, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_25B116DE0((uint64_t)v14, &qword_26A4DB088);
    if (qword_26A4D98C8 == -1)
    {
LABEL_6:
      uint64_t v37 = sub_25B290190();
      __swift_project_value_buffer(v37, (uint64_t)qword_26A4EB168);
      sub_25B207948((uint64_t)v32, (uint64_t)v24, type metadata accessor for NetworkSyncHeader);
      unint64_t v38 = sub_25B290160();
      os_log_type_t v39 = sub_25B290880();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = v19;
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        uint64_t aBlock = v42;
        *(_DWORD *)uint64_t v41 = 136446210;
        sub_25B290080();
        sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
        uint64_t v43 = sub_25B290DB0();
        uint64_t v109 = sub_25B288E98(v43, v44, &aBlock);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B207870((uint64_t)v24, type metadata accessor for NetworkSyncHeader);
        _os_log_impl(&dword_25B107000, v38, v39, "Partial message does not exist for completed incoming file: %{public}s", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261160890](v42, -1, -1);
        uint64_t v45 = v41;
        uint64_t v19 = v40;
        MEMORY[0x261160890](v45, -1, -1);
      }
      else
      {
        sub_25B207870((uint64_t)v24, type metadata accessor for NetworkSyncHeader);
      }

      sub_25B1FDBF0(v19, 1);
      return;
    }
LABEL_50:
    swift_once();
    goto LABEL_6;
  }
  uint64_t v52 = (uint64_t)v14;
  int64_t v53 = v105;
  sub_25B20913C(v52, (uint64_t)v105, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
  int64_t v24 = *(char **)((char *)v53 + *(int *)(v15 + 20));
  if (!v24)
  {
    if (qword_26A4D98C8 != -1) {
      goto LABEL_52;
    }
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  v99[0] = v19;
  uint64_t aBlock = sub_25B290020();
  uint64_t v111 = v54;
  uint64_t v56 = v103;
  int64_t v55 = v104;
  (*((void (**)(char *, void, int64_t))v103 + 13))(v9, *MEMORY[0x263F06E50], v104);
  sub_25B20A1E4();
  sub_25B28FE90();
  (*((void (**)(char *, int64_t))v56 + 1))(v9, v55);
  swift_bridgeObjectRelease();
  id v57 = objc_msgSend(self, sel_defaultManager);
  sub_25B28FE80();
  uint64_t v58 = (void *)sub_25B290590();
  swift_bridgeObjectRelease();
  unsigned int v59 = objc_msgSend(v57, sel_fileExistsAtPath_, v58);

  if (!v59)
  {
    swift_bridgeObjectRelease();
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_25B290190();
    __swift_project_value_buffer(v84, (uint64_t)qword_26A4EB168);
    sub_25B207948((uint64_t)v32, v36, type metadata accessor for NetworkSyncHeader);
    uint64_t v85 = sub_25B290160();
    os_log_type_t v86 = sub_25B290880();
    if (os_log_type_enabled(v85, v86))
    {
      int v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      uint64_t aBlock = v88;
      *(_DWORD *)int v87 = 136446210;
      sub_25B290080();
      sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
      uint64_t v89 = sub_25B290DB0();
      uint64_t v109 = sub_25B288E98(v89, v90, &aBlock);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B207870(v36, type metadata accessor for NetworkSyncHeader);
      _os_log_impl(&dword_25B107000, v85, v86, "File does not exist for extended attributes: %{public}s", v87, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v88, -1, -1);
      MEMORY[0x261160890](v87, -1, -1);
    }
    else
    {
      sub_25B207870(v36, type metadata accessor for NetworkSyncHeader);
    }

    uint64_t v92 = v101;
    uint64_t v91 = v102;
    sub_25B1FDBF0(v99[0], 1);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v106, v91);
    goto LABEL_47;
  }
  int64_t v61 = 0;
  uint64_t v19 = 0;
  uint64_t v62 = *((void *)v24 + 8);
  uint64_t v103 = v24 + 64;
  uint64_t v63 = 1 << v24[32];
  uint64_t v64 = -1;
  if (v63 < 64) {
    uint64_t v64 = ~(-1 << v63);
  }
  uint64_t v35 = v64 & v62;
  int64_t v104 = (unint64_t)(v63 + 63) >> 6;
  if ((v64 & v62) == 0) {
    goto LABEL_16;
  }
LABEL_15:
  unint64_t v65 = __clz(__rbit64(v35));
  v35 &= v35 - 1;
  for (unint64_t i = v65 | (v61 << 6); ; unint64_t i = __clz(__rbit64(v68)) + (v61 << 6))
  {
    uint64_t v70 = 16 * i;
    uint64_t v71 = *(void *)(*((void *)v24 + 6) + v70 + 8);
    uint64_t v72 = (uint64_t *)(*((void *)v24 + 7) + v70);
    uint64_t v73 = *v72;
    uint64_t v32 = (char *)v72[1];
    MEMORY[0x270FA5388](v60);
    v99[-4] = v73;
    v99[-3] = (uint64_t)v32;
    v99[-2] = v74;
    v99[-1] = v71;
    swift_bridgeObjectRetain();
    sub_25B114300(v73, (unint64_t)v32);
    sub_25B28FE50();
    sub_25B10DFF0(v73, (unint64_t)v32);
    uint64_t v60 = swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_15;
    }
LABEL_16:
    if (__OFADD__(v61++, 1)) {
      goto LABEL_49;
    }
    if (v61 >= v104)
    {
LABEL_46:
      swift_release();
      sub_25B1FDBF0(v99[0], 0);
      uint64_t v94 = (uint64_t)v100;
      uint64_t v93 = v101;
      uint64_t v95 = v106;
      uint64_t v96 = v102;
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v100, v106, v102);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v93 + 56))(v94, 0, 1, v96);
      int64_t v97 = v105;
      uint64_t v98 = (uint64_t)v107;
      sub_25B201BAC(v105, v94, (uint64_t)v107);
      sub_25B116DE0(v94, &qword_26A4D9160);
      sub_25B1F7B6C(v98);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v96);
      sub_25B207870((uint64_t)v97, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      return;
    }
    unint64_t v68 = *(void *)&v103[8 * v61];
    if (!v68) {
      break;
    }
LABEL_26:
    uint64_t v35 = (v68 - 1) & v68;
  }
  int64_t v69 = v61 + 1;
  if (v61 + 1 >= v104) {
    goto LABEL_46;
  }
  unint64_t v68 = *(void *)&v103[8 * v69];
  if (v68) {
    goto LABEL_25;
  }
  int64_t v69 = v61 + 2;
  if (v61 + 2 >= v104) {
    goto LABEL_46;
  }
  unint64_t v68 = *(void *)&v103[8 * v69];
  if (v68) {
    goto LABEL_25;
  }
  int64_t v69 = v61 + 3;
  if (v61 + 3 >= v104) {
    goto LABEL_46;
  }
  unint64_t v68 = *(void *)&v103[8 * v69];
  if (v68)
  {
LABEL_25:
    int64_t v61 = v69;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v61 = v69 + 1;
    if (__OFADD__(v69, 1)) {
      break;
    }
    if (v61 >= v104) {
      goto LABEL_46;
    }
    unint64_t v68 = *(void *)&v103[8 * v61];
    ++v69;
    if (v68) {
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_52:
  swift_once();
LABEL_36:
  uint64_t v75 = sub_25B290190();
  __swift_project_value_buffer(v75, (uint64_t)qword_26A4EB168);
  sub_25B207948((uint64_t)v32, v35, type metadata accessor for NetworkSyncHeader);
  uint64_t v76 = sub_25B290160();
  os_log_type_t v77 = sub_25B290880();
  if (os_log_type_enabled(v76, v77))
  {
    uint64_t v78 = v19;
    uint64_t v79 = (uint8_t *)swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    uint64_t aBlock = v80;
    *(_DWORD *)uint64_t v79 = 136446210;
    sub_25B290080();
    sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
    uint64_t v81 = sub_25B290DB0();
    uint64_t v109 = sub_25B288E98(v81, v82, &aBlock);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    sub_25B207870(v35, type metadata accessor for NetworkSyncHeader);
    _os_log_impl(&dword_25B107000, v76, v77, "Extended attributes do not exist for completed incoming file: %{public}s", v79, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v80, -1, -1);
    int64_t v83 = v79;
    uint64_t v19 = v78;
    MEMORY[0x261160890](v83, -1, -1);
  }
  else
  {
    sub_25B207870(v35, type metadata accessor for NetworkSyncHeader);
  }

  sub_25B1FDBF0(v19, 1);
LABEL_47:
  sub_25B207870((uint64_t)v105, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
}

uint64_t sub_25B1FFFA4(unint64_t a1, void (*a2)(uint64_t, char *, uint64_t), int a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8, int a9)
{
  int v166 = a8;
  uint64_t v181 = a7;
  int v167 = a3;
  uint64_t v185 = a2;
  unint64_t v187 = a1;
  uint64_t v193 = *MEMORY[0x263EF8340];
  uint64_t v179 = type metadata accessor for NetworkSyncHeader(0);
  MEMORY[0x270FA5388](v179);
  uint64_t v12 = (char *)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = (void *)sub_25B28FE30();
  unint64_t v174 = *(v175 - 1);
  MEMORY[0x270FA5388](v175);
  unint64_t v173 = (char *)&v161 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25B28FEA0();
  uint64_t v186 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v161 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v161 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v161 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v169 = (char *)&v161 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v161 - v26;
  uint64_t v172 = sub_25B2903B0();
  uint64_t v171 = *(void *)(v172 - 8);
  MEMORY[0x270FA5388](v172);
  uint64_t v170 = (char *)&v161 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = sub_25B290190();
  uint64_t v177 = *(void *)(v184 - 8);
  MEMORY[0x270FA5388](v184);
  uint64_t v176 = (char *)&v161 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v31 = result;
  uint64_t v163 = v23;
  unint64_t v165 = v17;
  if (qword_26A4D98C8 != -1) {
    swift_once();
  }
  uint64_t v32 = __swift_project_value_buffer(v184, (uint64_t)qword_26A4EB168);
  swift_unknownObjectRetain_n();
  uint64_t v33 = sub_25B290160();
  os_log_type_t v34 = sub_25B2908A0();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v182 = v32;
  uint64_t v183 = v31;
  uint64_t v178 = v14;
  uint64_t v188 = (uint64_t)a6;
  uint64_t v180 = v27;
  uint64_t v164 = v12;
  long long v162 = v20;
  if (v35)
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 136446210;
    uint64_t v190 = v188;
    uint64_t v191 = v37;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v38 = sub_25B290600();
    uint64_t v190 = sub_25B288E98(v38, v39, &v191);
    uint64_t v32 = v182;
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v33, v34, "Received file data from: %{public}s", v36, 0xCu);
    swift_arrayDestroy();
    uint64_t v40 = v37;
    a6 = v188;
    MEMORY[0x261160890](v40, -1, -1);
    MEMORY[0x261160890](v36, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t v41 = (void *)v187;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  id v42 = v41;
  uint64_t v43 = (uint64_t)v185;
  swift_unknownObjectRetain_n();
  id v44 = v42;
  uint64_t v45 = sub_25B290160();
  os_log_type_t v46 = sub_25B2908A0();
  BOOL v47 = os_log_type_enabled(v45, v46);
  id v168 = v44;
  if (v47)
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v49 = (void *)swift_slowAlloc();
    uint64_t v161 = swift_slowAlloc();
    uint64_t v190 = (uint64_t)a6;
    uint64_t v191 = v161;
    *(_DWORD *)uint64_t v48 = 136447234;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v50 = sub_25B290600();
    uint64_t v190 = sub_25B288E98(v50, v51, &v191);
    sub_25B2909C0();
    unint64_t v52 = v187;
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2112;
    if (v52)
    {
      id v53 = v168;
      uint64_t v190 = (uint64_t)v168;
      id v54 = v168;
      sub_25B2909C0();
    }
    else
    {
      uint64_t v190 = 0;
      sub_25B2909C0();
      id v53 = v168;
    }
    *uint64_t v49 = v52;

    *(_WORD *)(v48 + 22) = 2080;
    uint64_t v43 = (uint64_t)v185;
    uint64_t v190 = (uint64_t)v185;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB060);
    uint64_t v55 = sub_25B290600();
    uint64_t v190 = sub_25B288E98(v55, v56, &v191);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 32) = 1024;
    LODWORD(v190) = v167 & 1;
    sub_25B2909C0();
    *(_WORD *)(v48 + 38) = 2080;
    uint64_t v190 = a4;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB068);
    uint64_t v57 = sub_25B290600();
    uint64_t v190 = sub_25B288E98(v57, v58, &v191);
    uint64_t v41 = (void *)v187;
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v45, v46, "%{public}s; Parameters: content: %@, context: %s, isComplete: %{BOOL}d, error: %s",
      (uint8_t *)v48,
      0x30u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
    swift_arrayDestroy();
    MEMORY[0x261160890](v49, -1, -1);
    uint64_t v59 = v161;
    swift_arrayDestroy();
    MEMORY[0x261160890](v59, -1, -1);
    MEMORY[0x261160890](v48, -1, -1);

    uint64_t v32 = v182;
    a6 = v188;
    if (!a4) {
      goto LABEL_16;
    }
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();

    swift_unknownObjectRelease_n();
    if (!a4) {
      goto LABEL_16;
    }
  }
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v60 = sub_25B290160();
  os_log_type_t v61 = sub_25B290880();
  if (!os_log_type_enabled(v60, v61))
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
    if (!v43) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  uint64_t v62 = swift_slowAlloc();
  uint64_t v63 = swift_slowAlloc();
  uint64_t v190 = (uint64_t)a6;
  uint64_t v191 = v63;
  *(_DWORD *)uint64_t v62 = 136446466;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
  uint64_t v64 = sub_25B290600();
  uint64_t v190 = sub_25B288E98(v64, v65, &v191);
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v62 + 12) = 2082;
  uint64_t v190 = a4;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFF8);
  uint64_t v66 = sub_25B290600();
  uint64_t v190 = sub_25B288E98(v66, v67, &v191);
  uint64_t v41 = (void *)v187;
  sub_25B2909C0();
  swift_unknownObjectRelease_n();
  uint64_t v32 = v182;
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_25B107000, v60, v61, "%{public}s; Received error: %{public}s", (uint8_t *)v62, 0x16u);
  swift_arrayDestroy();
  uint64_t v68 = v63;
  uint64_t v43 = (uint64_t)v185;
  MEMORY[0x261160890](v68, -1, -1);
  MEMORY[0x261160890](v62, -1, -1);
  swift_unknownObjectRelease();

LABEL_16:
  if (!v43)
  {
LABEL_21:
    if (v41) {
      goto LABEL_22;
    }
LABEL_26:
    (*(void (**)(char *, uint64_t, uint64_t))(v177 + 16))(v176, v32, v184);
    uint64_t v96 = swift_beginAccess();
    MEMORY[0x270FA5388](v96);
    uint64_t v97 = swift_bridgeObjectRetain();
    char v98 = sub_25B207FE0(v97, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_25B20AB3C);
    swift_bridgeObjectRelease();
    if (v98) {
      os_log_type_t v99 = sub_25B290880();
    }
    else {
      os_log_type_t v99 = sub_25B290860();
    }
    os_log_type_t v100 = v99;
    swift_unknownObjectRetain_n();
    uint64_t v101 = v176;
    uint64_t v102 = sub_25B290160();
    if (os_log_type_enabled(v102, v100))
    {
      uint64_t v103 = v101;
      int64_t v104 = (uint8_t *)swift_slowAlloc();
      uint64_t v105 = swift_slowAlloc();
      uint64_t v190 = v105;
      *(_DWORD *)int64_t v104 = 136446210;
      uint64_t v189 = (uint64_t)a6;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
      uint64_t v106 = sub_25B290600();
      uint64_t v189 = sub_25B288E98(v106, v107, &v190);
      sub_25B2909C0();
      swift_unknownObjectRelease_n();
      a6 = v188;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v102, v100, "Received nil instead of file data; destroying connection %{public}s",
        v104,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x261160890](v105, -1, -1);
      MEMORY[0x261160890](v104, -1, -1);

      (*(void (**)(char *, uint64_t))(v177 + 8))(v103, v184);
    }
    else
    {

      swift_unknownObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v177 + 8))(v101, v184);
    }
    sub_25B1EAA34(a6);
    return swift_release();
  }
LABEL_19:
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  int64_t v69 = sub_25B290160();
  os_log_type_t v70 = sub_25B2908A0();
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v71 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    uint64_t v190 = (uint64_t)a6;
    uint64_t v191 = v72;
    *(_DWORD *)uint64_t v71 = 136446466;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v73 = sub_25B290600();
    uint64_t v190 = sub_25B288E98(v73, v74, &v191);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 12) = 2082;
    uint64_t v190 = v43;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB058);
    uint64_t v75 = sub_25B290600();
    uint64_t v190 = sub_25B288E98(v75, v76, &v191);
    uint64_t v41 = (void *)v187;
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    uint64_t v32 = v182;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v69, v70, "%{public}s; Received context: %{public}s", (uint8_t *)v71, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v72, -1, -1);
    MEMORY[0x261160890](v71, -1, -1);
    swift_unknownObjectRelease();

    goto LABEL_21;
  }

  swift_unknownObjectRelease_n();
  swift_unknownObjectRelease_n();
  if (!v41) {
    goto LABEL_26;
  }
LABEL_22:
  os_log_type_t v77 = v170;
  sub_25B290380();
  uint64_t v176 = (char *)v168;
  uint64_t v78 = sub_25B2903A0();
  uint64_t v191 = sub_25B209B80(v78);
  unint64_t v192 = v79;
  MEMORY[0x270FA5388](v191);
  sub_25B2066A0((uint64_t (*)(uint64_t, uint64_t))sub_25B209C20);
  uint64_t v177 = 0;
  (*(void (**)(char *, uint64_t))(v171 + 8))(v77, v172);
  uint64_t v81 = v191;
  unint64_t v80 = v192;
  uint64_t v172 = v181 + *(int *)(v179 + 24);
  uint64_t v82 = sub_25B290020();
  unint64_t v84 = v83;
  uint64_t v191 = v82;
  unint64_t v192 = v83;
  unint64_t v85 = v174;
  os_log_type_t v86 = v173;
  int v87 = v175;
  (*(void (**)(char *, void, void *))(v174 + 104))(v173, *MEMORY[0x263F06E50], v175);
  sub_25B20A1E4();
  sub_25B28FE90();
  (*(void (**)(char *, void *))(v85 + 8))(v86, v87);
  sub_25B114300(v81, v80);
  sub_25B114300(v81, v80);
  swift_bridgeObjectRetain();
  uint64_t v88 = sub_25B290160();
  int v89 = sub_25B2908A0();
  BOOL v90 = os_log_type_enabled(v88, (os_log_type_t)v89);
  unint64_t v187 = v81;
  unint64_t v174 = v80 >> 62;
  if (v90)
  {
    LODWORD(v185) = v89;
    uint64_t v91 = swift_slowAlloc();
    uint64_t v92 = swift_slowAlloc();
    uint64_t v191 = v92;
    *(_DWORD *)uint64_t v91 = 136446722;
    swift_bridgeObjectRetain();
    uint64_t v190 = sub_25B288E98(v82, v84, &v191);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v91 + 12) = 1026;
    LODWORD(v190) = v166;
    sub_25B2909C0();
    *(_WORD *)(v91 + 18) = 2050;
    uint64_t v93 = v180;
    switch(v80 >> 62)
    {
      case 1uLL:
        int v110 = v187;
        unint64_t v111 = HIDWORD(v187);
        sub_25B10DFF0(v187, v80);
        LODWORD(v95) = v111 - v110;
        if (__OFSUB__(v111, v110)) {
          goto LABEL_67;
        }
        unint64_t v95 = (int)v95;
LABEL_40:
        uint64_t v94 = v187;
        break;
      case 2uLL:
        uint64_t v109 = *(void *)(v187 + 16);
        uint64_t v108 = *(void *)(v187 + 24);
        sub_25B10DFF0(v187, v80);
        unint64_t v95 = v108 - v109;
        if (!__OFSUB__(v108, v109)) {
          goto LABEL_40;
        }
        __break(1u);
LABEL_37:
        uint64_t v94 = v187;
        sub_25B10DFF0(v187, v80);
        unint64_t v95 = 0;
        break;
      case 3uLL:
        goto LABEL_37;
      default:
        uint64_t v94 = v187;
        sub_25B10DFF0(v187, v80);
        unint64_t v95 = BYTE6(v80);
        break;
    }
    os_log_type_t v112 = v185;
    uint64_t v190 = v95;
    sub_25B2909C0();
    sub_25B10DFF0(v94, v80);
    _os_log_impl(&dword_25B107000, v88, v112, "%{public}s: Expected %{public}u; got %{public}ld", (uint8_t *)v91, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v92, -1, -1);
    MEMORY[0x261160890](v91, -1, -1);
  }
  else
  {
    sub_25B10DFF0(v81, v80);
    swift_bridgeObjectRelease_n();
    sub_25B10DFF0(v81, v80);

    uint64_t v93 = v180;
  }
  id v113 = objc_msgSend(self, sel_defaultManager);
  sub_25B28FE80();
  uint64_t v114 = (void *)sub_25B290590();
  swift_bridgeObjectRelease();
  unsigned int v115 = objc_msgSend(v113, sel_fileExistsAtPath_, v114);

  uint64_t v116 = *(void (**)(uint64_t, char *, uint64_t))(v186 + 16);
  id v117 = v169;
  uint64_t v184 = v80;
  uint64_t v185 = v116;
  if (v115)
  {
    uint64_t v118 = v178;
    v116((uint64_t)v169, v93, v178);
    uint64_t v119 = sub_25B290160();
    os_log_type_t v120 = sub_25B2908A0();
    if (os_log_type_enabled(v119, v120))
    {
      uint64_t v121 = v117;
      os_log_type_t v122 = (uint8_t *)swift_slowAlloc();
      uint64_t v123 = swift_slowAlloc();
      uint64_t v191 = v123;
      *(_DWORD *)os_log_type_t v122 = 136446210;
      uint64_t v124 = sub_25B28FE80();
      uint64_t v190 = sub_25B288E98(v124, v125, &v191);
      uint64_t v118 = v178;
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      uint64_t v175 = *(void **)(v186 + 8);
      ((void (*)(char *, uint64_t))v175)(v121, v118);
      _os_log_impl(&dword_25B107000, v119, v120, "Appending chunk to %{public}s", v122, 0xCu);
      swift_arrayDestroy();
      uint64_t v126 = v123;
      uint64_t v93 = v180;
      MEMORY[0x261160890](v126, -1, -1);
      MEMORY[0x261160890](v122, -1, -1);
    }
    else
    {
      uint64_t v175 = *(void **)(v186 + 8);
      ((void (*)(char *, uint64_t))v175)(v117, v118);
    }

    uint64_t v135 = v188;
    uint64_t v136 = (uint64_t)v163;
    sub_25B20A470();
    v185(v136, v93, v118);
    uint64_t v137 = (void *)v177;
    id v138 = sub_25B201A54(v136);
    if (!v137)
    {
      uint64_t v139 = v138;
      sub_25B290850();
      uint64_t v154 = v187;
      int v155 = (void *)sub_25B28FF00();
      objc_msgSend(v139, sel_writeData_, v155);

      goto LABEL_56;
    }
LABEL_52:
    uint64_t v140 = (uint64_t)v164;
    sub_25B207948(v181, (uint64_t)v164, type metadata accessor for NetworkSyncHeader);
    id v141 = v165;
    v185((uint64_t)v165, v93, v118);
    uint64_t v142 = sub_25B290160();
    os_log_type_t v143 = sub_25B290880();
    if (os_log_type_enabled(v142, v143))
    {
      uint64_t v144 = swift_slowAlloc();
      uint64_t v188 = swift_slowAlloc();
      uint64_t v191 = v188;
      *(_DWORD *)uint64_t v144 = 136446466;
      sub_25B290080();
      sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
      uint64_t v145 = sub_25B290DB0();
      uint64_t v190 = sub_25B288E98(v145, v146, &v191);
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      sub_25B207870(v140, type metadata accessor for NetworkSyncHeader);
      *(_WORD *)(v144 + 12) = 2082;
      uint64_t v147 = sub_25B28FE80();
      uint64_t v190 = sub_25B288E98(v147, v148, &v191);
      uint64_t v93 = v180;
      sub_25B2909C0();
      swift_bridgeObjectRelease();
      uint64_t v149 = v141;
      uint64_t v150 = (uint64_t (*)(char *, uint64_t))v175;
      ((void (*)(char *, uint64_t))v175)(v149, v178);
      _os_log_impl(&dword_25B107000, v142, v143, "Can't write file chunk: %{public}s to %{public}s", (uint8_t *)v144, 0x16u);
      uint64_t v151 = v188;
      swift_arrayDestroy();
      MEMORY[0x261160890](v151, -1, -1);
      uint64_t v152 = v144;
      uint64_t v118 = v178;
      MEMORY[0x261160890](v152, -1, -1);
    }
    else
    {
      sub_25B207870(v140, type metadata accessor for NetworkSyncHeader);
      id v153 = v141;
      uint64_t v150 = (uint64_t (*)(char *, uint64_t))v175;
      ((void (*)(char *, uint64_t))v175)(v153, v118);
    }

    sub_25B1FDBF0(v172, 1);
    swift_release();
    sub_25B10DFF0(v187, v184);

    return v150(v93, v118);
  }
  unint64_t v127 = v162;
  uint64_t v118 = v178;
  v116((uint64_t)v162, v93, v178);
  uint64_t v128 = sub_25B290160();
  os_log_type_t v129 = sub_25B2908A0();
  if (os_log_type_enabled(v128, v129))
  {
    int v130 = (uint8_t *)swift_slowAlloc();
    uint64_t v131 = swift_slowAlloc();
    uint64_t v191 = v131;
    *(_DWORD *)int v130 = 136446210;
    uint64_t v132 = sub_25B28FE80();
    uint64_t v190 = sub_25B288E98(v132, v133, &v191);
    uint64_t v118 = v178;
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    uint64_t v175 = *(void **)(v186 + 8);
    ((void (*)(char *, uint64_t))v175)(v127, v118);
    _os_log_impl(&dword_25B107000, v128, v129, "Creating new file at %{public}s", v130, 0xCu);
    swift_arrayDestroy();
    uint64_t v134 = v131;
    uint64_t v93 = v180;
    MEMORY[0x261160890](v134, -1, -1);
    MEMORY[0x261160890](v130, -1, -1);
  }
  else
  {
    uint64_t v175 = *(void **)(v186 + 8);
    ((void (*)(char *, uint64_t))v175)(v127, v118);
  }

  uint64_t v154 = v187;
  uint64_t v135 = v188;
  uint64_t v137 = (void *)v177;
  sub_25B28FF20();
  if (v137) {
    goto LABEL_52;
  }
LABEL_56:
  sub_25B1F5540(v135);
  LODWORD(v156) = 0;
  unint64_t v157 = v184;
  switch((int)v174)
  {
    case 1:
      LODWORD(v156) = HIDWORD(v154) - v154;
      if (__OFSUB__(HIDWORD(v154), v154)) {
        goto LABEL_68;
      }
      unint64_t v156 = (int)v156;
LABEL_61:
      if ((v156 & 0x8000000000000000) != 0 || HIDWORD(v156))
      {
        sub_25B290BB0();
        __break(1u);
        JUMPOUT(0x25B201A34);
      }
LABEL_63:
      if (__CFADD__(a9, v156))
      {
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
      }
      sub_25B1FEDB8(v135, v181, (a9 + v156));
      swift_release();
      sub_25B10DFF0(v154, v157);

      uint64_t result = ((uint64_t (*)(char *, uint64_t))v175)(v93, v118);
      break;
    case 2:
      uint64_t v159 = *(void *)(v154 + 16);
      uint64_t v158 = *(void *)(v154 + 24);
      BOOL v160 = __OFSUB__(v158, v159);
      unint64_t v156 = v158 - v159;
      if (!v160) {
        goto LABEL_61;
      }
      goto LABEL_69;
    case 3:
      goto LABEL_63;
    default:
      LODWORD(v156) = BYTE6(v184);
      goto LABEL_63;
  }
  return result;
}

id sub_25B201A54(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = (void *)sub_25B28FE40();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForUpdatingURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_25B28FEA0();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_25B28FE20();

    swift_willThrow();
    uint64_t v9 = sub_25B28FEA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_25B201BAC(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v105 = a1;
  uint64_t v106 = a3;
  uint64_t v103 = a2;
  *(void *)&long long v104 = type metadata accessor for Message();
  MEMORY[0x270FA5388](v104);
  os_log_type_t v100 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25B290320();
  uint64_t v97 = *(void *)(v6 - 8);
  uint64_t v98 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v95 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_25B290360();
  uint64_t v94 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v93 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25B290080();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  os_log_type_t v99 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v101 = (char *)&v88 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB080);
  uint64_t v90 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v92 = (uint64_t)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v88 - v20;
  uint64_t v22 = sub_25B290410();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (uint64_t *)((char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = *(void **)(v4 + 24);
  *uint64_t v25 = v26;
  (*(void (**)(void *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x263F8F0E0], v22);
  id v27 = v26;
  uint64_t v28 = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v23 + 8))(v25, v22);
  if ((v28 & 1) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v29 = v106;
  uint64_t v102 = v4;
  sub_25B1F5540(v106);
  uint64_t v30 = v105;
  sub_25B207948((uint64_t)v105, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Message);
  sub_25B187628(v103, (uint64_t)&v21[*(int *)(v17 + 28)], &qword_26A4D9160);
  *(void *)&v21[*(int *)(v17 + 32)] = v29;
  sub_25B187628((uint64_t)v30 + *(int *)(v104 + 20), (uint64_t)v11, &qword_26B33F200);
  uint64_t v28 = (uint64_t)v21;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    uint64_t v13 = (uint64_t)v30;
    swift_unknownObjectRetain();
    sub_25B116DE0((uint64_t)v11, &qword_26B33F200);
    if (qword_26A4D98C8 == -1)
    {
LABEL_4:
      uint64_t v31 = sub_25B290190();
      __swift_project_value_buffer(v31, (uint64_t)qword_26A4EB168);
      uint64_t v32 = sub_25B290160();
      os_log_type_t v33 = sub_25B2908A0();
      BOOL v34 = os_log_type_enabled(v32, v33);
      uint64_t v35 = v102;
      uint64_t v36 = (uint64_t)v100;
      if (v34)
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl(&dword_25B107000, v32, v33, "Message is not a response", v37, 2u);
        MEMORY[0x261160890](v37, -1, -1);
      }

      sub_25B207948(v13, v36, (uint64_t (*)(void))type metadata accessor for Message);
      swift_retain_n();
      uint64_t v38 = sub_25B290160();
      os_log_type_t v39 = sub_25B2908A0();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        aBlock[0] = v41;
        *(_DWORD *)uint64_t v40 = 136446466;
        if (*(unsigned char *)(v35 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType)) {
          uint64_t v42 = 0x73756E696D726574;
        }
        else {
          uint64_t v42 = 0;
        }
        if (*(unsigned char *)(v35 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType)) {
          unint64_t v43 = 0xE900000000000020;
        }
        else {
          unint64_t v43 = 0xE000000000000000;
        }
        uint64_t v108 = sub_25B288E98(v42, v43, aBlock);
        sub_25B2909C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2082;
        uint64_t v44 = Message.description.getter();
        uint64_t v108 = sub_25B288E98(v44, v45, aBlock);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        sub_25B207870(v36, (uint64_t (*)(void))type metadata accessor for Message);
        _os_log_impl(&dword_25B107000, v38, v39, "Publishing incoming %{public}smessage: %{public}s", (uint8_t *)v40, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x261160890](v41, -1, -1);
        MEMORY[0x261160890](v40, -1, -1);
      }
      else
      {
        swift_release_n();
        sub_25B207870(v36, (uint64_t (*)(void))type metadata accessor for Message);
      }

      sub_25B290210();
      return sub_25B116DE0(v28, &qword_26A4DB080);
    }
LABEL_31:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v46 = v12;
  uint64_t v47 = v13;
  uint64_t v48 = (uint64_t)v101;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v101, v11, v12);
  uint64_t v49 = qword_26A4D98C8;
  swift_unknownObjectRetain();
  if (v49 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_25B290190();
  unint64_t v51 = (void (*)(char *, uint64_t))__swift_project_value_buffer(v50, (uint64_t)qword_26A4EB168);
  unint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  id v53 = v99;
  v52(v99, v48, v12);
  id v54 = sub_25B290160();
  os_log_type_t v55 = sub_25B2908A0();
  BOOL v56 = os_log_type_enabled(v54, v55);
  uint64_t v89 = v46;
  if (v56)
  {
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    uint64_t v105 = v51;
    uint64_t v59 = v58;
    uint64_t v106 = v47;
    aBlock[0] = v58;
    *(_DWORD *)uint64_t v57 = 136446210;
    sub_25B20A4B0((unint64_t *)&qword_26A4D9230, MEMORY[0x263F07508]);
    uint64_t v60 = sub_25B290DB0();
    uint64_t v108 = sub_25B288E98(v60, v61, aBlock);
    uint64_t v47 = v106;
    uint64_t v48 = (uint64_t)v101;
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    uint64_t v62 = v53;
    uint64_t v63 = *(void (**)(char *, uint64_t))(v47 + 8);
    v63(v62, v46);
    _os_log_impl(&dword_25B107000, v54, v55, "Message is a response to outgoing message: %{public}s", v57, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v59, -1, -1);
    MEMORY[0x261160890](v57, -1, -1);
  }
  else
  {
    uint64_t v64 = v53;
    uint64_t v63 = *(void (**)(char *, uint64_t))(v47 + 8);
    v63(v64, v46);
  }

  uint64_t v65 = v102;
  swift_beginAccess();
  uint64_t v66 = *(void *)(v65 + 64);
  if (!*(void *)(v66 + 16) || (unint64_t v67 = sub_25B18A93C(v48), (v68 & 1) == 0))
  {
    swift_endAccess();
    unint64_t v85 = sub_25B290160();
    os_log_type_t v86 = sub_25B290880();
    if (os_log_type_enabled(v85, v86))
    {
      int v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v87 = 0;
      _os_log_impl(&dword_25B107000, v85, v86, "No response handler found", v87, 2u);
      MEMORY[0x261160890](v87, -1, -1);
    }

    v63((char *)v48, v89);
    return sub_25B116DE0(v28, &qword_26A4DB080);
  }
  unint64_t v69 = v67;
  uint64_t v105 = v63;
  uint64_t v106 = v47;
  uint64_t v70 = *(void *)(v66 + 56);
  uint64_t v71 = swift_allocObject();
  long long v104 = *(_OWORD *)(v70 + 16 * v69);
  *(_OWORD *)(v71 + 16) = v104;
  swift_endAccess();
  swift_retain();
  uint64_t v72 = sub_25B290160();
  os_log_type_t v73 = sub_25B2908A0();
  if (os_log_type_enabled(v72, v73))
  {
    unint64_t v74 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v74 = 0;
    _os_log_impl(&dword_25B107000, v72, v73, "Found response handler", v74, 2u);
    MEMORY[0x261160890](v74, -1, -1);
  }

  swift_beginAccess();
  uint64_t v75 = sub_25B21D5C4(v48);
  swift_endAccess();
  sub_25B207D70(v75);
  uint64_t v76 = v92;
  sub_25B187628(v28, v92, &qword_26A4DB080);
  uint64_t v77 = v28;
  unint64_t v78 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  uint64_t v79 = swift_allocObject();
  *(void *)(v79 + 16) = sub_25B20ACD0;
  *(void *)(v79 + 24) = v71;
  sub_25B187574(v76, v79 + v78, &qword_26A4DB080);
  aBlock[4] = (uint64_t)sub_25B20A128;
  aBlock[5] = v79;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_25B10F584;
  aBlock[3] = (uint64_t)&block_descriptor_280;
  unint64_t v80 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v81 = v93;
  sub_25B290340();
  uint64_t v108 = MEMORY[0x263F8EE78];
  sub_25B20A4B0((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B1A8F44();
  uint64_t v82 = v95;
  uint64_t v83 = v98;
  sub_25B290A00();
  MEMORY[0x26115F250](0, v81, v82, v80);
  _Block_release(v80);
  swift_release();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v82, v83);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v81, v96);
  v105(v101, v89);
  sub_25B116DE0(v77, &qword_26A4DB080);
  return swift_release();
}

uint64_t sub_25B202938(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB088);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25B290410();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v1 + 24);
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F0E0], v6);
  id v11 = v10;
  LOBYTE(v10) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    uint64_t v13 = (uint64_t *)(a1 + *(int *)(type metadata accessor for Message() + 28));
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    uint64_t v16 = (uint64_t *)(v1 + 72);
    swift_beginAccess();
    uint64_t v17 = *(void *)(v1 + 72);
    if (*(void *)(v17 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v18 = sub_25B18A634(v15, v14);
      if (v19)
      {
        unint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_7:
        unint64_t v27 = v20;
        uint64_t v21 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
        char v22 = *(unsigned char *)(a1 + *(int *)(v21 + 24));
        sub_25B207948(a1, (uint64_t)v5, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 0, 1, v21);
        sub_25B20F07C((uint64_t)v5, v22);
        uint64_t v23 = v27;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v26 = *v16;
        *uint64_t v16 = 0x8000000000000000;
        sub_25B221DD4(v23, v15, v14, isUniquelyReferenced_nonNull_native);
        *uint64_t v16 = v26;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_endAccess();
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    unint64_t v20 = sub_25B227A0C(MEMORY[0x263F8EE78]);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_25B202C20(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAFB8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B187628(a3, (uint64_t)v7, &qword_26A4DB080);
  swift_storeEnumTagMultiPayload();
  a1(v7);
  return sub_25B116DE0((uint64_t)v7, (uint64_t *)&unk_26A4DAFB8);
}

uint64_t sub_25B202CEC(int a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    switch(a1)
    {
      case 1:
        if (a2)
        {
          uint64_t v8 = qword_26A4D98C8;
          swift_unknownObjectRetain();
          if (v8 != -1) {
            swift_once();
          }
          uint64_t v9 = sub_25B290190();
          __swift_project_value_buffer(v9, (uint64_t)qword_26A4EB168);
          swift_unknownObjectRetain_n();
          swift_unknownObjectRetain_n();
          uint64_t v10 = sub_25B290160();
          os_log_type_t v11 = sub_25B290880();
          if (os_log_type_enabled(v10, v11))
          {
            uint64_t v12 = swift_slowAlloc();
            uint64_t v13 = swift_slowAlloc();
            uint64_t v77 = v13;
            *(_DWORD *)uint64_t v12 = 136446466;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
            uint64_t v14 = sub_25B290600();
            sub_25B288E98(v14, v15, &v77);
            sub_25B2909C0();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v12 + 12) = 2082;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFF8);
            uint64_t v16 = sub_25B290600();
            sub_25B288E98(v16, v17, &v77);
            sub_25B2909C0();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_25B107000, v10, v11, "Connection failed and entered waiting state: %{public}s: %{public}s", (uint8_t *)v12, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x261160890](v13, -1, -1);
            uint64_t v18 = v12;
            goto LABEL_13;
          }
          goto LABEL_27;
        }
        if (qword_26A4D98C8 != -1) {
          swift_once();
        }
        uint64_t v56 = sub_25B290190();
        __swift_project_value_buffer(v56, (uint64_t)qword_26A4EB168);
        swift_unknownObjectRetain_n();
        uint64_t v57 = sub_25B290160();
        os_log_type_t v58 = sub_25B2908A0();
        if (os_log_type_enabled(v57, v58))
        {
          uint64_t v59 = swift_slowAlloc();
          uint64_t v60 = swift_slowAlloc();
          uint64_t v77 = v60;
          *(_DWORD *)uint64_t v59 = 136446466;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
          uint64_t v61 = sub_25B290600();
          sub_25B288E98(v61, v62, &v77);
          sub_25B2909C0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v59 + 12) = 2082;
          type metadata accessor for nw_connection_state_t(0);
          uint64_t v63 = sub_25B290600();
          sub_25B288E98(v63, v64, &v77);
          sub_25B2909C0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25B107000, v57, v58, "Connection state changed: %{public}s; state: %{public}s",
            (uint8_t *)v59,
            0x16u);
          swift_arrayDestroy();
          uint64_t v65 = v60;
          goto LABEL_43;
        }
        goto LABEL_50;
      case 3:
        if (qword_26A4D98C8 != -1) {
          swift_once();
        }
        uint64_t v29 = sub_25B290190();
        __swift_project_value_buffer(v29, (uint64_t)qword_26A4EB168);
        swift_unknownObjectRetain_n();
        uint64_t v30 = sub_25B290160();
        os_log_type_t v31 = sub_25B2908A0();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = (uint8_t *)swift_slowAlloc();
          uint64_t v33 = swift_slowAlloc();
          uint64_t v77 = v33;
          *(_DWORD *)uint64_t v32 = 136446210;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
          uint64_t v34 = sub_25B290600();
          sub_25B288E98(v34, v35, &v77);
          sub_25B2909C0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25B107000, v30, v31, "Connection ready: %{public}s", v32, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x261160890](v33, -1, -1);
          MEMORY[0x261160890](v32, -1, -1);
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        id v54 = nw_protocol_copy_quic_definition();
        os_log_type_t v55 = nw_connection_copy_protocol_metadata(a4, v54);
        swift_unknownObjectRelease();
        if (v55)
        {
          if (nw_protocol_metadata_is_quic(v55)) {
            nw_quic_set_keepalive();
          }
          swift_unknownObjectRelease();
        }
        sub_25B1F7B6C(a4);
        goto LABEL_54;
      case 4:
        if (a2)
        {
          uint64_t v36 = qword_26A4D98C8;
          swift_unknownObjectRetain();
          if (v36 != -1) {
            swift_once();
          }
          uint64_t v37 = sub_25B290190();
          __swift_project_value_buffer(v37, (uint64_t)qword_26A4EB168);
          swift_unknownObjectRetain_n();
          swift_unknownObjectRetain_n();
          uint64_t v38 = sub_25B290160();
          os_log_type_t v39 = sub_25B290880();
          if (os_log_type_enabled(v38, v39))
          {
            uint64_t v40 = swift_slowAlloc();
            uint64_t v41 = swift_slowAlloc();
            uint64_t v77 = v41;
            *(_DWORD *)uint64_t v40 = 136446466;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
            uint64_t v42 = sub_25B290600();
            sub_25B288E98(v42, v43, &v77);
            sub_25B2909C0();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v40 + 12) = 2082;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFF8);
            uint64_t v44 = sub_25B290600();
            sub_25B288E98(v44, v45, &v77);
            sub_25B2909C0();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_25B107000, v38, v39, "Connection failed: %{public}s: %{public}s", (uint8_t *)v40, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x261160890](v41, -1, -1);
            MEMORY[0x261160890](v40, -1, -1);
            swift_unknownObjectRelease();

            goto LABEL_53;
          }

          swift_unknownObjectRelease_n();
          goto LABEL_52;
        }
        if (qword_26A4D98C8 != -1) {
          swift_once();
        }
        uint64_t v73 = sub_25B290190();
        __swift_project_value_buffer(v73, (uint64_t)qword_26A4EB168);
        swift_unknownObjectRetain_n();
        uint64_t v47 = sub_25B290160();
        os_log_type_t v48 = sub_25B2908A0();
        if (!os_log_type_enabled(v47, v48))
        {
LABEL_49:

LABEL_52:
          swift_unknownObjectRelease_n();
          goto LABEL_53;
        }
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        uint64_t v77 = v50;
        *(_DWORD *)uint64_t v49 = 136446210;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
        uint64_t v74 = sub_25B290600();
        sub_25B288E98(v74, v75, &v77);
        sub_25B2909C0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        id v53 = "Connection failed: %{public}s";
LABEL_48:
        _os_log_impl(&dword_25B107000, v47, v48, v53, v49, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261160890](v50, -1, -1);
        MEMORY[0x261160890](v49, -1, -1);

LABEL_53:
        sub_25B1EAA34(a4);
LABEL_54:
        uint64_t result = swift_release();
        break;
      case 5:
        if (qword_26A4D98C8 != -1) {
          swift_once();
        }
        uint64_t v46 = sub_25B290190();
        __swift_project_value_buffer(v46, (uint64_t)qword_26A4EB168);
        swift_unknownObjectRetain_n();
        uint64_t v47 = sub_25B290160();
        os_log_type_t v48 = sub_25B2908A0();
        if (!os_log_type_enabled(v47, v48)) {
          goto LABEL_49;
        }
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        uint64_t v77 = v50;
        *(_DWORD *)uint64_t v49 = 136446210;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
        uint64_t v51 = sub_25B290600();
        sub_25B288E98(v51, v52, &v77);
        sub_25B2909C0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        id v53 = "Connection cancelled: %{public}s";
        goto LABEL_48;
      default:
        if (a2)
        {
          uint64_t v19 = qword_26A4D98C8;
          swift_unknownObjectRetain();
          if (v19 != -1) {
            swift_once();
          }
          uint64_t v20 = sub_25B290190();
          __swift_project_value_buffer(v20, (uint64_t)qword_26A4EB168);
          swift_unknownObjectRetain_n();
          swift_unknownObjectRetain_n();
          uint64_t v10 = sub_25B290160();
          os_log_type_t v21 = sub_25B290880();
          if (os_log_type_enabled(v10, v21))
          {
            uint64_t v22 = swift_slowAlloc();
            uint64_t v76 = swift_slowAlloc();
            uint64_t v77 = v76;
            *(_DWORD *)uint64_t v22 = 136446722;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
            uint64_t v23 = sub_25B290600();
            sub_25B288E98(v23, v24, &v77);
            sub_25B2909C0();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v22 + 12) = 2082;
            type metadata accessor for nw_connection_state_t(0);
            uint64_t v25 = sub_25B290600();
            sub_25B288E98(v25, v26, &v77);
            sub_25B2909C0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v22 + 22) = 2082;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFF8);
            uint64_t v27 = sub_25B290600();
            sub_25B288E98(v27, v28, &v77);
            sub_25B2909C0();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_25B107000, v10, v21, "Connection state changed: %{public}s; state: %{public}s; error: %{public}s",
              (uint8_t *)v22,
              0x20u);
            swift_arrayDestroy();
            MEMORY[0x261160890](v76, -1, -1);
            uint64_t v18 = v22;
LABEL_13:
            MEMORY[0x261160890](v18, -1, -1);
          }
          else
          {
LABEL_27:

            swift_unknownObjectRelease_n();
            swift_unknownObjectRelease_n();
          }
          sub_25B1EAA34(a4);
          swift_unknownObjectRelease();
        }
        else
        {
          if (qword_26A4D98C8 != -1) {
            swift_once();
          }
          uint64_t v66 = sub_25B290190();
          __swift_project_value_buffer(v66, (uint64_t)qword_26A4EB168);
          swift_unknownObjectRetain_n();
          uint64_t v57 = sub_25B290160();
          os_log_type_t v67 = sub_25B2908A0();
          if (os_log_type_enabled(v57, v67))
          {
            uint64_t v59 = swift_slowAlloc();
            uint64_t v68 = swift_slowAlloc();
            uint64_t v77 = v68;
            *(_DWORD *)uint64_t v59 = 136446466;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
            uint64_t v69 = sub_25B290600();
            sub_25B288E98(v69, v70, &v77);
            sub_25B2909C0();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v59 + 12) = 2082;
            type metadata accessor for nw_connection_state_t(0);
            uint64_t v71 = sub_25B290600();
            sub_25B288E98(v71, v72, &v77);
            sub_25B2909C0();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_25B107000, v57, v67, "Connection state changed: %{public}s; state: %{public}s",
              (uint8_t *)v59,
              0x16u);
            swift_arrayDestroy();
            uint64_t v65 = v68;
LABEL_43:
            MEMORY[0x261160890](v65, -1, -1);
            MEMORY[0x261160890](v59, -1, -1);
          }
          else
          {
LABEL_50:

            swift_unknownObjectRelease_n();
          }
        }
        goto LABEL_54;
    }
  }
  return result;
}

uint64_t sub_25B203BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B203BF8(a1, a2, a3);
}

uint64_t sub_25B203BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v5(a2, a3);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_25B203C70()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25B290000();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v50 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v48 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v48 - v11;
  uint64_t v13 = sub_25B290410();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v17 = *(void **)(v1 + 24);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8F0E0], v13);
  id v18 = v17;
  LOBYTE(v17) = sub_25B290440();
  uint64_t v19 = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v49 = (uint64_t)v18;
  unint64_t v52 = v12;
  uint64_t v20 = *(void *)(v1 + 80);
  os_log_type_t v21 = *(os_unfair_lock_s **)(v20 + 24);
  MEMORY[0x270FA5388](v19);
  *(&v48 - 2) = (uint64_t)sub_25B10DCB4;
  *(&v48 - 1) = v20;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v21 + 4);
  sub_25B10DCD0(v22);
  os_unfair_lock_unlock(v21 + 4);
  swift_release();
  swift_release();
  sub_25B204610(v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_25B116DE0((uint64_t)v4, &qword_26A4D91F8);
    if (qword_26A4D98C8 == -1)
    {
LABEL_4:
      uint64_t v23 = sub_25B290190();
      __swift_project_value_buffer(v23, (uint64_t)qword_26A4EB168);
      unint64_t v24 = sub_25B290160();
      os_log_type_t v25 = sub_25B2908A0();
      if (os_log_type_enabled(v24, v25))
      {
        unint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v26 = 0;
        _os_log_impl(&dword_25B107000, v24, v25, "Not starting connection expiration timer", v26, 2u);
        MEMORY[0x261160890](v26, -1, -1);
      }

      return;
    }
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v48 = 0;
  uint64_t v27 = v52;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v52, v4, v5);
  if (qword_26A4D98C8 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_25B290190();
  __swift_project_value_buffer(v28, (uint64_t)qword_26A4EB168);
  uint64_t v29 = v51;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v51, v27, v5);
  uint64_t v30 = sub_25B290160();
  os_log_type_t v31 = sub_25B2908A0();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v54 = v33;
    *(_DWORD *)uint64_t v32 = 136446210;
    sub_25B20A4B0((unint64_t *)&qword_26A4DB020, MEMORY[0x263F07490]);
    uint64_t v34 = sub_25B290DB0();
    uint64_t v53 = sub_25B288E98(v34, v35, &v54);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    uint64_t v36 = v51;
    uint64_t v51 = *(char **)(v6 + 8);
    ((void (*)(char *, uint64_t))v51)(v36, v5);
    _os_log_impl(&dword_25B107000, v30, v31, "Connection expiration timer will fire at %{public}s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v33, -1, -1);
    MEMORY[0x261160890](v32, -1, -1);
  }
  else
  {
    uint64_t v51 = *(char **)(v6 + 8);
    ((void (*)(char *, uint64_t))v51)(v29, v5);
  }

  uint64_t v37 = *(void *)(v1 + 80);
  swift_retain();
  uint64_t v38 = v50;
  sub_25B28FFD0();
  os_log_type_t v39 = v52;
  sub_25B28FF50();
  uint64_t v41 = v40;
  uint64_t v42 = v51;
  uint64_t v43 = ((uint64_t (*)(char *, uint64_t))v51)(v38, v5);
  uint64_t v50 = (char *)&v48;
  uint64_t v44 = *(os_unfair_lock_s **)(v37 + 24);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  *(&v48 - 6) = v37;
  *(&v48 - 5) = v41;
  *(&v48 - 4) = v49;
  *(&v48 - 3) = (uint64_t)sub_25B20908C;
  *(&v48 - 2) = v1;
  MEMORY[0x270FA5388](v45);
  *(&v48 - 2) = (uint64_t)sub_25B10DD5C;
  *(&v48 - 1) = v46;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v44 + 4);
  sub_25B10DDCC(v47);
  os_unfair_lock_unlock(v44 + 4);
  swift_release();
  swift_release();
  swift_release();
  ((void (*)(char *, uint64_t))v42)(v39, v5);
}

uint64_t sub_25B204350()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_25B290410();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (void *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = (void *)v2[3];
  void *v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F0E0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_7;
  }
  if (v2[12]) {
    return result;
  }
  uint64_t result = swift_beginAccess();
  if (!*(void *)(v2[7] + 16)) {
    return result;
  }
  uint64_t result = sub_25B208F70();
  if ((result & 1) == 0) {
    return result;
  }
  double v1 = sub_25B20875C();
  if (qword_26A4D98C8 != -1) {
    goto LABEL_14;
  }
LABEL_7:
  uint64_t v10 = sub_25B290190();
  __swift_project_value_buffer(v10, (uint64_t)qword_26A4EB168);
  uint64_t v11 = sub_25B290160();
  os_log_type_t v12 = sub_25B2908A0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 134349056;
    double v18 = v1;
    sub_25B2909C0();
    _os_log_impl(&dword_25B107000, v11, v12, "Creating prevent-sleep assertion with duration %{public}f", v13, 0xCu);
    MEMORY[0x261160890](v13, -1, -1);
  }

  id v14 = objc_allocWithZone(MEMORY[0x263F7C490]);
  uint64_t v15 = (void *)sub_25B290590();
  id v16 = objc_msgSend(v14, sel_initWithIdentifier_, v15);

  unint64_t v17 = (void *)v2[12];
  v2[12] = v16;

  uint64_t result = v2[12];
  if (result) {
    uint64_t result = (uint64_t)objc_msgSend((id)result, sel_acquireWithTimeout_handler_, 0, 0.0);
  }
  if (v2[13])
  {
    swift_retain();
    sub_25B1D7508();
    return swift_release();
  }
  return result;
}

uint64_t sub_25B204610@<X0>(char *a1@<X8>)
{
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB010);
  uint64_t v3 = MEMORY[0x270FA5388](v89);
  uint64_t v88 = (uint64_t *)((char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  os_log_type_t v86 = (uint64_t *)((char *)&v75 - v6);
  MEMORY[0x270FA5388](v5);
  int v87 = (char *)&v75 - v7;
  uint64_t v8 = sub_25B290000();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v92 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v85 = (char *)&v75 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v84 = (char *)&v75 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v83 = (char *)&v75 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v75 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v75 - v21;
  uint64_t v23 = sub_25B290410();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  unint64_t v26 = (uint64_t *)((char *)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = v1;
  uint64_t v28 = *(void **)(v1 + 24);
  *unint64_t v26 = v28;
  (*(void (**)(void *, void, uint64_t))(v24 + 104))(v26, *MEMORY[0x263F8F0E0], v23);
  id v29 = v28;
  LOBYTE(v28) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v24 + 8))(v26, v23);
  if (v28)
  {
    uint64_t v76 = v22;
    unint64_t v78 = a1;
    sub_25B20875C();
    swift_beginAccess();
    uint64_t v31 = *(void *)(v27 + 56);
    swift_bridgeObjectRetain();
    sub_25B28FF40();
    uint64_t v32 = *(void *)(v31 + 64);
    uint64_t v79 = v31 + 64;
    uint64_t v33 = 1 << *(unsigned char *)(v31 + 32);
    uint64_t v34 = -1;
    if (v33 < 64) {
      uint64_t v34 = ~(-1 << v33);
    }
    unint64_t v35 = v34 & v32;
    int64_t v80 = (unint64_t)(v33 + 63) >> 6;
    uint64_t v36 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v77 = v9;
    uint64_t v90 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v91 = v31;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v37 = 0;
    uint64_t v96 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v81 = v20;
    uint64_t v38 = v82;
    while (1)
    {
      if (v35)
      {
        uint64_t v93 = (v35 - 1) & v35;
        int64_t v94 = v37;
        unint64_t v39 = __clz(__rbit64(v35)) | (v37 << 6);
      }
      else
      {
        int64_t v64 = v37 + 1;
        if (__OFADD__(v37, 1))
        {
          __break(1u);
          break;
        }
        if (v64 >= v80)
        {
LABEL_29:
          swift_release();
          uint64_t v68 = *v36;
          uint64_t v69 = v76;
          (*v36)(v76, v20, v8);
          swift_bridgeObjectRelease();
          unint64_t v70 = v92;
          sub_25B28FF40();
          char v71 = sub_25B28FFC0();
          unint64_t v72 = *v90;
          (*v90)(v70, v8);
          if (v71)
          {
            v72(v69, v8);
            uint64_t v73 = 1;
            uint64_t v74 = v78;
          }
          else
          {
            uint64_t v74 = v78;
            v68(v78, v69, v8);
            uint64_t v73 = 0;
          }
          return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v74, v73, 1, v8);
        }
        unint64_t v65 = *(void *)(v79 + 8 * v64);
        int64_t v66 = v37 + 1;
        if (!v65)
        {
          int64_t v66 = v37 + 2;
          if (v37 + 2 >= v80) {
            goto LABEL_29;
          }
          unint64_t v65 = *(void *)(v79 + 8 * v66);
          if (!v65)
          {
            int64_t v66 = v37 + 3;
            if (v37 + 3 >= v80) {
              goto LABEL_29;
            }
            unint64_t v65 = *(void *)(v79 + 8 * v66);
            if (!v65)
            {
              int64_t v66 = v37 + 4;
              if (v37 + 4 >= v80) {
                goto LABEL_29;
              }
              unint64_t v65 = *(void *)(v79 + 8 * v66);
              if (!v65)
              {
                int64_t v66 = v37 + 5;
                if (v37 + 5 >= v80) {
                  goto LABEL_29;
                }
                unint64_t v65 = *(void *)(v79 + 8 * v66);
                if (!v65)
                {
                  uint64_t v67 = v37 + 6;
                  if (v37 + 6 >= v80) {
                    goto LABEL_29;
                  }
                  unint64_t v65 = *(void *)(v79 + 8 * v67);
                  if (!v65)
                  {
                    while (1)
                    {
                      int64_t v66 = v67 + 1;
                      if (__OFADD__(v67, 1)) {
                        goto LABEL_35;
                      }
                      if (v66 >= v80) {
                        goto LABEL_29;
                      }
                      unint64_t v65 = *(void *)(v79 + 8 * v66);
                      ++v67;
                      if (v65) {
                        goto LABEL_28;
                      }
                    }
                  }
                  int64_t v66 = v37 + 6;
                }
              }
            }
          }
        }
LABEL_28:
        uint64_t v93 = (v65 - 1) & v65;
        int64_t v94 = v66;
        unint64_t v39 = __clz(__rbit64(v65)) + (v66 << 6);
      }
      uint64_t v40 = *(void *)(v91 + 56);
      uint64_t v41 = (uint64_t *)(*(void *)(v91 + 48) + 16 * v39);
      uint64_t v43 = *v41;
      uint64_t v42 = v41[1];
      uint64_t v44 = (int *)(type metadata accessor for NetworkMessenger.ExpiringConnection(0) - 8);
      uint64_t v45 = v40 + *(void *)(*(void *)v44 + 72) * v39;
      uint64_t v46 = v89;
      uint64_t v47 = v87;
      sub_25B207948(v45, (uint64_t)&v87[*(int *)(v89 + 48)], type metadata accessor for NetworkMessenger.ExpiringConnection);
      *uint64_t v47 = v43;
      v47[1] = v42;
      uint64_t v48 = (uint64_t)v47;
      uint64_t v49 = v86;
      sub_25B187574(v48, (uint64_t)v86, (uint64_t *)&unk_26A4DB010);
      unint64_t v95 = *v36;
      uint64_t v50 = v84;
      v95(v84, v20, v8);
      uint64_t v51 = *(int *)(v46 + 48);
      unint64_t v52 = v88;
      uint64_t v53 = (uint64_t)v88 + v51;
      uint64_t v54 = v49[1];
      *uint64_t v88 = *v49;
      v52[1] = v54;
      sub_25B207948((uint64_t)v49 + v51, v53, type metadata accessor for NetworkMessenger.ExpiringConnection);
      uint64_t v55 = v53 + v44[7];
      uint64_t v56 = *v38;
      uint64_t v57 = v92;
      (*v38)(v92, v55, v8);
      swift_bridgeObjectRetain();
      sub_25B207870(v53, type metadata accessor for NetworkMessenger.ExpiringConnection);
      os_log_type_t v58 = v85;
      sub_25B28FF60();
      uint64_t v59 = *v90;
      (*v90)(v57, v8);
      sub_25B20A4B0(&qword_26A4DB030, MEMORY[0x263F07490]);
      if (sub_25B290560()) {
        uint64_t v60 = v58;
      }
      else {
        uint64_t v60 = v50;
      }
      uint64_t v61 = v83;
      v56(v83, (uint64_t)v60, v8);
      unint64_t v62 = v58;
      uint64_t v20 = v81;
      v59(v62, v8);
      uint64_t v63 = v50;
      uint64_t v36 = v96;
      v59(v63, v8);
      v95(v20, v61, v8);
      uint64_t result = sub_25B116DE0((uint64_t)v49, (uint64_t *)&unk_26A4DB010);
      unint64_t v35 = v93;
      int64_t v37 = v94;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

unint64_t sub_25B204DF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (unint64_t)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + 24);
  *(void *)unint64_t v5 = v6;
  (*(void (**)(unint64_t, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_25B290440();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    unint64_t result = sub_25B20514C();
    unint64_t v5 = result;
    if (!(result >> 62))
    {
      uint64_t v10 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v10) {
        goto LABEL_4;
      }
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  unint64_t result = sub_25B290BD0();
  uint64_t v10 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_4:
  if (v10 >= 1)
  {
    uint64_t v11 = 0;
    unint64_t v12 = v5 & 0xC000000000000001;
    unint64_t v13 = 0x26A4D9000uLL;
    *(void *)&long long v9 = 136446210;
    long long v27 = v9;
    v26[1] = MEMORY[0x263F8EE58] + 8;
    uint64_t v28 = v10;
    id v29 = (void *)v5;
    do
    {
      if (v12)
      {
        uint64_t v14 = MEMORY[0x26115F400](v11, v5);
      }
      else
      {
        uint64_t v14 = *(NSObject **)(v5 + 8 * v11 + 32);
        swift_unknownObjectRetain();
      }
      if (*(void *)(v13 + 2248) != -1) {
        swift_once();
      }
      uint64_t v15 = sub_25B290190();
      __swift_project_value_buffer(v15, (uint64_t)qword_26A4EB168);
      swift_unknownObjectRetain_n();
      uint64_t v16 = sub_25B290160();
      os_log_type_t v17 = sub_25B2908A0();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        unint64_t v19 = v12;
        uint64_t v20 = v1;
        uint64_t v21 = swift_slowAlloc();
        uint64_t v30 = v14;
        uint64_t v31 = v21;
        *(_DWORD *)uint64_t v18 = v27;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
        uint64_t v22 = sub_25B290600();
        *(void *)(v18 + 4) = sub_25B288E98(v22, v23, &v31);
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25B107000, v16, v17, "Destroying expired connection: %{public}s", (uint8_t *)v18, 0xCu);
        swift_arrayDestroy();
        uint64_t v24 = v21;
        uint64_t v1 = v20;
        unint64_t v12 = v19;
        uint64_t v10 = v28;
        unint64_t v5 = (unint64_t)v29;
        MEMORY[0x261160890](v24, -1, -1);
        uint64_t v25 = v18;
        unint64_t v13 = 0x26A4D9000;
        MEMORY[0x261160890](v25, -1, -1);
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      ++v11;
      sub_25B1EAA34(v14);
      swift_unknownObjectRelease();
    }
    while (v10 != v11);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_25B20514C()
{
  unint64_t v1 = v0;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB010);
  uint64_t v2 = MEMORY[0x270FA5388](v69);
  uint64_t v68 = (uint64_t *)((char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v67 = (uint64_t *)((char *)&v56 - v5);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int64_t v66 = (uint64_t *)((char *)&v56 - v7);
  MEMORY[0x270FA5388](v6);
  unint64_t v65 = (char *)&v56 - v8;
  long long v9 = (void *)sub_25B290000();
  uint64_t v10 = *(v9 - 1);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v56 - v14;
  uint64_t v16 = sub_25B290410();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (uint64_t)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void **)(v1 + 24);
  *(void *)uint64_t v19 = v20;
  (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F8F0E0], v16);
  id v21 = v20;
  char v22 = sub_25B290440();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v16);
  if ((v22 & 1) == 0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  sub_25B28FFD0();
  sub_25B28FF60();
  uint64_t v24 = *(void (**)(char *, void *))(v10 + 8);
  uint64_t v23 = v10 + 8;
  uint64_t v19 = (uint64_t)v24;
  v24(v13, v9);
  double v25 = sub_25B20875C();
  uint64_t v26 = swift_beginAccess();
  uint64_t v27 = *(void *)(v1 + 56);
  MEMORY[0x270FA5388](v26);
  *((double *)&v56 - 2) = v25;
  *(&v56 - 1) = (uint64_t)v15;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_25B222F34((uint64_t)sub_25B2091A4, (uint64_t)(&v56 - 4), v27);
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v28 + 16);
  if (v1)
  {
    uint64_t v57 = v19;
    os_log_type_t v58 = v15;
    uint64_t v59 = v23;
    uint64_t v60 = v9;
    unint64_t v72 = MEMORY[0x263F8EE78];
    sub_25B290B60();
    uint64_t v19 = sub_25B1A7EF0(v28);
    uint64_t v30 = 0;
    uint64_t v31 = v28 + 64;
    char v32 = *(unsigned char *)(v28 + 32);
    uint64_t v61 = v28 + 80;
    uint64_t v62 = v29;
    uint64_t v63 = v28 + 64;
    unint64_t v64 = v1;
    uint64_t v15 = (char *)v69;
    uint64_t v33 = v65;
    do
    {
      if (v19 < 0 || v19 >= 1 << v32)
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      unint64_t v35 = (unint64_t)v19 >> 6;
      if ((*(void *)(v31 + 8 * ((unint64_t)v19 >> 6)) & (1 << v19)) == 0) {
        goto LABEL_27;
      }
      if (*(_DWORD *)(v28 + 36) != v29) {
        goto LABEL_28;
      }
      uint64_t v70 = v30;
      uint64_t v71 = 1 << v19;
      uint64_t v36 = (uint64_t)v33 + *((int *)v15 + 12);
      uint64_t v37 = *(void *)(v28 + 56);
      uint64_t v38 = (uint64_t *)(*(void *)(v28 + 48) + 16 * v19);
      uint64_t v39 = *v38;
      uint64_t v40 = v38[1];
      uint64_t v41 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
      sub_25B207948(v37 + *(void *)(*(void *)(v41 - 8) + 72) * v19, v36, type metadata accessor for NetworkMessenger.ExpiringConnection);
      *uint64_t v33 = v39;
      v33[1] = v40;
      uint64_t v42 = v28;
      uint64_t v43 = v66;
      *int64_t v66 = v39;
      v43[1] = v40;
      sub_25B207948(v36, (uint64_t)v43 + *((int *)v15 + 12), type metadata accessor for NetworkMessenger.ExpiringConnection);
      uint64_t v44 = (uint64_t)v43;
      uint64_t v28 = v42;
      long long v9 = v67;
      sub_25B187574(v44, (uint64_t)v67, (uint64_t *)&unk_26A4DB010);
      swift_bridgeObjectRetain_n();
      sub_25B116DE0((uint64_t)v33, (uint64_t *)&unk_26A4DB010);
      uint64_t v45 = *((int *)v15 + 12);
      uint64_t v46 = v68;
      uint64_t v47 = (void *)((char *)v68 + v45);
      uint64_t v48 = v9[1];
      void *v68 = *v9;
      v46[1] = v48;
      sub_25B207948((uint64_t)v9 + v45, (uint64_t)v47, type metadata accessor for NetworkMessenger.ExpiringConnection);
      unint64_t v1 = *v47;
      swift_unknownObjectRetain();
      sub_25B207870((uint64_t)v47, type metadata accessor for NetworkMessenger.ExpiringConnection);
      sub_25B116DE0((uint64_t)v9, (uint64_t *)&unk_26A4DB010);
      sub_25B290B40();
      sub_25B290B70();
      sub_25B290B80();
      sub_25B290B50();
      char v32 = *(unsigned char *)(v42 + 32);
      unint64_t v34 = 1 << v32;
      if (v19 >= 1 << v32) {
        goto LABEL_29;
      }
      uint64_t v31 = v63;
      unint64_t v1 = v64;
      uint64_t v49 = *(void *)(v63 + 8 * v35);
      if ((v49 & v71) == 0) {
        goto LABEL_30;
      }
      LODWORD(v29) = v62;
      if (*(_DWORD *)(v42 + 36) != v62) {
        goto LABEL_31;
      }
      unint64_t v50 = v49 & (-2 << (v19 & 0x3F));
      if (v50)
      {
        unint64_t v34 = __clz(__rbit64(v50)) | v19 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v51 = v35 + 1;
        unint64_t v52 = (v34 + 63) >> 6;
        if (v35 + 1 < v52)
        {
          unint64_t v53 = *(void *)(v63 + 8 * v51);
          if (v53)
          {
LABEL_19:
            unint64_t v34 = __clz(__rbit64(v53)) + (v51 << 6);
          }
          else
          {
            while (v52 - 2 != v35)
            {
              unint64_t v53 = *(void *)(v61 + 8 * v35++);
              if (v53)
              {
                unint64_t v51 = v35 + 1;
                goto LABEL_19;
              }
            }
          }
        }
      }
      uint64_t v30 = v70 + 1;
      uint64_t v19 = v34;
    }
    while (v70 + 1 != v64);
    unint64_t v1 = v72;
    swift_release();
    long long v9 = v60;
    uint64_t v15 = v58;
    uint64_t v19 = v57;
    if ((v1 & 0x8000000000000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_33;
  }
  swift_release();
  unint64_t v1 = MEMORY[0x263F8EE78];
  if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0)
  {
LABEL_33:
    uint64_t v54 = (uint64_t)sub_25B225CA8(v1);
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
LABEL_23:
  if ((v1 & 0x4000000000000000) != 0) {
    goto LABEL_33;
  }
  uint64_t v54 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_25:
  ((void (*)(char *, void *))v19)(v15, v9);
  return v54;
}

BOOL sub_25B20578C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a3;
  uint64_t v26 = a2;
  uint64_t v4 = sub_25B290000();
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v28 = (char *)&v25 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB010);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (uint64_t *)((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (uint64_t *)((char *)&v25 - v14);
  uint64_t v16 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v18 = (char *)&v25 + *(int *)(v10 + 56) - v14;
  void *v15 = v16;
  v15[1] = v17;
  sub_25B207948(v26, (uint64_t)v18, type metadata accessor for NetworkMessenger.ExpiringConnection);
  uint64_t v19 = (uint64_t)v13 + *(int *)(v10 + 56);
  *unint64_t v13 = v16;
  v13[1] = v17;
  sub_25B207948((uint64_t)v18, v19, type metadata accessor for NetworkMessenger.ExpiringConnection);
  uint64_t v20 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  uint64_t v21 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v7, v19 + *(int *)(v20 + 20), v4);
  swift_bridgeObjectRetain();
  sub_25B207870(v19, type metadata accessor for NetworkMessenger.ExpiringConnection);
  char v22 = v28;
  sub_25B28FF90();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v21 + 8);
  v23(v7, v4);
  sub_25B20A4B0(&qword_26A4DB030, MEMORY[0x263F07490]);
  LOBYTE(v21) = sub_25B290560();
  v23(v22, v4);
  sub_25B116DE0((uint64_t)v15, (uint64_t *)&unk_26A4DB010);
  return (v21 & 1) == 0;
}

void sub_25B205A40(void *a1, void *a2)
{
  uint64_t v4 = sub_25B290410();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = (void *)a2[3];
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v9 = v8;
  LOBYTE(v8) = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_4;
  }
  if (!xpc_dictionary_get_string(a1, (const char *)*MEMORY[0x263EF86C8])) {
    return;
  }
  if (qword_26A4D98C8 != -1) {
    goto LABEL_11;
  }
LABEL_4:
  uint64_t v10 = sub_25B290190();
  __swift_project_value_buffer(v10, (uint64_t)qword_26A4EB168);
  uint64_t v11 = sub_25B290160();
  os_log_type_t v12 = sub_25B2908A0();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v18 = v14;
    *(_DWORD *)unint64_t v13 = 136446210;
    uint64_t v15 = sub_25B290660();
    uint64_t v17 = sub_25B288E98(v15, v16, &v18);
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v11, v12, "Wake event received [rapport]: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v14, -1, -1);
    MEMORY[0x261160890](v13, -1, -1);
  }

  if (a2[5])
  {
    sub_25B2083B4(a1);
  }
  else
  {
    a2[6] = a1;
    swift_unknownObjectRelease();
    swift_unknownObjectRetain();
  }
}

void sub_25B205CE4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_25B290190();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A4EB150);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_25B290160();
  os_log_type_t v7 = sub_25B2908A0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_25B288E98(a2, a3, &v10);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v6, v7, "received notification %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v9, -1, -1);
    MEMORY[0x261160890](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_25B205E8C()
{
  uint64_t v1 = type metadata accessor for Message();
  uint64_t v16 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v16 + 40) & ~v16;
  uint64_t v3 = v2 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v3 + v5) & ~v5;
  uint64_t v15 = *(void *)(v4 + 64);
  swift_release();
  swift_release();
  uint64_t v7 = v0 + v2;
  uint64_t v8 = sub_25B290080();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  uint64_t v11 = v7 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
    v10(v11, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B10DFF0(*(void *)(v7 + *(int *)(v1 + 36)), *(void *)(v7 + *(int *)(v1 + 36) + 8));
  uint64_t v12 = sub_25B28FEA0();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v6, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0 + v6, v12);
  }
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v6 + v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v16 | v5 | 7);
}

uint64_t sub_25B206128()
{
  uint64_t v1 = *(void *)(type metadata accessor for Message() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = v0[2];
  uint64_t v8 = v0[3];
  uint64_t v9 = v0[4];
  uint64_t v10 = (uint64_t)v0 + v5;
  uint64_t v11 = (char *)v0 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = (double *)((char *)v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8));
  double v14 = *v13;
  uint64_t v15 = *((void *)v13 + 1);
  int v16 = v11[8];
  return sub_25B1EDF3C(v7, v8, v9, (uint64_t)v0 + v2, v10, v12, v16, v15, v14);
}

uint64_t sub_25B206248()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_25B206270()
{
  uint64_t v1 = type metadata accessor for Message();
  uint64_t v16 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v16 + 32) & ~v16;
  unint64_t v3 = (*(void *)(*(void *)(v1 - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = (v3 + v5 + 8) & ~v5;
  uint64_t v15 = *(void *)(v4 + 64);
  swift_release();
  uint64_t v6 = v0 + v2;
  uint64_t v7 = sub_25B290080();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  uint64_t v10 = v6 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B10DFF0(*(void *)(v6 + *(int *)(v1 + 36)), *(void *)(v6 + *(int *)(v1 + 36) + 8));
  swift_release();
  uint64_t v11 = sub_25B28FEA0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v14, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v14, v11);
  }
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v14 + v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v16 | v5 | 7);
}

uint64_t sub_25B206520(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Message() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160) - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = v7 + *(void *)(v6 + 64);
  return sub_25B1EE480(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), v1 + v4, *(void *)(v1 + v5), v1 + v7, *(void *)(v1 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(double *)(v1 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_25B206654()
{
  return objectdestroy_18Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_25B20666C(uint64_t a1, uint64_t a2)
{
  return sub_25B1F6198(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_25B206678()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_25B2066A0(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  unint64_t v2 = v1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t result = sub_25B2068EC(a1);
      uint64_t v4 = v18;
      unint64_t v5 = *((void *)&v18 + 1) | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_25B28FEB0();
      uint64_t v6 = *((void *)&v18 + 1);
      uint64_t v7 = *(void *)(v18 + 16);
      uint64_t v17 = *(void *)(v18 + 24);
      uint64_t v8 = sub_25B28FD00();
      if (!v8)
      {
        __break(1u);
        JUMPOUT(0x25B2068DCLL);
      }
      uint64_t v9 = v8;
      uint64_t v10 = sub_25B28FD30();
      uint64_t v11 = v7 - v10;
      if (__OFSUB__(v7, v10))
      {
        __break(1u);
LABEL_15:
        __break(1u);
      }
      BOOL v12 = __OFSUB__(v17, v7);
      uint64_t v13 = v17 - v7;
      if (v12) {
        goto LABEL_15;
      }
      uint64_t v14 = sub_25B28FD20();
      if (v14 >= v13) {
        uint64_t v15 = v13;
      }
      else {
        uint64_t v15 = v14;
      }
      uint64_t result = a1(v9 + v11, v9 + v11 + v15);
      *uint64_t v1 = v18;
      v1[1] = v6 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v18 + 7) = 0;
      *(void *)&long long v18 = 0;
      return a1((uint64_t)&v18, (uint64_t)&v18);
    default:
      *(void *)&long long v18 = *v1;
      WORD4(v18) = v2;
      BYTE10(v18) = BYTE2(v2);
      BYTE11(v18) = BYTE3(v2);
      BYTE12(v18) = BYTE4(v2);
      BYTE13(v18) = BYTE5(v2);
      BYTE14(v18) = BYTE6(v2);
      uint64_t result = a1((uint64_t)&v18, (uint64_t)&v18 + BYTE6(v2));
      uint64_t v4 = v18;
      unint64_t v5 = DWORD2(v18) | ((unint64_t)BYTE12(v18) << 32) | ((unint64_t)BYTE13(v18) << 40) | ((unint64_t)BYTE14(v18) << 48);
LABEL_4:
      *uint64_t v1 = v4;
      v1[1] = v5;
      return result;
  }
}

uint64_t sub_25B2068EC(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t result = sub_25B28FEC0();
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  if ((int)v5 < (int)v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_25B28FD00();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t result = sub_25B28FD30();
  uint64_t v7 = v4 - result;
  if (__OFSUB__(v4, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = v5 - v4;
  uint64_t v9 = sub_25B28FD20();
  if (v9 >= v8) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v9;
  }
  return a1(v6 + v7, v6 + v7 + v10);
}

uint64_t sub_25B20699C()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_25B2069C8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B2069D8()
{
  uint64_t v1 = type metadata accessor for Message();
  uint64_t v19 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v19 + 24) & ~v19;
  uint64_t v3 = v2 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v16 = (v3 + v5) & ~v5;
  uint64_t v18 = *(void *)(v4 + 64);
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = *(void *)(v7 + 64);
  swift_release();
  uint64_t v9 = v0 + v2;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v9, v6);
  uint64_t v11 = v9 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6)) {
    v10(v11, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B10DFF0(*(void *)(v9 + *(int *)(v1 + 36)), *(void *)(v9 + *(int *)(v1 + 36) + 8));
  uint64_t v12 = sub_25B28FEA0();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v16, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0 + v16, v12);
  }
  unint64_t v14 = (((v18 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) + v8 + 9) & ~v8;
  swift_unknownObjectRelease();
  v10(v0 + v14, v6);
  return MEMORY[0x270FA0238](v0, ((v17 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v19 | v5 | v8 | 7);
}

uint64_t sub_25B206CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for Message() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(sub_25B290080() - 8);
  unint64_t v12 = (v10 + *(unsigned __int8 *)(v11 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return sub_25B1EEA74(a1, a2, *(NSObject **)(v2 + 16), v2 + v6, (void (*)(char *, uint64_t))(v2 + v9), *(NSObject **)(v2 + v10), *(unsigned char *)(v2 + v10 + 8), v2 + v12, *(double *)(v2 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_25B206E54(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = sub_25B28FD00();
  uint64_t v15 = result;
  if (result)
  {
    uint64_t result = sub_25B28FD30();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v15 += a1 - result;
  }
  BOOL v16 = __OFSUB__(a2, a1);
  uint64_t v17 = a2 - a1;
  if (v16)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v18 = sub_25B28FD20();
  if (v18 >= v17) {
    uint64_t v19 = v17;
  }
  else {
    uint64_t v19 = v18;
  }
  uint64_t v20 = v15 + v19;
  if (v15) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 0;
  }
  sub_25B1F5AA0(v15, v21, a4, a5, a6, a7, a8);
  swift_release();
  swift_unknownObjectRelease();
  return sub_25B207D70(a7);
}

uint64_t sub_25B206F48(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_25B195458();
    *uint64_t v3 = v13;
    uint64_t result = swift_bridgeObjectRelease();
  }
  if ((a2 & 0x8000000000000000) != 0 || (uint64_t v9 = *v3, 1 << *(unsigned char *)(*v4 + 32) <= (uint64_t)a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(v9 + 8 * (a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(v9 + 36) == a3)
  {
    *uint64_t v4 = 0x8000000000000000;
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = *(void *)(*(void *)(v9 + 48) + 16 * a2);
    uint64_t v12 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
    sub_25B20913C(v10 + *(void *)(*(void *)(v12 - 8) + 72) * a2, a1, type metadata accessor for NetworkMessenger.ExpiringConnection);
    sub_25B21F7F0(a2, v9);
    *uint64_t v4 = v9;
    swift_bridgeObjectRelease();
    return v11;
  }
LABEL_10:
  __break(1u);
  return result;
}

void (*sub_25B207080(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_25B207130(v6, a2, a3);
  return sub_25B2070E8;
}

void sub_25B2070E8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_25B207130(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x26115F400](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_25B2071B0;
  }
  __break(1u);
  return result;
}

uint64_t sub_25B2071B0()
{
  return swift_unknownObjectRelease();
}

void *sub_25B2071B8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB0A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B20A190();
  sub_25B291280();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB0B0);
    sub_25B20AAC0((unint64_t *)&unk_26A4DB0B8, (void (*)(void))sub_25B196AB4);
    sub_25B290CC0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    unint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_25B20736C(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(sub_25B290080() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(uint64_t (**)(void))v9;
  uint64_t v11 = *(void *)(v9 + 8);
  return sub_25B1EF154(a1, v4, v7, v8, v10, v11);
}

uint64_t objectdestroy_37Tm()
{
  uint64_t v1 = sub_25B290080();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_25B207510()
{
  uint64_t v1 = *(void *)(sub_25B290080() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = *(void (**)(uint64_t))v5;
  uint64_t v7 = *(void *)(v5 + 8);
  return sub_25B1EF718(v3, v4, v6, v7);
}

uint64_t sub_25B2075A4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_25B2075CC()
{
  return sub_25B1EFD08(*(void (**)(uint64_t *))(v0 + 16));
}

unint64_t sub_25B2075D4()
{
  unint64_t result = qword_26A4DAFC8;
  if (!qword_26A4DAFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAFC8);
  }
  return result;
}

uint64_t sub_25B20762C()
{
  return (*(uint64_t (**)(void, uint64_t))(v0 + 16))(*(void *)(v0 + 32), 1);
}

uint64_t sub_25B207660()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_25B28FEA0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_25B2077B0(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v2 + v6;
  uint64_t v9 = *(void *)(v2 + v7);
  uint64_t v10 = (uint64_t *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  return sub_25B1F070C(a1, v4, v8, v9, v11, v12);
}

uint64_t sub_25B207870(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_25B2078D0()
{
  sub_25B1F5130(*(void (**)(void *, uint64_t))(v0 + 16), *(void *)(v0 + 24), 0);
}

void sub_25B2078F0()
{
  sub_25B1F5130(*(void (**)(void *, uint64_t))(v0 + 16), *(void *)(v0 + 24), 2);
}

uint64_t sub_25B207910()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B207948(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B2079B0()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B2079E8()
{
  uint64_t v1 = sub_25B28FEA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = (v10 + v8 + v9) & ~v8;
  unint64_t v14 = ((((((((((v11 + v10) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v15 = v3 | v8 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v12(v0 + v9, v6);
  v12(v0 + v11, v6);
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, v14, v15);
}

uint64_t sub_25B207BAC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_25B28FEA0() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_25B290080() - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  unint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v13 = *(void *)(v10 + 64);
  unint64_t v14 = (v13 + v11 + v12) & ~v11;
  uint64_t v15 = v14 + v13;
  unint64_t v16 = ((v15 & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v17 = (v16 + 11) & 0xFFFFFFFFFFFFFFF8;
  return sub_25B1F3E78(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), v3 + v8, v3 + v12, v3 + v14, *(unsigned char *)(v3 + v15), *(_DWORD *)((v15 & 0xFFFFFFFFFFFFFFFCLL) + v3 + 4), *(_DWORD *)(v3 + v16), *(NSObject **)(v3 + v17), *(void *)(v3 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v3 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v3 + ((((v17 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8))) & 1;
}

uint64_t sub_25B207D20()
{
  return (*(uint64_t (**)(uint64_t, void))(v0 + 16))(1, 0);
}

void sub_25B207D50()
{
  sub_25B1F5130(*(void (**)(void *, uint64_t))(v0 + 16), *(void *)(v0 + 24), 1);
}

uint64_t sub_25B207D70(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_25B207D80()
{
  unint64_t result = qword_26A4DAFE8;
  if (!qword_26A4DAFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAFE8);
  }
  return result;
}

uint64_t sub_25B207DD4()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25B207E1C(void *a1, char a2)
{
  return sub_25B1F51A4(a1, a2 & 1, v2[2], v2[3], v2[4]);
}

uint64_t sub_25B207E2C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_25B207E3C@<X0>(const char *a1@<X0>, void *a2@<X8>)
{
  return sub_25B28B100(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_25B207E58()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  sub_25B116D08(*(id *)(v0 + 32), *(unsigned char *)(v0 + 40));
  return MEMORY[0x270FA0238](v0, 41, 7);
}

void sub_25B207EA4()
{
  sub_25B1F546C(*(void (**)(void *, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_25B207EB4()
{
  swift_release();
  sub_25B116D08(*(id *)(v0 + 32), *(unsigned char *)(v0 + 40));
  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t sub_25B207EF8()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_25B207F2C()
{
  swift_release();
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_25B207F7C(uint64_t a1)
{
  sub_25B1F5C94(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(uint64_t, uint64_t))(v1 + 40));
}

unint64_t sub_25B207F8C()
{
  unint64_t result = qword_26A4DAFF0;
  if (!qword_26A4DAFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DAFF0);
  }
  return result;
}

uint64_t sub_25B207FE0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v27 = a2;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB010);
  MEMORY[0x270FA5388](v26);
  uint64_t v4 = (uint64_t *)((char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v25 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v19 >= v25) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v25) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v24 + 8 * v10);
        if (!v20)
        {
          int64_t v10 = v19 + 3;
          if (v19 + 3 >= v25) {
            goto LABEL_24;
          }
          unint64_t v20 = *(void *)(v24 + 8 * v10);
          if (!v20)
          {
            int64_t v21 = v19 + 4;
            if (v21 >= v25)
            {
LABEL_24:
              uint64_t v22 = 0;
              goto LABEL_25;
            }
            unint64_t v20 = *(void *)(v24 + 8 * v21);
            if (!v20)
            {
              while (1)
              {
                int64_t v10 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_27;
                }
                if (v10 >= v25) {
                  goto LABEL_24;
                }
                unint64_t v20 = *(void *)(v24 + 8 * v10);
                ++v21;
                if (v20) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v10 = v21;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v12 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(a1 + 56);
    unint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = v13
        + *(void *)(*(void *)(type metadata accessor for NetworkMessenger.ExpiringConnection(0) - 8) + 72) * v12;
    uint64_t v18 = (uint64_t)v4 + *(int *)(v26 + 48);
    sub_25B207948(v17, v18, type metadata accessor for NetworkMessenger.ExpiringConnection);
    *uint64_t v4 = v15;
    v4[1] = v16;
    swift_bridgeObjectRetain();
    LOBYTE(v18) = v27(v15, v16, v18);
    uint64_t result = sub_25B116DE0((uint64_t)v4, (uint64_t *)&unk_26A4DB010);
    if (v18)
    {
      uint64_t v22 = 1;
LABEL_25:
      swift_release();
      return v22;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25B208274(unsigned __int8 *a1)
{
  int v1 = *a1;
  application_service_quic = nw_parameters_create_application_service_quic();
  if (application_service_quic)
  {
    uint64_t v3 = application_service_quic;
    nw_parameters_set_prohibit_expensive(application_service_quic, 1);
    nw_parameters_set_prohibit_constrained(v3, 1);
    nw_parameters_set_include_peer_to_peer(v3, 1);
    nw_parameters_set_attach_protocol_listener();
    if (v1)
    {
      xpc_object_t empty = xpc_array_create_empty();
      size_t v5 = sub_25B2901A0();
      xpc_array_set_string(empty, v5, "com.apple.networkrelay");
      xpc_object_t v6 = xpc_array_create_empty();
      size_t v7 = sub_25B2901A0();
      xpc_array_set_string(v6, v7, "ASListener");
      nw_parameters_set_required_netagent_classes();
      nw_parameters_set_local_only(v3, 0);
      nw_parameters_set_traffic_class();
      nw_parameters_set_multipath_service(v3, nw_multipath_service_disabled);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    return (uint64_t)v3;
  }
  else
  {
    uint64_t result = sub_25B290BC0();
    __break(1u);
  }
  return result;
}

void sub_25B2083B4(void *a1)
{
  if (xpc_dictionary_get_string(a1, (const char *)*MEMORY[0x263EF86C8]) && xpc_dictionary_get_BOOL(a1, "replyRequired"))
  {
    if (xpc_dictionary_create_reply(a1))
    {
      xpc_dictionary_send_reply();
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_26A4D98C8 != -1) {
        swift_once();
      }
      uint64_t v2 = sub_25B290190();
      __swift_project_value_buffer(v2, (uint64_t)qword_26A4EB168);
      oslog = sub_25B290160();
      os_log_type_t v3 = sub_25B2908A0();
      if (os_log_type_enabled(oslog, v3))
      {
        uint64_t v4 = (uint8_t *)swift_slowAlloc();
        uint64_t v5 = swift_slowAlloc();
        uint64_t v9 = v5;
        *(_DWORD *)uint64_t v4 = 136446210;
        uint64_t v6 = sub_25B290660();
        sub_25B288E98(v6, v7, &v9);
        sub_25B2909C0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25B107000, oslog, v3, "Failed to reply to wake event [rapport]: %{public}s", v4, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x261160890](v5, -1, -1);
        MEMORY[0x261160890](v4, -1, -1);
      }
      else
      {
      }
    }
  }
}

uint64_t sub_25B2085C4(char *a1)
{
  char v1 = *a1;
  application_service_quic = nw_parameters_create_application_service_quic();
  if (application_service_quic)
  {
    os_log_type_t v3 = application_service_quic;
    nw_parameters_set_prohibit_expensive(application_service_quic, 1);
    nw_parameters_set_prohibit_constrained(v3, 1);
    nw_parameters_set_include_peer_to_peer(v3, 1);
    if (v1)
    {
      xpc_object_t empty = xpc_array_create_empty();
      size_t v5 = sub_25B2901A0();
      xpc_array_set_string(empty, v5, "com.apple.networkrelay");
      xpc_object_t v6 = xpc_array_create_empty();
      size_t v7 = sub_25B2901A0();
      xpc_array_set_string(v6, v7, "ASResolver");
      swift_unknownObjectRetain();
      nw_parameters_set_preferred_netagent_classes();
      nw_parameters_set_traffic_class();
      swift_unknownObjectRelease();
      nw_parameters_set_multipath_service(v3, nw_multipath_service_disabled);
    }
    else
    {
      xpc_object_t v8 = xpc_array_create(0, 0);
      size_t v9 = sub_25B2901A0();
      xpc_array_set_string(v8, v9, "com.apple.rapport.browse");
      xpc_object_t v10 = xpc_array_create(0, 0);
      size_t v11 = sub_25B2901A0();
      xpc_array_set_string(v10, v11, "RapportBrowseAgent");
      nw_parameters_set_preferred_netagent_classes();
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return (uint64_t)v3;
  }
  else
  {
    uint64_t result = sub_25B290BC0();
    __break(1u);
  }
  return result;
}

double sub_25B20875C()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  char v1 = (void *)sub_25B290590();
  id v2 = objc_msgSend(v0, sel_valueForKey_, v1);

  if (v2)
  {
    sub_25B2909E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_25B187574((uint64_t)v5, (uint64_t)v6, &qword_26B33F4C0);
  if (v7)
  {
    if (swift_dynamicCast()) {
      return v4;
    }
  }
  else
  {
    sub_25B116DE0((uint64_t)v6, &qword_26B33F4C0);
  }
  return 30.0;
}

void sub_25B208878(NSObject *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25B290410();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  xpc_object_t v8 = *(void **)(v2 + 24);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  size_t v9 = v8;
  char v10 = sub_25B290440();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v10)
  {
    if (qword_26A4D98C8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v11 = sub_25B290190();
  __swift_project_value_buffer(v11, (uint64_t)qword_26A4EB168);
  swift_unknownObjectRetain_n();
  unint64_t v12 = sub_25B290160();
  os_log_type_t v13 = sub_25B2908A0();
  if (os_log_type_enabled(v12, v13))
  {
    unint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = (uint64_t)a1;
    aBlock[0] = v15;
    *(_DWORD *)unint64_t v14 = 136446210;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    uint64_t v16 = sub_25B290600();
    uint64_t v22 = sub_25B288E98(v16, v17, aBlock);
    sub_25B2909C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v12, v13, "Starting connection: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v15, -1, -1);
    MEMORY[0x261160890](v14, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = a1;
  aBlock[4] = (uint64_t)sub_25B209B68;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_25B203BF0;
  aBlock[3] = (uint64_t)&block_descriptor_241;
  unint64_t v20 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  nw_connection_set_state_changed_handler(a1, v20);
  _Block_release(v20);
  nw_connection_set_queue(a1, v9);
  nw_connection_start(a1);
  sub_25B203C70();
}

uint64_t sub_25B208C04(uint64_t a1, uint64_t (*a2)(void, void, char *), uint64_t a3)
{
  uint64_t v40 = a3;
  uint64_t v45 = a2;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB010);
  uint64_t v4 = MEMORY[0x270FA5388](v44);
  uint64_t v43 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v34 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v41 = (char *)&v34 - v8;
  uint64_t result = sub_25B1A7EF0(a1);
  if (v11) {
    goto LABEL_32;
  }
  if (*(_DWORD *)(a1 + 36) != v10) {
    goto LABEL_31;
  }
  uint64_t v12 = result;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  if (result == v13) {
    return 0;
  }
  uint64_t v14 = a1 + 64;
  uint64_t v36 = v10;
  uint64_t v35 = a1 + 88;
  uint64_t v15 = v10;
  uint64_t v38 = v10;
  uint64_t v39 = a1 + 64;
  uint64_t v16 = v41;
  unint64_t v17 = v42;
  while ((v12 & 0x8000000000000000) == 0 && v12 < v13)
  {
    if (v10 != v15 || (*(void *)(v14 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0) {
      goto LABEL_27;
    }
    uint64_t v46 = 1 << v12;
    uint64_t v37 = v15;
    unint64_t v47 = (unint64_t)v12 >> 6;
    uint64_t v19 = v44;
    uint64_t v20 = (uint64_t)v16 + *(int *)(v44 + 48);
    uint64_t v21 = *(void *)(a1 + 56);
    uint64_t v22 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    uint64_t v25 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
    sub_25B207948(v21 + *(void *)(*(void *)(v25 - 8) + 72) * v12, v20, type metadata accessor for NetworkMessenger.ExpiringConnection);
    *uint64_t v16 = v24;
    v16[1] = v23;
    void *v17 = v24;
    v17[1] = v23;
    sub_25B207948(v20, (uint64_t)v17 + *(int *)(v19 + 48), type metadata accessor for NetworkMessenger.ExpiringConnection);
    uint64_t v26 = v43;
    sub_25B187574((uint64_t)v17, (uint64_t)v43, (uint64_t *)&unk_26A4DB010);
    swift_bridgeObjectRetain_n();
    sub_25B116DE0((uint64_t)v16, (uint64_t *)&unk_26A4DB010);
    LOBYTE(v20) = v45(*(void *)v26, *((void *)v26 + 1), &v26[*(int *)(v19 + 48)]);
    uint64_t result = sub_25B116DE0((uint64_t)v26, (uint64_t *)&unk_26A4DB010);
    if (v20) {
      return v12;
    }
    char v27 = *(unsigned char *)(a1 + 32);
    unint64_t v18 = 1 << v27;
    if (v12 >= 1 << v27) {
      goto LABEL_28;
    }
    uint64_t v14 = v39;
    unint64_t v28 = v47;
    uint64_t v29 = *(void *)(v39 + 8 * v47);
    if ((v29 & v46) == 0) {
      goto LABEL_29;
    }
    LODWORD(v10) = v38;
    if (*(_DWORD *)(a1 + 36) != v38) {
      goto LABEL_30;
    }
    unint64_t v30 = v29 & (-2 << (v12 & 0x3F));
    if (v30)
    {
      unint64_t v18 = __clz(__rbit64(v30)) | v12 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v31 = v47 + 1;
      unint64_t v32 = (v18 + 63) >> 6;
      if (v47 + 1 < v32)
      {
        unint64_t v33 = *(void *)(v39 + 8 * v31);
        if (!v33)
        {
          unint64_t v31 = v47 + 2;
          if (v47 + 2 >= v32) {
            goto LABEL_7;
          }
          unint64_t v33 = *(void *)(v39 + 8 * v31);
          if (!v33)
          {
            while (v32 - 3 != v28)
            {
              unint64_t v33 = *(void *)(v35 + 8 * v28++);
              if (v33)
              {
                unint64_t v31 = v28 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_7;
          }
        }
LABEL_19:
        unint64_t v18 = __clz(__rbit64(v33)) + (v31 << 6);
      }
    }
LABEL_7:
    uint64_t v13 = 1 << v27;
    uint64_t v12 = v18;
    uint64_t v15 = v36;
    if (v18 == v13) {
      return 0;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_25B208F70()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)sub_25B290590();
  id v2 = objc_msgSend(v0, sel_valueForKey_, v1);

  if (v2)
  {
    sub_25B2909E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_25B187574((uint64_t)v5, (uint64_t)v6, &qword_26B33F4C0);
  if (v7)
  {
    if (swift_dynamicCast()) {
      return v4;
    }
  }
  else
  {
    sub_25B116DE0((uint64_t)v6, &qword_26B33F4C0);
  }
  return 0;
}

uint64_t sub_25B20908C()
{
  unint64_t v0 = sub_25B204DF8();
  return sub_25B203C70(v0);
}

BOOL sub_25B2090B4(uint64_t a1, uint64_t a2, void *a3)
{
  return *a3 == *(void *)(v3 + 16);
}

uint64_t sub_25B2090C8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B209100()
{
  return sub_25B1BE6A0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25B209108()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B209118(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_25B1862BC(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_25B209130(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_25B20913C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_25B2091A4(uint64_t *a1, uint64_t a2)
{
  return sub_25B20578C(a1, a2, *(void *)(v2 + 24));
}

uint64_t sub_25B2091C8@<X0>(uint64_t (**a1)()@<X8>)
{
  return sub_25B1EF504(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t objectdestroy_67Tm()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25B209228()
{
  return sub_25B1EF658(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_25B209234()
{
  uint64_t v1 = type metadata accessor for Message();
  uint64_t v16 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v16 + 40) & ~v16;
  uint64_t v3 = v2 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v3 + v5;
  uint64_t v17 = *(void *)(v4 + 64);
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  uint64_t v7 = v6 & ~v5;
  uint64_t v8 = v0 + v2;
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void *)(v9 - 8);
  char v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  uint64_t v12 = v8 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9)) {
    v11(v12, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B10DFF0(*(void *)(v8 + *(int *)(v1 + 36)), *(void *)(v8 + *(int *)(v1 + 36) + 8));
  uint64_t v13 = sub_25B28FEA0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v0 + v7, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0 + v7, v13);
  }
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v17 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 9, v16 | v5 | 7);
}

uint64_t sub_25B2094E0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for Message() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_25B1EB770(a1, a2, v2[2], v2[3], v2[4], (uint64_t)v2 + v6, (uint64_t)v2 + v9, *(uint64_t *)((char *)v2 + v10), *((unsigned char *)v2 + v10 + 8));
}

uint64_t sub_25B209604()
{
  uint64_t v1 = type metadata accessor for Message();
  uint64_t v16 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v16 + 56) & ~v16;
  uint64_t v3 = v2 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v3 + v5;
  uint64_t v17 = *(void *)(v4 + 64);
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  uint64_t v7 = v6 & ~v5;
  swift_release();
  swift_release();
  uint64_t v8 = v0 + v2;
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void *)(v9 - 8);
  char v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  uint64_t v12 = v8 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9)) {
    v11(v12, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B10DFF0(*(void *)(v8 + *(int *)(v1 + 36)), *(void *)(v8 + *(int *)(v1 + 36) + 8));
  uint64_t v13 = sub_25B28FEA0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v0 + v7, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0 + v7, v13);
  }
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v17 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 9, v16 | v5 | 7);
}

void sub_25B2098A4(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Message() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160) - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v1 + v7;
  uint64_t v9 = v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_25B1EBB44(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), v1 + v4, v8, *(NSObject **)v9, *(unsigned char *)(v9 + 8));
}

uint64_t sub_25B2099C0()
{
  return objectdestroy_18Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_25B2099D8()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25B209A20(uint64_t a1, char a2)
{
  uint64_t v3 = *(void (**)(uint64_t, void))(v2 + 16);
  unint64_t v4 = *(uint64_t (**)(void))(v2 + 32);
  if (v3) {
    v3(a1, a2 & 1);
  }
  return v4();
}

uint64_t sub_25B209A6C@<X0>(void *a1@<X8>)
{
  return sub_25B1EB074(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_25B209A8C()
{
  return objectdestroy_205Tm(32);
}

uint64_t sub_25B209A94()
{
  return sub_25B1EAA34(*(NSObject **)(v0 + 24));
}

uint64_t sub_25B209ABC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B209ACC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25B1EA464(*(void *)(v1 + 24), *(void *)(v1 + 32));
  *a1 = result;
  return result;
}

uint64_t sub_25B209B14()
{
  return sub_25B1BE500(v0[2], v0[3], v0[4]);
}

uint64_t sub_25B209B20()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B209B34()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B209B44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25B1E65F4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_25B209B60()
{
  return objectdestroy_205Tm(32);
}

uint64_t sub_25B209B68(int a1, uint64_t a2)
{
  return sub_25B202CEC(a1, a2, *(void *)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t sub_25B209B70()
{
  return objectdestroy_205Tm(32);
}

uint64_t sub_25B209B78(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_25B1F7D4C(a1, a2, a3, a4, *(void *)(v4 + 16), *(NSObject **)(v4 + 24));
}

uint64_t sub_25B209B80(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_25B28FD40();
      swift_allocObject();
      sub_25B28FD10();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_25B28FED0();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_25B209C20()
{
  return sub_25B209C4C();
}

uint64_t sub_25B209C38()
{
  return objectdestroy_205Tm(36);
}

uint64_t sub_25B209C40(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_25B1F904C(a1, a2, a3, a4, *(void *)(v4 + 16), *(NSObject **)(v4 + 24), *(_DWORD *)(v4 + 32));
}

uint64_t sub_25B209C4C()
{
  return sub_25B28FCB0();
}

uint64_t sub_25B209CE0()
{
  unint64_t v1 = (int *)(type metadata accessor for NetworkSyncHeader(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_25B290080();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v6 + v1[8], v7);
  v8(v6 + v1[9], v7);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

void sub_25B209E10(void *a1, unint64_t a2, int a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for NetworkSyncHeader(0) - 8);
  uint64_t v10 = *(void *)(v4 + 16);
  char v11 = *(NSObject **)(v4 + 24);
  uint64_t v12 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  sub_25B1FB0B0(a1, a2, a3, a4, v10, v11, v12);
}

uint64_t sub_25B209EAC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return MEMORY[0x270FA0238](v0, 73, 7);
}

uint64_t sub_25B209EF4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB080);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v13 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v3 = v0 + ((v2 + 32) & ~v2);
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  uint64_t v7 = type metadata accessor for Message();
  uint64_t v8 = v3 + *(int *)(v7 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4)) {
    v6(v8, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B10DFF0(*(void *)(v3 + *(int *)(v7 + 36)), *(void *)(v3 + *(int *)(v7 + 36) + 8));
  uint64_t v9 = v3 + *(int *)(v1 + 28);
  uint64_t v10 = sub_25B28FEA0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v2 + 32) & ~v2) + v13, v2 | 7);
}

uint64_t sub_25B20A128()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB080) - 8);
  uint64_t v2 = *(void (**)(char *))(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_25B202C20(v2, v3, v4);
}

unint64_t sub_25B20A190()
{
  unint64_t result = qword_26A4DB0A8;
  if (!qword_26A4DB0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DB0A8);
  }
  return result;
}

unint64_t sub_25B20A1E4()
{
  unint64_t result = qword_26A4DB0C8;
  if (!qword_26A4DB0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DB0C8);
  }
  return result;
}

uint64_t sub_25B20A238()
{
  uint64_t v1 = (int *)(type metadata accessor for NetworkSyncHeader(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((((*(void *)(*(void *)v1 + 64) + v3 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_25B290080();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v6 + v1[8], v7);
  v8(v6 + v1[9], v7);
  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_25B20A37C(unint64_t a1, void (*a2)(uint64_t, char *, uint64_t), int a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for NetworkSyncHeader(0) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  return sub_25B1FFFA4(a1, a2, a3, a4, *(void *)(v4 + 16), *(NSObject **)(v4 + 24), v4 + v10, *(_DWORD *)(v4 + v11), *(_DWORD *)(v4 + ((v11 + 7) & 0xFFFFFFFFFFFFFFFCLL)));
}

uint64_t sub_25B20A450(const char *a1)
{
  return sub_25B28AAF8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

unint64_t sub_25B20A470()
{
  unint64_t result = qword_26A4DB0D0;
  if (!qword_26A4DB0D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A4DB0D0);
  }
  return result;
}

uint64_t sub_25B20A4B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25B20A4F8(void *a1@<X8>)
{
  sub_25B1E9028(*(NSObject **)(v1 + 24), 0, 0);
  *a1 = v3;
}

uint64_t sub_25B20A544()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B20A554()
{
  return objectdestroy_205Tm(32);
}

uint64_t objectdestroy_205Tm(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_25B20A5A8(NSObject *a1)
{
  return sub_25B1F62F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25B20A5B0()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_25B20A5E8(int a1, uint64_t a2)
{
}

uint64_t sub_25B20A5F4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t objectdestroy_215Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25B20A648()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B20A658()
{
  return objectdestroy_18Tm(MEMORY[0x263F8EEA0]);
}

uint64_t objectdestroy_18Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  return MEMORY[0x270FA0238](v1, 40, 7);
}

uint64_t sub_25B20A6C0()
{
  return sub_25B1E626C(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_25B20A6EC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B20A6FC@<X0>(void *a1@<X8>)
{
  return sub_25B1E607C(a1);
}

uint64_t sub_25B20A718()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_25B20A750(uint64_t a1)
{
  sub_25B205CE4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_25B20A758()
{
  *(_DWORD *)(*(void *)(v0 + 16) + 88) = **(_DWORD **)(v0 + 24);
}

uint64_t sub_25B20A768()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unsigned char *storeEnumTagSinglePayload for NetworkMessenger.ExtendedAttributes.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        NSObject *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      NSObject *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B20A814);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkMessenger.ExtendedAttributes.CodingKeys()
{
  return &type metadata for NetworkMessenger.ExtendedAttributes.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for NetworkMessenger.NetworkMessengerOperationalError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    NSObject *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B20A918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          NSObject *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkMessenger.NetworkMessengerOperationalError()
{
  return &type metadata for NetworkMessenger.NetworkMessengerOperationalError;
}

ValueMetadata *type metadata accessor for NetworkMessenger.ExtendedAttributes()
{
  return &type metadata for NetworkMessenger.ExtendedAttributes;
}

unint64_t sub_25B20A964()
{
  unint64_t result = qword_26A4DB0E0;
  if (!qword_26A4DB0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DB0E0);
  }
  return result;
}

unint64_t sub_25B20A9BC()
{
  unint64_t result = qword_26A4DB0E8;
  if (!qword_26A4DB0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DB0E8);
  }
  return result;
}

unint64_t sub_25B20AA14()
{
  unint64_t result = qword_26A4DB0F0;
  if (!qword_26A4DB0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DB0F0);
  }
  return result;
}

unint64_t sub_25B20AA6C()
{
  unint64_t result = qword_26A4DB0F8;
  if (!qword_26A4DB0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DB0F8);
  }
  return result;
}

uint64_t sub_25B20AAC0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4DB0B0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B20ACD4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(v1 + *a1);
  if (v3)
  {
    uint64_t v4 = v3;
  }
  else
  {
    uint64_t v5 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99F8);
    sub_25B116394(&qword_26A4D99F0, &qword_26A4D99F8);
    uint64_t v4 = sub_25B290240();
    *(void *)(v5 + v2) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

void sub_25B20AD90(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v31 = a3;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v36 = sub_25B2908F0();
  uint64_t v39 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25B2908C0();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_25B290360();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency__accountsChanged;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99F8);
  swift_allocObject();
  uint64_t v9 = v3;
  *(void *)&v3[v8] = sub_25B290220();
  *(void *)&v9[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency____lazy_storage___accountsChanged] = 0;
  uint64_t v10 = OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency__devicesChanged;
  swift_allocObject();
  *(void *)&v9[v10] = sub_25B290220();
  *(void *)&v9[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency____lazy_storage___devicesChanged] = 0;
  uint64_t v11 = OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(void *)&v9[v11] = v12;
  *(_OWORD *)&v9[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_identityBlob] = xmmword_25B2932B0;
  uint64_t v35 = OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_calloutQueue;
  sub_25B1B73F8(0, (unint64_t *)&qword_26A4D9B70);
  sub_25B290350();
  uint64_t v41 = MEMORY[0x263F8EE78];
  uint64_t v33 = sub_25B20CE74((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
  uint64_t v34 = sub_25B116394((unint64_t *)&qword_26A4D9B20, (uint64_t *)&unk_26A4D9B10);
  sub_25B290A00();
  uint64_t v13 = *MEMORY[0x263F8F138];
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 104);
  v39 += 104;
  uint64_t v15 = v5;
  uint64_t v16 = v5;
  uint64_t v17 = v36;
  v14(v16, v13, v36);
  *(void *)&v9[v35] = sub_25B290920();
  uint64_t v35 = OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_identityFetchQueue;
  sub_25B290350();
  uint64_t v41 = MEMORY[0x263F8EE78];
  sub_25B290A00();
  v14(v15, v13, v17);
  *(void *)&v9[v35] = sub_25B290920();
  unint64_t v18 = &v9[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_localDeviceID];
  *(void *)unint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  v9[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_fetchingLocalDeviceID] = 0;
  uint64_t v19 = &v9[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_serviceName];
  uint64_t v20 = v38;
  *(void *)uint64_t v19 = v37;
  *((void *)v19 + 1) = v20;
  id v21 = objc_allocWithZone(MEMORY[0x263F4A0C0]);
  swift_bridgeObjectRetain();
  uint64_t v22 = (void *)sub_25B290590();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v21, sel_initWithService_, v22);

  if (v23)
  {
    *(void *)&v9[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_service] = v23;

    v40.receiver = v9;
    v40.super_class = ObjectType;
    uint64_t v24 = (char *)objc_msgSendSuper2(&v40, sel_init);
    uint64_t v25 = *(void **)&v24[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_service];
    uint64_t v26 = v24;
    id v27 = v25;
    unint64_t v28 = v31;
    objc_msgSend(v27, sel_addDelegate_queue_, v26, v31);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25B20B27C@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_25B290320();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25B290360();
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)&a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_localDeviceID + 8];
  if (v12)
  {
    *a2 = *(void *)&a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_localDeviceID];
    a2[1] = v12;
  }
  else
  {
    uint64_t v23 = v5;
    if ((a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_fetchingLocalDeviceID] & 1) == 0)
    {
      a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_fetchingLocalDeviceID] = 1;
      uint64_t v13 = *(void *)&a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_identityFetchQueue];
      uint64_t v21 = v9;
      uint64_t v22 = v13;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = a1;
      aBlock[4] = sub_25B20CC08;
      aBlock[5] = v14;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_25B10F584;
      aBlock[3] = &block_descriptor_21;
      uint64_t v19 = _Block_copy(aBlock);
      uint64_t v15 = a1;
      sub_25B290340();
      uint64_t aBlock[7] = MEMORY[0x263F8EE78];
      uint64_t v20 = sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
      sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
      sub_25B290A00();
      uint64_t v16 = v19;
      MEMORY[0x26115F250](0, v11, v7, v19);
      _Block_release(v16);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v8);
      swift_release();
    }
    *a2 = 0;
    a2[1] = 0;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B20B5A8(uint64_t a1)
{
  if (qword_26A4D9F00 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x270FA5388](a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E80);
  uint64_t v1 = sub_25B290900();
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = v3 + 4;
  os_unfair_lock_lock(v3 + 4);
  sub_25B10DDCC(v5);
  os_unfair_lock_unlock(v4);
  return swift_bridgeObjectRelease();
}

void sub_25B20B714()
{
  uint64_t v1 = sub_25B290080();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_service), sel_devices));
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (!v8) {
    return;
  }
  uint64_t v10 = v8;
  sub_25B1B73F8(0, (unint64_t *)&unk_26A4D9BB0);
  unint64_t v11 = sub_25B290730();

  uint64_t v36 = v9;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_25B290BD0();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_4;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_33;
    }
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v12) {
    goto LABEL_18;
  }
LABEL_4:
  if (v12 < 1)
  {
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    return;
  }
  uint64_t v13 = 0;
  uint64_t v34 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v35 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
  uint64_t v32 = v7;
  uint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  do
  {
    if ((v11 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x26115F400](v13, v11);
    }
    else {
      id v14 = *(id *)(v11 + 8 * v13 + 32);
    }
    uint64_t v15 = v14;
    id v16 = objc_msgSend(v14, sel_nsuuid);
    if (!v16)
    {
      (*v35)(v7, 1, 1, v1);
LABEL_7:
      sub_25B1DA620((uint64_t)v7);

      goto LABEL_8;
    }
    uint64_t v17 = v16;
    sub_25B290040();

    (*v34)(v7, v4, v1);
    (*v35)(v7, 0, 1, v1);
    if ((*v33)(v7, 1, v1) == 1) {
      goto LABEL_7;
    }
    sub_25B1DA620((uint64_t)v7);
    sub_25B290B40();
    sub_25B290B70();
    uint64_t v7 = v32;
    sub_25B290B80();
    sub_25B290B50();
LABEL_8:
    ++v13;
  }
  while (v12 != v13);
  swift_bridgeObjectRelease();
  uint64_t v18 = v36;
  if ((v36 & 0x8000000000000000) == 0)
  {
LABEL_19:
    if ((v18 & 0x4000000000000000) != 0) {
      goto LABEL_33;
    }
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19) {
      goto LABEL_21;
    }
    goto LABEL_34;
  }
LABEL_33:
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_25B290BD0();
    swift_release();
    if (!v19) {
      break;
    }
LABEL_21:
    uint64_t v36 = v9;
    sub_25B2242B0(0, v19 & ~(v19 >> 63), 0);
    if (v19 < 0) {
      goto LABEL_37;
    }
    uint64_t v20 = 0;
    uint64_t v9 = v36;
    while (v19 != v20)
    {
      if ((v18 & 0xC000000000000001) != 0) {
        id v21 = (id)MEMORY[0x26115F400](v20, v18);
      }
      else {
        id v21 = *(id *)(v18 + 8 * v20 + 32);
      }
      uint64_t v22 = v21;
      id v23 = objc_msgSend(v21, sel_uniqueIDOverride);
      if (!v23) {
        goto LABEL_38;
      }
      uint64_t v24 = v23;
      uint64_t v25 = sub_25B2905C0();
      uint64_t v27 = v26;

      uint64_t v36 = v9;
      unint64_t v29 = *(void *)(v9 + 16);
      unint64_t v28 = *(void *)(v9 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_25B2242B0(v28 > 1, v29 + 1, 1);
        uint64_t v9 = v36;
      }
      ++v20;
      *(void *)(v9 + 16) = v29 + 1;
      uint64_t v30 = v9 + 16 * v29;
      *(void *)(v30 + 32) = v25;
      *(void *)(v30 + 40) = v27;
      if (v19 == v20)
      {
        swift_release();
        return;
      }
    }
    __break(1u);
  }
LABEL_34:
  swift_release();
}

void sub_25B20BB90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25B290320();
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_25B290360();
  uint64_t v9 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock);
  uint64_t v27 = v2;
  uint64_t v24 = sub_25B20CA3C;
  uint64_t v25 = &v26;
  uint64_t v13 = v12 + 4;
  os_unfair_lock_lock(v12 + 4);
  sub_25B20CA6C(&aBlock);
  os_unfair_lock_unlock(v13);
  uint64_t v15 = *((void *)&aBlock + 1);
  if (*((void *)&aBlock + 1))
  {
    uint64_t v16 = aBlock;
    uint64_t v17 = (void *)swift_allocObject();
    _OWORD v17[2] = a1;
    v17[3] = a2;
    v17[4] = v16;
    v17[5] = v15;
    uint64_t v32 = sub_25B20CAAC;
    uint64_t v33 = v17;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v30 = sub_25B10F584;
    uint64_t v31 = &block_descriptor_10;
    uint64_t v18 = _Block_copy(&aBlock);
    swift_retain();
    sub_25B290340();
    uint64_t v28 = MEMORY[0x263F8EE78];
    sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
    sub_25B290A00();
    MEMORY[0x26115F250](0, v11, v8, v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
    swift_release();
  }
  else
  {
    uint64_t v19 = MEMORY[0x270FA5388](v14);
    *(&v22 - 4) = v3;
    *(&v22 - 3) = a1;
    *(&v22 - 2) = a2;
    MEMORY[0x270FA5388](v19);
    *(&v22 - 2) = (uint64_t)sub_25B20CA88;
    *(&v22 - 1) = v20;
    os_unfair_lock_lock(v13);
    sub_25B10DCD0(v21);
    os_unfair_lock_unlock(v13);
  }
}

uint64_t sub_25B20BF38(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B290320();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25B290360();
  uint64_t v10 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_fetchingLocalDeviceID] = 1;
  v17[1] = *(void *)&a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_identityFetchQueue];
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  void v13[3] = a2;
  v13[4] = a3;
  aBlock[4] = sub_25B20CB34;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_7;
  uint64_t v14 = _Block_copy(aBlock);
  uint64_t v15 = a1;
  swift_retain();
  sub_25B290340();
  uint64_t aBlock[7] = MEMORY[0x263F8EE78];
  sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v12, v9, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  return swift_release();
}

uint64_t sub_25B20C228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v4 = sub_25B290320();
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25B290360();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A4D9F00 != -1) {
    uint64_t v8 = swift_once();
  }
  MEMORY[0x270FA5388](v8);
  *(&v23 - 4) = 0;
  *(&v23 - 3) = 0;
  *(&v23 - 2) = (uint64_t)sub_25B20B710;
  *(&v23 - 1) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E80);
  uint64_t v11 = sub_25B290900();
  uint64_t v13 = aBlock;
  uint64_t v12 = v31;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  *(&v23 - 4) = a1;
  *(&v23 - 3) = v13;
  *(&v23 - 2) = v12;
  MEMORY[0x270FA5388](v14);
  *(&v23 - 2) = (uint64_t)sub_25B20CB58;
  *(&v23 - 1) = v15;
  uint64_t v17 = v16 + 4;
  os_unfair_lock_lock(v16 + 4);
  sub_25B10DDCC(v18);
  os_unfair_lock_unlock(v17);
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v20 = v25;
  _OWORD v19[2] = v24;
  v19[3] = v20;
  v19[4] = v13;
  v19[5] = v12;
  uint64_t v34 = sub_25B20CAAC;
  uint64_t v35 = v19;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_25B10F584;
  uint64_t v33 = &block_descriptor_14_1;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_retain();
  sub_25B290340();
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v10, v6, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
  return swift_release();
}

id sub_25B20C660()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ConcreteIDSDependency()
{
  return self;
}

uint64_t sub_25B20C7A4()
{
  return sub_25B20ACD4(&OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency____lazy_storage___accountsChanged);
}

uint64_t sub_25B20C7D8()
{
  return sub_25B20ACD4(&OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency____lazy_storage___devicesChanged);
}

uint64_t sub_25B20C80C()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*v0 + OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock) + 16);
  os_unfair_lock_lock(v1);
  sub_25B20CEC8(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

void sub_25B20C88C()
{
}

void sub_25B20C8B0(uint64_t a1, uint64_t a2)
{
}

void sub_25B20C8D4(uint64_t *a1@<X8>)
{
  uint64_t v2 = IDSCopyLocalDeviceUniqueID();
  if (v2)
  {
    long long v3 = (void *)v2;
    uint64_t v4 = sub_25B2905C0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  *a1 = v4;
  a1[1] = v6;
}

uint64_t sub_25B20CA3C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_localDeviceID);
  uint64_t v3 = v2[1];
  *a1 = *v2;
  a1[1] = v3;
  return swift_bridgeObjectRetain();
}

double sub_25B20CA6C@<D0>(_OWORD *a1@<X8>)
{
  return sub_25B1E40F8(*(void (**)(long long *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_25B20CA88()
{
  return sub_25B20BF38(*(unsigned char **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_25B20CAAC()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_25B20CAF4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25B20CB34()
{
  return sub_25B20C228(v0[2], v0[3], v0[4]);
}

void sub_25B20CB40(void *a1@<X8>)
{
}

uint64_t sub_25B20CB58()
{
  return sub_25B20CE1C();
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25B20CBB4@<X0>(void *a1@<X8>)
{
  return sub_25B20B27C(*(unsigned char **)(v1 + 16), a1);
}

uint64_t sub_25B20CBD0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B20CC08()
{
  return sub_25B20B5A8(*(void *)(v0 + 16));
}

uint64_t sub_25B20CC10(uint64_t a1)
{
  if (qword_26A4D9F00 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x270FA5388](a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9E80);
  uint64_t v1 = sub_25B290900();
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = v3 + 4;
  os_unfair_lock_lock(v3 + 4);
  sub_25B10DDCC(v5);
  os_unfair_lock_unlock(v4);
  swift_bridgeObjectRelease();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99F8);
  sub_25B116394((unint64_t *)&unk_26A4D91A8, &qword_26A4D99F8);
  sub_25B290230();
  return swift_release();
}

void sub_25B20CDE8(void *a1@<X8>)
{
  sub_25B198400(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *__return_ptr))(v1 + 32));
  if (!v2)
  {
    *a1 = v4;
    a1[1] = v5;
  }
}

uint64_t sub_25B20CE1C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_localDeviceID);
  *uint64_t v3 = v0[3];
  v3[1] = v2;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_fetchingLocalDeviceID) = 0;
  return result;
}

uint64_t sub_25B20CE74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_25B20CEC8@<D0>(_OWORD *a1@<X8>)
{
  return sub_25B20CA6C(a1);
}

uint64_t sub_25B20CEEC(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F280);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  sub_25B187628(a1, (uint64_t)&v15[-v6], &qword_26B33F280);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F1E8);
  if (!swift_dynamicCast())
  {
    uint64_t v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_25B116DE0((uint64_t)v17, &qword_26B33F1F0);
    v17[0] = xmmword_25B296DE0;
    *(void *)((char *)&v16 + 7) = 0;
    *(void *)&long long v16 = 0;
    sub_25B187628(a1, (uint64_t)v5, &qword_26B33F280);
    uint64_t v7 = sub_25B226C64(&v19, &v16, 0);
    uint64_t v8 = v19;
    if (v7)
    {
      if (v7 <= 0)
      {
        sub_25B28FEE0();
        goto LABEL_6;
      }
    }
    else
    {
      unint64_t v10 = *((void *)&v19 + 1);
      *(void *)((char *)&v19 + 7) = 0;
      *(void *)&long long v19 = 0;
      if (!v20 || (uint64_t v11 = *(void *)(v8 + 16), v10 == v11))
      {
LABEL_6:
        swift_bridgeObjectRelease();
        sub_25B116DE0(a1, &qword_26B33F280);
        return *(void *)&v17[0];
      }
      if ((v10 & 0x8000000000000000) != 0) {
LABEL_26:
      }
        __break(1u);
      if (v10 < *(void *)(v8 + 16))
      {
        LOBYTE(v12) = 0;
        uint64_t v13 = v20 - 1;
        uint64_t v14 = v11 - 1;
        do
        {
          *((unsigned char *)&v19 + v12) = *(unsigned char *)(v8 + v10 + 32);
          __int16 v12 = v12 + 1;
          if ((v12 & 0x100) != 0) {
            goto LABEL_24;
          }
          if (v12 == 14)
          {
            *(void *)&long long v16 = v19;
            DWORD2(v16) = DWORD2(v19);
            WORD6(v16) = WORD6(v19);
            sub_25B28FEF0();
            if (!v13 || v14 == v10) {
              goto LABEL_6;
            }
            LOBYTE(v12) = 0;
          }
          else if (v14 == v10 || !v13)
          {
            *(void *)&long long v16 = v19;
            DWORD2(v16) = DWORD2(v19);
            WORD6(v16) = WORD6(v19);
            sub_25B28FEF0();
            goto LABEL_6;
          }
          ++v10;
          --v13;
        }
        while (v10 < *(void *)(v8 + 16));
      }
      __break(1u);
LABEL_24:
      __break(1u);
    }
    __break(1u);
    goto LABEL_26;
  }
  sub_25B180BD4(v17, (uint64_t)&v19);
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  sub_25B28FD80();
  sub_25B116DE0(a1, &qword_26B33F280);
  v17[0] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  return *(void *)&v17[0];
}

unint64_t sub_25B20D224(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9C40);
  uint64_t v6 = sub_25B290C00();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_25B187628(v12, (uint64_t)v5, &qword_26A4D91B8);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_25B18A634(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v19 = (uint64_t *)(v7[6] + 16 * result);
    uint64_t *v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for ZoneVersion();
    unint64_t result = sub_25B22A7CC(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    void v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25B20D420(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B33F498);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB230);
  uint64_t v6 = sub_25B290C00();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_25B187628(v12, (uint64_t)v5, (uint64_t *)&unk_26B33F498);
    unint64_t result = sub_25B18A804((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_25B290BA0();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = (unint64_t)sub_25B1979E4(v9, (_OWORD *)(v7[7] + 32 * v16));
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25B20D620(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB250);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA828);
  uint64_t v6 = sub_25B290C00();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_25B187628(v12, (uint64_t)v5, &qword_26A4DB250);
    unint64_t result = sub_25B18A93C((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_25B290080();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25B20D814(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB258);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA820);
  uint64_t v6 = sub_25B290C00();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v27 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v9 = v6 + 64;
  uint64_t v10 = *(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v11 = a1 + ((v10 + 32) & ~v10);
  uint64_t v26 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_25B187628(v11, (uint64_t)v5, &qword_26A4DB258);
    uint64_t v12 = *v5;
    uint64_t v13 = v5[1];
    uint64_t v15 = v5[2];
    uint64_t v14 = v5[3];
    unint64_t result = sub_25B18A768(*v5, v13, v15, v14);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 32 * result);
    uint64_t *v19 = v12;
    v19[1] = v13;
    _OWORD v19[2] = v15;
    v19[3] = v14;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_25B290080();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v27, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    void v7[2] = v24;
    v11 += v26;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25B20DA2C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB240);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9C00);
  uint64_t v6 = sub_25B290C00();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v27 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v9 = v6 + 64;
  uint64_t v10 = *(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v11 = a1 + ((v10 + 32) & ~v10);
  uint64_t v26 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_25B187628(v11, (uint64_t)v5, (uint64_t *)&unk_26A4DB240);
    uint64_t v12 = *v5;
    uint64_t v13 = v5[1];
    uint64_t v15 = v5[2];
    uint64_t v14 = v5[3];
    unint64_t result = sub_25B18A768(*v5, v13, v15, v14);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 32 * result);
    uint64_t *v19 = v12;
    v19[1] = v13;
    _OWORD v19[2] = v15;
    v19[3] = v14;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for ZoneVersion();
    unint64_t result = sub_25B22A7CC(v27, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    void v7[2] = v24;
    v11 += v26;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25B20DC40(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB260);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA830);
  uint64_t v6 = sub_25B290C00();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_25B187628(v12, (uint64_t)v5, &qword_26A4DB260);
    unint64_t result = sub_25B18A8D0(v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for Record.ID(0);
    sub_25B22A7CC((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, type metadata accessor for Record.ID);
    uint64_t v19 = v7[7];
    uint64_t v20 = sub_25B290080();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, v9, v20);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    void v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25B20DE70(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9C48);
  uint64_t v2 = sub_25B290C00();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_25B187628(v6, (uint64_t)&v15, &qword_26A4D9AA0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_25B18A634(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_25B1979E4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_25B20DFA8(uint64_t a1)
{
  sub_25B180E18();
  uint64_t result = sub_25B290830();
  int64_t v3 = 0;
  uint64_t v20 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    ++v3;
    if (!v17)
    {
      int64_t v3 = v16 + 1;
      if (v16 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v17 = *(void *)(v4 + 8 * v3);
      if (!v17)
      {
        int64_t v3 = v16 + 2;
        if (v16 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v17 = *(void *)(v4 + 8 * v3);
        if (!v17)
        {
          int64_t v3 = v16 + 3;
          if (v16 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v17 = *(void *)(v4 + 8 * v3);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v10 = __clz(__rbit64(v17)) + (v3 << 6);
LABEL_5:
    unint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 32 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    uint64_t v14 = v11[2];
    uint64_t v15 = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B219270(&v19, v12, v13, v14, v15);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v8)
  {
LABEL_23:
    swift_release();
    return v20;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
    int64_t v3 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v3);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25B20E16C(uint64_t a1)
{
  sub_25B229D78();
  uint64_t result = sub_25B290830();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    unint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_25B219598(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25B20E308(uint64_t a1, uint64_t a2)
{
  int64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v6 - 8);
  int64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PairingRelationship();
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_25B116DE0(a1, &qword_26A4D9610);
    sub_25B21D234(a2, (uint64_t (*)(void))type metadata accessor for PairingRelationship, (uint64_t (*)(void))type metadata accessor for PairingRelationship, (uint64_t (*)(void))type metadata accessor for PairingRelationship, (void (*)(void))sub_25B193954, (uint64_t)v8);
    uint64_t v13 = sub_25B290080();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_25B116DE0((uint64_t)v8, &qword_26A4D9610);
  }
  else
  {
    sub_25B22A7CC(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *int64_t v3 = 0x8000000000000000;
    sub_25B22084C((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *int64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_25B290080();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_25B20E578(uint64_t a1, void *a2)
{
  int64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v6 - 8);
  int64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_25B116DE0(a1, &qword_26B33F200);
    sub_25B21CEA0(a2, (uint64_t)v8);
    sub_25B22A76C((uint64_t)a2, type metadata accessor for Record.ID);
    return sub_25B116DE0((uint64_t)v8, &qword_26B33F200);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *int64_t v3 = 0x8000000000000000;
    sub_25B220C14((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *int64_t v3 = v16;
    swift_bridgeObjectRelease();
    return sub_25B22A76C((uint64_t)a2, type metadata accessor for Record.ID);
  }
}

uint64_t sub_25B20E76C(uint64_t a1, uint64_t a2)
{
  int64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB280);
  MEMORY[0x270FA5388](v6 - 8);
  int64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Replicator.Session(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_25B116DE0(a1, &qword_26A4DB280);
    sub_25B21D234(a2, type metadata accessor for Replicator.Session, type metadata accessor for Replicator.Session, type metadata accessor for Replicator.Session, (void (*)(void))sub_25B194480, (uint64_t)v8);
    uint64_t v13 = sub_25B290080();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_25B116DE0((uint64_t)v8, &qword_26A4DB280);
  }
  else
  {
    sub_25B22A7CC(a1, (uint64_t)v11, type metadata accessor for Replicator.Session);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *int64_t v3 = 0x8000000000000000;
    sub_25B220FB0((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *int64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_25B290080();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_25B20E9DC(uint64_t a1, uint64_t a2)
{
  int64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB1B0);
  MEMORY[0x270FA5388](v6 - 8);
  int64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NetworkBrowser.Monitor();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_25B116DE0(a1, (uint64_t *)&unk_26A4DB1B0);
    sub_25B21D234(a2, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, (void (*)(void))sub_25B194DF8, (uint64_t)v8);
    uint64_t v13 = sub_25B290080();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_25B116DE0((uint64_t)v8, (uint64_t *)&unk_26A4DB1B0);
  }
  else
  {
    sub_25B22A7CC(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *int64_t v3 = 0x8000000000000000;
    sub_25B2214A4((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *int64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_25B290080();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_25B20EC4C(uint64_t a1, uint64_t a2)
{
  int64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB1C0);
  MEMORY[0x270FA5388](v6 - 8);
  int64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_25B116DE0(a1, &qword_26A4DB1C0);
    unint64_t v13 = sub_25B18AA98(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *int64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_25B194E40();
        uint64_t v17 = v21;
      }
      sub_25B22A7CC(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
      sub_25B21F620(v15, v17);
      *int64_t v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_25B116DE0((uint64_t)v8, &qword_26A4DB1C0);
  }
  else
  {
    sub_25B22A7CC(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *int64_t v3 = 0x8000000000000000;
    sub_25B2216A0((uint64_t)v12, a2, v18);
    *int64_t v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_25B20EEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB000);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_25B116DE0(a1, &qword_26A4DB000);
    sub_25B21D420(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_25B116DE0((uint64_t)v10, &qword_26A4DB000);
  }
  else
  {
    sub_25B22A7CC(a1, (uint64_t)v13, type metadata accessor for NetworkMessenger.ExpiringConnection);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_25B221AB0((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_25B20F07C(uint64_t a1, char a2)
{
  int64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB088);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_25B116DE0(a1, &qword_26A4DB088);
    unint64_t v13 = sub_25B18AB70(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *int64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_25B195D40();
        uint64_t v17 = v21;
      }
      sub_25B22A7CC(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      sub_25B21FCF8(v15, v17);
      *int64_t v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_25B116DE0((uint64_t)v8, &qword_26A4DB088);
  }
  else
  {
    sub_25B22A7CC(a1, (uint64_t)v12, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *int64_t v3 = 0x8000000000000000;
    sub_25B221F8C((uint64_t)v12, a2, v18);
    *int64_t v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_25B20F2DC(uint64_t a1, uint64_t *a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_25B180BD4((long long *)a1, (uint64_t)v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_25B222218(v7, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v6;
    swift_bridgeObjectRelease();
    return sub_25B180DAC((uint64_t)a2);
  }
  else
  {
    sub_25B116DE0(a1, &qword_26A4DB228);
    sub_25B21D6D0(a2, (uint64_t)v7);
    sub_25B180DAC((uint64_t)a2);
    return sub_25B116DE0((uint64_t)v7, &qword_26A4DB228);
  }
}

uint64_t MetadataStoring.pairingRelationship(relationshipID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 32))(a2);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_25B18A93C(a1), (v8 & 1) != 0))
  {
    unint64_t v9 = v7;
    uint64_t v10 = *(void *)(v6 + 56);
    uint64_t v11 = type metadata accessor for PairingRelationship();
    uint64_t v12 = *(void *)(v11 - 8);
    sub_25B22A704(v10 + *(void *)(v12 + 72) * v9, a4, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a4, 0, 1, v11);
  }
  else
  {
    uint64_t v13 = type metadata accessor for PairingRelationship();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a4, 1, 1, v13);
  }
  return swift_bridgeObjectRelease();
}

uint64_t MetadataStoring.pairingRelationship(remoteDeviceID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EF0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)(a4 + 8) + 32))(a3);
  swift_bridgeObjectRetain();
  sub_25B2163DC(v13, a1, a2, (uint64_t)v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v12, 1, v14) == 1)
  {
    sub_25B116DE0((uint64_t)v12, &qword_26A4D9EF0);
    uint64_t v15 = type metadata accessor for PairingRelationship();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a5, 1, 1, v15);
  }
  else
  {
    sub_25B22A7CC((uint64_t)&v12[*(int *)(v14 + 48)], a5, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v17 = type metadata accessor for PairingRelationship();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a5, 0, 1, v17);
    uint64_t v18 = sub_25B290080();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v12, v18);
  }
}

uint64_t MetadataStoring.metadata(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 24))(a2);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_25B18A8D0(a1), (v8 & 1) != 0))
  {
    unint64_t v9 = v7;
    uint64_t v10 = *(void *)(v6 + 56);
    uint64_t v11 = type metadata accessor for RecordMetadata();
    uint64_t v12 = *(void *)(v11 - 8);
    sub_25B22A704(v10 + *(void *)(v12 + 72) * v9, a4, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a4, 0, 1, v11);
  }
  else
  {
    uint64_t v13 = type metadata accessor for RecordMetadata();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a4, 1, 1, v13);
  }
  return swift_bridgeObjectRelease();
}

uint64_t MetadataStoring.metadata(for:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 24))(a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_25B228750(v7, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t MetadataStoring.zones()(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v4 = MEMORY[0x270FA5388](v43);
  uint64_t v6 = (uint64_t *)((char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  unint64_t v9 = (char *)&v39 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v42 = (uint64_t)&v39 - v10;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 24))(a1);
  uint64_t v47 = MEMORY[0x263F8EE88];
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v40 = v11 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v44 = v11;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v45)
  {
    if (v15)
    {
      unint64_t v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      int64_t v45 = i;
      unint64_t v19 = v18 | (i << 6);
      goto LABEL_5;
    }
    int64_t v34 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v34 >= v41) {
      goto LABEL_23;
    }
    unint64_t v35 = *(void *)(v40 + 8 * v34);
    int64_t v36 = i + 1;
    if (!v35)
    {
      int64_t v36 = i + 2;
      if (i + 2 >= v41) {
        goto LABEL_23;
      }
      unint64_t v35 = *(void *)(v40 + 8 * v36);
      if (!v35)
      {
        int64_t v36 = i + 3;
        if (i + 3 >= v41) {
          goto LABEL_23;
        }
        unint64_t v35 = *(void *)(v40 + 8 * v36);
        if (!v35)
        {
          int64_t v36 = i + 4;
          if (i + 4 >= v41) {
            goto LABEL_23;
          }
          unint64_t v35 = *(void *)(v40 + 8 * v36);
          if (!v35) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v15 = (v35 - 1) & v35;
    int64_t v45 = v36;
    unint64_t v19 = __clz(__rbit64(v35)) + (v36 << 6);
LABEL_5:
    uint64_t v20 = v44;
    uint64_t v21 = *(void *)(v44 + 48);
    uint64_t v22 = type metadata accessor for Record.ID(0);
    uint64_t v23 = v42;
    sub_25B22A704(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v42, type metadata accessor for Record.ID);
    uint64_t v24 = *(void *)(v20 + 56);
    uint64_t v25 = v24 + *(void *)(*(void *)(type metadata accessor for RecordMetadata() - 8) + 72) * v19;
    uint64_t v26 = v43;
    sub_25B22A704(v25, v23 + *(int *)(v43 + 48), (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    sub_25B187574(v23, (uint64_t)v9, &qword_26A4D9860);
    uint64_t v27 = *(int *)(v26 + 48);
    uint64_t v28 = (uint64_t)v6 + v27;
    uint64_t v29 = (uint64_t)&v9[v27];
    sub_25B22A704((uint64_t)v9, (uint64_t)v6, type metadata accessor for Record.ID);
    sub_25B22A704(v29, v28, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v30 = v6[2];
    uint64_t v31 = v6[3];
    uint64_t v32 = v6[4];
    uint64_t v33 = v6[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B22A76C((uint64_t)v6, type metadata accessor for Record.ID);
    sub_25B219270(&v46, v30, v31, v32, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B22A76C(v28, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t result = sub_25B116DE0((uint64_t)v9, &qword_26A4D9860);
  }
  uint64_t v37 = i + 5;
  if (i + 5 >= v41)
  {
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_25B2257B4(v47);
    swift_bridgeObjectRelease();
    return (uint64_t)v38;
  }
  unint64_t v35 = *(void *)(v40 + 8 * v37);
  if (v35)
  {
    int64_t v36 = i + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v36 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v36 >= v41) {
      goto LABEL_23;
    }
    unint64_t v35 = *(void *)(v40 + 8 * v36);
    ++v37;
    if (v35) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25B20FD08(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Record.ID(0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x263F8EE78];
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void *)(v24 + 72);
      sub_25B22A704(a3 + v16 + v13 * v14, (uint64_t)v12, type metadata accessor for Record.ID);
      char v17 = a1(v12);
      if (v3)
      {
        sub_25B22A76C((uint64_t)v12, type metadata accessor for Record.ID);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if (v17)
      {
        sub_25B22A7CC((uint64_t)v12, v23, type metadata accessor for Record.ID);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_25B2240E0(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_25B2240E0(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t result = sub_25B22A7CC(v23, v15 + v16 + v19 * v13, type metadata accessor for Record.ID);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_25B22A76C((uint64_t)v12, type metadata accessor for Record.ID);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_25B20FFA0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Replicator.SyncItem(0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x263F8EE78];
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void *)(v24 + 72);
      sub_25B22A704(a3 + v16 + v13 * v14, (uint64_t)v12, type metadata accessor for Replicator.SyncItem);
      char v17 = a1(v12);
      if (v3)
      {
        sub_25B22A76C((uint64_t)v12, type metadata accessor for Replicator.SyncItem);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if (v17)
      {
        sub_25B22A7CC((uint64_t)v12, v23, type metadata accessor for Replicator.SyncItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_25B2241A8(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_25B2241A8(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t result = sub_25B22A7CC(v23, v15 + v16 + v19 * v13, type metadata accessor for Replicator.SyncItem);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_25B22A76C((uint64_t)v12, type metadata accessor for Replicator.SyncItem);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_25B210238(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_25B210280(a1, a2, a3, &qword_26A4D91F8, MEMORY[0x263F07490], (void (*)(BOOL, uint64_t, uint64_t))sub_25B224274);
}

uint64_t sub_25B210280(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), void (*a6)(BOOL, uint64_t, uint64_t))
{
  uint64_t v32 = a6;
  uint64_t v8 = a4;
  uint64_t v9 = v6;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v44 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a5(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v37 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v15);
  uint64_t v46 = (char *)v30 - v18;
  uint64_t v47 = MEMORY[0x263F8EE78];
  uint64_t v38 = *(void *)(a3 + 16);
  if (v38)
  {
    unint64_t v19 = 0;
    uint64_t v39 = v14 + 48;
    int64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v14 + 32);
    uint64_t v33 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v40 = v14 + 56;
    uint64_t v41 = v14 + 16;
    v30[1] = (v14 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v31 = v8;
    uint64_t v20 = (uint64_t)v44;
    uint64_t v36 = a3;
    while (v19 < *(void *)(a3 + 16))
    {
      unint64_t v21 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v22 = *(void *)(v14 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))(v20, a3 + v21 + v22 * v19, v13);
      unint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v35(v20, 0, 1, v13);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v20, 1, v13) == 1)
      {
        uint64_t v8 = v31;
        goto LABEL_18;
      }
      uint64_t v23 = v46;
      uint64_t v24 = *v45;
      (*v45)(v46, v20, v13);
      char v25 = v42(v23);
      if (v9)
      {
        (*v33)(v46, v13);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if (v25)
      {
        v24(v37, (uint64_t)v46, v13);
        uint64_t v26 = v47;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v32(0, *(void *)(v26 + 16) + 1, 1);
          uint64_t v26 = v47;
        }
        unint64_t v29 = *(void *)(v26 + 16);
        unint64_t v28 = *(void *)(v26 + 24);
        if (v29 >= v28 >> 1)
        {
          v32(v28 > 1, v29 + 1, 1);
          uint64_t v26 = v47;
        }
        *(void *)(v26 + 16) = v29 + 1;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(v26 + v21 + v29 * v22, v37, v13);
        uint64_t v47 = v26;
        uint64_t v9 = v34;
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v33)(v46, v13);
      }
      ++v19;
      a3 = v36;
      uint64_t v20 = (uint64_t)v44;
      if (v38 == v19)
      {
        uint64_t v8 = v31;
        v35((uint64_t)v44, 1, 1, v13);
        goto LABEL_18;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v20 = (uint64_t)v44;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v44, 1, 1, v13);
LABEL_18:
    swift_bridgeObjectRelease();
    sub_25B116DE0(v20, v8);
    return v47;
  }
  return result;
}

uint64_t sub_25B21065C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!*(void *)(a5 + 16)) {
    return 0;
  }
  sub_25B291210();
  sub_25B290630();
  sub_25B290630();
  uint64_t v10 = sub_25B291260();
  uint64_t v11 = -1 << *(unsigned char *)(a5 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = a5 + 56;
  if (((*(void *)(a5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    return 0;
  }
  uint64_t v14 = ~v11;
  uint64_t v15 = *(void *)(a5 + 48);
  while (1)
  {
    uint64_t v16 = (void *)(v15 + 32 * v12);
    uint64_t v17 = v16[2];
    uint64_t v18 = v16[3];
    BOOL v19 = *v16 == a1 && v16[1] == a2;
    if (v19 || (sub_25B290FB0() & 1) != 0)
    {
      BOOL v20 = v17 == a3 && v18 == a4;
      if (v20 || (sub_25B290FB0() & 1) != 0) {
        break;
      }
    }
    unint64_t v12 = (v12 + 1) & v14;
    if (((*(void *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_25B2107A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_25B290080();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]),
        uint64_t v7 = sub_25B290530(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    unint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_25B22A6BC((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
      char v15 = sub_25B290580();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_25B2109B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_25B291210();
    sub_25B290630();
    uint64_t v6 = sub_25B291260();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_25B290FB0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_25B290FB0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_25B210AEC(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  int v3 = a1;
  sub_25B291210();
  sub_25B291250();
  uint64_t v4 = sub_25B291260();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_25B210BDC(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  uint64_t v31 = a1;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v6 = MEMORY[0x270FA5388](v30);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v28 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v29 = (unint64_t)(v12 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  while (v14)
  {
    unint64_t v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v18 = v17 | (v16 << 6);
LABEL_19:
    uint64_t v22 = *(void *)(a3 + 48);
    uint64_t v23 = type metadata accessor for Record.ID(0);
    sub_25B22A704(v22 + *(void *)(*(void *)(v23 - 8) + 72) * v18, (uint64_t)v10, type metadata accessor for Record.ID);
    uint64_t v24 = *(void *)(a3 + 56);
    uint64_t v25 = type metadata accessor for RecordMetadata();
    sub_25B22A704(v24 + *(void *)(*(void *)(v25 - 8) + 72) * v18, (uint64_t)&v10[*(int *)(v30 + 48)], (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    sub_25B187574((uint64_t)v10, (uint64_t)v8, &qword_26A4D9860);
    char v26 = v31(v8);
    uint64_t result = sub_25B116DE0((uint64_t)v8, &qword_26A4D9860);
    if (v3) {
      goto LABEL_28;
    }
    if (v26)
    {
      a2 = 1;
LABEL_28:
      swift_release();
      return a2 & 1;
    }
  }
  if (__OFADD__(v16++, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v16 >= v29) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v28 + 8 * v16);
  if (v20)
  {
LABEL_18:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_19;
  }
  int64_t v21 = v16 + 1;
  if (v16 + 1 >= v29) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v28 + 8 * v21);
  if (v20) {
    goto LABEL_17;
  }
  int64_t v21 = v16 + 2;
  if (v16 + 2 >= v29) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v28 + 8 * v21);
  if (v20) {
    goto LABEL_17;
  }
  int64_t v21 = v16 + 3;
  if (v16 + 3 >= v29) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v28 + 8 * v21);
  if (v20) {
    goto LABEL_17;
  }
  int64_t v21 = v16 + 4;
  if (v16 + 4 >= v29)
  {
LABEL_27:
    a2 = 0;
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v28 + 8 * v21);
  if (v20)
  {
LABEL_17:
    int64_t v16 = v21;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v29) {
      goto LABEL_27;
    }
    unint64_t v20 = *(void *)(v28 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_18;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

BOOL sub_25B210ED4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v38 = a1;
  uint64_t v39 = sub_25B290080();
  uint64_t v6 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    unint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    uint64_t v37 = v14;
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v34 = v8;
    unint64_t v35 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v31 = v16;
    uint64_t v32 = (void (**)(char *))(v13 + 16);
    uint64_t v33 = (void (**)(char *, uint64_t))(v13 - 8);
    v29[2] = a3;
    swift_bridgeObjectRetain();
    uint64_t v36 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    v29[1] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      uint64_t v17 = v39;
      uint64_t v18 = v13;
      v37(v11, v15, v39);
      BOOL v19 = *v36;
      (*v36)(v11, 0, 1, v17);
      int v20 = (*v35)(v11, 1, v17);
      BOOL v21 = v20 != 1;
      if (v20 == 1) {
        break;
      }
      uint64_t v30 = v19;
      uint64_t v22 = v11;
      uint64_t v23 = v34;
      uint64_t v24 = v22;
      (*v32)(v34);
      char v25 = v38(v23);
      if (v4)
      {
        (*v33)(v23, v17);
        swift_bridgeObjectRelease();
        return v21;
      }
      char v26 = v25;
      (*v33)(v23, v17);
      if (v26) {
        break;
      }
      v15 += v31;
      --v12;
      uint64_t v4 = 0;
      uint64_t v13 = v18;
      uint64_t v11 = v24;
      if (!v12)
      {
        v30(v24, 1, 1, v39);
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v27(v11, 1, 1, v39);
LABEL_9:
    BOOL v21 = 0;
  }
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t MetadataStoring.mismatchedRecordIDs(for:remoteRecordVersions:zoneIDs:disabledClientIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v218 = a6;
  uint64_t v221 = (char *)a5;
  v213 = a4;
  uint64_t v192 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D93A8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v215 = (uint64_t)&v180 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = type metadata accessor for MetadataRecordPredicate();
  MEMORY[0x270FA5388](v183);
  uint64_t v191 = (uint64_t)&v180 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F280);
  MEMORY[0x270FA5388](v190);
  uint64_t v189 = (char *)&v180 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v194 = (uint64_t)&v180 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v196 = (char *)&v180 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v188 = (uint64_t)&v180 - v16;
  uint64_t v17 = type metadata accessor for UniformHasher();
  MEMORY[0x270FA5388](v17 - 8);
  v195 = (char *)&v180 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_25B290080();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v193 = (char *)&v180 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unint64_t v187 = (char *)&v180 - v24;
  MEMORY[0x270FA5388](v23);
  char v26 = (char *)&v180 - v25;
  uint64_t v199 = type metadata accessor for Record.ID(0);
  uint64_t v234 = *(void *)(v199 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v199);
  uint64_t v220 = (uint64_t)&v180 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v207 = (uint64_t)&v180 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v201 = (uint64_t)&v180 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v206 = (uint64_t)&v180 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v233 = (uint64_t)&v180 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  long long v225 = (char **)((char *)&v180 - v38);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v180 - v40;
  uint64_t v42 = MEMORY[0x270FA5388](v39);
  uint64_t v186 = (uint64_t)&v180 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v185 = (char **)((char *)&v180 - v45);
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v184 = (uint64_t *)((char *)&v180 - v47);
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v211 = (uint64_t *)((char *)&v180 - v49);
  MEMORY[0x270FA5388](v48);
  unint64_t v51 = (char **)((char *)&v180 - v50);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB170);
  uint64_t v53 = MEMORY[0x270FA5388](v52 - 8);
  uint64_t v217 = (char *)&v180 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v228 = (char *)&v180 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v59 = (char *)&v180 - v58;
  MEMORY[0x270FA5388](v57);
  uint64_t v61 = (char *)&v180 - v60;
  uint64_t v62 = swift_bridgeObjectRetain();
  uint64_t v63 = sub_25B227F10(v62);
  swift_bridgeObjectRelease();
  uint64_t v64 = *(void *)(a2 + 64);
  uint64_t v200 = a2 + 64;
  uint64_t v65 = 1 << *(unsigned char *)(a2 + 32);
  unint64_t v214 = (void *)MEMORY[0x263F8EE80];
  v237 = (void *)MEMORY[0x263F8EE80];
  if (v65 < 64) {
    uint64_t v66 = ~(-1 << v65);
  }
  else {
    uint64_t v66 = -1;
  }
  v232 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 & v64);
  unint64_t v67 = (unint64_t)(v65 + 63) >> 6;
  v229 = (void (**)(char *, char *, uint64_t))(v20 + 16);
  uint64_t v223 = (void (**)(char *, char *, uint64_t))(v20 + 32);
  uint64_t v219 = (void *)v63;
  uint64_t v235 = v63 + 56;
  v231 = (uint64_t (**)(char *, uint64_t))(v20 + 8);
  uint64_t v197 = v192 + 32;
  int v204 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v224 = v20;
  uint64_t v202 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  uint64_t v180 = (char *)(v67 - 1);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v69 = 0;
  int64_t v205 = v67;
  unint64_t v181 = v67 - 5;
  uint64_t v212 = (void *)result;
  uint64_t v182 = result + 104;
  uint64_t v226 = v19;
  uint64_t v227 = v51;
  uint64_t v209 = v26;
  v198 = v41;
  uint64_t v216 = v59;
  v208 = v61;
  unint64_t v70 = (unint64_t)v232;
  if (!v232) {
    goto LABEL_7;
  }
LABEL_5:
  v232 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((v70 - 1) & v70);
  v230 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v69;
  unint64_t v71 = __clz(__rbit64(v70)) | ((void)v69 << 6);
LABEL_6:
  unint64_t v72 = v212;
  sub_25B22A704(v212[6] + *(void *)(v234 + 72) * v71, (uint64_t)v59, type metadata accessor for Record.ID);
  uint64_t v73 = v224;
  unint64_t v74 = v72[7] + *(void *)(v224 + 72) * v71;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA728);
  (*(void (**)(char *, unint64_t, uint64_t))(v73 + 16))(&v59[*(int *)(v75 + 48)], v74, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v59, 0, 1, v75);
  unint64_t v51 = v227;
  while (1)
  {
    sub_25B187574((uint64_t)v59, (uint64_t)v61, &qword_26A4DB170);
    uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA728);
    uint64_t v80 = *(void *)(v79 - 8);
    uint64_t v81 = *(char **)(v80 + 48);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v81)(v61, 1, v79) == 1)
    {
      swift_release();
      uint64_t v127 = v191;
      sub_25B22A704(v192, v191 + *(int *)(v183 + 32), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
      *(_WORD *)uint64_t v127 = 513;
      *(unsigned char *)(v127 + 2) = 1;
      *(void *)(v127 + 8) = v219;
      uint64_t v128 = v218;
      uint64_t v129 = MetadataStoring.recordVersions(matching:)(v127, (uint64_t)v221, v218);
      size_t v130 = sub_25B22589C(v129);
      swift_bridgeObjectRelease();
      uint64_t v131 = v213;
      swift_bridgeObjectRetain();
      uint64_t v132 = sub_25B2289DC(v130, v131);
      swift_release();
      uint64_t v133 = swift_bridgeObjectRelease();
      MEMORY[0x270FA5388](v133);
      *(&v180 - 6) = v221;
      *(&v180 - 5) = (char *)v128;
      uint64_t v134 = v192;
      *(&v180 - 4) = v222;
      *(&v180 - 3) = (char *)v134;
      *(&v180 - 2) = (char *)&v237;
      swift_bridgeObjectRetain();
      uint64_t v235 = sub_25B20FD08((uint64_t (*)(char *))sub_25B228CAC, (uint64_t)(&v180 - 8), v132);
      uint64_t v135 = v226;
      swift_bridgeObjectRelease();
      uint64_t v136 = v225;
      uint64_t v137 = v237[8];
      uint64_t v219 = v237 + 8;
      uint64_t v138 = 1 << *((unsigned char *)v237 + 32);
      uint64_t v139 = -1;
      if (v138 < 64) {
        uint64_t v139 = ~(-1 << v138);
      }
      unint64_t v140 = v139 & v137;
      v232 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56);
      uint64_t v223 = (void (**)(char *, char *, uint64_t))((unint64_t)(v138 + 63) >> 6);
      uint64_t v211 = (uint64_t *)((char *)v223 - 1);
      uint64_t v227 = v237;
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v141 = 0;
      uint64_t v212 = v131 + 9;
      uint64_t v142 = v215;
      uint64_t v143 = (uint64_t)v217;
      uint64_t v144 = (uint64_t)v228;
      v230 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v81;
      unint64_t v145 = v235;
      while (1)
      {
        if (v140)
        {
          unint64_t v146 = __clz(__rbit64(v140));
          v140 &= v140 - 1;
          uint64_t v235 = v141;
          unint64_t v147 = v146 | (v141 << 6);
          goto LABEL_63;
        }
        uint64_t v150 = v141 + 1;
        if (__OFADD__(v141, 1)) {
          goto LABEL_124;
        }
        if (v150 >= (uint64_t)v223) {
          goto LABEL_75;
        }
        unint64_t v151 = v219[v150];
        if (v151) {
          goto LABEL_67;
        }
        v141 += 2;
        if (v150 + 1 >= (uint64_t)v223)
        {
          unint64_t v140 = 0;
          uint64_t v149 = 1;
          uint64_t v235 = v150;
          goto LABEL_76;
        }
        unint64_t v151 = v219[v141];
        if (v151) {
          goto LABEL_70;
        }
        if (v150 + 2 >= (uint64_t)v223)
        {
LABEL_75:
          uint64_t v235 = v141;
          unint64_t v140 = 0;
          uint64_t v149 = 1;
        }
        else
        {
          unint64_t v151 = v219[v150 + 2];
          if (v151)
          {
            v150 += 2;
            goto LABEL_67;
          }
          uint64_t v141 = v150 + 3;
          if (v150 + 3 < (uint64_t)v223)
          {
            unint64_t v151 = v219[v141];
            if (!v151)
            {
              while (1)
              {
                uint64_t v150 = v141 + 1;
                if (__OFADD__(v141, 1)) {
                  goto LABEL_126;
                }
                if (v150 >= (uint64_t)v223)
                {
                  unint64_t v140 = 0;
                  uint64_t v149 = 1;
                  uint64_t v235 = (uint64_t)v211;
                  goto LABEL_76;
                }
                unint64_t v151 = v219[v150];
                ++v141;
                if (v151) {
                  goto LABEL_67;
                }
              }
            }
LABEL_70:
            uint64_t v150 = v141;
LABEL_67:
            unint64_t v140 = (v151 - 1) & v151;
            unint64_t v147 = __clz(__rbit64(v151)) + (v150 << 6);
            uint64_t v235 = v150;
LABEL_63:
            unint64_t v148 = v227;
            sub_25B22A704(v227[6] + *(void *)(v234 + 72) * v147, v143, type metadata accessor for Record.ID);
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v224 + 16))(v143 + *(int *)(v79 + 48), v148[7] + *(void *)(v224 + 72) * v147, v135);
            uint64_t v149 = 0;
            uint64_t v144 = (uint64_t)v228;
            goto LABEL_76;
          }
          unint64_t v140 = 0;
          uint64_t v149 = 1;
          uint64_t v235 = v150 + 2;
        }
LABEL_76:
        (*v232)(v143, v149, 1, v79);
        sub_25B187574(v143, v144, &qword_26A4DB170);
        if (v230(v144, 1, v79) == 1)
        {
          swift_release();
          sub_25B22A76C(v191, (uint64_t (*)(void))type metadata accessor for MetadataRecordPredicate);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v145;
        }
        sub_25B22A7CC(v144, (uint64_t)v136, type metadata accessor for Record.ID);
        uint64_t v152 = (*(uint64_t (**)(char *))(*(void *)(v218 + 8) + 24))(v221);
        if (*(void *)(v152 + 16))
        {
          unint64_t v153 = sub_25B18A8D0(v136);
          if (v154)
          {
            unint64_t v155 = v153;
            uint64_t v156 = *(void *)(v152 + 56);
            uint64_t v157 = type metadata accessor for RecordMetadata();
            unint64_t v158 = v145;
            uint64_t v159 = *(void *)(v157 - 8);
            sub_25B22A704(v156 + *(void *)(v159 + 72) * v155, v215, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v159 + 56))(v215, 0, 1, v157);
            unint64_t v145 = v158;
            uint64_t v142 = v215;
          }
          else
          {
            uint64_t v157 = type metadata accessor for RecordMetadata();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 56))(v142, 1, 1, v157);
          }
          uint64_t v136 = v225;
        }
        else
        {
          uint64_t v157 = type metadata accessor for RecordMetadata();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 56))(v142, 1, 1, v157);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for RecordMetadata();
        int v160 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 48))(v142, 1, v157);
        sub_25B116DE0(v142, &qword_26A4D93A8);
        sub_25B22A704((uint64_t)v136, v233, type metadata accessor for Record.ID);
        if (v160 != 1)
        {
          uint64_t v161 = (char *)v213[2];
          if (!v161) {
            goto LABEL_59;
          }
          uint64_t v162 = *(void *)(v233 + 32);
          uint64_t v163 = *(void *)(v233 + 40);
          if ((v213[4] != v162 || v213[5] != v163) && (sub_25B290FB0() & 1) == 0)
          {
            if (v161 == (char *)1) {
              goto LABEL_59;
            }
            if (v213[6] != v162 || v213[7] != v163)
            {
              uint64_t result = sub_25B290FB0();
              if ((result & 1) == 0)
              {
                if (v161 != (char *)2)
                {
                  uint64_t v177 = v212;
                  uint64_t v178 = 2;
                  while (!__OFADD__(v178, 1))
                  {
                    if (*(v177 - 1) == v162 && *v177 == v163) {
                      goto LABEL_88;
                    }
                    uint64_t v216 = (char *)(v178 + 1);
                    uint64_t result = sub_25B290FB0();
                    if (result) {
                      goto LABEL_88;
                    }
                    v177 += 2;
                    ++v178;
                    if (v216 == v161) {
                      goto LABEL_59;
                    }
                  }
                  goto LABEL_125;
                }
LABEL_59:
                sub_25B22A76C(v233, type metadata accessor for Record.ID);
                uint64_t v135 = v226;
                uint64_t v136 = v225;
                goto LABEL_60;
              }
            }
          }
        }
LABEL_88:
        sub_25B22A76C(v233, type metadata accessor for Record.ID);
        uint64_t v164 = v214;
        uint64_t v136 = v225;
        if (v214[2] && (unint64_t v165 = sub_25B18A8D0(v225), (v166 & 1) != 0))
        {
          uint64_t v167 = *(void *)(v234 + 72);
          uint64_t v168 = v201;
          sub_25B22A704(v164[7] + v167 * v165, v201, type metadata accessor for Record.ID);
          uint64_t v169 = v168;
          uint64_t v170 = v206;
          sub_25B22A7CC(v169, v206, type metadata accessor for Record.ID);
          sub_25B22A704(v170, v207, type metadata accessor for Record.ID);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v135 = v226;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            unint64_t v145 = sub_25B2183A4(0, *(void *)(v145 + 16) + 1, 1, v145, &qword_26A4D9D58, type metadata accessor for Record.ID, type metadata accessor for Record.ID);
          }
          unint64_t v173 = *(void *)(v145 + 16);
          unint64_t v172 = *(void *)(v145 + 24);
          if (v173 >= v172 >> 1) {
            unint64_t v145 = sub_25B2183A4(v172 > 1, v173 + 1, 1, v145, &qword_26A4D9D58, type metadata accessor for Record.ID, type metadata accessor for Record.ID);
          }
          *(void *)(v145 + 16) = v173 + 1;
          sub_25B22A7CC(v207, v145+ ((*(unsigned __int8 *)(v234 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v234 + 80))+ v173 * v167, type metadata accessor for Record.ID);
          sub_25B22A76C(v206, type metadata accessor for Record.ID);
        }
        else
        {
          sub_25B22A704((uint64_t)v136, v220, type metadata accessor for Record.ID);
          char v174 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v135 = v226;
          if ((v174 & 1) == 0) {
            unint64_t v145 = sub_25B2183A4(0, *(void *)(v145 + 16) + 1, 1, v145, &qword_26A4D9D58, type metadata accessor for Record.ID, type metadata accessor for Record.ID);
          }
          unint64_t v176 = *(void *)(v145 + 16);
          unint64_t v175 = *(void *)(v145 + 24);
          if (v176 >= v175 >> 1) {
            unint64_t v145 = sub_25B2183A4(v175 > 1, v176 + 1, 1, v145, &qword_26A4D9D58, type metadata accessor for Record.ID, type metadata accessor for Record.ID);
          }
          *(void *)(v145 + 16) = v176 + 1;
          sub_25B22A7CC(v220, v145+ ((*(unsigned __int8 *)(v234 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v234 + 80))+ *(void *)(v234 + 72) * v176, type metadata accessor for Record.ID);
        }
LABEL_60:
        sub_25B22A76C((uint64_t)v136, type metadata accessor for Record.ID);
        uint64_t v144 = (uint64_t)v228;
        uint64_t result = (*v231)(&v228[*(int *)(v79 + 48)], v135);
        uint64_t v143 = (uint64_t)v217;
        uint64_t v141 = v235;
      }
    }
    uint64_t v82 = &v61[*(int *)(v79 + 48)];
    sub_25B22A7CC((uint64_t)v61, (uint64_t)v51, type metadata accessor for Record.ID);
    uint64_t v83 = *v223;
    (*v223)(v26, v82, v19);
    unint64_t v84 = v219;
    if (!v219[2]) {
      goto LABEL_31;
    }
    v210 = (void (*)(char *, uint64_t, uint64_t))v83;
    uint64_t v85 = v51[2];
    uint64_t v86 = v51[3];
    uint64_t v87 = v51[4];
    uint64_t v88 = v51[5];
    sub_25B291210();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B290630();
    sub_25B290630();
    uint64_t v89 = sub_25B291260();
    uint64_t v90 = -1 << *((unsigned char *)v84 + 32);
    unint64_t v91 = v89 & ~v90;
    if (((*(void *)(v235 + ((v91 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v91) & 1) == 0)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v226;
      unint64_t v51 = v227;
      char v26 = v209;
      uint64_t v61 = v208;
LABEL_31:
      (*v231)(v26, v19);
      uint64_t result = sub_25B22A76C((uint64_t)v51, type metadata accessor for Record.ID);
      uint64_t v59 = v216;
      goto LABEL_42;
    }
    uint64_t v92 = ~v90;
    uint64_t v93 = v84[6];
    while (1)
    {
      int64_t v94 = (void *)(v93 + 32 * v91);
      uint64_t v95 = v94[2];
      uint64_t v96 = v94[3];
      BOOL v97 = *v94 == v85 && v94[1] == v86;
      if (v97 || (sub_25B290FB0() & 1) != 0)
      {
        BOOL v98 = v95 == v87 && v96 == v88;
        if (v98 || (sub_25B290FB0() & 1) != 0) {
          break;
        }
      }
      unint64_t v91 = (v91 + 1) & v92;
      if (((*(void *)(v235 + ((v91 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v91) & 1) == 0) {
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = v226;
    uint64_t v99 = *v227;
    uint64_t v100 = v227[1];
    uint64_t v101 = v211;
    uint64_t v102 = (char *)v211 + *(int *)(v199 + 24);
    int v203 = *v204;
    v203(v102, 1, 1, v226);
    *uint64_t v101 = v99;
    v101[1] = v100;
    _OWORD v101[2] = v85;
    v101[3] = v86;
    v101[4] = v87;
    v101[5] = v88;
    if (*(void *)(v197 + *(int *)(type metadata accessor for PairingRelationship() + 20)) > 0xDuLL)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v26 = v209;
      uint64_t v106 = v198;
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v103 = v195;
      uint64_t v104 = _s16ReplicatorEngine13UniformHasherVACycfC_0();
      uint64_t v105 = (void *)MEMORY[0x26115FD30](v104);
      sub_25B217F04(v99, v100);
      uint64_t v106 = v198;
      uint64_t v107 = (uint64_t)v189;
      uint64_t v108 = (uint64_t)v103;
      sub_25B290480();
      *(void *)(v107 + *(int *)(v190 + 36)) = 16;
      uint64_t v109 = sub_25B20CEEC(v107);
      uint64_t v110 = v188;
      sub_25B10DDE4(v109, v111, v188);
      uint64_t result = (*v202)(v110, 1, v19);
      if (result == 1) {
        goto LABEL_127;
      }
      os_log_type_t v112 = v187;
      v210(v187, v110, v19);
      sub_25B22A76C(v108, (uint64_t (*)(void))type metadata accessor for UniformHasher);
      swift_bridgeObjectRelease();
      uint64_t v113 = sub_25B290020();
      uint64_t v115 = v114;
      (*v231)(v112, v19);
      uint64_t v116 = (uint64_t)v211;
      id v117 = v184;
      sub_25B22A704((uint64_t)v211, (uint64_t)v184, type metadata accessor for Record.ID);
      swift_bridgeObjectRelease();
      *id v117 = v113;
      v117[1] = v115;
      uint64_t v118 = v185;
      sub_25B22A704((uint64_t)v117, (uint64_t)v185, type metadata accessor for Record.ID);
      uint64_t v119 = v186;
      sub_25B22A704(v116, v186, type metadata accessor for Record.ID);
      os_log_type_t v120 = v214;
      char v121 = swift_isUniquelyReferenced_nonNull_native();
      v236 = v120;
      sub_25B220DF0(v119, v118, v121);
      unint64_t v214 = v236;
      swift_bridgeObjectRelease();
      sub_25B22A76C((uint64_t)v118, type metadata accessor for Record.ID);
      sub_25B22A76C(v116, type metadata accessor for Record.ID);
      sub_25B22A7CC((uint64_t)v117, v116, type metadata accessor for Record.ID);
      char v26 = v209;
    }
    sub_25B22A704((uint64_t)v211, (uint64_t)v106, type metadata accessor for Record.ID);
    uint64_t v122 = (uint64_t)v196;
    (*v229)(v196, v26, v19);
    v203((char *)v122, 0, 1, v19);
    int v123 = (*v202)(v122, 1, v19);
    uint64_t v59 = v216;
    uint64_t v61 = v208;
    if (v123 == 1)
    {
      sub_25B116DE0(v122, &qword_26B33F200);
      uint64_t v124 = v194;
      sub_25B21CEA0(v106, v194);
      sub_25B22A76C((uint64_t)v106, type metadata accessor for Record.ID);
      sub_25B116DE0(v124, &qword_26B33F200);
    }
    else
    {
      uint64_t v125 = (uint64_t)v193;
      v210(v193, v122, v19);
      char v126 = swift_isUniquelyReferenced_nonNull_native();
      v236 = v237;
      v237 = (void *)0x8000000000000000;
      sub_25B220C14(v125, v106, v126);
      v237 = v236;
      swift_bridgeObjectRelease();
      sub_25B22A76C((uint64_t)v106, type metadata accessor for Record.ID);
    }
    sub_25B22A76C((uint64_t)v211, type metadata accessor for Record.ID);
    (*v231)(v26, v19);
    unint64_t v51 = v227;
    uint64_t result = sub_25B22A76C((uint64_t)v227, type metadata accessor for Record.ID);
LABEL_42:
    uint64_t v69 = (char *)v230;
    unint64_t v70 = (unint64_t)v232;
    if (v232) {
      goto LABEL_5;
    }
LABEL_7:
    int64_t v76 = (int64_t)(v69 + 1);
    if (__OFADD__(v69, 1)) {
      break;
    }
    if (v76 >= v205)
    {
      v230 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v69;
      goto LABEL_12;
    }
    unint64_t v77 = *(void *)(v200 + 8 * v76);
    if (v77) {
      goto LABEL_10;
    }
    if ((uint64_t)(v69 + 2) >= v205)
    {
      v230 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v69 + 1);
      goto LABEL_12;
    }
    unint64_t v77 = *(void *)(v200 + 8 * (void)(v69 + 2));
    if (v77)
    {
      int64_t v76 = (int64_t)(v69 + 2);
      goto LABEL_10;
    }
    if ((uint64_t)(v69 + 3) >= v205)
    {
      v230 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v69 + 2);
      goto LABEL_12;
    }
    unint64_t v77 = *(void *)(v200 + 8 * (void)(v69 + 3));
    if (v77)
    {
      int64_t v76 = (int64_t)(v69 + 3);
LABEL_10:
      v232 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((v77 - 1) & v77);
      unint64_t v71 = __clz(__rbit64(v77)) + (v76 << 6);
      v230 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v76;
      goto LABEL_6;
    }
    int64_t v76 = (int64_t)(v69 + 4);
    if ((uint64_t)(v69 + 4) >= v205)
    {
      v230 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v69 + 3);
    }
    else
    {
      unint64_t v77 = *(void *)(v200 + 8 * v76);
      if (v77) {
        goto LABEL_10;
      }
      while ((char *)v181 != v69)
      {
        unint64_t v77 = *(void *)(v182 + 8 * (void)v69++);
        if (v77)
        {
          int64_t v76 = (int64_t)(v69 + 4);
          goto LABEL_10;
        }
      }
      v230 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v180;
    }
LABEL_12:
    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA728);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v59, 1, 1, v78);
    v232 = 0;
  }
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
  return result;
}

uint64_t sub_25B212D80@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, char *)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v35 = a1;
  uint64_t v30 = a4;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v6 = MEMORY[0x270FA5388](v33);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v31 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v32 = (unint64_t)(v12 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = *(void *)(a3 + 48);
    uint64_t v23 = sub_25B290080();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v10, v22 + *(void *)(*(void *)(v23 - 8) + 72) * i, v23);
    uint64_t v24 = *(void *)(a3 + 56);
    uint64_t v25 = type metadata accessor for PairingRelationship();
    sub_25B22A704(v24 + *(void *)(*(void *)(v25 - 8) + 72) * i, (uint64_t)&v10[*(int *)(v33 + 48)], (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B187574((uint64_t)v10, (uint64_t)v8, &qword_26A4D9EE8);
    v34(v35, v8);
    if (v4)
    {
      uint64_t v26 = sub_25B290000();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v35, v26);
      sub_25B116DE0((uint64_t)v8, &qword_26A4D9EE8);
      return swift_release();
    }
    uint64_t result = sub_25B116DE0((uint64_t)v8, &qword_26A4D9EE8);
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v16++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v32) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v16);
    if (!v20) {
      break;
    }
LABEL_17:
    unint64_t v14 = (v20 - 1) & v20;
  }
  int64_t v21 = v16 + 1;
  if (v16 + 1 >= v32) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v16 + 2;
  if (v16 + 2 >= v32) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v16 + 3;
  if (v16 + 3 >= v32) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v16 + 4;
  if (v16 + 4 >= v32)
  {
LABEL_26:
    uint64_t v27 = v30;
    swift_release();
    uint64_t v28 = sub_25B290000();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v27, v35, v28);
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
LABEL_16:
    int64_t v16 = v21;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v32) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_25B2130FC(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  return sub_25B213114(a1, a2, a3, a4);
}

uint64_t sub_25B213114(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a2;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v7 = MEMORY[0x270FA5388](v29);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v31 = a1;
  uint64_t v12 = *(void *)(a4 + 64);
  uint64_t v27 = a4 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v28 = (unint64_t)(v13 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    uint64_t v23 = *(void *)(a4 + 48);
    uint64_t v24 = type metadata accessor for Record.ID(0);
    sub_25B22A704(v23 + *(void *)(*(void *)(v24 - 8) + 72) * i, (uint64_t)v11, type metadata accessor for Record.ID);
    uint64_t v25 = *(void *)(a4 + 56);
    uint64_t v26 = type metadata accessor for RecordMetadata();
    sub_25B22A704(v25 + *(void *)(*(void *)(v26 - 8) + 72) * i, (uint64_t)&v11[*(int *)(v29 + 48)], (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    sub_25B187574((uint64_t)v11, (uint64_t)v9, &qword_26A4D9860);
    v30(&v31, v9);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_25B116DE0((uint64_t)v9, &qword_26A4D9860);
      return swift_release();
    }
    uint64_t result = sub_25B116DE0((uint64_t)v9, &qword_26A4D9860);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v28) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v27 + 8 * v17);
    if (!v21) {
      break;
    }
LABEL_17:
    unint64_t v15 = (v21 - 1) & v21;
  }
  int64_t v22 = v17 + 1;
  if (v17 + 1 >= v28) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v27 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v17 + 2;
  if (v17 + 2 >= v28) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v27 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v17 + 3;
  if (v17 + 3 >= v28) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v27 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v17 + 4;
  if (v17 + 4 >= v28)
  {
LABEL_26:
    swift_release();
    return v31;
  }
  unint64_t v21 = *(void *)(v27 + 8 * v22);
  if (v21)
  {
LABEL_16:
    int64_t v17 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v17 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v17 >= v28) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v27 + 8 * v17);
    ++v22;
    if (v21) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t MetadataStoring.mismatchedZoneVersions(for:remoteZoneVersions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v140 = a3;
  uint64_t v122 = sub_25B290080();
  uint64_t v7 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  os_log_type_t v112 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9390);
  MEMORY[0x270FA5388](v115);
  uint64_t v126 = (uint64_t)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB178);
  MEMORY[0x270FA5388](v123 - 8);
  uint64_t v11 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB180);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v128 = (uint64_t)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v107 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v138 = (uint64_t)&v107 - v19;
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v107 - v20;
  uint64_t v137 = type metadata accessor for ZoneVersion();
  uint64_t v22 = *(void *)(v137 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v137);
  uint64_t v107 = (char *)&v107 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v120 = (uint64_t)&v107 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v121 = (uint64_t)&v107 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v136 = (uint64_t)&v107 - v29;
  uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 24))(a1, v140, a4);
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = sub_25B20DFA8(v31);
  uint64_t v33 = swift_bridgeObjectRetain();
  uint64_t v34 = sub_25B20DFA8(v33);
  uint64_t v35 = sub_25B216894(v32, v34);
  int64_t v36 = 0;
  uint64_t v37 = *(void *)(v35 + 56);
  uint64_t v117 = v35 + 56;
  uint64_t v125 = v35;
  uint64_t v38 = 1 << *(unsigned char *)(v35 + 32);
  uint64_t v39 = -1;
  if (v38 < 64) {
    uint64_t v39 = ~(-1 << v38);
  }
  unint64_t v40 = v39 & v37;
  int64_t v119 = (unint64_t)(v38 + 63) >> 6;
  size_t v130 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v118 = v22;
  uint64_t v135 = (unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t v116 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v114 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v110 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
  uint64_t v113 = (void (**)(uint64_t, uint64_t))(v7 + 8);
  uint64_t v109 = (void *)MEMORY[0x263F8EE80];
  uint64_t v129 = a2;
  uint64_t v127 = v21;
  uint64_t v124 = v30;
  unint64_t v111 = v17;
  while (1)
  {
    if (v40)
    {
      unint64_t v44 = __clz(__rbit64(v40));
      uint64_t v45 = (v40 - 1) & v40;
      unint64_t v46 = v44 | (v36 << 6);
      goto LABEL_23;
    }
    int64_t v47 = v36 + 1;
    if (__OFADD__(v36, 1))
    {
      __break(1u);
      goto LABEL_67;
    }
    if (v47 >= v119) {
      goto LABEL_65;
    }
    unint64_t v48 = *(void *)(v117 + 8 * v47);
    ++v36;
    if (!v48)
    {
      int64_t v36 = v47 + 1;
      if (v47 + 1 >= v119) {
        goto LABEL_65;
      }
      unint64_t v48 = *(void *)(v117 + 8 * v36);
      if (!v48)
      {
        int64_t v36 = v47 + 2;
        if (v47 + 2 >= v119) {
          goto LABEL_65;
        }
        unint64_t v48 = *(void *)(v117 + 8 * v36);
        if (!v48) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v45 = (v48 - 1) & v48;
    unint64_t v46 = __clz(__rbit64(v48)) + (v36 << 6);
LABEL_23:
    unint64_t v133 = v45;
    int64_t v134 = v36;
    uint64_t v50 = (uint64_t *)(*(void *)(v125 + 48) + 32 * v46);
    uint64_t v52 = *v50;
    uint64_t v51 = v50[1];
    uint64_t v54 = v50[2];
    uint64_t v53 = v50[3];
    uint64_t v55 = *(void *)(v30 + 16);
    uint64_t v139 = v53;
    uint64_t v140 = v51;
    uint64_t v131 = v54;
    uint64_t v132 = v52;
    if (v55)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v56 = sub_25B18A768(v52, v51, v54, v53);
      if (v57)
      {
        uint64_t v58 = v118;
        sub_25B22A704(*(void *)(v30 + 56) + *(void *)(v118 + 72) * v56, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56);
        uint64_t v60 = v137;
        v59(v21, 0, 1, v137);
      }
      else
      {
        uint64_t v59 = *v130;
        uint64_t v60 = v137;
        (*v130)(v21, 1, 1, v137);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a2 = v129;
    }
    else
    {
      uint64_t v59 = *v130;
      uint64_t v60 = v137;
      (*v130)(v21, 1, 1, v137);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v61 = *v135;
    if ((*v135)(v21, 1, v60) == 1)
    {
      uint64_t v62 = v136;
      (*v116)(v136, 1, 1, v122);
      sub_25B116DE0((uint64_t)v21, &qword_26A4DB180);
    }
    else
    {
      uint64_t v62 = v136;
      sub_25B22A7CC((uint64_t)v21, v136, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    }
    uint64_t v63 = v62;
    uint64_t v64 = v138;
    sub_25B22A704(v63, v138, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t v65 = v64;
    uint64_t v66 = v137;
    v59((char *)v65, 0, 1, v137);
    if (*(void *)(a2 + 16))
    {
      uint64_t v67 = v140;
      swift_bridgeObjectRetain();
      uint64_t v68 = v139;
      swift_bridgeObjectRetain();
      unint64_t v69 = sub_25B18A768(v132, v67, v131, v68);
      if (v70)
      {
        sub_25B22A704(*(void *)(a2 + 56) + *(void *)(v118 + 72) * v69, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        unint64_t v71 = v17;
        uint64_t v72 = 0;
      }
      else
      {
        unint64_t v71 = v17;
        uint64_t v72 = 1;
      }
      v59(v71, v72, 1, v66);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v59(v17, 1, 1, v66);
    }
    unint64_t v21 = v127;
    uint64_t v73 = (uint64_t)&v11[*(int *)(v123 + 48)];
    uint64_t v74 = v138;
    sub_25B187628(v138, (uint64_t)v11, &qword_26A4DB180);
    sub_25B187628((uint64_t)v17, v73, &qword_26A4DB180);
    if (v61(v11, 1, v66) != 1)
    {
      sub_25B187628((uint64_t)v11, v128, &qword_26A4DB180);
      if (v61((char *)v73, 1, v66) == 1)
      {
        uint64_t v85 = &qword_26A4DB178;
        uint64_t v42 = v136;
        uint64_t v43 = v140;
LABEL_52:
        sub_25B116DE0((uint64_t)v17, &qword_26A4DB180);
        sub_25B116DE0(v74, &qword_26A4DB180);
        sub_25B22A76C(v128, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        goto LABEL_53;
      }
      uint64_t v75 = v121;
      sub_25B22A7CC(v73, v121, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v76 = v126;
      uint64_t v77 = v126 + *(int *)(v115 + 48);
      sub_25B22A704(v128, v126, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      sub_25B22A704(v75, v77, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v78 = *v114;
      uint64_t v79 = v122;
      unsigned int v80 = (*v114)(v76, 1, v122);
      uint64_t v81 = v120;
      if (v80 == 1)
      {
        if (v78(v77, 1, v79) == 1) {
          goto LABEL_45;
        }
      }
      else
      {
        sub_25B22A704(v126, v120, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
        if (v78(v77, 1, v79) != 1)
        {
          uint64_t v82 = v112;
          (*v110)(v112, v77, v79);
          char v83 = sub_25B290030();
          unint64_t v84 = *v113;
          unint64_t v21 = v127;
          int64_t v17 = v111;
          (*v113)((uint64_t)v82, v79);
          v84(v120, v79);
          if (v83)
          {
LABEL_45:
            sub_25B22A76C(v126, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
            sub_25B22A76C(v121, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
            sub_25B116DE0((uint64_t)v17, &qword_26A4DB180);
            sub_25B116DE0(v138, &qword_26A4DB180);
            sub_25B22A76C(v128, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
            uint64_t v42 = v136;
            uint64_t v30 = v124;
LABEL_5:
            sub_25B116DE0((uint64_t)v11, &qword_26A4DB180);
            sub_25B22A76C(v42, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a2 = v129;
            goto LABEL_6;
          }
          sub_25B22A76C(v126, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
          goto LABEL_51;
        }
        (*v113)(v81, v79);
      }
      sub_25B116DE0(v126, &qword_26A4D9390);
LABEL_51:
      uint64_t v42 = v136;
      uint64_t v43 = v140;
      sub_25B22A76C(v121, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v85 = &qword_26A4DB180;
      uint64_t v74 = v138;
      goto LABEL_52;
    }
    sub_25B116DE0((uint64_t)v17, &qword_26A4DB180);
    sub_25B116DE0(v74, &qword_26A4DB180);
    unsigned int v41 = v61((char *)v73, 1, v66);
    uint64_t v42 = v136;
    uint64_t v30 = v124;
    uint64_t v43 = v140;
    if (v41 == 1) {
      goto LABEL_5;
    }
    uint64_t v85 = &qword_26A4DB178;
LABEL_53:
    uint64_t v86 = (uint64_t)v107;
    uint64_t v87 = v139;
    sub_25B116DE0((uint64_t)v11, v85);
    sub_25B22A704(v42, v86, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t v88 = v109;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v141 = v88;
    unint64_t v90 = sub_25B18A768(v132, v43, v131, v87);
    uint64_t v91 = v88[2];
    BOOL v92 = (v89 & 1) == 0;
    uint64_t v93 = v91 + v92;
    if (__OFADD__(v91, v92)) {
      goto LABEL_68;
    }
    if (v88[3] >= v93)
    {
      a2 = v129;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_59;
      }
      char v105 = v89;
      sub_25B1941BC();
      char v89 = v105;
    }
    else
    {
      char v94 = v89;
      sub_25B18F048(v93, isUniquelyReferenced_nonNull_native);
      unint64_t v95 = sub_25B18A768(v132, v140, v131, v87);
      if ((v94 & 1) != (v96 & 1)) {
        goto LABEL_70;
      }
      unint64_t v90 = v95;
      char v89 = v94;
    }
    a2 = v129;
LABEL_59:
    BOOL v97 = v141;
    uint64_t v109 = v141;
    if (v89)
    {
      sub_25B22A834(v86, v141[7] + *(void *)(v118 + 72) * v90, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    }
    else
    {
      v141[(v90 >> 6) + 8] |= 1 << v90;
      BOOL v98 = (void *)(v97[6] + 32 * v90);
      uint64_t v99 = v140;
      *BOOL v98 = v132;
      v98[1] = v99;
      uint64_t v100 = v86;
      uint64_t v101 = v139;
      v98[2] = v131;
      v98[3] = v101;
      sub_25B22A7CC(v100, v97[7] + *(void *)(v118 + 72) * v90, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
      uint64_t v102 = v97[2];
      BOOL v103 = __OFADD__(v102, 1);
      uint64_t v104 = v102 + 1;
      if (v103) {
        goto LABEL_69;
      }
      v97[2] = v104;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B22A76C(v42, (uint64_t (*)(void))type metadata accessor for ZoneVersion);
    uint64_t v30 = v124;
LABEL_6:
    unint64_t v40 = v133;
    int64_t v36 = v134;
  }
  int64_t v49 = v47 + 3;
  if (v49 >= v119)
  {
LABEL_65:
    swift_bridgeObjectRelease();
    swift_release();
    return (uint64_t)v109;
  }
  unint64_t v48 = *(void *)(v117 + 8 * v49);
  if (v48)
  {
    int64_t v36 = v49;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v36 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      break;
    }
    if (v36 >= v119) {
      goto LABEL_65;
    }
    unint64_t v48 = *(void *)(v117 + 8 * v36);
    ++v49;
    if (v48) {
      goto LABEL_22;
    }
  }
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t MetadataStoring.recordVersionsWithProtocolAppropriateIDs(for:zoneIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  BOOL v97 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v99 = (char *)&v89 - v12;
  uint64_t v116 = sub_25B290080();
  uint64_t v13 = *(void *)(v116 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v116);
  BOOL v98 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v108 = (char *)&v89 - v16;
  uint64_t v95 = type metadata accessor for Record.ID(0);
  uint64_t v107 = *(void *)(v95 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v95);
  uint64_t v102 = (unint64_t *)((char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v101 = (uint64_t *)((char *)&v89 - v20);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v89 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB170);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v114 = v4;
  uint64_t v115 = (char *)&v89 - v27;
  uint64_t v112 = a3;
  uint64_t v113 = a4;
  uint64_t v28 = MetadataStoring.recordVersions(for:zoneIDs:)(a1, a2, a3, a4);
  if (*(void *)(a1 + *(int *)(type metadata accessor for PairingRelationship() + 20) + 32) > 0xDuLL) {
    return v28;
  }
  uint64_t v110 = v22;
  unint64_t v100 = sub_25B20DC40(MEMORY[0x263F8EE78]);
  unint64_t v29 = 0;
  uint64_t v106 = v28;
  uint64_t v30 = v28 + 64;
  uint64_t v31 = 1 << *(unsigned char *)(v28 + 32);
  uint64_t v32 = -1;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  unint64_t v33 = v32 & *(void *)(v28 + 64);
  unint64_t v34 = (unint64_t)(v31 + 63) >> 6;
  char v105 = (void (**)(char *, char *, uint64_t))(v13 + 16);
  unint64_t v111 = (void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  uint64_t v109 = (void (**)(char *, uint64_t))(v13 + 8);
  char v96 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  char v94 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  uint64_t v92 = v13 + 40;
  unint64_t v89 = v34 - 1;
  int64_t v104 = v34;
  unint64_t v91 = v34 - 5;
  uint64_t v103 = v30;
  uint64_t v90 = v30 + 40;
  uint64_t v35 = v108;
LABEL_48:
  uint64_t v41 = (uint64_t)v115;
  while (1)
  {
    if (v33)
    {
      unint64_t v36 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      unint64_t v37 = v36 | (v29 << 6);
      goto LABEL_7;
    }
    int64_t v42 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v42 >= v104)
    {
      unint64_t v44 = v29;
    }
    else
    {
      unint64_t v43 = *(void *)(v103 + 8 * v42);
      if (v43) {
        goto LABEL_11;
      }
      unint64_t v44 = v29 + 1;
      if ((uint64_t)(v29 + 2) < v104)
      {
        unint64_t v43 = *(void *)(v103 + 8 * (v29 + 2));
        if (v43)
        {
          int64_t v42 = v29 + 2;
          goto LABEL_11;
        }
        unint64_t v44 = v29 + 2;
        if ((uint64_t)(v29 + 3) < v104)
        {
          unint64_t v43 = *(void *)(v103 + 8 * (v29 + 3));
          if (v43)
          {
            int64_t v42 = v29 + 3;
LABEL_11:
            unint64_t v33 = (v43 - 1) & v43;
            unint64_t v37 = __clz(__rbit64(v43)) + (v42 << 6);
            unint64_t v29 = v42;
LABEL_7:
            uint64_t v38 = v106;
            sub_25B22A704(*(void *)(v106 + 48) + *(void *)(v107 + 72) * v37, (uint64_t)v26, type metadata accessor for Record.ID);
            unint64_t v39 = *(void *)(v38 + 56) + *(void *)(v13 + 72) * v37;
            uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA728);
            (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(&v26[*(int *)(v40 + 48)], v39, v116);
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v26, 0, 1, v40);
            uint64_t v35 = v108;
            uint64_t v41 = (uint64_t)v115;
            goto LABEL_14;
          }
          int64_t v42 = v29 + 4;
          unint64_t v44 = v29 + 3;
          if ((uint64_t)(v29 + 4) < v104)
          {
            unint64_t v43 = *(void *)(v103 + 8 * v42);
            if (v43) {
              goto LABEL_11;
            }
            while (v91 != v29)
            {
              unint64_t v43 = *(void *)(v90 + 8 * v29++);
              if (v43)
              {
                int64_t v42 = v29 + 4;
                goto LABEL_11;
              }
            }
            unint64_t v44 = v89;
          }
        }
      }
    }
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA728);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v26, 1, 1, v45);
    unint64_t v33 = 0;
    unint64_t v29 = v44;
LABEL_14:
    sub_25B187574((uint64_t)v26, v41, &qword_26A4DB170);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA728);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v41, 1, v46) == 1)
    {
      swift_release();
      return v100;
    }
    int64_t v47 = v26;
    uint64_t v48 = v13;
    uint64_t v49 = v41 + *(int *)(v46 + 48);
    uint64_t v50 = (uint64_t)v110;
    sub_25B22A7CC(v41, (uint64_t)v110, type metadata accessor for Record.ID);
    uint64_t v51 = *v111;
    (*v111)(v35, v49, v116);
    uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v113 + 8) + 56))(v50, v112);
    uint64_t v54 = v35;
    if (!v53)
    {
      (*v109)(v35, v116);
      sub_25B22A76C(v50, type metadata accessor for Record.ID);
      uint64_t v13 = v48;
      uint64_t v26 = v47;
      goto LABEL_48;
    }
    uint64_t v55 = v52;
    uint64_t v56 = v53;
    unint64_t v93 = (unint64_t)type metadata accessor for Record.ID;
    uint64_t v57 = v50;
    uint64_t v58 = v101;
    sub_25B22A704(v57, (uint64_t)v101, type metadata accessor for Record.ID);
    swift_bridgeObjectRelease();
    *uint64_t v58 = v55;
    v58[1] = v56;
    uint64_t v59 = (uint64_t)v58;
    uint64_t v60 = v116;
    uint64_t v61 = v102;
    sub_25B22A704(v59, (uint64_t)v102, (uint64_t (*)(void))v93);
    uint64_t v62 = (uint64_t)v99;
    (*v105)(v99, v54, v60);
    uint64_t v63 = *v96;
    (*v96)(v62, 0, 1, v60);
    if ((*v94)(v62, 1, v60) == 1)
    {
      sub_25B116DE0(v62, &qword_26B33F200);
      unint64_t v64 = v100;
      swift_bridgeObjectRetain();
      uint64_t v65 = v61;
      uint64_t v66 = v64;
      unint64_t v93 = sub_25B18A8D0(v65);
      LOBYTE(v64) = v67;
      swift_bridgeObjectRelease();
      uint64_t v26 = v47;
      if (v64)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v117 = (void *)v66;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_25B193B78();
          uint64_t v66 = (uint64_t)v117;
        }
        unint64_t v69 = v93;
        sub_25B22A76C(*(void *)(v66 + 48) + *(void *)(v107 + 72) * v93, type metadata accessor for Record.ID);
        uint64_t v70 = (uint64_t)v97;
        v51(v97, *(void *)(v66 + 56) + *(void *)(v48 + 72) * v69, v116);
        unint64_t v100 = v66;
        sub_25B21EB80(v69, v66);
        swift_bridgeObjectRelease();
        uint64_t v71 = 0;
      }
      else
      {
        uint64_t v71 = 1;
        uint64_t v70 = (uint64_t)v97;
      }
      v63(v70, v71, 1, v116);
      sub_25B22A76C((uint64_t)v102, type metadata accessor for Record.ID);
      sub_25B116DE0(v70, &qword_26B33F200);
      uint64_t v13 = v48;
      uint64_t v35 = v108;
      uint64_t v41 = (uint64_t)v115;
    }
    else
    {
      v51(v98, v62, v116);
      unint64_t v72 = v100;
      LODWORD(v93) = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v117 = (void *)v72;
      unint64_t v74 = sub_25B18A8D0(v61);
      uint64_t v75 = *(void *)(v72 + 16);
      BOOL v76 = (v73 & 1) == 0;
      uint64_t v77 = v75 + v76;
      if (__OFADD__(v75, v76)) {
        goto LABEL_52;
      }
      uint64_t v26 = v47;
      uint64_t v35 = v108;
      uint64_t v41 = (uint64_t)v115;
      if (*(void *)(v72 + 24) >= v77)
      {
        if ((v93 & 1) == 0)
        {
          unint64_t v100 = v74;
          char v87 = v73;
          sub_25B193B78();
          char v73 = v87;
          unint64_t v74 = v100;
        }
      }
      else
      {
        char v78 = v73;
        sub_25B18E2C0(v77, v93);
        unint64_t v79 = sub_25B18A8D0(v102);
        if ((v78 & 1) != (v80 & 1)) {
          goto LABEL_54;
        }
        unint64_t v74 = v79;
        char v73 = v78;
      }
      uint64_t v81 = v102;
      uint64_t v82 = v117;
      if (v73)
      {
        uint64_t v13 = v48;
        (*(void (**)(unint64_t, char *, uint64_t))(v48 + 40))(v117[7] + *(void *)(v48 + 72) * v74, v98, v116);
      }
      else
      {
        unint64_t v83 = v74;
        v117[(v74 >> 6) + 8] |= 1 << v74;
        sub_25B22A704((uint64_t)v81, v82[6] + *(void *)(v107 + 72) * v74, type metadata accessor for Record.ID);
        v51((char *)(v82[7] + *(void *)(v48 + 72) * v83), (uint64_t)v98, v116);
        uint64_t v84 = v82[2];
        BOOL v85 = __OFADD__(v84, 1);
        uint64_t v86 = v84 + 1;
        if (v85) {
          goto LABEL_53;
        }
        v82[2] = v86;
        uint64_t v13 = v48;
      }
      unint64_t v100 = (unint64_t)v117;
      swift_bridgeObjectRelease();
      sub_25B22A76C((uint64_t)v102, type metadata accessor for Record.ID);
    }
    (*v109)(v35, v116);
    sub_25B22A76C((uint64_t)v110, type metadata accessor for Record.ID);
    sub_25B22A76C((uint64_t)v101, type metadata accessor for Record.ID);
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t sub_25B214CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F280);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UniformHasher();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = _s16ReplicatorEngine13UniformHasherVACycfC_0();
  uint64_t v17 = (void *)MEMORY[0x26115FD30](v16);
  sub_25B217F04(a1, a2);
  if (v3)
  {
    return sub_25B22A76C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for UniformHasher);
  }
  sub_25B290480();
  *(void *)&v9[*(int *)(v7 + 36)] = 16;
  uint64_t v18 = sub_25B20CEEC((uint64_t)v9);
  sub_25B10DDE4(v18, v19, (uint64_t)v12);
  uint64_t v20 = sub_25B290080();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 1, v20);
  if (result != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(a3, v12, v20);
    return sub_25B22A76C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for UniformHasher);
  }
  __break(1u);
  return result;
}

uint64_t MetadataStoring.hasRecords(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 24))(a2);
  uint64_t v6[2] = a1;
  LOBYTE(a1) = sub_25B210BDC((uint64_t (*)(char *))sub_25B228CD4, (char)v6, v4);
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t MetadataStoring.recordVersions(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 24))(a2);
  long long v7[2] = a1;
  uint64_t v5 = sub_25B213114(MEMORY[0x263F8EE80], (void (*)(uint64_t *, char *))sub_25B228CF4, (uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t MutableMetadataStoring.removeIncompatiblePairingRelationships(protocolVersion:)(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v104 = sub_25B290080();
  unint64_t v7 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v82 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v81 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v88 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v91 = (char *)&v80 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v80 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v80 - v20;
  MEMORY[0x270FA5388](v19);
  BOOL v98 = (char *)&v80 - v22;
  unint64_t v86 = *a1;
  unint64_t v90 = a1[1];
  uint64_t v84 = a3;
  uint64_t v23 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a3 + 8) + 8) + 32);
  uint64_t v85 = v3;
  uint64_t v83 = a2;
  uint64_t v24 = v23(a2);
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v96 = v24 + 64;
  uint64_t v26 = 1 << *(unsigned char *)(v24 + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v25;
  int64_t v97 = (unint64_t)(v26 + 63) >> 6;
  unint64_t v29 = v7 + 16;
  uint64_t v102 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v92 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v100 = v24;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v31 = 0;
  unint64_t v94 = v7 + 16;
  unint64_t v95 = MEMORY[0x263F8EE78];
  unint64_t v99 = v7;
  uint64_t v89 = v11;
  char v87 = v18;
  unint64_t v93 = v21;
  while (1)
  {
    if (v28)
    {
      uint64_t v105 = (v28 - 1) & v28;
      uint64_t v106 = v31;
      unint64_t v32 = __clz(__rbit64(v28)) | ((void)v31 << 6);
      goto LABEL_25;
    }
    int64_t v33 = (int64_t)v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v33 >= v97) {
      goto LABEL_34;
    }
    unint64_t v34 = *(void *)(v96 + 8 * v33);
    int64_t v35 = (int64_t)v31 + 1;
    if (!v34)
    {
      int64_t v35 = (int64_t)v31 + 2;
      if ((uint64_t)v31 + 2 >= v97) {
        goto LABEL_34;
      }
      unint64_t v34 = *(void *)(v96 + 8 * v35);
      if (!v34)
      {
        int64_t v35 = (int64_t)v31 + 3;
        if ((uint64_t)v31 + 3 >= v97) {
          goto LABEL_34;
        }
        unint64_t v34 = *(void *)(v96 + 8 * v35);
        if (!v34)
        {
          int64_t v35 = (int64_t)v31 + 4;
          if ((uint64_t)v31 + 4 >= v97) {
            goto LABEL_34;
          }
          unint64_t v34 = *(void *)(v96 + 8 * v35);
          if (!v34) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v105 = (v34 - 1) & v34;
    uint64_t v106 = (void (*)(char *, uint64_t, uint64_t))v35;
    unint64_t v32 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_25:
    uint64_t v37 = v100;
    uint64_t v38 = *(void *)(v100 + 48);
    uint64_t v101 = *(void *)(v7 + 72);
    unint64_t v39 = *(void (**)(void))(v7 + 16);
    uint64_t v40 = (uint64_t)v98;
    uint64_t v41 = v104;
    ((void (*)(char *, unint64_t, uint64_t))v39)(v98, v38 + v101 * v32, v104);
    uint64_t v42 = *(void *)(v37 + 56);
    uint64_t v43 = type metadata accessor for PairingRelationship();
    sub_25B22A704(v42 + *(void *)(*(void *)(v43 - 8) + 72) * v32, v40 + *(int *)(v11 + 48), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B187574(v40, (uint64_t)v21, &qword_26A4D9EE8);
    uint64_t v44 = *(int *)(v11 + 48);
    uint64_t v45 = (uint64_t)&v18[v44];
    uint64_t v46 = v11;
    uint64_t v47 = (uint64_t)&v21[v44];
    uint64_t v103 = v39;
    ((void (*)(char *, char *, uint64_t))v39)(v18, v21, v41);
    sub_25B22A704(v47, v45, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v48 = (uint64_t *)(v45 + *(int *)(v43 + 32));
    uint64_t v49 = v46;
    unint64_t v50 = v29;
    uint64_t v51 = *v48;
    unint64_t v52 = v48[1];
    sub_25B120090(*v48, v52);
    sub_25B22A76C(v45, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    if (v52)
    {
      sub_25B1200A4(v51, v52);
      (*v102)(v18, v41);
      unint64_t v7 = v99;
      unint64_t v29 = v50;
      uint64_t v11 = v49;
LABEL_5:
      unint64_t v28 = v105;
      uint64_t v31 = v106;
      goto LABEL_6;
    }
    uint64_t v53 = *v102;
    (*v102)(v18, v41);
    uint64_t v54 = *(int *)(v49 + 48);
    uint64_t v55 = v91;
    uint64_t v56 = (uint64_t)&v91[v54];
    uint64_t v57 = v103;
    ((void (*)(char *, char *, uint64_t))v103)(v91, v21, v41);
    sub_25B22A704(v47, v56, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v58 = v56 + *(int *)(v43 + 20);
    unint64_t v60 = *(void *)(v58 + 32);
    unint64_t v59 = *(void *)(v58 + 40);
    sub_25B22A76C(v56, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    v53(v55, v41);
    if (v60 >= v90 && v86 >= v59)
    {
      unint64_t v7 = v99;
      uint64_t v21 = v93;
      unint64_t v29 = v94;
      uint64_t v11 = v89;
      uint64_t v18 = v87;
      goto LABEL_5;
    }
    uint64_t v61 = v89;
    uint64_t v62 = (uint64_t)&v88[*(int *)(v89 + 48)];
    unint64_t v29 = v94;
    v57();
    sub_25B22A704(v47, v62, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    unint64_t v63 = v95;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v63 = sub_25B2183A4(0, *(void *)(v63 + 16) + 1, 1, v63, &qword_26A4D9D00, MEMORY[0x263F07508], MEMORY[0x263F07508]);
    }
    uint64_t v18 = v87;
    uint64_t v64 = v101;
    unint64_t v66 = *(void *)(v63 + 16);
    unint64_t v65 = *(void *)(v63 + 24);
    unint64_t v95 = v63;
    if (v66 >= v65 >> 1) {
      unint64_t v95 = sub_25B2183A4(v65 > 1, v66 + 1, 1, v95, &qword_26A4D9D00, MEMORY[0x263F07508], MEMORY[0x263F07508]);
    }
    uint64_t v67 = v104;
    unint64_t v28 = v105;
    unint64_t v68 = v95;
    *(void *)(v95 + 16) = v66 + 1;
    unint64_t v7 = v99;
    (*(void (**)(unint64_t, char *, uint64_t))(v99 + 32))(v68 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v66 * v64, v88, v67);
    sub_25B22A76C(v62, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v21 = v93;
    uint64_t v31 = v106;
    uint64_t v11 = v61;
LABEL_6:
    uint64_t result = sub_25B116DE0((uint64_t)v21, &qword_26A4D9EE8);
  }
  unint64_t v36 = (char *)v31 + 5;
  if ((uint64_t)v31 + 5 < v97)
  {
    unint64_t v34 = *(void *)(v96 + 8 * (void)v36);
    if (!v34)
    {
      while (1)
      {
        int64_t v35 = (int64_t)(v36 + 1);
        if (__OFADD__(v36, 1)) {
          goto LABEL_43;
        }
        if (v35 >= v97) {
          goto LABEL_34;
        }
        unint64_t v34 = *(void *)(v96 + 8 * v35);
        ++v36;
        if (v34) {
          goto LABEL_24;
        }
      }
    }
    int64_t v35 = (int64_t)v31 + 5;
    goto LABEL_24;
  }
LABEL_34:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v69 = *(void *)(v95 + 16);
  if (v69)
  {
    uint64_t v70 = v95 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v71 = *(void *)(v7 + 72);
    uint64_t v106 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    unint64_t v72 = v7 + 56;
    char v73 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v74 = v71;
    unint64_t v99 = v72 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v75 = v104;
    BOOL v76 = v81;
    while (1)
    {
      v106(v76, v70, v75);
      uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v72;
      (*(void (**)(char *, void, uint64_t, uint64_t))v72)(v76, 0, 1, v75);
      if ((*v73)(v76, 1, v75) == 1) {
        break;
      }
      char v78 = v82;
      (*v92)(v82, v76, v75);
      (*(void (**)(char *, uint64_t))(*(void *)(v84 + 16) + 96))(v78, v83);
      (*v102)(v78, v75);
      v70 += v74;
      if (!--v69)
      {
        unint64_t v79 = v76;
        goto LABEL_40;
      }
    }
  }
  else
  {
    uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v75 = v104;
    unint64_t v79 = v81;
LABEL_40:
    v77(v79, 1, 1, v75);
  }
  return swift_bridgeObjectRelease();
}

uint64_t MetadataStoring.orphanedRecordIDs()(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v5 = MEMORY[0x270FA5388](v62);
  uint64_t v61 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v60 = (uint64_t)&v50 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v59 = (uint64_t)&v50 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v58 = (uint64_t)&v50 - v11;
  uint64_t v12 = type metadata accessor for Record.ID(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 24))(a1);
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  uint64_t v69 = v2;
  uint64_t v17 = sub_25B222F94((uint64_t)sub_25B228D10, (uint64_t)v66, v16, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_25B2237DC);
  swift_bridgeObjectRelease();
  int64_t v18 = *(void *)(v17 + 16);
  if (!v18)
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v70 = MEMORY[0x263F8EE78];
  sub_25B2240E0(0, v18, 0);
  uint64_t result = sub_25B1A7EF4(v17);
  uint64_t v21 = result;
  uint64_t v22 = 0;
  uint64_t v23 = v17 + 64;
  char v24 = *(unsigned char *)(v17 + 32);
  uint64_t v51 = v17 + 88;
  uint64_t v56 = v17;
  uint64_t v57 = v13;
  int64_t v52 = v18;
  uint64_t v53 = v20;
  uint64_t v54 = v17 + 64;
  uint64_t v55 = v15;
  while ((v21 & 0x8000000000000000) == 0 && v21 < 1 << v24)
  {
    unint64_t v27 = (unint64_t)v21 >> 6;
    if ((*(void *)(v23 + 8 * ((unint64_t)v21 >> 6)) & (1 << v21)) == 0) {
      goto LABEL_29;
    }
    if (*(_DWORD *)(v17 + 36) != v20) {
      goto LABEL_30;
    }
    uint64_t v63 = v22;
    uint64_t v64 = 1 << v21;
    uint64_t v28 = v62;
    uint64_t v29 = v58;
    uint64_t v30 = v58 + *(int *)(v62 + 48);
    uint64_t v31 = *(void *)(v17 + 48);
    uint64_t v65 = *(void *)(v13 + 72);
    sub_25B22A704(v31 + v65 * v21, v58, type metadata accessor for Record.ID);
    uint64_t v32 = *(void *)(v17 + 56);
    uint64_t v33 = type metadata accessor for RecordMetadata();
    sub_25B22A704(v32 + *(void *)(*(void *)(v33 - 8) + 72) * v21, v30, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v34 = v59;
    sub_25B22A704(v29, v59, type metadata accessor for Record.ID);
    sub_25B22A704(v30, v34 + *(int *)(v28 + 48), (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v35 = v60;
    sub_25B187574(v34, v60, &qword_26A4D9860);
    uint64_t v36 = v29;
    uint64_t v37 = (uint64_t)v55;
    sub_25B116DE0(v36, &qword_26A4D9860);
    uint64_t v38 = *(int *)(v28 + 48);
    uint64_t v39 = v61;
    uint64_t v40 = v61 + v38;
    uint64_t v41 = v35 + v38;
    sub_25B22A704(v35, v61, type metadata accessor for Record.ID);
    sub_25B22A704(v41, v40, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    sub_25B22A7CC(v39, v37, type metadata accessor for Record.ID);
    sub_25B22A76C(v40, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    sub_25B116DE0(v35, &qword_26A4D9860);
    uint64_t v42 = v70;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25B2240E0(0, *(void *)(v42 + 16) + 1, 1);
      uint64_t v42 = v70;
    }
    unint64_t v44 = *(void *)(v42 + 16);
    unint64_t v43 = *(void *)(v42 + 24);
    uint64_t v13 = v57;
    if (v44 >= v43 >> 1)
    {
      sub_25B2240E0(v43 > 1, v44 + 1, 1);
      uint64_t v42 = v70;
    }
    *(void *)(v42 + 16) = v44 + 1;
    uint64_t result = sub_25B22A7CC(v37, v42+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ v44 * v65, type metadata accessor for Record.ID);
    uint64_t v17 = v56;
    char v24 = *(unsigned char *)(v56 + 32);
    unint64_t v25 = 1 << v24;
    if (v21 >= 1 << v24) {
      goto LABEL_31;
    }
    uint64_t v23 = v54;
    uint64_t v45 = *(void *)(v54 + 8 * v27);
    if ((v45 & v64) == 0) {
      goto LABEL_32;
    }
    LODWORD(v20) = v53;
    if (*(_DWORD *)(v56 + 36) != v53) {
      goto LABEL_33;
    }
    unint64_t v46 = v45 & (-2 << (v21 & 0x3F));
    if (v46)
    {
      unint64_t v25 = __clz(__rbit64(v46)) | v21 & 0xFFFFFFFFFFFFFFC0;
      int64_t v26 = v52;
    }
    else
    {
      unint64_t v47 = v27 + 1;
      unint64_t v48 = (v25 + 63) >> 6;
      int64_t v26 = v52;
      if (v27 + 1 < v48)
      {
        unint64_t v49 = *(void *)(v54 + 8 * v47);
        if (!v49)
        {
          unint64_t v47 = v27 + 2;
          if (v27 + 2 >= v48) {
            goto LABEL_4;
          }
          unint64_t v49 = *(void *)(v54 + 8 * v47);
          if (!v49)
          {
            while (v48 - 3 != v27)
            {
              unint64_t v49 = *(void *)(v51 + 8 * v27++);
              if (v49)
              {
                unint64_t v47 = v27 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        unint64_t v25 = __clz(__rbit64(v49)) + (v47 << 6);
      }
    }
LABEL_4:
    uint64_t v22 = v63 + 1;
    uint64_t v21 = v25;
    if (v63 + 1 == v26)
    {
      swift_release();
      return v42;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t MetadataStoring.expiredRecordIDs()(uint64_t a1, uint64_t a2)
{
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v4 = MEMORY[0x270FA5388](v61);
  uint64_t v60 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v59 = (uint64_t)&v49 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v58 = (uint64_t)&v49 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v57 = (uint64_t)&v49 - v10;
  uint64_t v11 = type metadata accessor for Record.ID(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 24))(a1);
  uint64_t v16 = sub_25B222D1C(v15);
  swift_bridgeObjectRelease();
  int64_t v17 = v16[2];
  if (!v17)
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v65 = MEMORY[0x263F8EE78];
  sub_25B2240E0(0, v17, 0);
  uint64_t result = sub_25B1A7EF4((uint64_t)v16);
  uint64_t v20 = result;
  uint64_t v21 = 0;
  uint64_t v22 = v16 + 8;
  char v23 = *((unsigned char *)v16 + 32);
  uint64_t v50 = v16 + 11;
  int64_t v51 = v17;
  uint64_t v55 = v16;
  uint64_t v56 = v12;
  uint64_t v52 = v19;
  uint64_t v53 = v16 + 8;
  uint64_t v54 = v14;
  while ((v20 & 0x8000000000000000) == 0 && v20 < 1 << v23)
  {
    unint64_t v26 = (unint64_t)v20 >> 6;
    if ((v22[(unint64_t)v20 >> 6] & (1 << v20)) == 0) {
      goto LABEL_29;
    }
    if (*((_DWORD *)v16 + 9) != v19) {
      goto LABEL_30;
    }
    uint64_t v62 = v21;
    uint64_t v63 = 1 << v20;
    uint64_t v27 = v61;
    uint64_t v28 = v57;
    uint64_t v29 = v57 + *(int *)(v61 + 48);
    uint64_t v30 = v16[6];
    uint64_t v64 = *(void *)(v12 + 72);
    sub_25B22A704(v30 + v64 * v20, v57, type metadata accessor for Record.ID);
    uint64_t v31 = v16[7];
    uint64_t v32 = type metadata accessor for RecordMetadata();
    sub_25B22A704(v31 + *(void *)(*(void *)(v32 - 8) + 72) * v20, v29, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v33 = v58;
    sub_25B22A704(v28, v58, type metadata accessor for Record.ID);
    sub_25B22A704(v29, v33 + *(int *)(v27 + 48), (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v34 = v59;
    sub_25B187574(v33, v59, &qword_26A4D9860);
    uint64_t v35 = v28;
    uint64_t v36 = (uint64_t)v54;
    sub_25B116DE0(v35, &qword_26A4D9860);
    uint64_t v37 = *(int *)(v27 + 48);
    uint64_t v38 = v60;
    uint64_t v39 = v60 + v37;
    uint64_t v40 = v34 + v37;
    sub_25B22A704(v34, v60, type metadata accessor for Record.ID);
    sub_25B22A704(v40, v39, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    sub_25B22A7CC(v38, v36, type metadata accessor for Record.ID);
    sub_25B22A76C(v39, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    sub_25B116DE0(v34, &qword_26A4D9860);
    uint64_t v41 = v65;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25B2240E0(0, *(void *)(v41 + 16) + 1, 1);
      uint64_t v41 = v65;
    }
    unint64_t v43 = *(void *)(v41 + 16);
    unint64_t v42 = *(void *)(v41 + 24);
    uint64_t v12 = v56;
    if (v43 >= v42 >> 1)
    {
      sub_25B2240E0(v42 > 1, v43 + 1, 1);
      uint64_t v41 = v65;
    }
    *(void *)(v41 + 16) = v43 + 1;
    uint64_t result = sub_25B22A7CC(v36, v41+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ v43 * v64, type metadata accessor for Record.ID);
    uint64_t v16 = v55;
    char v23 = *((unsigned char *)v55 + 32);
    unint64_t v24 = 1 << v23;
    if (v20 >= 1 << v23) {
      goto LABEL_31;
    }
    uint64_t v22 = v53;
    uint64_t v44 = v53[v26];
    if ((v44 & v63) == 0) {
      goto LABEL_32;
    }
    LODWORD(v19) = v52;
    if (*((_DWORD *)v55 + 9) != v52) {
      goto LABEL_33;
    }
    unint64_t v45 = v44 & (-2 << (v20 & 0x3F));
    if (v45)
    {
      unint64_t v24 = __clz(__rbit64(v45)) | v20 & 0xFFFFFFFFFFFFFFC0;
      int64_t v25 = v51;
    }
    else
    {
      unint64_t v46 = v26 + 1;
      unint64_t v47 = (v24 + 63) >> 6;
      int64_t v25 = v51;
      if (v26 + 1 < v47)
      {
        unint64_t v48 = v53[v46];
        if (!v48)
        {
          unint64_t v46 = v26 + 2;
          if (v26 + 2 >= v47) {
            goto LABEL_4;
          }
          unint64_t v48 = v53[v46];
          if (!v48)
          {
            while (v47 - 3 != v26)
            {
              unint64_t v48 = v50[v26++];
              if (v48)
              {
                unint64_t v46 = v26 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        unint64_t v24 = __clz(__rbit64(v48)) + (v46 << 6);
      }
    }
LABEL_4:
    uint64_t v21 = v62 + 1;
    uint64_t v20 = v24;
    if (v62 + 1 == v25)
    {
      swift_release();
      return v41;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_25B2163DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v45 = a4;
  uint64_t v50 = a2;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v44 = *(void *)(v53 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v53);
  uint64_t v49 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v57 = (uint64_t)&v44 - v9;
  MEMORY[0x270FA5388](v8);
  unint64_t v48 = (char *)&v44 - v10;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v46 = a1 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v47 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v52 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  uint64_t v51 = a3;
  uint64_t v17 = v57;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v54 = (v14 - 1) & v14;
  int64_t v55 = v16;
  for (unint64_t i = __clz(__rbit64(v14)) | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (j << 6))
  {
    uint64_t v23 = v52;
    uint64_t v24 = *(void *)(v52 + 48);
    uint64_t v25 = sub_25B290080();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = v26;
    uint64_t v28 = v24 + *(void *)(v26 + 72) * i;
    uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    uint64_t v29 = (uint64_t)v48;
    v56(v48, v28, v25);
    uint64_t v30 = *(void *)(v23 + 56);
    uint64_t v31 = (int *)(type metadata accessor for PairingRelationship() - 8);
    uint64_t v32 = v30 + *(void *)(*(void *)v31 + 72) * i;
    uint64_t v33 = v53;
    sub_25B22A704(v32, v29 + *(int *)(v53 + 48), (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B187574(v29, v17, &qword_26A4D9EE8);
    uint64_t v34 = *(int *)(v33 + 48);
    uint64_t v35 = v49;
    uint64_t v36 = (uint64_t)&v49[v34];
    uint64_t v37 = v17 + v34;
    v56(v49, v17, v25);
    sub_25B22A704(v37, v36, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    uint64_t v38 = (uint64_t *)(v36 + v31[7]);
    uint64_t v39 = *v38;
    uint64_t v40 = v38[1];
    swift_bridgeObjectRetain();
    sub_25B22A76C(v36, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    if (v39 == v50 && v40 == v51)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v35, v25);
LABEL_28:
      swift_release();
      uint64_t v43 = v45;
      sub_25B187574(v57, v45, &qword_26A4D9EE8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v43, 0, 1, v53);
      return swift_bridgeObjectRelease();
    }
    char v42 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v35, v25);
    if (v42) {
      goto LABEL_28;
    }
    uint64_t result = sub_25B116DE0(v57, &qword_26A4D9EE8);
    unint64_t v14 = v54;
    int64_t v16 = v55;
    if (v54) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v19 >= v47) {
      goto LABEL_29;
    }
    unint64_t v20 = *(void *)(v46 + 8 * v19);
    int64_t j = v16 + 1;
    if (v20) {
      goto LABEL_19;
    }
    int64_t j = v16 + 2;
    if (v16 + 2 >= v47) {
      goto LABEL_29;
    }
    unint64_t v20 = *(void *)(v46 + 8 * j);
    if (v20) {
      goto LABEL_19;
    }
    int64_t j = v16 + 3;
    if (v16 + 3 >= v47) {
      goto LABEL_29;
    }
    unint64_t v20 = *(void *)(v46 + 8 * j);
    if (v20) {
      goto LABEL_19;
    }
    int64_t j = v16 + 4;
    if (v16 + 4 >= v47) {
      goto LABEL_29;
    }
    unint64_t v20 = *(void *)(v46 + 8 * j);
    if (v20) {
      goto LABEL_19;
    }
    uint64_t v22 = v16 + 5;
    if (v16 + 5 >= v47)
    {
LABEL_29:
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v45, 1, 1, v53);
      return swift_bridgeObjectRelease();
    }
    unint64_t v20 = *(void *)(v46 + 8 * v22);
    for (int64_t j = v16 + 5; !v20; ++v22)
    {
      int64_t j = v22 + 1;
      if (__OFADD__(v22, 1)) {
        goto LABEL_32;
      }
      if (j >= v47) {
        goto LABEL_29;
      }
      unint64_t v20 = *(void *)(v46 + 8 * j);
    }
LABEL_19:
    uint64_t v54 = (v20 - 1) & v20;
    int64_t v55 = j;
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_25B216894(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v20 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    ++v3;
    if (!v17)
    {
      int64_t v3 = v16 + 1;
      if (v16 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v17 = *(void *)(v4 + 8 * v3);
      if (!v17)
      {
        int64_t v3 = v16 + 2;
        if (v16 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v17 = *(void *)(v4 + 8 * v3);
        if (!v17)
        {
          int64_t v3 = v16 + 3;
          if (v16 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v17 = *(void *)(v4 + 8 * v3);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v10 = __clz(__rbit64(v17)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    uint64_t v14 = v11[2];
    uint64_t v15 = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B219270(&v19, v12, v13, v14, v15);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v8)
  {
LABEL_23:
    swift_release();
    return v20;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
    int64_t v3 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v3);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25B216A3C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v58 = a4;
  uint64_t v64 = a3;
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v62 = v9;
  uint64_t v63 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v56 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB268);
  MEMORY[0x270FA5388](v59);
  uint64_t v60 = (uint64_t)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v57 = (uint64_t)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v61 = (char *)&v55 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v55 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D93A8);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for RecordMetadata();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)(a6 + 8) + 24))(a5);
  if (*(void *)(v27 + 16) && (unint64_t v28 = sub_25B18A8D0(a1), (v29 & 1) != 0))
  {
    sub_25B22A704(*(void *)(v27 + 56) + *(void *)(v24 + 72) * v28, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v22, 0, 1, v23);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v22, 1, 1, v23);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_25B116DE0((uint64_t)v22, &qword_26A4D93A8);
  }
  else
  {
    sub_25B22A7CC((uint64_t)v22, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    if (*(void *)(*(void *)(v64 + *(int *)(type metadata accessor for PairingRelationship() + 20) + 96) + 16))
    {
      uint64_t v30 = a1[4];
      uint64_t v31 = a1[5];
      uint64_t v33 = a1[2];
      uint64_t v32 = a1[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B18A768(v33, v32, v30, v31);
      char v35 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v35)
      {
        uint64_t v37 = v62;
        uint64_t v36 = v63;
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
        v38(v19, &v26[*(int *)(v23 + 24)], v62);
        uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
        uint64_t v40 = 1;
        v39(v19, 0, 1, v37);
        uint64_t v41 = *v58;
        if (*(void *)(*v58 + 16) && (unint64_t v42 = sub_25B18A8D0(a1), (v43 & 1) != 0))
        {
          uint64_t v44 = v62;
          v38(v61, (char *)(*(void *)(v41 + 56) + *(void *)(v63 + 72) * v42), v62);
          uint64_t v40 = 0;
        }
        else
        {
          uint64_t v44 = v62;
        }
        uint64_t v47 = (uint64_t)v61;
        v39(v61, v40, 1, v44);
        uint64_t v48 = v60;
        uint64_t v49 = v60 + *(int *)(v59 + 48);
        sub_25B187628((uint64_t)v19, v60, &qword_26B33F200);
        sub_25B187628(v47, v49, &qword_26B33F200);
        uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
        if (v50(v48, 1, v44) == 1)
        {
          sub_25B116DE0(v47, &qword_26B33F200);
          sub_25B116DE0((uint64_t)v19, &qword_26B33F200);
          sub_25B22A76C((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
          if (v50(v49, 1, v44) == 1)
          {
            sub_25B116DE0(v48, &qword_26B33F200);
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v51 = v57;
          sub_25B187628(v48, v57, &qword_26B33F200);
          if (v50(v49, 1, v44) != 1)
          {
            uint64_t v52 = v63;
            uint64_t v53 = v56;
            (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v56, v49, v44);
            sub_25B22A6BC((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
            LODWORD(v64) = sub_25B290580();
            uint64_t v54 = *(void (**)(char *, uint64_t))(v52 + 8);
            v54(v53, v44);
            sub_25B116DE0((uint64_t)v61, &qword_26B33F200);
            sub_25B116DE0((uint64_t)v19, &qword_26B33F200);
            sub_25B22A76C((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
            v54((char *)v51, v44);
            sub_25B116DE0(v48, &qword_26B33F200);
            char v45 = v64 ^ 1;
            return v45 & 1;
          }
          sub_25B116DE0(v47, &qword_26B33F200);
          sub_25B116DE0((uint64_t)v19, &qword_26B33F200);
          sub_25B22A76C((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
          (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v51, v44);
        }
        sub_25B116DE0(v48, (uint64_t *)&unk_26A4DB268);
        char v45 = 1;
        return v45 & 1;
      }
    }
    sub_25B22A76C((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  }
LABEL_13:
  char v45 = 0;
  return v45 & 1;
}

uint64_t MetadataStoring.recordVersions(for:zoneIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for MetadataRecordPredicate();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B22A704(a1, (uint64_t)&v11[*(int *)(v9 + 40)], (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  *(_WORD *)uint64_t v11 = 258;
  id v11[2] = 2;
  *((void *)v11 + 1) = a2;
  swift_bridgeObjectRetain();
  uint64_t v12 = MetadataStoring.recordVersions(matching:)((uint64_t)v11, a3, a4);
  sub_25B22A76C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MetadataRecordPredicate);
  return v12;
}

uint64_t sub_25B217250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (void *)((char *)v24 - v15);
  uint64_t v17 = a2 + *(int *)(v14 + 48);
  uint64_t result = RecordMetadata.matches(predicate:)(a3);
  if (result)
  {
    uint64_t v19 = (uint64_t)v16 + *(int *)(v10 + 48);
    v24[1] = a1;
    sub_25B22A704(a2, (uint64_t)v16, type metadata accessor for Record.ID);
    v24[3] = v3;
    sub_25B22A704(v17, v19, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v20 = (uint64_t)&v13[*(int *)(v10 + 48)];
    sub_25B22A704(a2, (uint64_t)v13, type metadata accessor for Record.ID);
    sub_25B22A704(v17, v20, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v21 = v20 + *(int *)(type metadata accessor for RecordMetadata() + 24);
    uint64_t v22 = sub_25B290080();
    uint64_t v23 = *(void *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v9, v21, v22);
    sub_25B22A76C(v20, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v9, 0, 1, v22);
    sub_25B20E578((uint64_t)v9, v16);
    sub_25B22A76C((uint64_t)v13, type metadata accessor for Record.ID);
    return sub_25B22A76C(v19, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  }
  return result;
}

uint64_t sub_25B2174D8(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_25B290080();
  uint64_t v27 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.ID(0);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(int *)(v13 + 56);
  uint64_t v17 = (uint64_t)&v15[v16];
  uint64_t v18 = a1 + v16;
  sub_25B22A704(a1, (uint64_t)v15, type metadata accessor for Record.ID);
  uint64_t v19 = v18;
  uint64_t v20 = v27;
  sub_25B22A704(v19, v17, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  sub_25B22A704(v17, (uint64_t)v11, type metadata accessor for Record.ID);
  sub_25B22A76C(v17, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  sub_25B22A704((uint64_t)&v11[*(int *)(v9 + 32)], (uint64_t)v7, type metadata accessor for Record.ID.Ownership);
  sub_25B22A76C((uint64_t)v11, type metadata accessor for Record.ID);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v7, 1, v3) == 1)
  {
    char v21 = 0;
  }
  else
  {
    uint64_t v22 = v25;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v7, v3);
    char v21 = sub_25B290030();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v3);
  }
  sub_25B22A76C((uint64_t)v15, type metadata accessor for Record.ID);
  return v21 & 1;
}

uint64_t sub_25B2177D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25B22A704(a1, (uint64_t)v12, type metadata accessor for Record.ID);
  sub_25B22A704(a2, (uint64_t)v12 + *(int *)(v10 + 56), (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  LOBYTE(a5) = sub_25B2178F0(v12, a4, a5);
  sub_25B116DE0((uint64_t)v12, &qword_26A4D9860);
  return a5 & 1;
}

uint64_t sub_25B2178F0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v37 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25B290080();
  uint64_t v41 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v36 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D93A8);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for RecordMetadata();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a3;
  uint64_t v40 = v3;
  char v21 = *(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 24);
  uint64_t v38 = a2;
  uint64_t v22 = v21(a2);
  if (*(void *)(v22 + 16) && (unint64_t v23 = sub_25B18A8D0(a1), (v24 & 1) != 0))
  {
    sub_25B22A704(*(void *)(v22 + 56) + *(void *)(v18 + 72) * v23, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_25B116DE0((uint64_t)v16, &qword_26A4D93A8);
    return 0;
  }
  else
  {
    sub_25B22A7CC((uint64_t)v16, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v26 = type metadata accessor for Record.ID(0);
    sub_25B22A704((uint64_t)a1 + *(int *)(v26 + 24), (uint64_t)v13, type metadata accessor for Record.ID.Ownership);
    uint64_t v27 = v41;
    uint64_t v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v13, 1, v9);
    if (v28 == 1)
    {
      uint64_t v25 = *(void *)&v20[*(int *)(v17 + 28)];
      if (v25)
      {
        MEMORY[0x270FA5388](v28);
        uint64_t v29 = v39;
        *(&v35 - 4) = v38;
        *(&v35 - 3) = v29;
        *(&v35 - 2) = v40;
        swift_bridgeObjectRetain();
        uint64_t v30 = *(void *)(sub_25B210280((uint64_t (*)(char *))sub_25B22A698, (uint64_t)(&v35 - 6), v25, &qword_26B33F200, MEMORY[0x263F07508], (void (*)(BOOL, uint64_t, uint64_t))sub_25B224084)+ 16);
        swift_bridgeObjectRelease();
        uint64_t v25 = v30 == 0;
      }
      sub_25B22A76C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    }
    else
    {
      uint64_t v31 = (uint64_t)v36;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v36, v13, v9);
      uint64_t v32 = v37;
      MetadataStoring.pairingRelationship(relationshipID:)(v31, v38, v39, v37);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v31, v9);
      sub_25B22A76C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t v33 = type metadata accessor for PairingRelationship();
      uint64_t v25 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33) == 1;
      sub_25B116DE0(v32, &qword_26A4D9610);
    }
  }
  return v25;
}

BOOL sub_25B217DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9610);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MetadataStoring.pairingRelationship(relationshipID:)(a1, a3, a4, (uint64_t)v9);
  uint64_t v10 = type metadata accessor for PairingRelationship();
  BOOL v11 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10) != 1;
  sub_25B116DE0((uint64_t)v9, &qword_26A4D9610);
  return v11;
}

uint64_t sub_25B217F04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v13 = MEMORY[0x263F8D310];
  uint64_t v14 = MEMORY[0x263F8D318];
  *(void *)&long long v12 = a1;
  *((void *)&v12 + 1) = a2;
  type metadata accessor for PropertyListTypeEncoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0;
  *(unsigned char *)(inited + 24) = 1;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_25B281964(&v12);
  if (v3) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
  uint64_t v6 = sub_25B2851A4(v5);
  unint64_t v8 = v7;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  switch(v8 >> 62)
  {
    case 1uLL:
      if (v6 >> 32 < (int)v6) {
        __break(1u);
      }
      sub_25B114300(v6, v8);
      sub_25B1E3F04((int)v6, v6 >> 32);
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(v6 + 16);
      uint64_t v11 = *(void *)(v6 + 24);
      sub_25B114300(v6, v8);
      swift_retain();
      swift_retain();
      sub_25B1E3F04(v10, v11);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      sub_25B2904A0();
      sub_25B22A6BC((unint64_t *)&qword_26B33F220, MEMORY[0x263F047F8]);
      *(void *)&long long v12 = 0;
      *(void *)((char *)&v12 + 6) = 0;
      goto LABEL_8;
    default:
      *(void *)&long long v12 = v6;
      WORD4(v12) = v8;
      BYTE10(v12) = BYTE2(v8);
      BYTE11(v12) = BYTE3(v8);
      BYTE12(v12) = BYTE4(v8);
      BYTE13(v12) = BYTE5(v8);
      sub_25B2904A0();
      sub_25B22A6BC((unint64_t *)&qword_26B33F220, MEMORY[0x263F047F8]);
LABEL_8:
      sub_25B290450();
      break;
  }
  sub_25B10DFF0(v6, v8);
  return sub_25B10DFF0(v6, v8);
}

void *sub_25B21822C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91C0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25B227840(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25B21833C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25B2183A4(a1, a2, a3, a4, (uint64_t *)&unk_26A4D9D20, (uint64_t (*)(void))type metadata accessor for RecordMetadata, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
}

uint64_t sub_25B218370(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25B2183A4(a1, a2, a3, a4, &qword_26A4D9D60, MEMORY[0x263F8F0C8], MEMORY[0x263F8F0C8]);
}

uint64_t sub_25B2183A4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_25B290BB0();
    __break(1u);
    return result;
  }
  _OWORD v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25B22A3E0(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_25B218624(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D50);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25B2280DC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_25B21874C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_25B218B5C(a1, a2, a3, a4, &qword_26A4DB298, (uint64_t *)&unk_26A4DB2A0);
}

void *sub_25B218760(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9D40);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25B229E28(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25B218870(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25B2183A4(a1, a2, a3, a4, &qword_26A4DB278, type metadata accessor for Replicator.SyncItem, type metadata accessor for Replicator.SyncItem);
}

void *sub_25B2188A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D70);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25B229F1C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25B2189B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25B2183A4(a1, a2, a3, a4, &qword_26A4D9D00, MEMORY[0x263F07508], MEMORY[0x263F07508]);
}

uint64_t sub_25B2189E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25B2183A4(a1, a2, a3, a4, &qword_26A4DB220, MEMORY[0x263F07490], MEMORY[0x263F07490]);
}

void *sub_25B218A1C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB200);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 176);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[22 * v8 + 4]) {
          memmove(v12, a4 + 4, 176 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25B22A028(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_25B218B48(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_25B218B5C(a1, a2, a3, a4, &qword_26A4D9D30, &qword_26A4D9618);
}

void *sub_25B218B5C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      v13[2] = v11;
      void v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25B22A53C(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_25B218C78(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F4A8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25B22A8F8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25B218D9C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_25B291210();
  swift_bridgeObjectRetain();
  sub_25B290630();
  uint64_t v8 = sub_25B291260();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_25B290FB0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_25B290FB0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_25B21ACD8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_25B218F4C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_25B290530();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    int64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      BOOL v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_25B22A6BC((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
      char v21 = sub_25B290580();
      unint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      int64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    int64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_25B21AE74((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_25B219270(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  sub_25B291210();
  swift_bridgeObjectRetain();
  sub_25B290630();
  sub_25B290630();
  uint64_t v11 = sub_25B291260();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v15 = ~v12;
    uint64_t v16 = *(void *)(v10 + 48);
    while (1)
    {
      uint64_t v17 = (void *)(v16 + 32 * v13);
      uint64_t v18 = v17[2];
      uint64_t v19 = v17[3];
      BOOL v20 = *v17 == a2 && v17[1] == a3;
      if (v20 || (sub_25B290FB0() & 1) != 0)
      {
        BOOL v21 = v18 == a4 && v19 == a5;
        if (v21 || (sub_25B290FB0() & 1) != 0) {
          break;
        }
      }
      unint64_t v13 = (v13 + 1) & v15;
      if (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v22 = (uint64_t *)(*(void *)(*v28 + 48) + 32 * v13);
    uint64_t v23 = v22[1];
    uint64_t v24 = v22[2];
    uint64_t v25 = v22[3];
    *a1 = *v22;
    a1[1] = v23;
    a1[2] = v24;
    a1[3] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v28;
    *uint64_t v28 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B21B114(a2, a3, a4, a5, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v28 = v30;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    uint64_t result = 1;
    a1[2] = a4;
    a1[3] = a5;
  }
  return result;
}

uint64_t sub_25B219478(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_25B291210();
  sub_25B291250();
  uint64_t v6 = sub_25B291260();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_25B21B2DC(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_25B219598(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_25B291210();
  sub_25B291220();
  swift_bridgeObjectRetain();
  if (a3) {
    sub_25B290630();
  }
  uint64_t v8 = sub_25B291260();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_25B21B42C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v11 = ~v9;
  uint64_t v12 = *(void *)(v7 + 48);
  while (1)
  {
    uint64_t v13 = (void *)(v12 + 16 * v10);
    uint64_t v14 = v13[1];
    if (v14) {
      break;
    }
    if (!a3) {
      goto LABEL_15;
    }
LABEL_6:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      goto LABEL_16;
    }
  }
  if (!a3) {
    goto LABEL_6;
  }
  BOOL v15 = *v13 == a2 && v14 == a3;
  if (!v15 && (sub_25B290FB0() & 1) == 0) {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
  uint64_t v17 = v16[1];
  *a1 = *v16;
  a1[1] = v17;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_25B219754()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8C0);
  uint64_t v3 = sub_25B290A80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_25B291210();
      sub_25B290630();
      uint64_t result = sub_25B291260();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_25B219A34()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_25B290080();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8C8);
  uint64_t v5 = sub_25B290A80();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]);
      uint64_t result = sub_25B290530();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_25B219E30()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EC0);
  uint64_t v3 = sub_25B290A80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v33 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v32 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32) {
          goto LABEL_33;
        }
        unint64_t v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v16 = v33[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v16 = v33[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v33 = -1 << v31;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v33[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = v19[2];
      uint64_t v23 = v19[3];
      sub_25B291210();
      sub_25B290630();
      sub_25B290630();
      uint64_t result = sub_25B291260();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      unint64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
      *unint64_t v12 = v20;
      v12[1] = v21;
      v12[2] = v22;
      v12[3] = v23;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_25B21A14C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9F60);
  uint64_t result = sub_25B290A80();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_25B291210();
      sub_25B291250();
      uint64_t result = sub_25B291260();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_25B21A3F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v44 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.ID(0);
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  MEMORY[0x270FA5388](v8);
  int64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB2B0);
  uint64_t v12 = sub_25B290A80();
  uint64_t v13 = v12;
  if (*(void *)(v11 + 16))
  {
    char v14 = *(unsigned char *)(v11 + 32);
    uint64_t v15 = *(void *)(v11 + 56);
    uint64_t v46 = (void *)(v11 + 56);
    uint64_t v16 = 1 << v14;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & v15;
    int64_t v45 = (unint64_t)(v16 + 63) >> 6;
    uint64_t v48 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    char v43 = (void (**)(char *, uint64_t, uint64_t))(v3 + 32);
    uint64_t v41 = v0;
    uint64_t v42 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v19 = v12 + 56;
    uint64_t result = swift_retain();
    int64_t v21 = 0;
    uint64_t v49 = v7;
    uint64_t v50 = v2;
    for (i = v11; ; uint64_t v11 = i)
    {
      if (v18)
      {
        unint64_t v23 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v24 = v23 | (v21 << 6);
      }
      else
      {
        int64_t v25 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v25 >= v45) {
          goto LABEL_36;
        }
        unint64_t v26 = v46[v25];
        ++v21;
        if (!v26)
        {
          int64_t v21 = v25 + 1;
          if (v25 + 1 >= v45) {
            goto LABEL_36;
          }
          unint64_t v26 = v46[v21];
          if (!v26)
          {
            int64_t v21 = v25 + 2;
            if (v25 + 2 >= v45) {
              goto LABEL_36;
            }
            unint64_t v26 = v46[v21];
            if (!v26)
            {
              int64_t v27 = v25 + 3;
              if (v27 >= v45)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v41;
                uint64_t v40 = 1 << *(unsigned char *)(v11 + 32);
                if (v40 > 63) {
                  bzero(v46, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v46 = -1 << v40;
                }
                *(void *)(v11 + 16) = 0;
                break;
              }
              unint64_t v26 = v46[v27];
              if (!v26)
              {
                while (1)
                {
                  int64_t v21 = v27 + 1;
                  if (__OFADD__(v27, 1)) {
                    goto LABEL_42;
                  }
                  if (v21 >= v45) {
                    goto LABEL_36;
                  }
                  unint64_t v26 = v46[v21];
                  ++v27;
                  if (v26) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v27;
            }
          }
        }
LABEL_23:
        unint64_t v18 = (v26 - 1) & v26;
        unint64_t v24 = __clz(__rbit64(v26)) + (v21 << 6);
      }
      uint64_t v28 = *(void *)(v11 + 48);
      uint64_t v29 = *(void *)(v51 + 72);
      sub_25B22A7CC(v28 + v29 * v24, (uint64_t)v10, type metadata accessor for Record.ID);
      sub_25B291210();
      swift_bridgeObjectRetain();
      sub_25B290630();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B290630();
      sub_25B290630();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v30 = (uint64_t)v49;
      sub_25B22A704((uint64_t)&v10[*(int *)(v52 + 24)], (uint64_t)v49, type metadata accessor for Record.ID.Ownership);
      uint64_t v31 = v50;
      if ((*v48)(v30, 1, v50) == 1)
      {
        sub_25B291220();
      }
      else
      {
        int64_t v32 = v44;
        (*v43)(v44, v30, v31);
        sub_25B291220();
        sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]);
        sub_25B290540();
        (*v42)(v32, v31);
      }
      uint64_t result = sub_25B291260();
      uint64_t v33 = -1 << *(unsigned char *)(v13 + 32);
      unint64_t v34 = result & ~v33;
      unint64_t v35 = v34 >> 6;
      if (((-1 << v34) & ~*(void *)(v19 + 8 * (v34 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v34) & ~*(void *)(v19 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v36 = 0;
        unint64_t v37 = (unint64_t)(63 - v33) >> 6;
        do
        {
          if (++v35 == v37 && (v36 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v38 = v35 == v37;
          if (v35 == v37) {
            unint64_t v35 = 0;
          }
          v36 |= v38;
          uint64_t v39 = *(void *)(v19 + 8 * v35);
        }
        while (v39 == -1);
        unint64_t v22 = __clz(__rbit64(~v39)) + (v35 << 6);
      }
      *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      uint64_t result = sub_25B22A7CC((uint64_t)v10, *(void *)(v13 + 48) + v22 * v29, type metadata accessor for Record.ID);
      ++*(void *)(v13 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v13;
  return result;
}

uint64_t sub_25B21A9DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA8B0);
  uint64_t v3 = sub_25B290A80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_35;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_35;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_35;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_35:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_41;
                  }
                  if (v11 >= v8) {
                    goto LABEL_35;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      sub_25B291210();
      sub_25B291220();
      if (v20) {
        sub_25B290630();
      }
      uint64_t result = sub_25B291260();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v21;
      v13[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_25B21ACD8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_25B219754();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_25B1A1734();
      goto LABEL_22;
    }
    sub_25B21B5D0();
  }
  uint64_t v11 = *v4;
  sub_25B291210();
  sub_25B290630();
  uint64_t result = sub_25B291260();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_25B290FB0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_25B291180();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_25B290FB0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_25B21AE74(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_25B219A34();
  }
  else
  {
    if (v11 > v10)
    {
      sub_25B1A18E8();
      goto LABEL_12;
    }
    sub_25B21B880();
  }
  uint64_t v12 = *v3;
  sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]);
  uint64_t v13 = sub_25B290530();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_25B22A6BC((unint64_t *)&qword_26A4DA8D0, MEMORY[0x263F07508]);
      char v21 = sub_25B290580();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_25B291180();
  __break(1u);
  return result;
}

uint64_t sub_25B21B114(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v11 = result;
  unint64_t v12 = *(void *)(*v6 + 16);
  unint64_t v13 = *(void *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0) {
    goto LABEL_22;
  }
  if (a6)
  {
    sub_25B219E30();
  }
  else
  {
    if (v13 > v12)
    {
      uint64_t result = (uint64_t)sub_25B1A1B8C();
      goto LABEL_22;
    }
    sub_25B21BC30();
  }
  uint64_t v14 = *v6;
  sub_25B291210();
  sub_25B290630();
  sub_25B290630();
  uint64_t result = sub_25B291260();
  uint64_t v15 = -1 << *(unsigned char *)(v14 + 32);
  a5 = result & ~v15;
  uint64_t v16 = v14 + 56;
  if ((*(void *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5))
  {
    uint64_t v17 = ~v15;
    uint64_t v18 = *(void *)(v14 + 48);
    while (1)
    {
      uint64_t v19 = (void *)(v18 + 32 * a5);
      uint64_t v20 = v19[2];
      uint64_t v21 = v19[3];
      BOOL v22 = *v19 == v11 && v19[1] == a2;
      if (v22 || (uint64_t result = sub_25B290FB0(), (result & 1) != 0))
      {
        if (v20 == a3 && v21 == a4) {
          break;
        }
        uint64_t result = sub_25B290FB0();
        if (result) {
          break;
        }
      }
      a5 = (a5 + 1) & v17;
      if (((*(void *)(v16 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) == 0) {
        goto LABEL_22;
      }
    }
    uint64_t result = sub_25B291180();
    __break(1u);
  }
LABEL_22:
  uint64_t v24 = *v29;
  *(void *)(*v29 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  uint64_t v25 = (uint64_t *)(*(void *)(v24 + 48) + 32 * a5);
  *uint64_t v25 = v11;
  v25[1] = a2;
  void v25[2] = a3;
  v25[3] = a4;
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27) {
    __break(1u);
  }
  else {
    *(void *)(v24 + 16) = v28;
  }
  return result;
}

uint64_t sub_25B21B2DC(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_25B21A14C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_25B1A1D50();
      goto LABEL_14;
    }
    sub_25B21BF1C();
  }
  uint64_t v8 = *v3;
  sub_25B291210();
  sub_25B291250();
  uint64_t result = sub_25B291260();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_25B291180();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_25B21B42C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  int v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_25B21A9DC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_25B1A2148();
      goto LABEL_22;
    }
    sub_25B21C74C();
  }
  uint64_t v11 = *v4;
  sub_25B291210();
  sub_25B291220();
  if (a2) {
    sub_25B290630();
  }
  uint64_t result = sub_25B291260();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v11 + 48);
    do
    {
      uint64_t v16 = (void *)(v15 + 16 * a3);
      uint64_t v17 = v16[1];
      if (v17)
      {
        if (a2)
        {
          BOOL v18 = *v16 == v8 && v17 == a2;
          if (v18 || (uint64_t result = sub_25B290FB0(), (result & 1) != 0))
          {
LABEL_21:
            uint64_t result = sub_25B291180();
            __break(1u);
            break;
          }
        }
      }
      else if (!a2)
      {
        goto LABEL_21;
      }
      a3 = (a3 + 1) & v14;
    }
    while (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_22:
  uint64_t v19 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v20 = (uint64_t *)(*(void *)(v19 + 48) + 16 * a3);
  *uint64_t v20 = v8;
  v20[1] = a2;
  uint64_t v21 = *(void *)(v19 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v19 + 16) = v23;
  }
  return result;
}

uint64_t sub_25B21B5D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8C0);
  uint64_t v3 = sub_25B290A80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_25B291210();
    swift_bridgeObjectRetain();
    sub_25B290630();
    uint64_t result = sub_25B291260();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25B21B880()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA8C8);
  uint64_t v7 = sub_25B290A80();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]);
    uint64_t result = sub_25B290530();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25B21BC30()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EC0);
  uint64_t v3 = sub_25B290A80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    unint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    sub_25B291210();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B290630();
    sub_25B290630();
    uint64_t result = sub_25B291260();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
    *unint64_t v12 = v19;
    v12[1] = v20;
    v12[2] = v21;
    v12[3] = v22;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25B21BF1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9F60);
  uint64_t result = sub_25B290A80();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_25B291210();
    sub_25B291250();
    uint64_t result = sub_25B291260();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25B21C198()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v43 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Record.ID(0);
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  MEMORY[0x270FA5388](v8);
  int64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB2B0);
  uint64_t v12 = sub_25B290A80();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v1 = v13;
    return result;
  }
  uint64_t v40 = v0;
  char v14 = *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 56);
  uint64_t v44 = v11 + 56;
  uint64_t v16 = 1 << v14;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v45 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v46 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  uint64_t v41 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v42 = (void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  uint64_t v19 = v12 + 56;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  uint64_t v47 = v7;
  uint64_t v48 = v2;
  while (1)
  {
    if (v18)
    {
      unint64_t v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      int64_t v51 = v21;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v45) {
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v44 + 8 * v25);
    int64_t v27 = v21 + 1;
    if (!v26)
    {
      int64_t v27 = v21 + 2;
      if (v21 + 2 >= v45) {
        goto LABEL_36;
      }
      unint64_t v26 = *(void *)(v44 + 8 * v27);
      if (!v26)
      {
        int64_t v27 = v21 + 3;
        if (v21 + 3 >= v45) {
          goto LABEL_36;
        }
        unint64_t v26 = *(void *)(v44 + 8 * v27);
        if (!v26) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v18 = (v26 - 1) & v26;
    int64_t v51 = v27;
    unint64_t v24 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_24:
    uint64_t v29 = *(void *)(v49 + 72);
    sub_25B22A704(*(void *)(v11 + 48) + v29 * v24, (uint64_t)v10, type metadata accessor for Record.ID);
    sub_25B291210();
    swift_bridgeObjectRetain();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B290630();
    sub_25B290630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)v47;
    sub_25B22A704((uint64_t)&v10[*(int *)(v50 + 24)], (uint64_t)v47, type metadata accessor for Record.ID.Ownership);
    uint64_t v31 = v48;
    if ((*v46)(v30, 1, v48) == 1)
    {
      sub_25B291220();
    }
    else
    {
      uint64_t v32 = v43;
      (*v42)(v43, v30, v31);
      sub_25B291220();
      sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]);
      sub_25B290540();
      (*v41)(v32, v31);
    }
    uint64_t result = sub_25B291260();
    uint64_t v33 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v19 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v34) & ~*(void *)(v19 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v19 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t result = sub_25B22A7CC((uint64_t)v10, *(void *)(v13 + 48) + v22 * v29, type metadata accessor for Record.ID);
    ++*(void *)(v13 + 16);
    int64_t v21 = v51;
  }
  uint64_t v28 = v21 + 4;
  if (v21 + 4 >= v45)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v40;
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v44 + 8 * v28);
  if (v26)
  {
    int64_t v27 = v21 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v45) {
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v44 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_25B21C74C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DA8B0);
  uint64_t v3 = sub_25B290A80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v29) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_35;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_35;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    sub_25B291210();
    sub_25B291220();
    if (v20)
    {
      swift_bridgeObjectRetain();
      sub_25B290630();
    }
    uint64_t result = sub_25B291260();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v21;
    v13[1] = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_35:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_37;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_25B21CA18(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_25B18A93C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_25B1933C8();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_25B290080();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_25B21E258(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_25B21CB10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_25B18A768(a1, a2, a3, a4);
  LOBYTE(a4) = v13;
  swift_bridgeObjectRelease();
  if (a4)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v6;
    uint64_t v25 = *v6;
    uint64_t *v6 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_25B193660();
      uint64_t v15 = v25;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v15 + 56);
    uint64_t v17 = sub_25B290080();
    uint64_t v24 = *(void *)(v17 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 32))(a5, v16 + *(void *)(v24 + 72) * v12, v17);
    sub_25B21E550(v12, v15);
    uint64_t *v6 = v15;
    swift_bridgeObjectRelease();
    int64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
    uint64_t v19 = a5;
    uint64_t v20 = 0;
    uint64_t v21 = v17;
  }
  else
  {
    uint64_t v22 = sub_25B290080();
    int64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    uint64_t v21 = v22;
    uint64_t v19 = a5;
    uint64_t v20 = 1;
  }
  return v18(v19, v20, 1, v21);
}

uint64_t sub_25B21CCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_25B18A634(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_25B19399C();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_25B21E7A4(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_25B21CDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5 = v4;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_25B18A768(a1, a2, a3, a4);
  LOBYTE(a4) = v11;
  swift_bridgeObjectRelease();
  if ((a4 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v5;
  uint64_t v16 = *v5;
  *char v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_25B1939A8();
    uint64_t v13 = v16;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(*(void *)(v13 + 56) + 8 * v10);
  sub_25B21E97C(v10, v13);
  *char v5 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_25B21CEA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_25B18A8D0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_25B193B78();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for Record.ID(0);
    sub_25B22A76C(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, type metadata accessor for Record.ID);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = sub_25B290080();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_25B21EB80(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_25B290080();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_25B21D06C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_25B18A9C0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_25B1949AC();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_25B21F40C(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_25B21D13C(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_25B18A93C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_25B194B60();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_25B290080();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_25B21E258(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_25B21D234@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = v6;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_25B18A93C(a1);
  LOBYTE(a1) = v15;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v11;
    uint64_t v29 = *v11;
    *uint64_t v11 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a5();
      uint64_t v17 = v29;
    }
    uint64_t v18 = *(void *)(v17 + 48);
    uint64_t v19 = sub_25B290080();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v14, v19);
    uint64_t v20 = *(void *)(v17 + 56);
    uint64_t v21 = a2(0);
    uint64_t v28 = *(void *)(v21 - 8);
    sub_25B22A7CC(v20 + *(void *)(v28 + 72) * v14, a6, a3);
    sub_25B21F0B8(v14, v17, a4);
    *uint64_t v11 = v17;
    swift_bridgeObjectRelease();
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v23 = a6;
    uint64_t v24 = 0;
    uint64_t v25 = v21;
  }
  else
  {
    uint64_t v26 = a2(0);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    uint64_t v25 = v26;
    uint64_t v23 = a6;
    uint64_t v24 = 1;
  }
  return v22(v23, v24, 1, v25);
}

uint64_t sub_25B21D420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_25B18A634(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_25B195458();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_25B22A7CC(v12 + *(void *)(v20 + 72) * v8, a3, type metadata accessor for NetworkMessenger.ExpiringConnection);
    sub_25B21F7F0(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_25B21D5C4(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_25B18A93C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_25B1958DC();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_25B290080();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  sub_25B21FA00(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_25B21D6D0@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_25B18AC48(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_25B19615C();
      uint64_t v9 = v11;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B180BD4((long long *)(*(void *)(v9 + 56) + 40 * v6), a2);
    sub_25B21FEEC(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

unint64_t sub_25B21D7E4(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  char v5 = *(void (***)(char *, uint64_t))(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v39 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for Record.ID(0);
  unint64_t result = MEMORY[0x270FA5388](v46);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a2 + 64;
  uint64_t v15 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v16 = (a1 + 1) & ~v15;
  if (((1 << v16) & *(void *)(a2 + 64 + 8 * (v16 >> 6))) != 0)
  {
    uint64_t v41 = v11;
    unint64_t v37 = v5;
    uint64_t v17 = ~v15;
    unint64_t result = sub_25B290A10();
    if ((*(void *)(v14 + 8 * (v16 >> 6)) & (1 << v16)) != 0)
    {
      unint64_t v42 = (result + 1) & v17;
      uint64_t v18 = *(void *)(v41 + 72);
      uint64_t v19 = v37;
      uint64_t v40 = (unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 6);
      uint64_t v41 = v18;
      ++v37;
      BOOL v38 = (void (**)(char *, char *, uint64_t))(v19 + 4);
      uint64_t v20 = v17;
      uint64_t v21 = v18;
      uint64_t v44 = a2 + 64;
      uint64_t v45 = a2;
      uint64_t v43 = v20;
      do
      {
        int64_t v22 = v21 * v16;
        sub_25B22A704(*(void *)(a2 + 48) + v21 * v16, (uint64_t)v13, type metadata accessor for Record.ID);
        sub_25B291210();
        swift_bridgeObjectRetain();
        sub_25B290630();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25B290630();
        sub_25B290630();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25B22A704((uint64_t)&v13[*(int *)(v46 + 24)], (uint64_t)v9, type metadata accessor for Record.ID.Ownership);
        if ((*v40)(v9, 1, v4) == 1)
        {
          sub_25B291220();
        }
        else
        {
          uint64_t v23 = v39;
          (*v38)(v39, v9, v4);
          sub_25B291220();
          sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]);
          sub_25B290540();
          (*v37)(v23, v4);
        }
        uint64_t v24 = sub_25B291260();
        unint64_t result = sub_25B22A76C((uint64_t)v13, type metadata accessor for Record.ID);
        uint64_t v25 = v43;
        unint64_t v26 = v24 & v43;
        uint64_t v14 = v44;
        a2 = v45;
        if ((uint64_t)a1 >= (uint64_t)v42)
        {
          uint64_t v21 = v41;
          if (v26 < v42) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v21 = v41;
          if (v26 >= v42) {
            goto LABEL_14;
          }
        }
        if ((uint64_t)a1 >= (uint64_t)v26)
        {
LABEL_14:
          uint64_t v27 = *(void *)(v45 + 48);
          unint64_t result = v27 + v21 * a1;
          if ((uint64_t)(v21 * a1) < v22 || result >= v27 + v22 + v21)
          {
            unint64_t result = swift_arrayInitWithTakeFrontToBack();
          }
          else if (v21 * a1 != v22)
          {
            unint64_t result = swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v28 = *(void *)(a2 + 56);
          uint64_t v29 = (_OWORD *)(v28 + 16 * a1);
          uint64_t v30 = (_OWORD *)(v28 + 16 * v16);
          if (a1 != v16 || (a1 = v16, v29 >= v30 + 1))
          {
            *uint64_t v29 = *v30;
            a1 = v16;
          }
        }
LABEL_5:
        unint64_t v16 = (v16 + 1) & v25;
      }
      while (((*(void *)(v14 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
    }
    uint64_t v31 = (uint64_t *)(v14 + 8 * (a1 >> 6));
    uint64_t v32 = *v31;
    uint64_t v33 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v31 = (uint64_t *)(v14 + 8 * (a1 >> 6));
    uint64_t v33 = *v31;
    uint64_t v32 = (-1 << a1) - 1;
  }
  *uint64_t v31 = v33 & v32;
  uint64_t v34 = *(void *)(a2 + 16);
  BOOL v35 = __OFSUB__(v34, 1);
  uint64_t v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v36;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25B21DCF8(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  char v5 = *(void (***)(char *, uint64_t))(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v38 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for Record.ID(0);
  unint64_t result = MEMORY[0x270FA5388](v44);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a2 + 64;
  uint64_t v15 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v16 = (a1 + 1) & ~v15;
  if (((1 << v16) & *(void *)(a2 + 64 + 8 * (v16 >> 6))) != 0)
  {
    uint64_t v45 = v11;
    uint64_t v36 = v5;
    uint64_t v17 = ~v15;
    unint64_t result = sub_25B290A10();
    if ((*(void *)(v14 + 8 * (v16 >> 6)) & (1 << v16)) != 0)
    {
      unint64_t v40 = (result + 1) & v17;
      uint64_t v18 = *(void *)(v45 + 72);
      uint64_t v19 = v36;
      uint64_t v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 6);
      ++v36;
      unint64_t v37 = (void (**)(char *, char *, uint64_t))(v19 + 4);
      uint64_t v20 = v17;
      uint64_t v21 = v18;
      uint64_t v42 = a2 + 64;
      uint64_t v43 = a2;
      uint64_t v41 = v20;
      uint64_t v45 = v18;
      do
      {
        int64_t v22 = v21 * v16;
        sub_25B22A704(*(void *)(a2 + 48) + v21 * v16, (uint64_t)v13, type metadata accessor for Record.ID);
        sub_25B291210();
        swift_bridgeObjectRetain();
        sub_25B290630();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25B290630();
        sub_25B290630();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25B22A704((uint64_t)&v13[*(int *)(v44 + 24)], (uint64_t)v9, type metadata accessor for Record.ID.Ownership);
        if ((*v39)(v9, 1, v4) == 1)
        {
          sub_25B291220();
        }
        else
        {
          uint64_t v23 = v38;
          (*v37)(v38, v9, v4);
          sub_25B291220();
          sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]);
          sub_25B290540();
          (*v36)(v23, v4);
        }
        uint64_t v24 = sub_25B291260();
        unint64_t result = sub_25B22A76C((uint64_t)v13, type metadata accessor for Record.ID);
        uint64_t v25 = v41;
        unint64_t v26 = v24 & v41;
        uint64_t v14 = v42;
        a2 = v43;
        if ((uint64_t)a1 >= (uint64_t)v40)
        {
          uint64_t v21 = v45;
          if (v26 < v40) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v21 = v45;
          if (v26 >= v40) {
            goto LABEL_14;
          }
        }
        if ((uint64_t)a1 >= (uint64_t)v26)
        {
LABEL_14:
          if ((uint64_t)(v21 * a1) < v22 || *(void *)(v43 + 48) + v21 * a1 >= *(void *)(v43 + 48) + v22 + v21)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v21 * a1 != v22)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v27 = *(void *)(a2 + 56);
          uint64_t v28 = *(void *)(*(void *)(type metadata accessor for RecordMetadata() - 8) + 72);
          unint64_t v29 = v28 * a1;
          unint64_t result = v27 + v28 * a1;
          if ((uint64_t)(v28 * a1) < (uint64_t)(v28 * v16) || result >= v27 + v28 * v16 + v28)
          {
            unint64_t result = swift_arrayInitWithTakeFrontToBack();
            a1 = v16;
            uint64_t v21 = v45;
          }
          else
          {
            a1 = v16;
            uint64_t v21 = v45;
            if (v29 != v28 * v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
              a1 = v16;
            }
          }
        }
LABEL_5:
        unint64_t v16 = (v16 + 1) & v25;
      }
      while (((*(void *)(v14 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v14 + 8 * (a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v14 + 8 * (a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25B21E258(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_25B290A10();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]);
        uint64_t v17 = sub_25B290530();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25B21E550(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_25B290A10();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_25B291210();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25B290630();
        sub_25B290630();
        uint64_t v9 = sub_25B291260();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 32 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 32 * v6);
        if (v3 != v6 || v12 >= v13 + 2)
        {
          long long v14 = v13[1];
          *uint64_t v12 = *v13;
          v12[1] = v14;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(sub_25B290080() - 8) + 72);
        int64_t v17 = v16 * v3;
        unint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25B21E78C(int64_t a1, uint64_t a2)
{
  return sub_25B21F0B8(a1, a2, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
}

unint64_t sub_25B21E7A4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_25B290A10();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_25B291210();
        swift_bridgeObjectRetain();
        sub_25B290630();
        uint64_t v9 = sub_25B291260();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25B21E97C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_25B290A10();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_25B291210();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25B290630();
        sub_25B290630();
        uint64_t v9 = sub_25B291260();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 32 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 32 * v6);
          if (v3 != v6 || v12 >= v13 + 2)
          {
            long long v14 = v13[1];
            *uint64_t v12 = *v13;
            v12[1] = v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (void *)(v15 + 8 * v3);
          int64_t v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
          {
            *uint64_t v16 = *v17;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25B21EB80(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v37 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for Record.ID(0);
  unint64_t result = MEMORY[0x270FA5388](v45);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a2 + 64;
  uint64_t v14 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(void *)(a2 + 64 + 8 * (v15 >> 6))) != 0)
  {
    uint64_t v40 = v10;
    uint64_t v16 = ~v14;
    unint64_t result = sub_25B290A10();
    if ((*(void *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      unint64_t v41 = (result + 1) & v16;
      uint64_t v17 = *(void *)(v40 + 72);
      uint64_t v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      uint64_t v40 = v17;
      uint64_t v35 = (void (**)(char *, uint64_t))(v38 + 8);
      uint64_t v36 = (void (**)(char *, char *, uint64_t))(v38 + 32);
      uint64_t v18 = v16;
      uint64_t v19 = v17;
      uint64_t v43 = a2 + 64;
      uint64_t v44 = a2;
      uint64_t v42 = v18;
      while (1)
      {
        int64_t v20 = v19 * v15;
        sub_25B22A704(*(void *)(a2 + 48) + v19 * v15, (uint64_t)v12, type metadata accessor for Record.ID);
        sub_25B291210();
        swift_bridgeObjectRetain();
        sub_25B290630();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25B290630();
        sub_25B290630();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25B22A704((uint64_t)&v12[*(int *)(v45 + 24)], (uint64_t)v8, type metadata accessor for Record.ID.Ownership);
        if ((*v39)(v8, 1, v4) == 1)
        {
          sub_25B291220();
        }
        else
        {
          uint64_t v21 = v37;
          (*v36)(v37, v8, v4);
          sub_25B291220();
          sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]);
          sub_25B290540();
          (*v35)(v21, v4);
        }
        uint64_t v22 = sub_25B291260();
        unint64_t result = sub_25B22A76C((uint64_t)v12, type metadata accessor for Record.ID);
        uint64_t v23 = v42;
        unint64_t v24 = v22 & v42;
        uint64_t v13 = v43;
        a2 = v44;
        if ((uint64_t)a1 >= (uint64_t)v41) {
          break;
        }
        uint64_t v19 = v40;
        if (v24 < v41) {
          goto LABEL_14;
        }
LABEL_15:
        if ((uint64_t)(v19 * a1) < v20 || *(void *)(v44 + 48) + v19 * a1 >= *(void *)(v44 + 48) + v20 + v19)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v19 * a1 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v25 = *(void *)(a2 + 56);
        uint64_t v26 = *(void *)(v38 + 72);
        unint64_t v27 = v26 * a1;
        unint64_t result = v25 + v26 * a1;
        if ((uint64_t)(v26 * a1) < (uint64_t)(v26 * v15) || result >= v25 + v26 * v15 + v26)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v15;
          if (v27 == v26 * v15) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v15;
LABEL_6:
        unint64_t v15 = (v15 + 1) & v23;
        if (((*(void *)(v13 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
          goto LABEL_24;
        }
      }
      uint64_t v19 = v40;
      if (v24 < v41) {
        goto LABEL_6;
      }
LABEL_14:
      if ((uint64_t)a1 < (uint64_t)v24) {
        goto LABEL_6;
      }
      goto LABEL_15;
    }
LABEL_24:
    uint64_t v28 = (uint64_t *)(v13 + 8 * (a1 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v28 = (uint64_t *)(v13 + 8 * (a1 >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << a1) - 1;
  }
  *uint64_t v28 = v30 & v29;
  uint64_t v31 = *(void *)(a2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25B21F0B8(int64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v37 = a3;
  uint64_t v5 = sub_25B290080();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t result = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(void *)(a2 + 64 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v13 = ~v11;
    unint64_t result = sub_25B290A10();
    if ((*(void *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v40 = (result + 1) & v13;
      unint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v14 = v6 + 16;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v41 = v14;
      uint64_t v38 = (uint64_t (**)(char *, uint64_t))(v14 - 8);
      uint64_t v39 = v15;
      uint64_t v36 = v13;
      do
      {
        uint64_t v17 = v10;
        uint64_t v18 = v16;
        int64_t v19 = v16 * v12;
        v39(v9, *(void *)(a2 + 48) + v16 * v12, v5);
        sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]);
        uint64_t v20 = sub_25B290530();
        unint64_t result = (*v38)(v9, v5);
        unint64_t v21 = v20 & v13;
        if (a1 >= (uint64_t)v40)
        {
          if (v21 >= v40 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            if (v18 * a1 < v19
              || *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v24 = *(void *)(a2 + 56);
            uint64_t v25 = *(void *)(*(void *)(v37(0) - 8) + 72);
            int64_t v26 = v25 * a1;
            unint64_t result = v24 + v25 * a1;
            int64_t v27 = v25 * v12;
            unint64_t v28 = v24 + v25 * v12 + v25;
            BOOL v29 = v26 < v27 || result >= v28;
            uint64_t v10 = v17;
            if (v29)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
              uint64_t v13 = v36;
            }
            else
            {
              a1 = v12;
              uint64_t v13 = v36;
              if (v26 != v27)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v40 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v10 = v17;
LABEL_5:
        unint64_t v12 = (v12 + 1) & v13;
        uint64_t v16 = v18;
      }
      while (((*(void *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25B21F40C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_25B290A10();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(*(void *)(a2 + 48) + 16 * v6 + 8);
        sub_25B291210();
        sub_25B291220();
        if (v9)
        {
          swift_bridgeObjectRetain();
          sub_25B290630();
        }
        uint64_t v10 = sub_25B291260();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_13;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_13:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (void *)(v15 + 8 * v3);
          uint64_t v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
          {
            *uint64_t v16 = *v17;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25B21F608(int64_t a1, uint64_t a2)
{
  return sub_25B21F0B8(a1, a2, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
}

unint64_t sub_25B21F620(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_25B290A10();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_25B291200();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *uint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor() - 8)
                        + 72);
        int64_t v17 = v16 * v3;
        unint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25B21F7F0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_25B290A10();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_25B291210();
        swift_bridgeObjectRetain();
        sub_25B290630();
        uint64_t v9 = sub_25B291260();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for NetworkMessenger.ExpiringConnection(0) - 8) + 72);
        int64_t v16 = v15 * v3;
        unint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25B21FA00(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_25B290A10();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]);
        uint64_t v17 = sub_25B290530();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (_OWORD *)(v22 + 16 * a1);
            BOOL v24 = (_OWORD *)(v22 + 16 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25B21FCF8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_25B290A10();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_25B291210();
        sub_25B291240();
        unint64_t result = sub_25B291260();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = (unsigned char *)(v10 + v3);
        uint64_t v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *uint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(type metadata accessor for NetworkMessenger.PartialIncomingMessage(0) - 8) + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25B21FEEC(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_25B290A10();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v29 = v2;
      uint64_t v30 = v4;
      unint64_t v28 = (result + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(*(void *)(v2 + 48) + 56 * v6 + 24);
        sub_25B291210();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        sub_25B290630();
        swift_bridgeObjectRelease();
        sub_25B291230();
        if (v10)
        {
          swift_bridgeObjectRetain();
          sub_25B290630();
          swift_bridgeObjectRelease();
        }
        sub_25B291250();
        sub_25B291250();
        sub_25B291250();
        uint64_t v11 = sub_25B291260();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v28)
        {
          uint64_t v2 = v29;
          uint64_t v4 = v30;
          if (v12 < v28) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v2 = v29;
          uint64_t v4 = v30;
          if (v12 >= v28) {
            goto LABEL_13;
          }
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_13:
          uint64_t v13 = *(void *)(v2 + 48);
          unint64_t v14 = v13 + 56 * v3;
          int64_t v15 = (long long *)(v13 + 56 * v6);
          if (v3 != v6 || v14 >= (unint64_t)v15 + 56)
          {
            long long v16 = *v15;
            long long v17 = v15[1];
            long long v18 = v15[2];
            *(void *)(v14 + 48) = *((void *)v15 + 6);
            *(_OWORD *)(v14 + 16) = v17;
            *(_OWORD *)(v14 + 32) = v18;
            *(_OWORD *)unint64_t v14 = v16;
          }
          uint64_t v19 = *(void *)(v2 + 56);
          unint64_t v20 = v19 + 40 * v3;
          uint64_t v21 = (long long *)(v19 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v20 >= (unint64_t)v21 + 40))
          {
            long long v8 = *v21;
            long long v9 = v21[1];
            *(void *)(v20 + 32) = *((void *)v21 + 4);
            *(_OWORD *)unint64_t v20 = v8;
            *(_OWORD *)(v20 + 16) = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(v2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v27;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

uint64_t sub_25B22018C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_25B18A634(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_25B192BC4();
LABEL_7:
    long long v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 184 * v12;
      return sub_25B22A89C(a1, v19);
    }
    goto LABEL_13;
  }
  sub_25B18C4C4(v15, a4 & 1);
  unint64_t v21 = sub_25B18A634(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  long long v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  uint64_t v24 = v18[7] + 184 * v12;
  long long v25 = *(_OWORD *)a1;
  long long v26 = *(_OWORD *)(a1 + 16);
  long long v27 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v24 + 48) = v27;
  *(_OWORD *)uint64_t v24 = v25;
  *(_OWORD *)(v24 + 16) = v26;
  long long v28 = *(_OWORD *)(a1 + 64);
  long long v29 = *(_OWORD *)(a1 + 80);
  long long v30 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v24 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v24 + 112) = v30;
  *(_OWORD *)(v24 + 64) = v28;
  *(_OWORD *)(v24 + 80) = v29;
  long long v31 = *(_OWORD *)(a1 + 128);
  long long v32 = *(_OWORD *)(a1 + 144);
  long long v33 = *(_OWORD *)(a1 + 160);
  *(void *)(v24 + 176) = *(void *)(a1 + 176);
  *(_OWORD *)(v24 + 144) = v32;
  *(_OWORD *)(v24 + 160) = v33;
  *(_OWORD *)(v24 + 128) = v31;
  uint64_t v34 = v18[2];
  BOOL v35 = __OFADD__(v34, 1);
  uint64_t v36 = v34 + 1;
  if (v35)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  _OWORD v18[2] = v36;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B220344(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for Record.ID(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_25B18A8D0(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t v21 = type metadata accessor for RecordMetadata();
      return sub_25B22A834(a1, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v13, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_25B193098();
    goto LABEL_7;
  }
  sub_25B18D018(v16, a3 & 1);
  unint64_t v23 = sub_25B18A8D0(a2);
  if ((v17 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v13 = v23;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_25B22A704((uint64_t)a2, (uint64_t)v10, type metadata accessor for Record.ID);
  return sub_25B2224E4(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_25B2204F0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_25B290080();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = (void *)*v3;
  unint64_t v14 = sub_25B18A93C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_25B1933C8();
    goto LABEL_7;
  }
  sub_25B18D724(v17, a3 & 1);
  unint64_t v23 = sub_25B18A93C(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_25B1A8390(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_25B220698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = (void **)v6;
  unint64_t v14 = (void *)*v6;
  unint64_t v16 = sub_25B18A768(a2, a3, a4, a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 < v19 || (a6 & 1) == 0)
  {
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_25B193660();
      goto LABEL_7;
    }
    sub_25B18DB34(v19, a6 & 1);
    unint64_t v30 = sub_25B18A768(a2, a3, a4, a5);
    if ((v20 & 1) == (v31 & 1))
    {
      unint64_t v16 = v30;
      char v22 = *v7;
      if (v20) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
LABEL_7:
  char v22 = *v7;
  if (v20)
  {
LABEL_8:
    uint64_t v23 = v22[7];
    uint64_t v24 = sub_25B290080();
    uint64_t v25 = *(void *)(v24 - 8);
    long long v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 40);
    uint64_t v27 = v24;
    uint64_t v28 = v23 + *(void *)(v25 + 72) * v16;
    return v26(v28, a1, v27);
  }
LABEL_13:
  sub_25B2225D0(v16, a2, a3, a4, a5, a1, v22);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B22084C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_25B290080();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = (void *)*v3;
  unint64_t v14 = sub_25B18A93C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for PairingRelationship();
      return sub_25B22A834(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_25B193954();
    goto LABEL_7;
  }
  sub_25B18DF44(v17, a3 & 1);
  unint64_t v24 = sub_25B18A93C(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_25B22283C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))type metadata accessor for PairingRelationship, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
}

uint64_t sub_25B220A48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_25B221E00(a1, a2, a3, a4, (void (*)(void))sub_25B19399C, (void (*)(void))sub_25B18DF8C);
}

uint64_t sub_25B220A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_25B18A768(a2, a3, a4, a5);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_25B1939A8();
LABEL_7:
    uint64_t v22 = (void *)*v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_release();
      *(void *)(v23 + 8 * v16) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_25B18DF98(v19, a6 & 1);
  unint64_t v25 = sub_25B18A768(a2, a3, a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  uint64_t v22 = (void *)*v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v27 = (uint64_t *)(v22[6] + 32 * v16);
  *uint64_t v27 = a2;
  v27[1] = a3;
  void v27[2] = a4;
  v27[3] = a5;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v28 = v22[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v22[2] = v30;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B220C14(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for Record.ID(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_25B18A8D0(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 < v16 || (a3 & 1) == 0)
  {
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_25B193B78();
      goto LABEL_7;
    }
    sub_25B18E2C0(v16, a3 & 1);
    unint64_t v27 = sub_25B18A8D0(a2);
    if ((v17 & 1) == (v28 & 1))
    {
      unint64_t v13 = v27;
      uint64_t v19 = *v4;
      if (v17) {
        goto LABEL_8;
      }
LABEL_13:
      sub_25B22A704((uint64_t)a2, (uint64_t)v10, type metadata accessor for Record.ID);
      return sub_25B222684(v13, (uint64_t)v10, a1, v19);
    }
LABEL_15:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v19 = *v4;
  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = v19[7];
  uint64_t v21 = sub_25B290080();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 40);
  uint64_t v24 = v21;
  uint64_t v25 = v20 + *(void *)(v22 + 72) * v13;
  return v23(v25, a1, v24);
}

uint64_t sub_25B220DF0(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for Record.ID(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = (void *)*v3;
  unint64_t v14 = sub_25B18A8D0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18) {
      return sub_25B22A834(a1, v20[7] + *(void *)(v9 + 72) * v14, type metadata accessor for Record.ID);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_25B193EB8();
    goto LABEL_7;
  }
  sub_25B18E990(v17, a3 & 1);
  unint64_t v22 = sub_25B18A8D0(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v14 = v22;
  uint64_t v20 = *v4;
  if (v18) {
    return sub_25B22A834(a1, v20[7] + *(void *)(v9 + 72) * v14, type metadata accessor for Record.ID);
  }
LABEL_11:
  sub_25B22A704((uint64_t)a2, (uint64_t)v11, type metadata accessor for Record.ID);
  return sub_25B222774(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_25B220FB0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_25B290080();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = (void *)*v3;
  unint64_t v14 = sub_25B18A93C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for Replicator.Session(0);
      return sub_25B22A834(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, type metadata accessor for Replicator.Session);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_25B194480();
    goto LABEL_7;
  }
  sub_25B18F43C(v17, a3 & 1);
  unint64_t v24 = sub_25B18A93C(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_25B22283C(v14, (uint64_t)v11, a1, v20, type metadata accessor for Replicator.Session, type metadata accessor for Replicator.Session);
}

uint64_t sub_25B2211AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_25B18A634(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_25B1947F0();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_25B18F964(v17, a5 & 1);
  unint64_t v23 = sub_25B18A634(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  char v25 = (uint64_t *)(v20[6] + 16 * v14);
  *char v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B221334(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_25B18A9C0(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_25B1949AC();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_25B18FC8C(v15, a4 & 1);
  unint64_t v21 = sub_25B18A9C0(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B2214A4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_25B290080();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_25B18A93C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for NetworkBrowser.Monitor();
      return sub_25B22A834(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_25B194DF8();
    goto LABEL_7;
  }
  sub_25B1903B0(v17, a3 & 1);
  unint64_t v24 = sub_25B18A93C(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_25B22283C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
}

uint64_t sub_25B2216A0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_25B18AA98(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
      return sub_25B22A834(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_25B194E40();
    goto LABEL_7;
  }
  sub_25B1903F8(v13, a3 & 1);
  unint64_t v20 = sub_25B18AA98(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_15:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  BOOL v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_25B22295C(v10, a2, a1, v16);
}

void sub_25B2217F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_25B18A634(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_25B1950BC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_25B190784(v15, a4 & 1);
  unint64_t v20 = sub_25B18A634(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_25B291190();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v25;
  swift_bridgeObjectRetain();
}

_OWORD *sub_25B221964(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_25B18AA54(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_25B195270();
      goto LABEL_7;
    }
    sub_25B190A94(v13, a3 & 1);
    unint64_t v19 = sub_25B18AA54(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_25B197934(a2, (uint64_t)v21);
      return sub_25B222A04(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_25B291190();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_25B1979E4(a1, v17);
}

uint64_t sub_25B221AB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_25B18A634(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
      return sub_25B22A834(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, type metadata accessor for NetworkMessenger.ExpiringConnection);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_25B195458();
    goto LABEL_7;
  }
  sub_25B190DAC(v15, a4 & 1);
  unint64_t v22 = sub_25B18A634(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_25B222A80(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B221C1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v28 = a2;
  uint64_t v9 = sub_25B290080();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v4;
  unint64_t v15 = sub_25B18A93C(a3);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    char v21 = *v5;
    if (v19)
    {
LABEL_8:
      unint64_t v22 = (uint64_t *)(v21[7] + 16 * v15);
      uint64_t result = swift_release();
      uint64_t v24 = v28;
      *unint64_t v22 = a1;
      v22[1] = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_25B1958DC();
    goto LABEL_7;
  }
  sub_25B1914BC(v18, a4 & 1);
  unint64_t v25 = sub_25B18A93C(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v15 = v25;
  char v21 = *v5;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_25B222B2C(v15, (uint64_t)v12, a1, v28, v21);
}

uint64_t sub_25B221DD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_25B221E00(a1, a2, a3, a4, (void (*)(void))sub_25B195B84, (void (*)(void))sub_25B1918D4);
}

uint64_t sub_25B221E00(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void))
{
  uint64_t v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_25B18A634(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    unint64_t v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v23 + 8 * v16) = a1;
      return result;
    }
    goto LABEL_11;
  }
  a6();
  unint64_t v25 = sub_25B18A634(a2, a3);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  unint64_t v22 = (void *)*v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v27 = (uint64_t *)(v22[6] + 16 * v16);
  *uint64_t v27 = a2;
  v27[1] = a3;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v28 = v22[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v22[2] = v30;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B221F8C(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_25B18AB70(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
      return sub_25B22A834(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_25B195D40();
    goto LABEL_7;
  }
  sub_25B191BF4(v13, a3 & 1);
  unint64_t v20 = sub_25B18AB70(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_15:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  unint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_25B222BEC(v10, a2, a1, v16);
}

uint64_t sub_25B2220E0(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = v3;
  char v7 = a2 & 1;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_25B18ABD8(a2 & 1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_25B195FB8();
LABEL_7:
    unint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = v7;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      long long v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_25B191F98(result, a3 & 1);
  uint64_t result = sub_25B18ABD8(v7);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    unint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_25B291190();
  __break(1u);
  return result;
}

uint64_t sub_25B222218(long long *a1, uint64_t *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_25B18AC48(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_25B19615C();
      goto LABEL_7;
    }
    sub_25B19226C(v13, a3 & 1);
    unint64_t v19 = sub_25B18AC48(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      unint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 40 * v10;
    __swift_destroy_boxed_opaque_existential_1(v17);
    return sub_25B180BD4(a1, v17);
  }
LABEL_13:
  sub_25B222C94(v10, (uint64_t)a2, a1, v16);
  return sub_25B180D48((uint64_t)a2);
}

uint64_t sub_25B222360(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_25B18AC48((uint64_t *)a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_25B196398();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 16 * v12;
      *(void *)uint64_t v19 = a1;
      *(unsigned char *)(v19 + 8) = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_25B1924BC(result, a4 & 1);
  uint64_t result = sub_25B18AC48((uint64_t *)a3);
  if ((v16 & 1) != (v20 & 1))
  {
LABEL_17:
    uint64_t result = sub_25B291190();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v21 = v18[6] + 56 * v12;
  long long v22 = *(_OWORD *)a3;
  long long v23 = *(_OWORD *)(a3 + 16);
  long long v24 = *(_OWORD *)(a3 + 32);
  *(void *)(v21 + 48) = *(void *)(a3 + 48);
  *(_OWORD *)(v21 + 16) = v23;
  *(_OWORD *)(v21 + 32) = v24;
  *(_OWORD *)uint64_t v21 = v22;
  uint64_t v25 = v18[7] + 16 * v12;
  *(void *)uint64_t v25 = a1;
  *(unsigned char *)(v25 + 8) = a2;
  uint64_t v26 = v18[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v28;
  return sub_25B180D48(a3);
}

uint64_t sub_25B2224E4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for Record.ID(0);
  sub_25B22A7CC(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, type metadata accessor for Record.ID);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for RecordMetadata();
  uint64_t result = sub_25B22A7CC(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_25B2225D0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  a7[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = (void *)(a7[6] + 32 * a1);
  *uint64_t v10 = a2;
  v10[1] = a3;
  void v10[2] = a4;
  void v10[3] = a5;
  uint64_t v11 = a7[7];
  uint64_t v12 = sub_25B290080();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11 + *(void *)(*(void *)(v12 - 8) + 72) * a1, a6, v12);
  uint64_t v14 = a7[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a7[2] = v16;
  }
  return result;
}

uint64_t sub_25B222684(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for Record.ID(0);
  sub_25B22A7CC(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, type metadata accessor for Record.ID);
  uint64_t v10 = a4[7];
  uint64_t v11 = sub_25B290080();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_25B222774(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = a4[6];
  uint64_t v8 = *(void *)(*(void *)(type metadata accessor for Record.ID(0) - 8) + 72) * a1;
  sub_25B22A7CC(a2, v7 + v8, type metadata accessor for Record.ID);
  uint64_t result = sub_25B22A7CC(a3, a4[7] + v8, type metadata accessor for Record.ID);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_25B22283C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a4[6];
  uint64_t v13 = sub_25B290080();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a2, v13);
  uint64_t v14 = a4[7];
  uint64_t v15 = a5(0);
  uint64_t result = sub_25B22A7CC(a3, v14 + *(void *)(*(void *)(v15 - 8) + 72) * a1, a6);
  uint64_t v17 = a4[2];
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    a4[2] = v19;
  }
  return result;
}

uint64_t sub_25B222930(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_25B22283C(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor, (uint64_t (*)(void))type metadata accessor for NetworkBrowser.Monitor);
}

uint64_t sub_25B22295C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  uint64_t result = sub_25B22A7CC(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

_OWORD *sub_25B222A04(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_25B1979E4(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_25B222A80(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  uint64_t result = sub_25B22A7CC(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, type metadata accessor for NetworkMessenger.ExpiringConnection);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_25B222B2C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = sub_25B290080();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  BOOL v13 = (void *)(a5[7] + 16 * a1);
  *BOOL v13 = a3;
  v13[1] = a4;
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

uint64_t sub_25B222BEC(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  uint64_t result = sub_25B22A7CC(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_25B222C94(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 56 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(v5 + 48) = *(void *)(a2 + 48);
  uint64_t result = sub_25B180BD4(a3, a4[7] + 40 * a1);
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

void *sub_25B222D1C(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = (void *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_25B223120((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return (void *)v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = (void *)sub_25B223120((unint64_t *)v7, v4, v2);
    MEMORY[0x261160890](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_25B222E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B222F94(a1, a2, a3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_25B2237DC);
}

uint64_t sub_25B222ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B222F94(a1, a2, a3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_25B223B30);
}

uint64_t sub_25B222F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B222F94(a1, a2, a3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_25B223DD0);
}

uint64_t sub_25B222F94(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = v4;
  uint64_t v9 = isStackAllocationSafe;
  v16[1] = *MEMORY[0x263EF8340];
  char v10 = *(unsigned char *)(a3 + 32);
  unint64_t v11 = (unint64_t)((1 << v10) + 63) >> 6;
  size_t v12 = 8 * v11;
  if ((v10 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    uint64_t v13 = a4((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v11, a3, v9, a2);
    if (v4) {
      swift_willThrow();
    }
    else {
      return v13;
    }
  }
  else
  {
    uint64_t v14 = (void *)swift_slowAlloc();
    bzero(v14, v12);
    uint64_t v6 = a4((char *)v14, v11, a3, v9, a2);
    MEMORY[0x261160890](v14, -1, -1);
  }
  return v6;
}

uint64_t sub_25B223120(unint64_t *a1, uint64_t a2, void *a3)
{
  v49[0] = a2;
  uint64_t v50 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91F8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v69 = (uint64_t)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_25B290000();
  uint64_t v6 = *(void *)(v68 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v68 - 8);
  uint64_t v57 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v56 = (char *)v49 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  BOOL v15 = (char *)v49 - v14;
  uint64_t v65 = type metadata accessor for RecordMetadata();
  uint64_t v67 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v17 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Record.ID(0);
  uint64_t v66 = *(void *)(v18 - 8);
  uint64_t result = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = 0;
  int64_t v22 = 0;
  uint64_t v70 = a3;
  uint64_t v25 = a3[8];
  long long v24 = a3 + 8;
  uint64_t v23 = v25;
  uint64_t v26 = 1 << *((unsigned char *)v24 - 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v23;
  uint64_t v58 = v24;
  int64_t v59 = (unint64_t)(v26 + 63) >> 6;
  uint64_t v63 = v17;
  uint64_t v64 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v52 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v53 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v54 = v10;
  uint64_t v55 = v15;
  while (v28)
  {
    unint64_t v29 = __clz(__rbit64(v28));
    v28 &= v28 - 1;
    int64_t v71 = v22;
    unint64_t v30 = v29 | (v22 << 6);
LABEL_18:
    BOOL v35 = v70;
    sub_25B22A704(v70[6] + *(void *)(v66 + 72) * v30, (uint64_t)v21, type metadata accessor for Record.ID);
    uint64_t v36 = v35[7];
    uint64_t v37 = *(void *)(v67 + 72);
    unint64_t v62 = v30;
    sub_25B22A704(v36 + v37 * v30, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v38 = (uint64_t)v21;
    uint64_t v39 = (uint64_t)&v15[*(int *)(v10 + 48)];
    sub_25B22A704(v38, (uint64_t)v15, type metadata accessor for Record.ID);
    sub_25B22A704((uint64_t)v17, v39, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v40 = (uint64_t)&v13[*(int *)(v10 + 48)];
    sub_25B22A704((uint64_t)v15, (uint64_t)v13, type metadata accessor for Record.ID);
    sub_25B22A704(v39, v40, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v41 = v69;
    sub_25B187628(v40 + *(int *)(v65 + 32), v69, &qword_26A4D91F8);
    sub_25B22A76C(v40, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v42 = v68;
    if ((*v64)(v41, 1, v68) == 1)
    {
      sub_25B116DE0((uint64_t)v15, &qword_26A4D9860);
      sub_25B116DE0(v41, &qword_26A4D91F8);
      sub_25B22A76C((uint64_t)v13, type metadata accessor for Record.ID);
      uint64_t v17 = v63;
      sub_25B22A76C((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t result = sub_25B22A76C(v38, type metadata accessor for Record.ID);
      uint64_t v21 = (char *)v38;
      int64_t v22 = v71;
    }
    else
    {
      uint64_t v43 = v56;
      (*v53)(v56, v41, v42);
      uint64_t v61 = type metadata accessor for Record.ID;
      sub_25B22A76C((uint64_t)v13, type metadata accessor for Record.ID);
      uint64_t v44 = v13;
      uint64_t v45 = v57;
      sub_25B28FFD0();
      int v60 = sub_25B28FF80();
      uint64_t v46 = *v52;
      uint64_t v47 = v45;
      uint64_t v13 = v44;
      (*v52)(v47, v42);
      uint64_t v48 = v43;
      uint64_t v10 = v54;
      BOOL v15 = v55;
      v46(v48, v42);
      sub_25B116DE0((uint64_t)v15, &qword_26A4D9860);
      uint64_t v17 = v63;
      sub_25B22A76C((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t result = sub_25B22A76C(v38, v61);
      uint64_t v21 = (char *)v38;
      int64_t v22 = v71;
      if (v60)
      {
        *(unint64_t *)((char *)v50 + ((v62 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v62;
        BOOL v31 = __OFADD__(v51++, 1);
        if (v31) {
          goto LABEL_30;
        }
      }
    }
  }
  BOOL v31 = __OFADD__(v22, 1);
  int64_t v32 = v22 + 1;
  if (v31)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v32 >= v59) {
    return sub_25B1A2340(v50, v49[0], v51, v70);
  }
  unint64_t v33 = v58[v32];
  if (v33)
  {
LABEL_17:
    unint64_t v28 = (v33 - 1) & v33;
    int64_t v71 = v32;
    unint64_t v30 = __clz(__rbit64(v33)) + (v32 << 6);
    goto LABEL_18;
  }
  int64_t v34 = v32 + 1;
  if (v32 + 1 >= v59) {
    return sub_25B1A2340(v50, v49[0], v51, v70);
  }
  unint64_t v33 = v58[v34];
  if (v33) {
    goto LABEL_16;
  }
  int64_t v34 = v32 + 2;
  if (v32 + 2 >= v59) {
    return sub_25B1A2340(v50, v49[0], v51, v70);
  }
  unint64_t v33 = v58[v34];
  if (v33) {
    goto LABEL_16;
  }
  int64_t v34 = v32 + 3;
  if (v32 + 3 >= v59) {
    return sub_25B1A2340(v50, v49[0], v51, v70);
  }
  unint64_t v33 = v58[v34];
  if (v33)
  {
LABEL_16:
    int64_t v32 = v34;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v32 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v32 >= v59) {
      return sub_25B1A2340(v50, v49[0], v51, v70);
    }
    unint64_t v33 = v58[v32];
    ++v34;
    if (v33) {
      goto LABEL_17;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_25B2237DC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *))
{
  int64_t v32 = a4;
  uint64_t v25 = a2;
  uint64_t v26 = a1;
  uint64_t v6 = type metadata accessor for RecordMetadata();
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Record.ID(0);
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t result = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a3 + 64);
  uint64_t v27 = 0;
  uint64_t v28 = a3 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v29 = (unint64_t)(v15 + 63) >> 6;
  while (v17)
  {
    unint64_t v18 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    unint64_t v19 = v18 | (v13 << 6);
LABEL_17:
    sub_25B22A704(*(void *)(a3 + 48) + *(void *)(v30 + 72) * v19, (uint64_t)v12, type metadata accessor for Record.ID);
    sub_25B22A704(*(void *)(a3 + 56) + *(void *)(v31 + 72) * v19, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    char v23 = v32(v12, v8);
    sub_25B22A76C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t result = sub_25B22A76C((uint64_t)v12, type metadata accessor for Record.ID);
    if (v4) {
      return result;
    }
    if (v23)
    {
      *(unint64_t *)((char *)v26 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      BOOL v20 = __OFADD__(v27++, 1);
      if (v20) {
        goto LABEL_30;
      }
    }
  }
  BOOL v20 = __OFADD__(v13++, 1);
  if (v20)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v13 >= v29) {
    return sub_25B1A2340(v26, v25, v27, (void *)a3);
  }
  unint64_t v21 = *(void *)(v28 + 8 * v13);
  if (v21)
  {
LABEL_16:
    unint64_t v17 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v13 << 6);
    goto LABEL_17;
  }
  int64_t v22 = v13 + 1;
  if (v13 + 1 >= v29) {
    return sub_25B1A2340(v26, v25, v27, (void *)a3);
  }
  unint64_t v21 = *(void *)(v28 + 8 * v22);
  if (v21) {
    goto LABEL_15;
  }
  int64_t v22 = v13 + 2;
  if (v13 + 2 >= v29) {
    return sub_25B1A2340(v26, v25, v27, (void *)a3);
  }
  unint64_t v21 = *(void *)(v28 + 8 * v22);
  if (v21) {
    goto LABEL_15;
  }
  int64_t v22 = v13 + 3;
  if (v13 + 3 >= v29) {
    return sub_25B1A2340(v26, v25, v27, (void *)a3);
  }
  unint64_t v21 = *(void *)(v28 + 8 * v22);
  if (v21)
  {
LABEL_15:
    int64_t v13 = v22;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v13 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v13 >= v29) {
      return sub_25B1A2340(v26, v25, v27, (void *)a3);
    }
    unint64_t v21 = *(void *)(v28 + 8 * v13);
    ++v22;
    if (v21) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_25B223B30(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, char *))
{
  uint64_t v28 = a4;
  uint64_t v23 = a2;
  uint64_t v24 = a1;
  uint64_t v6 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v25 = 0;
  uint64_t v26 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v27 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    unint64_t v16 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v17 = v16 | (v11 << 6);
LABEL_17:
    uint64_t v21 = *(void *)(a3 + 56);
    uint64_t v29 = *(void *)(*(void *)(a3 + 48) + 8 * v17);
    sub_25B22A704(v21 + *(void *)(v7 + 72) * v17, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    char v22 = v28(&v29, v10);
    uint64_t result = sub_25B22A76C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    if (v4) {
      return result;
    }
    if (v22)
    {
      *(unint64_t *)((char *)v24 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      BOOL v18 = __OFADD__(v25++, 1);
      if (v18) {
        goto LABEL_30;
      }
    }
  }
  BOOL v18 = __OFADD__(v11++, 1);
  if (v18)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v27) {
    return sub_25B1A3934(v24, v23, v25, (void *)a3);
  }
  unint64_t v19 = *(void *)(v26 + 8 * v11);
  if (v19)
  {
LABEL_16:
    unint64_t v15 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v11 << 6);
    goto LABEL_17;
  }
  int64_t v20 = v11 + 1;
  if (v11 + 1 >= v27) {
    return sub_25B1A3934(v24, v23, v25, (void *)a3);
  }
  unint64_t v19 = *(void *)(v26 + 8 * v20);
  if (v19) {
    goto LABEL_15;
  }
  int64_t v20 = v11 + 2;
  if (v11 + 2 >= v27) {
    return sub_25B1A3934(v24, v23, v25, (void *)a3);
  }
  unint64_t v19 = *(void *)(v26 + 8 * v20);
  if (v19) {
    goto LABEL_15;
  }
  int64_t v20 = v11 + 3;
  if (v11 + 3 >= v27) {
    return sub_25B1A3934(v24, v23, v25, (void *)a3);
  }
  unint64_t v19 = *(void *)(v26 + 8 * v20);
  if (v19)
  {
LABEL_15:
    int64_t v11 = v20;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v27) {
      return sub_25B1A3934(v24, v23, v25, (void *)a3);
    }
    unint64_t v19 = *(void *)(v26 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_25B223DD0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, char *))
{
  int64_t v32 = a4;
  uint64_t v26 = a2;
  int64_t v27 = a1;
  uint64_t v6 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v28 = 0;
  uint64_t v29 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v30 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    unint64_t v16 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v17 = v16 | (v11 << 6);
LABEL_17:
    uint64_t v21 = *(void *)(a3 + 56);
    char v22 = (void *)(*(void *)(a3 + 48) + 16 * v17);
    uint64_t v23 = v22[1];
    v31[0] = *v22;
    v31[1] = v23;
    sub_25B22A704(v21 + *(void *)(v7 + 72) * v17, (uint64_t)v10, type metadata accessor for NetworkMessenger.ExpiringConnection);
    swift_bridgeObjectRetain();
    char v24 = v32(v31, v10);
    sub_25B22A76C((uint64_t)v10, type metadata accessor for NetworkMessenger.ExpiringConnection);
    uint64_t result = swift_bridgeObjectRelease();
    if (v4) {
      return result;
    }
    if (v24)
    {
      *(unint64_t *)((char *)v27 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      BOOL v18 = __OFADD__(v28++, 1);
      if (v18) {
        goto LABEL_30;
      }
    }
  }
  BOOL v18 = __OFADD__(v11++, 1);
  if (v18)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v30) {
    return sub_25B1A3C90(v27, v26, v28, (void *)a3);
  }
  unint64_t v19 = *(void *)(v29 + 8 * v11);
  if (v19)
  {
LABEL_16:
    unint64_t v15 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v11 << 6);
    goto LABEL_17;
  }
  int64_t v20 = v11 + 1;
  if (v11 + 1 >= v30) {
    return sub_25B1A3C90(v27, v26, v28, (void *)a3);
  }
  unint64_t v19 = *(void *)(v29 + 8 * v20);
  if (v19) {
    goto LABEL_15;
  }
  int64_t v20 = v11 + 2;
  if (v11 + 2 >= v30) {
    return sub_25B1A3C90(v27, v26, v28, (void *)a3);
  }
  unint64_t v19 = *(void *)(v29 + 8 * v20);
  if (v19) {
    goto LABEL_15;
  }
  int64_t v20 = v11 + 3;
  if (v11 + 3 >= v30) {
    return sub_25B1A3C90(v27, v26, v28, (void *)a3);
  }
  unint64_t v19 = *(void *)(v29 + 8 * v20);
  if (v19)
  {
LABEL_15:
    int64_t v11 = v20;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v30) {
      return sub_25B1A3C90(v27, v26, v28, (void *)a3);
    }
    unint64_t v19 = *(void *)(v29 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_25B224084(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B224E58(a1, a2, a3, (void *)*v3, &qword_26A4D9D00, MEMORY[0x263F07508]);
  *char v3 = result;
  return result;
}

uint64_t sub_25B2240C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B224310(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_25B2240E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B224E58(a1, a2, a3, (void *)*v3, &qword_26A4D9D58, type metadata accessor for Record.ID);
  *char v3 = result;
  return result;
}

uint64_t sub_25B22411C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B224E58(a1, a2, a3, (void *)*v3, &qword_26A4DB210, (uint64_t (*)(void))type metadata accessor for PairingRelationship);
  *char v3 = result;
  return result;
}

uint64_t sub_25B224158(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B2249BC(a1, a2, a3, *v3, &qword_26A4D9D18);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_25B224188(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B2246C4(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_25B2241A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B224E58(a1, a2, a3, (void *)*v3, &qword_26A4DB278, type metadata accessor for Replicator.SyncItem);
  *char v3 = result;
  return result;
}

uint64_t sub_25B2241E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B2249BC(a1, a2, a3, *v3, &qword_26A4D9D50);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_25B224214(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B224850(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_25B224234(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B224B48(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_25B224254(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B224CB4(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_25B224274(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B224E58(a1, a2, a3, (void *)*v3, &qword_26A4DB220, MEMORY[0x263F07490]);
  *char v3 = result;
  return result;
}

uint64_t sub_25B2242B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B2250A0(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_25B2242D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B22520C(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_25B2242F0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_25B224E58(a1, a2, a3, a4, &qword_26A4D9D00, MEMORY[0x263F07508]);
}

uint64_t sub_25B224310(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9D40);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B22447C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB290);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  BOOL v18 = (char *)v13 + v17;
  unint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B2246C4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA748);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B224850(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91C0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B2249BC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[48 * v9]) {
      memmove(v13, v14, 48 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[48 * v9] || v13 >= &v14[48 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B224B48(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB1A8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B224CB4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D38);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    void v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D96C0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B224E58(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  char v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B2250A0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9F68);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B22520C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB218);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    void v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A60);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

size_t sub_25B225398(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D00);
  uint64_t v3 = *(void *)(sub_25B290080() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_25B225FA8(&v10, (char *)v6 + v5, v1, a1);
      sub_25B1A85A8();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_25B2254CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D58);
  uint64_t v3 = *(void *)(type metadata accessor for Record.ID(0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_25B22639C(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_25B1A85A8();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_25B225620(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB290);
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8) - 8);
      uint64_t v10 = sub_25B2266C0(&v11, (uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v1, a1);
      swift_bridgeObjectRetain();
      sub_25B1A85A8();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_25B2257B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9D40);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  uint64_t v6 = sub_25B226A48((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_25B1A85A8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

size_t sub_25B22589C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9D58);
  uint64_t v3 = *(void *)(type metadata accessor for Record.ID(0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_25B226F00(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_25B1A85A8();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_25B2259F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91C0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_25B227224((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_25B1A85A8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_25B225AD8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9D40);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  uint64_t v6 = sub_25B227424((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_25B1A85A8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_25B225BC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91C0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_25B227640((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_25B1A85A8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_25B225CA8(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB1C8);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_25B225DA0((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_25B290BD0();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v3;
}

uint64_t sub_25B225DA0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_25B290BD0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_25B290BD0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_25B229DCC();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB1D8);
          uint64_t v12 = sub_25B207080(v16, i, a3);
          uint64_t v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DAFD0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B225FA8(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25B290080();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 56;
  uint64_t v14 = *(void *)(a4 + 56);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  uint64_t v19 = v40;
  uint64_t v38 = v41 + 16;
  uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  BOOL v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  uint64_t v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    int64_t v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_25B116DE0((uint64_t)v10, &qword_26B33F200);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_25B22639C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Record.ID(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v34 = a4;
  uint64_t v17 = a4 + 56;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (-v31 < 64) {
    uint64_t v18 = ~(-1 << -(char)v31);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v28 = ~v31;
    *a1 = v34;
    a1[1] = v17;
    a1[2] = v28;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  int64_t v30 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v32 = v17;
  int64_t v33 = (unint64_t)(63 - v31) >> 6;
  int64_t v29 = v33 - 1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v9 + 72);
    sub_25B22A704(*(void *)(v34 + 48) + v27 * v23, (uint64_t)v12, type metadata accessor for Record.ID);
    sub_25B22A7CC((uint64_t)v12, (uint64_t)v15, type metadata accessor for Record.ID);
    uint64_t result = sub_25B22A7CC((uint64_t)v15, a2, type metadata accessor for Record.ID);
    if (v21 == a3) {
      goto LABEL_33;
    }
    a2 += v27;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v30;
      uint64_t v17 = v32;
      goto LABEL_34;
    }
    uint64_t v17 = v32;
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24;
LABEL_39:
    a3 = v21;
    a1 = v30;
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v24 + 2;
  if (v24 + 2 >= v33) {
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v20 = v24 + 3;
  if (v24 + 3 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24 + 2;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v20;
    goto LABEL_18;
  }
  int64_t v26 = v24 + 4;
  if (v24 + 4 >= v33)
  {
LABEL_36:
    unint64_t v19 = 0;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_17:
    int64_t v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      int64_t v20 = v29;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_25B2266C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9EE8);
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = *(void *)(a4 + 64);
  uint64_t v37 = a4 + 64;
  uint64_t v16 = -1 << *(unsigned char *)(a4 + 32);
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  if (!a2)
  {
    int64_t v19 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v31 = v37;
    *a1 = a4;
    a1[1] = v31;
    a1[2] = ~v16;
    a1[3] = v19;
    a1[4] = v18;
    return a3;
  }
  if (!a3)
  {
    int64_t v19 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v34 = -1 << *(unsigned char *)(a4 + 32);
  BOOL v35 = a1;
  int64_t v19 = 0;
  uint64_t v20 = 0;
  int64_t v36 = (unint64_t)(63 - v16) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t v21 = a3;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v23 = v22 | (v19 << 6);
  while (1)
  {
    ++v20;
    uint64_t v27 = *(void *)(a4 + 48);
    uint64_t v28 = sub_25B290080();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v11, v27 + *(void *)(*(void *)(v28 - 8) + 72) * v23, v28);
    uint64_t v29 = *(void *)(a4 + 56);
    uint64_t v30 = type metadata accessor for PairingRelationship();
    sub_25B22A704(v29 + *(void *)(*(void *)(v30 - 8) + 72) * v23, (uint64_t)&v11[*(int *)(v39 + 48)], (uint64_t (*)(void))type metadata accessor for PairingRelationship);
    sub_25B187574((uint64_t)v11, (uint64_t)v14, &qword_26A4D9EE8);
    uint64_t result = sub_25B187574((uint64_t)v14, a2, &qword_26A4D9EE8);
    if (v20 == v21)
    {
      a3 = v21;
      goto LABEL_38;
    }
    a2 += *(void *)(v38 + 72);
    if (v18) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v24 >= v36) {
      goto LABEL_33;
    }
    unint64_t v25 = *(void *)(v37 + 8 * v24);
    if (!v25)
    {
      v19 += 2;
      if (v24 + 1 >= v36)
      {
        unint64_t v18 = 0;
        int64_t v19 = v24;
      }
      else
      {
        unint64_t v25 = *(void *)(v37 + 8 * v19);
        if (v25) {
          goto LABEL_14;
        }
        int64_t v26 = v24 + 2;
        if (v24 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (v25)
        {
LABEL_17:
          int64_t v24 = v26;
          goto LABEL_18;
        }
        int64_t v19 = v24 + 3;
        if (v24 + 3 < v36)
        {
          unint64_t v25 = *(void *)(v37 + 8 * v19);
          if (v25)
          {
LABEL_14:
            int64_t v24 = v19;
            goto LABEL_18;
          }
          int64_t v26 = v24 + 4;
          if (v24 + 4 >= v36)
          {
LABEL_33:
            unint64_t v18 = 0;
            goto LABEL_37;
          }
          unint64_t v25 = *(void *)(v37 + 8 * v26);
          if (!v25)
          {
            while (1)
            {
              int64_t v24 = v26 + 1;
              if (__OFADD__(v26, 1)) {
                goto LABEL_42;
              }
              if (v24 >= v36)
              {
                unint64_t v18 = 0;
                int64_t v19 = v33;
                goto LABEL_37;
              }
              unint64_t v25 = *(void *)(v37 + 8 * v24);
              ++v26;
              if (v25) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v18 = 0;
        int64_t v19 = v24 + 2;
      }
LABEL_37:
      a3 = v20;
LABEL_38:
      uint64_t v16 = v34;
      a1 = v35;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v18 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v19 = v24;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_25B226A48(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    _OWORD v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 32 * v16);
    uint64_t v21 = v20[1];
    uint64_t v22 = v20[2];
    uint64_t v23 = v20[3];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    id v11[2] = v22;
    v11[3] = v23;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_25B226C64(void *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v7 = sub_25B290470();
  MEMORY[0x270FA5388](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v7);
  sub_25B22A6BC(&qword_26B33F218, MEMORY[0x263F045C0]);
  sub_25B290690();
  unint64_t v10 = *(void *)(v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B33F280) + 36));
  uint64_t result = sub_25B116DE0(v3, &qword_26B33F280);
  uint64_t v12 = v31;
  unint64_t v13 = v32;
  if (!a2) {
    goto LABEL_6;
  }
  if (!a3)
  {
LABEL_7:
    *a1 = v12;
    a1[1] = v13;
    a1[2] = v10;
    return a3;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (!v10 || (--v10, unint64_t v14 = *(void *)(v31 + 16), v32 == v14))
    {
LABEL_6:
      a3 = 0;
      goto LABEL_7;
    }
    if (v32 < v14)
    {
      unint64_t v15 = v32 + 1;
      *a2 = *(unsigned char *)(v31 + 32 + v32);
      if (a3 == 1)
      {
        ++v13;
      }
      else
      {
        unint64_t v16 = a3 - 2;
        if (a3 - 2 >= v14 + ~v13) {
          unint64_t v16 = v14 + ~v13;
        }
        if (v16 >= v10) {
          unint64_t v16 = v10;
        }
        unint64_t v17 = v16 + 1;
        if (v17 <= 0x10 || (uint64_t v18 = v13 + v12, ((unint64_t)&a2[-v13 - v12] & 0xFFFFFFFFFFFFFFF0) == 0x20))
        {
          uint64_t v19 = 1;
          uint64_t v20 = a2;
        }
        else
        {
          uint64_t v21 = v17 & 0xF;
          if ((v17 & 0xF) == 0) {
            uint64_t v21 = 16;
          }
          unint64_t v22 = v17 - v21;
          v15 += v17 - v21;
          uint64_t v20 = &a2[v17 - v21];
          uint64_t v19 = v22 + 1;
          v10 -= v22;
          uint64_t v23 = a2 + 1;
          uint64_t v24 = (long long *)(v18 + 33);
          do
          {
            long long v25 = *v24++;
            *v23++ = v25;
            v22 -= 16;
          }
          while (v22);
        }
        uint64_t v26 = 0;
        uint64_t v27 = v20 + 1;
        unint64_t v28 = v10 - 1;
        uint64_t v29 = v19;
        while (1)
        {
          if (v10 == v26)
          {
            unint64_t v10 = 0;
            unint64_t v13 = v15 + v26;
            a3 = v19 + v26;
            goto LABEL_7;
          }
          unint64_t v30 = v28;
          if (!(v15 - v14 + v26)) {
            break;
          }
          ++v29;
          v27[v26] = *(unsigned char *)(v15 + v12 + 32 + v26);
          ++v26;
          --v28;
          if (!(v19 - a3 + v26))
          {
            unint64_t v13 = v15 + v26;
            unint64_t v10 = v30;
            goto LABEL_7;
          }
        }
        unint64_t v13 = v14;
        unint64_t v10 = v28;
        a3 = v29;
      }
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25B226F00(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Record.ID(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v10);
  unint64_t v15 = (char *)&v29 - v14;
  uint64_t v34 = a4;
  uint64_t v17 = a4 + 64;
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (-v31 < 64) {
    uint64_t v18 = ~(-1 << -(char)v31);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v28 = ~v31;
    *a1 = v34;
    a1[1] = v17;
    a1[2] = v28;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v30 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v32 = v17;
  int64_t v33 = (unint64_t)(63 - v31) >> 6;
  int64_t v29 = v33 - 1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v9 + 72);
    sub_25B22A704(*(void *)(v34 + 48) + v27 * v23, (uint64_t)v12, type metadata accessor for Record.ID);
    sub_25B22A7CC((uint64_t)v12, (uint64_t)v15, type metadata accessor for Record.ID);
    uint64_t result = sub_25B22A7CC((uint64_t)v15, a2, type metadata accessor for Record.ID);
    if (v21 == a3) {
      goto LABEL_33;
    }
    a2 += v27;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v30;
      uint64_t v17 = v32;
      goto LABEL_34;
    }
    uint64_t v17 = v32;
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24;
LABEL_39:
    a3 = v21;
    a1 = v30;
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v24 + 2;
  if (v24 + 2 >= v33) {
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v20 = v24 + 3;
  if (v24 + 3 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24 + 2;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v20;
    goto LABEL_18;
  }
  int64_t v26 = v24 + 4;
  if (v24 + 4 >= v33)
  {
LABEL_36:
    unint64_t v19 = 0;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_17:
    int64_t v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      int64_t v20 = v29;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_25B227224(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    _OWORD v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25B227424(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    _OWORD v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = (void *)(*(void *)(a4 + 48) + 32 * v16);
    uint64_t v21 = v20[1];
    uint64_t v22 = v20[2];
    uint64_t v23 = v20[3];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    id v11[2] = v22;
    v11[3] = v23;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_25B227640(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    _OWORD v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25B227840(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

unint64_t sub_25B227934(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB288);
    uint64_t v3 = (void *)sub_25B290C00();
    for (unint64_t i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      uint64_t v6 = *i;
      unint64_t result = sub_25B18A868(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_25B227A0C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DB1F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned __int8 v5 = (unsigned __int8 *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DA7D8);
    uint64_t v7 = (void *)sub_25B290C00();
    uint64_t v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_25B187628(v9, (uint64_t)v5, (uint64_t *)&unk_26A4DB1F0);
      unsigned __int8 v11 = *v5;
      unint64_t result = sub_25B18AB70(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v7[6] + result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
      unint64_t result = sub_25B22A7CC(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      long long v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_25B227BD0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_25B290830();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_25B218D9C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_25B227C68(uint64_t a1)
{
  uint64_t v2 = sub_25B290080();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_25B22A6BC(&qword_26A4D9220, MEMORY[0x263F07508]);
  uint64_t v29 = sub_25B290830();
  if (v10)
  {
    int64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    unint64_t v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_25B218F4C(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_25B227F10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_25B180E18();
  uint64_t result = sub_25B290830();
  uint64_t v10 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B219270(&v9, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 4;
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_25B227FD0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_25B22A644();
  uint64_t result = sub_25B290830();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_25B219478(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_25B228044(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_25B229D78();
  uint64_t result = sub_25B290830();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_25B219598(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_25B2280DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B2281D4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v40 = a2;
  uint64_t v45 = a7;
  uint64_t v51 = a5;
  uint64_t v52 = a6;
  uint64_t v53 = a4;
  uint64_t v41 = a1;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9860);
  uint64_t v8 = MEMORY[0x270FA5388](v49);
  uint64_t v10 = (uint64_t *)((char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v57 = (uint64_t)&v40 - v11;
  uint64_t v12 = type metadata accessor for RecordMetadata();
  uint64_t v48 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Record.ID(0);
  uint64_t v46 = *(void *)(v15 - 8);
  uint64_t result = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v56 = (uint64_t)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v18 = 0;
  uint64_t v50 = (void *)a3;
  uint64_t v19 = *(void *)(a3 + 64);
  uint64_t v42 = 0;
  uint64_t v43 = a3 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v44 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v47 = v14;
  uint64_t v23 = v56;
  uint64_t v24 = v57;
  while (1)
  {
    if (v22)
    {
      uint64_t v54 = (v22 - 1) & v22;
      int64_t v55 = v18;
      unint64_t v26 = __clz(__rbit64(v22)) | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v27 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v27 >= v44) {
      return sub_25B1A2340(v41, v40, v42, v50);
    }
    unint64_t v28 = *(void *)(v43 + 8 * v27);
    int64_t v29 = v18 + 1;
    if (!v28)
    {
      int64_t v29 = v18 + 2;
      if (v18 + 2 >= v44) {
        return sub_25B1A2340(v41, v40, v42, v50);
      }
      unint64_t v28 = *(void *)(v43 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v18 + 3;
        if (v18 + 3 >= v44) {
          return sub_25B1A2340(v41, v40, v42, v50);
        }
        unint64_t v28 = *(void *)(v43 + 8 * v29);
        if (!v28) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v54 = (v28 - 1) & v28;
    int64_t v55 = v29;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_22:
    uint64_t v31 = v50;
    sub_25B22A704(v50[6] + *(void *)(v46 + 72) * v26, v23, type metadata accessor for Record.ID);
    sub_25B22A704(v31[7] + *(void *)(v48 + 72) * v26, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v32 = v49;
    uint64_t v33 = v24 + *(int *)(v49 + 48);
    sub_25B22A704(v23, v24, type metadata accessor for Record.ID);
    sub_25B22A704((uint64_t)v14, v33, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v34 = (uint64_t)v10 + *(int *)(v32 + 48);
    sub_25B22A704(v24, (uint64_t)v10, type metadata accessor for Record.ID);
    sub_25B22A704(v33, v34, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
    uint64_t v35 = v10[2];
    uint64_t v36 = v10[3];
    uint64_t v37 = v10[4];
    uint64_t v38 = v10[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B22A76C((uint64_t)v10, type metadata accessor for Record.ID);
    if ((v35 != v53 || v36 != v51) && (sub_25B290FB0() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    if (v37 == v52 && v38 == v45)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    char v25 = sub_25B290FB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25)
    {
LABEL_28:
      sub_25B116DE0(v57, &qword_26A4D9860);
      sub_25B22A76C(v34, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t v14 = v47;
      sub_25B22A76C((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t result = sub_25B22A76C(v56, type metadata accessor for Record.ID);
      *(unint64_t *)((char *)v41 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      BOOL v39 = __OFADD__(v42++, 1);
      unint64_t v22 = v54;
      int64_t v18 = v55;
      if (v39) {
        goto LABEL_35;
      }
    }
    else
    {
LABEL_5:
      sub_25B116DE0(v57, &qword_26A4D9860);
      sub_25B22A76C(v34, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t v14 = v47;
      sub_25B22A76C((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for RecordMetadata);
      uint64_t result = sub_25B22A76C(v56, type metadata accessor for Record.ID);
      unint64_t v22 = v54;
      int64_t v18 = v55;
    }
  }
  uint64_t v30 = v18 + 4;
  if (v18 + 4 >= v44) {
    return sub_25B1A2340(v41, v40, v42, v50);
  }
  unint64_t v28 = *(void *)(v43 + 8 * v30);
  if (v28)
  {
    int64_t v29 = v18 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v29 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v29 >= v44) {
      return sub_25B1A2340(v41, v40, v42, v50);
    }
    unint64_t v28 = *(void *)(v43 + 8 * v29);
    ++v30;
    if (v28) {
      goto LABEL_21;
    }
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_25B228750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v19[1] = *MEMORY[0x263EF8340];
  char v11 = *(unsigned char *)(a1 + 32);
  unsigned int v12 = v11 & 0x3F;
  unint64_t v13 = (unint64_t)((1 << v11) + 63) >> 6;
  size_t v14 = 8 * v13;
  swift_bridgeObjectRetain_n();
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v12 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v19[0] = v19;
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v19 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0), v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_25B2281D4((void *)((char *)v19 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0)), v13, a1, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v17 = (void *)swift_slowAlloc();
    bzero(v17, v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_25B2281D4((unint64_t *)v17, v13, a1, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    MEMORY[0x261160890](v17, -1, -1);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return v16;
}

uint64_t type metadata accessor for MetadataRecordPredicate()
{
  uint64_t result = qword_26A4DB188;
  if (!qword_26A4DB188) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25B2289DC(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for Record.ID(0) - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v28 = (uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v32 = (uint64_t)&v25 - v9;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v33 = MEMORY[0x263F8EE78];
  uint64_t v30 = *(void *)(a1 + 16);
  if (!v30) {
    return result;
  }
  uint64_t v11 = 0;
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v31 = *(void *)(v8 + 72);
  uint64_t v27 = (v12 + 32) & ~v12;
  uint64_t v29 = a1 + v27;
  uint64_t v25 = v2;
  unint64_t v26 = a2 + 7;
  uint64_t v13 = MEMORY[0x263F8EE78];
  while (1)
  {
    sub_25B22A704(v29 + v31 * v11, v32, type metadata accessor for Record.ID);
    uint64_t v14 = a2[2];
    if (!v14) {
      goto LABEL_21;
    }
    uint64_t v15 = *(void *)(v32 + 32);
    uint64_t v16 = *(void *)(v32 + 40);
    uint64_t v17 = a2;
    BOOL v18 = a2[4] == v15 && a2[5] == v16;
    if (!v18)
    {
      uint64_t result = sub_25B290FB0();
      if ((result & 1) == 0) {
        break;
      }
    }
LABEL_3:
    sub_25B22A76C(v32, type metadata accessor for Record.ID);
    a2 = v17;
LABEL_4:
    if (++v11 == v30) {
      return v33;
    }
  }
  if (v14 == 1)
  {
LABEL_21:
    sub_25B22A7CC(v32, v28, type metadata accessor for Record.ID);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_25B2240E0(0, *(void *)(v13 + 16) + 1, 1);
    }
    uint64_t v13 = v33;
    unint64_t v24 = *(void *)(v33 + 16);
    unint64_t v23 = *(void *)(v33 + 24);
    if (v24 >= v23 >> 1)
    {
      sub_25B2240E0(v23 > 1, v24 + 1, 1);
      uint64_t v13 = v33;
    }
    *(void *)(v13 + 16) = v24 + 1;
    sub_25B22A7CC(v28, v13 + v27 + v24 * v31, type metadata accessor for Record.ID);
    goto LABEL_4;
  }
  uint64_t v19 = v26;
  uint64_t v20 = 1;
  while (1)
  {
    uint64_t v21 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (*(v19 - 1) == v15 && *v19 == v16) {
      goto LABEL_3;
    }
    uint64_t result = sub_25B290FB0();
    if (result) {
      goto LABEL_3;
    }
    v19 += 2;
    ++v20;
    BOOL v18 = v21 == v14;
    a2 = v17;
    if (v18) {
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25B228CAC(void *a1)
{
  return sub_25B216A3C(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(uint64_t **)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_25B228CD4(uint64_t a1)
{
  return sub_25B2174D8(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_25B228CF4(uint64_t a1, uint64_t a2)
{
  return sub_25B217250(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_25B228D10(uint64_t a1, uint64_t a2)
{
  return sub_25B2177D8(a1, a2, v2[4], v2[2], v2[3]) & 1;
}

void *initializeBufferWithCopyOfBuffer for MetadataRecordPredicate(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    *(void *)(a1 + 8) = a2[1];
    uint64_t v5 = *(int *)(a3 + 32);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_25B290080();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
    uint64_t v33 = (int *)type metadata accessor for PairingRelationship();
    uint64_t v10 = v33[5];
    uint64_t v34 = v6;
    uint64_t v11 = v6 + v10;
    uint64_t v12 = (void *)(v7 + v10);
    uint64_t v13 = *(void *)(v7 + v10 + 8);
    *(void *)uint64_t v11 = *(void *)(v7 + v10);
    *(void *)(v11 + 8) = v13;
    uint64_t v14 = *(void *)(v7 + v10 + 24);
    *(void *)(v11 + 16) = *(void *)(v7 + v10 + 16);
    *(void *)(v11 + 24) = v14;
    *(_OWORD *)(v11 + 32) = *(_OWORD *)(v7 + v10 + 32);
    *(unsigned char *)(v11 + 48) = *(unsigned char *)(v7 + v10 + 48);
    *(_OWORD *)(v11 + 56) = *(_OWORD *)(v7 + v10 + 56);
    *(_OWORD *)(v11 + 72) = *(_OWORD *)(v7 + v10 + 72);
    *(_WORD *)(v11 + 88) = *(_WORD *)(v7 + v10 + 88);
    uint64_t v15 = *(void *)(v7 + v10 + 104);
    *(void *)(v11 + 96) = *(void *)(v7 + v10 + 96);
    *(void *)(v11 + 104) = v15;
    uint64_t v16 = (uint64_t *)(v7 + v10 + 112);
    unint64_t v17 = *(void *)(v7 + v10 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)(v11 + 112) = *(_OWORD *)v16;
    }
    else
    {
      uint64_t v19 = *v16;
      sub_25B114300(*v16, v17);
      *(void *)(v11 + 112) = v19;
      *(void *)(v11 + 120) = v17;
    }
    uint64_t v20 = v12[17];
    *(void *)(v11 + 128) = v12[16];
    *(void *)(v11 + 136) = v20;
    uint64_t v21 = v12[19];
    *(void *)(v11 + 144) = v12[18];
    *(void *)(v11 + 152) = v21;
    uint64_t v22 = v12[21];
    *(void *)(v11 + 160) = v12[20];
    *(void *)(v11 + 168) = v22;
    uint64_t v23 = v33[6];
    uint64_t v31 = v7 + v23;
    uint64_t v32 = v34 + v23;
    uint64_t v24 = sub_25B290000();
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v32, v31, v24);
    v25(v34 + v33[7], v7 + v33[7], v24);
    uint64_t v26 = v33[8];
    uint64_t v27 = (void *)(v34 + v26);
    uint64_t v28 = (void *)(v7 + v26);
    unint64_t v29 = v28[1];
    if (v29 >= 3)
    {
      *uint64_t v27 = *v28;
      v27[1] = v29;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    }
    v25(v34 + v33[9], v7 + v33[9], v24);
  }
  return v3;
}

uint64_t destroy for MetadataRecordPredicate(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v7 = v4 + v6[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)(v7 + 120);
  if (v8 >> 60 != 15) {
    sub_25B10DFF0(*(void *)(v7 + 112), v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v4 + v6[6];
  uint64_t v10 = sub_25B290000();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v13)((void *)(v10 - 8), v9, v10);
  v13(v4 + v6[7], v10);
  if (*(void *)(v4 + v6[8] + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = v4 + v6[9];
  return ((uint64_t (*)(uint64_t, uint64_t))v13)(v11, v10);
}

uint64_t initializeWithCopy for MetadataRecordPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(int *)(a3 + 32);
  uint64_t v4 = a1 + v3;
  uint64_t v5 = a2 + v3;
  uint64_t v6 = sub_25B290080();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  swift_bridgeObjectRetain();
  v7(v4, v5, v6);
  uint64_t v31 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v8 = v31[5];
  uint64_t v9 = v4 + v8;
  uint64_t v10 = (void *)(v5 + v8);
  uint64_t v11 = *(void *)(v5 + v8 + 8);
  *(void *)uint64_t v9 = *(void *)(v5 + v8);
  *(void *)(v9 + 8) = v11;
  uint64_t v12 = *(void *)(v5 + v8 + 24);
  *(void *)(v9 + 16) = *(void *)(v5 + v8 + 16);
  *(void *)(v9 + 24) = v12;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v5 + v8 + 32);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v5 + v8 + 48);
  *(_OWORD *)(v9 + 56) = *(_OWORD *)(v5 + v8 + 56);
  *(_OWORD *)(v9 + 72) = *(_OWORD *)(v5 + v8 + 72);
  *(_WORD *)(v9 + 88) = *(_WORD *)(v5 + v8 + 88);
  uint64_t v13 = *(void *)(v5 + v8 + 104);
  *(void *)(v9 + 96) = *(void *)(v5 + v8 + 96);
  *(void *)(v9 + 104) = v13;
  uint64_t v14 = (uint64_t *)(v5 + v8 + 112);
  unint64_t v15 = *(void *)(v5 + v8 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)(v9 + 112) = *(_OWORD *)v14;
  }
  else
  {
    uint64_t v16 = *v14;
    sub_25B114300(*v14, v15);
    *(void *)(v9 + 112) = v16;
    *(void *)(v9 + 120) = v15;
  }
  uint64_t v17 = v10[17];
  *(void *)(v9 + 128) = v10[16];
  *(void *)(v9 + 136) = v17;
  uint64_t v18 = v10[19];
  *(void *)(v9 + 144) = v10[18];
  *(void *)(v9 + 152) = v18;
  uint64_t v19 = v10[21];
  *(void *)(v9 + 160) = v10[20];
  *(void *)(v9 + 168) = v19;
  uint64_t v20 = v31[6];
  uint64_t v29 = v4 + v20;
  uint64_t v21 = v5 + v20;
  uint64_t v22 = sub_25B290000();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23(v29, v21, v22);
  v23(v4 + v31[7], v5 + v31[7], v22);
  uint64_t v24 = v31[8];
  uint64_t v25 = (void *)(v4 + v24);
  uint64_t v26 = (void *)(v5 + v24);
  unint64_t v27 = v26[1];
  if (v27 >= 3)
  {
    *uint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  }
  v23(v4 + v31[9], v5 + v31[9], v22);
  return a1;
}

uint64_t assignWithCopy for MetadataRecordPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v11 = v10[5];
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  *(void *)uint64_t v12 = *(void *)(v8 + v11);
  *(void *)(v12 + 8) = *(void *)(v8 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  long long v14 = *(_OWORD *)(v13 + 56);
  long long v15 = *(_OWORD *)(v13 + 72);
  *(_WORD *)(v12 + 88) = *(_WORD *)(v13 + 88);
  *(_OWORD *)(v12 + 72) = v15;
  *(_OWORD *)(v12 + 56) = v14;
  *(void *)(v12 + 96) = *(void *)(v13 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 104) = *(void *)(v13 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)(v13 + 112);
  unint64_t v17 = *(void *)(v13 + 120);
  if (*(void *)(v12 + 120) >> 60 == 15)
  {
    if (v17 >> 60 != 15)
    {
      uint64_t v18 = *v16;
      sub_25B114300(*v16, *(void *)(v13 + 120));
      *(void *)(v12 + 112) = v18;
      *(void *)(v12 + 120) = v17;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v17 >> 60 == 15)
  {
    sub_25B1973E4(v12 + 112);
LABEL_6:
    *(_OWORD *)(v12 + 112) = *(_OWORD *)v16;
    goto LABEL_8;
  }
  uint64_t v19 = *v16;
  sub_25B114300(*v16, *(void *)(v13 + 120));
  uint64_t v20 = *(void *)(v12 + 112);
  unint64_t v21 = *(void *)(v12 + 120);
  *(void *)(v12 + 112) = v19;
  *(void *)(v12 + 120) = v17;
  sub_25B10DFF0(v20, v21);
LABEL_8:
  *(void *)(v12 + 128) = *(void *)(v13 + 128);
  *(void *)(v12 + 136) = *(void *)(v13 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 144) = *(void *)(v13 + 144);
  *(void *)(v12 + 152) = *(void *)(v13 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 160) = *(void *)(v13 + 160);
  *(void *)(v12 + 168) = *(void *)(v13 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v10[6];
  uint64_t v23 = v7 + v22;
  uint64_t v24 = v8 + v22;
  uint64_t v25 = sub_25B290000();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24);
  v26(v23, v24, v25);
  v26(v7 + v10[7], v8 + v10[7], v25);
  uint64_t v27 = v10[8];
  uint64_t v28 = (void *)(v7 + v27);
  uint64_t v29 = (void *)(v8 + v27);
  unint64_t v30 = *(void *)(v7 + v27 + 8);
  unint64_t v31 = *(void *)(v8 + v27 + 8);
  if (v30 >= 3)
  {
    if (v31 >= 3)
    {
      *uint64_t v28 = *v29;
      v28[1] = v29[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_25B116DE0((uint64_t)v28, &qword_26A4DADC0);
    goto LABEL_13;
  }
  if (v31 < 3)
  {
LABEL_13:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    goto LABEL_15;
  }
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
LABEL_15:
  v26(v7 + v10[9], v8 + v10[9], v25);
  return a1;
}

uint64_t initializeWithTake for MetadataRecordPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v9 = v8[5];
  uint64_t v10 = (_OWORD *)(v5 + v9);
  uint64_t v11 = (_OWORD *)(v6 + v9);
  long long v12 = v11[9];
  v10[8] = v11[8];
  v10[9] = v12;
  v10[10] = v11[10];
  long long v13 = v11[5];
  v10[4] = v11[4];
  v10[5] = v13;
  long long v14 = v11[7];
  v10[6] = v11[6];
  v10[7] = v14;
  long long v15 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v15;
  long long v16 = v11[3];
  void v10[2] = v11[2];
  void v10[3] = v16;
  uint64_t v17 = v8[6];
  uint64_t v18 = v5 + v17;
  uint64_t v19 = v6 + v17;
  uint64_t v20 = sub_25B290000();
  unint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v18, v19, v20);
  v21(v5 + v8[7], v6 + v8[7], v20);
  *(_OWORD *)(v5 + v8[8]) = *(_OWORD *)(v6 + v8[8]);
  v21(v5 + v8[9], v6 + v8[9], v20);
  return a1;
}

uint64_t assignWithTake for MetadataRecordPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25B290080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for PairingRelationship();
  uint64_t v11 = v10[5];
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = *(void *)(v8 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(v8 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
  *(_WORD *)(v12 + 88) = *(_WORD *)(v13 + 88);
  *(void *)(v12 + 96) = *(void *)(v13 + 96);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 104) = *(void *)(v13 + 104);
  swift_bridgeObjectRelease();
  long long v16 = (_OWORD *)(v13 + 112);
  unint64_t v17 = *(void *)(v12 + 120);
  if (v17 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v18 = *(void *)(v13 + 120);
  if (v18 >> 60 == 15)
  {
    sub_25B1973E4(v12 + 112);
LABEL_4:
    *(_OWORD *)(v12 + 112) = *v16;
    goto LABEL_6;
  }
  uint64_t v19 = *(void *)(v12 + 112);
  *(void *)(v12 + 112) = *(void *)v16;
  *(void *)(v12 + 120) = v18;
  sub_25B10DFF0(v19, v17);
LABEL_6:
  uint64_t v20 = *(void *)(v13 + 136);
  *(void *)(v12 + 128) = *(void *)(v13 + 128);
  *(void *)(v12 + 136) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v13 + 152);
  *(void *)(v12 + 144) = *(void *)(v13 + 144);
  *(void *)(v12 + 152) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v13 + 168);
  *(void *)(v12 + 160) = *(void *)(v13 + 160);
  *(void *)(v12 + 168) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = v10[6];
  uint64_t v24 = v7 + v23;
  uint64_t v25 = v8 + v23;
  uint64_t v26 = sub_25B290000();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40);
  v27(v24, v25, v26);
  v27(v7 + v10[7], v8 + v10[7], v26);
  uint64_t v28 = v10[8];
  uint64_t v29 = (void *)(v7 + v28);
  unint64_t v30 = (void *)(v8 + v28);
  if (*(void *)(v7 + v28 + 8) >= 3uLL)
  {
    unint64_t v31 = v30[1];
    if (v31 >= 3)
    {
      *uint64_t v29 = *v30;
      v29[1] = v31;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_25B116DE0((uint64_t)v29, &qword_26A4DADC0);
  }
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
LABEL_11:
  v27(v7 + v10[9], v8 + v10[9], v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetadataRecordPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B229B34);
}

uint64_t sub_25B229B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for PairingRelationship();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 32);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for MetadataRecordPredicate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B229C04);
}

uint64_t sub_25B229C04(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for PairingRelationship();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25B229CAC()
{
  uint64_t result = type metadata accessor for PairingRelationship();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of MetadataStoring.zoneVersion(for:pairingRelationship:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of MetadataStoring.zoneVersions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

unint64_t sub_25B229D78()
{
  unint64_t result = qword_26A4DB198;
  if (!qword_26A4DB198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DB198);
  }
  return result;
}

unint64_t sub_25B229DCC()
{
  unint64_t result = qword_26A4DB1E0;
  if (!qword_26A4DB1E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4DB1D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DB1E0);
  }
  return result;
}

uint64_t sub_25B229E28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B229F1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AF0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B22A028(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 176 * a1 + 32;
    unint64_t v6 = a3 + 176 * v4;
    if (v5 >= v6 || v5 + 176 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B22A11C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v4 = *v3++;
      sub_25B219478(&v6, v4);
      --v2;
    }
    while (v2);
    return v7;
  }
  return a2;
}

uint64_t sub_25B22A178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v30 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v29 = (char *)v23 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B33F200);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a2;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    unint64_t v17 = v13 + 40;
    uint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v27 = v14;
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v25 = v16;
    uint64_t v28 = v13;
    unint64_t v18 = (void (**)(uint64_t, uint64_t))(v13 - 8);
    v23[1] = v17 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v20 = (uint64_t)v29;
    uint64_t v19 = v30;
    while (1)
    {
      v27(v11, v15, v4);
      uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v17;
      (*(void (**)(char *, void, uint64_t, uint64_t))v17)(v11, 0, 1, v4);
      if ((*v26)(v11, 1, v4) == 1) {
        break;
      }
      (*v24)(v19, v11, v4);
      sub_25B218F4C(v20, v19);
      (*v18)(v20, v4);
      v15 += v25;
      if (!--v12) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_7:
    v21(v11, 1, 1, v4);
  }
  return v31;
}

uint64_t sub_25B22A3E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

uint64_t sub_25B22A53C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

unint64_t sub_25B22A644()
{
  unint64_t result = qword_26A4D92A0;
  if (!qword_26A4D92A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D92A0);
  }
  return result;
}

BOOL sub_25B22A698(uint64_t a1)
{
  return sub_25B217DFC(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_25B22A6BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B22A704(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B22A76C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25B22A7CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B22A834(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B22A89C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25B22A8F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B33F4B0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25B290C10();
  __break(1u);
  return result;
}

ReplicatorEngine::MessagePriority_optional __swiftcall MessagePriority.init(rawValue:)(Swift::UInt32 rawValue)
{
  if (rawValue >= 3) {
    char v2 = 3;
  }
  else {
    char v2 = rawValue;
  }
  *unint64_t v1 = v2;
  return (ReplicatorEngine::MessagePriority_optional)rawValue;
}

uint64_t MessagePriority.rawValue.getter()
{
  return *v0;
}

void *static MessagePriority.allCases.getter()
{
  return &unk_2708D5190;
}

unint64_t sub_25B22AA34()
{
  unint64_t result = qword_26A4DB2B8;
  if (!qword_26A4DB2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DB2B8);
  }
  return result;
}

ReplicatorEngine::MessagePriority_optional sub_25B22AA88(Swift::UInt32 *a1)
{
  return MessagePriority.init(rawValue:)(*a1);
}

uint64_t sub_25B22AA90()
{
  return sub_25B290710();
}

uint64_t sub_25B22AAF0()
{
  return sub_25B2906E0();
}

unint64_t sub_25B22AB44()
{
  unint64_t result = qword_26A4DB2C0;
  if (!qword_26A4DB2C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A4DB2C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DB2C0);
  }
  return result;
}

void sub_25B22ABA0(void *a1@<X8>)
{
  *a1 = &unk_2708D5248;
}

unsigned char *storeEnumTagSinglePayload for MessagePriority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    _OWORD *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B22AC7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePriority()
{
  return &type metadata for MessagePriority;
}

unint64_t sub_25B22ACB4()
{
  unint64_t result = qword_26A4DB2D0;
  if (!qword_26A4DB2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4DB2D0);
  }
  return result;
}

uint64_t IDSDependencyDevice.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IDSDependencyDevice.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IDSDependencyDevice.id.modify())()
{
  return nullsub_1;
}

ReplicatorEngine::IDSDependencyDevice __swiftcall IDSDependencyDevice.init(id:)(ReplicatorEngine::IDSDependencyDevice id)
{
  *uint64_t v1 = id;
  return id;
}

uint64_t getEnumTagSinglePayload for IDSDependencyDevice(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSDependencyDevice(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSDependencyDevice()
{
  return &type metadata for IDSDependencyDevice;
}

uint64_t dispatch thunk of IDSDependency.accountsChanged.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of IDSDependency.devicesChanged.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of IDSDependency.localDeviceID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of IDSDependency.allDevices.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of IDSDependency.fetchLocalDeviceID(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ActiveWatchIDSIDProviding.getActiveWatchIDSDeviceUniqueIDOverride(callBackQueue:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ActiveWatchPairingEnforcing.init(pairingRelationshipManager:activeWatchIDSIDProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ActiveWatchPairingEnforcing.beginMonitoringActivePairedWatchDevice(activePairedWatchStateChanged:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ActiveWatchPairingEnforcing.stopMonitoringActivePairedWatchDevice()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ActiveWatchPairingEnforcing.enforceOnlyActiveWatchPaired(watchPairingRelationships:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_25B22AEF4(uint64_t a1, uint64_t a2)
{
  int v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

id sub_25B22AF48()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B2908F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25B2908C0();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_25B290360();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = *(void **)(v0 + 96);
  if (v8)
  {
    id v9 = *(id *)(v0 + 96);
  }
  else
  {
    v14[0] = sub_25B10CB64();
    sub_25B290350();
    v14[1] = MEMORY[0x263F8EE78];
    sub_25B20CE74((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
    sub_25B1B7B24((unint64_t *)&qword_26A4D9B20, (uint64_t *)&unk_26A4D9B10);
    sub_25B290A00();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F138], v2);
    uint64_t v10 = (void *)sub_25B290920();
    uint64_t v11 = *(void **)(v0 + 96);
    *(void *)(v1 + 96) = v10;
    id v9 = v10;

    uint64_t v8 = 0;
  }
  id v12 = v8;
  return v9;
}

void sub_25B22B1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 112);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v27 = &v31;
    id v28 = self;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = a1;
    do
    {
      id v9 = *(void **)(v5 + 8 * v7++ + 32);
      id v10 = v9;
      id v11 = objc_msgSend(v28, sel_defaultCenter, v27);
      uint64_t v12 = swift_allocObject();
      swift_weakInit();
      unint64_t v13 = (void *)swift_allocObject();
      v13[2] = v12;
      void v13[3] = v8;
      v13[4] = a2;
      uint64_t v33 = sub_25B22F070;
      uint64_t v34 = v13;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v30 = 1107296256;
      uint64_t v31 = sub_25B22BB00;
      uint64_t v32 = &block_descriptor_80_0;
      uint64_t v14 = _Block_copy(&aBlock);
      id v15 = v10;
      swift_retain();
      swift_release();
      id v16 = objc_msgSend(v11, sel_addObserverForName_object_queue_usingBlock_, v15, 0, 0, v14);
      _Block_release(v14);
      swift_unknownObjectRelease();
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
    a1 = v8;
  }
  sub_25B2905C0();
  unint64_t v17 = sub_25B22AF48();
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = v18;
  v19[3] = a1;
  v19[4] = a2;
  uint64_t v33 = sub_25B22F080;
  uint64_t v34 = v19;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v30 = 1107296256;
  uint64_t v31 = sub_25B22AEF4;
  uint64_t v32 = &block_descriptor_87;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v21 = sub_25B290610();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  notify_register_dispatch((const char *)(v21 + 32), (int *)(v2 + 104), v17, v20);
  swift_endAccess();
  swift_release();
  _Block_release(v20);

  sub_25B2905C0();
  uint64_t v22 = sub_25B22AF48();
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  uint64_t v24 = (void *)swift_allocObject();
  void v24[2] = v23;
  v24[3] = a1;
  void v24[4] = a2;
  uint64_t v33 = sub_25B22F0AC;
  uint64_t v34 = v24;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v30 = 1107296256;
  uint64_t v31 = sub_25B22AEF4;
  uint64_t v32 = &block_descriptor_94_0;
  uint64_t v25 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v26 = sub_25B290610();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  notify_register_dispatch((const char *)(v26 + 32), (int *)(v2 + 108), v22, v25);
  swift_endAccess();
  swift_release();
  _Block_release(v25);
}

uint64_t sub_25B22B5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_25B290320();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25B290360();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    id v16 = (void *)sub_25B28FCD0();
    uint64_t v17 = sub_25B2905C0();
    uint64_t v26 = v11;
    uint64_t v27 = v10;
    uint64_t v18 = v17;
    uint64_t v20 = v19;

    id v25 = sub_25B22AF48();
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = v18;
    v21[3] = v20;
    v21[4] = a3;
    void v21[5] = a4;
    v21[6] = v15;
    aBlock[4] = sub_25B22F11C;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_25B10F584;
    aBlock[3] = &block_descriptor_100;
    uint64_t v22 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_25B290340();
    uint64_t v28 = MEMORY[0x263F8EE78];
    sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
    sub_25B290A00();
    uint64_t v23 = v25;
    MEMORY[0x26115F250](0, v13, v9, v22);
    _Block_release(v22);
    swift_release();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
    return swift_release();
  }
  return result;
}

uint64_t sub_25B22B914(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_25B290190();
  __swift_project_value_buffer(v6, (uint64_t)qword_26A4EB150);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_25B290160();
  os_log_type_t v8 = sub_25B2908A0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = v10;
    *(_DWORD *)id v9 = 136446210;
    swift_bridgeObjectRetain();
    sub_25B288E98(a1, a2, &v14);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B107000, v7, v8, "Paired watch state changed: \"%{public}s\", will check for pairing change", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x261160890](v10, -1, -1);
    MEMORY[0x261160890](v9, -1, -1);
  }
  else
  {

    uint64_t v11 = swift_bridgeObjectRelease_n();
  }
  uint64_t v12 = a3(v11);
  sub_25B22C11C(v12, 0, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B22BB00(uint64_t a1)
{
  uint64_t v2 = sub_25B28FCE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_25B28FCC0();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_25B22BBF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, const char *a5)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_25B290190();
    __swift_project_value_buffer(v8, (uint64_t)qword_26A4EB150);
    id v9 = sub_25B290160();
    os_log_type_t v10 = sub_25B2908A0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_25B107000, v9, v10, a5, v11, 2u);
      MEMORY[0x261160890](v11, -1, -1);
    }

    uint64_t v12 = a3();
    sub_25B22C11C(v12, 0, 0);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25B22BD44()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = self;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void **)(v1 + 8 * v4++ + 32);
      id v6 = v5;
      id v7 = objc_msgSend(v3, sel_defaultCenter);
      objc_msgSend(v7, sel_removeObserver_name_object_, v0, v6, 0);
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  notify_cancel(*(_DWORD *)(v0 + 104));
  swift_beginAccess();
  return notify_cancel(*(_DWORD *)(v0 + 108));
}

uint64_t sub_25B22BE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_25B290320();
  uint64_t v19 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25B290360();
  uint64_t v10 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = sub_25B22AF48();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v3;
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = a3;
  aBlock[4] = sub_25B22EFE8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_71_0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25B207E2C(a2);
  sub_25B290340();
  uint64_t v20 = MEMORY[0x263F8EE78];
  sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  return swift_release();
}

uint64_t sub_25B22C11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_25B290410();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (id *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v10 = sub_25B22AF48();
  (*(void (**)(id *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F0E0], v7);
  char v11 = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(id *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    id v13 = (void *)swift_allocObject();
    v13[2] = a2;
    void v13[3] = a3;
    v13[4] = v3;
    uint64_t v14 = v3[10];
    uint64_t v15 = v3[11];
    __swift_project_boxed_opaque_existential_1(v3 + 7, v14);
    sub_25B207E2C(a2);
    swift_retain();
    id v16 = sub_25B22AF48();
    uint64_t v17 = (void *)swift_allocObject();
    long long v17[2] = v3;
    v17[3] = a1;
    v17[4] = sub_25B22EEFC;
    v17[5] = v13;
    uint64_t v18 = *(void (**)(id, void (*)(uint64_t), void *, uint64_t, uint64_t))(v15 + 8);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v18(v16, sub_25B22EF54, v17, v14, v15);
    swift_release();

    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_25B22C324(void (*a1)(void), char a2, void (*a3)(void), uint64_t a4, void *a5)
{
  uint64_t v106 = a5;
  uint64_t v108 = type metadata accessor for PairingRelationship();
  uint64_t v9 = *(void *)(v108 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v108);
  uint64_t v105 = (uint64_t)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v109 = (uint64_t)&v91 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  id v16 = (char *)&v91 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v91 - v17;
  if (a2)
  {
    int64_t v44 = a1;
    if (qword_26A4D98C0 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_25B290190();
    __swift_project_value_buffer(v45, (uint64_t)qword_26A4EB150);
    uint64_t v46 = a1;
    uint64_t v47 = a1;
    uint64_t v48 = sub_25B290160();
    os_log_type_t v49 = sub_25B2908A0();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 138412290;
      uint64_t v52 = a1;
      uint64_t v53 = _swift_stdlib_bridgeErrorToNSError();
      v115[0] = v53;
      sub_25B2909C0();
      *uint64_t v51 = v53;
      sub_25B22EF80(a1, 1);
      sub_25B22EF80(a1, 1);
      _os_log_impl(&dword_25B107000, v48, v49, "failed to get active watch pairing relationship. will try again later: %@", v50, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4DAC60);
      swift_arrayDestroy();
      MEMORY[0x261160890](v51, -1, -1);
      MEMORY[0x261160890](v50, -1, -1);

      if (!a3) {
        goto LABEL_29;
      }
    }
    else
    {
      sub_25B22EF80(a1, 1);
      sub_25B22EF80(a1, 1);

      if (!a3)
      {
LABEL_29:
        sub_25B22EF80(a1, 1);
        return;
      }
    }
    a3();
    goto LABEL_29;
  }
  uint64_t v19 = qword_26A4D98C0;
  swift_bridgeObjectRetain();
  if (v19 != -1) {
    goto LABEL_36;
  }
  while (1)
  {
    uint64_t v20 = sub_25B290190();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_26A4EB150);
    sub_25B22EF8C(a1, 0);
    swift_bridgeObjectRetain();
    uint64_t v103 = v21;
    uint64_t v22 = sub_25B290160();
    int v23 = sub_25B2908A0();
    BOOL v24 = os_log_type_enabled(v22, (os_log_type_t)v23);
    uint64_t v25 = MEMORY[0x263F8EE58];
    uint64_t v107 = v16;
    unint64_t v99 = a3;
    uint64_t v98 = a4;
    int64_t v97 = a1;
    if (!v24)
    {
      sub_25B22EF80(a1, 0);
      sub_25B22EF80(a1, 0);

      uint64_t v55 = v109;
      uint64_t v56 = *((void *)a1 + 2);
      if (!v56) {
        goto LABEL_32;
      }
      goto LABEL_20;
    }
    int v93 = v23;
    os_log_t v95 = v22;
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v92 = swift_slowAlloc();
    v115[0] = v92;
    unint64_t v94 = v26;
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v27 = (void *)*((void *)a1 + 2);
    uint64_t v28 = MEMORY[0x263F8EE78];
    uint64_t v96 = v9;
    if (!v27) {
      break;
    }
    uint64_t v114 = MEMORY[0x263F8EE78];
    sub_25B2242D0(0, (int64_t)v27, 0);
    uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9C30);
    a4 = (uint64_t)a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    *(void *)&long long v101 = *(void *)(v9 + 72);
    uint64_t v100 = &v110;
    uint64_t v29 = v108;
    while (1)
    {
      uint64_t v104 = v27;
      sub_25B1D748C(a4, (uint64_t)v18);
      uint64_t v30 = (uint64_t)v18;
      uint64_t v31 = (void (**)(void))&v18[*(int *)(v29 + 20)];
      uint64_t v32 = v31[3];
      uint64_t v110 = v31[2];
      unint64_t v111 = (char *)v32;
      uint64_t v33 = v31[1];
      uint64_t v112 = *v31;
      uint64_t v113 = v33;
      uint64_t v9 = sub_25B290C00();
      id v16 = (char *)v110;
      uint64_t v18 = v111;
      a3 = v112;
      a1 = v113;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v34 = sub_25B18A634((uint64_t)v16, (uint64_t)v18);
      if (v35) {
        break;
      }
      *(void *)(v9 + 8 * (v34 >> 6) + 64) |= 1 << v34;
      uint64_t v36 = (void *)(*(void *)(v9 + 48) + 16 * v34);
      *uint64_t v36 = v16;
      v36[1] = v18;
      uint64_t v37 = (void (**)(void))(*(void *)(v9 + 56) + 16 * v34);
      *uint64_t v37 = a3;
      v37[1] = a1;
      uint64_t v38 = *(void *)(v9 + 16);
      BOOL v39 = __OFADD__(v38, 1);
      uint64_t v40 = v38 + 1;
      if (v39) {
        goto LABEL_35;
      }
      *(void *)(v9 + 16) = v40;
      __swift_instantiateConcreteTypeFromMangledName(qword_26A4DB2D8);
      swift_arrayDestroy();
      swift_release();
      uint64_t v18 = (char *)v30;
      sub_25B1D7430(v30);
      uint64_t v28 = v114;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25B2242D0(0, *(void *)(v28 + 16) + 1, 1);
        uint64_t v28 = v114;
      }
      uint64_t v29 = v108;
      uint64_t v41 = v104;
      unint64_t v43 = *(void *)(v28 + 16);
      unint64_t v42 = *(void *)(v28 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_25B2242D0(v42 > 1, v43 + 1, 1);
        uint64_t v28 = v114;
      }
      *(void *)(v28 + 16) = v43 + 1;
      *(void *)(v28 + 8 * v43 + 32) = v9;
      a4 += v101;
      uint64_t v27 = (void *)((char *)v41 - 1);
      if (!v27)
      {
        a3 = v99;
        a1 = v97;
        id v16 = v107;
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_once();
  }
LABEL_31:
  uint64_t v84 = v94;
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9A60);
  uint64_t v86 = MEMORY[0x26115F080](v28, v85);
  unint64_t v88 = v87;
  swift_bridgeObjectRelease();
  uint64_t v114 = sub_25B288E98(v86, v88, v115);
  sub_25B2909C0();
  swift_bridgeObjectRelease();
  sub_25B22EF80(a1, 0);
  sub_25B22EF80(a1, 0);
  os_log_t v89 = v95;
  _os_log_impl(&dword_25B107000, v95, (os_log_type_t)v93, "nonActiveWatchPairingRelationships:%s", v84, 0xCu);
  uint64_t v25 = MEMORY[0x263F8EE58];
  uint64_t v90 = v92;
  swift_arrayDestroy();
  MEMORY[0x261160890](v90, -1, -1);
  MEMORY[0x261160890](v84, -1, -1);

  uint64_t v55 = v109;
  uint64_t v9 = v96;
  uint64_t v56 = *((void *)a1 + 2);
  if (!v56)
  {
LABEL_32:
    sub_25B22EF80(a1, 0);
    if (a3) {
      a3();
    }
    return;
  }
LABEL_20:
  uint64_t v104 = v106 + 2;
  uint64_t v57 = (uint64_t)a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v102 = *(void *)(v9 + 72);
  *(void *)&long long v54 = 136315394;
  long long v101 = v54;
  uint64_t v100 = (void (**)(void))(v25 + 8);
  do
  {
    sub_25B1D748C(v57, (uint64_t)v16);
    sub_25B1D748C((uint64_t)v16, v55);
    uint64_t v65 = v105;
    sub_25B1D748C((uint64_t)v16, v105);
    uint64_t v66 = sub_25B290160();
    os_log_type_t v67 = sub_25B2908A0();
    BOOL v68 = os_log_type_enabled(v66, v67);
    uint64_t v69 = v108;
    if (v68)
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v71 = v65;
      uint64_t v72 = swift_slowAlloc();
      v115[0] = v72;
      *(_DWORD *)uint64_t v70 = v101;
      uint64_t v73 = v109 + *(int *)(v69 + 20);
      uint64_t v74 = *(void *)(v73 + 16);
      unint64_t v75 = *(void *)(v73 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v70 + 4) = sub_25B288E98(v74, v75, v115);
      swift_bridgeObjectRelease();
      sub_25B1D7430(v109);
      *(_WORD *)(v70 + 12) = 2080;
      BOOL v76 = (uint64_t *)(v71 + *(int *)(v69 + 20));
      uint64_t v77 = *v76;
      unint64_t v78 = v76[1];
      swift_bridgeObjectRetain();
      uint64_t v79 = v77;
      id v16 = v107;
      *(void *)(v70 + 14) = sub_25B288E98(v79, v78, v115);
      swift_bridgeObjectRelease();
      uint64_t v80 = v71;
      uint64_t v55 = v109;
      sub_25B1D7430(v80);
      _os_log_impl(&dword_25B107000, v66, v67, "removing non-active watch relationship \"%s\" %s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v72, -1, -1);
      MEMORY[0x261160890](v70, -1, -1);
    }
    else
    {
      sub_25B1D7430(v55);
      sub_25B1D7430(v65);
    }

    uint64_t v58 = v106[5];
    uint64_t v59 = v106[6];
    __swift_project_boxed_opaque_existential_1(v104, v58);
    int v60 = &v16[*(int *)(v69 + 20)];
    uint64_t v61 = *(void *)v60;
    uint64_t v62 = *((void *)v60 + 1);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 32);
    swift_bridgeObjectRetain();
    uint64_t v64 = v61;
    id v16 = v107;
    v63(v64, v62, v58, v59);
    swift_bridgeObjectRelease();
    sub_25B1D7430((uint64_t)v16);
    v57 += v102;
    --v56;
  }
  while (v56);
  sub_25B22EF80(v97, 0);
  uint64_t v81 = v106[5];
  uint64_t v82 = v106[6];
  __swift_project_boxed_opaque_existential_1(v104, v81);
  uint64_t v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 40))(v81, v82);
  if (v99) {
    ((void (*)(uint64_t))v99)(v83);
  }
}

void sub_25B22CCF8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t), uint64_t a5)
{
  uint64_t v35 = a5;
  uint64_t v36 = a4;
  uint64_t v33 = a3;
  uint64_t v6 = type metadata accessor for PairingRelationship();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = sub_25B290410();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (id *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void *)(a1 + 8);
  unint64_t v34 = *(void *)a1;
  int v17 = *(unsigned __int8 *)(a1 + 16);
  id *v15 = sub_25B22AF48();
  (*(void (**)(id *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F0E0], v12);
  LOBYTE(a1) = sub_25B290440();
  (*(void (**)(id *, uint64_t))(v13 + 8))(v15, v12);
  if (a1)
  {
    if (v17)
    {
      sub_25B182988();
      uint64_t v18 = (void *)swift_allocError();
      unsigned char *v19 = v34;
      v36(v18, 1);
    }
    else if (v16)
    {
      uint64_t v20 = v33;
      swift_bridgeObjectRetain();
      uint64_t v21 = v34;
      sub_25B22EF60(v34, v16, 0);
      uint64_t v22 = sub_25B22E970(v20, v21, v16);
      sub_25B22EF70(v21, v16, 0);
      swift_bridgeObjectRelease();
      v36((void *)v22, 0);
      swift_bridgeObjectRelease();
    }
    else
    {
      int v23 = (unint64_t *)MEMORY[0x263F8EE78];
      uint64_t v37 = (unint64_t *)MEMORY[0x263F8EE78];
      uint64_t v24 = *(void *)(v33 + 16);
      uint64_t v25 = swift_bridgeObjectRetain();
      if (v24)
      {
        uint64_t v26 = *(void *)(v32 + 72);
        unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
        uint64_t v27 = v25 + v34;
        uint64_t v28 = (unint64_t *)MEMORY[0x263F8EE78];
        do
        {
          sub_25B1D748C(v27, (uint64_t)v11);
          if (v11[*(int *)(v6 + 20) + 48] == 4)
          {
            sub_25B1D73CC((uint64_t)v11, (uint64_t)v9);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_25B22411C(0, v28[2] + 1, 1);
            }
            uint64_t v28 = v37;
            unint64_t v30 = v37[2];
            unint64_t v29 = v37[3];
            if (v30 >= v29 >> 1)
            {
              sub_25B22411C(v29 > 1, v30 + 1, 1);
              uint64_t v28 = v37;
            }
            uint64_t v28[2] = v30 + 1;
            sub_25B1D73CC((uint64_t)v9, (uint64_t)v28 + v34 + v30 * v26);
          }
          else
          {
            sub_25B1D7430((uint64_t)v11);
          }
          v27 += v26;
          --v24;
        }
        while (v24);
        int v23 = v37;
      }
      swift_bridgeObjectRelease();
      v36(v23, 0);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25B22D09C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActiveWatchPairingEnforcer()
{
  return self;
}

uint64_t sub_25B22D110@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  uint64_t v10 = sub_25B22EBC8(v9, a2, v3, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a3 = v10;
  return result;
}

void sub_25B22D178(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_25B22D19C()
{
  return sub_25B22BD44();
}

uint64_t sub_25B22D1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B22BE48(a1, a2, a3);
}

id sub_25B22D1E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B2908F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25B2908C0();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_25B290360();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = *(void **)(v0 + 16);
  if (v8)
  {
    id v9 = *(id *)(v0 + 16);
  }
  else
  {
    v14[0] = sub_25B10CB64();
    sub_25B290350();
    v14[1] = MEMORY[0x263F8EE78];
    sub_25B20CE74((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
    sub_25B1B7B24((unint64_t *)&qword_26A4D9B20, (uint64_t *)&unk_26A4D9B10);
    sub_25B290A00();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F138], v2);
    uint64_t v10 = (void *)sub_25B290920();
    uint64_t v11 = *(void **)(v0 + 16);
    *(void *)(v1 + 16) = v10;
    id v9 = v10;

    uint64_t v8 = 0;
  }
  id v12 = v8;
  return v9;
}

uint64_t sub_25B22D450(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_25B290320();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = sub_25B290360();
  uint64_t v11 = *(void *)(v19[0] - 8);
  MEMORY[0x270FA5388](v19[0]);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = sub_25B22D1E4();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v3;
  void v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  aBlock[4] = sub_25B22EE9C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B10F584;
  aBlock[3] = &block_descriptor_59_0;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  id v17 = a1;
  swift_retain();
  sub_25B290340();
  v19[1] = MEMORY[0x263F8EE78];
  sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void))(v11 + 8))(v13, v19[0]);
  return swift_release();
}

uint64_t sub_25B22D718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v80 = a1;
  uint64_t v5 = sub_25B290320();
  uint64_t v81 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_25B290360();
  uint64_t v8 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25B290410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (id *)((char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  *id v14 = sub_25B22D1E4();
  (*(void (**)(id *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  char v15 = sub_25B290440();
  (*(void (**)(id *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  id v16 = objc_msgSend(self, sel_sharedInstance);
  if (!v16)
  {
    if (qword_26A4D98C0 == -1)
    {
LABEL_10:
      uint64_t v34 = sub_25B290190();
      __swift_project_value_buffer(v34, (uint64_t)qword_26A4EB150);
      uint64_t v35 = sub_25B290160();
      os_log_type_t v36 = sub_25B290880();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl(&dword_25B107000, v35, v36, "No NanoRegistry singleton", v37, 2u);
        MEMORY[0x261160890](v37, -1, -1);
      }

      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = a2;
      *(void *)(v38 + 24) = a3;
      unint64_t v88 = sub_25B22ECFC;
      os_log_t v89 = (void *)v38;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v85 = 1107296256;
      uint64_t v86 = sub_25B10F584;
      unint64_t v87 = &block_descriptor_11;
      BOOL v39 = _Block_copy(&aBlock);
      swift_retain();
      sub_25B290340();
      uint64_t v83 = MEMORY[0x263F8EE78];
      sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
      sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
      sub_25B290A00();
      MEMORY[0x26115F250](0, v10, v7, v39);
      uint64_t v40 = v39;
      goto LABEL_18;
    }
LABEL_44:
    swift_once();
    goto LABEL_10;
  }
  id v17 = v16;
  id v18 = objc_msgSend(v16, sel_getActivePairedDeviceExcludingAltAccount);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v79 = v8;
    id v20 = objc_allocWithZone(MEMORY[0x263F4A0C0]);
    uint64_t v21 = (void *)sub_25B290590();
    id v22 = objc_msgSend(v20, sel_initWithService_, v21);

    if (v22)
    {
      id v23 = objc_msgSend(v22, sel_devices);
      if (v23)
      {
        uint64_t v24 = v23;
        id v25 = v19;
        id v26 = objc_msgSend(v17, sel_deviceForNRDevice_fromIDSDevices_, v25, v24);

        if (v26)
        {
          id v27 = objc_msgSend(v26, sel_uniqueIDOverride);
          id v77 = v26;
          if (v27)
          {
            uint64_t v28 = v27;
            uint64_t v29 = sub_25B2905C0();
            id v78 = v25;
            uint64_t v31 = v30;

            uint64_t v32 = (void *)swift_allocObject();
            void v32[2] = a2;
            void v32[3] = a3;
            v32[4] = v29;
            v32[5] = v31;
            unint64_t v88 = sub_25B22EDEC;
            os_log_t v89 = v32;
            uint64_t aBlock = MEMORY[0x263EF8330];
            uint64_t v85 = 1107296256;
            uint64_t v86 = sub_25B10F584;
            unint64_t v87 = &block_descriptor_53_0;
            uint64_t v33 = _Block_copy(&aBlock);
            swift_retain();
            sub_25B290340();
            uint64_t v83 = MEMORY[0x263F8EE78];
            sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
            sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
            sub_25B290A00();
            MEMORY[0x26115F250](0, v10, v7, v33);
            _Block_release(v33);

LABEL_41:
            (*(void (**)(char *, uint64_t))(v81 + 8))(v7, v5);
            (*(void (**)(char *, uint64_t))(v79 + 8))(v10, v82);
            return swift_release();
          }
          if (qword_26A4D98C0 != -1) {
            swift_once();
          }
          uint64_t v67 = sub_25B290190();
          __swift_project_value_buffer(v67, (uint64_t)qword_26A4EB150);
          BOOL v68 = sub_25B290160();
          os_log_type_t v69 = sub_25B290880();
          if (os_log_type_enabled(v68, v69))
          {
            uint64_t v70 = (uint8_t *)swift_slowAlloc();
            id v78 = v25;
            uint64_t v71 = v70;
            *(_WORD *)uint64_t v70 = 0;
            _os_log_impl(&dword_25B107000, v68, v69, "Could not fetch IDS ID from activePairedDevice", v70, 2u);
            uint64_t v72 = v71;
            id v25 = v78;
            MEMORY[0x261160890](v72, -1, -1);
          }

          uint64_t v73 = swift_allocObject();
          *(void *)(v73 + 16) = a2;
          *(void *)(v73 + 24) = a3;
          unint64_t v88 = sub_25B22ED60;
          os_log_t v89 = (void *)v73;
          uint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v85 = 1107296256;
          uint64_t v86 = sub_25B10F584;
          unint64_t v87 = &block_descriptor_47;
          uint64_t v74 = _Block_copy(&aBlock);
          swift_retain();
          sub_25B290340();
          uint64_t v83 = MEMORY[0x263F8EE78];
          sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
          sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
          sub_25B290A00();
          MEMORY[0x26115F250](0, v10, v7, v74);

          uint64_t v66 = v74;
        }
        else
        {
          if (qword_26A4D98C0 != -1) {
            swift_once();
          }
          uint64_t v58 = sub_25B290190();
          __swift_project_value_buffer(v58, (uint64_t)qword_26A4EB150);
          uint64_t v59 = sub_25B290160();
          os_log_type_t v60 = sub_25B290880();
          if (os_log_type_enabled(v59, v60))
          {
            uint64_t v61 = (uint8_t *)swift_slowAlloc();
            id v78 = v25;
            uint64_t v62 = v61;
            *(_WORD *)uint64_t v61 = 0;
            _os_log_impl(&dword_25B107000, v59, v60, "Could not fetch device from activePairedDevice", v61, 2u);
            uint64_t v63 = v62;
            id v25 = v78;
            MEMORY[0x261160890](v63, -1, -1);
          }

          uint64_t v64 = swift_allocObject();
          *(void *)(v64 + 16) = a2;
          *(void *)(v64 + 24) = a3;
          unint64_t v88 = sub_25B22ED60;
          os_log_t v89 = (void *)v64;
          uint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v85 = 1107296256;
          uint64_t v86 = sub_25B10F584;
          unint64_t v87 = &block_descriptor_41;
          uint64_t v65 = _Block_copy(&aBlock);
          swift_retain();
          sub_25B290340();
          uint64_t v83 = MEMORY[0x263F8EE78];
          sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
          sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
          sub_25B290A00();
          MEMORY[0x26115F250](0, v10, v7, v65);

          uint64_t v66 = v65;
        }
        _Block_release(v66);

        goto LABEL_41;
      }
      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      id v78 = v22;
      uint64_t v53 = sub_25B290190();
      __swift_project_value_buffer(v53, (uint64_t)qword_26A4EB150);
      long long v54 = sub_25B290160();
      os_log_type_t v55 = sub_25B290880();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl(&dword_25B107000, v54, v55, "IDSService has no devices", v56, 2u);
        MEMORY[0x261160890](v56, -1, -1);
      }

      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = a2;
      *(void *)(v57 + 24) = a3;
      unint64_t v88 = sub_25B22ED54;
      os_log_t v89 = (void *)v57;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v85 = 1107296256;
      uint64_t v86 = sub_25B10F584;
      unint64_t v87 = &block_descriptor_35;
      uint64_t v52 = _Block_copy(&aBlock);
      swift_retain();
      sub_25B290340();
      uint64_t v83 = MEMORY[0x263F8EE78];
      sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
      sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
      sub_25B290A00();
      MEMORY[0x26115F250](0, v10, v7, v52);
    }
    else
    {
      if (qword_26A4D98C0 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_25B290190();
      __swift_project_value_buffer(v47, (uint64_t)qword_26A4EB150);
      uint64_t v48 = sub_25B290160();
      os_log_type_t v49 = sub_25B290880();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v50 = 0;
        _os_log_impl(&dword_25B107000, v48, v49, "Could not create IDSService", v50, 2u);
        MEMORY[0x261160890](v50, -1, -1);
      }

      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = a2;
      *(void *)(v51 + 24) = a3;
      unint64_t v88 = sub_25B22ED54;
      os_log_t v89 = (void *)v51;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v85 = 1107296256;
      uint64_t v86 = sub_25B10F584;
      unint64_t v87 = &block_descriptor_29_0;
      uint64_t v52 = _Block_copy(&aBlock);
      swift_retain();
      sub_25B290340();
      uint64_t v83 = MEMORY[0x263F8EE78];
      sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
      sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
      sub_25B290A00();
      MEMORY[0x26115F250](0, v10, v7, v52);
    }
    _Block_release(v52);

    goto LABEL_41;
  }
  if (qword_26A4D98C0 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_25B290190();
  __swift_project_value_buffer(v41, (uint64_t)qword_26A4EB150);
  unint64_t v42 = sub_25B290160();
  os_log_type_t v43 = sub_25B2908A0();
  if (os_log_type_enabled(v42, v43))
  {
    int64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v44 = 0;
    _os_log_impl(&dword_25B107000, v42, v43, "No paired device from activePairedDevice", v44, 2u);
    MEMORY[0x261160890](v44, -1, -1);
  }

  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = a2;
  *(void *)(v45 + 24) = a3;
  unint64_t v88 = sub_25B22ECFC;
  os_log_t v89 = (void *)v45;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v85 = 1107296256;
  uint64_t v86 = sub_25B10F584;
  unint64_t v87 = &block_descriptor_23;
  uint64_t v46 = _Block_copy(&aBlock);
  swift_retain();
  sub_25B290340();
  uint64_t v83 = MEMORY[0x263F8EE78];
  sub_25B20CE74((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
  sub_25B1B7B24((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
  sub_25B290A00();
  MEMORY[0x26115F250](0, v10, v7, v46);

  uint64_t v40 = v46;
LABEL_18:
  _Block_release(v40);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v82);
  return swift_release();
}

uint64_t sub_25B22E7D8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActiveWatchIDSIDProvider()
{
  return self;
}

uint64_t sub_25B22E834(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25B22D450(a1, a2, a3);
}

void *sub_25B22E858(uint64_t a1, long long *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  a3[12] = 0;
  a3[13] = -1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9ED0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_25B2932A0;
  uint64_t v11 = (void *)*MEMORY[0x263F576A8];
  uint64_t v12 = (void *)*MEMORY[0x263F576B8];
  *(void *)(v10 + 32) = *MEMORY[0x263F576A8];
  *(void *)(v10 + 40) = v12;
  uint64_t v13 = (void *)*MEMORY[0x263F57688];
  id v14 = (void *)*MEMORY[0x263F57690];
  *(void *)(v10 + 48) = *MEMORY[0x263F57688];
  *(void *)(v10 + 56) = v14;
  a3[14] = v10;
  sub_25B180BD4(&v20, (uint64_t)(a3 + 2));
  sub_25B180BD4(a2, (uint64_t)(a3 + 7));
  id v15 = v11;
  id v16 = v12;
  id v17 = v13;
  id v18 = v14;
  return a3;
}

uint64_t sub_25B22E970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v5 = type metadata accessor for PairingRelationship();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v29 = (uint64_t)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v27 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v27 - v12;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v32 = MEMORY[0x263F8EE78];
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v17 = *(void *)(v11 + 72);
    v27[1] = v3;
    uint64_t v28 = (v16 + 32) & ~v16;
    uint64_t v18 = a1 + v28;
    uint64_t v19 = MEMORY[0x263F8EE78];
    while (1)
    {
      sub_25B1D748C(v18, (uint64_t)v13);
      int v20 = v13[*(int *)(v5 + 20) + 48];
      sub_25B1D748C((uint64_t)v13, (uint64_t)v10);
      if (v20 != 4
        || ((uint64_t v21 = &v10[*(int *)(v5 + 20)], *(void *)v21 == v30) ? (v22 = *((void *)v21 + 1) == v31) : (v22 = 0), v22))
      {
        sub_25B1D7430((uint64_t)v10);
      }
      else
      {
        char v23 = sub_25B290FB0();
        sub_25B1D7430((uint64_t)v10);
        if ((v23 & 1) == 0)
        {
          sub_25B1D73CC((uint64_t)v13, v29);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_25B22411C(0, *(void *)(v19 + 16) + 1, 1);
          }
          uint64_t v19 = v32;
          unint64_t v25 = *(void *)(v32 + 16);
          unint64_t v24 = *(void *)(v32 + 24);
          unint64_t v26 = v25 + 1;
          if (v25 >= v24 >> 1)
          {
            v27[0] = v25 + 1;
            sub_25B22411C(v24 > 1, v25 + 1, 1);
            unint64_t v26 = v27[0];
            uint64_t v19 = v32;
          }
          *(void *)(v19 + 16) = v26;
          sub_25B1D73CC(v29, v19 + v28 + v25 * v17);
          goto LABEL_5;
        }
      }
      sub_25B1D7430((uint64_t)v13);
LABEL_5:
      v18 += v17;
      if (!--v15) {
        return v32;
      }
    }
  }
  return result;
}

void *sub_25B22EBC8(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActiveWatchPairingEnforcer();
  uint64_t v12 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  return sub_25B22E858((uint64_t)v11, a2, v12, a4, a5);
}

uint64_t sub_25B22ECC4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t sub_25B22ED18()
{
  uint64_t v1 = *(uint64_t (**)(void *))(v0 + 16);
  v3[0] = 0;
  v3[1] = 0;
  char v4 = 0;
  return v1(v3);
}

uint64_t sub_25B22ED54()
{
  return sub_25B22ED6C((__n128)xmmword_25B297030);
}

uint64_t sub_25B22ED60()
{
  return sub_25B22ED6C((__n128)xmmword_25B297040);
}

uint64_t sub_25B22ED6C(__n128 a1)
{
  uint64_t v2 = *(uint64_t (**)(__n128 *))(v1 + 16);
  __n128 v4 = a1;
  char v5 = 1;
  return v2(&v4);
}

uint64_t sub_25B22EDAC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25B22EDEC()
{
  uint64_t v1 = (void (*)(void *))v0[2];
  uint64_t v2 = v0[5];
  v4[0] = v0[4];
  v4[1] = v2;
  char v5 = 0;
  swift_bridgeObjectRetain();
  v1(v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B22EE54()
{
  swift_release();

  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25B22EE9C()
{
  return sub_25B22F000(sub_25B22D718);
}

uint64_t sub_25B22EEB4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_25B22EEFC(void (*a1)(void), char a2)
{
  sub_25B22C324(a1, a2 & 1, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_25B22EF0C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_25B22EF54(uint64_t a1)
{
  sub_25B22CCF8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *, uint64_t))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_25B22EF60(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_25B22EF70(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_25B22EF80(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

id sub_25B22EF8C(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_25B22EF98()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25B22EFE8()
{
  return sub_25B22F000(sub_25B22C11C);
}

uint64_t sub_25B22F000(uint64_t (*a1)(void, void, void))
{
  return a1(v1[3], v1[4], v1[5]);
}

uint64_t sub_25B22F034()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B22F070(uint64_t a1)
{
  return sub_25B22B5F8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_25B22F080(uint64_t a1)
{
  return sub_25B22BBF4(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24), *(void *)(v1 + 32), "Paired watch did become active, will check for pairing change");
}

uint64_t sub_25B22F0AC(uint64_t a1)
{
  return sub_25B22BBF4(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24), *(void *)(v1 + 32), "Paired watch version changed, will check for pairing change");
}

uint64_t sub_25B22F0D4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25B22F11C()
{
  return sub_25B22B914(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t SyncServiceConfiguration.init(networkServiceNames:idsServiceNames:deviceType:pairingRelationshipPublisher:temporaryFileURL:allowListStore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, long long *a6@<X5>, uint64_t a7@<X8>)
{
  char v11 = *a3;
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = v11;
  uint64_t v12 = (int *)type metadata accessor for SyncServiceConfiguration();
  *(void *)(a7 + v12[8]) = a4;
  uint64_t v13 = a7 + v12[7];
  uint64_t v14 = sub_25B28FEA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a5, v14);
  uint64_t v15 = a7 + v12[9];
  return sub_25B180BD4(a6, v15);
}

uint64_t type metadata accessor for SyncServiceConfiguration()
{
  uint64_t result = qword_26A4D9180;
  if (!qword_26A4D9180) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *static SyncServiceFactory.makeSyncService(configuration:)(char *a1)
{
  uint64_t v2 = sub_25B2908F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = sub_25B2908C0();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_25B290360();
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v14 = sub_25B10CB64();
  sub_25B290350();
  v16[0] = MEMORY[0x263F8EE78];
  sub_25B2328C4((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
  sub_25B116394((unint64_t *)&qword_26A4D9B20, (uint64_t *)&unk_26A4D9B10);
  sub_25B290A00();
  (*(void (**)(unsigned __int8 *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F138], v2);
  uint64_t v8 = (void *)sub_25B290920();
  v16[0] = MEMORY[0x263F8EE80];
  v15[0] = byte_2708D5E00;
  sub_25B22F5E8(v16, v15, a1, v8);
  v15[0] = byte_2708D5E01;
  sub_25B22F5E8(v16, v15, a1, v8);
  uint64_t v9 = v16[0];
  unint64_t v10 = sub_25B23113C((unint64_t)a1, v8);
  uint64_t v11 = type metadata accessor for SyncServiceConfiguration();
  sub_25B10FF48((uint64_t)&a1[*(int *)(v11 + 36)], (uint64_t)v16);
  sub_25B10FF48((uint64_t)v16, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D95F0);
  swift_allocObject();
  uint64_t v12 = sub_25B231224(v9, v10, (uint64_t)v15);

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v12;
}

void sub_25B22F5E8(uint64_t *a1, unsigned __int8 *a2, char *a3, void *a4)
{
  uint64_t v8 = sub_25B28FEA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *((void *)a3 + 1);
  if (!*(void *)(v12 + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  int v13 = *a2;
  unint64_t v14 = sub_25B18ABD8(v13);
  if ((v15 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v34 = v8;
  uint64_t v16 = (uint64_t *)(*(void *)(v12 + 56) + 16 * v14);
  uint64_t v17 = a4;
  uint64_t v18 = *v16;
  uint64_t v19 = v16[1];
  id v20 = objc_allocWithZone((Class)type metadata accessor for ConcreteIDSDependency());
  swift_bridgeObjectRetain();
  sub_25B20AD90(v18, v19, v17);
  uint64_t v22 = *(void *)a3;
  if (!*(void *)(*(void *)a3 + 16))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  char v23 = v21;
  unint64_t v24 = sub_25B18ABD8(v13);
  if (v25)
  {
    unint64_t v26 = (uint64_t *)(*(void *)(v22 + 56) + 16 * v24);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    uint64_t v29 = type metadata accessor for SyncServiceConfiguration();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, &a3[*(int *)(v29 + 28)], v34);
    type metadata accessor for NetworkMessenger(0);
    uint64_t v30 = swift_allocObject();
    swift_bridgeObjectRetain();
    id v31 = v23;
    uint64_t v32 = sub_25B230A10(v27, v28, (uint64_t)v11, (uint64_t)v31, v13, v30);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = *a1;
    *a1 = 0x8000000000000000;
    sub_25B2220E0(v32, v13, isUniquelyReferenced_nonNull_native);
    *a1 = v35;
    swift_release();

    swift_bridgeObjectRelease();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_25B22F810(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_25B22F870(a1);
    return swift_release();
  }
  return result;
}

void sub_25B22F870(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25B290320();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_25B290360();
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  id v31 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB080);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v28 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v29 = (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v9 = v1[5];
  uint64_t v10 = v1[9];
  uint64_t v11 = v1[10];
  __swift_project_boxed_opaque_existential_1(v1 + 6, v10);
  uint64_t v12 = *(int *)(type metadata accessor for Message() + 28);
  uint64_t v30 = a1;
  int v13 = (uint64_t *)(a1 + v12);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8);
  swift_bridgeObjectRetain();
  if (v16(v15, v14, v10, v11))
  {
    swift_bridgeObjectRelease();
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_25B290190();
    __swift_project_value_buffer(v17, (uint64_t)qword_26A4EB168);
    uint64_t v18 = sub_25B290160();
    os_log_type_t v19 = sub_25B2908A0();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v20 = 0;
      _os_log_impl(&dword_25B107000, v18, v19, "Cannot receive messages from remote device ID not in allow list", v20, 2u);
      MEMORY[0x261160890](v20, -1, -1);
    }
  }
  else
  {
    uint64_t v21 = v29;
    sub_25B187628(v30, v29, &qword_26A4DB080);
    unint64_t v22 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v9;
    *(void *)(v23 + 24) = v2;
    sub_25B233178(v21, v23 + v22);
    aBlock[4] = sub_25B2331E0;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_25B10F584;
    aBlock[3] = &block_descriptor_27_0;
    unint64_t v24 = _Block_copy(aBlock);
    swift_retain();
    char v25 = v31;
    sub_25B290340();
    uint64_t v37 = MEMORY[0x263F8EE78];
    sub_25B2328C4((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
    unint64_t v26 = v33;
    uint64_t v27 = v36;
    sub_25B290A00();
    MEMORY[0x26115F250](0, v25, v26, v24);
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v34);
    swift_release();
  }
}

uint64_t sub_25B22FD28(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_26A4D98C8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_25B290190();
    __swift_project_value_buffer(v4, (uint64_t)qword_26A4EB168);
    swift_retain_n();
    uint64_t v5 = sub_25B290160();
    os_log_type_t v6 = sub_25B2908A0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v37 = v32;
      *(_DWORD *)uint64_t v7 = 136446466;
      uint64_t v8 = a2 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency;
      sub_25B10FF48(a2 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency, (uint64_t)v34);
      uint64_t v9 = v35;
      uint64_t v10 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
      if (v12) {
        uint64_t v13 = v11;
      }
      else {
        uint64_t v13 = 0x6F2D64656E676973;
      }
      if (v12) {
        unint64_t v14 = v12;
      }
      else {
        unint64_t v14 = 0xEA00000000007475;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      v34[0] = sub_25B288E98(v13, v14, &v37);
      sub_25B2909C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      sub_25B10FF48(v8, (uint64_t)v34);
      uint64_t v15 = v35;
      uint64_t v16 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 32))(v15, v16);
      int64_t v18 = *(void *)(v17 + 16);
      if (v18)
      {
        os_log_type_t v29 = v6;
        uint64_t v30 = v7;
        id v31 = v5;
        uint64_t v33 = MEMORY[0x263F8EE78];
        sub_25B224214(0, v18, 0);
        uint64_t v19 = v33;
        id v20 = (uint64_t *)(v17 + 40);
        do
        {
          uint64_t v21 = *(v20 - 1);
          uint64_t v22 = *v20;
          unint64_t v23 = *(void *)(v33 + 16);
          unint64_t v24 = *(void *)(v33 + 24);
          swift_bridgeObjectRetain();
          if (v23 >= v24 >> 1) {
            sub_25B224214(v24 > 1, v23 + 1, 1);
          }
          v20 += 2;
          *(void *)(v33 + 16) = v23 + 1;
          uint64_t v25 = v33 + 16 * v23;
          *(void *)(v25 + 32) = v21;
          *(void *)(v25 + 40) = v22;
          --v18;
        }
        while (v18);
        swift_bridgeObjectRelease();
        uint64_t v5 = v31;
        uint64_t v7 = v30;
        os_log_type_t v6 = v29;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = MEMORY[0x263F8EE78];
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      swift_release();
      uint64_t v26 = MEMORY[0x26115F080](v19, MEMORY[0x263F8D310]);
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      v34[0] = sub_25B288E98(v26, v28, &v37);
      sub_25B2909C0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B107000, v5, v6, "[%{public}s] Account associated devices changed: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x261160890](v32, -1, -1);
      MEMORY[0x261160890](v7, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_25B2300FC(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_25B2300FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25B290320();
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  os_log_type_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_25B290360();
  uint64_t v7 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25B290410();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = *(void **)(v2 + 16);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F8F0E0], v10);
  id v15 = v14;
  LOBYTE(v14) = sub_25B290440();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    sub_25B10FF48(a1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency, (uint64_t)aBlock);
    uint64_t v17 = v31;
    int64_t v18 = v32;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v31);
    uint64_t v19 = (*((uint64_t (**)(void *, uint64_t (*)()))v18 + 4))(v17, v18);
    uint64_t v20 = sub_25B236788(v19);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    uint64_t v21 = sub_25B227BD0(v20);
    uint64_t v22 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v22);
    *(&v27 - 2) = v21;
    uint64_t v23 = swift_bridgeObjectRetain();
    sub_25B230FA4(v23, (void (*)(unsigned char *, uint64_t *))sub_25B232848);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v24 = *(void *)(v2 + 40);
    uint64_t v25 = (void *)swift_allocObject();
    void v25[2] = v24;
    v25[3] = v2;
    v25[4] = v21;
    uint64_t v32 = sub_25B2328A0;
    uint64_t v33 = v25;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_25B10F584;
    id v31 = &block_descriptor_12;
    uint64_t v26 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_25B290340();
    uint64_t v29 = MEMORY[0x263F8EE78];
    sub_25B2328C4((unint64_t *)&unk_26A4D9A00, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9AD0);
    sub_25B116394((unint64_t *)&qword_26A4D9AE0, (uint64_t *)&unk_26A4D9AD0);
    sub_25B290A00();
    MEMORY[0x26115F250](0, v9, v6, v26);
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v27);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25B230598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9160);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_25B28FEA0();
  uint64_t result = MEMORY[0x270FA5388](v27);
  uint64_t v25 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v23 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    swift_bridgeObjectRetain();
    v22[1] = a1;
    uint64_t v12 = (uint64_t *)(a1 + 40);
    uint64_t v13 = &qword_26A4D9160;
    do
    {
      unint64_t v14 = v13;
      uint64_t v15 = *v12;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v17 = *(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v15 + 24);
      swift_unknownObjectRetain();
      if (v17(v28, &off_2708D5D88, a3, ObjectType, v15))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB080);
        uint64_t v13 = v14;
        sub_25B187628(a3 + *(int *)(v18 + 28), (uint64_t)v7, v14);
        uint64_t v19 = v27;
        if ((*v26)(v7, 1, v27) == 1)
        {
          sub_25B116DE0((uint64_t)v7, v14);
          (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v15 + 8))(v28, &off_2708D5D88, a3, ObjectType, v15);
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v20 = v25;
          (*v24)(v25, v7, v19);
          (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, char *, uint64_t, uint64_t))(v15 + 16))(v28, &off_2708D5D88, a3, v20, ObjectType, v15);
          swift_unknownObjectRelease();
          uint64_t v21 = v20;
          uint64_t v13 = v14;
          (*v23)(v21, v19);
        }
      }
      else
      {
        swift_unknownObjectRelease();
        uint64_t v13 = v14;
      }
      v12 += 2;
      --v11;
    }
    while (v11);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25B23085C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v5 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v8 = *v5;
      uint64_t v9 = *(void *)(a3 + 16);
      if (v9)
      {
        uint64_t v13 = *v5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D91C0);
        uint64_t v6 = (void *)swift_allocObject();
        int64_t v10 = _swift_stdlib_malloc_size(v6);
        uint64_t v11 = v10 - 32;
        if (v10 < 32) {
          uint64_t v11 = v10 - 17;
        }
        uint64_t v6[2] = v9;
        v6[3] = 2 * (v11 >> 4);
        uint64_t v14 = sub_25B227224((uint64_t)&v15, v6 + 4, v9, a3);
        swift_bridgeObjectRetain_n();
        swift_unknownObjectRetain();
        uint64_t result = sub_25B1A85A8();
        if (v14 != v9)
        {
          __break(1u);
          return result;
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = v13;
      }
      else
      {
        swift_unknownObjectRetain();
        uint64_t v6 = (void *)MEMORY[0x263F8EE78];
      }
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, void *, uint64_t, uint64_t))(v8 + 32))(a2, &off_2708D5D88, v6, ObjectType, v8);
      swift_unknownObjectRelease();
      swift_release();
      v5 += 2;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25B230A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v32 = a3;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  int v35 = a5 & 1;
  int v36 = a5;
  uint64_t v31 = sub_25B2908F0();
  uint64_t v8 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  int64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25B2908C0();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_25B290360();
  MEMORY[0x270FA5388](v12 - 8);
  v38[3] = type metadata accessor for ConcreteIDSDependency();
  v38[4] = &off_2708D6320;
  v38[0] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99C0);
  swift_allocObject();
  *(void *)(a6 + 16) = sub_25B290220();
  v30[4] = sub_25B10CB64();
  sub_25B290350();
  aBlock[0] = MEMORY[0x263F8EE78];
  void v30[2] = sub_25B2328C4((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
  v30[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
  v30[3] = sub_25B116394((unint64_t *)&qword_26A4D9B20, (uint64_t *)&unk_26A4D9B10);
  sub_25B290A00();
  uint64_t v13 = *MEMORY[0x263F8F138];
  uint64_t v14 = v8 + 104;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v30[0] = v14;
  uint64_t v16 = v31;
  v15(v10, v13, v31);
  *(void *)(a6 + 24) = sub_25B290920();
  sub_25B290350();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_25B290A00();
  v15(v10, v13, v16);
  *(void *)(a6 + 32) = sub_25B290920();
  *(void *)(a6 + 40) = 0;
  uint64_t v17 = MEMORY[0x263F8EE80];
  *(void *)(a6 + 48) = 0;
  *(void *)(a6 + 56) = v17;
  *(void *)(a6 + 64) = v17;
  *(void *)(a6 + 72) = v17;
  type metadata accessor for BasicTimer();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(void *)(v18 + 24) = v19;
  *(void *)(a6 + 80) = v18;
  *(_DWORD *)(a6 + 88) = -1;
  *(void *)(a6 + 96) = 0;
  *(void *)(a6 + 104) = 0;
  uint64_t v20 = OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_terminusRemoteDeviceIDLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9BC0);
  uint64_t v21 = swift_allocObject();
  *(void *)(a6 + v20) = v21;
  *(void *)(a6 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_subscriptions) = MEMORY[0x263F8EE88];
  *(_DWORD *)(v21 + 32) = 0;
  *(void *)(v21 + 16) = 0xD000000000000023;
  *(void *)(v21 + 24) = 0x800000025B29E1E0;
  uint64_t v22 = v34;
  *(void *)(a6 + 120) = v33;
  *(void *)(a6 + 128) = v22;
  uint64_t v23 = a6 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_temporaryFileURL;
  uint64_t v24 = sub_25B28FEA0();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v32;
  (*(void (**)(uint64_t))(v25 + 16))(v23);
  sub_25B10FF48((uint64_t)v38, a6 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency);
  *(unsigned char *)(a6 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType) = v35;
  type metadata accessor for ConnectionDurationMonitor();
  swift_allocObject();
  *(void *)(a6 + 112) = sub_25B1BFC70();
  uint64_t v27 = *(NSObject **)(a6 + 24);
  aBlock[4] = sub_25B233248;
  aBlock[5] = a6;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B1F6138;
  void aBlock[3] = &block_descriptor_31;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  xpc_set_event_stream_handler("com.apple.rapport.matching", v27, v28);
  _Block_release(v28);
  if (v36) {
    sub_25B1E6C9C(*(void *)(a6 + 24));
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v24);
  return a6;
}

uint64_t sub_25B230FA4(uint64_t a1, void (*a2)(unsigned char *, uint64_t *))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v4 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v15 = *(void *)(v4 + 8 * v10);
        if (!v15)
        {
          int64_t v10 = v14 + 3;
          if (v14 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v15 = *(void *)(v4 + 8 * v10);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
    v17[0] = *(unsigned char *)(*(void *)(a1 + 48) + v12);
    uint64_t v18 = v13;
    swift_retain();
    a2(v17, &v18);
    uint64_t result = swift_release();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v4 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_25B23113C(unint64_t result, void *a2)
{
  unint64_t v3 = result;
  if (byte_2708D5E28 == 1 && (byte_2708D5E29 & 1) != 0) {
    return 0;
  }
  uint64_t v5 = *(void *)result;
  if (*(void *)(*(void *)result + 16))
  {
    uint64_t result = sub_25B18ABD8(0);
    if (v6)
    {
      unint64_t v7 = (uint64_t *)(*(void *)(v5 + 56) + 16 * result);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      char v10 = *(unsigned char *)(v3 + 16);
      type metadata accessor for NetworkBrowser();
      uint64_t v4 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
      uint64_t v11 = swift_allocObject();
      *(_DWORD *)(v11 + 16) = 0;
      uint64_t v12 = MEMORY[0x263F8EE80];
      *(void *)(v4 + 56) = MEMORY[0x263F8EE80];
      *(void *)(v4 + 64) = v12;
      *(void *)(v4 + 72) = 0;
      *(void *)(v4 + 80) = v12;
      *(void *)(v4 + 32) = v9;
      *(void *)(v4 + 40) = v8;
      *(void *)(v4 + 16) = v11;
      *(void *)(v4 + 24) = a2;
      *(unsigned char *)(v4 + 48) = v10;
      swift_bridgeObjectRetain();
      id v13 = a2;
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_25B231224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v21 = a1;
  uint64_t v20 = sub_25B2908F0();
  uint64_t v4 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  char v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25B2908C0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_25B290360();
  MEMORY[0x270FA5388](v8 - 8);
  sub_25B10CB64();
  sub_25B290350();
  uint64_t v24 = MEMORY[0x263F8EE78];
  v19[3] = sub_25B2328C4((unint64_t *)&unk_26A4D9B40, MEMORY[0x263F8F0F8]);
  void v19[2] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B10);
  v19[1] = sub_25B116394((unint64_t *)&qword_26A4D9B20, (uint64_t *)&unk_26A4D9B10);
  sub_25B290A00();
  uint64_t v9 = *MEMORY[0x263F8F138];
  uint64_t v10 = v4 + 104;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v19[0] = v10;
  uint64_t v12 = v20;
  v11(v6, v9, v20);
  void v3[2] = sub_25B290920();
  sub_25B290350();
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_25B290A00();
  v11(v6, v9, v12);
  v3[3] = sub_25B290920();
  v3[4] = 0;
  uint64_t v13 = MEMORY[0x263F8EE78];
  v3[5] = MEMORY[0x263F8EE78];
  v3[12] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B33E990);
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  v3[13] = v14;
  v3[14] = 0;
  uint64_t v15 = v21;
  uint64_t v16 = v22;
  v3[11] = v21;
  v3[4] = v16;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v17 = v23;
  sub_25B10FF48(v23, (uint64_t)(v3 + 6));
  sub_25B230FA4(v15, (void (*)(unsigned char *, uint64_t *))sub_25B231FFC);
  __swift_destroy_boxed_opaque_existential_1(v17);
  return v3;
}

uint64_t initializeBufferWithCopyOfBuffer for SyncServiceConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[7];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_25B28FEA0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[9];
    *(void *)(v7 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    uint64_t v14 = v7 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    long long v16 = *(_OWORD *)(v15 + 24);
    *(_OWORD *)(v7 + v13 + 24) = v16;
    uint64_t v17 = v16;
    uint64_t v18 = **(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
    swift_retain();
    v18(v14, v15, v17);
  }
  return v7;
}

uint64_t destroy for SyncServiceConfiguration(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_25B28FEA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  return __swift_destroy_boxed_opaque_existential_1(v6);
}

uint64_t initializeWithCopy for SyncServiceConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25B28FEA0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(v14 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v15;
  uint64_t v16 = v15;
  uint64_t v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  swift_retain();
  v17(v13, v14, v16);
  return a1;
}

uint64_t assignWithCopy for SyncServiceConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25B28FEA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[9]), (uint64_t *)(a2 + a3[9]));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *int v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          _OWORD *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *int v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t initializeWithTake for SyncServiceConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25B28FEA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  long long v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  return a1;
}

uint64_t assignWithTake for SyncServiceConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25B28FEA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  uint64_t v10 = a3[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  __swift_destroy_boxed_opaque_existential_1(a1 + v10);
  long long v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncServiceConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B231DB8);
}

uint64_t sub_25B231DB8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25B28FEA0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SyncServiceConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B231E7C);
}

void *sub_25B231E7C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    _OWORD *result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25B28FEA0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25B231F24()
{
  uint64_t result = sub_25B28FEA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncServiceFactory()
{
  return &type metadata for SyncServiceFactory;
}

_UNKNOWN **sub_25B231FF0()
{
  return &off_2708D5D88;
}

uint64_t sub_25B231FFC(uint64_t a1, uint64_t *a2)
{
  return sub_25B232008(*a2, v2);
}

uint64_t sub_25B232008(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D98F0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v49 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9958);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  uint64_t v51 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v47 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A4D9B50);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9908);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57[0] = *(id *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99C0);
  sub_25B116394(&qword_26A4D99B8, &qword_26A4D99C0);
  v57[0] = (id)sub_25B290240();
  v53[0] = *(id *)(a2 + 16);
  id v17 = v53[0];
  uint64_t v18 = sub_25B2908E0();
  uint64_t v19 = *(void *)(v18 - 8);
  int64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v45 = v19 + 56;
  v44(v12, 1, 1, v18);
  id v42 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9970);
  unint64_t v38 = sub_25B10CB64();
  v36[1] = MEMORY[0x263EFDCF8];
  sub_25B116394(&qword_26A4D9968, &qword_26A4D9970);
  uint64_t v39 = sub_25B2328C4((unint64_t *)&unk_26A4D9B60, (void (*)(uint64_t))sub_25B10CB64);
  sub_25B290260();
  sub_25B116DE0((uint64_t)v12, (uint64_t *)&unk_26A4D9B50);

  swift_release();
  swift_allocObject();
  v36[0] = a2;
  swift_weakInit();
  uint64_t v43 = MEMORY[0x263EFDCB0];
  sub_25B116394((unint64_t *)&unk_26A4D98F8, &qword_26A4D9908);
  sub_25B290270();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  swift_beginAccess();
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AC0);
  uint64_t v40 = sub_25B116394(&qword_26A4D9AC8, &qword_26A4D9AC0);
  sub_25B290200();
  swift_endAccess();
  swift_release();
  uint64_t v20 = v37;
  uint64_t v21 = v37 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency;
  sub_25B10FF48(v37 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency, (uint64_t)v57);
  uint64_t v22 = v58;
  uint64_t v23 = v59;
  __swift_project_boxed_opaque_existential_1(v57, v58);
  uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
  sub_25B10FF48(v21, (uint64_t)v53);
  uint64_t v24 = v54;
  uint64_t v25 = v55;
  __swift_project_boxed_opaque_existential_1(v53, v54);
  uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D99B0);
  sub_25B116394(&qword_26A4D99A8, &qword_26A4D99B0);
  uint64_t v26 = v46;
  sub_25B290250();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  uint64_t v27 = v42;
  v57[0] = v42;
  v44(v12, 1, 1, v18);
  sub_25B116394((unint64_t *)&unk_26A4D98E0, &qword_26A4D98F0);
  id v28 = v27;
  uint64_t v30 = v47;
  uint64_t v29 = v48;
  sub_25B290260();
  sub_25B116DE0((uint64_t)v12, (uint64_t *)&unk_26A4D9B50);

  (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v29);
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v31;
  *(void *)(v32 + 24) = v20;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_25B232808;
  *(void *)(v33 + 24) = v32;
  sub_25B116394((unint64_t *)&unk_26A4D9948, (uint64_t *)&unk_26A4D9958);
  swift_retain();
  uint64_t v34 = v50;
  sub_25B290270();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v30, v34);
  swift_beginAccess();
  sub_25B290200();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_25B2327B0()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B2327E8(uint64_t a1)
{
  return sub_25B22F810(a1);
}

uint64_t sub_25B2327F0()
{
  return objectdestroy_5Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_25B232808()
{
  return sub_25B22FD28(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25B232810()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B232848(uint64_t a1, uint64_t *a2)
{
  return sub_25B23290C(*a2, *(void *)(v2 + 16));
}

uint64_t sub_25B232858()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25B2328A0()
{
  return sub_25B23085C(v0[2], v0[3], v0[4]);
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_25B2328C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B23290C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(NSObject **)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9AF0);
  sub_25B290900();
  uint64_t v5 = sub_25B227BD0(aBlock[0]);
  swift_bridgeObjectRelease();
  if (sub_25B244050(v5, a2)) {
    return swift_bridgeObjectRelease();
  }
  if (*(void *)(a2 + 16) <= *(void *)(v5 + 16) >> 3)
  {
    aBlock[0] = v5;
    sub_25B1A43CC(a2);
    uint64_t v6 = v5;
    if (*(void *)(v5 + 16)) {
      goto LABEL_4;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v6 = sub_25B1A4DD8(a2, v5);
  if (!*(void *)(v6 + 16)) {
    return swift_bridgeObjectRelease();
  }
LABEL_4:
  if (qword_26A4D98C8 != -1) {
LABEL_36:
  }
    swift_once();
  uint64_t v7 = sub_25B290190();
  __swift_project_value_buffer(v7, (uint64_t)qword_26A4EB168);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_25B290160();
  os_log_type_t v9 = sub_25B2908A0();
  uint64_t v29 = v6;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134349314;
    aBlock[0] = v11;
    sub_25B2909C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_25B290820();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_25B288E98(v12, v14, aBlock);
    sub_25B2909C0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B107000, v8, v9, "Disconnecting %{public}ld connected deviceID(s) no longer associated with the signed-in account: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x261160890](v11, -1, -1);
    MEMORY[0x261160890](v10, -1, -1);
  }
  else
  {

    uint64_t v15 = swift_bridgeObjectRelease_n();
  }
  int64_t v17 = 0;
  uint64_t v28 = v6 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  uint64_t v20 = v19 & *(void *)(v6 + 56);
  int64_t v30 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v20 &= v20 - 1;
      goto LABEL_26;
    }
    if (__OFADD__(v17++, 1)) {
      goto LABEL_34;
    }
    if (v17 >= v30) {
      return swift_release();
    }
    uint64_t v22 = *(void *)(v28 + 8 * v17);
    if (!v22) {
      break;
    }
LABEL_25:
    uint64_t v20 = (v22 - 1) & v22;
LABEL_26:
    MEMORY[0x270FA5388](v15);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB048);
    sub_25B290900();
    uint64_t v15 = swift_bridgeObjectRelease();
    uint64_t v24 = aBlock[0];
    if (aBlock[0])
    {
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = a1;
      *(void *)(v25 + 24) = v24;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = sub_25B232F24;
      *(void *)(v26 + 24) = v25;
      aBlock[4] = (uint64_t)sub_25B1168E4;
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_25B10D184;
      void aBlock[3] = (uint64_t)&block_descriptor_21_0;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v6 = v29;
      swift_release();
      dispatch_sync(v4, v27);
      _Block_release(v27);
      LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
      swift_unknownObjectRelease();
      swift_release();
      uint64_t v15 = swift_release();
      if (v27)
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
  }
  int64_t v23 = v17 + 1;
  if (v17 + 1 >= v30) {
    return swift_release();
  }
  uint64_t v22 = *(void *)(v28 + 8 * v23);
  if (v22) {
    goto LABEL_24;
  }
  int64_t v23 = v17 + 2;
  if (v17 + 2 >= v30) {
    return swift_release();
  }
  uint64_t v22 = *(void *)(v28 + 8 * v23);
  if (v22)
  {
LABEL_24:
    int64_t v17 = v23;
    goto LABEL_25;
  }
  int64_t v23 = v17 + 3;
  if (v17 + 3 < v30)
  {
    uint64_t v22 = *(void *)(v28 + 8 * v23);
    if (!v22)
    {
      while (1)
      {
        int64_t v17 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          goto LABEL_35;
        }
        if (v17 >= v30) {
          return swift_release();
        }
        uint64_t v22 = *(void *)(v28 + 8 * v17);
        ++v23;
        if (v22) {
          goto LABEL_25;
        }
      }
    }
    goto LABEL_24;
  }
  return swift_release();
}

uint64_t sub_25B232EBC()
{
  return objectdestroy_5Tm(MEMORY[0x263F8EEE8]);
}

uint64_t objectdestroy_5Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));
  return MEMORY[0x270FA0238](v1, 32, 7);
}

uint64_t sub_25B232F24()
{
  return sub_25B1EAA0C(*(void *)(v0 + 16), *(NSObject **)(v0 + 24));
}

uint64_t sub_25B232F2C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B232F3C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB080);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v13 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v0 + ((v2 + 32) & ~v2);
  uint64_t v4 = sub_25B290080();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  uint64_t v7 = type metadata accessor for Message();
  uint64_t v8 = v3 + *(int *)(v7 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4)) {
    v6(v8, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B10DFF0(*(void *)(v3 + *(int *)(v7 + 36)), *(void *)(v3 + *(int *)(v7 + 36) + 8));
  uint64_t v9 = v3 + *(int *)(v1 + 28);
  uint64_t v10 = sub_25B28FEA0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v2 + 32) & ~v2) + v13, v2 | 7);
}

uint64_t sub_25B233178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B2331E0()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A4DB080) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_25B230598(v2, v3, v4);
}

void sub_25B233248(void *a1)
{
  sub_25B205A40(a1, v1);
}

BOOL static NetworkBrowsingEvent.EventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NetworkBrowsingEvent.EventType.hash(into:)()
{
  return sub_25B291220();
}

uint64_t NetworkBrowsingEvent.EventType.hashValue.getter()
{
  return sub_25B291260();
}

uint64_t sub_25B233300()
{
  return sub_25B291260();
}

uint64_t sub_25B23333C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B233358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_25B233360()
{
  uint64_t result = type metadata accessor for NetworkDevice();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25B2333FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = ~(v6 | 7);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 32) & ~v6) + *(void *)(v5 + 64) + (((v6 | 7) + 1) & ~(v6 | 7uLL)) > 0x18)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v6 + 16) & v7));
    swift_retain();
  }
  else
  {
    uint64_t v11 = ~v6;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v12 = (void *)((unint64_t)(a1 + 1) & v7);
    uint64_t v13 = (void *)((unint64_t)(a2 + 1) & v7);
    *uint64_t v12 = *v13;
    v12[1] = v13[1];
    unint64_t v14 = (void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = (void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v14 = *v15;
    v14[1] = v15[1];
    uint64_t v16 = v6 + 16;
    unint64_t v17 = ((unint64_t)v14 + v16) & v11;
    unint64_t v18 = ((unint64_t)v15 + v16) & v11;
    uint64_t v19 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v17, v18, v4);
  }
  return v3;
}

uint64_t sub_25B233560(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v2 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v4 = (a1 + (v3 | 7) + 1) & ~(v3 | 7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(uint64_t (**)(unint64_t, uint64_t))(v7 + 8);
  return v5((v3 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v3, v2);
}

unsigned char *sub_25B233618(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = (v6 | 7) + 1;
  uint64_t v8 = (void *)((unint64_t)&a1[v7] & ~(v6 | 7));
  uint64_t v9 = (void *)((unint64_t)&a2[v7] & ~(v6 | 7));
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  uint64_t v12 = ((unint64_t)v10 + v6 + 16) & ~v6;
  uint64_t v13 = ((unint64_t)v11 + v6 + 16) & ~v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5(v12, v13, v4);
  return a1;
}

unsigned char *sub_25B233700(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 | 7) + 1;
  uint64_t v8 = (void *)((unint64_t)&a1[v7] & ~(v6 | 7));
  uint64_t v9 = (void *)((unint64_t)&a2[v7] & ~(v6 | 7));
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)v10 + v6 + 16) & ~v6, ((unint64_t)v11 + v6 + 16) & ~v6, v4);
  return a1;
}

unsigned char *sub_25B233808(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void (**)(unint64_t, unint64_t))(v4 + 32);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 | 7) + 1;
  uint64_t v8 = (_OWORD *)((unint64_t)&a1[v7] & ~(v6 | 7));
  uint64_t v9 = (_OWORD *)((unint64_t)&a2[v7] & ~(v6 | 7));
  *uint64_t v8 = *v9;
  uint64_t v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  v5(((unint64_t)v10 + v6 + 16) & ~v6, ((unint64_t)v11 + v6 + 16) & ~v6);
  return a1;
}

unsigned char *sub_25B2338AC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 | 7) + 1;
  uint64_t v8 = (void *)((unint64_t)&a1[v7] & ~(v6 | 7));
  uint64_t v9 = (void *)((unint64_t)&a2[v7] & ~(v6 | 7));
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)v10 + v6 + 16) & ~v6, ((unint64_t)v11 + v6 + 16) & ~v6, v4);
  return a1;
}

uint64_t sub_25B23399C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = v6 | 7;
  int v9 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v6 + 32) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v8 + 1) & ~v8);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      uint64_t v16 = (uint64_t)a1 + v8 + 1;
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((v6
      }
                                                                      + (((v16 & ~v8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                      + 16) & ~v6);
      unint64_t v17 = *(void *)((v16 & ~v8) + 8);
      if (v17 >= 0xFFFFFFFF) {
        LODWORD(v17) = -1;
      }
      return (v17 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v10 | v15) + 1;
}

void sub_25B233B64(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v11 = ((v9 + 32) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + (((v9 | 7) + 1) & ~(v9 | 7));
  BOOL v12 = a3 >= v8;
  unsigned int v13 = a3 - v8;
  if (v13 != 0 && v12)
  {
    if (v11 <= 3)
    {
      unsigned int v17 = ((v13 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
      if (HIWORD(v17))
      {
        int v14 = 4;
      }
      else if (v17 >= 0x100)
      {
        int v14 = 2;
      }
      else
      {
        int v14 = v17 > 1;
      }
    }
    else
    {
      int v14 = 1;
    }
  }
  else
  {
    int v14 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v15 = ~v8 + a2;
    if (v11 < 4)
    {
      int v16 = (v15 >> (8 * v11)) + 1;
      if (v11)
      {
        int v18 = v15 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v14)
    {
      case 1:
        a1[v11] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v16;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v11] = v16;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x25B233DECLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        uint64_t v10 = v9 | 7;
        uint64_t v19 = (void *)((unint64_t)&a1[v10 + 1] & ~v10);
        if ((v7 & 0x80000000) != 0)
        {
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20((v9 + (((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v9);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          void *v19 = a2 ^ 0x80000000;
          *(void *)(((unint64_t)&a1[v10 + 1] & ~v10) + 8) = 0;
        }
        else
        {
          *(void *)(((unint64_t)&a1[v10 + 1] & ~v10) + 8) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for NetworkBrowsingEvent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for NetworkDevice()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25B233E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

unsigned char *sub_25B233E4C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    _OWORD *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B233F18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for NetworkBrowsingEvent.EventType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25B233F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_25B233F60()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25B233FFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 32) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    size_t v11 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    BOOL v12 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *size_t v11 = *v12;
    v11[1] = v12[1];
    uint64_t v13 = ((unint64_t)v11 + v6 + 16) & ~v6;
    uint64_t v14 = ((unint64_t)v12 + v6 + 16) & ~v6;
    unsigned int v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_25B234138(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_25B2341BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  uint64_t v7 = *(void *)(a3 + 16);
  unsigned int v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 16) & ~v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v10, v11, v7);
  return a1;
}

void *sub_25B23427C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

_OWORD *sub_25B23434C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_25B2343D4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((unint64_t)v7 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_25B234484(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 32) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 16) & ~v6);
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_25B23462C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 32) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x25B234894);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 16) & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25B2348EC()
{
  return swift_bridgeObjectRelease();
}

ReplicatorEngine::Zone::ID __swiftcall Zone.ID.init(id:clientID:)(Swift::String id, Swift::String clientID)
{
  *uint64_t v2 = id;
  v2[1] = clientID;
  result.clientID = clientID;
  result.uint64_t id = id;
  return result;
}

__n128 Zone.init(id:protocolVersion:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(void *)(a3 + 16) = v3;
  *(void *)(a3 + 24) = v4;
  __n128 result = *a2;
  *(__n128 *)(a3 + 32) = *a2;
  return result;
}

uint64_t Zone.description.getter()
{
  return 0;
}

uint64_t Zone.ID.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Zone.ID.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Zone.ID.id.modify())()
{
  return nullsub_1;
}

uint64_t Zone.ID.clientID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Zone.ID.clientID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Zone.ID.clientID.modify())()
{
  return nullsub_1;
}

uint64_t Zone.ID.description.getter()
{
  return 540697705;
}

uint64_t Zone.ID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_25B290630();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25B290630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B234E08()
{
  if (*v0) {
    return 0x4449746E65696C63;
  }
  else {
    return 25705;
  }
}

uint64_t sub_25B234E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B236328(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B234E60(uint64_t a1)
{
  unint64_t v2 = sub_25B235AE0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B234E9C(uint64_t a1)
{
  unint64_t v2 = sub_25B235AE0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Zone.ID.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9CF8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  void v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B235AE0();
  sub_25B291290();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_25B290D40();
  if (!v8)
  {
    char v11 = 1;
    sub_25B290D40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Zone.ID.hashValue.getter()
{
  return sub_25B291260();
}

uint64_t Zone.ID.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9CA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B235AE0();
  sub_25B291280();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_25B290CA0();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_25B290CA0();
  uint64_t v14 = v13;
  int v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B2352C0()
{
  return sub_25B291260();
}

uint64_t sub_25B235328()
{
  sub_25B290630();
  return sub_25B290630();
}

uint64_t sub_25B235378()
{
  return sub_25B291260();
}

uint64_t sub_25B2353DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Zone.ID.init(from:)(a1, a2);
}

uint64_t sub_25B2353F4(void *a1)
{
  return Zone.ID.encode(to:)(a1);
}

uint64_t Zone.id.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 Zone.id.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  *uint64_t v1 = v5;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*Zone.id.modify())()
{
  return nullsub_1;
}

__n128 Zone.protocolVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = v1[2];
  *a1 = result;
  return result;
}

__n128 Zone.protocolVersion.setter(__n128 *a1)
{
  __n128 result = *a1;
  v1[2] = *a1;
  return result;
}

uint64_t (*Zone.protocolVersion.modify())()
{
  return nullsub_1;
}

uint64_t sub_25B235508()
{
  if (*v0) {
    return 0x6C6F636F746F7270;
  }
  else {
    return 25705;
  }
}

uint64_t sub_25B235544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B236404(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B23556C(uint64_t a1)
{
  unint64_t v2 = sub_25B235BF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B2355A8(uint64_t a1)
{
  unint64_t v2 = sub_25B235BF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Zone.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9CF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v7 = *((void *)v1 + 3);
  uint64_t v9 = *((void *)v1 + 4);
  uint64_t v12 = *((void *)v1 + 5);
  uint64_t v13 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B235BF0();
  sub_25B291290();
  long long v16 = v14;
  uint64_t v17 = v8;
  uint64_t v18 = v7;
  char v19 = 0;
  sub_25B196E10();
  uint64_t v10 = v15;
  sub_25B290D60();
  if (!v10)
  {
    *(void *)&long long v16 = v13;
    *((void *)&v16 + 1) = v12;
    char v19 = 1;
    sub_25B196CE0();
    sub_25B290D60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Zone.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4D9C98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25B235BF0();
  sub_25B291280();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v18 = 0;
  sub_25B196B08();
  sub_25B290CC0();
  uint64_t v9 = *((void *)&v15 + 1);
  uint64_t v10 = v17;
  uint64_t v13 = v16;
  uint64_t v14 = v15;
  char v18 = 1;
  sub_25B1969B8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25B290CC0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v11 = v15;
  *(void *)a2 = v14;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v10;
  *(_OWORD *)(a2 + 32) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B2359C0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B235A08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Zone.init(from:)(a1, a2);
}

uint64_t sub_25B235A20(void *a1)
{
  return Zone.encode(to:)(a1);
}

uint64_t _s16ReplicatorEngine4ZoneV2IDV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_25B290FB0(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_25B290FB0();
    }
  }
  return result;
}

unint64_t sub_25B235AE0()
{
  unint64_t result = qword_26A4D9800;
  if (!qword_26A4D9800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9800);
  }
  return result;
}

BOOL _s16ReplicatorEngine4ZoneV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (char v10 = sub_25B290FB0(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v3 == v7) {
      return v4 == v8 && v5 == v9;
    }
    char v12 = sub_25B290FB0();
    BOOL result = 0;
    if (v12) {
      return v4 == v8 && v5 == v9;
    }
  }
  return result;
}

unint64_t sub_25B235BF0()
{
  unint64_t result = qword_26A4D97E8;
  if (!qword_26A4D97E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D97E8);
  }
  return result;
}

unint64_t sub_25B235C48()
{
  unint64_t result = qword_26A4D9838;
  if (!qword_26A4D9838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4D9838);
  }
  return result;
}

uint64_t initializeWithCopy for Zone(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Zone(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Zone(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Zone(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}