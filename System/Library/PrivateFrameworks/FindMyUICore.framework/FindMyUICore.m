uint64_t getEnumTagSinglePayload for GenericControl.Info(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  v2 = *(void *)(a1 + 16) >> 1;
  if (v2 > 0x80000000) {
    v3 = ~v2;
  }
  else {
    v3 = -1;
  }
  return (v3 + 1);
}

ValueMetadata *type metadata accessor for GenericControl.Info()
{
  return &type metadata for GenericControl.Info;
}

double storeEnumTagSinglePayload for GenericControl.Info(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 2 * -a2;
      double result = 0.0;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericControl.Info.Label()
{
  return &type metadata for GenericControl.Info.Label;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *double result = *a2;
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t CompositeAppViewInitialInfo.callerHandle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24E555DE0(v1, a1);
}

uint64_t sub_24E555DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t CompositeAppViewInitialInfo.groupName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CompositeAppViewInitialInfo() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for CompositeAppViewInitialInfo()
{
  uint64_t result = qword_2698F0FA0;
  if (!qword_2698F0FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CompositeAppViewInitialInfo.friends.getter()
{
  type metadata accessor for CompositeAppViewInitialInfo();

  return swift_bridgeObjectRetain();
}

uint64_t CompositeAppViewInitialInfo.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CompositeAppViewInitialInfo();
  return sub_24E559AE4(v1 + *(int *)(v3 + 28), a1, type metadata accessor for CompositeAppViewState);
}

uint64_t CompositeAppViewInitialInfo.areFindMyFeaturesDisable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CompositeAppViewInitialInfo() + 32));
}

uint64_t CompositeAppViewInitialInfo.init(callerHandle:groupName:friends:state:areFindMyFeaturesDisable:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  sub_24E55605C(a1, a7);
  v13 = (int *)type metadata accessor for CompositeAppViewInitialInfo();
  v14 = (void *)(a7 + v13[5]);
  void *v14 = a2;
  v14[1] = a3;
  *(void *)(a7 + v13[6]) = a4;
  uint64_t result = sub_24E559BCC(a5, a7 + v13[7], type metadata accessor for CompositeAppViewState);
  *(unsigned char *)(a7 + v13[8]) = a6;
  return result;
}

uint64_t sub_24E55605C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for CompositeAppViewInitialInfo(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    uint64_t v7 = sub_24E861248();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = v6[5];
    uint64_t v12 = v6[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    uint64_t v16 = *(uint64_t *)((char *)a2 + v12);
    void *v13 = *v14;
    v13[1] = v15;
    *(uint64_t *)((char *)a1 + v12) = v16;
    uint64_t v17 = v6[7];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = type metadata accessor for CompositeAppViewState(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = v19[1];
      void *v18 = *v19;
      v18[1] = v21;
      uint64_t v22 = v19[3];
      v50 = v6;
      v18[2] = v19[2];
      v18[3] = v22;
      v23 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
      uint64_t v24 = v23[6];
      v25 = (void *)((char *)v18 + v24);
      v26 = (char *)v19 + v24;
      uint64_t v27 = *(void *)((char *)v19 + v24 + 8);
      void *v25 = *(void *)((char *)v19 + v24);
      v25[1] = v27;
      uint64_t v48 = v7;
      v28 = (int *)type metadata accessor for Friend();
      uint64_t v29 = v28[5];
      v46 = &v26[v29];
      v47 = (char *)v25 + v29;
      v45 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v47, v46, v48);
      *(void *)((char *)v25 + v28[6]) = *(void *)&v26[v28[6]];
      uint64_t v30 = v28[7];
      v49 = *(void **)&v26[v30];
      *(void *)((char *)v25 + v30) = v49;
      *(void *)((char *)v18 + v23[7]) = *(void *)((char *)v19 + v23[7]);
      *((unsigned char *)v18 + v23[8]) = *((unsigned char *)v19 + v23[8]);
      *((unsigned char *)v18 + v23[9]) = *((unsigned char *)v19 + v23[9]);
      uint64_t v31 = v23[10];
      v32 = (char *)v18 + v31;
      v33 = (char *)v19 + v31;
      *((_WORD *)v32 + 4) = *((_WORD *)v33 + 4);
      *(void *)v32 = *(void *)v33;
      uint64_t v34 = v23[11];
      __dst = (char *)v18 + v34;
      v35 = (char *)v19 + v34;
      uint64_t v36 = sub_24E8616F8();
      uint64_t v37 = *(void *)(v36 - 8);
      v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      swift_bridgeObjectRetain();
      id v39 = v49;
      swift_bridgeObjectRetain();
      if (v38(v35, 1, v36))
      {
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
        memcpy(__dst, v35, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v35, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
      }
      uint64_t v41 = v23[12];
      v42 = *(void **)((char *)v19 + v41);
      *(void *)((char *)v18 + v41) = v42;
      *((unsigned char *)v18 + v23[13]) = *((unsigned char *)v19 + v23[13]);
      id v43 = v42;
      swift_storeEnumTagMultiPayload();
      v6 = v50;
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  }
  return a1;
}

void destroy for CompositeAppViewInitialInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E861248();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  type metadata accessor for CompositeAppViewState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    uint64_t v8 = v6 + v7[6];
    swift_bridgeObjectRelease();
    uint64_t v9 = type metadata accessor for Friend();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8 + *(int *)(v9 + 20), v4);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v10 = v6 + v7[11];
    uint64_t v11 = sub_24E8616F8();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    v13 = *(void **)(v6 + v7[12]);
  }
}

char *initializeWithCopy for CompositeAppViewInitialInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24E861248();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  uint64_t v14 = *(void *)&a2[v10];
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  *(void *)&a1[v10] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for CompositeAppViewState(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v49 = a3;
    v50 = a2;
    v51 = a1;
    uint64_t v19 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v19;
    __dsta = (void *)v6;
    uint64_t v20 = *((void *)v17 + 3);
    *((void *)v16 + 2) = *((void *)v17 + 2);
    *((void *)v16 + 3) = v20;
    uint64_t v21 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    uint64_t v22 = v21[6];
    v23 = &v16[v22];
    uint64_t v24 = &v17[v22];
    uint64_t v25 = *(void *)&v17[v22 + 8];
    *(void *)v23 = *(void *)&v17[v22];
    *((void *)v23 + 1) = v25;
    v26 = (int *)type metadata accessor for Friend();
    uint64_t v27 = v26[5];
    v44 = &v24[v27];
    v45 = &v23[v27];
    id v43 = *(void (**)(char *, char *, void *))(v7 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43(v45, v44, __dsta);
    *(void *)&v23[v26[6]] = *(void *)&v24[v26[6]];
    uint64_t v28 = v26[7];
    uint64_t v29 = *(void **)&v24[v28];
    *(void *)&v23[v28] = v29;
    *(void *)&v16[v21[7]] = *(void *)&v17[v21[7]];
    v16[v21[8]] = v17[v21[8]];
    v16[v21[9]] = v17[v21[9]];
    uint64_t v30 = v21[10];
    uint64_t v31 = &v16[v30];
    v32 = &v17[v30];
    *((_WORD *)v31 + 4) = *((_WORD *)v32 + 4);
    *(void *)uint64_t v31 = *(void *)v32;
    uint64_t v33 = v21[11];
    v46 = &v17[v33];
    __dst = &v16[v33];
    uint64_t v34 = sub_24E8616F8();
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    swift_bridgeObjectRetain();
    id v37 = v29;
    swift_bridgeObjectRetain();
    if (v36(v46, 1, v34))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
      memcpy(__dst, v46, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v46, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
    }
    uint64_t v39 = v21[12];
    uint64_t v40 = *(void **)&v17[v39];
    *(void *)&v16[v39] = v40;
    v16[v21[13]] = v17[v21[13]];
    id v41 = v40;
    swift_storeEnumTagMultiPayload();
    a2 = v50;
    a1 = v51;
    a3 = v49;
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *assignWithCopy for CompositeAppViewInitialInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24E861248();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v15 = a3[7];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    sub_24E559B4C((uint64_t)&a1[v15], type metadata accessor for CompositeAppViewState);
    uint64_t v18 = type metadata accessor for CompositeAppViewState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v46 = a3;
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = *((void *)v17 + 1);
      *((void *)v16 + 2) = *((void *)v17 + 2);
      *((void *)v16 + 3) = *((void *)v17 + 3);
      id v41 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
      uint64_t v19 = v41[6];
      uint64_t v20 = &v16[v19];
      uint64_t v21 = &v17[v19];
      *(void *)uint64_t v20 = *(void *)&v17[v19];
      *((void *)v20 + 1) = *(void *)&v17[v19 + 8];
      uint64_t v22 = (int *)type metadata accessor for Friend();
      uint64_t v23 = v22[5];
      v42 = &v21[v23];
      id v43 = &v20[v23];
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40(v43, v42, v6);
      *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
      uint64_t v24 = v22[7];
      v44 = *(void **)&v21[v24];
      *(void *)&v20[v24] = v44;
      *(void *)&v16[v41[7]] = *(void *)&v17[v41[7]];
      v16[v41[8]] = v17[v41[8]];
      v16[v41[9]] = v17[v41[9]];
      uint64_t v25 = v41[10];
      v26 = &v16[v25];
      uint64_t v27 = &v17[v25];
      __int16 v28 = *((_WORD *)v27 + 4);
      *(void *)v26 = *(void *)v27;
      *((_WORD *)v26 + 4) = v28;
      uint64_t v29 = v41[11];
      __dst = &v16[v29];
      uint64_t v30 = &v17[v29];
      uint64_t v31 = sub_24E8616F8();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
      swift_bridgeObjectRetain();
      id v34 = v44;
      swift_bridgeObjectRetain();
      if (v33(v30, 1, v31))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
        memcpy(__dst, v30, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v30, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
      }
      uint64_t v36 = v41[12];
      id v37 = *(void **)&v17[v36];
      *(void *)&v16[v36] = v37;
      v16[v41[13]] = v17[v41[13]];
      id v38 = v37;
      swift_storeEnumTagMultiPayload();
      a3 = v46;
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *initializeWithTake for CompositeAppViewInitialInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24E861248();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for CompositeAppViewState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = a3;
    long long v14 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v14;
    uint64_t v15 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    uint64_t v16 = v15[6];
    uint64_t v17 = &v11[v16];
    uint64_t v18 = &v12[v16];
    *(_OWORD *)&v11[v16] = *(_OWORD *)&v12[v16];
    uint64_t v19 = (int *)type metadata accessor for Friend();
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v17[v19[5]], &v18[v19[5]], v6);
    *(void *)&v17[v19[6]] = *(void *)&v18[v19[6]];
    *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
    *(void *)&v11[v15[7]] = *(void *)&v12[v15[7]];
    v11[v15[8]] = v12[v15[8]];
    v11[v15[9]] = v12[v15[9]];
    uint64_t v20 = v15[10];
    uint64_t v21 = &v11[v20];
    uint64_t v22 = &v12[v20];
    *((_WORD *)v21 + 4) = *((_WORD *)v22 + 4);
    *(void *)uint64_t v21 = *(void *)v22;
    uint64_t v23 = v15[11];
    uint64_t v24 = &v11[v23];
    uint64_t v25 = &v12[v23];
    uint64_t v26 = sub_24E8616F8();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    *(void *)&v11[v15[12]] = *(void *)&v12[v15[12]];
    v11[v15[13]] = v12[v15[13]];
    swift_storeEnumTagMultiPayload();
    a3 = v30;
  }
  else
  {
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *assignWithTake for CompositeAppViewInitialInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24E861248();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  long long v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v17 = a3[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    sub_24E559B4C((uint64_t)&a1[v17], type metadata accessor for CompositeAppViewState);
    uint64_t v20 = type metadata accessor for CompositeAppViewState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v37 = a3;
      long long v21 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v21;
      uint64_t v22 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
      uint64_t v23 = v22[6];
      uint64_t v24 = &v18[v23];
      uint64_t v25 = &v19[v23];
      *(_OWORD *)&v18[v23] = *(_OWORD *)&v19[v23];
      uint64_t v26 = (int *)type metadata accessor for Friend();
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v24[v26[5]], &v25[v26[5]], v6);
      *(void *)&v24[v26[6]] = *(void *)&v25[v26[6]];
      *(void *)&v24[v26[7]] = *(void *)&v25[v26[7]];
      *(void *)&v18[v22[7]] = *(void *)&v19[v22[7]];
      v18[v22[8]] = v19[v22[8]];
      v18[v22[9]] = v19[v22[9]];
      uint64_t v27 = v22[10];
      uint64_t v28 = &v18[v27];
      uint64_t v29 = &v19[v27];
      *((_WORD *)v28 + 4) = *((_WORD *)v29 + 4);
      *(void *)uint64_t v28 = *(void *)v29;
      uint64_t v30 = v22[11];
      uint64_t v31 = &v18[v30];
      uint64_t v32 = &v19[v30];
      uint64_t v33 = sub_24E8616F8();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
        memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      *(void *)&v18[v22[12]] = *(void *)&v19[v22[12]];
      v18[v22[13]] = v19[v22[13]];
      swift_storeEnumTagMultiPayload();
      a3 = v37;
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t getEnumTagSinglePayload for CompositeAppViewInitialInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E5576F4);
}

uint64_t sub_24E5576F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for CompositeAppViewState(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for CompositeAppViewInitialInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E557838);
}

uint64_t sub_24E557838(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for CompositeAppViewState(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_24E557968()
{
  sub_24E557A50();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CompositeAppViewState(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24E557A50()
{
  if (!qword_2698F0FB0)
  {
    sub_24E861248();
    unint64_t v0 = sub_24E864388();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2698F0FB0);
    }
  }
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_24E557ADC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24E557AFC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for MKCoordinateRegion(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceIdiom(uint64_t a1)
{
}

uint64_t sub_24E557BF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CompositeAppViewInitialInfo();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Friend();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + *(int *)(v3 + 24));
  if (*(void *)(v10 + 16) == 1)
  {
    sub_24E559AE4(v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Friend);
    sub_24E559BCC((uint64_t)v9, a1, (uint64_t (*)(void))type metadata accessor for Friend);
    uint64_t v11 = 0;
  }
  else
  {
    if (qword_2698F0E60 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_24E862168();
    __swift_project_value_buffer(v12, (uint64_t)qword_269906D88);
    sub_24E559AE4(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CompositeAppViewInitialInfo);
    uint64_t v13 = sub_24E862148();
    os_log_type_t v14 = sub_24E864268();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v22 = a1;
      uint64_t v17 = v16;
      uint64_t v24 = v16;
      *(_DWORD *)uint64_t v15 = 136315394;
      uint64_t v23 = sub_24E55B02C(0xD000000000000015, 0x800000024E872120, &v24);
      sub_24E8643A8();
      *(_WORD *)(v15 + 12) = 2048;
      uint64_t v18 = *(void *)(*(void *)&v5[*(int *)(v3 + 24)] + 16);
      sub_24E559B4C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CompositeAppViewInitialInfo);
      uint64_t v23 = v18;
      sub_24E8643A8();
      _os_log_impl(&dword_24E553000, v13, v14, "CompositeAppViewInitialInfo: %s - count: %ld", (uint8_t *)v15, 0x16u);
      uint64_t v11 = 1;
      swift_arrayDestroy();
      uint64_t v19 = v17;
      a1 = v22;
      MEMORY[0x2533435F0](v19, -1, -1);
      MEMORY[0x2533435F0](v15, -1, -1);
    }
    else
    {
      sub_24E559B4C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CompositeAppViewInitialInfo);

      uint64_t v11 = 1;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v11, 1, v6);
}

uint64_t sub_24E557F68()
{
  uint64_t v1 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = _s16SubscriptionDataOMa(0);
  uint64_t v4 = MEMORY[0x270FA5388](v58);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v59 = (uint64_t)&v56 - v7;
  uint64_t v8 = type metadata accessor for Friend();
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v56 - v12;
  uint64_t v14 = type metadata accessor for CompositeAppViewState(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (uint64_t *)((char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for CompositeAppViewInitialInfo();
  sub_24E559AE4(v0 + *(int *)(v17 + 28), (uint64_t)v16, type metadata accessor for CompositeAppViewState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v19 = MEMORY[0x263F8EE88];
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v11 = v3;
      sub_24E559BCC((uint64_t)v16, (uint64_t)v3, type metadata accessor for CompositeAppViewState.TranscriptInfo);
      if (v3[v1[13]] == 1)
      {
        if (v3[v1[10] + 8] == 2)
        {
          if (v3[v1[8]])
          {
            sub_24E559B4C((uint64_t)v3, type metadata accessor for CompositeAppViewState.TranscriptInfo);
            return v19;
          }
          uint64_t v61 = v19;
          swift_storeEnumTagMultiPayload();
          uint64_t v43 = v59;
          sub_24E840834(v59, (uint64_t)v6);
          sub_24E559B4C(v43, _s16SubscriptionDataOMa);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2698F10D0);
          unint64_t v44 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
          uint64_t v45 = swift_allocObject();
          *(_OWORD *)(v45 + 16) = xmmword_24E865A70;
          sub_24E559AE4((uint64_t)&v3[v1[6]], v45 + v44, (uint64_t (*)(void))type metadata accessor for Friend);
          uint64_t v46 = sub_24E558840(v45);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          uint64_t v47 = v46;
        }
        else
        {
          if (v3[v1[8]])
          {
            uint64_t v61 = v19;
            uint64_t v40 = swift_bridgeObjectRetain();
            uint64_t v41 = sub_24E558840(v40);
            swift_bridgeObjectRelease();
            sub_24E615438(v41);
            swift_storeEnumTagMultiPayload();
            uint64_t v42 = v59;
            sub_24E840834(v59, (uint64_t)v6);
            sub_24E559B4C(v42, _s16SubscriptionDataOMa);
            if (v3[v1[9]] == 1)
            {
              swift_storeEnumTagMultiPayload();
              sub_24E840834(v42, (uint64_t)v6);
              sub_24E559B4C(v42, _s16SubscriptionDataOMa);
            }
            goto LABEL_23;
          }
          uint64_t v61 = v19;
          uint64_t v48 = sub_24E558840(*(void *)(v0 + *(int *)(v17 + 24)));
          sub_24E615438(v48);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2698F10D0);
          unint64_t v49 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
          uint64_t v50 = swift_allocObject();
          *(_OWORD *)(v50 + 16) = xmmword_24E865A70;
          uint64_t v51 = v50 + v49;
          uint64_t v52 = (uint64_t)&v3[v1[6]];
          sub_24E559AE4(v52, v51, (uint64_t (*)(void))type metadata accessor for Friend);
          uint64_t v53 = sub_24E558D10(v50, 0);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          sub_24E615438(v53);
          swift_storeEnumTagMultiPayload();
          uint64_t v54 = v59;
          sub_24E840834(v59, (uint64_t)v6);
          sub_24E559B4C(v54, _s16SubscriptionDataOMa);
          uint64_t v47 = sub_24E559204(v52);
        }
        sub_24E615438(v47);
LABEL_23:
        uint64_t v34 = (uint64_t (*)())type metadata accessor for CompositeAppViewState.TranscriptInfo;
        goto LABEL_24;
      }
      if (qword_2698F0E60 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_24E862168();
      __swift_project_value_buffer(v35, (uint64_t)qword_269906D88);
      uint64_t v36 = sub_24E862148();
      os_log_type_t v37 = sub_24E864228();
      if (os_log_type_enabled(v36, v37))
      {
        id v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        uint64_t v61 = v39;
        *(_DWORD *)id v38 = 136315138;
        uint64_t v60 = sub_24E55B02C(0x7069726373627573, 0xED0000736E6F6974, &v61);
        sub_24E8643A8();
        _os_log_impl(&dword_24E553000, v36, v37, "CompositeAppViewInitialInfo: %s - canShowExpensiveUIAndControls: false", v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533435F0](v39, -1, -1);
        MEMORY[0x2533435F0](v38, -1, -1);
      }

      sub_24E559B4C((uint64_t)v3, type metadata accessor for CompositeAppViewState.TranscriptInfo);
      return MEMORY[0x263F8EE88];
    case 2:
    case 5:
      return v19;
    case 3:
      uint64_t v61 = MEMORY[0x263F8EE88];
      uint64_t v28 = sub_24E558840(*(void *)(v0 + *(int *)(v17 + 24)));
      sub_24E615438(v28);
      return v61;
    case 4:
      uint64_t v61 = MEMORY[0x263F8EE88];
      uint64_t v29 = *(void *)(v0 + *(int *)(v17 + 24));
      uint64_t v30 = sub_24E558840(v29);
      sub_24E615438(v30);
      uint64_t v31 = sub_24E558D10(v29, 1);
      sub_24E615438(v31);
      if (*(void *)(v29 + 16) != 1) {
        return v61;
      }
      sub_24E559AE4(v29 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80)), (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Friend);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = v59;
      sub_24E840834(v59, (uint64_t)v6);
      sub_24E559B4C(v32, _s16SubscriptionDataOMa);
      uint64_t v33 = sub_24E559204((uint64_t)v11);
      sub_24E615438(v33);
      uint64_t v34 = type metadata accessor for Friend;
LABEL_24:
      uint64_t v26 = v34;
      uint64_t v27 = (uint64_t)v11;
      goto LABEL_25;
    default:
      uint64_t v20 = *v16;
      uint64_t v61 = MEMORY[0x263F8EE88];
      uint64_t v21 = *(void *)(v0 + *(int *)(v17 + 24));
      uint64_t v22 = sub_24E558840(v21);
      sub_24E615438(v22);
      uint64_t v23 = sub_24E558D10(v21, 1);
      sub_24E615438(v23);
      if ((v20 & 8) == 0 || *(void *)(v21 + 16) != 1) {
        return v61;
      }
      sub_24E559AE4(v21 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80)), (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Friend);
      swift_storeEnumTagMultiPayload();
      uint64_t v24 = v59;
      sub_24E840834(v59, (uint64_t)v6);
      sub_24E559B4C(v24, _s16SubscriptionDataOMa);
      uint64_t v25 = sub_24E559204((uint64_t)v13);
      sub_24E615438(v25);
      uint64_t v26 = type metadata accessor for Friend;
      uint64_t v27 = (uint64_t)v13;
LABEL_25:
      sub_24E559B4C(v27, (uint64_t (*)(void))v26);
      return v61;
  }
}

uint64_t sub_24E558840(uint64_t a1)
{
  uint64_t v2 = sub_24E861248();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s16SubscriptionDataOMa(0);
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for Friend();
  MEMORY[0x270FA5388](v38);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v48 = MEMORY[0x263F8EE78];
  uint64_t v37 = *(void *)(a1 + 16);
  if (v37)
  {
    uint64_t v34 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v46 = v3 + 16;
    uint64_t v42 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v33 = *(void *)(v9 + 72);
    v31[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    uint64_t v41 = 0;
    long long v32 = xmmword_24E865A70;
    uint64_t v35 = v11;
    uint64_t v36 = v3;
    do
    {
      uint64_t v40 = v13;
      sub_24E559AE4(v34 + v33 * v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Friend);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F10D8);
      unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v45 = *(void *)(v3 + 72);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = v32;
      uint64_t v16 = v38;
      uint64_t v17 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 16);
      uint64_t v18 = v17(v15 + v14, &v11[*(int *)(v38 + 20)], v2);
      uint64_t v19 = *(void *)&v11[*(int *)(v16 + 24)];
      MEMORY[0x270FA5388](v18);
      v31[-2] = v20;
      swift_bridgeObjectRetain();
      uint64_t v21 = v41;
      uint64_t v22 = sub_24E6471A8((uint64_t (*)(char *))sub_24E559FDC, (uint64_t)&v31[-4], v19);
      uint64_t v41 = v21;
      uint64_t v47 = v15;
      sub_24E650664(v22);
      uint64_t v23 = v47;
      int64_t v24 = *(void *)(v47 + 16);
      if (v24)
      {
        uint64_t v47 = MEMORY[0x263F8EE78];
        sub_24E575EE4(0, v24, 0);
        uint64_t v39 = v23;
        unint64_t v25 = v23 + v14;
        do
        {
          v17((unint64_t)v5, (char *)v25, v2);
          v17((unint64_t)v8, v5, v2);
          swift_storeEnumTagMultiPayload();
          (*v42)(v5, v2);
          uint64_t v26 = v47;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24E575EE4(0, *(void *)(v26 + 16) + 1, 1);
            uint64_t v26 = v47;
          }
          unint64_t v28 = *(void *)(v26 + 16);
          unint64_t v27 = *(void *)(v26 + 24);
          if (v28 >= v27 >> 1)
          {
            sub_24E575EE4(v27 > 1, v28 + 1, 1);
            uint64_t v26 = v47;
          }
          *(void *)(v26 + 16) = v28 + 1;
          sub_24E559BCC((uint64_t)v8, v26+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v28, _s16SubscriptionDataOMa);
          v25 += v45;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v26 = MEMORY[0x263F8EE78];
      }
      uint64_t v13 = v40 + 1;
      uint64_t v11 = v35;
      sub_24E559B4C((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for Friend);
      sub_24E650638(v26);
      uint64_t v3 = v36;
    }
    while (v13 != v37);
    swift_bridgeObjectRelease();
    uint64_t v12 = v48;
  }
  uint64_t v29 = sub_24E85CDC0(v12);
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_24E558D10(uint64_t a1, char a2)
{
  uint64_t v4 = sub_24E861248();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s16SubscriptionDataOMa(0);
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for Friend();
  MEMORY[0x270FA5388](v39);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v50 = MEMORY[0x263F8EE78];
  uint64_t v38 = *(void *)(a1 + 16);
  if (v38)
  {
    uint64_t v35 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v48 = v5 + 16;
    int v44 = a2 & 1;
    uint64_t v43 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v34 = *(void *)(v11 + 72);
    v32[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    uint64_t v42 = 0;
    long long v33 = xmmword_24E865A70;
    uint64_t v36 = v13;
    uint64_t v37 = v5;
    do
    {
      uint64_t v41 = v15;
      sub_24E559AE4(v35 + v34 * v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Friend);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F10D8);
      unint64_t v16 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v47 = *(void *)(v5 + 72);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = v33;
      uint64_t v18 = v39;
      uint64_t v19 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 16);
      uint64_t v20 = v19(v17 + v16, &v13[*(int *)(v39 + 20)], v4);
      uint64_t v21 = *(void *)&v13[*(int *)(v18 + 24)];
      MEMORY[0x270FA5388](v20);
      v32[-2] = v13;
      swift_bridgeObjectRetain();
      uint64_t v22 = v42;
      uint64_t v23 = sub_24E6471A8((uint64_t (*)(char *))sub_24E559FDC, (uint64_t)&v32[-4], v21);
      uint64_t v42 = v22;
      uint64_t v49 = v17;
      sub_24E650664(v23);
      uint64_t v24 = v49;
      int64_t v25 = *(void *)(v49 + 16);
      if (v25)
      {
        uint64_t v49 = MEMORY[0x263F8EE78];
        sub_24E575EE4(0, v25, 0);
        uint64_t v40 = v24;
        unint64_t v26 = v24 + v16;
        do
        {
          v19((unint64_t)v7, (char *)v26, v4);
          v19((unint64_t)v10, v7, v4);
          v10[*(int *)(_s16SubscriptionDataO9LocationsVMa(0) + 20)] = v44;
          swift_storeEnumTagMultiPayload();
          (*v43)(v7, v4);
          uint64_t v27 = v49;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24E575EE4(0, *(void *)(v27 + 16) + 1, 1);
            uint64_t v27 = v49;
          }
          unint64_t v29 = *(void *)(v27 + 16);
          unint64_t v28 = *(void *)(v27 + 24);
          if (v29 >= v28 >> 1)
          {
            sub_24E575EE4(v28 > 1, v29 + 1, 1);
            uint64_t v27 = v49;
          }
          *(void *)(v27 + 16) = v29 + 1;
          sub_24E559BCC((uint64_t)v10, v27+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v29, _s16SubscriptionDataOMa);
          v26 += v47;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v27 = MEMORY[0x263F8EE78];
      }
      uint64_t v15 = v41 + 1;
      uint64_t v13 = v36;
      sub_24E559B4C((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for Friend);
      sub_24E650638(v27);
      uint64_t v5 = v37;
    }
    while (v15 != v38);
    swift_bridgeObjectRelease();
    uint64_t v14 = v50;
  }
  uint64_t v30 = sub_24E85CDC0(v14);
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_24E559204(uint64_t a1)
{
  uint64_t v2 = sub_24E861248();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s16SubscriptionDataOMa(0);
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F10D8);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v28 = *(void *)(v3 + 72);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24E865A70;
  uint64_t v12 = type metadata accessor for Friend();
  uint64_t v13 = a1 + *(int *)(v12 + 20);
  uint64_t v27 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16);
  v27(v11 + v10, v13, v2);
  uint64_t v14 = *(void *)(a1 + *(int *)(v12 + 24));
  uint64_t v32 = a1;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_24E6471A8((uint64_t (*)(char *))sub_24E559BAC, (uint64_t)v31, v14);
  uint64_t v33 = v11;
  sub_24E650664(v15);
  uint64_t v16 = v33;
  int64_t v17 = *(void *)(v33 + 16);
  if (v17)
  {
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_24E575EE4(0, v17, 0);
    v26[1] = v16;
    unint64_t v18 = v16 + v10;
    uint64_t v19 = (void (**)(char *, uint64_t))(v4 + 8);
    do
    {
      uint64_t v20 = (void (*)(char *, char *, uint64_t))v27;
      v27((unint64_t)v6, v18, v2);
      v20(v9, v6, v2);
      swift_storeEnumTagMultiPayload();
      (*v19)(v6, v2);
      uint64_t v21 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24E575EE4(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = v33;
      }
      unint64_t v23 = *(void *)(v21 + 16);
      unint64_t v22 = *(void *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_24E575EE4(v22 > 1, v23 + 1, 1);
        uint64_t v21 = v33;
      }
      *(void *)(v21 + 16) = v23 + 1;
      sub_24E559BCC((uint64_t)v9, v21+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v23, _s16SubscriptionDataOMa);
      v18 += v28;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x263F8EE78];
  }
  uint64_t v24 = sub_24E85CDC0(v21);
  swift_bridgeObjectRelease();
  return v24;
}

BOOL sub_24E559570(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24E559584(uint64_t a1, uint64_t a2)
{
  return sub_24E559704(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_24E5595A8(uint64_t a1, uint64_t a2)
{
  return sub_24E559704(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_24E5595C8(uint64_t a1, id *a2)
{
  uint64_t result = sub_24E863C88();
  *a2 = 0;
  return result;
}

uint64_t sub_24E559640(uint64_t a1, id *a2)
{
  char v3 = sub_24E863C98();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24E5596C0@<X0>(uint64_t *a1@<X8>)
{
  sub_24E863CA8();
  uint64_t v2 = sub_24E863C68();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24E559704(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_24E863CA8();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24E559748()
{
  sub_24E863CA8();
  sub_24E863D08();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24E55979C()
{
  sub_24E863CA8();
  sub_24E864A58();
  sub_24E863D08();
  uint64_t v0 = sub_24E864A98();
  swift_bridgeObjectRelease();
  return v0;
}

_DWORD *sub_24E559810@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_24E559820(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_24E559868()
{
  uint64_t v0 = sub_24E863CA8();
  uint64_t v2 = v1;
  if (v0 == sub_24E863CA8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_24E864988();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_24E5598F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24E863CA8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24E559924(uint64_t a1)
{
  uint64_t v2 = sub_24E559E04(&qword_2698F1128, type metadata accessor for Key);
  uint64_t v3 = sub_24E559E04(&qword_2698F1130, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_24E5599E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24E863C68();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24E559A28(uint64_t a1)
{
  uint64_t v2 = sub_24E559E04(&qword_2698F1160, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v3 = sub_24E559E04(&qword_2698F1168, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_24E559AE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E559B4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_24E559BAC(uint64_t a1)
{
  return sub_24E56A508(a1, *(void *)(v1 + 16));
}

uint64_t sub_24E559BCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void type metadata accessor for SPAccessoryPairingStatus(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for AsyncEmojiView.Info.Size(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AsyncEmojiView.Info.Size(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKMapPoint(uint64_t a1)
{
}

void type metadata accessor for MKMapRect(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for MessagePayload.ContentV0.Location(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_24E559CEC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24E559D0C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for MKCoordinateSpan(uint64_t a1)
{
}

uint64_t sub_24E559D74()
{
  return sub_24E559E04(&qword_2698F1110, type metadata accessor for Key);
}

uint64_t sub_24E559DBC()
{
  return sub_24E559E04(&qword_2698F1118, type metadata accessor for Key);
}

uint64_t sub_24E559E04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E559E4C()
{
  return sub_24E559E04(&qword_2698F1120, type metadata accessor for Key);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for MKMapSize(uint64_t a1)
{
}

void sub_24E559EBC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_24E559F04()
{
  return sub_24E559E04(&qword_2698F1148, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_24E559F4C()
{
  return sub_24E559E04(&qword_2698F1150, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_24E559F94()
{
  return sub_24E559E04(&qword_2698F1158, type metadata accessor for OpenExternalURLOptionsKey);
}

BOOL sub_24E559FDC(uint64_t a1)
{
  return sub_24E559BAC(a1);
}

uint64_t CompositeAppViewState.TranscriptInfo.transcriptID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CompositeAppViewState.TranscriptInfo.payloadID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CompositeAppViewState.TranscriptInfo.from.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  return sub_24E55AFC4(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))type metadata accessor for Friend);
}

uint64_t type metadata accessor for CompositeAppViewState.TranscriptInfo(uint64_t a1)
{
  return sub_24E55C278(a1, (uint64_t *)&unk_2698F1330);
}

uint64_t CompositeAppViewState.TranscriptInfo.to.getter()
{
  type metadata accessor for CompositeAppViewState.TranscriptInfo(0);

  return swift_bridgeObjectRetain();
}

uint64_t CompositeAppViewState.TranscriptInfo.direction.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t CompositeAppViewState.TranscriptInfo.isPending.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CompositeAppViewState.TranscriptInfo(0) + 36));
}

uint64_t CompositeAppViewState.TranscriptInfo.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 40));
  uint64_t v5 = *v4;
  LOWORD(v4) = *((_WORD *)v4 + 4);
  *(void *)a1 = v5;
  *(_WORD *)(a1 + 8) = (_WORD)v4;
  return result;
}

uint64_t CompositeAppViewState.TranscriptInfo.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CompositeAppViewState.TranscriptInfo(0) + 44);

  return sub_24E55A1F0(v3, a1);
}

uint64_t sub_24E55A1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *CompositeAppViewState.TranscriptInfo.initialLocation.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for CompositeAppViewState.TranscriptInfo(0) + 48));
  id v2 = v1;
  return v1;
}

uint64_t CompositeAppViewState.TranscriptInfo.canShowExpensiveUIAndControls.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CompositeAppViewState.TranscriptInfo(0) + 52));
}

uint64_t CompositeAppViewState.TranscriptInfo.init(transcriptID:payloadID:from:to:direction:isPending:kind:timestamp:initialLocation:canShowExpensiveUIAndControls:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, char a8@<W7>, void *a9@<X8>, uint64_t *a10, uint64_t a11, uint64_t a12, char a13)
{
  char v17 = *a7;
  uint64_t v18 = *a10;
  __int16 v19 = *((_WORD *)a10 + 4);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  uint64_t v20 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  sub_24E55A390(a5, (uint64_t)a9 + v20[6]);
  *(void *)((char *)a9 + v20[7]) = a6;
  *((unsigned char *)a9 + v20[8]) = v17;
  *((unsigned char *)a9 + v20[9]) = a8;
  uint64_t v21 = (char *)a9 + v20[10];
  *(void *)uint64_t v21 = v18;
  *((_WORD *)v21 + 4) = v19;
  uint64_t result = sub_24E55A3F4(a11, (uint64_t)a9 + v20[11]);
  *(void *)((char *)a9 + v20[12]) = a12;
  *((unsigned char *)a9 + v20[13]) = a13;
  return result;
}

uint64_t sub_24E55A390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Friend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E55A3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t CompositeAppViewState.TranscriptInfo.singleRecipient.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Friend();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + *(int *)(v3 + 28));
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    sub_24E55AFC4(v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Friend);
    if (v11 != 1)
    {
      if (qword_2698F0E60 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_24E862168();
      __swift_project_value_buffer(v12, (uint64_t)qword_269906D88);
      sub_24E55AFC4(v1, (uint64_t)v5, type metadata accessor for CompositeAppViewState.TranscriptInfo);
      uint64_t v13 = sub_24E862148();
      os_log_type_t v14 = sub_24E864248();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v28 = v25;
        *(_DWORD *)uint64_t v15 = 136315394;
        uint64_t v26 = a1;
        uint64_t v27 = sub_24E55B02C(0x6552656C676E6973, 0xEF746E6569706963, &v28);
        sub_24E8643A8();
        *(_WORD *)(v15 + 12) = 2048;
        uint64_t v16 = *(void *)(*(void *)&v5[*(int *)(v3 + 28)] + 16);
        sub_24E55C1F8((uint64_t)v5, type metadata accessor for CompositeAppViewState.TranscriptInfo);
        uint64_t v27 = v16;
        a1 = v26;
        sub_24E8643A8();
        _os_log_impl(&dword_24E553000, v13, v14, "%s Multiple (%ld) friends configured, expecting only 1.", (uint8_t *)v15, 0x16u);
        uint64_t v17 = v25;
        swift_arrayDestroy();
        MEMORY[0x2533435F0](v17, -1, -1);
        MEMORY[0x2533435F0](v15, -1, -1);
      }
      else
      {
        sub_24E55C1F8((uint64_t)v5, type metadata accessor for CompositeAppViewState.TranscriptInfo);
      }
    }
    sub_24E55A390((uint64_t)v9, a1);
    uint64_t v23 = 0;
  }
  else
  {
    if (qword_2698F0E60 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_24E862168();
    __swift_project_value_buffer(v18, (uint64_t)qword_269906D88);
    __int16 v19 = sub_24E862148();
    os_log_type_t v20 = sub_24E864248();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v28 = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v27 = sub_24E55B02C(0x6552656C676E6973, 0xEF746E6569706963, &v28);
      sub_24E8643A8();
      _os_log_impl(&dword_24E553000, v19, v20, "%s No friend configured.", v21, 0xCu);
      uint64_t v23 = 1;
      swift_arrayDestroy();
      MEMORY[0x2533435F0](v22, -1, -1);
      MEMORY[0x2533435F0](v21, -1, -1);
    }
    else
    {

      uint64_t v23 = 1;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v23, 1, v6);
}

BOOL static CompositeAppViewState.TranscriptInfo.Direction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CompositeAppViewState.TranscriptInfo.Direction.hash(into:)()
{
  return sub_24E864A68();
}

uint64_t CompositeAppViewState.TranscriptInfo.Direction.hashValue.getter()
{
  return sub_24E864A98();
}

BOOL sub_24E55A9A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24E55A9BC()
{
  return sub_24E864A98();
}

uint64_t sub_24E55AA04()
{
  return sub_24E864A68();
}

uint64_t sub_24E55AA30()
{
  return sub_24E864A98();
}

uint64_t sub_24E55AA74()
{
  type metadata accessor for FindMyUICore();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v2 = (void *)sub_24E863C68();
  id v3 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, 0);

  uint64_t v4 = sub_24E863CA8();
  return v4;
}

uint64_t sub_24E55AB68()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  type metadata accessor for Friend();
  uint64_t v3 = sub_24E861218();
  uint64_t v5 = v4;
  if (*((unsigned char *)v1 + *(int *)(v2 + 40) + 8) == 2) {
    uint64_t v6 = 0x74736575716572;
  }
  else {
    uint64_t v6 = 0x6572616873;
  }
  if (*((unsigned char *)v1 + *(int *)(v2 + 40) + 8) == 2) {
    unint64_t v7 = 0xE700000000000000;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  if (*((unsigned char *)v1 + *(int *)(v2 + 32))) {
    uint64_t v8 = 0x676E696F6774756FLL;
  }
  else {
    uint64_t v8 = 0x676E696D6F636E69;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F8030);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24E866040;
  uint64_t v10 = v1[1];
  *(void *)(v9 + 32) = *v1;
  *(void *)(v9 + 40) = v10;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  *(void *)(v9 + 72) = 0xE800000000000000;
  *(void *)(v9 + 80) = v3;
  *(void *)(v9 + 88) = v5;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1348);
  sub_24E55DCE4();
  uint64_t v11 = sub_24E863BD8();
  swift_bridgeObjectRelease();
  return v11;
}

void CompositeAppViewState.DetailsInfo.options.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

FindMyUICore::CompositeAppViewState::DetailsInfo __swiftcall CompositeAppViewState.DetailsInfo.init(options:)(FindMyUICore::CompositeAppViewState::DetailsInfo options)
{
  *id v1 = *(void *)options.options.rawValue;
  return options;
}

uint64_t CompositeAppViewState.DetailsInfo.Options.rawValue.getter()
{
  return *(void *)v0;
}

FindMyUICore::CompositeAppViewState::DetailsInfo::Options __swiftcall CompositeAppViewState.DetailsInfo.Options.init(rawValue:)(FindMyUICore::CompositeAppViewState::DetailsInfo::Options rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static CompositeAppViewState.DetailsInfo.Options.showLocationDetails.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static CompositeAppViewState.DetailsInfo.Options.showShareLocationButton.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static CompositeAppViewState.DetailsInfo.Options.showRequestLocationButton.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static CompositeAppViewState.DetailsInfo.Options.showLocateButtons.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static CompositeAppViewState.DetailsInfo.Options.presentFullScreenWhenTapped.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void static CompositeAppViewState.DetailsInfo.Options.punchOutToFindMyWhenTapped.getter(void *a1@<X8>)
{
  *a1 = 32;
}

void static CompositeAppViewState.DetailsInfo.Options.useCompactInterface.getter(void *a1@<X8>)
{
  *a1 = 64;
}

void sub_24E55AD4C()
{
  uint64_t v0 = unk_27005A4C8;
  if ((unk_27005A4C8 & ~qword_27005A4C0) == 0) {
    uint64_t v0 = 0;
  }
  uint64_t v1 = v0 | qword_27005A4C0;
  uint64_t v2 = qword_27005A4D0;
  if ((qword_27005A4D0 & ~v1) == 0) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 | v1;
  if ((unk_27005A4D8 & ~v3) != 0) {
    uint64_t v4 = unk_27005A4D8;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v4 | v3;
  uint64_t v6 = qword_27005A4E0;
  if ((qword_27005A4E0 & ~v5) == 0) {
    uint64_t v6 = 0;
  }
  qword_2698F12F0 = v6 | v5;
}

uint64_t static CompositeAppViewState.DetailsInfo.Options.default.getter@<X0>(void *a1@<X8>)
{
  if (qword_2698F0DF0 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_2698F12F0;
  return result;
}

void *sub_24E55ADF8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_24E55AE04(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_24E55AE0C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_24E55AE20@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_24E55AE34@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_24E55AE48(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_24E55AE78@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_24E55AEA4@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_24E55AEC8(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_24E55AEDC(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_24E55AEF0(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_24E55AF04@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_24E55AF18(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_24E55AF2C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_24E55AF40(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_24E55AF54()
{
  return *v0 == 0;
}

uint64_t sub_24E55AF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_24E55AF7C(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_24E55AF90@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_24E55AFA0(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_24E55AFAC(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24E55AFC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E55B02C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24E55B100(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24E55DD88((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24E55DD88((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_24E55B100(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24E8643B8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24E55B2BC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24E864578();
  if (!v8)
  {
    sub_24E864708();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24E864778();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24E55B2BC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24E55B354(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E55B4CC(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24E55B4CC(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24E55B354(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24E81AFD4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24E8644F8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24E864708();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24E863D48();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24E864778();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24E864708();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_24E55B4CC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1358);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24E864778();
  __break(1u);
  return result;
}

unint64_t sub_24E55B620()
{
  unint64_t result = qword_2698F12F8;
  if (!qword_2698F12F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F12F8);
  }
  return result;
}

unint64_t sub_24E55B678()
{
  unint64_t result = qword_2698F1300;
  if (!qword_2698F1300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1300);
  }
  return result;
}

unint64_t sub_24E55B6D0()
{
  unint64_t result = qword_2698F1308;
  if (!qword_2698F1308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1308);
  }
  return result;
}

unint64_t sub_24E55B728()
{
  unint64_t result = qword_2698F1310;
  if (!qword_2698F1310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1310);
  }
  return result;
}

unint64_t sub_24E55B780()
{
  unint64_t result = qword_2698F1318;
  if (!qword_2698F1318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1318);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for CompositeAppViewState(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      int64_t v9 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
      uint64_t v10 = v9[6];
      size_t v11 = (void *)((char *)a1 + v10);
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = *(void *)((char *)a2 + v10 + 8);
      *size_t v11 = *(void *)((char *)a2 + v10);
      v11[1] = v13;
      os_log_type_t v14 = (int *)type metadata accessor for Friend();
      uint64_t v15 = v14[5];
      uint64_t v33 = &v12[v15];
      uint64_t v35 = (char *)v11 + v15;
      uint64_t v16 = sub_24E861248();
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v35, v33, v16);
      *(void *)((char *)v11 + v14[6]) = *(void *)&v12[v14[6]];
      uint64_t v17 = v14[7];
      uint64_t v36 = *(void **)&v12[v17];
      *(void *)((char *)v11 + v17) = v36;
      *(void *)((char *)a1 + v9[7]) = *(void *)((char *)a2 + v9[7]);
      *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
      *((unsigned char *)a1 + v9[9]) = *((unsigned char *)a2 + v9[9]);
      uint64_t v18 = v9[10];
      __int16 v19 = (char *)a1 + v18;
      os_log_type_t v20 = (char *)a2 + v18;
      *((_WORD *)v19 + 4) = *((_WORD *)v20 + 4);
      *(void *)__int16 v19 = *(void *)v20;
      uint64_t v21 = v9[11];
      __dst = (char *)a1 + v21;
      uint64_t v34 = (char *)a2 + v21;
      uint64_t v22 = sub_24E8616F8();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      swift_bridgeObjectRetain();
      id v25 = v36;
      swift_bridgeObjectRetain();
      if (v24(v34, 1, v22))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
        memcpy(__dst, v34, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v34, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
      }
      uint64_t v28 = v9[12];
      uint64_t v29 = *(void **)((char *)a2 + v28);
      *(void *)((char *)a1 + v28) = v29;
      *((unsigned char *)a1 + v9[13]) = *((unsigned char *)a2 + v9[13]);
      id v30 = v29;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

void destroy for CompositeAppViewState(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    uint64_t v3 = a1 + v2[6];
    swift_bridgeObjectRelease();
    uint64_t v4 = type metadata accessor for Friend();
    uint64_t v5 = v3 + *(int *)(v4 + 20);
    uint64_t v6 = sub_24E861248();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v7 = a1 + v2[11];
    uint64_t v8 = sub_24E8616F8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = *(void **)(a1 + v2[12]);
  }
}

void *initializeWithCopy for CompositeAppViewState(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    uint64_t v9 = v8[6];
    uint64_t v10 = (void *)((char *)a1 + v9);
    size_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)((char *)a2 + v9 + 8);
    *uint64_t v10 = *(void *)((char *)a2 + v9);
    v10[1] = v12;
    uint64_t v13 = (int *)type metadata accessor for Friend();
    uint64_t v14 = v13[5];
    uint64_t v32 = &v11[v14];
    __dsta = (char *)v10 + v14;
    uint64_t v15 = sub_24E861248();
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(__dsta, v32, v15);
    *(void *)((char *)v10 + v13[6]) = *(void *)&v11[v13[6]];
    uint64_t v16 = v13[7];
    uint64_t v17 = *(void **)&v11[v16];
    *(void *)((char *)v10 + v16) = v17;
    *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
    *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
    *((unsigned char *)a1 + v8[9]) = *((unsigned char *)a2 + v8[9]);
    uint64_t v18 = v8[10];
    __int16 v19 = (char *)a1 + v18;
    os_log_type_t v20 = (char *)a2 + v18;
    *((_WORD *)v19 + 4) = *((_WORD *)v20 + 4);
    *(void *)__int16 v19 = *(void *)v20;
    uint64_t v21 = v8[11];
    uint64_t v33 = (char *)a2 + v21;
    __dst = (char *)a1 + v21;
    uint64_t v22 = sub_24E8616F8();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    id v25 = v17;
    swift_bridgeObjectRetain();
    if (v24(v33, 1, v22))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
      memcpy(__dst, v33, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v33, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
    }
    uint64_t v27 = v8[12];
    uint64_t v28 = *(void **)((char *)a2 + v27);
    *(void *)((char *)a1 + v27) = v28;
    *((unsigned char *)a1 + v8[13]) = *((unsigned char *)a2 + v8[13]);
    id v29 = v28;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for CompositeAppViewState(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24E55C1F8((uint64_t)a1, type metadata accessor for CompositeAppViewState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      uint64_t v6 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = (void *)((char *)a1 + v7);
      uint64_t v9 = (char *)a2 + v7;
      *uint64_t v8 = *(void *)((char *)a2 + v7);
      v8[1] = *(void *)((char *)a2 + v7 + 8);
      uint64_t v10 = (int *)type metadata accessor for Friend();
      uint64_t v11 = v10[5];
      id v30 = &v9[v11];
      __dsta = (char *)v8 + v11;
      uint64_t v12 = sub_24E861248();
      id v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(__dsta, v30, v12);
      *(void *)((char *)v8 + v10[6]) = *(void *)&v9[v10[6]];
      uint64_t v13 = v10[7];
      uint64_t v14 = *(void **)&v9[v13];
      *(void *)((char *)v8 + v13) = v14;
      *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
      *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
      *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
      uint64_t v15 = v6[10];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      __int16 v18 = *((_WORD *)v17 + 4);
      *(void *)uint64_t v16 = *(void *)v17;
      *((_WORD *)v16 + 4) = v18;
      uint64_t v19 = v6[11];
      uint64_t v31 = (char *)a2 + v19;
      __dst = (char *)a1 + v19;
      uint64_t v20 = sub_24E8616F8();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      id v23 = v14;
      swift_bridgeObjectRetain();
      if (v22(v31, 1, v20))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
        memcpy(__dst, v31, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v31, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      uint64_t v25 = v6[12];
      uint64_t v26 = *(void **)((char *)a2 + v25);
      *(void *)((char *)a1 + v25) = v26;
      *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
      id v27 = v26;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24E55C1F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for CompositeAppViewState(uint64_t a1)
{
  return sub_24E55C278(a1, (uint64_t *)&unk_2698F1320);
}

uint64_t sub_24E55C278(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *initializeWithTake for CompositeAppViewState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
    uint64_t v11 = (int *)type metadata accessor for Friend();
    uint64_t v12 = v11[5];
    uint64_t v13 = &v9[v12];
    uint64_t v14 = &v10[v12];
    uint64_t v15 = sub_24E861248();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    *(void *)&v9[v11[6]] = *(void *)&v10[v11[6]];
    *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
    *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
    *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
    *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
    uint64_t v16 = v7[10];
    uint64_t v17 = (char *)a1 + v16;
    __int16 v18 = (char *)a2 + v16;
    *((_WORD *)v17 + 4) = *((_WORD *)v18 + 4);
    *(void *)uint64_t v17 = *(void *)v18;
    uint64_t v19 = v7[11];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_24E8616F8();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    *(void *)((char *)a1 + v7[12]) = *(void *)((char *)a2 + v7[12]);
    *((unsigned char *)a1 + v7[13]) = *((unsigned char *)a2 + v7[13]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for CompositeAppViewState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24E55C1F8((uint64_t)a1, type metadata accessor for CompositeAppViewState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
      uint64_t v11 = (int *)type metadata accessor for Friend();
      uint64_t v12 = v11[5];
      uint64_t v13 = &v9[v12];
      uint64_t v14 = &v10[v12];
      uint64_t v15 = sub_24E861248();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(void *)&v9[v11[6]] = *(void *)&v10[v11[6]];
      *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
      *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
      *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
      *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
      uint64_t v16 = v7[10];
      uint64_t v17 = (char *)a1 + v16;
      __int16 v18 = (char *)a2 + v16;
      *((_WORD *)v17 + 4) = *((_WORD *)v18 + 4);
      *(void *)uint64_t v17 = *(void *)v18;
      uint64_t v19 = v7[11];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_24E8616F8();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      *(void *)((char *)a1 + v7[12]) = *(void *)((char *)a2 + v7[12]);
      *((unsigned char *)a1 + v7[13]) = *((unsigned char *)a2 + v7[13]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CompositeAppViewState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for CompositeAppViewState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24E55C7DC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24E55C7EC()
{
  uint64_t result = type metadata accessor for CompositeAppViewState.TranscriptInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for CompositeAppViewState.TranscriptInfo(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)((char *)a2 + v9 + 8);
    *uint64_t v10 = *(void *)((char *)a2 + v9);
    v10[1] = v12;
    uint64_t v13 = (int *)type metadata accessor for Friend();
    uint64_t v14 = v13[5];
    uint64_t v35 = &v11[v14];
    __dsta = (char *)v10 + v14;
    uint64_t v15 = sub_24E861248();
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34(__dsta, v35, v15);
    *(void *)((char *)v10 + v13[6]) = *(void *)&v11[v13[6]];
    uint64_t v16 = v13[7];
    uint64_t v17 = *(void **)&v11[v16];
    *(void *)((char *)v10 + v16) = v17;
    uint64_t v18 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)v4 + v18) = *((unsigned char *)a2 + v18);
    uint64_t v19 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    *(void *)uint64_t v20 = *(void *)v21;
    *((_WORD *)v20 + 4) = *((_WORD *)v21 + 4);
    uint64_t v22 = a3[11];
    uint64_t v36 = (char *)a2 + v22;
    __dst = (char *)v4 + v22;
    uint64_t v23 = sub_24E8616F8();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    id v26 = v17;
    swift_bridgeObjectRetain();
    if (v25(v36, 1, v23))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
      memcpy(__dst, v36, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v36, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    }
    uint64_t v29 = a3[12];
    uint64_t v30 = a3[13];
    uint64_t v31 = *(void **)((char *)a2 + v29);
    *(void *)((char *)v4 + v29) = v31;
    *((unsigned char *)v4 + v30) = *((unsigned char *)a2 + v30);
    id v32 = v31;
  }
  return v4;
}

void destroy for CompositeAppViewState.TranscriptInfo(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for Friend();
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = sub_24E861248();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[11];
  uint64_t v9 = sub_24E8616F8();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = *(void **)(a1 + a2[12]);
}

void *initializeWithCopy for CompositeAppViewState.TranscriptInfo(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
  *uint64_t v9 = *(void *)((char *)a2 + v8);
  v9[1] = v11;
  uint64_t v12 = (int *)type metadata accessor for Friend();
  uint64_t v13 = v12[5];
  uint64_t v33 = &v10[v13];
  __dsta = (char *)v9 + v13;
  uint64_t v14 = sub_24E861248();
  id v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32(__dsta, v33, v14);
  *(void *)((char *)v9 + v12[6]) = *(void *)&v10[v12[6]];
  uint64_t v15 = v12[7];
  uint64_t v16 = *(void **)&v10[v15];
  *(void *)((char *)v9 + v15) = v16;
  uint64_t v17 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
  uint64_t v18 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *((_WORD *)v19 + 4) = *((_WORD *)v20 + 4);
  uint64_t v21 = a3[11];
  uint64_t v34 = (char *)a2 + v21;
  __dst = (char *)a1 + v21;
  uint64_t v22 = sub_24E8616F8();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  swift_bridgeObjectRetain();
  id v25 = v16;
  swift_bridgeObjectRetain();
  if (v24(v34, 1, v22))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    memcpy(__dst, v34, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v34, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
  }
  uint64_t v27 = a3[12];
  uint64_t v28 = a3[13];
  uint64_t v29 = *(void **)((char *)a2 + v27);
  *(void *)((char *)a1 + v27) = v29;
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  id v30 = v29;
  return a1;
}

void *assignWithCopy for CompositeAppViewState.TranscriptInfo(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = *(void *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for Friend();
  uint64_t v10 = v9[5];
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_24E861248();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)((char *)v7 + v9[6]) = *(void *)&v8[v9[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v9[7];
  uint64_t v15 = *(void **)&v8[v14];
  uint64_t v16 = *(void **)((char *)v7 + v14);
  *(void *)((char *)v7 + v14) = v15;
  id v17 = v15;

  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v18 = a3[10];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  *((_WORD *)v19 + 4) = *((_WORD *)v20 + 4);
  *(void *)uint64_t v19 = v21;
  uint64_t v22 = a3[11];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_24E8616F8();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v7) = v27(v23, 1, v25);
  int v28 = v27(v24, 1, v25);
  if (!v7)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  uint64_t v30 = a3[12];
  uint64_t v31 = *(void **)((char *)a1 + v30);
  id v32 = *(void **)((char *)a2 + v30);
  *(void *)((char *)a1 + v30) = v32;
  id v33 = v32;

  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  return a1;
}

_OWORD *initializeWithTake for CompositeAppViewState.TranscriptInfo(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Friend();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = sub_24E861248();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)&v8[v10[6]] = *(void *)&v9[v10[6]];
  *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
  uint64_t v15 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v16 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  id v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)id v17 = *(void *)v18;
  *((_WORD *)v17 + 4) = *((_WORD *)v18 + 4);
  uint64_t v19 = a3[11];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_24E8616F8();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v25 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
  return a1;
}

void *assignWithTake for CompositeAppViewState.TranscriptInfo(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
  *uint64_t v9 = *(void *)((char *)a2 + v8);
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for Friend();
  uint64_t v13 = v12[5];
  uint64_t v14 = (char *)v9 + v13;
  uint64_t v15 = &v10[v13];
  uint64_t v16 = sub_24E861248();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  *(void *)((char *)v9 + v12[6]) = *(void *)&v10[v12[6]];
  swift_bridgeObjectRelease();
  uint64_t v17 = v12[7];
  uint64_t v18 = *(void **)((char *)v9 + v17);
  *(void *)((char *)v9 + v17) = *(void *)&v10[v17];

  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
  uint64_t v20 = a3[10];
  uint64_t v21 = a3[11];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  *((_WORD *)v22 + 4) = *((_WORD *)v23 + 4);
  uint64_t v24 = (char *)a1 + v21;
  uint64_t v25 = (char *)a2 + v21;
  uint64_t v26 = sub_24E8616F8();
  uint64_t v27 = *(void *)(v26 - 8);
  int v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  LODWORD(v9) = v28(v24, 1, v26);
  int v29 = v28(v25, 1, v26);
  if (!v9)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    memcpy(v24, v25, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_7:
  uint64_t v31 = a3[12];
  id v32 = *(void **)((char *)a1 + v31);
  *(void *)((char *)a1 + v31) = *(void *)((char *)a2 + v31);

  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for CompositeAppViewState.TranscriptInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E55D648);
}

uint64_t sub_24E55D648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Friend();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for CompositeAppViewState.TranscriptInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E55D78C);
}

uint64_t sub_24E55D78C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Friend();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_24E55D8BC()
{
  type metadata accessor for Friend();
  if (v0 <= 0x3F)
  {
    sub_24E55D9C0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24E55D9C0()
{
  if (!qword_2698F1340)
  {
    sub_24E8616F8();
    unint64_t v0 = sub_24E864388();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2698F1340);
    }
  }
}

uint64_t getEnumTagSinglePayload for CompositeAppViewState.TranscriptInfo.Direction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CompositeAppViewState.TranscriptInfo.Direction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E55DB74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24E55DB9C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24E55DBA4(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CompositeAppViewState.TranscriptInfo.Direction()
{
  return &type metadata for CompositeAppViewState.TranscriptInfo.Direction;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CompositeAppViewState.TranscriptInfo.Kind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  unsigned int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    unsigned int v5 = -1;
  }
  if (v5 + 1 >= 2) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CompositeAppViewState.TranscriptInfo.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)uint64_t result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_24E55DC70(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24E55DC8C(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CompositeAppViewState.TranscriptInfo.Kind()
{
  return &type metadata for CompositeAppViewState.TranscriptInfo.Kind;
}

ValueMetadata *type metadata accessor for CompositeAppViewState.DetailsInfo()
{
  return &type metadata for CompositeAppViewState.DetailsInfo;
}

ValueMetadata *type metadata accessor for CompositeAppViewState.DetailsInfo.Options()
{
  return &type metadata for CompositeAppViewState.DetailsInfo.Options;
}

unint64_t sub_24E55DCE4()
{
  unint64_t result = qword_2698F1350;
  if (!qword_2698F1350)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1350);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_24E55DD88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24E55DDEC()
{
  return 1;
}

uint64_t sub_24E55DDF4()
{
  return sub_24E864A98();
}

uint64_t sub_24E55DE3C()
{
  return sub_24E863D08();
}

uint64_t sub_24E55DE48()
{
  return sub_24E864A98();
}

uint64_t sub_24E55DE8C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_24E864798();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_24E55DEE0(void *a1@<X8>)
{
  *a1 = 12406;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_24E55DEF8()
{
  uint64_t result = 0x72756F48656E6FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x796144664F646E65;
      break;
    case 2:
      uint64_t result = 0x696E696665646E69;
      break;
    case 3:
      uint64_t result = 0x636974617473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E55DF8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E563CAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E55DFB4()
{
  return 0;
}

void sub_24E55DFC0(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24E55DFCC(uint64_t a1)
{
  unint64_t v2 = sub_24E565DF4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E55E008(uint64_t a1)
{
  unint64_t v2 = sub_24E565DF4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E55E044(void *a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1548);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x270FA5388]();
  int v28 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1550);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x270FA5388]();
  uint64_t v25 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1558);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1560);
  uint64_t v22 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1568);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E565DF4();
  sub_24E864AC8();
  switch((char)v31)
  {
    case 1:
      char v33 = 1;
      sub_24E565EF0();
      sub_24E864848();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
      break;
    case 2:
      char v34 = 2;
      sub_24E565E9C();
      uint64_t v17 = v25;
      sub_24E864848();
      uint64_t v19 = v26;
      uint64_t v18 = v27;
      goto LABEL_5;
    case 3:
      char v35 = 3;
      sub_24E565E48();
      uint64_t v17 = v28;
      sub_24E864848();
      uint64_t v19 = v29;
      uint64_t v18 = v30;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_24E565F44();
      sub_24E864848();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_24E55E48C(void *a1, __int16 a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1470);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1478);
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1480);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E565504();
  sub_24E864AC8();
  if ((a2 & 0xFF00) == 0x200)
  {
    char v27 = 1;
    sub_24E565558();
    sub_24E864848();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    char v26 = 0;
    sub_24E5655AC();
    sub_24E864848();
    char v25 = a2;
    char v24 = 0;
    sub_24E5656A8();
    uint64_t v16 = v21;
    uint64_t v15 = v22;
    sub_24E8648A8();
    if (!v15)
    {
      char v23 = 1;
      sub_24E864888();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v16);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

unint64_t sub_24E55E7B8(char a1)
{
  unint64_t result = 0x656475746974616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 2:
      unint64_t result = 0x6564757469746C61;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x657372756F63;
      break;
    case 6:
      unint64_t result = 0x6341657372756F63;
      break;
    case 7:
      unint64_t result = 0x6465657073;
      break;
    case 8:
      unint64_t result = 0x6363416465657073;
      break;
    case 9:
      unint64_t result = 0x6D617473656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E55E90C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1490);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E565654();
  sub_24E864AC8();
  v8[15] = 0;
  sub_24E864898();
  if (!v1)
  {
    v8[14] = 1;
    sub_24E864898();
    v8[13] = 2;
    sub_24E864898();
    v8[12] = 3;
    sub_24E864898();
    v8[11] = 4;
    sub_24E864898();
    v8[10] = 5;
    sub_24E864898();
    v8[9] = 6;
    sub_24E864898();
    v8[8] = 7;
    sub_24E864898();
    v8[7] = 8;
    sub_24E864898();
    v8[6] = 9;
    sub_24E864898();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24E55EBAC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F13E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E563488();
  sub_24E864AC8();
  LOBYTE(v15[0]) = 0;
  sub_24E864878();
  if (!v2)
  {
    LOWORD(v15[0]) = *(_WORD *)(v3 + 16);
    char v17 = 1;
    sub_24E5636A8();
    sub_24E8648A8();
    uint64_t v9 = type metadata accessor for MessagePayload.ContentV0(0);
    LOBYTE(v15[0]) = 2;
    sub_24E8616F8();
    sub_24E561B8C(&qword_2698F13F8, MEMORY[0x263F07490]);
    sub_24E864868();
    uint64_t v10 = v3 + *(int *)(v9 + 28);
    char v11 = *(unsigned char *)(v10 + 80);
    long long v12 = *(_OWORD *)(v10 + 16);
    v15[0] = *(_OWORD *)v10;
    v15[1] = v12;
    long long v13 = *(_OWORD *)(v10 + 48);
    v15[2] = *(_OWORD *)(v10 + 32);
    v15[3] = v13;
    v15[4] = *(_OWORD *)(v10 + 64);
    char v16 = v11;
    char v17 = 3;
    sub_24E5636FC();
    sub_24E864868();
    LOBYTE(v15[0]) = 4;
    sub_24E864858();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24E55EE34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F13C0);
  uint64_t v6 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
  MEMORY[0x270FA5388]();
  char v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  char v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_24E563488();
  sub_24E864AB8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  }
  LOBYTE(v24) = 0;
  *(void *)char v11 = sub_24E8647F8();
  *((void *)v11 + 1) = v13;
  char v30 = 1;
  sub_24E5634DC();
  sub_24E864828();
  *((_WORD *)v11 + 8) = v24;
  sub_24E8616F8();
  LOBYTE(v24) = 2;
  sub_24E561B8C(&qword_2698F13D8, MEMORY[0x263F07490]);
  sub_24E8647E8();
  sub_24E55A3F4((uint64_t)v5, (uint64_t)&v11[v9[6]]);
  char v30 = 3;
  sub_24E56358C();
  sub_24E8647E8();
  char v14 = v29;
  uint64_t v15 = &v11[v9[7]];
  long long v16 = v25;
  *(_OWORD *)uint64_t v15 = v24;
  *((_OWORD *)v15 + 1) = v16;
  long long v17 = v27;
  *((_OWORD *)v15 + 2) = v26;
  *((_OWORD *)v15 + 3) = v17;
  *((_OWORD *)v15 + 4) = v28;
  v15[80] = v14;
  LOBYTE(v24) = 4;
  char v18 = sub_24E8647D8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  v11[v9[8]] = v18;
  sub_24E5635E0((uint64_t)v11, v21, type metadata accessor for MessagePayload.ContentV0);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  return sub_24E563648((uint64_t)v11, type metadata accessor for MessagePayload.ContentV0);
}

uint64_t sub_24E55F244()
{
  return 0;
}

void sub_24E55F250(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24E55F25C(uint64_t a1)
{
  unint64_t v2 = sub_24E565EF0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E55F298(uint64_t a1)
{
  unint64_t v2 = sub_24E565EF0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E55F2D4(uint64_t a1)
{
  unint64_t v2 = sub_24E565E9C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E55F310(uint64_t a1)
{
  unint64_t v2 = sub_24E565E9C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E55F34C(uint64_t a1)
{
  unint64_t v2 = sub_24E565F44();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E55F388(uint64_t a1)
{
  unint64_t v2 = sub_24E565F44();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E55F3C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24E55F3F4(uint64_t a1)
{
  unint64_t v2 = sub_24E565E48();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E55F430(uint64_t a1)
{
  unint64_t v2 = sub_24E565E48();

  return MEMORY[0x270FA00B8](a1, v2);
}

char *sub_24E55F46C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24E563E78(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_24E55F498(void *a1)
{
  return sub_24E55E044(a1, *v1);
}

uint64_t sub_24E55F4B4()
{
  if (*v0) {
    return 0x74736575716572;
  }
  else {
    return 0x6572616873;
  }
}

uint64_t sub_24E55F4EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E5644B0(a1, a2);
  *a3 = result;
  return result;
}

void sub_24E55F514(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24E55F520(uint64_t a1)
{
  unint64_t v2 = sub_24E565504();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E55F55C(uint64_t a1)
{
  unint64_t v2 = sub_24E565504();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E55F598(uint64_t a1)
{
  unint64_t v2 = sub_24E565558();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E55F5D4(uint64_t a1)
{
  unint64_t v2 = sub_24E565558();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E55F610()
{
  if (*v0) {
    return 0x65526D6F72467369;
  }
  else {
    return 0x6E6F697461727564;
  }
}

uint64_t sub_24E55F658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E56459C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E55F680(uint64_t a1)
{
  unint64_t v2 = sub_24E5655AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E55F6BC(uint64_t a1)
{
  unint64_t v2 = sub_24E5655AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E55F6F8@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t result = sub_24E5646B4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24E55F724(void *a1)
{
  return sub_24E55E48C(a1, *v1);
}

unint64_t sub_24E55F740()
{
  return sub_24E55E7B8(*v0);
}

uint64_t sub_24E55F748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E564B7C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24E55F770(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_24E55F77C(uint64_t a1)
{
  unint64_t v2 = sub_24E565654();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E55F7B8(uint64_t a1)
{
  unint64_t v2 = sub_24E565654();

  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_24E55F7F4@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24E564FA4(a1, v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_24E55F840(void *a1)
{
  return sub_24E55E90C(a1);
}

BOOL sub_24E55F858(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24E55F86C()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1684957547;
      break;
    case 2:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      uint64_t result = 0x4C6C616974696E69;
      break;
    case 4:
      uint64_t result = 0x65526D6F72467369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E55F91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E5652C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_24E55F944(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24E55F950(uint64_t a1)
{
  unint64_t v2 = sub_24E563488();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E55F98C(uint64_t a1)
{
  unint64_t v2 = sub_24E563488();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24E55F9C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24E55EE34(a1, a2);
}

uint64_t sub_24E55F9E0(void *a1)
{
  return sub_24E55EBAC(a1);
}

uint64_t MessagePayload.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void MessagePayload.kind.getter(uint64_t a1@<X8>)
{
  unsigned int v3 = *(unsigned __int16 *)(v1 + 16);
  if ((v3 & 0xFF00) == 0x200)
  {
    uint64_t v4 = 0;
    LOWORD(v5) = 2;
  }
  else
  {
    uint64_t v4 = *(_WORD *)(v1 + 16);
    int v5 = (v3 >> 8) & 1 | ((*(unsigned char *)(v1 + *(int *)(type metadata accessor for MessagePayload.ContentV0(0) + 32)) & 1) << 8);
  }
  *(void *)a1 = v4;
  *(_WORD *)(a1 + 8) = v5;
}

uint64_t type metadata accessor for MessagePayload.ContentV0(uint64_t a1)
{
  return sub_24E55C278(a1, (uint64_t *)&unk_2698F13A8);
}

uint64_t MessagePayload.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessagePayload.ContentV0(0) + 24);

  return sub_24E55A1F0(v3, a1);
}

id MessagePayload.initialLocation.getter()
{
  uint64_t v1 = sub_24E8616F8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = 0;
  uint64_t v6 = v0 + *(int *)(type metadata accessor for MessagePayload.ContentV0(0) + 28);
  if ((*(unsigned char *)(v6 + 80) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v6 + 64);
    double v8 = *(double *)(v6 + 48);
    double v19 = *(double *)(v6 + 56);
    double v10 = *(double *)(v6 + 32);
    double v9 = *(double *)(v6 + 40);
    double v12 = *(double *)(v6 + 16);
    double v11 = *(double *)(v6 + 24);
    double v14 = *(double *)v6;
    double v13 = *(double *)(v6 + 8);
    sub_24E861648();
    id v15 = objc_allocWithZone(MEMORY[0x263F00A50]);
    long long v16 = (void *)sub_24E861608();
    id v5 = objc_msgSend(v15, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_courseAccuracy_speed_speedAccuracy_timestamp_, v16, v14, v13, v12, v11, v10, v9, v8, v19, v7);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v5;
}

uint64_t MessagePayload.init(id:kind:timestamp:initialLocation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_24E8616F8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v16 = *((unsigned __int16 *)a3 + 4);
  if (*((_WORD *)a3 + 4) == 2)
  {
    LODWORD(v17) = 0;
    __int16 v18 = 512;
    if (a5)
    {
LABEL_3:
      id v19 = a5;
      int v47 = (int)v17;
      id v17 = v19;
      uint64_t v48 = a1;
      uint64_t v20 = a2;
      uint64_t v21 = a4;
      objc_msgSend(v19, sel_coordinate);
      uint64_t v50 = v22;
      objc_msgSend(v17, sel_coordinate);
      uint64_t v49 = v23;
      objc_msgSend(v17, sel_altitude);
      uint64_t v25 = v24;
      objc_msgSend(v17, sel_horizontalAccuracy);
      uint64_t v27 = v26;
      objc_msgSend(v17, sel_verticalAccuracy);
      uint64_t v29 = v28;
      objc_msgSend(v17, sel_course);
      uint64_t v31 = v30;
      objc_msgSend(v17, sel_courseAccuracy);
      uint64_t v33 = v32;
      objc_msgSend(v17, sel_speed);
      uint64_t v35 = v34;
      objc_msgSend(v17, sel_speedAccuracy);
      uint64_t v37 = v36;
      id v38 = objc_msgSend(v17, sel_timestamp);
      sub_24E8616D8();

      a4 = v21;
      a2 = v20;
      a1 = v48;
      sub_24E861658();
      uint64_t v40 = v39;

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      LOBYTE(v17) = v47;
LABEL_7:
      *(void *)a6 = a1;
      *(void *)(a6 + 8) = a2;
      *(_WORD *)(a6 + 16) = v18;
      uint64_t v42 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
      uint64_t result = sub_24E55A3F4(a4, a6 + v42[6]);
      uint64_t v44 = a6 + v42[7];
      uint64_t v45 = v49;
      *(void *)uint64_t v44 = v50;
      *(void *)(v44 + 8) = v45;
      *(void *)(v44 + 16) = v25;
      *(void *)(v44 + 24) = v27;
      *(void *)(v44 + 32) = v29;
      *(void *)(v44 + 40) = v31;
      *(void *)(v44 + 48) = v33;
      *(void *)(v44 + 56) = v35;
      *(void *)(v44 + 64) = v37;
      *(void *)(v44 + 72) = v40;
      *(unsigned char *)(v44 + 80) = a5 == 0;
      *(unsigned char *)(a6 + v42[8]) = (_BYTE)v17;
      return result;
    }
LABEL_6:
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    uint64_t v25 = 0;
    uint64_t v27 = 0;
    uint64_t v29 = 0;
    uint64_t v31 = 0;
    uint64_t v33 = 0;
    uint64_t v35 = 0;
    uint64_t v37 = 0;
    uint64_t v40 = 0;
    goto LABEL_7;
  }
  uint64_t v41 = *a3;
  if ((unint64_t)*a3 < 4)
  {
    LODWORD(v17) = (v16 >> 8) & 1;
    __int16 v18 = v41 | ((v16 & 1) << 8);
    if (a5) {
      goto LABEL_3;
    }
    goto LABEL_6;
  }
  uint64_t v51 = *a3;
  uint64_t result = sub_24E8649B8();
  __break(1u);
  return result;
}

uint64_t MessagePayload.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v147[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = (void *)sub_24E861558();
  id v5 = (char *)*(v4 - 1);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  double v8 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  v140 = (char *)&v123 - v9;
  uint64_t v131 = type metadata accessor for MessagePayload.ContentV0(0);
  MEMORY[0x270FA5388](v131);
  v132 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1360);
  MEMORY[0x270FA5388](v11 - 8);
  v133 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_24E8613C8();
  uint64_t v138 = *(void *)(v145 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v145);
  v136 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v134 = (char *)&v123 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v123 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  v135 = (char *)&v123 - v21;
  MEMORY[0x270FA5388](v20);
  v137 = (char *)&v123 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1368);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v123 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24E861468();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v123 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E8613F8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_24E563530((uint64_t)v25, &qword_2698F1368);
LABEL_8:
    if (qword_2698F0E60 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_24E862168();
    __swift_project_value_buffer(v43, (uint64_t)qword_269906D88);
    (*((void (**)(char *, uint64_t, void *))v5 + 2))(v8, a1, v4);
    uint64_t v44 = sub_24E862148();
    os_log_type_t v45 = sub_24E864248();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v139 = a1;
      int v47 = (uint8_t *)v46;
      uint64_t v48 = (void *)swift_slowAlloc();
      uint64_t v141 = a2;
      uint64_t v49 = v48;
      v147[0] = v48;
      *(_DWORD *)int v47 = 136315138;
      sub_24E561B8C(&qword_2698F1370, MEMORY[0x263F06EA8]);
      uint64_t v50 = sub_24E864928();
      uint64_t v146 = sub_24E55B02C(v50, v51, (uint64_t *)v147);
      sub_24E8643A8();
      swift_bridgeObjectRelease();
      uint64_t v52 = (void (*)(char *, void *))*((void *)v5 + 1);
      v52(v8, v4);
      _os_log_impl(&dword_24E553000, v44, v45, "MessagePayload: Expected our components to have queryItems - %s", v47, 0xCu);
      swift_arrayDestroy();
      uint64_t v53 = v49;
      a2 = v141;
      MEMORY[0x2533435F0](v53, -1, -1);
      MEMORY[0x2533435F0](v47, -1, -1);

      v52((char *)v139, v4);
    }
    else
    {

      uint64_t v54 = (void (*)(char *, void *))*((void *)v5 + 1);
      v54(v8, v4);
      v54((char *)a1, v4);
    }
    goto LABEL_32;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v25, v26);
  uint64_t v142 = sub_24E8613D8();
  if (!v142)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    goto LABEL_8;
  }
  v130 = v5;
  if (qword_2698F0E60 != -1) {
    goto LABEL_63;
  }
  while (1)
  {
    v127 = v29;
    uint64_t v30 = sub_24E862168();
    uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_269906D88);
    uint64_t v32 = v142;
    swift_bridgeObjectRetain_n();
    uint64_t v126 = v31;
    uint64_t v33 = sub_24E862148();
    os_log_type_t v34 = sub_24E864238();
    BOOL v35 = os_log_type_enabled(v33, v34);
    uint64_t v141 = a2;
    uint64_t v129 = v27;
    uint64_t v128 = v26;
    if (v35)
    {
      uint64_t v36 = v4;
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      id v38 = (void *)swift_slowAlloc();
      v147[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      v144 = (void (**)(const char *, uint64_t))(v37 + 4);
      swift_bridgeObjectRetain();
      uint64_t v39 = MEMORY[0x253341E60](v142, v145);
      unint64_t v41 = v40;
      swift_bridgeObjectRelease();
      uint64_t v146 = sub_24E55B02C(v39, v41, (uint64_t *)v147);
      uint64_t v32 = v142;
      sub_24E8643A8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E553000, v33, v34, "MessagePayload: queryItems - %s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533435F0](v38, -1, -1);
      uint64_t v42 = v37;
      uint64_t v4 = v36;
      a2 = v141;
      MEMORY[0x2533435F0](v42, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v29 = v130;
    v55 = v140;
    uint64_t v56 = *(void *)(v32 + 16);
    uint64_t v139 = a1;
    if (!v56) {
      break;
    }
    v124 = v4;
    a2 = v138 + 16;
    uint64_t v4 = *(void **)(v138 + 16);
    unint64_t v57 = v32 + ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80));
    id v143 = *(id *)(v138 + 72);
    v144 = (void (**)(const char *, uint64_t))(v138 + 8);
    swift_bridgeObjectRetain();
    unint64_t v58 = v57;
    uint64_t v125 = v56;
    uint64_t v59 = v145;
    while (1)
    {
      ((void (*)(const char *, unint64_t, uint64_t))v4)(v19, v58, v59);
      if (sub_24E8613A8() == 0xD00000000000001ELL && v60 == 0x800000024E872540)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      char v61 = sub_24E864988();
      swift_bridgeObjectRelease();
      if (v61) {
        break;
      }
      uint64_t v59 = v145;
      (*v144)(v19, v145);
      v58 += (unint64_t)v143;
      if (!--v56)
      {
        swift_bridgeObjectRelease();
        v55 = v140;
        a2 = v141;
        uint64_t v29 = v130;
        a1 = v139;
        uint64_t v4 = v124;
        goto LABEL_28;
      }
    }
    uint64_t v59 = v145;
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v63 = v138 + 32;
    v62 = *(void (**)(char *, const char *, uint64_t))(v138 + 32);
    v64 = v135;
    v62(v135, v19, v59);
    v65 = v137;
    v135 = (char *)v62;
    v62(v137, v64, v59);
    sub_24E8613B8();
    uint64_t v29 = v130;
    a1 = v139;
    v66 = v136;
    if (!v67)
    {
      (*v144)(v65, v59);
      goto LABEL_27;
    }
    uint64_t v68 = sub_24E864798();
    swift_bridgeObjectRelease();
    if (v68)
    {
      (*v144)(v65, v145);
LABEL_27:
      v55 = v140;
      a2 = v141;
      uint64_t v4 = v124;
      break;
    }
    uint64_t v123 = v63;
    swift_bridgeObjectRetain();
    uint64_t v26 = 0;
    id v19 = "FindMyMessagePayloadVersionKey";
    v140 = (char *)0x800000024E872560;
    uint64_t v27 = v145;
    while (1)
    {
      a1 = v26 + 1;
      if (__OFADD__(v26, 1)) {
        break;
      }
      ((void (*)(char *, unint64_t, uint64_t))v4)(v66, v57, v27);
      if (sub_24E8613A8() == 0xD000000000000021 && v79 == v140)
      {
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
      char v80 = sub_24E864988();
      swift_bridgeObjectRelease();
      if (v80)
      {
        uint64_t v27 = v145;
LABEL_42:
        swift_bridgeObjectRelease();
        uint64_t v85 = (uint64_t)v133;
        v87 = (void (*)(char *, uint64_t, uint64_t))v135;
        ((void (*)(char *, char *, uint64_t))v135)(v133, v66, v27);
        uint64_t v81 = 0;
        uint64_t v82 = v141;
        uint64_t v83 = v139;
        v84 = v124;
        v86 = v134;
LABEL_43:
        uint64_t v88 = v138;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v138 + 56))(v85, v81, 1, v27);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v85, 1, v27) == 1)
        {
          sub_24E563530(v85, &qword_2698F1360);
          goto LABEL_50;
        }
        v87(v86, v85, v27);
        sub_24E8613B8();
        if (v89)
        {
          id v90 = objc_allocWithZone(MEMORY[0x263EFF8F8]);
          v91 = (void *)sub_24E863C68();
          swift_bridgeObjectRelease();
          id v92 = objc_msgSend(v90, sel_initWithBase64EncodedString_options_, v91, 0);

          if (v92)
          {
            v147[0] = 0;
            id v143 = v92;
            id v93 = objc_msgSend(v92, sel_decompressedDataUsingAlgorithm_error_, 3, v147);
            id v94 = v147[0];
            if (v93)
            {
              uint64_t v95 = sub_24E861578();
              unint64_t v97 = v96;

              sub_24E8612E8();
              swift_allocObject();
              sub_24E8612D8();
              sub_24E561B8C(&qword_2698F1380, (void (*)(uint64_t))type metadata accessor for MessagePayload.ContentV0);
              v98 = v132;
              sub_24E8612C8();
              sub_24E561BD4(v95, v97);
              swift_release();

              (*((void (**)(uint64_t, void *))v29 + 1))(v139, v84);
              uint64_t v119 = (uint64_t)v98;
              uint64_t v120 = v145;
              v121 = *v144;
              (*v144)(v86, v145);
              v121(v137, v120);
              (*(void (**)(char *, uint64_t))(v129 + 8))(v127, v128);
              sub_24E561C2C(v119, v82);
              uint64_t v122 = type metadata accessor for MessagePayload(0);
              return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v82, 0, 1, v122);
            }
            v106 = v94;
            v107 = (void *)sub_24E8614B8();

            swift_willThrow();
            id v108 = v107;
            id v109 = v107;
            v110 = sub_24E862148();
            os_log_type_t v111 = sub_24E864248();
            if (os_log_type_enabled(v110, v111))
            {
              v112 = (uint8_t *)swift_slowAlloc();
              v113 = (void *)swift_slowAlloc();
              *(_DWORD *)v112 = 138412290;
              id v114 = v107;
              v115 = (void *)_swift_stdlib_bridgeErrorToNSError();
              v147[0] = v115;
              sub_24E8643A8();
              void *v113 = v115;
              v86 = v134;
              v84 = v124;
              uint64_t v82 = v141;

              _os_log_impl(&dword_24E553000, v110, v111, "MessagePayload: Can't load from URL: %@", v112, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
              swift_arrayDestroy();
              MEMORY[0x2533435F0](v113, -1, -1);
              MEMORY[0x2533435F0](v112, -1, -1);
            }
            else
            {
            }
            uint64_t v116 = v139;

            (*((void (**)(uint64_t, void *))v29 + 1))(v116, v84);
          }
          else
          {
            v103 = sub_24E862148();
            os_log_type_t v104 = sub_24E864248();
            if (os_log_type_enabled(v103, v104))
            {
              v105 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v105 = 0;
              _os_log_impl(&dword_24E553000, v103, v104, "MessagePayload: Couldn't read zippedData", v105, 2u);
              MEMORY[0x2533435F0](v105, -1, -1);
            }

            (*((void (**)(uint64_t, void *))v29 + 1))(v139, v84);
          }
          uint64_t v117 = v145;
          v118 = *v144;
          (*v144)(v86, v145);
          v118(v137, v117);
        }
        else
        {
          (*v144)(v86, v27);
LABEL_50:
          v99 = sub_24E862148();
          os_log_type_t v100 = sub_24E864248();
          if (os_log_type_enabled(v99, v100))
          {
            v101 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v101 = 0;
            _os_log_impl(&dword_24E553000, v99, v100, "MessagePayload: Couldn't read zippedString", v101, 2u);
            v102 = v101;
            uint64_t v83 = v139;
            MEMORY[0x2533435F0](v102, -1, -1);
          }

          (*((void (**)(uint64_t, void *))v29 + 1))(v83, v84);
          (*v144)(v137, v145);
        }
        (*(void (**)(char *, uint64_t))(v129 + 8))(v127, v128);
        a2 = v82;
        goto LABEL_32;
      }
      uint64_t v27 = v145;
      (*v144)(v66, v145);
      ++v26;
      v57 += (unint64_t)v143;
      if (a1 == v125)
      {
        swift_bridgeObjectRelease();
        uint64_t v81 = 1;
        uint64_t v82 = v141;
        uint64_t v83 = v139;
        v84 = v124;
        uint64_t v85 = (uint64_t)v133;
        v86 = v134;
        v87 = (void (*)(char *, uint64_t, uint64_t))v135;
        goto LABEL_43;
      }
    }
    __break(1u);
LABEL_63:
    swift_once();
  }
LABEL_28:
  swift_bridgeObjectRelease();
  (*((void (**)(char *, uint64_t, void *))v29 + 2))(v55, a1, v4);
  v69 = sub_24E862148();
  os_log_type_t v70 = sub_24E864248();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = (uint8_t *)swift_slowAlloc();
    v72 = (void *)swift_slowAlloc();
    v147[0] = v72;
    *(_DWORD *)v71 = 136315138;
    sub_24E561B8C(&qword_2698F1370, MEMORY[0x263F06EA8]);
    uint64_t v73 = sub_24E864928();
    uint64_t v146 = sub_24E55B02C(v73, v74, (uint64_t *)v147);
    a2 = v141;
    sub_24E8643A8();
    swift_bridgeObjectRelease();
    v75 = (void (*)(char *, void *))*((void *)v29 + 1);
    v75(v55, v4);
    _os_log_impl(&dword_24E553000, v69, v70, "MessagePayload: Version not found - %s", v71, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v72, -1, -1);
    MEMORY[0x2533435F0](v71, -1, -1);

    v75((char *)v139, v4);
  }
  else
  {

    v76 = (void (*)(char *, void *))*((void *)v29 + 1);
    v76(v55, v4);
    v76((char *)a1, v4);
  }
  (*(void (**)(char *, uint64_t))(v129 + 8))(v127, v128);
LABEL_32:
  uint64_t v77 = type metadata accessor for MessagePayload(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(a2, 1, 1, v77);
}

uint64_t MessagePayload.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v62 = a1;
  v64[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v61 = type metadata accessor for MessagePayload(0);
  uint64_t v2 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v51 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F44A0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24E861468();
  uint64_t v60 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E861318();
  swift_allocObject();
  sub_24E861308();
  type metadata accessor for MessagePayload.ContentV0(0);
  sub_24E561B8C(&qword_2698F1388, (void (*)(uint64_t))type metadata accessor for MessagePayload.ContentV0);
  uint64_t v13 = sub_24E8612F8();
  unint64_t v27 = v26;
  unint64_t v58 = v6;
  uint64_t v59 = v9;
  unint64_t v57 = v1;
  uint64_t v54 = v4;
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  swift_release();
  uint64_t v30 = (void *)sub_24E861568();
  v64[0] = 0;
  id v31 = objc_msgSend(v30, sel_compressedDataUsingAlgorithm_error_, 3, v64);

  if (v31)
  {
    uint64_t v55 = v29;
    uint64_t v56 = v10;
    id v32 = v64[0];
    id v33 = objc_msgSend(v31, sel_base64EncodedStringWithOptions_, 0);
    sub_24E863CA8();

    os_log_type_t v34 = v28;
    sub_24E861458();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1390);
    sub_24E8613C8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_24E866380;
    sub_24E861398();
    sub_24E861398();
    swift_bridgeObjectRelease();
    sub_24E8613E8();
    uint64_t v35 = (uint64_t)v59;
    sub_24E861408();
    uint64_t v36 = sub_24E861558();
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
    {
      id v53 = v31;
      sub_24E563530(v35, (uint64_t *)&unk_2698F44A0);
      if (qword_2698F0E60 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_24E862168();
      __swift_project_value_buffer(v38, (uint64_t)qword_269906D88);
      uint64_t v39 = (uint64_t)v58;
      sub_24E5635E0((uint64_t)v57, (uint64_t)v58, type metadata accessor for MessagePayload);
      unint64_t v40 = sub_24E862148();
      os_log_type_t v41 = sub_24E864248();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        os_log_t v52 = v40;
        uint64_t v43 = (uint8_t *)v42;
        unint64_t v57 = (void *)swift_slowAlloc();
        v64[0] = v57;
        *(_DWORD *)uint64_t v43 = 136315138;
        unint64_t v51 = v43 + 4;
        uint64_t v59 = (char *)v27;
        sub_24E5635E0(v39, (uint64_t)v54, type metadata accessor for MessagePayload);
        uint64_t v44 = sub_24E863CC8();
        uint64_t v63 = sub_24E55B02C(v44, v45, (uint64_t *)v64);
        sub_24E8643A8();
        swift_bridgeObjectRelease();
        sub_24E563648(v39, type metadata accessor for MessagePayload);
        os_log_t v46 = v52;
        _os_log_impl(&dword_24E553000, v52, v41, "MessagePayload: Can't create URL: %s", v43, 0xCu);
        int v47 = v57;
        swift_arrayDestroy();
        MEMORY[0x2533435F0](v47, -1, -1);
        MEMORY[0x2533435F0](v43, -1, -1);
        sub_24E561BD4(v55, (unint64_t)v59);
      }
      else
      {
        sub_24E561BD4(v55, v27);

        sub_24E563648(v39, type metadata accessor for MessagePayload);
      }
      (*(void (**)(char *, uint64_t))(v60 + 8))(v34, v56);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v62, 1, 1, v36);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v60 + 8))(v34, v56);
      sub_24E561BD4(v55, v27);

      uint64_t v50 = v62;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v62, v35, v36);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v50, 0, 1, v36);
    }
  }
  else
  {
    id v48 = v64[0];
    uint64_t v49 = (void *)sub_24E8614B8();

    swift_willThrow();
    sub_24E561BD4(v29, v27);
    uint64_t v14 = v62;
    if (qword_2698F0E60 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_24E862168();
    __swift_project_value_buffer(v15, (uint64_t)qword_269906D88);
    id v16 = v49;
    id v17 = v49;
    uint64_t v18 = sub_24E862148();
    os_log_type_t v19 = sub_24E864248();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412290;
      id v22 = v49;
      uint64_t v23 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v64[0] = v23;
      sub_24E8643A8();
      *uint64_t v21 = v23;

      _os_log_impl(&dword_24E553000, v18, v19, "MessagePayload: Can't create URL: %@", v20, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
      swift_arrayDestroy();
      MEMORY[0x2533435F0](v21, -1, -1);
      MEMORY[0x2533435F0](v20, -1, -1);
    }
    else
    {
    }
    uint64_t v24 = sub_24E861558();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v14, 1, 1, v24);
  }
}

uint64_t type metadata accessor for MessagePayload(uint64_t a1)
{
  return sub_24E55C278(a1, (uint64_t *)&unk_2698F1398);
}

uint64_t sub_24E561B8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E561BD4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_24E561C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagePayload.ContentV0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for MessagePayload(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for MessagePayload.ContentV0(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    uint64_t v8 = *(int *)(v4 + 24);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24E8616F8();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(v6 + 28);
    uint64_t v17 = a1 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    long long v19 = *(_OWORD *)(v18 + 48);
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
    *(_OWORD *)(v17 + 48) = v19;
    *(_OWORD *)(v17 + 64) = *(_OWORD *)(v18 + 64);
    *(unsigned char *)(v17 + 80) = *(unsigned char *)(v18 + 80);
    long long v20 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v20;
    *(unsigned char *)(a1 + *(int *)(v6 + 32)) = *((unsigned char *)a2 + *(int *)(v6 + 32));
  }
  return a1;
}

uint64_t destroy for MessagePayload(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for MessagePayload.ContentV0(0) + 24);
  uint64_t v3 = sub_24E8616F8();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t initializeWithCopy for MessagePayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  int v5 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_24E8616F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = v5[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  long long v16 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(v14 + 48) = v16;
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(v15 + 64);
  *(unsigned char *)(v14 + 80) = *(unsigned char *)(v15 + 80);
  long long v17 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v17;
  *(unsigned char *)(a1 + v5[8]) = *(unsigned char *)(a2 + v5[8]);
  return a1;
}

uint64_t assignWithCopy for MessagePayload(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = sub_24E8616F8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v6, v7, v8);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v6, v7, v8);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
LABEL_7:
  uint64_t v14 = v4[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  long long v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  long long v18 = *(_OWORD *)(v16 + 32);
  long long v19 = *(_OWORD *)(v16 + 48);
  long long v20 = *(_OWORD *)(v16 + 64);
  *(unsigned char *)(v15 + 80) = *(unsigned char *)(v16 + 80);
  *(_OWORD *)(v15 + 48) = v19;
  *(_OWORD *)(v15 + 64) = v20;
  *(_OWORD *)(v15 + 32) = v18;
  *(unsigned char *)(a1 + v4[8]) = *(unsigned char *)(a2 + v4[8]);
  return a1;
}

uint64_t initializeWithTake for MessagePayload(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_24E8616F8();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  uint64_t v11 = v4[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v14;
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
  long long v15 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v15;
  *(unsigned char *)(a1 + v4[8]) = *(unsigned char *)(a2 + v4[8]);
  return a1;
}

uint64_t assignWithTake for MessagePayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v5 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_24E8616F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = v5[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  long long v18 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v18;
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
  *(unsigned char *)(v16 + 80) = *(unsigned char *)(v17 + 80);
  long long v19 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v19;
  *(unsigned char *)(a1 + v5[8]) = *(unsigned char *)(a2 + v5[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E5625EC);
}

uint64_t sub_24E5625EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagePayload.ContentV0(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MessagePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E56266C);
}

uint64_t sub_24E56266C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagePayload.ContentV0(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_24E5626DC()
{
  uint64_t result = type metadata accessor for MessagePayload.ContentV0(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MessagePayload.Version(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for MessagePayload.Version(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E562864);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E56288C()
{
  return 0;
}

ValueMetadata *type metadata accessor for MessagePayload.Version()
{
  return &type metadata for MessagePayload.Version;
}

void *sub_24E5628A4(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24E8616F8();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    long long v18 = (char *)v4 + v16;
    uint64_t v19 = (uint64_t)a2 + v16;
    long long v20 = *(_OWORD *)(v19 + 48);
    *((_OWORD *)v18 + 2) = *(_OWORD *)(v19 + 32);
    *((_OWORD *)v18 + 3) = v20;
    *((_OWORD *)v18 + 4) = *(_OWORD *)(v19 + 64);
    v18[80] = *(unsigned char *)(v19 + 80);
    long long v21 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)long long v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v21;
    *((unsigned char *)v4 + v17) = *((unsigned char *)a2 + v17);
  }
  return v4;
}

uint64_t sub_24E562A64(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_24E8616F8();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_24E562B34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_24E8616F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  long long v18 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v18;
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
  *(unsigned char *)(v16 + 80) = *(unsigned char *)(v17 + 80);
  long long v19 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v19;
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  return a1;
}

uint64_t sub_24E562CA4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_24E8616F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  long long v19 = *(_OWORD *)(v17 + 32);
  long long v20 = *(_OWORD *)(v17 + 48);
  long long v21 = *(_OWORD *)(v17 + 64);
  *(unsigned char *)(v16 + 80) = *(unsigned char *)(v17 + 80);
  *(_OWORD *)(v16 + 48) = v20;
  *(_OWORD *)(v16 + 64) = v21;
  *(_OWORD *)(v16 + 32) = v19;
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_24E562E84(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_24E8616F8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  long long v16 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(v14 + 48) = v16;
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(v15 + 64);
  *(unsigned char *)(v14 + 80) = *(unsigned char *)(v15 + 80);
  long long v17 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v17;
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

uint64_t sub_24E562FE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_24E8616F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  long long v20 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v20;
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(unsigned char *)(v18 + 80) = *(unsigned char *)(v19 + 80);
  long long v21 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v21;
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  return a1;
}

uint64_t sub_24E5631B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E5631C4);
}

uint64_t sub_24E5631C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24E563278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E56328C);
}

uint64_t sub_24E56328C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_24E563338()
{
  sub_24E55D9C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_24E5633F0()
{
  unint64_t result = qword_2698F13B8;
  if (!qword_2698F13B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F13B8);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_24E563488()
{
  unint64_t result = qword_2698F13C8;
  if (!qword_2698F13C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F13C8);
  }
  return result;
}

unint64_t sub_24E5634DC()
{
  unint64_t result = qword_2698F13D0;
  if (!qword_2698F13D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F13D0);
  }
  return result;
}

uint64_t sub_24E563530(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_24E56358C()
{
  unint64_t result = qword_2698F13E0;
  if (!qword_2698F13E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F13E0);
  }
  return result;
}

uint64_t sub_24E5635E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E563648(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_24E5636A8()
{
  unint64_t result = qword_2698F13F0;
  if (!qword_2698F13F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F13F0);
  }
  return result;
}

unint64_t sub_24E5636FC()
{
  unint64_t result = qword_2698F1400;
  if (!qword_2698F1400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1400);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ContentV0.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MessagePayload.ContentV0.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E5638ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_24E5638D4(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.CodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.CodingKeys;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ContentV0.Location(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ContentV0.Location(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 80) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Location()
{
  return &type metadata for MessagePayload.ContentV0.Location;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ContentV0.Kind(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 65282;
    if (a2 + 65282 <= 0xFFFEFFFF) {
      unsigned int v3 = 2;
    }
    else {
      unsigned int v3 = 4;
    }
    if (v2 < 0xFF0000) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x10000) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = *((unsigned __int8 *)a1 + 2);
        if (!*((unsigned char *)a1 + 2)) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65282;
      case 2:
        int v5 = a1[1];
        if (a1[1]) {
          return (*a1 | (v5 << 16)) - 65282;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24E563A44);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65282;
      default:
        break;
    }
  }
  unsigned int v7 = *((unsigned __int8 *)a1 + 1);
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ContentV0.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 65282;
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)__n128 result = a2 - 254;
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = v7;
        break;
      case 2:
        *(_WORD *)(result + 2) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x24E563B2CLL);
      case 4:
        *(_DWORD *)(result + 2) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *(unsigned char *)(result + 1) = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_24E563B54(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 1);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24E563B70(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)__n128 result = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 1) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind()
{
  return &type metadata for MessagePayload.ContentV0.Kind;
}

unint64_t sub_24E563BA8()
{
  unint64_t result = qword_2698F1408;
  if (!qword_2698F1408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1408);
  }
  return result;
}

unint64_t sub_24E563C00()
{
  unint64_t result = qword_2698F1410;
  if (!qword_2698F1410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1410);
  }
  return result;
}

unint64_t sub_24E563C58()
{
  unint64_t result = qword_2698F1418;
  if (!qword_2698F1418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1418);
  }
  return result;
}

uint64_t sub_24E563CAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72756F48656E6FLL && a2 == 0xE700000000000000;
  if (v2 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x796144664F646E65 && a2 == 0xE800000000000000 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696E696665646E69 && a2 == 0xEC000000796C6574 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x636974617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24E864988();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

char *sub_24E563E78(void *a1)
{
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F14F8);
  uint64_t v45 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v44 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1500);
  uint64_t v42 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1508);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388]();
  char v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1510);
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388]();
  unsigned int v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1518);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388]();
  int v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  os_log_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_24E565DF4();
  uint64_t v15 = v47;
  sub_24E864AB8();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v35 = v7;
  uint64_t v36 = v9;
  uint64_t v16 = v43;
  uint64_t v17 = v44;
  uint64_t v47 = 0;
  uint64_t v18 = v45;
  uint64_t v19 = v11;
  long long v20 = v13;
  uint64_t v21 = sub_24E864838();
  id v22 = (char *)v21;
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v25 = sub_24E864548();
    swift_allocError();
    int v13 = v22;
    uint64_t v26 = v10;
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1440);
    void *v28 = &type metadata for MessagePayload.ContentV0.Kind.ShareDuration;
    sub_24E8647C8();
    sub_24E864538();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v26);
LABEL_7:
    uint64_t v29 = (uint64_t)v46;
    goto LABEL_8;
  }
  int v13 = (char *)*(unsigned __int8 *)(v21 + 32);
  switch(*(unsigned char *)(v21 + 32))
  {
    case 1:
      char v49 = 1;
      sub_24E565EF0();
      uint64_t v31 = v47;
      sub_24E8647B8();
      if (v31) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
      goto LABEL_14;
    case 2:
      char v50 = 2;
      sub_24E565E9C();
      uint64_t v32 = v47;
      sub_24E8647B8();
      if (v32) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v40);
      goto LABEL_14;
    case 3:
      char v51 = 3;
      sub_24E565E48();
      uint64_t v33 = v47;
      sub_24E8647B8();
      if (v33) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
    default:
      char v48 = 0;
      sub_24E565F44();
      uint64_t v23 = v36;
      uint64_t v24 = v47;
      sub_24E8647B8();
      if (v24)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v35);
LABEL_14:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
  }
LABEL_8:
  __swift_destroy_boxed_opaque_existential_0(v29);
  return v13;
}

uint64_t sub_24E5644B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6572616873 && a2 == 0xE500000000000000;
  if (v2 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24E864988();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24E56459C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65526D6F72467369 && a2 == 0xED00007473657571)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24E864988();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24E5646B4(void *a1)
{
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1420);
  uint64_t v29 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1428);
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  char v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1430);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v30 = a1;
  uint64_t v12 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v11);
  sub_24E565504();
  uint64_t v13 = v31;
  sub_24E864AB8();
  if (!v13)
  {
    uint64_t v14 = v29;
    uint64_t v31 = v8;
    uint64_t v15 = sub_24E864838();
    if (*(void *)(v15 + 16) == 1)
    {
      if (*(unsigned char *)(v15 + 32))
      {
        char v36 = 1;
        sub_24E565558();
        sub_24E8647B8();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v27);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v7);
        uint64_t v12 = 512;
      }
      else
      {
        char v35 = 0;
        sub_24E5655AC();
        uint64_t v19 = v6;
        sub_24E8647B8();
        char v33 = 0;
        sub_24E565600();
        uint64_t v20 = v4;
        sub_24E864828();
        id v22 = v19;
        unsigned int v23 = v34;
        char v32 = 1;
        char v24 = sub_24E864808();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v20);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v7);
        if (v24) {
          int v25 = 256;
        }
        else {
          int v25 = 0;
        }
        uint64_t v12 = v25 | v23;
      }
    }
    else
    {
      uint64_t v16 = sub_24E864548();
      swift_allocError();
      uint64_t v18 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1440);
      void *v18 = &type metadata for MessagePayload.ContentV0.Kind;
      uint64_t v12 = (uint64_t)v10;
      sub_24E8647C8();
      sub_24E864538();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v7);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  return v12;
}

uint64_t sub_24E564B7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xE800000000000000 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024E8725C0 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024E8725E0 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x657372756F63 && a2 == 0xE600000000000000 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6341657372756F63 && a2 == 0xEE00796361727563 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6465657073 && a2 == 0xE500000000000000 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6363416465657073 && a2 == 0xED00007963617275 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_24E864988();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_24E564FA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1460);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24E565654();
  sub_24E864AB8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v42 = 0;
  sub_24E864818();
  uint64_t v10 = v9;
  char v41 = 1;
  sub_24E864818();
  uint64_t v12 = v11;
  char v40 = 2;
  sub_24E864818();
  uint64_t v14 = v13;
  char v39 = 3;
  sub_24E864818();
  uint64_t v16 = v15;
  char v38 = 4;
  sub_24E864818();
  uint64_t v18 = v17;
  char v37 = 5;
  sub_24E864818();
  uint64_t v20 = v19;
  char v36 = 6;
  sub_24E864818();
  uint64_t v22 = v21;
  char v35 = 7;
  sub_24E864818();
  uint64_t v32 = v23;
  char v34 = 8;
  sub_24E864818();
  uint64_t v25 = v24;
  char v33 = 9;
  sub_24E864818();
  uint64_t v31 = v26;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v14;
  a2[3] = v16;
  a2[4] = v18;
  a2[5] = v20;
  uint64_t v28 = v32;
  a2[6] = v22;
  a2[7] = v28;
  uint64_t v29 = v31;
  a2[8] = v25;
  a2[9] = v29;
  return result;
}

uint64_t sub_24E5652C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C6C616974696E69 && a2 == 0xEF6E6F697461636FLL || (sub_24E864988() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65526D6F72467369 && a2 == 0xEC000000646E6573)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24E864988();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_24E565504()
{
  unint64_t result = qword_2698F1438;
  if (!qword_2698F1438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1438);
  }
  return result;
}

unint64_t sub_24E565558()
{
  unint64_t result = qword_2698F1448;
  if (!qword_2698F1448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1448);
  }
  return result;
}

unint64_t sub_24E5655AC()
{
  unint64_t result = qword_2698F1450;
  if (!qword_2698F1450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1450);
  }
  return result;
}

unint64_t sub_24E565600()
{
  unint64_t result = qword_2698F1458;
  if (!qword_2698F1458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1458);
  }
  return result;
}

unint64_t sub_24E565654()
{
  unint64_t result = qword_2698F1468;
  if (!qword_2698F1468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1468);
  }
  return result;
}

unint64_t sub_24E5656A8()
{
  unint64_t result = qword_2698F1488;
  if (!qword_2698F1488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1488);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ContentV0.Location.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MessagePayload.ContentV0.Location.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E565858);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Location.CodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Location.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.CodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.CodingKeys;
}

unsigned char *_s12FindMyUICore14MessagePayloadV9ContentV0V4KindO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E565974);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareCodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.RequestCodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.RequestCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareDuration()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareDuration;
}

unint64_t sub_24E5659D8()
{
  unint64_t result = qword_2698F1498;
  if (!qword_2698F1498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1498);
  }
  return result;
}

unint64_t sub_24E565A30()
{
  unint64_t result = qword_2698F14A0;
  if (!qword_2698F14A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F14A0);
  }
  return result;
}

unint64_t sub_24E565A88()
{
  unint64_t result = qword_2698F14A8;
  if (!qword_2698F14A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F14A8);
  }
  return result;
}

unint64_t sub_24E565AE0()
{
  unint64_t result = qword_2698F14B0;
  if (!qword_2698F14B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F14B0);
  }
  return result;
}

unint64_t sub_24E565B38()
{
  unint64_t result = qword_2698F14B8;
  if (!qword_2698F14B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F14B8);
  }
  return result;
}

unint64_t sub_24E565B90()
{
  unint64_t result = qword_2698F14C0;
  if (!qword_2698F14C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F14C0);
  }
  return result;
}

unint64_t sub_24E565BE8()
{
  unint64_t result = qword_2698F14C8;
  if (!qword_2698F14C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F14C8);
  }
  return result;
}

unint64_t sub_24E565C40()
{
  unint64_t result = qword_2698F14D0;
  if (!qword_2698F14D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F14D0);
  }
  return result;
}

unint64_t sub_24E565C98()
{
  unint64_t result = qword_2698F14D8;
  if (!qword_2698F14D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F14D8);
  }
  return result;
}

unint64_t sub_24E565CF0()
{
  unint64_t result = qword_2698F14E0;
  if (!qword_2698F14E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F14E0);
  }
  return result;
}

unint64_t sub_24E565D48()
{
  unint64_t result = qword_2698F14E8;
  if (!qword_2698F14E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F14E8);
  }
  return result;
}

unint64_t sub_24E565DA0()
{
  unint64_t result = qword_2698F14F0;
  if (!qword_2698F14F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F14F0);
  }
  return result;
}

unint64_t sub_24E565DF4()
{
  unint64_t result = qword_2698F1520;
  if (!qword_2698F1520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1520);
  }
  return result;
}

unint64_t sub_24E565E48()
{
  unint64_t result = qword_2698F1528;
  if (!qword_2698F1528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1528);
  }
  return result;
}

unint64_t sub_24E565E9C()
{
  unint64_t result = qword_2698F1530;
  if (!qword_2698F1530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1530);
  }
  return result;
}

unint64_t sub_24E565EF0()
{
  unint64_t result = qword_2698F1538;
  if (!qword_2698F1538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1538);
  }
  return result;
}

unint64_t sub_24E565F44()
{
  unint64_t result = qword_2698F1540;
  if (!qword_2698F1540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1540);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RequestReceivedMessageView.RequestState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12FindMyUICore14MessagePayloadV9ContentV0V4KindO13ShareDurationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E5660F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareDuration.CodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareDuration.OneHourCodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.OneHourCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareDuration.EndOfDayCodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.EndOfDayCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareDuration.IndefinitelyCodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.IndefinitelyCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareDuration.StaticCodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.StaticCodingKeys;
}

unint64_t sub_24E566170()
{
  unint64_t result = qword_2698F1570;
  if (!qword_2698F1570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1570);
  }
  return result;
}

unint64_t sub_24E5661C8()
{
  unint64_t result = qword_2698F1578;
  if (!qword_2698F1578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1578);
  }
  return result;
}

unint64_t sub_24E566220()
{
  unint64_t result = qword_2698F1580;
  if (!qword_2698F1580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1580);
  }
  return result;
}

unint64_t sub_24E566278()
{
  unint64_t result = qword_2698F1588;
  if (!qword_2698F1588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1588);
  }
  return result;
}

unint64_t sub_24E5662D0()
{
  unint64_t result = qword_2698F1590;
  if (!qword_2698F1590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1590);
  }
  return result;
}

unint64_t sub_24E566328()
{
  unint64_t result = qword_2698F1598;
  if (!qword_2698F1598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1598);
  }
  return result;
}

unint64_t sub_24E566380()
{
  unint64_t result = qword_2698F15A0;
  if (!qword_2698F15A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F15A0);
  }
  return result;
}

unint64_t sub_24E5663D8()
{
  unint64_t result = qword_2698F15A8;
  if (!qword_2698F15A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F15A8);
  }
  return result;
}

unint64_t sub_24E566430()
{
  unint64_t result = qword_2698F15B0;
  if (!qword_2698F15B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F15B0);
  }
  return result;
}

unint64_t sub_24E566488()
{
  unint64_t result = qword_2698F15B8;
  if (!qword_2698F15B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F15B8);
  }
  return result;
}

unint64_t sub_24E5664E0()
{
  unint64_t result = qword_2698F15C0;
  if (!qword_2698F15C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F15C0);
  }
  return result;
}

MSMessage __swiftcall MessagePayload.createMSMessage()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F44A0);
  MEMORY[0x270FA5388](v2 - 8);
  unsigned int v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F12598]), sel_init);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F125B0]), sel_init);
  unsigned int v7 = *(unsigned __int16 *)(v0 + 16);
  if ((v7 & 0xFF00) == 0x200)
  {
    uint64_t v8 = 0;
    LOWORD(v9) = 2;
  }
  else
  {
    uint64_t v8 = *(_WORD *)(v0 + 16);
    int v9 = (v7 >> 8) & 1 | ((*(unsigned char *)(v1 + *(int *)(type metadata accessor for MessagePayload.ContentV0(0) + 32)) & 1) << 8);
  }
  uint64_t v20 = v8;
  __int16 v21 = v9;
  sub_24E55AA74();
  uint64_t v10 = (void *)sub_24E863C68();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setCaption_, v10);

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F125A0]), sel_initWithAlternateLayout_, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F8030);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24E865A70;
  if (qword_2698F0E58 != -1) {
    swift_once();
  }
  uint64_t v13 = unk_269906D80;
  *(void *)(v12 + 32) = qword_269906D78;
  *(void *)(v12 + 40) = v13;
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_24E863E28();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setRequiredCapabilities_, v14);

  objc_msgSend(v5, sel_setLayout_, v11);
  id v15 = objc_msgSend(v6, sel_caption);
  objc_msgSend(v5, sel_setSummaryText_, v15);

  MessagePayload.url.getter((uint64_t)v4);
  uint64_t v16 = sub_24E861558();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v4, 1, v16) != 1)
  {
    uint64_t v18 = (void *)sub_24E861518();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v16);
  }
  objc_msgSend(v5, sel_setURL_, v18);

  objc_msgSend(v5, sel_setRequiresValidation_, 1);
  return (MSMessage)v5;
}

id sub_24E566858(uint64_t a1, uint64_t a2, unint64_t a3)
{
  MyUICoreE04findC20LocationShareMessage8durationAbC0G8DurationO_tFZ_0 = (void *)_sSo9MSMessageC12FindMyUICoreE04findC20LocationShareMessage8durationAbC0G8DurationO_tFZ_0(a3);

  return MyUICoreE04findC20LocationShareMessage8durationAbC0G8DurationO_tFZ_0;
}

Class sub_24E566888()
{
  Class MyUICoreE04findC22LocationRequestMessageAByFZ_0 = _sSo9MSMessageC12FindMyUICoreE04findC22LocationRequestMessageAByFZ_0();

  return MyUICoreE04findC22LocationRequestMessageAByFZ_0;
}

uint64_t MessagePayload.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F15C8);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F44A0);
  MEMORY[0x270FA5388](v7 - 8);
  int v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24E861558();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v26 - v15;
  id v17 = objc_msgSend(a1, sel_URL);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_6;
  }
  uint64_t v18 = v17;
  sub_24E861528();

  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v9, v14, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_6:

    uint64_t v22 = (uint64_t *)&unk_2698F44A0;
    uint64_t v23 = (uint64_t)v9;
    goto LABEL_7;
  }
  v19(v16, v9, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  MessagePayload.init(from:)((uint64_t)v14, (uint64_t)v6);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  uint64_t v20 = type metadata accessor for MessagePayload(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v20) != 1)
  {
    sub_24E56702C((uint64_t)v6, a2);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(a2, 0, 1, v20);
  }
  uint64_t v22 = &qword_2698F15C8;
  uint64_t v23 = (uint64_t)v6;
LABEL_7:
  sub_24E563530(v23, v22);
  uint64_t v24 = type metadata accessor for MessagePayload(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a2, 1, 1, v24);
}

uint64_t _sSo9MSMessageC12FindMyUICoreE04findC20LocationShareMessage8durationAbC0G8DurationO_tFZ_0(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24E861758();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MessagePayload(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E861748();
  uint64_t v12 = sub_24E861708();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = sub_24E8616F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  if (a1 >= 4)
  {
    v20[1] = a1;
    uint64_t result = sub_24E8649B8();
    __break(1u);
  }
  else
  {
    *(void *)uint64_t v11 = v12;
    *((void *)v11 + 1) = v14;
    *((_WORD *)v11 + 8) = a1;
    uint64_t v16 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
    sub_24E55A3F4((uint64_t)v4, (uint64_t)&v11[v16[6]]);
    id v17 = &v11[v16[7]];
    *((_OWORD *)v17 + 3) = 0u;
    *((_OWORD *)v17 + 4) = 0u;
    *((_OWORD *)v17 + 1) = 0u;
    *((_OWORD *)v17 + 2) = 0u;
    *(_OWORD *)id v17 = 0u;
    v17[80] = 1;
    v11[v16[8]] = 0;
    Class isa = MessagePayload.createMSMessage()().super.isa;
    sub_24E567090((uint64_t)v11);
    return (uint64_t)isa;
  }
  return result;
}

Class _sSo9MSMessageC12FindMyUICoreE04findC22LocationRequestMessageAByFZ_0()
{
  uint64_t v0 = sub_24E861758();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MessagePayload(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E861748();
  uint64_t v7 = sub_24E861708();
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v10 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
  uint64_t v11 = &v6[v10[6]];
  uint64_t v12 = sub_24E8616F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)uint64_t v6 = v7;
  *((void *)v6 + 1) = v9;
  *((_WORD *)v6 + 8) = 512;
  uint64_t v13 = &v6[v10[7]];
  *((_OWORD *)v13 + 3) = 0u;
  *((_OWORD *)v13 + 4) = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  *(_OWORD *)uint64_t v13 = 0u;
  v13[80] = 1;
  v6[v10[8]] = 0;
  Class isa = MessagePayload.createMSMessage()().super.isa;
  sub_24E567090((uint64_t)v6);
  return isa;
}

uint64_t sub_24E56702C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagePayload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E567090(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessagePayload(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MessagesAppView.init(viewModel:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

__n128 MessagesAppView.body.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F15D0);
  sub_24E863728();
  swift_release();
  __n128 result = v5;
  *(void *)a1 = sub_24E567274;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 0;
  *(__n128 *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_24E5671DC(uint64_t a1)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v2 = *(void *)(a1 + 16);
  swift_retain();
  swift_release();
  return v2;
}

uint64_t sub_24E567274()
{
  return sub_24E5671DC(v0);
}

uint64_t sub_24E567284()
{
  return sub_24E863308();
}

uint64_t sub_24E5672A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x2533436E0](v3 + 24);
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

void sub_24E567368(void **a1)
{
  uint64_t v1 = *a1;
  sub_24E863FB8();
  id v2 = v1;
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  swift_release();
}

uint64_t sub_24E567434()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  uint64_t v1 = MEMORY[0x2533436E0](v0 + 24);
  swift_release();
  return v1;
}

void sub_24E5674EC(void *a1)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  swift_release();
}

void (*sub_24E5675B0(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  sub_24E863FB8();
  v3[5] = sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  v3[3] = MEMORY[0x2533436E0](v1 + 24);
  return sub_24E567694;
}

void sub_24E567694(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }
  swift_release();

  free(v3);
}

uint64_t MessagesAppViewModel.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (qword_2698F0E78 != -1) {
    swift_once();
  }
  type metadata accessor for CompositeAppViewModel();
  swift_allocObject();
  uint64_t v1 = swift_retain();
  *(void *)(v0 + 16) = sub_24E63CC7C(v1, 0xD000000000000013, 0x800000024E872630, 0, 0, 0, 0, 0, 0);
  return v0;
}

uint64_t MessagesAppViewModel.init()()
{
  swift_unknownObjectWeakInit();
  if (qword_2698F0E78 != -1) {
    swift_once();
  }
  type metadata accessor for CompositeAppViewModel();
  swift_allocObject();
  uint64_t v1 = swift_retain();
  *(void *)(v0 + 16) = sub_24E63CC7C(v1, 0xD000000000000013, 0x800000024E872630, 0, 0, 0, 0, 0, 0);
  return v0;
}

uint64_t MessagesAppViewModel.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24E862168();
  __swift_project_value_buffer(v5, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v6 = sub_24E862148();
  os_log_type_t v7 = sub_24E864238();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v16 = v1;
    uint64_t v17 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    type metadata accessor for MessagesAppViewModel();
    swift_retain();
    uint64_t v10 = sub_24E863CC8();
    uint64_t v16 = sub_24E55B02C(v10, v11, &v17);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v16 = sub_24E55B02C(0x74696E696564, 0xE600000000000000, &v17);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v6, v7, "MessagesAppViewModel: %s - %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v9, -1, -1);
    MEMORY[0x2533435F0](v8, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v12 = sub_24E863FE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
  uint64_t v13 = *(void *)(v1 + 16);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v13;
  swift_retain();
  sub_24E567CDC((uint64_t)v4, (uint64_t)&unk_2698F15E0, (uint64_t)v14);
  swift_release();
  sub_24E569A98((uint64_t)v4);
  swift_release();
  swift_unknownObjectWeakDestroy();
  return v1;
}

uint64_t sub_24E567BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_24E567BE4, 0, 0);
}

uint64_t sub_24E567BE4()
{
  sub_24E863FB8();
  *(void *)(v0 + 24) = sub_24E863FA8();
  uint64_t v2 = sub_24E863F18();
  return MEMORY[0x270FA2498](sub_24E567C78, v2, v1);
}

uint64_t sub_24E567C78()
{
  swift_release();
  sub_24E638170();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E567CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E56A108(a1, (uint64_t)v8);
  uint64_t v9 = sub_24E863FE8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24E569A98((uint64_t)v8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_24E863F18();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_24E863FD8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t MessagesAppViewModel.__deallocating_deinit()
{
  MessagesAppViewModel.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_24E567EF4(uint64_t a1)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E862168();
  __swift_project_value_buffer(v2, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v3 = sub_24E862148();
  os_log_type_t v4 = sub_24E864268();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = v10;
    *(_DWORD *)uint64_t v5 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    type metadata accessor for MessagesAppViewModel();
    swift_retain();
    uint64_t v6 = sub_24E863CC8();
    unint64_t v8 = v7;
    swift_release();
    sub_24E55B02C(v6, v8, &v11);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24E55B02C(0xD000000000000019, 0x800000024E872650, &v11);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v3, v4, "MessagesAppViewModel: %s - %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v10, -1, -1);
    MEMORY[0x2533435F0](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  sub_24E6385B8(a1);
  return swift_release();
}

uint64_t sub_24E568230()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24E862168();
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864268();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v3 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    type metadata accessor for MessagesAppViewModel();
    swift_retain();
    uint64_t v4 = sub_24E863CC8();
    unint64_t v6 = v5;
    swift_release();
    sub_24E55B02C(v4, v6, &v9);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24E55B02C(0xD000000000000014, 0x800000024E872670, &v9);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v1, v2, "MessagesAppViewModel: %s - %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  sub_24E638DB4();
  return swift_release();
}

uint64_t sub_24E568564()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24E862168();
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864268();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v3 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    type metadata accessor for MessagesAppViewModel();
    swift_retain();
    uint64_t v4 = sub_24E863CC8();
    unint64_t v6 = v5;
    swift_release();
    sub_24E55B02C(v4, v6, &v9);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24E55B02C(0xD000000000000015, 0x800000024E872690, &v9);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v1, v2, "MessagesAppViewModel: %s - %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  sub_24E639204();
  return swift_release();
}

uint64_t sub_24E568898()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24E862168();
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864268();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v3 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    type metadata accessor for MessagesAppViewModel();
    swift_retain();
    uint64_t v4 = sub_24E863CC8();
    unint64_t v6 = v5;
    swift_release();
    sub_24E55B02C(v4, v6, &v9);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24E55B02C(0xD000000000000013, 0x800000024E8726B0, &v9);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v1, v2, "MessagesAppViewModel: %s - %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  sub_24E638170();
  return swift_release();
}

uint64_t sub_24E568BCC(uint64_t a1, uint64_t a2)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v5 = *(void *)(v2 + 16);
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  unint64_t v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler);
  uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler);
  uint64_t *v6 = a1;
  v6[1] = a2;
  sub_24E569B1C(a1);
  sub_24E569B2C(v7);
  swift_release();

  return swift_release();
}

uint64_t sub_24E568D04(uint64_t a1, uint64_t a2)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v5 = *(void *)(v2 + 16);
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  unint64_t v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendStaticLocationMessageHandler);
  uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendStaticLocationMessageHandler);
  uint64_t *v6 = a1;
  v6[1] = a2;
  sub_24E569B1C(a1);
  sub_24E569B2C(v7);
  swift_release();

  return swift_release();
}

uint64_t sub_24E568E3C(uint64_t a1, uint64_t a2)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v5 = *(void *)(v2 + 16);
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  unint64_t v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectStopSharingHandler);
  uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectStopSharingHandler);
  uint64_t *v6 = a1;
  v6[1] = a2;
  sub_24E569B1C(a1);
  sub_24E569B2C(v7);
  swift_release();

  return swift_release();
}

uint64_t sub_24E568F74(uint64_t a1, uint64_t a2)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v5 = *(void *)(v2 + 16);
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  unint64_t v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_dismiss);
  uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_dismiss);
  uint64_t *v6 = a1;
  v6[1] = a2;
  sub_24E569B1C(a1);
  sub_24E569B2C(v7);
  swift_release();

  return swift_release();
}

uint64_t sub_24E5690AC(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  sub_24E863FB8();
  v2[5] = sub_24E863FA8();
  uint64_t v4 = sub_24E863F18();
  v2[6] = v4;
  v2[7] = v3;
  return MEMORY[0x270FA2498](sub_24E569144, v4, v3);
}

uint64_t sub_24E569144()
{
  swift_weakInit();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_2698F3B48 + dword_2698F3B48);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E5691FC;
  uint64_t v2 = *(void *)(v0 + 24);
  return v4(v2);
}

uint64_t sub_24E5691FC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  uint64_t v5 = *v3;
  *(unsigned char *)(v5 + 88) = a1;
  *(void *)(v5 + 72) = a2;
  *(void *)(v5 + 80) = a3;
  swift_task_dealloc();
  swift_weakDestroy();
  uint64_t v6 = *(void *)(v4 + 56);
  uint64_t v7 = *(void *)(v4 + 48);
  return MEMORY[0x270FA2498](sub_24E56933C, v7, v6);
}

uint64_t sub_24E56933C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 88);
  return v1(v4, v2, v3);
}

uint64_t sub_24E5693A4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_24E863FB8();
  v2[4] = sub_24E863FA8();
  uint64_t v4 = sub_24E863F18();
  v2[5] = v4;
  v2[6] = v3;
  return MEMORY[0x270FA2498](sub_24E56943C, v4, v3);
}

uint64_t sub_24E56943C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E5694D8;
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_24E646168(v2);
}

uint64_t sub_24E5694D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_24E569678;
  }
  else {
    uint64_t v5 = sub_24E569614;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24E569614()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E569678()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E5696DC@<X0>(char *a1@<X8>, CLLocationDegrees a2@<D0>, CLLocationDegrees a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  *(double *)uint64_t v15 = a4;
  *(double *)&v15[1] = a5;
  *(double *)&v15[2] = a6;
  *(double *)&v15[3] = a7;
  char v16 = 0;
  sub_24E6467EC((uint64_t)v15, a1, a2, a3);
  return swift_release();
}

uint64_t sub_24E5697E0()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24E639A8C();

  return swift_release();
}

uint64_t sub_24E569880@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MessagesAppViewModel();
  uint64_t result = sub_24E862198();
  *a1 = result;
  return result;
}

uint64_t sub_24E5698BC()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24E5698FC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24E5699A4;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_24E567BE4, 0, 0);
}

uint64_t sub_24E5699A4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E569A98(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for MessagesAppViewModel()
{
  return self;
}

uint64_t sub_24E569B1C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24E569B2C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24E569B3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24E569B58()
{
  return MEMORY[0x263EFDDD8];
}

ValueMetadata *type metadata accessor for MessagesAppView()
{
  return &type metadata for MessagesAppView;
}

uint64_t method lookup function for MessagesAppViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MessagesAppViewModel);
}

uint64_t dispatch thunk of MessagesAppViewModel.presenter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of MessagesAppViewModel.presenter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of MessagesAppViewModel.presenter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MessagesAppViewModel.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of MessagesAppViewModel.startSubscriptions(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MessagesAppViewModel.pauseSubscriptions()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MessagesAppViewModel.resumeSubscriptions()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MessagesAppViewModel.stopSubscriptions()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of MessagesAppViewModel.setDidSelectSendLocationMessageHandler(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of MessagesAppViewModel.setDidSelectSendStaticLocationMessageHandler(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of MessagesAppViewModel.setDidSelectStopSharingHandler(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of MessagesAppViewModel.setDismiss(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of MessagesAppViewModel.validateAndInitiate(message:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 192) + **(int **)(*(void *)v1 + 192));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E569E38;
  return v6(a1);
}

uint64_t sub_24E569E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *v3;
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  return v7(a1, a2, a3);
}

uint64_t dispatch thunk of MessagesAppViewModel.createMapsURLForThisDeviceCurrentLocation()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 200) + **(int **)(*(void *)v1 + 200));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E5699A4;
  return v6(a1);
}

uint64_t dispatch thunk of MessagesAppViewModel.createMapsURL(for:region:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of MessagesAppViewModel.willTransition(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

unint64_t sub_24E56A0B4()
{
  unint64_t result = qword_2698F1608;
  if (!qword_2698F1608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1608);
  }
  return result;
}

uint64_t sub_24E56A108(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E56A170()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24E56A1A8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E56A260;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2698F3080 + dword_2698F3080);
  return v6(a1, v4);
}

uint64_t Friend.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Friend() + 20);
  uint64_t v4 = sub_24E861248();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for Friend()
{
  uint64_t result = qword_2698F1638;
  if (!qword_2698F1638) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Friend.init(prettyName:mainHandle:allHandles:contact:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12 = sub_24E861378();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v21[0] = a1;
    v21[1] = a2;
    sub_24E861368();
    sub_24E56A4B4();
    a1 = sub_24E8643D8();
    a2 = v16;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_bridgeObjectRelease();
  }
  *a6 = a1;
  a6[1] = a2;
  uint64_t v17 = (int *)type metadata accessor for Friend();
  uint64_t v18 = (char *)a6 + v17[5];
  uint64_t v19 = sub_24E861248();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a3, v19);
  *(uint64_t *)((char *)a6 + v17[6]) = a4;
  *(uint64_t *)((char *)a6 + v17[7]) = a5;
  return result;
}

unint64_t sub_24E56A4B4()
{
  unint64_t result = qword_2698F1628;
  if (!qword_2698F1628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1628);
  }
  return result;
}

BOOL sub_24E56A508(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_24E861248();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Friend();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2 + *(int *)(v7 + 20), v3);
  sub_24E56C004(&qword_2698F1648);
  LOBYTE(a2) = sub_24E863C18();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (a2 & 1) == 0;
}

uint64_t sub_24E56A648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_24E861248();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

id sub_24E56A6B8()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA20]), sel_init);
  id result = objc_msgSend(v0, sel_setStyle_, 1001);
  qword_2698F1620 = (uint64_t)v0;
  return result;
}

uint64_t Friend.init(contact:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24E861248();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v21 - v15;
  sub_24E56A9F8();
  if (*(void *)(v17 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v16, v17 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v16, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  sub_24E555DE0((uint64_t)v16, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
  {

    sub_24E56AE9C((uint64_t)v16);
    sub_24E56AE9C((uint64_t)v14);
    uint64_t v18 = type metadata accessor for Friend();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v14, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    Friend.init(mainHandle:contact:)((uint64_t)v8, (uint64_t)a1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    sub_24E56AE9C((uint64_t)v16);
    uint64_t v20 = type metadata accessor for Friend();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 0, 1, v20);
  }
}

void sub_24E56A9F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24E861248();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  uint64_t v45 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v1, sel_emailAddresses);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1668);
  unint64_t v8 = sub_24E863E38();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_24E864728();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  id v42 = v1;
  uint64_t v43 = v5;
  uint64_t v41 = v7;
  if (v9)
  {
    if (v9 < 1)
    {
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v11 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v12 = (id)MEMORY[0x253342540](v11, v8);
      }
      else {
        id v12 = *(id *)(v8 + 8 * v11 + 32);
      }
      uint64_t v13 = v12;
      id v14 = objc_msgSend(v12, sel_value, v41);
      uint64_t v15 = sub_24E863CA8();
      uint64_t v17 = v16;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_24E575560(0, v10[2] + 1, 1, v10);
      }
      unint64_t v19 = v10[2];
      unint64_t v18 = v10[3];
      if (v19 >= v18 >> 1) {
        uint64_t v10 = sub_24E575560((void *)(v18 > 1), v19 + 1, 1, v10);
      }
      ++v11;
      v10[2] = v19 + 1;
      uint64_t v20 = &v10[2 * v19];
      v20[4] = v15;
      v20[5] = v17;
    }
    while (v9 != v11);
  }
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v42, sel_phoneNumbers);
  unint64_t v22 = sub_24E863E38();

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_24E864728();
    swift_bridgeObjectRelease();
    uint64_t v24 = v43;
    if (v23)
    {
LABEL_16:
      if (v23 >= 1)
      {
        for (uint64_t i = 0; i != v23; ++i)
        {
          if ((v22 & 0xC000000000000001) != 0) {
            id v27 = (id)MEMORY[0x253342540](i, v22);
          }
          else {
            id v27 = *(id *)(v22 + 8 * i + 32);
          }
          uint64_t v28 = v27;
          id v29 = objc_msgSend(v27, sel_value, v41);
          id v30 = objc_msgSend(v29, sel_unformattedInternationalStringValue);

          if (v30)
          {
            uint64_t v31 = sub_24E863CA8();
            uint64_t v33 = v32;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v10 = sub_24E575560(0, v10[2] + 1, 1, v10);
            }
            unint64_t v35 = v10[2];
            unint64_t v34 = v10[3];
            if (v35 >= v34 >> 1) {
              uint64_t v10 = sub_24E575560((void *)(v34 > 1), v35 + 1, 1, v10);
            }
            v10[2] = v35 + 1;
            uint64_t v26 = &v10[2 * v35];
            v26[4] = v31;
            v26[5] = v33;
            uint64_t v24 = v43;
          }
        }
        goto LABEL_30;
      }
LABEL_38:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v24 = v43;
    if (v23) {
      goto LABEL_16;
    }
  }
LABEL_30:
  swift_bridgeObjectRelease();
  int64_t v36 = v10[2];
  if (v36)
  {
    uint64_t v46 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_24E575F20(0, v36, 0);
    uint64_t v37 = v46;
    char v38 = v10 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_24E861228();
      uint64_t v46 = v37;
      unint64_t v40 = *(void *)(v37 + 16);
      unint64_t v39 = *(void *)(v37 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_24E575F20(v39 > 1, v40 + 1, 1);
        uint64_t v37 = v46;
      }
      v38 += 2;
      *(void *)(v37 + 16) = v40 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v37+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v40, v24, v44);
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_24E56AE9C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Friend.init(mainHandle:contact:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v5 = sub_24E861378();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = (int *)type metadata accessor for Friend();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_24E861248();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2698F0DF8 != -1) {
    swift_once();
  }
  uint64_t v31 = a2;
  id v15 = objc_msgSend((id)qword_2698F1620, sel_stringFromContact_, a2);
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_24E863CA8();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
  }
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v30 = a1;
  v20(v14, a1, v11);
  sub_24E56A9F8();
  uint64_t v22 = v21;
  if (v19)
  {
    uint64_t v32 = v17;
    uint64_t v33 = v19;
    sub_24E861368();
    sub_24E56A4B4();
    uint64_t v17 = sub_24E8643D8();
    uint64_t v24 = v23;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = 0;
  }
  *uint64_t v10 = v17;
  v10[1] = v24;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))((char *)v10 + v8[5], v14, v11);
  *(uint64_t *)((char *)v10 + v8[6]) = v22;
  *(uint64_t *)((char *)v10 + v8[7]) = v31;
  sub_24E55A390((uint64_t)v10, v29);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v30, v11);
}

uint64_t Friend.init(mainHandle:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24E861248();
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_24E861228();
  id v9 = sub_24E56B530(a1, a2);
  swift_bridgeObjectRelease();
  return Friend.init(mainHandle:contact:)((uint64_t)v8, (uint64_t)v9, a3);
}

id sub_24E56B2A0(char a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEAF0]), sel_init);
  if (a1)
  {
    sub_24E863CA8();
    uint64_t v3 = (void *)sub_24E863C68();
    id v4 = objc_allocWithZone(MEMORY[0x263EFEAD0]);
    uint64_t v5 = (void *)sub_24E863C68();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v4, sel_initWithLabel_value_, v5, v3);

    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1650);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_24E867070;
    *(void *)(v7 + 32) = v6;
    sub_24E863E58();
    id v8 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1668);
    id v9 = (void *)sub_24E863E28();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setEmailAddresses_, v9);
  }
  else
  {
    id v10 = objc_allocWithZone(MEMORY[0x263EFEB28]);
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)sub_24E863C68();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, sel_initWithStringValue_, v11);

    sub_24E863CA8();
    id v13 = objc_allocWithZone(MEMORY[0x263EFEAD0]);
    id v14 = v12;
    id v15 = (void *)sub_24E863C68();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v13, sel_initWithLabel_value_, v15, v14);

    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1650);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_24E867070;
    *(void *)(v17 + 32) = v16;
    sub_24E863E58();
    id v8 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1668);
    id v9 = (void *)sub_24E863E28();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setPhoneNumbers_, v9);
  }
  return v2;
}

id sub_24E56B530(void *a1, void *a2)
{
  v29[2] = *(id *)MEMORY[0x263EF8340];
  v29[0] = a1;
  v29[1] = a2;
  sub_24E56A4B4();
  char v2 = sub_24E864408();
  if (objc_msgSend(self, sel_authorizationStatusForEntityType_, 0) != (id)3) {
    return sub_24E56B2A0(v2 & 1);
  }
  uint64_t v3 = self;
  if (v2)
  {
    id v4 = (id)sub_24E863C68();
    uint64_t v5 = &selRef_predicateForContactsMatchingEmailAddress_;
  }
  else
  {
    id v7 = objc_allocWithZone(MEMORY[0x263EFEB28]);
    swift_bridgeObjectRetain();
    id v8 = (void *)sub_24E863C68();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(v7, sel_initWithStringValue_, v8);

    uint64_t v5 = &selRef_predicateForContactsMatchingPhoneNumber_;
  }
  id v9 = objc_msgSend(v3, *v5, v4);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1650);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24E867080;
  uint64_t v11 = (void *)*MEMORY[0x263EFDFE0];
  id v12 = (void *)*MEMORY[0x263EFDF80];
  *(void *)(v10 + 32) = *MEMORY[0x263EFDFE0];
  *(void *)(v10 + 40) = v12;
  id v13 = (void *)*MEMORY[0x263EFE070];
  *(void *)(v10 + 48) = *MEMORY[0x263EFE070];
  id v14 = self;
  id v15 = v11;
  id v16 = v12;
  id v17 = v13;
  *(void *)(v10 + 56) = objc_msgSend(v14, sel_descriptorForRequiredKeysForStyle_, 1001);
  sub_24E863E58();
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA58]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1658);
  uint64_t v19 = (void *)sub_24E863E28();
  swift_bridgeObjectRelease();
  v29[0] = 0;
  id v20 = objc_msgSend(v18, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v9, v19, v29);

  id v21 = v29[0];
  if (!v20)
  {
    id v25 = v29[0];
    uint64_t v26 = (void *)sub_24E8614B8();

    swift_willThrow();
LABEL_16:
    id v6 = sub_24E56B2A0(v2 & 1);

    return v6;
  }
  sub_24E56C048();
  unint64_t v22 = sub_24E863E38();
  id v23 = v21;

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_24E864728();
    swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_9;
    }
    goto LABEL_15;
  }
  if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
LABEL_9:
  if ((v22 & 0xC000000000000001) != 0)
  {
    id v24 = (id)MEMORY[0x253342540](0, v22);
  }
  else
  {
    if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v24 = *(id *)(v22 + 32);
  }
  id v6 = v24;

  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_24E56B8CC()
{
  return sub_24E56C004((unint64_t *)&unk_2698F2F90);
}

uint64_t *initializeBufferWithCopyOfBuffer for Friend(uint64_t *a1, uint64_t *a2, int *a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *id v4 = *a2;
    id v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24E861248();
    id v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    id v14 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)v4 + v13) = (uint64_t)v14;
    swift_bridgeObjectRetain();
    id v15 = v14;
  }
  return v4;
}

void destroy for Friend(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24E861248();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + *(int *)(a2 + 28));
}

void *initializeWithCopy for Friend(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24E861248();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v13 = *(void **)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = v13;
  swift_bridgeObjectRetain();
  id v14 = v13;
  return a1;
}

void *assignWithCopy for Friend(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24E861248();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = v11;
  id v13 = v11;

  return a1;
}

_OWORD *initializeWithTake for Friend(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24E861248();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void *assignWithTake for Friend(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24E861248();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = *(void **)((char *)a1 + v11);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);

  return a1;
}

uint64_t getEnumTagSinglePayload for Friend(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E56BDB8);
}

uint64_t sub_24E56BDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E861248();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Friend(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E56BE90);
}

uint64_t sub_24E56BE90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24E861248();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24E56BF50()
{
  uint64_t result = sub_24E861248();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24E56C004(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24E861248();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24E56C048()
{
  unint64_t result = qword_2698F1660;
  if (!qword_2698F1660)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2698F1660);
  }
  return result;
}

uint64_t sub_24E56C088@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

id sub_24E56C0E0(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
  uint64_t v5 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v5[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v4;
  v14.receiver = v5;
  v14.super_class = ObjectType;
  uint64_t v6 = (char *)objc_msgSendSuper2(&v14, sel_init);
  uint64_t v7 = *(void *)&v6[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  uint64_t v8 = a1;

  uint64_t v9 = *(void *)&v8[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] | v7;
  uint64_t v10 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v10[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v9;
  v13.receiver = v10;
  v13.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v13, sel_init);

  return v11;
}

id sub_24E56C1A0(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
  uint64_t v5 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v5[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v4;
  v14.receiver = v5;
  v14.super_class = ObjectType;
  uint64_t v6 = (char *)objc_msgSendSuper2(&v14, sel_init);
  uint64_t v7 = *(void *)&v6[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  uint64_t v8 = a1;

  uint64_t v9 = *(void *)&v8[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] ^ v7;
  uint64_t v10 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v10[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v9;
  v13.receiver = v10;
  v13.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v13, sel_init);

  return v11;
}

BOOL sub_24E56C260(char **a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = (char *)*v2;
  uint64_t v6 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  uint64_t v7 = *(void *)((char *)*v2 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
  uint64_t v8 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  *(void *)&v9[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v7;
  v23.receiver = v9;
  v23.super_class = v8;
  uint64_t v10 = v5;
  id v11 = (char *)objc_msgSendSuper2(&v23, sel_init);
  uint64_t v12 = *(void *)&v11[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  uint64_t v13 = *(void *)&a2[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  objc_super v14 = (char *)objc_allocWithZone(v8);
  *(void *)&v14[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v13 & v12;
  v22.receiver = v14;
  v22.super_class = v8;
  id v15 = (char *)objc_msgSendSuper2(&v22, sel_init);

  char v16 = sub_24E864348();
  if ((v16 & 1) == 0)
  {

    uint64_t v17 = *(void *)&v5[v6];
    id v15 = a2;

    id v18 = (char *)objc_allocWithZone(v8);
    *(void *)&v18[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v17 | v13;
    v21.receiver = v18;
    v21.super_class = v8;
    *uint64_t v3 = objc_msgSendSuper2(&v21, sel_init);
  }
  *a1 = v15;
  return (v16 & 1) == 0;
}

id sub_24E56C398(char *a1)
{
  uint64_t v3 = (char *)*v1;
  uint64_t v4 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  uint64_t v5 = *(void *)((char *)*v1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
  uint64_t v6 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v5;
  v37.receiver = v7;
  v37.super_class = v6;
  uint64_t v8 = v3;
  uint64_t v9 = (char *)objc_msgSendSuper2(&v37, sel_init);
  uint64_t v10 = *(void *)&v9[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  uint64_t v11 = *(void *)&a1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  uint64_t v12 = (char *)objc_allocWithZone(v6);
  *(void *)&v12[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v11 & v10;
  v36.receiver = v12;
  v36.super_class = v6;
  id v13 = objc_msgSendSuper2(&v36, sel_init);

  objc_super v14 = (char *)objc_allocWithZone(v6);
  *(void *)&v14[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 0;
  v35.receiver = v14;
  v35.super_class = v6;
  id v15 = objc_msgSendSuper2(&v35, sel_init);
  char v16 = sub_24E864348();

  if (v16)
  {

    return 0;
  }
  else
  {
    uint64_t v17 = *(void *)&v3[v4];
    id v18 = (char *)objc_allocWithZone(v6);
    *(void *)&v18[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v17;
    v34.receiver = v18;
    v34.super_class = v6;
    uint64_t v19 = v8;
    id v20 = a1;
    objc_super v21 = (char *)objc_msgSendSuper2(&v34, sel_init);
    uint64_t v22 = *(void *)&v21[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
    objc_super v23 = v20;

    id v24 = (char *)objc_allocWithZone(v6);
    *(void *)&v24[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v22 ^ v11;
    v33.receiver = v24;
    v33.super_class = v6;
    id v25 = objc_msgSendSuper2(&v33, sel_init);

    uint64_t v26 = *(void *)&v3[v4];
    uint64_t v27 = *(void *)((unsigned char *)v25 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue) & v26;
    uint64_t v28 = (char *)objc_allocWithZone(v6);
    *(void *)&v28[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v27;
    v32.receiver = v28;
    v32.super_class = v6;
    id v29 = objc_msgSendSuper2(&v32, sel_init);

    *uint64_t v31 = v29;
  }
  return v13;
}

id sub_24E56C584(char *a1)
{
  uint64_t v3 = (char *)*v1;
  uint64_t v4 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  uint64_t v5 = *(void *)((char *)*v1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
  uint64_t v6 = type metadata accessor for LocationDetailViewController.ViewOptions();
  uint64_t v7 = (char *)objc_allocWithZone((Class)v6);
  *(void *)&v7[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v5;
  v24.receiver = v7;
  v24.super_class = (Class)v6;
  uint64_t v8 = v3;
  uint64_t v9 = (char *)objc_msgSendSuper2(&v24, sel_init);
  uint64_t v10 = *(void *)&v9[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  uint64_t v11 = *(void *)&a1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  uint64_t v12 = (char *)objc_allocWithZone((Class)v6);
  *(void *)&v12[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v11 & v10;
  v23.receiver = v12;
  v23.super_class = (Class)v6;
  id v13 = objc_msgSendSuper2(&v23, sel_init);

  uint64_t v14 = *(void *)&v3[v4];
  id v15 = a1;

  char v16 = (char *)objc_allocWithZone((Class)v6);
  *(void *)&v16[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v14 | v11;
  v22.receiver = v16;
  v22.super_class = (Class)v6;
  id v17 = objc_msgSendSuper2(&v22, sel_init);

  *uint64_t v1 = v17;
  id v18 = (char *)objc_allocWithZone((Class)v6);
  *(void *)&v18[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 0;
  v21.receiver = v18;
  v21.super_class = (Class)v6;
  id v19 = objc_msgSendSuper2(&v21, sel_init);
  LOBYTE(v6) = sub_24E864348();

  if (v6)
  {

    return 0;
  }
  return v13;
}

id sub_24E56C6DC(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = *(void *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  uint64_t v5 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v5[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v4;
  v24.receiver = v5;
  v24.super_class = ObjectType;
  uint64_t v6 = v1;
  id v7 = a1;
  uint64_t v8 = (char *)objc_msgSendSuper2(&v24, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  uint64_t v10 = (char *)v7;

  uint64_t v11 = *(void *)&v10[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] ^ v9;
  uint64_t v12 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v12[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v11;
  v23.receiver = v12;
  v23.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v23, sel_init);

  uint64_t v14 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v14[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v4;
  v22.receiver = v14;
  v22.super_class = ObjectType;
  id v15 = (char *)objc_msgSendSuper2(&v22, sel_init);
  uint64_t v16 = *(void *)&v15[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  uint64_t v17 = *(void *)((unsigned char *)v13 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue) & v16;
  id v18 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v18[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v17;
  v21.receiver = v18;
  v21.super_class = ObjectType;
  id v19 = objc_msgSendSuper2(&v21, sel_init);

  return v19;
}

uint64_t sub_24E56C828(uint64_t a1)
{
  char v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = *(void *)&v2[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  uint64_t v6 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v6[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v5;
  v15.receiver = v6;
  v15.super_class = ObjectType;
  id v7 = v2;
  uint64_t v8 = (char *)objc_msgSendSuper2(&v15, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  uint64_t v10 = *(void *)(a1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue) & v9;
  uint64_t v11 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v11[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v10;
  v14.receiver = v11;
  v14.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v14, sel_init);

  LOBYTE(v7) = sub_24E864348();
  return v7 & 1;
}

uint64_t sub_24E56C900(uint64_t a1)
{
  char v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void *)&v2[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  uint64_t v6 = (char *)objc_allocWithZone((Class)ObjectType);
  *(void *)&v6[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v5;
  v18.receiver = v6;
  v18.super_class = (Class)ObjectType;
  id v7 = v2;
  uint64_t v8 = (char *)objc_msgSendSuper2(&v18, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  uint64_t v10 = *(void *)(a1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue) & v9;
  uint64_t v11 = (char *)objc_allocWithZone((Class)ObjectType);
  *(void *)&v11[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v10;
  v17.receiver = v11;
  v17.super_class = (Class)ObjectType;
  id v12 = objc_msgSendSuper2(&v17, sel_init);

  id v13 = (char *)objc_allocWithZone((Class)ObjectType);
  *(void *)&v13[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 0;
  v16.receiver = v13;
  v16.super_class = (Class)ObjectType;
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  LOBYTE(ObjectType) = sub_24E864348();

  return ObjectType & 1;
}

uint64_t sub_24E56CA00(char *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void *)&a1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  uint64_t v6 = (char *)objc_allocWithZone((Class)ObjectType);
  *(void *)&v6[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v5;
  v15.receiver = v6;
  v15.super_class = (Class)ObjectType;
  id v7 = a1;
  uint64_t v8 = (char *)objc_msgSendSuper2(&v15, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  uint64_t v10 = *(void *)(v2 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue) & v9;
  uint64_t v11 = (char *)objc_allocWithZone((Class)ObjectType);
  *(void *)&v11[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v10;
  v14.receiver = v11;
  v14.super_class = (Class)ObjectType;
  id v12 = objc_msgSendSuper2(&v14, sel_init);

  LOBYTE(ObjectType) = sub_24E864348();
  return ObjectType & 1;
}

void sub_24E56CAD8(void *a1)
{
  uint64_t v3 = (char *)*v1;
  uint64_t v4 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  uint64_t v5 = *(void *)((char *)*v1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
  uint64_t v6 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  id v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v5;
  v22.receiver = v7;
  v22.super_class = v6;
  uint64_t v8 = v3;
  id v9 = a1;
  uint64_t v10 = (char *)objc_msgSendSuper2(&v22, sel_init);
  uint64_t v11 = *(void *)&v10[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  id v12 = (char *)v9;

  uint64_t v13 = *(void *)&v12[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] ^ v11;
  objc_super v14 = (char *)objc_allocWithZone(v6);
  *(void *)&v14[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v13;
  v21.receiver = v14;
  v21.super_class = v6;
  id v15 = objc_msgSendSuper2(&v21, sel_init);

  uint64_t v16 = *(void *)&v3[v4];
  uint64_t v17 = *(void *)((unsigned char *)v15 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue) & v16;
  objc_super v18 = (char *)objc_allocWithZone(v6);
  *(void *)&v18[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v17;
  v20.receiver = v18;
  v20.super_class = v6;
  id v19 = objc_msgSendSuper2(&v20, sel_init);

  *uint64_t v1 = v19;
}

id LocationDetailViewController.ViewOptions.__allocating_init(rawValue:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id LocationDetailViewController.ViewOptions.init(rawValue:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_24E56CCF0()
{
  id v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 1;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_2698F1670 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.showLocationDetails.getter()
{
  return sub_24E56D958(&qword_2698F0E00, (void **)&qword_2698F1670);
}

id sub_24E56CD94()
{
  id v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 2;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_2698F1678 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.showShareLocationButton.getter()
{
  return sub_24E56D958(&qword_2698F0E08, (void **)&qword_2698F1678);
}

id sub_24E56CE38()
{
  id v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 4;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_2698F1680 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.showRequestLocationButton.getter()
{
  return sub_24E56D958(&qword_2698F0E10, (void **)&qword_2698F1680);
}

id sub_24E56CEDC()
{
  id v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 8;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_2698F1688 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.showLocateButtons.getter()
{
  return sub_24E56D958(&qword_2698F0E18, (void **)&qword_2698F1688);
}

id sub_24E56CF80()
{
  id v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 16;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_2698F1690 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.presentFullScreenWhenTapped.getter()
{
  return sub_24E56D958(&qword_2698F0E20, (void **)&qword_2698F1690);
}

id sub_24E56D024()
{
  id v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 32;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_2698F1698 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.punchOutToFindMyWhenTapped.getter()
{
  return sub_24E56D958(&qword_2698F0E28, (void **)&qword_2698F1698);
}

id sub_24E56D0C8()
{
  id v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 64;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_2698F16A0 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.useCompactInterface.getter()
{
  return sub_24E56D958(&qword_2698F0E30, (void **)&qword_2698F16A0);
}

void sub_24E56D16C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1650);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24E867100;
  if (qword_2698F0E00 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_2698F1670;
  *(void *)(inited + 32) = qword_2698F1670;
  uint64_t v2 = qword_2698F0E28;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_2698F1698;
  *(void *)(inited + 40) = qword_2698F1698;
  uint64_t v5 = qword_2698F0E30;
  id v52 = v4;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_2698F16A0;
  *(void *)(inited + 48) = qword_2698F16A0;
  id v7 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  *(void *)&v8[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 0;
  v63.receiver = v8;
  v63.super_class = v7;
  id v53 = v6;
  id v9 = (char *)objc_msgSendSuper2(&v63, sel_init);
  uint64_t v10 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  uint64_t v11 = *(void *)&v9[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  id v12 = (char *)objc_allocWithZone(v7);
  *(void *)&v12[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v11;
  v62.receiver = v12;
  v62.super_class = v7;
  uint64_t v13 = (char *)v3;
  objc_super v14 = v9;
  id v15 = (char *)objc_msgSendSuper2(&v62, sel_init);
  uint64_t v16 = *(void *)&v15[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  uint64_t v17 = *(void *)&v13[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  objc_super v18 = (char *)objc_allocWithZone(v7);
  *(void *)&v18[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v17 & v16;
  v61.receiver = v18;
  v61.super_class = v7;
  id v19 = objc_msgSendSuper2(&v61, sel_init);

  char v20 = sub_24E864348();
  if ((v20 & 1) == 0)
  {
    uint64_t v21 = *(void *)&v9[v10];
    objc_super v22 = v13;

    objc_super v23 = (char *)objc_allocWithZone(v7);
    *(void *)&v23[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v21 | v17;
    v60.receiver = v23;
    v60.super_class = v7;
    objc_super v14 = (char *)objc_msgSendSuper2(&v60, sel_init);
  }
  uint64_t v24 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  uint64_t v25 = *(void *)&v14[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  uint64_t v26 = (char *)objc_allocWithZone(v7);
  *(void *)&v26[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v25;
  v59.receiver = v26;
  v59.super_class = v7;
  uint64_t v27 = (char *)v52;
  uint64_t v28 = v14;
  id v29 = (char *)objc_msgSendSuper2(&v59, sel_init);
  uint64_t v30 = *(void *)&v29[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  uint64_t v31 = *(void *)&v27[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  objc_super v32 = (char *)objc_allocWithZone(v7);
  *(void *)&v32[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v31 & v30;
  v58.receiver = v32;
  v58.super_class = v7;
  id v33 = objc_msgSendSuper2(&v58, sel_init);

  char v34 = sub_24E864348();
  if ((v34 & 1) == 0)
  {
    uint64_t v35 = *(void *)&v14[v24];
    objc_super v36 = v27;

    objc_super v37 = (char *)objc_allocWithZone(v7);
    *(void *)&v37[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v35 | v31;
    v57.receiver = v37;
    v57.super_class = v7;
    uint64_t v28 = (char *)objc_msgSendSuper2(&v57, sel_init);
  }
  uint64_t v38 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  uint64_t v39 = *(void *)&v28[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  unint64_t v40 = (char *)objc_allocWithZone(v7);
  *(void *)&v40[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v39;
  v56.receiver = v40;
  v56.super_class = v7;
  uint64_t v41 = (char *)v53;
  id v42 = v28;
  uint64_t v43 = (char *)objc_msgSendSuper2(&v56, sel_init);
  uint64_t v44 = *(void *)&v43[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  uint64_t v45 = *(void *)&v41[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  uint64_t v46 = (char *)objc_allocWithZone(v7);
  *(void *)&v46[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v45 & v44;
  v55.receiver = v46;
  v55.super_class = v7;
  id v47 = objc_msgSendSuper2(&v55, sel_init);

  char v48 = sub_24E864348();
  if ((v48 & 1) == 0)
  {
    uint64_t v49 = *(void *)&v28[v38];
    char v50 = v41;

    char v51 = (char *)objc_allocWithZone(v7);
    *(void *)&v51[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v49 | v45;
    v54.receiver = v51;
    v54.super_class = v7;
    id v42 = (char *)objc_msgSendSuper2(&v54, sel_init);
  }
  swift_release();

  qword_2698F16A8 = (uint64_t)v42;
}

id static LocationDetailViewController.ViewOptions.spotlightWidget.getter()
{
  return sub_24E56D958(&qword_2698F0E38, (void **)&qword_2698F16A8);
}

uint64_t sub_24E56D5B4(uint64_t a1)
{
  return sub_24E56D614(a1, &qword_2698F16B0);
}

id static LocationDetailViewController.ViewOptions.messagesChatDetails.getter()
{
  return sub_24E56D958(&qword_2698F0E40, (void **)&qword_2698F16B0);
}

uint64_t sub_24E56D608(uint64_t a1)
{
  return sub_24E56D614(a1, (char **)&qword_2698F16B8);
}

uint64_t sub_24E56D614(uint64_t a1, char **a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1650);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24E867110;
  if (qword_2698F0E00 != -1) {
    swift_once();
  }
  id v3 = (void *)qword_2698F1670;
  *(void *)(inited + 32) = qword_2698F1670;
  uint64_t v4 = qword_2698F0E08;
  id v5 = v3;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_2698F1678;
  *(void *)(inited + 40) = qword_2698F1678;
  uint64_t v7 = qword_2698F0E10;
  id v8 = v6;
  if (v7 != -1) {
    swift_once();
  }
  id v9 = (void *)qword_2698F1680;
  *(void *)(inited + 48) = qword_2698F1680;
  uint64_t v10 = qword_2698F0E18;
  id v11 = v9;
  if (v10 != -1) {
    swift_once();
  }
  id v12 = (void *)qword_2698F1688;
  *(void *)(inited + 56) = qword_2698F1688;
  uint64_t v13 = qword_2698F0E20;
  id v14 = v12;
  if (v13 != -1) {
    swift_once();
  }
  id v15 = (void *)qword_2698F1690;
  *(void *)(inited + 64) = qword_2698F1690;
  uint64_t v45 = inited;
  sub_24E863E58();
  uint64_t v16 = inited;
  uint64_t v17 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  objc_super v18 = (char *)objc_allocWithZone(v17);
  *(void *)&v18[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 0;
  v44.receiver = v18;
  v44.super_class = v17;
  id v19 = v15;
  char v20 = (char *)objc_msgSendSuper2(&v44, sel_init);
  uint64_t v21 = 0;
  unint64_t v38 = v16 & 0xC000000000000001;
  uint64_t v39 = v16;
  do
  {
    if (v38) {
      objc_super v22 = (char *)MEMORY[0x253342540](v21, v39);
    }
    else {
      objc_super v22 = (char *)*(id *)(v39 + 8 * v21 + 32);
    }
    objc_super v23 = v22;
    uint64_t v24 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
    uint64_t v25 = *(void *)&v20[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
    uint64_t v26 = (char *)objc_allocWithZone(v17);
    *(void *)&v26[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v25;
    v43.receiver = v26;
    v43.super_class = v17;
    unint64_t v40 = v20;
    char v20 = v20;
    uint64_t v27 = (char *)objc_msgSendSuper2(&v43, sel_init);
    uint64_t v28 = *(void *)&v27[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

    uint64_t v29 = *(void *)&v23[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
    uint64_t v30 = (char *)objc_allocWithZone(v17);
    *(void *)&v30[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v29 & v28;
    v42.receiver = v30;
    v42.super_class = v17;
    id v31 = objc_msgSendSuper2(&v42, sel_init);

    char v32 = sub_24E864348();
    if ((v32 & 1) == 0)
    {
      uint64_t v33 = *(void *)&v40[v24];
      char v34 = v23;

      uint64_t v35 = (char *)objc_allocWithZone(v17);
      *(void *)&v35[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v33 | v29;
      v41.receiver = v35;
      v41.super_class = v17;
      char v20 = (char *)objc_msgSendSuper2(&v41, sel_init);
    }
    ++v21;
  }
  while (v21 != 5);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v20;
  return result;
}

id static LocationDetailViewController.ViewOptions.default.getter()
{
  return sub_24E56D958(&qword_2698F0E48, (void **)&qword_2698F16B8);
}

id sub_24E56D958(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  id v3 = *a2;

  return v3;
}

id sub_24E56D9C8(uint64_t a1, uint64_t a2, void *a3, void **a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  id v5 = *a4;

  return v5;
}

uint64_t LocationDetailViewController.ViewOptions.hash.getter()
{
  return *(void *)(v0 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
}

BOOL LocationDetailViewController.ViewOptions.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_24E576EA0(a1, (uint64_t)v7, &qword_2698F30C0);
  if (v8)
  {
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)(v1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
      uint64_t v4 = *(void *)&v6[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

      return v3 == v4;
    }
  }
  else
  {
    sub_24E563530((uint64_t)v7, &qword_2698F30C0);
  }
  return 0;
}

id LocationDetailViewController.ViewOptions.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void LocationDetailViewController.ViewOptions.init()()
{
}

id LocationDetailViewController.ViewOptions.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_24E56DC3C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  id v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v4;
  v7.receiver = v5;
  v7.super_class = v2;
  id result = objc_msgSendSuper2(&v7, sel_init);
  *a2 = result;
  return result;
}

id sub_24E56DC9C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 0;
  v5.receiver = v3;
  v5.super_class = v1;
  id result = objc_msgSendSuper2(&v5, sel_init);
  *a1 = result;
  return result;
}

void sub_24E56DCF0(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  objc_super v5 = *v2;
  id v6 = sub_24E56C0E0(*a1);

  *a2 = v6;
}

void sub_24E56DD38(Class a1@<X1>, uint64_t *a2@<X0>, void *a3@<X8>)
{
  uint64_t v6 = *a2;
  objc_super v7 = (char *)*v3;
  uint64_t v8 = *(void *)&v7[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  id v9 = (char *)objc_allocWithZone(a1);
  *(void *)&v9[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v8;
  v16.receiver = v9;
  v16.super_class = a1;
  uint64_t v10 = (char *)[(objc_class *)&v16 init];
  uint64_t v11 = *(void *)&v10[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  uint64_t v12 = *(void *)(v6 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue) & v11;
  uint64_t v13 = (char *)objc_allocWithZone(a1);
  *(void *)&v13[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v12;
  v15.receiver = v13;
  v15.super_class = a1;
  id v14 = [(objc_class *)&v15 init];

  *a3 = v14;
}

void sub_24E56DDF8(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  objc_super v5 = *v2;
  id v6 = sub_24E56C1A0(*a1);

  *a2 = v6;
}

BOOL sub_24E56DE40(char **a1, char **a2)
{
  objc_super v2 = *a2;
  BOOL v3 = sub_24E56C260(a1, *a2);

  return v3;
}

id sub_24E56DE74@<X0>(char **a1@<X0>, void *a2@<X8>)
{
  id result = sub_24E56C398(*a1);
  *a2 = result;
  return result;
}

void sub_24E56DEA0(char **a1@<X0>, void *a2@<X8>)
{
  BOOL v3 = *a1;
  id v4 = sub_24E56C584(*a1);

  *a2 = v4;
}

void sub_24E56DEE0(void **a1, objc_class *a2)
{
  id v4 = (char *)*a1;
  uint64_t v5 = *(void *)((char *)*v2 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);

  uint64_t v6 = *(void *)&v4[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] | v5;
  objc_super v7 = (char *)objc_allocWithZone(a2);
  *(void *)&v7[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v6;
  v9.receiver = v7;
  v9.super_class = a2;
  id v8 = objc_msgSendSuper2(&v9, sel_init);

  *objc_super v2 = v8;
}

id sub_24E56DF6C(uint64_t *a1, objc_class *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)((char *)*v2 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);

  uint64_t v6 = *(void *)(v4 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue) & v5;
  objc_super v7 = (char *)objc_allocWithZone(a2);
  *(void *)&v7[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v6;
  v9.receiver = v7;
  v9.super_class = a2;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *objc_super v2 = result;
  return result;
}

void sub_24E56DFF0(void **a1, objc_class *a2)
{
  uint64_t v4 = (char *)*a1;
  uint64_t v5 = *(void *)((char *)*v2 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);

  uint64_t v6 = *(void *)&v4[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] ^ v5;
  objc_super v7 = (char *)objc_allocWithZone(a2);
  *(void *)&v7[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v6;
  v9.receiver = v7;
  v9.super_class = a2;
  id v8 = objc_msgSendSuper2(&v9, sel_init);

  *objc_super v2 = v8;
}

void sub_24E56E07C(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  id v5 = sub_24E56C6DC(*a1);

  *a2 = v5;
}

uint64_t sub_24E56E0BC(uint64_t *a1)
{
  return sub_24E56C828(*a1) & 1;
}

uint64_t sub_24E56E0E8(uint64_t *a1)
{
  return sub_24E56C900(*a1) & 1;
}

uint64_t sub_24E56E114(char **a1)
{
  return sub_24E56CA00(*a1) & 1;
}

uint64_t sub_24E56E140(objc_class *a1)
{
  id v1 = a1;
  objc_super v2 = (char *)objc_allocWithZone(a1);
  *(void *)&v2[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 0;
  v5.receiver = v2;
  v5.super_class = v1;
  id v3 = [(objc_class *)&v5 init];
  LOBYTE(v1) = sub_24E864348();

  return v1 & 1;
}

uint64_t sub_24E56E1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, v5, a2, a5, a3);
}

void sub_24E56E1CC(void **a1)
{
}

void sub_24E56E1D4(void *a1@<X8>)
{
  *a1 = *(void *)(*v1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
}

uint64_t sub_24E56E1EC@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_24E576BB0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

id LocationDetailViewController.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24E862168();
  __swift_project_value_buffer(v5, (uint64_t)qword_269906D88);
  uint64_t v6 = v0;
  objc_super v7 = sub_24E862148();
  os_log_type_t v8 = sub_24E864268();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    objc_super v22 = v4;
    uint64_t v12 = v11;
    uint64_t v24 = (uint64_t)v6;
    uint64_t v25 = v11;
    *(_DWORD *)uint64_t v9 = 138412546;
    uint64_t v13 = v6;
    objc_super v23 = ObjectType;
    id v14 = v13;
    sub_24E8643A8();
    *uint64_t v10 = v6;

    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v24 = sub_24E55B02C(0x74696E696564, 0xE600000000000000, &v25);
    uint64_t ObjectType = v23;
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v7, v8, "LocationDetailViewController: %@ - %s", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v10, -1, -1);
    swift_arrayDestroy();
    uint64_t v15 = v12;
    uint64_t v4 = v22;
    MEMORY[0x2533435F0](v15, -1, -1);
    MEMORY[0x2533435F0](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v16 = sub_24E863FE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
  uint64_t v17 = *(void *)&v6[OBJC_IVAR___FMUILocationDetailViewController_viewModel];
  sub_24E863FB8();
  swift_retain();
  uint64_t v18 = sub_24E863FA8();
  id v19 = (void *)swift_allocObject();
  uint64_t v20 = MEMORY[0x263F8F500];
  v19[2] = v18;
  v19[3] = v20;
  v19[4] = v17;
  sub_24E567CDC((uint64_t)v4, (uint64_t)&unk_2698F16D8, (uint64_t)v19);
  swift_release();
  sub_24E563530((uint64_t)v4, (uint64_t *)&unk_2698F7FE0);
  v26.receiver = v6;
  v26.super_class = ObjectType;
  return objc_msgSendSuper2(&v26, sel_dealloc);
}

uint64_t sub_24E56E7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_24E863FB8();
  *(void *)(v4 + 24) = sub_24E863FA8();
  uint64_t v6 = sub_24E863F18();
  return MEMORY[0x270FA2498](sub_24E567C78, v6, v5);
}

void LocationDetailViewController.setViewOptions(_:)(void *a1)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24E862168();
  __swift_project_value_buffer(v3, (uint64_t)qword_269906D88);
  uint64_t v4 = v1;
  uint64_t v5 = sub_24E862148();
  os_log_type_t v6 = sub_24E864268();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = v12;
    *(_DWORD *)uint64_t v7 = 138412546;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v9 = v4;
    sub_24E8643A8();
    *uint64_t v8 = v4;

    *(_WORD *)(v7 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24E55B02C(0xD000000000000012, 0x800000024E8727A0, &v13);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v5, v6, "LocationDetailViewController: %@ - %s", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v12, -1, -1);
    MEMORY[0x2533435F0](v7, -1, -1);
  }
  else
  {
  }
  uint64_t v10 = *(void **)&v4[OBJC_IVAR___FMUILocationDetailViewController_viewOptions];
  *(void *)&v4[OBJC_IVAR___FMUILocationDetailViewController_viewOptions] = a1;
  id v11 = a1;
  swift_release();
}

Swift::Void __swiftcall LocationDetailViewController.set(remoteParticipantHandles:localParticipantHandle:)(Swift::OpaquePointer remoteParticipantHandles, Swift::String localParticipantHandle)
{
  object = localParticipantHandle._object;
  uint64_t countAndFlagsBits = localParticipantHandle._countAndFlagsBits;
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_24E862168();
  __swift_project_value_buffer(v6, (uint64_t)qword_269906D88);
  id v7 = v2;
  uint64_t v8 = sub_24E862148();
  os_log_type_t v9 = sub_24E864268();
  if (os_log_type_enabled(v8, v9))
  {
    rawValue = remoteParticipantHandles._rawValue;
    uint64_t v10 = swift_slowAlloc();
    id v11 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v16 = v14;
    *(_DWORD *)uint64_t v10 = 138412546;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    id v12 = v7;
    sub_24E8643A8();
    *id v11 = v7;

    *(_WORD *)(v10 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24E55B02C(0xD000000000000035, 0x800000024E8727C0, &v16);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v8, v9, "LocationDetailViewController: %@ - %s", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v14, -1, -1);
    MEMORY[0x2533435F0](v10, -1, -1);

    remoteParticipantHandles._rawValue = rawValue;
  }
  else
  {
  }
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  v13.value._uint64_t countAndFlagsBits = countAndFlagsBits;
  v13.value._object = object;
  LocationDetailViewController.startObserving(handles:from:groupName:)(remoteParticipantHandles, v13, (Swift::String_optional)0);
  swift_release();
  swift_release();
}

Swift::Void __swiftcall LocationDetailViewController.startObserving(handles:from:)(Swift::OpaquePointer handles, Swift::String_optional from)
{
  object = from.value._object;
  uint64_t countAndFlagsBits = from.value._countAndFlagsBits;
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  v5.value._uint64_t countAndFlagsBits = countAndFlagsBits;
  v5.value._object = object;
  LocationDetailViewController.startObserving(handles:from:groupName:)(handles, v5, (Swift::String_optional)0);

  swift_release();
}

Swift::Void __swiftcall LocationDetailViewController.startObserving(handles:from:groupName:)(Swift::OpaquePointer handles, Swift::String_optional from, Swift::String_optional groupName)
{
  Swift::String_optional v59 = groupName;
  object = from.value._object;
  v56[0] = from.value._countAndFlagsBits;
  uint64_t v64 = sub_24E861378();
  Swift::String_optional v5 = *(void (***)(char *, char *, uint64_t))(v64 - 8);
  MEMORY[0x270FA5388](v64);
  objc_super v63 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_24E861248();
  uint64_t v7 = *(void *)(v75 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v75);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  id v12 = (char *)v56 - v11;
  uint64_t v13 = type metadata accessor for Friend();
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v68 = (void *)((char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  uint64_t v74 = (uint64_t)v56 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
  MEMORY[0x270FA5388](v17 - 8);
  objc_super v57 = (char *)v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24E863FB8();
  v56[1] = sub_24E863FA8();
  uint64_t v71 = v19;
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_24E862168();
  __swift_project_value_buffer(v20, (uint64_t)qword_269906D88);
  id v21 = v3;
  objc_super v22 = sub_24E862148();
  os_log_type_t v23 = sub_24E864268();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v60 = v7;
  id v61 = v21;
  if (v24)
  {
    os_log_t v66 = v22;
    uint64_t v67 = v5;
    rawValue = handles._rawValue;
    uint64_t v73 = v12;
    uint64_t v25 = swift_slowAlloc();
    objc_super v26 = (void *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v76[0] = v27;
    *(_DWORD *)uint64_t v25 = 138412546;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    id v28 = v61;
    uint64_t v77 = (uint64_t)v61;
    id v29 = v61;
    sub_24E8643A8();
    void *v26 = v28;

    *(_WORD *)(v25 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v77 = sub_24E55B02C(0xD000000000000027, 0x800000024E872800, v76);
    sub_24E8643A8();
    os_log_t v30 = v66;
    _os_log_impl(&dword_24E553000, v66, v23, "LocationDetailViewController: %@ - %s", (uint8_t *)v25, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v26, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v27, -1, -1);
    MEMORY[0x2533435F0](v25, -1, -1);

    uint64_t v7 = v60;
    handles._rawValue = rawValue;
    id v12 = v73;
    Swift::String_optional v5 = v67;
  }
  else
  {
  }
  int64_t v31 = *((void *)handles._rawValue + 2);
  uint64_t v32 = MEMORY[0x263F8EE78];
  if (v31)
  {
    uint64_t v77 = MEMORY[0x263F8EE78];
    sub_24E575F5C(0, v31, 0);
    objc_super v62 = (void (**)(char *, uint64_t))(v5 + 1);
    os_log_t v66 = (os_log_t)(v7 + 32);
    uint64_t v67 = (void (**)(char *, char *, uint64_t))(v7 + 16);
    v65 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v33 = (void **)((char *)handles._rawValue + 40);
    do
    {
      uint64_t v73 = (char *)v31;
      uint64_t v35 = *(v33 - 1);
      char v34 = *v33;
      swift_bridgeObjectRetain();
      rawValue = (void *)sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_bridgeObjectRetain();
      sub_24E861228();
      id v36 = sub_24E56B530(v35, v34);
      if (qword_2698F0DF8 != -1) {
        swift_once();
      }
      id v37 = objc_msgSend((id)qword_2698F1620, sel_stringFromContact_, v36, v56[0]);
      if (v37)
      {
        unint64_t v38 = v37;
        uint64_t v39 = sub_24E863CA8();
        uint64_t v41 = v40;
      }
      else
      {
        uint64_t v39 = 0;
        uint64_t v41 = 0;
      }
      (*v67)(v10, v12, v75);
      sub_24E56A9F8();
      uint64_t v43 = v42;
      if (v41)
      {
        v76[0] = v39;
        v76[1] = v41;
        objc_super v44 = v12;
        uint64_t v45 = v10;
        uint64_t v46 = v63;
        sub_24E861368();
        sub_24E56A4B4();
        uint64_t v39 = sub_24E8643D8();
        uint64_t v41 = v47;
        char v48 = v46;
        uint64_t v10 = v45;
        id v12 = v44;
        (*v62)(v48, v64);
        swift_bridgeObjectRelease();
      }
      uint64_t v49 = (uint64_t)v68;
      *uint64_t v68 = v39;
      *(void *)(v49 + 8) = v41;
      uint64_t v50 = v70;
      uint64_t v51 = v75;
      ((void (*)(uint64_t, char *, uint64_t))v66->isa)(v49 + *(int *)(v70 + 20), v10, v75);
      *(void *)(v49 + *(int *)(v50 + 24)) = v43;
      *(void *)(v49 + *(int *)(v50 + 28)) = v36;
      sub_24E55A390(v49, v74);
      (*v65)(v12, v51);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v32 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24E575F5C(0, *(void *)(v32 + 16) + 1, 1);
        uint64_t v32 = v77;
      }
      unint64_t v53 = *(void *)(v32 + 16);
      unint64_t v52 = *(void *)(v32 + 24);
      if (v53 >= v52 >> 1)
      {
        sub_24E575F5C(v52 > 1, v53 + 1, 1);
        uint64_t v32 = v77;
      }
      v33 += 2;
      *(void *)(v32 + 16) = v53 + 1;
      sub_24E55A390(v74, v32+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v53);
      int64_t v31 = (int64_t)(v73 - 1);
    }
    while (v73 != (char *)1);
    uint64_t v7 = v60;
  }
  if (object)
  {
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_bridgeObjectRetain();
    uint64_t v54 = (uint64_t)v57;
    sub_24E861228();
    swift_release();
    uint64_t v55 = 0;
  }
  else
  {
    uint64_t v55 = 1;
    uint64_t v54 = (uint64_t)v57;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v54, v55, 1, v75);
  sub_24E56FD48(v32, v54, v59.value._countAndFlagsBits, (uint64_t)v59.value._object);
  swift_bridgeObjectRelease();
  sub_24E563530(v54, &qword_2698F1630);
  swift_release();
}

uint64_t sub_24E56FD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v25 = a2;
  uint64_t v7 = (int *)type metadata accessor for CompositeAppViewInitialInfo();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E863FB8();
  uint64_t v26 = sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_24E862168();
  __swift_project_value_buffer(v10, (uint64_t)qword_269906D88);
  uint64_t v11 = v4;
  id v12 = sub_24E862148();
  int v13 = sub_24E864268();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    HIDWORD(v20) = v13;
    uint64_t v22 = a4;
    uint64_t v23 = a1;
    uint64_t v14 = swift_slowAlloc();
    BOOL v24 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v29 = v21;
    *(_DWORD *)uint64_t v14 = 138412546;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v28 = (uint64_t)v11;
    uint64_t v15 = v11;
    sub_24E8643A8();
    *BOOL v24 = v11;

    *(_WORD *)(v14 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v28 = sub_24E55B02C(0xD000000000000027, 0x800000024E872C70, &v29);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v12, BYTE4(v20), "LocationDetailViewController: %@ - %s", (uint8_t *)v14, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    uint64_t v16 = v24;
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v16, -1, -1);
    uint64_t v17 = v21;
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v17, -1, -1);
    MEMORY[0x2533435F0](v14, -1, -1);

    a4 = v22;
    a1 = v23;
  }
  else
  {
  }
  sub_24E576EA0(v25, (uint64_t)v9, &qword_2698F1630);
  *(void *)&v9[v7[7]] = *(void *)(*(void *)&v11[OBJC_IVAR___FMUILocationDetailViewController_viewOptions]
                                    + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
  type metadata accessor for CompositeAppViewState(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = &v9[v7[5]];
  *(void *)uint64_t v18 = v27;
  *((void *)v18 + 1) = a4;
  *(void *)&v9[v7[6]] = a1;
  v9[v7[8]] = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24E6385B8((uint64_t)v9);
  sub_24E577810((uint64_t)v9);
  return swift_release();
}

Swift::Void __swiftcall LocationDetailViewController.startObserving(contacts:)(Swift::OpaquePointer contacts)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  LocationDetailViewController.startObserving(contacts:from:groupName:)(contacts, (Swift::String_optional)0, (Swift::String_optional)0);
  swift_release();

  swift_release();
}

Swift::Void __swiftcall LocationDetailViewController.startObserving(contacts:from:)(Swift::OpaquePointer contacts, Swift::String_optional from)
{
  object = from.value._object;
  uint64_t countAndFlagsBits = from.value._countAndFlagsBits;
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  v5.value._uint64_t countAndFlagsBits = countAndFlagsBits;
  v5.value._object = object;
  LocationDetailViewController.startObserving(contacts:from:groupName:)(contacts, v5, (Swift::String_optional)0);

  swift_release();
}

Swift::Void __swiftcall LocationDetailViewController.startObserving(contacts:from:groupName:)(Swift::OpaquePointer contacts, Swift::String_optional from, Swift::String_optional groupName)
{
  uint64_t v4 = v3;
  object = groupName.value._object;
  uint64_t countAndFlagsBits = groupName.value._countAndFlagsBits;
  id v93 = from.value._object;
  v89[2] = from.value._countAndFlagsBits;
  unint64_t rawValue = (unint64_t)contacts._rawValue;
  uint64_t v99 = sub_24E861378();
  uint64_t v112 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  v98 = (char *)v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24E861248();
  uint64_t v105 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  v118 = (char *)v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v121 = (char *)v89 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v117 = (char *)v89 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  id v92 = (char *)v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v89 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v120 = (char *)v89 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F16E8);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v116 = (uint64_t)v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Friend();
  uint64_t v103 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v114 = (uint64_t)v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v102 = (void *)((char *)v89 - v27);
  MEMORY[0x270FA5388](v26);
  uint64_t v101 = (uint64_t)v89 - v28;
  uint64_t v29 = sub_24E863FB8();
  uint64_t v91 = sub_24E863FA8();
  uint64_t v119 = v29;
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v115 = v23;
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_24E862168();
  uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_269906D88);
  id v32 = v4;
  v89[1] = v31;
  uint64_t v33 = sub_24E862148();
  int v34 = sub_24E864268();
  BOOL v35 = os_log_type_enabled(v33, (os_log_type_t)v34);
  v113 = v19;
  uint64_t v95 = (uint64_t)object;
  uint64_t v94 = countAndFlagsBits;
  if (v35)
  {
    LODWORD(v122) = v34;
    uint64_t v36 = swift_slowAlloc();
    id v37 = (void *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v123[0] = v38;
    *(_DWORD *)uint64_t v36 = 138412546;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v124 = (uint64_t)v32;
    id v39 = v32;
    sub_24E8643A8();
    *id v37 = v32;

    *(_WORD *)(v36 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v124 = sub_24E55B02C(0xD000000000000028, 0x800000024E872830, v123);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v33, (os_log_type_t)v122, "LocationDetailViewController: %@ - %s", (uint8_t *)v36, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v37, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v38, -1, -1);
    MEMORY[0x2533435F0](v36, -1, -1);
  }
  else
  {
  }
  unint64_t v40 = rawValue >> 62;
  if (rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_24E864728();
  }
  else
  {
    uint64_t v41 = *(void *)((rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  id v96 = v32;
  unint64_t v90 = v40;
  if (v41)
  {
    if (v41 < 1)
    {
      __break(1u);
      return;
    }
    uint64_t v42 = 0;
    unint64_t v43 = rawValue;
    uint64_t v122 = (void (**)(char *, char *, uint64_t))(v105 + 16);
    id v109 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
    unint64_t v110 = rawValue & 0xC000000000000001;
    id v108 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48);
    os_log_type_t v111 = (void (**)(char *, uint64_t, uint64_t))(v105 + 32);
    unint64_t v97 = (void (**)(char *, uint64_t))(v112 + 8);
    os_log_type_t v100 = (void (**)(char *, uint64_t))(v105 + 8);
    v107 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56);
    unint64_t v44 = MEMORY[0x263F8EE78];
    v106 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48);
    uint64_t v112 = v41;
    do
    {
      if (v110) {
        id v45 = (id)MEMORY[0x253342540](v42, v43);
      }
      else {
        id v45 = *(id *)(v43 + 8 * v42 + 32);
      }
      uint64_t v46 = v45;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      id v47 = v46;
      sub_24E56A9F8();
      if (*(void *)(v48 + 16))
      {
        uint64_t v49 = (uint64_t)v120;
        (*(void (**)(char *, unint64_t, uint64_t))(v105 + 16))(v120, v48 + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80)), v8);
        uint64_t v50 = 0;
        uint64_t v51 = (uint64_t)v113;
      }
      else
      {
        uint64_t v50 = 1;
        uint64_t v51 = (uint64_t)v113;
        uint64_t v49 = (uint64_t)v120;
      }
      (*v109)(v49, v50, 1, v8);
      swift_bridgeObjectRelease();
      sub_24E576EA0(v49, v51, &qword_2698F1630);
      if ((*v108)(v51, 1, v8) == 1)
      {

        sub_24E563530(v49, &qword_2698F1630);
        uint64_t v52 = 1;
        uint64_t v53 = v51;
        uint64_t v55 = v115;
        uint64_t v54 = v116;
      }
      else
      {
        objc_super v56 = *v111;
        objc_super v57 = v117;
        (*v111)(v117, v51, v8);
        uint64_t v58 = v8;
        Swift::String_optional v59 = *v122;
        uint64_t v60 = v58;
        ((void (*)(char *, char *))*v122)(v121, v57);
        if (qword_2698F0DF8 != -1) {
          swift_once();
        }
        id v61 = objc_msgSend((id)qword_2698F1620, sel_stringFromContact_, v47);
        if (v61)
        {
          objc_super v62 = v61;
          uint64_t v63 = sub_24E863CA8();
          uint64_t v65 = v64;
        }
        else
        {
          uint64_t v63 = 0;
          uint64_t v65 = 0;
        }
        v59(v118, v121, v60);
        sub_24E56A9F8();
        uint64_t v67 = v66;
        if (v65)
        {
          v123[0] = v63;
          v123[1] = v65;
          uint64_t v68 = v98;
          sub_24E861368();
          sub_24E56A4B4();
          uint64_t v63 = sub_24E8643D8();
          uint64_t v70 = v69;
          (*v97)(v68, v99);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v70 = 0;
        }
        uint64_t v71 = v102;
        uint64_t *v102 = v63;
        v71[1] = v70;
        uint64_t v55 = v115;
        v56((char *)v71 + *(int *)(v115 + 20), (uint64_t)v118, v60);
        *(uint64_t *)((char *)v71 + *(int *)(v55 + 24)) = v67;
        uint64_t v8 = v60;
        *(uint64_t *)((char *)v71 + *(int *)(v55 + 28)) = (uint64_t)v47;
        uint64_t v72 = (uint64_t)v71;
        uint64_t v54 = v116;
        sub_24E55A390(v72, v116);
        uint64_t v73 = *v100;
        (*v100)(v121, v60);
        v73(v117, v60);
        uint64_t v52 = 0;
        uint64_t v53 = (uint64_t)v120;
        unint64_t v43 = rawValue;
      }
      sub_24E563530(v53, &qword_2698F1630);
      (*v107)(v54, v52, 1, v55);

      swift_release();
      if ((*v106)(v54, 1, v55) == 1)
      {
        sub_24E563530(v54, &qword_2698F16E8);
      }
      else
      {
        uint64_t v74 = v101;
        sub_24E55A390(v54, v101);
        sub_24E55A390(v74, v114);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v44 = sub_24E5752CC(0, *(void *)(v44 + 16) + 1, 1, v44, &qword_2698F10D0, (uint64_t (*)(void))type metadata accessor for Friend, (uint64_t (*)(void))type metadata accessor for Friend);
        }
        unint64_t v76 = *(void *)(v44 + 16);
        unint64_t v75 = *(void *)(v44 + 24);
        if (v76 >= v75 >> 1) {
          unint64_t v44 = sub_24E5752CC(v75 > 1, v76 + 1, 1, v44, &qword_2698F10D0, (uint64_t (*)(void))type metadata accessor for Friend, (uint64_t (*)(void))type metadata accessor for Friend);
        }
        *(void *)(v44 + 16) = v76 + 1;
        sub_24E55A390(v114, v44+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(void *)(v103 + 72) * v76);
      }
      ++v42;
    }
    while (v112 != v42);
  }
  else
  {
    unint64_t v44 = MEMORY[0x263F8EE78];
    unint64_t v43 = rawValue;
  }
  swift_bridgeObjectRelease();
  unint64_t v77 = v43;
  uint64_t v78 = *(void *)(v44 + 16);
  if (v90)
  {
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_24E864728();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v79 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v122 = (void (**)(char *, char *, uint64_t))v44;
  if (v78 != v79)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    char v80 = sub_24E862148();
    os_log_type_t v81 = sub_24E864248();
    if (os_log_type_enabled(v80, v81))
    {
      v121 = (char *)v8;
      uint64_t v82 = swift_slowAlloc();
      uint64_t v120 = (char *)swift_slowAlloc();
      v123[0] = (uint64_t)v120;
      *(_DWORD *)uint64_t v82 = 136315650;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_release();
      uint64_t v124 = sub_24E55B02C(0xD000000000000028, 0x800000024E872830, v123);
      sub_24E8643A8();
      *(_WORD *)(v82 + 12) = 2048;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v124 = v78;
      sub_24E8643A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v82 + 22) = 2048;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v124 = v79;
      sub_24E8643A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E553000, v80, v81, "FindMyMessagesAppViewController: %s - Couldn't map all friends - mapped: %ld - unmapped: %ld", (uint8_t *)v82, 0x20u);
      uint64_t v83 = v120;
      swift_arrayDestroy();
      MEMORY[0x2533435F0](v83, -1, -1);
      MEMORY[0x2533435F0](v82, -1, -1);

      uint64_t v8 = (uint64_t)v121;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  if (v93)
  {
    sub_24E863FA8();
    sub_24E863F18();
    char isCurrentExecutor = swift_task_isCurrentExecutor();
    uint64_t v85 = v95;
    uint64_t v86 = v94;
    if ((isCurrentExecutor & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_bridgeObjectRetain();
    uint64_t v87 = (uint64_t)v92;
    sub_24E861228();
    swift_release();
    uint64_t v88 = 0;
  }
  else
  {
    uint64_t v88 = 1;
    uint64_t v85 = v95;
    uint64_t v86 = v94;
    uint64_t v87 = (uint64_t)v92;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v87, v88, 1, v8);
  sub_24E56FD48((uint64_t)v122, v87, v86, v85);
  swift_bridgeObjectRelease();
  sub_24E563530(v87, &qword_2698F1630);
  swift_release();
}

Swift::Void __swiftcall LocationDetailViewController.stopObserving()()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E862168();
  __swift_project_value_buffer(v1, (uint64_t)qword_269906D88);
  id v2 = v0;
  uint64_t v3 = sub_24E862148();
  os_log_type_t v4 = sub_24E864268();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v5 = 138412546;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    id v7 = v2;
    sub_24E8643A8();
    void *v6 = v2;

    *(_WORD *)(v5 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24E55B02C(0x6573624F706F7473, 0xEF2928676E697672, &v9);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v3, v4, "LocationDetailViewController: %@ - %s", (uint8_t *)v5, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v6, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    MEMORY[0x2533435F0](v5, -1, -1);
  }
  else
  {
  }
  sub_24E638170();
  swift_release();
}

Swift::Void __swiftcall LocationDetailViewController.pauseSubscriptions()()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E862168();
  __swift_project_value_buffer(v1, (uint64_t)qword_269906D88);
  id v2 = v0;
  uint64_t v3 = sub_24E862148();
  os_log_type_t v4 = sub_24E864268();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v5 = 138412546;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    id v7 = v2;
    sub_24E8643A8();
    void *v6 = v2;

    *(_WORD *)(v5 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24E55B02C(0xD000000000000014, 0x800000024E872670, &v9);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v3, v4, "LocationDetailViewController: %@ - %s", (uint8_t *)v5, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v6, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    MEMORY[0x2533435F0](v5, -1, -1);
  }
  else
  {
  }
  sub_24E638DB4();
  swift_release();
}

Swift::Void __swiftcall LocationDetailViewController.resumeSubscriptions()()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E862168();
  __swift_project_value_buffer(v1, (uint64_t)qword_269906D88);
  id v2 = v0;
  uint64_t v3 = sub_24E862148();
  os_log_type_t v4 = sub_24E864268();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v5 = 138412546;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    id v7 = v2;
    sub_24E8643A8();
    void *v6 = v2;

    *(_WORD *)(v5 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24E55B02C(0xD000000000000015, 0x800000024E872690, &v9);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v3, v4, "LocationDetailViewController: %@ - %s", (uint8_t *)v5, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v6, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    MEMORY[0x2533435F0](v5, -1, -1);
  }
  else
  {
  }
  sub_24E639204();
  swift_release();
}

void sub_24E5723A0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  id v6 = a1;
  a4();
  swift_release();
}

Swift::Void __swiftcall LocationDetailViewController.viewIsAppearing(_:)(Swift::Bool a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  v13.receiver = v1;
  v13.super_class = ObjectType;
  objc_msgSendSuper2(&v13, sel_viewIsAppearing_, a1);
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_24E862168();
  __swift_project_value_buffer(v4, (uint64_t)qword_269906D88);
  id v5 = v1;
  id v6 = sub_24E862148();
  os_log_type_t v7 = sub_24E864268();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = v11;
    *(_DWORD *)uint64_t v8 = 138412546;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    id v10 = v5;
    sub_24E8643A8();
    *uint64_t v9 = v5;

    *(_WORD *)(v8 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24E55B02C(0xD000000000000013, 0x800000024E872860, &v12);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v6, v7, "LocationDetailViewController: %@ - %s", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v11, -1, -1);
    MEMORY[0x2533435F0](v8, -1, -1);
  }
  else
  {
  }
  LocationDetailViewController.resumeSubscriptions()();
  swift_release();
}

Swift::Void __swiftcall LocationDetailViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  v13.receiver = v1;
  v13.super_class = ObjectType;
  objc_msgSendSuper2(&v13, sel_viewDidDisappear_, a1);
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_24E862168();
  __swift_project_value_buffer(v4, (uint64_t)qword_269906D88);
  id v5 = v1;
  id v6 = sub_24E862148();
  os_log_type_t v7 = sub_24E864268();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = v11;
    *(_DWORD *)uint64_t v8 = 138412546;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    id v10 = v5;
    sub_24E8643A8();
    *uint64_t v9 = v5;

    *(_WORD *)(v8 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24E55B02C(0xD000000000000014, 0x800000024E872880, &v12);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v6, v7, "LocationDetailViewController: %@ - %s", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v11, -1, -1);
    MEMORY[0x2533435F0](v8, -1, -1);
  }
  else
  {
  }
  LocationDetailViewController.pauseSubscriptions()();
  swift_release();
}

void sub_24E572B64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  id v8 = a1;
  a5(a3);
  swift_release();
}

id LocationDetailViewController.navigationItem.getter()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___FMUILocationDetailViewController_hostingViewController), sel_navigationItem);
  swift_release();
  return v1;
}

void __swiftcall LocationDetailViewController.contentScrollView(for:)(UIScrollView_optional *__return_ptr retstr, NSDirectionalRectEdge a2)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  id v4 = objc_msgSend(*(id *)(v2 + OBJC_IVAR___FMUILocationDetailViewController_hostingViewController), sel_contentScrollViewForEdge_, a2);
  swift_release();
}

Swift::Void __swiftcall LocationDetailViewController.viewDidLoad()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  v37.receiver = v0;
  v37.super_class = ObjectType;
  objc_msgSendSuper2(&v37, sel_viewDidLoad);
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E862168();
  __swift_project_value_buffer(v2, (uint64_t)qword_269906D88);
  uint64_t v3 = v0;
  id v4 = sub_24E862148();
  os_log_type_t v5 = sub_24E864268();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    os_log_type_t v7 = (void *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = v35;
    *(_DWORD *)uint64_t v6 = 138412546;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    id v8 = v3;
    sub_24E8643A8();
    *os_log_type_t v7 = v3;

    *(_WORD *)(v6 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24E55B02C(0x4C64694477656976, 0xED0000292864616FLL, &v36);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v4, v5, "LocationDetailViewController: %@ - %s", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v35, -1, -1);
    MEMORY[0x2533435F0](v6, -1, -1);
  }
  else
  {
  }
  uint64_t v9 = *(void **)&v3[OBJC_IVAR___FMUILocationDetailViewController_hostingViewController];
  id v10 = objc_msgSend(v9, sel_view, v35);
  if (!v10)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v11 = v10;
  objc_msgSend(v10, sel_setAutoresizingMask_, 18);

  id v12 = objc_msgSend(v9, sel_view);
  if (!v12)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  objc_super v13 = v12;
  id v14 = objc_msgSend(v3, sel_view);
  if (!v14)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v15 = v14;
  objc_msgSend(v14, sel_bounds);
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;

  objc_msgSend(v13, sel_setFrame_, v17, v19, v21, v23);
  id v24 = objc_msgSend(v3, sel_view);
  if (!v24)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v25 = v24;
  id v26 = objc_msgSend(v9, sel_view);
  if (!v26)
  {
LABEL_26:
    __break(1u);
    return;
  }
  uint64_t v27 = v26;
  objc_msgSend(v25, sel_addSubview_, v26);

  objc_msgSend(v3, sel_addChildViewController_, v9);
  objc_msgSend(v9, sel_didMoveToParentViewController_, v3);
  uint64_t v28 = *(void *)&v3[OBJC_IVAR___FMUILocationDetailViewController_viewModel];
  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v30 = (void *)(v28 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler);
  uint64_t v31 = *(void *)(v28 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler);
  *uint64_t v30 = &unk_2698F1700;
  v30[1] = v29;
  swift_retain();
  sub_24E569B2C(v31);
  swift_release();
  swift_release_n();
  uint64_t v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v33 = (void *)(v28 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectStopSharingHandler);
  uint64_t v34 = *(void *)(v28 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectStopSharingHandler);
  void *v33 = &unk_2698F1710;
  v33[1] = v32;
  swift_retain();
  sub_24E569B2C(v34);
  swift_release();
  swift_release_n();
  swift_release();
}

uint64_t sub_24E573664(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  v2[7] = sub_24E863FB8();
  v2[8] = sub_24E863FA8();
  uint64_t v4 = sub_24E863F18();
  v2[9] = v4;
  v2[10] = v3;
  return MEMORY[0x270FA2498](sub_24E573700, v4, v3);
}

uint64_t sub_24E573700()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6] + 16;
  v0[11] = sub_24E863FA8();
  uint64_t v3 = swift_allocObject();
  v0[12] = v3;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x2533436E0](v2);
  swift_unknownObjectWeakInit();

  uint64_t v5 = swift_task_alloc();
  v0[13] = v5;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[14] = v6;
  void *v6 = v0;
  v6[1] = sub_24E573870;
  return MEMORY[0x270FA2360]();
}

uint64_t sub_24E573870()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_24E573A0C;
  }
  else
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_24E5739A8;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_24E5739A8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E573A0C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_24E573A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F17F8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 16;
  sub_24E863FB8();
  uint64_t v9 = sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x2533436E0](v8);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = (void *)v10;
  uint64_t v12 = MEMORY[0x2533436E0](v10 + OBJC_IVAR___FMUILocationDetailViewController_delegate);
  if (!v12)
  {

LABEL_12:
    sub_24E863F48();
    swift_release();
    return;
  }
  objc_super v13 = (void *)v12;
  uint64_t v32 = v6;
  uint64_t v33 = a1;
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_24E862168();
  __swift_project_value_buffer(v14, (uint64_t)qword_269906D88);
  uint64_t v15 = v11;
  double v16 = sub_24E862148();
  int v17 = sub_24E864268();
  BOOL v18 = os_log_type_enabled(v16, (os_log_type_t)v17);
  uint64_t v34 = v9;
  if (v18)
  {
    int v30 = v17;
    uint64_t v31 = v13;
    double v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = (void *)swift_slowAlloc();
    *(_DWORD *)double v19 = 138412290;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    aBlock[0] = v15;
    double v20 = v15;
    sub_24E8643A8();
    double v21 = v29;
    *uint64_t v29 = v11;

    _os_log_impl(&dword_24E553000, v16, (os_log_type_t)v30, "LocationDetailViewController: %@ - forwarding didSelectSendLocationMessage", v19, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v21, -1, -1);
    MEMORY[0x2533435F0](v19, -1, -1);
    objc_super v13 = v31;
  }
  else
  {

    double v16 = v15;
  }

  Class isa = MessagePayload.createMSMessage()().super.isa;
  uint64_t v23 = v32;
  id v24 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v36, v33, v5);
  unint64_t v25 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v26 + v25, v24, v5);
  aBlock[4] = sub_24E577790;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24E573EF8;
  aBlock[3] = &block_descriptor_27;
  uint64_t v27 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v13, sel_detailsController_didSelectSendLocationMessage_completion_, v15, isa, v27);
  _Block_release(v27);
  swift_release();

  swift_unknownObjectRelease();
}

void sub_24E573EF8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_24E573F64(uint64_t a1)
{
  v1[5] = a1;
  v1[6] = sub_24E863FB8();
  v1[7] = sub_24E863FA8();
  uint64_t v3 = sub_24E863F18();
  v1[8] = v3;
  v1[9] = v2;
  return MEMORY[0x270FA2498](sub_24E574000, v3, v2);
}

uint64_t sub_24E574000()
{
  uint64_t v1 = v0[5] + 16;
  v0[10] = sub_24E863FA8();
  v0[11] = swift_allocObject();
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x2533436E0](v1);
  swift_unknownObjectWeakInit();

  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24E574158;
  return MEMORY[0x270FA2360]();
}

uint64_t sub_24E574158()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_24E5742E0;
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_24E57427C;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_24E57427C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E5742E0()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E574358(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F17F8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  MEMORY[0x270FA5388](v6);
  uint64_t v41 = &v33[-v7];
  sub_24E863FB8();
  uint64_t v8 = sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x2533436E0](a2 + 16);
  if (!v9) {
    goto LABEL_12;
  }
  uint64_t v10 = (void *)v9;
  uint64_t v11 = MEMORY[0x2533436E0](v9 + OBJC_IVAR___FMUILocationDetailViewController_delegate);
  if (!v11)
  {

LABEL_12:
    sub_24E863F48();
    return swift_release();
  }
  uint64_t v12 = (void *)v11;
  uint64_t v39 = v8;
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v38 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_24E862168();
  __swift_project_value_buffer(v13, (uint64_t)qword_269906D88);
  uint64_t v14 = v10;
  uint64_t v15 = sub_24E862148();
  int v16 = sub_24E864268();
  BOOL v17 = os_log_type_enabled(v15, (os_log_type_t)v16);
  unint64_t v40 = v14;
  if (v17)
  {
    int v34 = v16;
    uint64_t v36 = v12;
    uint64_t v37 = v4;
    BOOL v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = (void *)swift_slowAlloc();
    *(_DWORD *)BOOL v18 = 138412290;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    aBlock[0] = v40;
    double v19 = v40;
    sub_24E8643A8();
    double v20 = v35;
    void *v35 = v10;

    _os_log_impl(&dword_24E553000, v15, (os_log_type_t)v34, "LocationDetailViewController: %@ - forwarding didSelectStopSharingWithCompletion", v18, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v20, -1, -1);
    MEMORY[0x2533435F0](v18, -1, -1);
    uint64_t v12 = v36;
    uint64_t v4 = v37;
  }
  else
  {

    uint64_t v15 = v14;
  }

  unsigned __int8 v21 = objc_msgSend(v12, sel_respondsToSelector_, sel_detailsController_didSelectStopSharingWithCompletion_);
  double v22 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v23 = v12;
  if (v21)
  {
    unint64_t v25 = v41;
    uint64_t v24 = v42;
    v22(v41, v42, v3);
    unint64_t v26 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v4 + 32))(v27 + v26, v25, v3);
    aBlock[4] = sub_24E5776D0;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24E573EF8;
    aBlock[3] = &block_descriptor;
    uint64_t v28 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v29 = v40;
    objc_msgSend(v23, (SEL)&selRef_initWithRootViewController_ + 5, v40, v28);
    _Block_release(v28);
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    int v30 = v38;
    v22(v38, v24, v3);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v30, v3);
    swift_release();

    return swift_unknownObjectRelease();
  }
  uint64_t v32 = v38;
  v22(v38, v42, v3);
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24E863F48();

  swift_unknownObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v32, v3);
  swift_release();
  return swift_release();
}

uint64_t sub_24E5748FC(void *a1)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (a1)
  {
    id v2 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F17F8);
    sub_24E863F38();
    return swift_release();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F17F8);
    sub_24E863F48();
    return swift_release();
  }
}

id LocationDetailViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_24E863C68();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id LocationDetailViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = OBJC_IVAR___FMUILocationDetailViewController_viewModel;
  uint64_t v8 = OBJC_IVAR___FMUILocationDetailViewController_hostingViewController;
  uint64_t v9 = qword_2698F0E78;
  uint64_t v10 = v4;
  if (v9 != -1) {
    swift_once();
  }
  type metadata accessor for CompositeAppViewModel();
  swift_allocObject();
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_24E63CC7C(v11, 0, 0, 0, 0, 0, 0, 0, 0);
  uint64_t v30 = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F15D0);
  sub_24E863728();
  uint64_t v13 = (uint64_t)v25;
  uint64_t v14 = v26;
  unint64_t v25 = sub_24E577064;
  unint64_t v26 = v12;
  char v27 = 0;
  uint64_t v28 = v13;
  uint64_t v29 = v14;
  id v15 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_2698F1718));
  swift_retain();
  sub_24E57706C(v13);
  swift_retain();
  uint64_t v16 = sub_24E862B88();
  sub_24E862B78();
  swift_release();
  sub_24E57707C(v13);
  swift_release();
  *(void *)&v4[v7] = v12;
  *(void *)&v4[v8] = v16;
  swift_unknownObjectWeakInit();
  uint64_t v17 = OBJC_IVAR___FMUILocationDetailViewController_viewOptions;
  if (qword_2698F0E48 != -1) {
    swift_once();
  }
  BOOL v18 = (void *)qword_2698F16B8;
  *(void *)&v10[v17] = qword_2698F16B8;
  id v19 = v18;

  if (a2)
  {
    double v20 = (void *)sub_24E863C68();
    swift_bridgeObjectRelease();
  }
  else
  {
    double v20 = 0;
  }
  v24.receiver = v10;
  v24.super_class = ObjectType;
  id v21 = objc_msgSendSuper2(&v24, sel_initWithNibName_bundle_, v20, a3);

  return v21;
}

id LocationDetailViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id LocationDetailViewController.init(coder:)(void *a1)
{
  id v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR___FMUILocationDetailViewController_viewModel;
  uint64_t v6 = OBJC_IVAR___FMUILocationDetailViewController_hostingViewController;
  uint64_t v7 = qword_2698F0E78;
  uint64_t v8 = v2;
  if (v7 != -1) {
    swift_once();
  }
  type metadata accessor for CompositeAppViewModel();
  swift_allocObject();
  uint64_t v9 = swift_retain();
  uint64_t v10 = sub_24E63CC7C(v9, 0, 0, 0, 0, 0, 0, 0, 0);
  uint64_t v26 = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F15D0);
  sub_24E863728();
  uint64_t v11 = (uint64_t)v21;
  uint64_t v12 = v22;
  id v21 = sub_24E577064;
  double v22 = v10;
  char v23 = 0;
  uint64_t v24 = v11;
  unint64_t v25 = v12;
  id v13 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_2698F1718));
  swift_retain();
  sub_24E57706C(v11);
  swift_retain();
  uint64_t v14 = sub_24E862B88();
  sub_24E862B78();
  swift_release();
  sub_24E57707C(v11);
  swift_release();
  *(void *)&v2[v5] = v10;
  *(void *)&v2[v6] = v14;
  swift_unknownObjectWeakInit();
  uint64_t v15 = OBJC_IVAR___FMUILocationDetailViewController_viewOptions;
  if (qword_2698F0E48 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_2698F16B8;
  *(void *)&v8[v15] = qword_2698F16B8;
  id v17 = v16;

  v20.receiver = v8;
  v20.super_class = ObjectType;
  id v18 = objc_msgSendSuper2(&v20, sel_initWithCoder_, a1);

  return v18;
}

uint64_t sub_24E575170()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24E5751B0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_24E5699A4;
  return sub_24E56E7B4(a1, v4, v5, v6);
}

uint64_t sub_24E575264(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5752CC(a1, a2, a3, a4, &qword_2698F32C0, _s16SubscriptionDataOMa, _s16SubscriptionDataOMa);
}

uint64_t sub_24E575298(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5752CC(a1, a2, a3, a4, &qword_2698F10D8, MEMORY[0x263F3CBB0], MEMORY[0x263F3CBB0]);
}

uint64_t sub_24E5752CC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    id v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  id v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_24E864708();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24E5772FC(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_24E57554C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5757C8(a1, a2, a3, a4, &qword_2698F1760, &qword_2698F1768);
}

void *sub_24E575560(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F8030);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24E576DAC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24E575670(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1758);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24E577210(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24E575780(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5752CC(a1, a2, a3, a4, &qword_2698F1808, MEMORY[0x263F3CF40], MEMORY[0x263F3CF40]);
}

uint64_t sub_24E5757B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5757C8(a1, a2, a3, a4, &qword_2698F1810, &qword_2698F3470);
}

uint64_t sub_24E5757C8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_24E864708();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24E57756C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_24E575A34(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5752CC(a1, a2, a3, a4, &qword_2698F1800, type metadata accessor for SessionFriend, type metadata accessor for SessionFriend);
}

uint64_t sub_24E575A68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5752CC(a1, a2, a3, a4, &qword_2698F1748, (uint64_t (*)(void))type metadata accessor for Annotation, (uint64_t (*)(void))type metadata accessor for Annotation);
}

uint64_t sub_24E575A9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5752CC(a1, a2, a3, a4, &qword_2698F17E0, (uint64_t (*)(void))type metadata accessor for DeviceImageProvider.Subscription, (uint64_t (*)(void))type metadata accessor for DeviceImageProvider.Subscription);
}

void *sub_24E575AD0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F17F0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24E5769D4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24E575BE0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1780);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24E576AC8(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24E575CDC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5752CC(a1, a2, a3, a4, &qword_2698F1770, type metadata accessor for BeaconsInfoProvider.BeaconsSubscription, type metadata accessor for BeaconsInfoProvider.BeaconsSubscription);
}

uint64_t sub_24E575D10(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5757C8(a1, a2, a3, a4, &qword_2698F17D0, &qword_2698F17D8);
}

void *sub_24E575D24(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F17C8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24E577480(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24E575E34(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5752CC(a1, a2, a3, a4, &qword_2698F17A8, (uint64_t (*)(void))type metadata accessor for ContactsProvider.Subscription, (uint64_t (*)(void))type metadata accessor for ContactsProvider.Subscription);
}

uint64_t sub_24E575E68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5752CC(a1, a2, a3, a4, &qword_2698F1778, type metadata accessor for PeopleLocationsProvider.Subscription, type metadata accessor for PeopleLocationsProvider.Subscription);
}

uint64_t sub_24E575E9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5752CC(a1, a2, a3, a4, &qword_2698F1788, type metadata accessor for PeopleRelationshipsProvider.Subscription, type metadata accessor for PeopleRelationshipsProvider.Subscription);
}

uint64_t sub_24E575ED0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E5757C8(a1, a2, a3, a4, &qword_2698F1798, &qword_2698F17A0);
}

uint64_t sub_24E575EE4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E57678C(a1, a2, a3, (void *)*v3, &qword_2698F32C0, _s16SubscriptionDataOMa);
  *id v3 = result;
  return result;
}

uint64_t sub_24E575F20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E57678C(a1, a2, a3, (void *)*v3, &qword_2698F10D8, MEMORY[0x263F3CBB0]);
  *id v3 = result;
  return result;
}

uint64_t sub_24E575F5C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E57678C(a1, a2, a3, (void *)*v3, &qword_2698F10D0, (uint64_t (*)(void))type metadata accessor for Friend);
  *id v3 = result;
  return result;
}

uint64_t sub_24E575F98(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E576208(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_24E575FB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E57678C(a1, a2, a3, (void *)*v3, &qword_2698F1750, MEMORY[0x263F3CF58]);
  *id v3 = result;
  return result;
}

uint64_t sub_24E575FF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E57678C(a1, a2, a3, (void *)*v3, &qword_2698F17E8, (uint64_t (*)(void))type metadata accessor for DeviceInfo);
  *id v3 = result;
  return result;
}

uint64_t sub_24E576030(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E5764C4(a1, a2, a3, *v3, &qword_2698F17C8);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_24E576058(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E5764C4(a1, a2, a3, *v3, &qword_2698F17C0);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_24E576080(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E57678C(a1, a2, a3, (void *)*v3, &qword_2698F17B8, (uint64_t (*)(void))type metadata accessor for PersonInfo);
  *id v3 = result;
  return result;
}

uint64_t sub_24E5760BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E57678C(a1, a2, a3, (void *)*v3, &qword_2698F17A8, (uint64_t (*)(void))type metadata accessor for ContactsProvider.Subscription);
  *id v3 = result;
  return result;
}

uint64_t sub_24E5760F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E57678C(a1, a2, a3, (void *)*v3, &qword_2698F1778, type metadata accessor for PeopleLocationsProvider.Subscription);
  *id v3 = result;
  return result;
}

uint64_t sub_24E576134(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E57678C(a1, a2, a3, (void *)*v3, &qword_2698F17B0, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  *id v3 = result;
  return result;
}

uint64_t sub_24E576170(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E576620(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_24E576190(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E57678C(a1, a2, a3, (void *)*v3, &qword_2698F1788, type metadata accessor for PeopleRelationshipsProvider.Subscription);
  *id v3 = result;
  return result;
}

uint64_t sub_24E5761CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E57678C(a1, a2, a3, (void *)*v3, &qword_2698F1770, type metadata accessor for BeaconsInfoProvider.BeaconsSubscription);
  *id v3 = result;
  return result;
}

uint64_t sub_24E576208(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F8030);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24E864778();
  __break(1u);
  return result;
}

uint64_t sub_24E576374(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1818);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24E864778();
  __break(1u);
  return result;
}

uint64_t sub_24E5764C4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v11 + 32;
  unint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_24E864778();
  __break(1u);
  return result;
}

uint64_t sub_24E576620(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1790);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24E864778();
  __break(1u);
  return result;
}

uint64_t sub_24E57678C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_24E864778();
  __break(1u);
  return result;
}

uint64_t sub_24E5769D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24E864778();
  __break(1u);
  return result;
}

char *sub_24E576AC8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_24E864778();
  __break(1u);
  return result;
}

uint64_t sub_24E576BB0(unint64_t a1)
{
  uint64_t v2 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  id v3 = (char *)objc_allocWithZone(v2);
  size_t v4 = &qword_2698F1000;
  *(void *)&v3[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 0;
  v31.receiver = v3;
  v31.super_class = v2;
  uint64_t result = (uint64_t)objc_msgSendSuper2(&v31, sel_init);
  unint64_t v6 = (char *)result;
  if (!(a1 >> 62))
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_3;
    }
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_24E864728();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v7) {
    return (uint64_t)v6;
  }
LABEL_3:
  if (v7 >= 1)
  {
    uint64_t v8 = 0;
    unint64_t v24 = a1 & 0xC000000000000001;
    uint64_t v25 = v7;
    unint64_t v26 = a1;
    do
    {
      if (v24) {
        unint64_t v9 = (char *)MEMORY[0x253342540](v8, a1);
      }
      else {
        unint64_t v9 = (char *)*(id *)(a1 + 8 * v8 + 32);
      }
      int64_t v10 = v9;
      unint64_t v27 = v4[216];
      uint64_t v11 = *(void *)&v6[v27];
      uint64_t v12 = (char *)objc_allocWithZone(v2);
      *(void *)&v12[v4[216]] = v11;
      v30.receiver = v12;
      v30.super_class = v2;
      uint64_t v13 = v4;
      uint64_t v14 = v6;
      unint64_t v15 = (char *)objc_msgSendSuper2(&v30, sel_init);
      uint64_t v16 = *(void *)&v15[v4[216]];

      uint64_t v17 = *(void *)&v10[v13[216]];
      BOOL v18 = (char *)objc_allocWithZone(v2);
      *(void *)&v18[v13[216]] = v17 & v16;
      v29.receiver = v18;
      v29.super_class = v2;
      id v19 = objc_msgSendSuper2(&v29, sel_init);

      char v20 = sub_24E864348();
      if ((v20 & 1) == 0)
      {
        uint64_t v21 = *(void *)&v6[v27];
        unint64_t v22 = v10;

        uint64_t v23 = (char *)objc_allocWithZone(v2);
        *(void *)&v23[v13[216]] = v21 | v17;
        v28.receiver = v23;
        v28.super_class = v2;
        uint64_t v14 = (char *)objc_msgSendSuper2(&v28, sel_init);
      }
      size_t v4 = v13;

      ++v8;
      unint64_t v6 = v14;
      a1 = v26;
    }
    while (v25 != v8);
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_24E576DAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24E864778();
  __break(1u);
  return result;
}

uint64_t sub_24E576EA0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E576F04()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24E576F3C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E5699A4;
  return sub_24E573664(a1, v1);
}

uint64_t sub_24E576FD4()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24E56A260;
  return sub_24E573F64(v0);
}

uint64_t sub_24E577064()
{
  return swift_retain();
}

uint64_t sub_24E57706C(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24E57707C(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24E57708C()
{
  return sub_24E577180(&qword_2698F1728);
}

uint64_t type metadata accessor for LocationDetailViewController.ViewOptions()
{
  return self;
}

uint64_t sub_24E5770E4()
{
  return sub_24E577180(&qword_2698F1730);
}

uint64_t sub_24E577118()
{
  return sub_24E577180(&qword_2698F1738);
}

uint64_t sub_24E57714C()
{
  return sub_24E577180(&qword_2698F1740);
}

uint64_t sub_24E577180(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LocationDetailViewController.ViewOptions();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for LocationDetailViewController.ViewOptions(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LocationDetailViewController.ViewOptions);
}

uint64_t dispatch thunk of LocationDetailViewController.ViewOptions.__allocating_init(rawValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for LocationDetailViewController()
{
  return self;
}

char *sub_24E577210(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24E864778();
  __break(1u);
  return result;
}

uint64_t sub_24E5772FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_24E864778();
  __break(1u);
  return result;
}

uint64_t sub_24E577458(uint64_t a1)
{
  return a1;
}

char *sub_24E577480(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24E864778();
  __break(1u);
  return result;
}

uint64_t sub_24E57756C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_24E864778();
  __break(1u);
  return result;
}

uint64_t sub_24E5776C4(uint64_t a1)
{
  return sub_24E574358(a1, v1);
}

uint64_t sub_24E5776D0(void *a1)
{
  return sub_24E577798(a1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

void sub_24E5776F0(uint64_t a1)
{
  sub_24E573A98(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t objectdestroy_17Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F17F8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24E577790(void *a1)
{
  return sub_24E577798(a1);
}

uint64_t sub_24E577798(void *a1)
{
  return sub_24E5748FC(a1);
}

uint64_t sub_24E577810(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CompositeAppViewInitialInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_24E577880()
{
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_sharedInstance);
  id v3 = objc_msgSend(v2, sel_altDSIDForAccount_, v0);

  if (!v3) {
    return 0;
  }
  id v4 = objc_msgSend(v1, sel_sharedInstance);
  id v5 = objc_msgSend(v4, sel_authKitAccountWithAltDSID_, v3);

  if (!v5) {
    return 0;
  }
  id v6 = objc_msgSend(v1, sel_sharedInstance);
  id v7 = objc_msgSend(v6, sel_securityLevelForAccount_, v5);

  return v7;
}

id sub_24E577978(void *a1)
{
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
  {
    id v1 = objc_allocWithZone(MEMORY[0x263F825C8]);
    double v2 = 0.055;
    double v3 = 0.149;
    double v4 = 0.239;
  }
  else
  {
    id v1 = objc_allocWithZone(MEMORY[0x263F825C8]);
    double v2 = 0.925;
    double v3 = 0.969;
    double v4 = 0.996;
  }

  return objc_msgSend(v1, sel_initWithRed_green_blue_alpha_, v2, v3, v4, 1.0);
}

void sub_24E577A14()
{
  uint64_t v0 = sub_24E8639D8();
  __swift_allocate_value_buffer(v0, qword_2698F1820);
  __swift_project_value_buffer(v0, (uint64_t)qword_2698F1820);
  type metadata accessor for FindMyUICore();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24E863988();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_24E577B34()
{
  return 0xD000000000000019;
}

uint64_t sub_24E577B50()
{
  uint64_t result = sub_24E863CA8();
  qword_269906D78 = result;
  unk_269906D80 = v1;
  return result;
}

uint64_t sub_24E577B80()
{
  uint64_t v0 = sub_24E862168();
  __swift_allocate_value_buffer(v0, qword_269906D88);
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  return sub_24E862158();
}

unsigned char *storeEnumTagSinglePayload for MessagesFeatureFlag(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E577CA0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesFeatureFlag()
{
  return &type metadata for MessagesFeatureFlag;
}

unint64_t sub_24E577CDC()
{
  unint64_t result = qword_2698F1838;
  if (!qword_2698F1838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F1838);
  }
  return result;
}

uint64_t sub_24E577D30()
{
  return sub_24E864A98();
}

uint64_t sub_24E577D74()
{
  return sub_24E864A68();
}

uint64_t sub_24E577D9C()
{
  return sub_24E864A98();
}

const char *sub_24E577DDC()
{
  return "Messages";
}

const char *sub_24E577DF0()
{
  return "waldoCPolish";
}

uint64_t sub_24E577E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v11 = (int *)type metadata accessor for AsyncThrottleSequence.Iterator();
  uint64_t v12 = a7 + v11[15];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v12, 1, 1, AssociatedTypeWitness);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a7, a1, v14);
  uint64_t v15 = a7 + v11[16];
  uint64_t v16 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a2, v16);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7 + v11[17], a3, a6);
  BOOL v18 = (void *)(a7 + v11[18]);
  void *v18 = a4;
  v18[1] = a5;
  return result;
}

uint64_t sub_24E577FE0(uint64_t a1, void *a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = a2[6];
  v3[6] = a2[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  v3[8] = *(void *)(AssociatedTypeWitness - 8);
  v3[9] = swift_task_alloc();
  uint64_t v6 = a2[4];
  v3[10] = v6;
  v3[11] = *(void *)(v6 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = a2[5];
  v3[14] = a2[2];
  uint64_t v7 = swift_getAssociatedTypeWitness();
  v3[15] = v7;
  uint64_t v8 = sub_24E864388();
  v3[16] = v8;
  v3[17] = *(void *)(v8 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = *(void *)(v7 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  v3[21] = v9;
  uint64_t v10 = sub_24E864388();
  v3[22] = v10;
  v3[23] = *(void *)(v10 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = *(void *)(v9 - 8);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  uint64_t v11 = sub_24E864388();
  v3[29] = v11;
  v3[30] = *(void *)(v11 - 8);
  v3[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E578374, 0, 0);
}

uint64_t sub_24E578374()
{
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 24);
  uint64_t v9 = *(void *)(v0 + 32);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  *(void *)(v0 + 256) = v11;
  *(void *)(v0 + 264) = (v8 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v11(v1, 1, 1, v7);
  uint64_t v12 = *(int *)(v10 + 60);
  *(_DWORD *)(v0 + 328) = v12;
  uint64_t v13 = v9 + v12;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  *(void *)(v0 + 272) = v14;
  *(void *)(v0 + 280) = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v14(v2, v13, v4);
  uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(void *)(v0 + 288) = v15;
  *(void *)(v0 + 296) = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v15(v2, 1, v6) == 1)
  {
    uint64_t v16 = *(void *)(v0 + 200);
    uint64_t v17 = *(void *)(v0 + 176);
    uint64_t v18 = *(void *)(v0 + 184);
    sub_24E8649E8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 208) + 32))(*(void *)(v0 + 224), *(void *)(v0 + 200), *(void *)(v0 + 168));
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_24E578578;
  uint64_t v22 = *(void *)(v0 + 144);
  return MEMORY[0x270FA1E80](v22, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_24E578578()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E578E58;
  }
  else {
    uint64_t v2 = sub_24E57868C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E57868C()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 240);
    uint64_t v4 = *(void *)(v0 + 248);
    uint64_t v6 = *(void *)(v0 + 232);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 136);
    (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 168));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v7);
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 256))(*(void *)(v0 + 16), 1, 1, *(void *)(v0 + 80));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 24);
    uint64_t v11 = *(void *)(v0 + 32);
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*(void *)(v0 + 160), v1, v3);
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 + *(int *)(v12 + 72))
                                                            + **(int **)(v11 + *(int *)(v12 + 72)));
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v13;
    void *v13 = v0;
    v13[1] = sub_24E5788EC;
    uint64_t v14 = *(void *)(v0 + 248);
    uint64_t v15 = *(void *)(v0 + 160);
    uint64_t v16 = *(void *)(v0 + 96);
    return v17(v16, v14, v15);
  }
}

uint64_t sub_24E5788EC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E5789E8, 0, 0);
}

uint64_t sub_24E5789E8()
{
  uint64_t v35 = *(void *)(v0 + 232);
  uint64_t v36 = *(void *)(v0 + 248);
  uint64_t v33 = *(void *)(v0 + 160);
  uint64_t v34 = *(void *)(v0 + 240);
  uint64_t v31 = *(void *)(v0 + 152);
  uint64_t v32 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v30 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 56);
  sub_24E8649E8();
  swift_getAssociatedConformanceWitness();
  sub_24E864658();
  swift_getAssociatedConformanceWitness();
  char v3 = sub_24E863BF8();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v32);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  if (v3)
  {
LABEL_4:
    uint64_t v7 = *(void *)(v0 + 216);
    uint64_t v8 = *(void *)(v0 + 208);
    uint64_t v9 = *(void *)(v0 + 176);
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v11 = *(void *)(v0 + 168);
    uint64_t v12 = *(void *)(v0 + 88);
    uint64_t v37 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v14 = *(void *)(v0 + 16);
    uint64_t v15 = *(void *)(v0 + 32) + *(int *)(v0 + 328);
    (*(void (**)(void, uint64_t))(v8 + 8))(*(void *)(v0 + 224), v11);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v15, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v15, v7, v11);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v14, v37, v13);
    (*(void (**)(void, void, uint64_t, void))(v0 + 256))(*(void *)(v0 + 16), 0, 1, *(void *)(v0 + 80));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 288);
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v6 = *(void *)(v0 + 168);
  (*(void (**)(uint64_t, void, void))(v0 + 272))(v5, *(void *)(v0 + 32) + *(int *)(v0 + 328), *(void *)(v0 + 176));
  if (v4(v5, 1, v6) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));
    goto LABEL_4;
  }
  uint64_t v18 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 256);
  uint64_t v19 = *(void *)(v0 + 248);
  uint64_t v21 = *(void *)(v0 + 208);
  uint64_t v20 = *(void *)(v0 + 216);
  uint64_t v22 = *(void *)(v0 + 168);
  uint64_t v24 = *(void *)(v0 + 88);
  uint64_t v23 = *(void *)(v0 + 96);
  uint64_t v25 = *(void *)(v0 + 80);
  (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v19, v23, v25);
  v18(v19, 0, 1, v25);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  objc_super v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v28;
  void *v28 = v0;
  v28[1] = sub_24E578578;
  uint64_t v29 = *(void *)(v0 + 144);
  return MEMORY[0x270FA1E80](v29, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_24E578E58()
{
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[29];
  (*(void (**)(void, void))(v0[26] + 8))(v0[28], v0[21]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24E578F6C(uint64_t a1, void *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E56A260;
  return sub_24E577FE0(a1, a2);
}

uint64_t sub_24E579014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[3] = AssociatedTypeWitness;
  v6[4] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = swift_task_alloc();
  _OWORD v6[5] = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  v6[6] = v14;
  void *v14 = v6;
  v14[1] = sub_24E5C54B8;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v13);
}

uint64_t sub_24E579168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(MEMORY[0x270FA5388](a1) + 48);
  uint64_t v23 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v21 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v3, v12);
  sub_24E8640E8();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v3 + *(int *)(a1 + 60), AssociatedTypeWitness);
  uint64_t v19 = (uint64_t)v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, v3 + *(int *)(a1 + 64), v5);
  sub_24E577E04((uint64_t)v18, (uint64_t)v11, v19, *(void *)(v3 + *(int *)(a1 + 68)), *(void *)(v3 + *(int *)(a1 + 68) + 8), v5, v26);
  return swift_retain();
}

uint64_t sub_24E57943C(uint64_t a1, uint64_t a2)
{
  return sub_24E595910(a1, a2, (void (*)(void))sub_24E579168);
}

uint64_t combineLatest<A, B>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_24E59288C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void, void *))type metadata accessor for AsyncCombineLatest2Sequence, a7);
}

uint64_t AsyncCombineLatest2Sequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = sub_24E864388();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v15 - v8;
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  v15[0] = *(void *)(a1 + 16);
  v15[1] = v5;
  v15[2] = v5;
  v15[3] = v10;
  void v15[4] = v11;
  _OWORD v15[5] = v11;
  type metadata accessor for CombineLatestStorage();
  uint64_t v12 = v2 + *(int *)(a1 + 52);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v9, 1, 1, v5);
  swift_allocObject();
  uint64_t v13 = sub_24E5977B4(v2, v12, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_24E5795F8((uint64_t)v13, a2);
}

uint64_t type metadata accessor for CombineLatestStorage()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5795F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for AsyncCombineLatest2Sequence.Iterator.InternalClass();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *a2 = result;
  return result;
}

void sub_24E579674()
{
  uint64_t v1 = v0[2];
  uint64_t v8 = *(void *)(*v0 + 80);
  uint64_t v9 = *(void *)(*v0 + 88);
  uint64_t v10 = *(void *)(*v0 + 96);
  uint64_t v11 = *(void *)(*v0 + 104);
  uint64_t v12 = *(void *)(*v0 + 112);
  uint64_t v13 = *(void *)(*v0 + 120);
  type metadata accessor for CombineLatestStateMachine();
  uint64_t v14 = v8;
  uint64_t v15 = v9;
  uint64_t v16 = v10;
  uint64_t v17 = v11;
  uint64_t v18 = v12;
  uint64_t v19 = v13;
  type metadata accessor for CombineLatestStateMachine.IteratorDeinitializedAction();
  sub_24E864388();
  uint64_t v2 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v2);
  sub_24E5ABE98(&v14);
  os_unfair_lock_unlock(v2);
  uint64_t v3 = v14;
  if (v14)
  {
    uint64_t v4 = *(void *)(v15 + 16);
    if (v4)
    {
      sub_24E863F68();
      sub_24E5AB52C();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v5 = 0;
      do
      {
        ++v5;
        uint64_t v6 = swift_allocError();
        sub_24E863B28();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
        swift_allocError();
        *uint64_t v7 = v6;
        swift_continuation_throwingResumeWithError();
      }
      while (v4 != v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    sub_24E864068();
    sub_24E5ABF14(v3);
    swift_release();
  }
}

uint64_t sub_24E5798F4()
{
  return sub_24E592CB0(sub_24E579674);
}

uint64_t sub_24E57990C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = swift_getAssociatedTypeWitness();
  v2[5] = swift_getAssociatedTypeWitness();
  v2[6] = sub_24E864388();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v2[7] = TupleTypeMetadata3;
  uint64_t v4 = sub_24E864388();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = *(void *)(TupleTypeMetadata3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E579B14, 0, 0);
}

uint64_t sub_24E579B14()
{
  uint64_t v1 = *(void **)(v0[3] + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24E579BF0;
  v2[2] = v0[10];
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_24E57A258, 0, 0);
}

uint64_t sub_24E579BF0()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E57A184;
  }
  else {
    uint64_t v2 = sub_24E579D04;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E579D04()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[11] + 48))(v1, 1, v2) == 1)
  {
    uint64_t v3 = v0[2];
    (*(void (**)(uint64_t, void))(v0[9] + 8))(v1, v0[8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v3, 1, 1, TupleTypeMetadata2);
  }
  else
  {
    uint64_t v5 = v0[14];
    uint64_t v34 = v0[13];
    uint64_t v36 = v0[12];
    uint64_t v7 = v0[5];
    uint64_t v6 = v0[6];
    uint64_t v8 = *(int *)(v2 + 48);
    uint64_t v9 = v5 + v8;
    uint64_t v25 = v5 + v8;
    uint64_t v10 = *(int *)(v2 + 64);
    uint64_t v32 = v5 + v10;
    uint64_t v33 = v0[2];
    uint64_t v11 = v1 + v8;
    uint64_t v31 = v1 + v10;
    uint64_t v38 = *(void *)(v0[4] - 8);
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v38 + 32);
    uint64_t v12 = v1;
    uint64_t v13 = v0[4];
    v29(v5, v12);
    uint64_t v37 = *(void *)(v7 - 8);
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32);
    v30(v9, v11, v7);
    uint64_t v24 = v6;
    uint64_t v35 = *(void *)(v6 - 8);
    objc_super v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
    v28(v32, v31, v6);
    uint64_t v14 = v13;
    uint64_t v15 = v7;
    uint64_t v16 = swift_getTupleTypeMetadata2();
    uint64_t v26 = v33 + *(int *)(v16 + 48);
    uint64_t v27 = v16;
    uint64_t v17 = v34 + *(int *)(v2 + 48);
    uint64_t v18 = v34 + *(int *)(v2 + 64);
    (*(void (**)(void))(v38 + 16))();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v17, v25, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v18, v32, v6);
    ((void (*)(uint64_t, uint64_t, uint64_t))v29)(v33, v34, v13);
    uint64_t v19 = v36 + *(int *)(v2 + 48);
    uint64_t v20 = v36 + *(int *)(v2 + 64);
    ((void (*)(void))v29)();
    v30(v19, v25, v15);
    v28(v20, v32, v24);
    v30(v26, v19, v15);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 56))(v33, 0, 1);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v21(v20, v24);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v14);
    v21(v18, v24);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v17, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_24E57A184()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E57A210(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_24E57A258, 0, 0);
}

uint64_t sub_24E57A258()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_24E864388();
  swift_getTupleTypeMetadata3();
  sub_24E864388();
  *uint64_t v1 = v0;
  v1[1] = sub_24E57A3D0;
  uint64_t v2 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2338](v2, &unk_2698F1FB0);
}

uint64_t sub_24E57A3D0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E5C54A8, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t AsyncCombineLatest2Sequence.Iterator.next()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_24E57A524, 0, 0);
}

uint64_t sub_24E57A524()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E5C54B0;
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_24E57990C(v2);
}

uint64_t sub_24E57A5C0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_24E56A260;
  return MEMORY[0x270FA2498](sub_24E57A524, 0, 0);
}

uint64_t sub_24E57A66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[3] = AssociatedTypeWitness;
  v6[4] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = swift_task_alloc();
  _OWORD v6[5] = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  v6[6] = v14;
  void *v14 = v6;
  v14[1] = sub_24E5C54B8;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v13);
}

uint64_t sub_24E57A7C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  AsyncCombineLatest2Sequence.makeAsyncIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v4(v2, a1);
}

uint64_t sub_24E57A820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v7 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v8 = (char *)a4 + *(int *)(v7 + 76);
  uint64_t v9 = sub_24E864388();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  *((unsigned char *)a4 + *(int *)(v7 + 80)) = a3;
  return result;
}

id sub_24E57A8DC(void *a1)
{
  uint64_t v3 = a1[2];
  uint64_t v2 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v89 = AssociatedTypeWitness;
  uint64_t v9 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v88 = swift_getAssociatedTypeWitness();
  uint64_t v10 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v98 = v3;
  uint64_t v99 = v2;
  uint64_t v100 = v4;
  uint64_t v101 = swift_getAssociatedTypeWitness();
  uint64_t v102 = v5;
  uint64_t v103 = v7;
  uint64_t v104 = v8;
  uint64_t v91 = v10;
  uint64_t v92 = v9;
  uint64_t v11 = v97;
  uint64_t v94 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v87 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](TupleTypeMetadata3);
  unint64_t v90 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  id v93 = (char *)&v74 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (uint64_t *)((char *)&v74 - v17);
  MEMORY[0x270FA5388](v16);
  id v96 = (char *)&v74 - v19;
  uint64_t v98 = v3;
  uint64_t v99 = v2;
  uint64_t v100 = v4;
  uint64_t v101 = v5;
  uint64_t v102 = v7;
  uint64_t v103 = v8;
  uint64_t v20 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (id *)((char *)&v74 - v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)&v74 - v22, v11, v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v25 = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      id v82 = *v23;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
      sub_24E864388();
      swift_getTupleTypeMetadata3();
      sub_24E862108();
      uint64_t v29 = v11;
      uint64_t v30 = TupleTypeMetadata3;
      uint64_t v31 = (char *)v23 + *(int *)(swift_getTupleTypeMetadata3() + 48);
      swift_release();
      uint64_t v32 = *(int *)(v30 + 48);
      uint64_t v33 = &v96[v32];
      uint64_t v88 = (uint64_t)&v96[v32];
      uint64_t v34 = *(int *)(v30 + 64);
      uint64_t v35 = &v96[v34];
      unint64_t v76 = &v96[v34];
      uint64_t v36 = &v31[v32];
      uint64_t v37 = &v31[v34];
      uint64_t v86 = *(void *)(v92 - 8);
      uint64_t v38 = v31;
      uint64_t v39 = v92;
      (*(void (**)(char *, char *))(v86 + 32))(v96, v38);
      uint64_t v89 = *(void *)(v91 - 8);
      unint64_t v40 = v36;
      uint64_t v41 = v91;
      (*(void (**)(char *, char *))(v89 + 32))(v33, v40);
      uint64_t v85 = *(void *)(v94 - 8);
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v35, v37, v94);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v29, v20);
      swift_storeEnumTagMultiPayload();
      os_log_type_t v81 = (char *)v18 + *(int *)(v30 + 48);
      uint64_t v42 = v81;
      unint64_t v43 = (char *)v18 + *(int *)(v30 + 64);
      char v80 = v43;
      uint64_t v44 = v86;
      v84 = *(void (**)(void))(v86 + 16);
      uint64_t v97 = v86 + 16;
      uint64_t v45 = v39;
      ((void (*)(uint64_t *, char *, uint64_t))v84)(v18, v96, v39);
      uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
      v83(v42, v88, v41);
      uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
      id v47 = v76;
      v46(v43, v76, v94);
      unint64_t v75 = v46;
      uint64_t v78 = *v18;
      uint64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
      uint64_t v86 = v44 + 8;
      uint64_t v79 = v48;
      v48((char *)v18, v39);
      uint64_t v49 = &v93[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v50 = TupleTypeMetadata3;
      unint64_t v77 = &v93[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v51 = v77;
      v84();
      v83(v49, v88, v41);
      uint64_t v52 = v94;
      v46(v51, v47, v94);
      uint64_t v74 = *(void *)v49;
      uint64_t v53 = *(void (**)(char *, uint64_t))(v89 + 8);
      v89 += 8;
      v53(v49, v41);
      uint64_t v54 = v90;
      uint64_t v55 = &v90[*(int *)(v50 + 48)];
      objc_super v56 = &v90[*(int *)(v50 + 64)];
      ((void (*)(char *, char *, uint64_t))v84)(v90, v96, v39);
      v83(v55, v88, v41);
      v75(v56, v47, v52);
      uint64_t v97 = *(void *)v56;
      objc_super v57 = *(void (**)(char *, uint64_t))(v85 + 8);
      uint64_t v58 = v56;
      uint64_t v59 = v78;
      v57(v58, v52);
      v53(v55, v41);
      uint64_t v60 = v45;
      uint64_t v61 = v45;
      objc_super v62 = v79;
      v79(v54, v61);
      v57(v77, v52);
      v62(v93, v60);
      v57(v80, v52);
      v53(v81, v41);
      if (!v59)
      {
        uint64_t v63 = (void *)MEMORY[0x263F8EE78];
        uint64_t v66 = v87;
        uint64_t v67 = v74;
        uint64_t v68 = v97;
        if (!v74) {
          goto LABEL_18;
        }
        goto LABEL_13;
      }
      uint64_t v63 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v65 = v63[2];
      unint64_t v64 = v63[3];
      uint64_t v66 = v87;
      if (v65 >= v64 >> 1) {
        uint64_t v63 = sub_24E575670((void *)(v64 > 1), v65 + 1, 1, v63);
      }
      uint64_t v67 = v74;
      uint64_t v68 = v97;
      v63[2] = v65 + 1;
      v63[v65 + 4] = v59;
      if (v67)
      {
LABEL_13:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v63 = sub_24E575670(0, v63[2] + 1, 1, v63);
        }
        unint64_t v70 = v63[2];
        unint64_t v69 = v63[3];
        if (v70 >= v69 >> 1) {
          uint64_t v63 = sub_24E575670((void *)(v69 > 1), v70 + 1, 1, v63);
        }
        v63[2] = v70 + 1;
        v63[v70 + 4] = v67;
      }
LABEL_18:
      if (v68)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v63 = sub_24E575670(0, v63[2] + 1, 1, v63);
        }
        unint64_t v72 = v63[2];
        unint64_t v71 = v63[3];
        if (v72 >= v71 >> 1) {
          uint64_t v63 = sub_24E575670((void *)(v71 > 1), v72 + 1, 1, v63);
        }
        v63[2] = v72 + 1;
        v63[v72 + 4] = v68;
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v96, TupleTypeMetadata3);
      return v82;
    case 2:
      __break(1u);
      goto LABEL_27;
    case 3:
      swift_release();
      goto LABEL_10;
    case 4:

LABEL_10:
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v11, v20);
      swift_storeEnumTagMultiPayload();
      return 0;
    case 5:
      return (id)v25;
    case 6:
LABEL_27:
      __break(1u);
      JUMPOUT(0x24E57B30CLL);
    default:
      uint64_t v26 = sub_24E864388();
      uint64_t v27 = swift_getTupleTypeMetadata3();
      objc_super v28 = (char *)v23 + *(int *)(v27 + 48);
      (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))((char *)v23 + *(int *)(v27 + 64), v26);
      (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v28, v2);
      (*(void (**)(id *, uint64_t))(*(void *)(v3 - 8) + 8))(v23, v3);
      return 0;
  }
}

uint64_t sub_24E57B328(void **a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v73 = a2;
  os_log_type_t v81 = a1;
  uint64_t v6 = a3[7];
  uint64_t v7 = a3[4];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v82 = sub_24E864388();
  MEMORY[0x270FA5388](v82);
  unint64_t v72 = (char *)&v63 - v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = a3[3];
  uint64_t v83 = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_24E864388();
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v71 = (char *)&v63 - v12;
  uint64_t v13 = a3[5];
  uint64_t v14 = a3[2];
  uint64_t v15 = v13;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_24E864388();
  MEMORY[0x270FA5388](v17 - 8);
  unint64_t v70 = (char *)&v63 - v18;
  uint64_t v89 = v14;
  uint64_t v90 = v10;
  uint64_t v91 = v7;
  uint64_t v92 = v15;
  uint64_t v93 = v9;
  uint64_t v94 = v6;
  uint64_t v19 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  char v80 = (void **)((char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v63 - v22;
  uint64_t v77 = v24;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v74 = v4;
  v25((char *)&v63 - v22, v4, v19);
  uint64_t v78 = v19;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v75 = v16;
  unint64_t v76 = v23;
  if (EnumCaseMultiPayload)
  {
    uint64_t v50 = v15;
    uint64_t v51 = v23;
    uint64_t v52 = v9;
    uint64_t v53 = v6;
    uint64_t v54 = v83;
    uint64_t v55 = AssociatedTypeWitness;
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v58 = swift_release();
        os_log_type_t v81 = &v63;
        MEMORY[0x270FA5388](v58);
        char v80 = &v63 - 8;
        strcpy((char *)&v63 - 64, "task upstreams downstreamContinuation buffer ");
        uint64_t v85 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
        uint64_t v89 = v14;
        uint64_t v90 = v10;
        uint64_t v91 = v7;
        uint64_t v92 = v16;
        uint64_t v93 = v50;
        uint64_t v94 = v52;
        uint64_t v95 = v53;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v89 = v14;
        uint64_t v90 = v10;
        uint64_t v91 = v7;
        uint64_t v92 = v54;
        uint64_t v93 = v50;
        uint64_t v94 = v52;
        uint64_t v95 = v53;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v89 = v14;
        uint64_t v90 = v10;
        uint64_t v91 = v7;
        uint64_t v92 = v55;
        uint64_t v93 = v50;
        uint64_t v94 = v52;
        uint64_t v95 = v53;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v59 = v75;
        swift_getTupleTypeMetadata3();
        sub_24E864388();
        __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
        sub_24E864AA8();
        uint64_t v87 = sub_24E8640A8();
        uint64_t v88 = sub_24E862108();
        uint64_t v82 = (uint64_t)&v76[*(int *)(swift_getTupleTypeMetadata() + 48)];
        swift_release();
        uint64_t v89 = v14;
        uint64_t v90 = v10;
        uint64_t v91 = v7;
        uint64_t v92 = v59;
        uint64_t v93 = v50;
        uint64_t v94 = v52;
        uint64_t v95 = v53;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v89 = v14;
        uint64_t v90 = v10;
        uint64_t v91 = v7;
        uint64_t v92 = v54;
        uint64_t v93 = v50;
        uint64_t v94 = v52;
        uint64_t v95 = v53;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v89 = v14;
        uint64_t v90 = v10;
        uint64_t v91 = v7;
        uint64_t v92 = AssociatedTypeWitness;
        uint64_t v93 = v50;
        uint64_t v94 = v52;
        uint64_t v95 = v53;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v60 = swift_getTupleTypeMetadata3();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v82, v60);
        goto LABEL_7;
      case 3:
      case 4:
        (*(void (**)(char *, uint64_t))(v77 + 8))(v51, v78);
        __break(1u);
        goto LABEL_5;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_8;
      default:
LABEL_5:
        swift_release();
        os_log_type_t v81 = (void **)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
        uint64_t v89 = v14;
        uint64_t v90 = v10;
        uint64_t v91 = v7;
        uint64_t v92 = v16;
        uint64_t v93 = v50;
        uint64_t v94 = v52;
        uint64_t v95 = v53;
        char v80 = (void *)type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v89 = v14;
        uint64_t v90 = v10;
        uint64_t v91 = v7;
        uint64_t v92 = v54;
        uint64_t v93 = v50;
        uint64_t v94 = v52;
        uint64_t v95 = v53;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v89 = v14;
        uint64_t v90 = v10;
        uint64_t v91 = v7;
        uint64_t v92 = v55;
        uint64_t v93 = v50;
        uint64_t v94 = v52;
        uint64_t v95 = v53;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v56 = swift_getTupleTypeMetadata3();
        swift_getTupleTypeMetadata3();
        sub_24E862108();
        objc_super v57 = &v76[*(int *)(swift_getTupleTypeMetadata3() + 48)];
        swift_release();
        (*(void (**)(char *, uint64_t))(*(void *)(v56 - 8) + 8))(v57, v56);
LABEL_7:
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x24E57BF84);
    }
  }
  uint64_t v68 = sub_24E864388();
  uint64_t v27 = swift_getTupleTypeMetadata3();
  uint64_t v66 = &v63;
  unint64_t v69 = &v23[*(int *)(v27 + 48)];
  uint64_t v67 = &v23[*(int *)(v27 + 64)];
  MEMORY[0x270FA5388](v27);
  strcpy((char *)&v63 - 64, "task upstreams downstreamContinuation buffer ");
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
  uint64_t v89 = v14;
  uint64_t v90 = v10;
  uint64_t v91 = v7;
  uint64_t v92 = v16;
  uint64_t v93 = v15;
  uint64_t v94 = v9;
  uint64_t v95 = v6;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v89 = v14;
  uint64_t v90 = v10;
  uint64_t v64 = v7;
  uint64_t v91 = v7;
  uint64_t v92 = v83;
  uint64_t v93 = v15;
  uint64_t v94 = v9;
  uint64_t v28 = v9;
  uint64_t v95 = v6;
  uint64_t v29 = v6;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v89 = v14;
  uint64_t v90 = v10;
  uint64_t v79 = v14;
  uint64_t v91 = v7;
  uint64_t v92 = AssociatedTypeWitness;
  uint64_t v93 = v15;
  uint64_t v94 = v28;
  uint64_t v30 = v15;
  uint64_t v31 = v28;
  uint64_t v95 = v6;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  swift_getTupleTypeMetadata3();
  sub_24E864388();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  sub_24E864AA8();
  uint64_t v87 = sub_24E8640A8();
  uint64_t v88 = sub_24E862108();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v33 = (void *)((char *)v80 + TupleTypeMetadata[12]);
  uint64_t v65 = TupleTypeMetadata[16];
  uint64_t v66 = (void **)TupleTypeMetadata[20];
  *char v80 = v81;
  uint64_t v34 = v79;
  uint64_t v89 = v79;
  uint64_t v90 = v10;
  uint64_t v35 = v10;
  uint64_t v36 = v64;
  uint64_t v37 = v75;
  uint64_t v91 = v64;
  uint64_t v92 = v75;
  uint64_t v38 = v30;
  uint64_t v93 = v30;
  uint64_t v94 = v31;
  uint64_t v39 = v29;
  uint64_t v95 = v29;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v89 = v34;
  uint64_t v90 = v35;
  uint64_t v91 = v36;
  uint64_t v92 = v83;
  uint64_t v93 = v38;
  uint64_t v94 = v31;
  uint64_t v95 = v29;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v89 = v34;
  uint64_t v90 = v35;
  uint64_t v40 = v35;
  uint64_t v91 = v36;
  uint64_t v92 = AssociatedTypeWitness;
  uint64_t v93 = v38;
  uint64_t v94 = v31;
  uint64_t v95 = v29;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v41 = swift_getTupleTypeMetadata3();
  uint64_t v42 = (void *)((char *)v33 + *(int *)(v41 + 48));
  uint64_t v63 = (void *)((char *)v33 + *(int *)(v41 + 64));
  uint64_t v43 = (uint64_t)v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v70, 1, 1, v37);
  uint64_t v61 = v31;
  uint64_t v62 = v29;
  uint64_t v44 = v79;
  sub_24E57A820(0, v43, 0, v33);
  uint64_t v45 = (uint64_t)v71;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v71, 1, 1, v83);
  uint64_t v61 = v31;
  uint64_t v62 = v39;
  sub_24E57A820(0, v45, 0, v42);
  uint64_t v46 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v72, 1, 1, AssociatedTypeWitness);
  uint64_t v61 = v31;
  uint64_t v62 = v39;
  sub_24E57A820(0, v46, 0, v63);
  id v47 = v80;
  *(void *)((char *)v80 + v65) = v73;
  swift_retain();
  swift_getTupleTypeMetadata3();
  *(void **)((char *)v66 + (void)v47) = (void *)sub_24E8620F8();
  uint64_t v48 = v78;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void *, uint64_t))(v77 + 40))(v74, v47, v48);
  (*(void (**)(char *))(*(void *)(v68 - 8) + 8))(v67);
  (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v69, v40);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v44 - 8) + 8))(v76, v44);
}

unint64_t sub_24E57BF9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v61 = a2;
  uint64_t v54 = a1;
  uint64_t v4 = a3[2];
  uint64_t v5 = a3[3];
  uint64_t v6 = a3[4];
  uint64_t v7 = a3[5];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = a3[6];
  uint64_t v10 = a3[7];
  uint64_t v56 = (void *)AssociatedTypeWitness;
  uint64_t v11 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v55 = swift_getAssociatedTypeWitness();
  uint64_t v12 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v63 = v4;
  uint64_t v64 = v5;
  uint64_t v65 = v6;
  uint64_t v66 = swift_getAssociatedTypeWitness();
  uint64_t v67 = v7;
  uint64_t v68 = v9;
  uint64_t v69 = v10;
  uint64_t v58 = v12;
  uint64_t v59 = v11;
  uint64_t v13 = v62;
  uint64_t v57 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v14 = *(void *)(TupleTypeMetadata3 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata3);
  uint64_t v16 = (uint64_t *)((char *)&v47 - v15);
  uint64_t v63 = v4;
  uint64_t v64 = v5;
  uint64_t v65 = v6;
  uint64_t v66 = v7;
  uint64_t v67 = v9;
  uint64_t v68 = v10;
  uint64_t v17 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&v47 - v19);
  (*(void (**)(char *, void *, uint64_t))(v18 + 16))((char *)&v47 - v19, v13, v17);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v53 = *v20;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
      sub_24E864388();
      swift_getTupleTypeMetadata3();
      sub_24E862108();
      uint64_t v21 = TupleTypeMetadata3;
      uint64_t v22 = swift_getTupleTypeMetadata3();
      uint64_t v23 = (char *)v20 + *(int *)(v22 + 48);
      uint64_t v55 = *(uint64_t *)((char *)v20 + *(int *)(v22 + 64));
      uint64_t v24 = *(int *)(v21 + 48);
      uint64_t v25 = (void *)((char *)v16 + v24);
      uint64_t v26 = *(int *)(v21 + 64);
      uint64_t v27 = (void *)((char *)v16 + v26);
      uint64_t v28 = &v23[v24];
      uint64_t v29 = &v23[v26];
      uint64_t v30 = *(void *)(v59 - 8);
      uint64_t v31 = *(void (**)(void))(v30 + 32);
      uint64_t v51 = v30 + 32;
      uint64_t v52 = v31;
      ((void (*)(void *))v31)(v16);
      uint64_t v32 = *(void *)(v58 - 8);
      uint64_t v33 = *(void (**)(char *, void *, uint64_t))(v32 + 32);
      uint64_t v49 = v32 + 32;
      uint64_t v50 = v33;
      ((void (*)(void *, char *))v33)(v25, v28);
      uint64_t v34 = *(void (**)(char *, void *, uint64_t))(*(void *)(v57 - 8) + 32);
      uint64_t v56 = v27;
      uint64_t v48 = v34;
      ((void (*)(void *, char *))v34)(v27, v29);
      uint64_t v35 = *(void (**)(void *, uint64_t))(v18 + 8);
      v35(v13, v17);
      swift_storeEnumTagMultiPayload();
      if (v54 == 2)
      {
        *uint64_t v56 = v61;
        uint64_t v36 = v25;
      }
      else if (v54 == 1)
      {
        uint64_t v36 = v25;
        void *v25 = v61;
      }
      else
      {
        if (v54)
        {
LABEL_17:
          swift_release();
          swift_release();
          __break(1u);
          JUMPOUT(0x24E57C674);
        }
        uint64_t v36 = v25;
        *uint64_t v16 = v61;
      }
      uint64_t v42 = v52;
      v35(v13, v17);
      uint64_t v43 = (char *)v13 + *(int *)(v22 + 48);
      uint64_t v44 = *(int *)(v22 + 64);
      void *v13 = v53;
      uint64_t v45 = &v43[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v46 = &v43[*(int *)(TupleTypeMetadata3 + 64)];
      v42();
      v50(v45, v36, v58);
      v48(v46, v56, v57);
      *(void *)((char *)v13 + v44) = v55;
      swift_storeEnumTagMultiPayload();
      return 0xF00000000000000FLL;
    case 2u:
      uint64_t v37 = swift_release();
      MEMORY[0x270FA5388](v37);
      strcpy((char *)&v47 - 64, "task upstreams downstreamContinuation buffer ");
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
      uint64_t v39 = TupleTypeMetadata3;
      uint64_t v63 = v38;
      uint64_t v64 = TupleTypeMetadata3;
      sub_24E864388();
      swift_getTupleTypeMetadata3();
      sub_24E864388();
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
      sub_24E864AA8();
      uint64_t v65 = sub_24E8640A8();
      uint64_t v66 = sub_24E862108();
      uint64_t v40 = (char *)v20 + *(int *)(swift_getTupleTypeMetadata() + 48);
      swift_release();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v40, v39);
      return v61;
    case 3u:
      goto LABEL_15;
    case 4u:
      (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v20, v17);
      goto LABEL_8;
    case 5u:
LABEL_8:
      sub_24E863F68();
      sub_24E5AB52C();
      swift_allocError();
      sub_24E863B28();
      return v61;
    case 6u:
      goto LABEL_16;
    default:
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
  }
}

uint64_t sub_24E57C690@<X0>(void *a1@<X0>, char *a2@<X1>, char *a3@<X2>, void *a4@<X3>, int **a5@<X8>)
{
  v365 = a3;
  v379 = a2;
  v376 = a1;
  v364 = a5;
  uint64_t v384 = a4[7];
  uint64_t v6 = a4[4];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v381 = (void (*)(void))AssociatedTypeWitness;
  uint64_t v8 = sub_24E864388();
  uint64_t v367 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  v322 = (char *)&v314 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v346 = (char *)&v314 - v12;
  uint64_t v353 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v321 = (char *)&v314 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  v336 = (char *)&v314 - v15;
  uint64_t v16 = a4[6];
  uint64_t v17 = a4[3];
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v355 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  v341 = (char *)&v314 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v329 = (char *)&v314 - v22;
  MEMORY[0x270FA5388](v21);
  v327 = (char *)&v314 - v23;
  uint64_t v24 = a4[5];
  v320 = a4;
  uint64_t v25 = a4[2];
  uint64_t v26 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v347 = *(void *)(TupleTypeMetadata3 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata3);
  v344 = (char *)&v314 - v27;
  v386 = (void *)sub_24E864388();
  uint64_t v383 = *(v386 - 1);
  uint64_t v28 = MEMORY[0x270FA5388](v386);
  v338 = (char *)&v314 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v330 = (char *)&v314 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  v331 = (char *)&v314 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  v323 = (int *)((char *)&v314 - v35);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v326 = (char *)&v314 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v328 = (int *)((char *)&v314 - v39);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  v333 = (char *)&v314 - v41;
  v372 = *(char **)(v26 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  v340 = (char *)&v314 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  v335 = (char *)&v314 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  v332 = (char *)&v314 - v47;
  MEMORY[0x270FA5388](v46);
  v345 = (char *)&v314 - v48;
  uint64_t v49 = (void *)sub_24E864388();
  uint64_t v382 = *(v49 - 1);
  uint64_t v50 = MEMORY[0x270FA5388](v49);
  v337 = (char *)&v314 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  v339 = (void (**)(void))((char *)&v314 - v53);
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  v342 = (char *)&v314 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  v343 = (char *)&v314 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  v325 = (char *)&v314 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  v324 = (int *)((char *)&v314 - v61);
  MEMORY[0x270FA5388](v60);
  v334 = (uint64_t *)((char *)&v314 - v62);
  uint64_t v388 = v25;
  uint64_t v389 = v17;
  uint64_t v390 = v6;
  uint64_t v391 = v26;
  uint64_t v377 = v26;
  uint64_t v392 = v24;
  uint64_t v393 = v16;
  uint64_t v63 = v384;
  uint64_t v394 = v384;
  uint64_t v64 = (void *)type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v388 = v25;
  uint64_t v389 = v17;
  uint64_t v390 = v6;
  uint64_t v391 = v18;
  uint64_t v368 = v18;
  uint64_t v392 = v24;
  uint64_t v393 = v16;
  uint64_t v394 = v63;
  uint64_t v65 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v388 = v25;
  uint64_t v389 = v17;
  uint64_t v390 = v6;
  uint64_t v391 = (uint64_t)v381;
  uint64_t v392 = v24;
  uint64_t v393 = v16;
  uint64_t v394 = v63;
  uint64_t v66 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  v378 = v64;
  uint64_t v380 = v65;
  uint64_t v373 = v66;
  uint64_t v369 = swift_getTupleTypeMetadata3();
  uint64_t v351 = *(void *)(v369 - 8);
  uint64_t v67 = MEMORY[0x270FA5388](v369);
  v357 = (uint64_t *)((char *)&v314 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v67);
  v352 = (uint64_t *)((char *)&v314 - v69);
  uint64_t v359 = v25;
  uint64_t v388 = v25;
  uint64_t v389 = v17;
  uint64_t v361 = v17;
  uint64_t v363 = v6;
  uint64_t v390 = v6;
  uint64_t v391 = v24;
  uint64_t v360 = v24;
  uint64_t v362 = v16;
  uint64_t v392 = v16;
  uint64_t v393 = v63;
  uint64_t v70 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v71 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v73 = (char **)((char *)&v314 - v72);
  uint64_t v74 = v386;
  uint64_t v75 = swift_getTupleTypeMetadata3();
  v358 = *(char **)(v75 - 8);
  uint64_t v76 = MEMORY[0x270FA5388](v75);
  uint64_t v78 = (char *)&v314 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = MEMORY[0x270FA5388](v76);
  os_log_type_t v81 = (uint64_t *)((char *)&v314 - v80);
  MEMORY[0x270FA5388](v79);
  uint64_t v83 = (char *)&v314 - v82;
  v84 = v376;
  v375 = *(char **)(v382 + 16);
  v376 = v49;
  uint64_t v366 = v382 + 16;
  ((void (*)(char *, void *, void *))v375)((char *)&v314 - v82, v84, v49);
  uint64_t v85 = (int *)&v83[*(int *)(v75 + 48)];
  uint64_t v86 = *(void (**)(char *, int *, void *))(v383 + 16);
  uint64_t v371 = v383 + 16;
  v370 = v86;
  v86((char *)v85, (int *)v379, v74);
  v374 = (int *)v75;
  uint64_t v87 = *(int *)(v75 + 64);
  v379 = v83;
  uint64_t v88 = &v83[v87];
  uint64_t v89 = *(void (**)(char *, char *, char *))(v367 + 16);
  uint64_t v90 = v365;
  uint64_t v91 = (char *)v8;
  v365 = (char *)(v367 + 16);
  v356 = v89;
  v89(&v83[v87], v90, (char *)v8);
  (*(void (**)(char **, void *, uint64_t))(v71 + 16))(v73, v385, v70);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      v341 = *v73;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
      v357 = v81;
      uint64_t v93 = sub_24E862108();
      uint64_t v94 = v369;
      v330 = (char *)v93;
      uint64_t v95 = swift_getTupleTypeMetadata3();
      id v96 = (char *)v73 + *(int *)(v95 + 48);
      v340 = (char *)v95;
      uint64_t v97 = *(int *)(v95 + 64);
      v319 = v85;
      uint64_t v98 = v70;
      uint64_t v99 = *(uint64_t *)((char *)v73 + v97);
      uint64_t v100 = *(int *)(v94 + 48);
      uint64_t v101 = (char *)v352 + v100;
      uint64_t v102 = *(int *)(v94 + 64);
      uint64_t v103 = (char *)v352 + v102;
      uint64_t v104 = &v96[v100];
      uint64_t v105 = &v96[v102];
      v339 = (void (**)(void))*(v378 - 1);
      v339[4]();
      v338 = *(char **)(v380 - 8);
      v106 = (void (*)(char *, char *))*((void *)v338 + 4);
      v343 = v101;
      v107 = v104;
      id v108 = v357;
      v106(v101, v107);
      v337 = *(char **)(v373 - 8);
      id v109 = (void (*)(char *, char *))*((void *)v337 + 4);
      v342 = v103;
      unint64_t v110 = v374;
      v109(v103, v105);
      uint64_t v387 = v99;
      os_log_type_t v111 = v88;
      uint64_t v112 = *(char **)(v71 + 8);
      v113 = v385;
      uint64_t v350 = v71 + 8;
      ((void (*)(void *, uint64_t))v112)(v385, v98);
      uint64_t v349 = v98;
      swift_storeEnumTagMultiPayload();
      uint64_t v114 = (char *)v108 + v110[12];
      uint64_t v115 = (char *)v108 + v110[16];
      uint64_t v85 = (int *)v375;
      uint64_t v116 = v376;
      ((void (*)(uint64_t *, char *, void *))v375)(v108, v379, v376);
      v370(v114, v319, v386);
      uint64_t v348 = (uint64_t)v91;
      v356(v115, v111, v91);
      uint64_t v117 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))*((void *)v372 + 6);
      int v118 = v117(v108, 1, v377);
      v335 = v112;
      v331 = v114;
      if (v118 == 1)
      {
        uint64_t v85 = (int *)(v355 + 48);
        uint64_t v119 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v355 + 48);
        int v120 = v119(v114, 1, v368);
        uint64_t v121 = v353;
        if (v120 != 1)
        {
          uint64_t v85 = v328;
          v370((char *)v328, (int *)v114, v386);
          if ((*(unsigned int (**)(char *, uint64_t, void (*)(void)))(v121 + 48))(v115, 1, v381) == 1)
          {
            uint64_t v202 = v355;
            v203 = v327;
            v381 = *(void (**)(void))(v355 + 32);
            uint64_t v371 = v355 + 32;
            v381();
            uint64_t v85 = v324;
            ((void (*)(int *, char *, void *))v375)(v324, (char *)v352 + *((int *)v378 + 19), v376);
            uint64_t v204 = v377;
            if (v117((uint64_t *)v85, 1, v377) != 1)
            {
              uint64_t v205 = v373;
              v206 = v342;
              v375 = &v342[*(int *)(v373 + 76)];
              uint64_t v207 = TupleTypeMetadata3;
              v208 = v344;
              v209 = &v344[*(int *)(TupleTypeMetadata3 + 48)];
              v210 = &v344[*(int *)(TupleTypeMetadata3 + 64)];
              (*((void (**)(char *, int *, uint64_t))v372 + 4))(v344, v85, v204);
              v211 = v209;
              uint64_t v212 = v368;
              (*(void (**)(char *, char *, uint64_t))(v202 + 16))(v211, v203, v368);
              v213 = v210;
              uint64_t v141 = v205;
              v356(v213, v375, (char *)v348);
              sub_24E8620C8();
              v214 = v208;
              uint64_t v138 = v206;
              (*(void (**)(char *, uint64_t))(v347 + 8))(v214, v207);
              (*((void (**)(char *, int *))v358 + 1))(v379, v374);
              v215 = &v343[*(int *)(v380 + 76)];
              uint64_t v143 = v383;
              uint64_t v142 = v386;
              (*(void (**)(char *, void *))(v383 + 8))(v215, v386);
              ((void (*)(char *, char *, uint64_t))v381)(v215, v203, v212);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v202 + 56))(v215, 0, 1, v212);
              v113 = v385;
              goto LABEL_26;
            }
            goto LABEL_65;
          }
LABEL_64:
          swift_release();
          (*(void (**)(int *, uint64_t))(v355 + 8))(v85, v368);
          __break(1u);
LABEL_65:
          swift_release();
          __break(1u);
          goto LABEL_66;
        }
        uint64_t v122 = v353;
        uint64_t v123 = v381;
        if ((*(unsigned int (**)(char *, uint64_t, void (*)(void)))(v353 + 48))(v115, 1, v381) != 1)
        {
          uint64_t v124 = *(void (**)(char *, char *, char *))(v122 + 32);
          v365 = (char *)(v122 + 32);
          v356 = v124;
          v124(v336, v115, (char *)v123);
          uint64_t v125 = v325;
          ((void (*)(char *, char *, void *))v375)(v325, (char *)v352 + *((int *)v378 + 19), v376);
          if (v117((uint64_t *)v125, 1, v377) != 1)
          {
            uint64_t v126 = v326;
            v370(v326, (int *)&v343[*(int *)(v380 + 76)], v386);
            uint64_t v127 = v368;
            int v128 = v119(v126, 1, v368);
            uint64_t v129 = v373;
            if (v128 != 1)
            {
              uint64_t v130 = v353;
              uint64_t v131 = v346;
              (*(void (**)(char *, char *, void (*)(void)))(v353 + 16))(v346, v336, v123);
              v375 = *(char **)(v130 + 56);
              ((void (*)(char *, void, uint64_t, void (*)(void)))v375)(v131, 0, 1, v123);
              uint64_t v132 = TupleTypeMetadata3;
              v133 = v344;
              v134 = &v344[*(int *)(TupleTypeMetadata3 + 48)];
              v135 = &v344[*(int *)(TupleTypeMetadata3 + 64)];
              (*((void (**)(char *, char *, uint64_t))v372 + 4))(v344, v125, v377);
              (*(void (**)(char *, char *, uint64_t))(v355 + 32))(v134, v126, v127);
              uint64_t v136 = v367;
              uint64_t v137 = v348;
              (*(void (**)(char *, char *, uint64_t))(v367 + 32))(v135, v131, v348);
              sub_24E8620C8();
              (*(void (**)(char *, uint64_t))(v347 + 8))(v133, v132);
              (*((void (**)(char *, int *))v358 + 1))(v379, v374);
              uint64_t v138 = v342;
              uint64_t v139 = &v342[*(int *)(v129 + 76)];
              (*(void (**)(char *, uint64_t))(v136 + 8))(v139, v137);
              v140 = v381;
              v356(v139, v336, (char *)v381);
              ((void (*)(char *, void, uint64_t, void (*)(void)))v375)(v139, 0, 1, v140);
              uint64_t v141 = v129;
              v113 = v385;
              uint64_t v142 = v386;
              uint64_t v143 = v383;
LABEL_26:
              v196 = v376;
              uint64_t v195 = v382;
              v193 = v352;
              goto LABEL_27;
            }
            goto LABEL_62;
          }
LABEL_61:
          swift_release();
          __break(1u);
LABEL_62:
          swift_release();
          __break(1u);
          goto LABEL_63;
        }
LABEL_60:
        swift_release();
        __break(1u);
        goto LABEL_61;
      }
      uint64_t v78 = (char *)v334;
      ((void (*)(uint64_t *, uint64_t *, void *))v85)(v334, v108, v116);
      uint64_t v91 = *(char **)(v355 + 48);
      uint64_t v179 = v368;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v91)(v114, 1, v368) != 1) {
        goto LABEL_55;
      }
      int v180 = (*(uint64_t (**)(char *, uint64_t, void (*)(void)))(v353 + 48))(v115, 1, v381);
      uint64_t v85 = (int *)v372;
      v181 = v333;
      v182 = v345;
      if (v180 != 1) {
        goto LABEL_56;
      }
      uint64_t v183 = v377;
      v381 = (void (*)(void))*((void *)v372 + 4);
      ((void (*)(char *, char *, uint64_t))v381)(v345, v78, v377);
      v184 = v332;
      (*((void (**)(char *, char *, uint64_t))v85 + 2))(v332, v182, v183);
      v370(v181, (int *)&v343[*(int *)(v380 + 76)], v386);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v91)(v181, 1, v179) != 1)
      {
        v185 = v181;
        v186 = &v342[*(int *)(v373 + 76)];
        uint64_t v187 = TupleTypeMetadata3;
        v188 = v344;
        v189 = &v344[*(int *)(TupleTypeMetadata3 + 48)];
        v190 = &v344[*(int *)(TupleTypeMetadata3 + 64)];
        v191 = v184;
        uint64_t v192 = v377;
        ((void (*)(char *, char *, uint64_t))v381)(v344, v191, v377);
        (*(void (**)(char *, char *, uint64_t))(v355 + 32))(v189, v185, v179);
        v356(v190, v186, (char *)v348);
        sub_24E8620C8();
        (*(void (**)(char *, uint64_t))(v347 + 8))(v188, v187);
        (*((void (**)(char *, int *))v358 + 1))(v379, v374);
        v193 = v352;
        v194 = (char *)v352 + *((int *)v378 + 19);
        uint64_t v195 = v382;
        v196 = v376;
        (*(void (**)(char *, void *))(v382 + 8))(v194, v376);
        ((void (*)(char *, char *, uint64_t))v381)(v194, v345, v192);
        uint64_t v197 = v192;
        uint64_t v138 = v342;
        uint64_t v141 = v373;
        (*((void (**)(char *, void, uint64_t, uint64_t))v372 + 7))(v194, 0, 1, v197);
        uint64_t v142 = v386;
        uint64_t v143 = v383;
LABEL_27:
        (*(void (**)(char *, void *))(v143 + 8))(v331, v142);
        (*(void (**)(uint64_t *, void *))(v195 + 8))(v357, v196);
        ((void (*)(void *, uint64_t))v335)(v113, v349);
        v216 = (char *)v113 + *((int *)v340 + 12);
        uint64_t v217 = *((int *)v340 + 16);
        void *v113 = v341;
        uint64_t v218 = v369;
        v219 = &v216[*(int *)(v369 + 48)];
        v220 = &v216[*(int *)(v369 + 64)];
        v339[2]();
        (*((void (**)(char *, char *, uint64_t))v338 + 2))(v219, v343, v380);
        (*((void (**)(char *, char *, uint64_t))v337 + 2))(v220, v138, v141);
        *(void *)((char *)v113 + v217) = v387;
        swift_storeEnumTagMultiPayload();
        uint64_t v388 = v359;
        uint64_t v389 = v361;
        uint64_t v390 = v363;
        uint64_t v391 = v360;
        uint64_t v392 = v362;
        uint64_t v393 = v384;
        uint64_t v221 = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
        (*(void (**)(int **, uint64_t, uint64_t, uint64_t))(*(void *)(v221 - 8) + 56))(v364, 1, 1, v221);
        return (*(uint64_t (**)(uint64_t *, uint64_t))(v351 + 8))(v193, v218);
      }
      goto LABEL_57;
    case 2:
      v319 = v85;
      v345 = v78;
      uint64_t v350 = v71;
      uint64_t v349 = v70;
      uint64_t v348 = v8;
      v332 = *v73;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v314 - 64, "task upstreams downstreamContinuation buffer ");
      uint64_t v144 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
      uint64_t v145 = v369;
      uint64_t v388 = v144;
      uint64_t v389 = v369;
      uint64_t v146 = sub_24E864388();
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
      uint64_t v318 = v146;
      sub_24E864AA8();
      uint64_t v390 = sub_24E8640A8();
      uint64_t v391 = sub_24E862108();
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      v148 = (char *)v73 + TupleTypeMetadata[12];
      uint64_t v91 = *(char **)((char *)v73 + TupleTypeMetadata[16]);
      v324 = TupleTypeMetadata;
      v149 = *(char **)((char *)v73 + TupleTypeMetadata[20]);
      uint64_t v150 = *(int *)(v145 + 48);
      v151 = (uint64_t *)((char *)v357 + v150);
      uint64_t v152 = *(int *)(v145 + 64);
      v153 = (uint64_t *)((char *)v357 + v152);
      v154 = &v148[v150];
      v155 = &v148[v152];
      uint64_t v316 = *(v378 - 1);
      (*(void (**)(void))(v316 + 32))();
      uint64_t v317 = *(void *)(v380 - 8);
      v156 = *(void (**)(uint64_t *, char *))(v317 + 32);
      v352 = v151;
      v156(v151, v154);
      uint64_t v157 = *(void *)(v373 - 8);
      v158 = *(void (**)(uint64_t *, char *))(v157 + 32);
      v334 = v153;
      v158(v153, v155);
      v333 = v149;
      uint64_t v388 = (uint64_t)v149;
      uint64_t v78 = (char *)sub_24E862108();
      swift_getWitnessTable();
      uint64_t v85 = (int *)&v388;
      if ((sub_24E8641C8() & 1) == 0)
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        swift_release();
        (*((void (**)(char *, uint64_t))v372 + 1))(v78, v377);
        __break(1u);
LABEL_56:
        swift_release();
        v311 = (void (*)(char *, uint64_t))*((void *)v85 + 1);
        v85 += 2;
        v311(v78, v377);
        __break(1u);
LABEL_57:
        swift_release();
        __break(1u);
        goto LABEL_58;
      }
      uint64_t v315 = v157;
      v328 = (int *)v91;
      v159 = *(char **)(v350 + 8);
      v350 += 8;
      v326 = v159;
      ((void (*)(void *, uint64_t))v159)(v385, v349);
      swift_storeEnumTagMultiPayload();
      v160 = v374;
      uint64_t v85 = (int *)v375;
      v161 = v345;
      v162 = &v345[v374[12]];
      v163 = &v345[v374[16]];
      v164 = v376;
      ((void (*)(char *, char *, void *))v375)(v345, v379, v376);
      v370(v162, v319, v386);
      v356(v163, v88, (char *)v348);
      uint64_t v91 = v372;
      v165 = (char *)*((void *)v372 + 6);
      v344 = v372 + 48;
      v336 = v165;
      int v166 = ((uint64_t (*)(char *, uint64_t, uint64_t))v165)(v161, 1, v377);
      v314 = v78;
      v327 = v162;
      if (v166 != 1)
      {
        ((void (*)(char *, char *, void *))v85)(v343, v161, v164);
        uint64_t v198 = v355;
        v325 = *(char **)(v355 + 48);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v325)(v162, 1, v368) == 1)
        {
          v319 = *(int **)(v353 + 48);
          if (((unsigned int (*)(char *, uint64_t, void (*)(void)))v319)(v163, 1, v381) == 1)
          {
            (*((void (**)(char *, int *))v358 + 1))(v379, v160);
            v171 = v378;
            v199 = v357;
            v200 = (char *)v357 + *((int *)v378 + 19);
            uint64_t v173 = v382;
            v176 = v376;
            (*(void (**)(char *, void *))(v382 + 8))(v200, v376);
            v201 = v372;
            uint64_t v170 = v377;
            (*((void (**)(char *, char *, uint64_t))v372 + 4))(v200, v343, v377);
            (*((void (**)(char *, void, uint64_t, uint64_t))v201 + 7))(v200, 0, 1, v170);
            v172 = v386;
            uint64_t v174 = v383;
            uint64_t v175 = v198;
            goto LABEL_32;
          }
LABEL_59:
          swift_release();
          swift_release();
          (*((void (**)(char *, uint64_t))v372 + 1))(v343, v377);
          __break(1u);
          goto LABEL_60;
        }
LABEL_58:
        swift_release();
        swift_release();
        (*((void (**)(char *, uint64_t))v91 + 1))(v343, v377);
        __break(1u);
        goto LABEL_59;
      }
      v325 = *(char **)(v355 + 48);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v325)(v162, 1, v368) == 1)
      {
        uint64_t v167 = v353;
        v168 = v381;
        v319 = *(int **)(v353 + 48);
        if (((unsigned int (*)(char *, uint64_t, void (*)(void)))v319)(v163, 1, v381) == 1)
        {
LABEL_63:
          swift_release();
          swift_release();
          __break(1u);
          goto LABEL_64;
        }
        (*((void (**)(char *, int *))v358 + 1))(v379, v160);
        v169 = (char *)v334 + *(int *)(v373 + 76);
        (*(void (**)(char *, uint64_t))(v367 + 8))(v169, v348);
        (*(void (**)(char *, char *, void (*)(void)))(v167 + 32))(v169, v163, v168);
        (*(void (**)(char *, void, uint64_t, void (*)(void)))(v167 + 56))(v169, 0, 1, v168);
        uint64_t v170 = v377;
        v171 = v378;
        v172 = v386;
        uint64_t v173 = v382;
        uint64_t v174 = v383;
        uint64_t v175 = v355;
        v176 = v376;
      }
      else
      {
        uint64_t v85 = v323;
        v222 = v386;
        v370((char *)v323, (int *)v162, v386);
        v319 = *(int **)(v353 + 48);
        if (((unsigned int (*)(char *, uint64_t, void (*)(void)))v319)(v163, 1, v381) != 1)
        {
LABEL_66:
          swift_release();
          swift_release();
          (*(void (**)(int *, uint64_t))(v355 + 8))(v85, v368);
          __break(1u);
          JUMPOUT(0x24E57F6E0);
        }
        (*((void (**)(char *, int *))v358 + 1))(v379, v160);
        v223 = (char *)v352 + *(int *)(v380 + 76);
        uint64_t v174 = v383;
        (*(void (**)(char *, void *))(v383 + 8))(v223, v222);
        uint64_t v224 = v355;
        uint64_t v225 = v368;
        (*(void (**)(char *, int *, uint64_t))(v355 + 32))(v223, v85, v368);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v224 + 56))(v223, 0, 1, v225);
        v172 = v222;
        uint64_t v175 = v224;
        uint64_t v170 = v377;
        v171 = v378;
        v176 = v376;
        uint64_t v173 = v382;
      }
      v199 = v357;
LABEL_32:
      v226 = *(int **)(v174 + 8);
      uint64_t v383 = v174 + 8;
      ((void (*)(char *, void *))v226)(v327, v172);
      v227 = *(void (**)(char *, void *))(v173 + 8);
      v227(v345, v176);
      v228 = (char *)v199 + *((int *)v171 + 19);
      v229 = v342;
      v379 = v228;
      ((void (*)(char *))v375)(v342);
      int v230 = ((uint64_t (*)(char *, uint64_t, uint64_t))v336)(v229, 1, v170);
      uint64_t v382 = v173 + 8;
      if (v230 == 1)
      {
        v231 = v176;
        v374 = v226;
        uint64_t v232 = v175;
        v227(v229, v176);
        v233 = (void (**)(char *, uint64_t))v372;
      }
      else
      {
        v233 = (void (**)(char *, uint64_t))v372;
        v234 = v335;
        v374 = (int *)*((void *)v372 + 4);
        v358 = v372 + 32;
        ((void (*)(char *, char *, uint64_t))v374)(v335, v229, v170);
        v235 = v331;
        v370(v331, (int *)((char *)v352 + *(int *)(v380 + 76)), v172);
        uint64_t v236 = v175;
        v237 = v172;
        uint64_t v238 = v368;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v325)(v235, 1, v368) == 1)
        {
          v233[1](v234, v170);
          v374 = v226;
          ((void (*)(char *, void *))v226)(v235, v237);
          v172 = v237;
          uint64_t v232 = v175;
        }
        else
        {
          v239 = *(char **)(v175 + 32);
          v240 = v329;
          uint64_t v355 = v175 + 32;
          v345 = v239;
          ((void (*)(char *, char *, uint64_t))v239)(v329, v235, v238);
          v241 = v322;
          uint64_t v242 = v348;
          v356(v322, (char *)v334 + *(int *)(v373 + 76), (char *)v348);
          uint64_t v243 = v353;
          v244 = v381;
          if (((unsigned int (*)(char *, uint64_t))v319)(v241, 1) != 1)
          {
            v267 = *(void (**)(char *, char *, void (*)(void)))(v243 + 32);
            v268 = v244;
            v267(v321, v241, v244);
            v269 = v267;
            v270 = (char **)v385;
            ((void (*)(void *, uint64_t))v326)(v385, v349);
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
            uint64_t v271 = v369;
            uint64_t v272 = swift_getTupleTypeMetadata3();
            v273 = (char *)v270 + *(int *)(v272 + 48);
            uint64_t v274 = *(int *)(v272 + 64);
            *v270 = v332;
            v275 = &v273[*(int *)(v271 + 48)];
            v276 = &v273[*(int *)(v271 + 64)];
            (*(void (**)(char *, uint64_t *, void *))(v316 + 16))(v273, v357, v378);
            (*(void (**)(char *, uint64_t *, uint64_t))(v317 + 16))(v275, v352, v380);
            (*(void (**)(char *, uint64_t *, uint64_t))(v315 + 16))(v276, v334, v373);
            *(char **)((char *)v270 + v274) = v333;
            swift_storeEnumTagMultiPayload();
            __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
            sub_24E864AA8();
            sub_24E8640A8();
            TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
            v278 = v364;
            v279 = (char *)v364 + *(int *)(TupleTypeMetadata2 + 48);
            *v364 = v328;
            uint64_t v280 = TupleTypeMetadata3;
            v281 = &v279[*(int *)(TupleTypeMetadata3 + 48)];
            v282 = &v279[*(int *)(TupleTypeMetadata3 + 64)];
            ((void (*)(char *, char *, uint64_t))v374)(v279, v335, v377);
            ((void (*)(char *, char *, uint64_t))v345)(v281, v329, v238);
            v269(v282, v321, v268);
            (*(void (**)(char *, void, uint64_t, void (*)(void)))(v353 + 56))(v282, 0, 1, v268);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v347 + 56))(v279, 0, 1, v280);
            swift_storeEnumTagMultiPayload();
            uint64_t v388 = v359;
            uint64_t v389 = v361;
            uint64_t v390 = v363;
            uint64_t v391 = v360;
            uint64_t v392 = v362;
            uint64_t v393 = v384;
            uint64_t v283 = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
            (*(void (**)(int **, void, uint64_t, uint64_t))(*(void *)(v283 - 8) + 56))(v278, 0, 1, v283);
            return (*(uint64_t (**)(uint64_t *, uint64_t))(v351 + 8))(v357, v369);
          }
          v374 = v226;
          uint64_t v232 = v236;
          (*(void (**)(char *, uint64_t))(v236 + 8))(v240, v238);
          uint64_t v170 = v377;
          v233[1](v335, v377);
          (*(void (**)(char *, uint64_t))(v367 + 8))(v241, v242);
          v172 = v386;
        }
        v171 = v378;
        v231 = v376;
      }
      v245 = v339;
      ((void (*)(void (**)(void), char *, void *))v375)(v339, v379, v231);
      int v246 = ((uint64_t (*)(void (**)(void), uint64_t, uint64_t))v336)(v245, 1, v170);
      v247 = v341;
      v248 = v340;
      if (v246 == 1)
      {
        v227((char *)v245, v231);
        v249 = (char **)v385;
        v250 = v231;
      }
      else
      {
        uint64_t v382 = (uint64_t)v233[4];
        ((void (*)(char *, void (**)(void), uint64_t))v382)(v340, v245, v170);
        v251 = v330;
        v370(v330, (int *)((char *)v352 + *(int *)(v380 + 76)), v172);
        uint64_t v252 = v368;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v325)(v251, 1, v368) == 1)
        {
          v233[1](v248, v170);
          ((void (*)(char *, void *))v374)(v251, v172);
          v249 = (char **)v385;
        }
        else
        {
          uint64_t v253 = v232;
          v254 = *(void (**)(char *, char *, uint64_t))(v232 + 32);
          v254(v247, v251, v252);
          v249 = (char **)v385;
          if (*(void *)((char *)v385 + *((int *)v320 + 17)) == 2)
          {
            ((void (*)(void *, uint64_t))v326)(v385, v349);
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
            uint64_t v218 = v369;
            uint64_t v255 = swift_getTupleTypeMetadata3();
            v256 = (char *)v249 + *(int *)(v255 + 48);
            v386 = v254;
            uint64_t v257 = *(int *)(v255 + 64);
            *v249 = v332;
            v258 = &v256[*(int *)(v218 + 48)];
            v259 = &v256[*(int *)(v218 + 64)];
            v193 = v357;
            (*(void (**)(char *, uint64_t *, void *))(v316 + 16))(v256, v357, v378);
            (*(void (**)(char *, uint64_t *, uint64_t))(v317 + 16))(v258, v352, v380);
            (*(void (**)(char *, uint64_t *, uint64_t))(v315 + 16))(v259, v334, v373);
            *(char **)((char *)v249 + v257) = v333;
            swift_storeEnumTagMultiPayload();
            __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
            sub_24E864AA8();
            sub_24E8640A8();
            uint64_t v260 = swift_getTupleTypeMetadata2();
            v261 = v364;
            v262 = (char *)v364 + *(int *)(v260 + 48);
            *v364 = v328;
            uint64_t v263 = TupleTypeMetadata3;
            v264 = &v262[*(int *)(TupleTypeMetadata3 + 48)];
            v265 = &v262[*(int *)(TupleTypeMetadata3 + 64)];
            ((void (*)(char *, char *, uint64_t))v382)(v262, v340, v377);
            ((void (*)(char *, char *, uint64_t))v386)(v264, v341, v368);
            (*(void (**)(char *, uint64_t, uint64_t, void (*)(void)))(v353 + 56))(v265, 1, 1, v381);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v347 + 56))(v262, 0, 1, v263);
            swift_storeEnumTagMultiPayload();
            uint64_t v388 = v359;
            uint64_t v389 = v361;
            uint64_t v390 = v363;
            uint64_t v391 = v360;
            uint64_t v392 = v362;
            uint64_t v393 = v384;
            uint64_t v266 = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
            (*(void (**)(int **, void, uint64_t, uint64_t))(*(void *)(v266 - 8) + 56))(v261, 0, 1, v266);
            return (*(uint64_t (**)(uint64_t *, uint64_t))(v351 + 8))(v193, v218);
          }
          (*(void (**)(char *, uint64_t))(v253 + 8))(v247, v252);
          v233[1](v248, v377);
        }
        v171 = v378;
        v250 = v376;
      }
      v284 = v332;
      ((void (*)(char **, uint64_t))v326)(v249, v349);
      v285 = (char **)((char *)v249 + v324[12]);
      uint64_t v286 = v324[16];
      uint64_t v382 = v324[20];
      uint64_t v383 = v286;
      *v249 = v284;
      v376 = (void *)((char *)v285 + *(int *)(v369 + 48));
      v378 = (void *)((char *)v285 + *(int *)(v369 + 64));
      v287 = v357;
      uint64_t v288 = *v357;
      uint64_t v289 = (uint64_t)v337;
      ((void (*)(char *, char *, void *))v375)(v337, v379, v250);
      char v290 = *((unsigned char *)v287 + *((int *)v171 + 20));
      uint64_t v291 = v384;
      uint64_t v313 = v384;
      uint64_t v292 = v362;
      uint64_t v312 = v362;
      v293 = v285;
      uint64_t v294 = v288;
      uint64_t v295 = v359;
      uint64_t v296 = v361;
      uint64_t v297 = v363;
      uint64_t v298 = v360;
      sub_24E57A820(v294, v289, v290, v293);
      v299 = v352;
      uint64_t v300 = *v352;
      uint64_t v301 = v380;
      uint64_t v302 = (uint64_t)v338;
      v370(v338, (int *)((char *)v352 + *(int *)(v380 + 76)), v386);
      char v303 = *((unsigned char *)v299 + *(int *)(v301 + 80));
      uint64_t v312 = v292;
      uint64_t v313 = v291;
      sub_24E57A820(v300, v302, v303, v376);
      v304 = v334;
      uint64_t v305 = *v334;
      uint64_t v306 = v373;
      uint64_t v307 = (uint64_t)v346;
      v356(v346, (char *)v334 + *(int *)(v373 + 76), (char *)v348);
      char v308 = *((unsigned char *)v304 + *(int *)(v306 + 80));
      uint64_t v312 = v292;
      uint64_t v313 = v291;
      sub_24E57A820(v305, v307, v308, v378);
      v309 = v385;
      *(void *)((char *)v385 + v383) = v328;
      *(void *)((char *)v309 + v382) = v333;
      swift_storeEnumTagMultiPayload();
      uint64_t v388 = v295;
      uint64_t v389 = v296;
      uint64_t v390 = v297;
      uint64_t v391 = v298;
      uint64_t v392 = v292;
      uint64_t v393 = v291;
      uint64_t v310 = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
      (*(void (**)(int **, uint64_t, uint64_t, uint64_t))(*(void *)(v310 - 8) + 56))(v364, 1, 1, v310);
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v351 + 8))(v357, v369);
    case 3:
      goto LABEL_53;
    case 4:
      (*((void (**)(char *, int *))v358 + 1))(v379, v374);
      (*(void (**)(char **, uint64_t))(v71 + 8))(v73, v70);
      goto LABEL_15;
    case 5:
      (*((void (**)(char *, int *))v358 + 1))(v379, v374);
LABEL_15:
      uint64_t v388 = v359;
      uint64_t v389 = v361;
      uint64_t v390 = v363;
      uint64_t v391 = v360;
      uint64_t v392 = v362;
      uint64_t v393 = v384;
      uint64_t v177 = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
      return (*(uint64_t (**)(int **, uint64_t, uint64_t, uint64_t))(*(void *)(v177 - 8) + 56))(v364, 1, 1, v177);
    case 6:
      goto LABEL_54;
    default:
      goto LABEL_52;
  }
}

unint64_t sub_24E57F6FC(uint64_t a1, void *a2)
{
  uint64_t v149 = a1;
  uint64_t v3 = a2[7];
  uint64_t v4 = a2[4];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v150 = sub_24E864388();
  uint64_t v144 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  uint64_t v143 = (char *)&v128 - v6;
  uint64_t v7 = a2[6];
  uint64_t v8 = a2[3];
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v142 = sub_24E864388();
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  v140 = (char *)&v128 - v10;
  uint64_t v11 = a2[5];
  uint64_t v136 = a2;
  uint64_t v12 = a2[2];
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v139 = sub_24E864388();
  uint64_t v138 = *(void *)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  uint64_t v137 = (char *)&v128 - v14;
  uint64_t v158 = v12;
  uint64_t v159 = v8;
  uint64_t v160 = v4;
  uint64_t v161 = v13;
  uint64_t v147 = v13;
  uint64_t v162 = v11;
  uint64_t v163 = v7;
  uint64_t v164 = v3;
  uint64_t v15 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v158 = v12;
  uint64_t v159 = v8;
  uint64_t v160 = v4;
  uint64_t v161 = v9;
  v148 = (void (*)(void))v9;
  uint64_t v162 = v11;
  uint64_t v163 = v7;
  uint64_t v164 = v3;
  uint64_t v16 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v158 = v12;
  uint64_t v159 = v8;
  uint64_t v160 = v4;
  uint64_t v161 = AssociatedTypeWitness;
  uint64_t v145 = (void (*)(char *, uint64_t *, uint64_t))AssociatedTypeWitness;
  uint64_t v162 = v11;
  uint64_t v163 = v7;
  uint64_t v164 = v3;
  uint64_t v17 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v155 = v16;
  uint64_t v156 = v15;
  uint64_t v154 = v17;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v146 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](TupleTypeMetadata3);
  uint64_t v152 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  v151 = (uint64_t *)((char *)&v128 - v20);
  uint64_t v158 = v12;
  uint64_t v159 = v8;
  uint64_t v160 = v4;
  uint64_t v161 = v11;
  uint64_t v162 = v7;
  uint64_t v163 = v3;
  uint64_t v21 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (id *)((char *)&v128 - v23);
  (*(void (**)(char *, uint64_t *, uint64_t))(v22 + 16))((char *)&v128 - v23, v157, v21);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v26 = 0xF000000000000007;
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v152 = (char *)*v24;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
      swift_getTupleTypeMetadata3();
      uint64_t v27 = sub_24E862108();
      uint64_t v28 = TupleTypeMetadata3;
      uint64_t v142 = v27;
      uint64_t v29 = swift_getTupleTypeMetadata3();
      uint64_t v30 = (char *)v24 + *(int *)(v29 + 48);
      uint64_t v150 = *(uint64_t *)((char *)v24 + *(int *)(v29 + 64));
      uint64_t v31 = *(int *)(v28 + 48);
      uint64_t v32 = v151;
      uint64_t v33 = (uint64_t *)((char *)v151 + v31);
      uint64_t v34 = *(int *)(v28 + 64);
      uint64_t v35 = (uint64_t *)((char *)v151 + v34);
      uint64_t v36 = &v30[v31];
      uint64_t v37 = &v30[v34];
      uint64_t v38 = v156;
      uint64_t v39 = *(void *)(v156 - 8);
      uint64_t v40 = *(void (**)(void))(v39 + 32);
      uint64_t v147 = v39 + 32;
      v148 = v40;
      ((void (*)(uint64_t *))v40)(v151);
      uint64_t v41 = *(void *)(v155 - 8);
      uint64_t v42 = *(void **)(v41 + 32);
      uint64_t v144 = v41 + 32;
      uint64_t v145 = (void (*)(char *, uint64_t *, uint64_t))v42;
      ((void (*)(uint64_t *, char *))v42)(v33, v36);
      uint64_t v143 = *(char **)(*(void *)(v154 - 8) + 32);
      ((void (*)(uint64_t *, char *))v143)(v35, v37);
      uint64_t v43 = *(void (**)(uint64_t *, uint64_t))(v22 + 8);
      uint64_t v44 = v157;
      v43(v157, v21);
      swift_storeEnumTagMultiPayload();
      uint64_t v45 = v38;
      uint64_t v46 = v33;
      if (v149)
      {
        uint64_t v45 = v154;
        uint64_t v32 = v35;
        if (v149 != 2)
        {
          uint64_t v45 = v155;
          uint64_t v32 = v33;
          if (v149 != 1) {
            goto LABEL_77;
          }
        }
      }
      *((unsigned char *)v32 + *(int *)(v45 + 80)) = 1;
      if (*((unsigned char *)v151 + *(int *)(v156 + 80)) != 1
        || *((unsigned char *)v33 + *(int *)(v155 + 80)) != 1
        || *((unsigned char *)v35 + *(int *)(v154 + 80)) != 1 && *(uint64_t *)((char *)v44 + *((int *)v136 + 17)) != 2)
      {
        v43(v44, v21);
        uint64_t v74 = (char *)v44 + *(int *)(v29 + 48);
        uint64_t v75 = *(int *)(v29 + 64);
        uint64_t v76 = TupleTypeMetadata3;
        uint64_t *v44 = (uint64_t)v152;
        uint64_t v77 = &v74[*(int *)(v76 + 48)];
        uint64_t v78 = &v74[*(int *)(v76 + 64)];
        v148();
        v145(v77, v33, v155);
        ((void (*)(char *, uint64_t *, uint64_t))v143)(v78, v35, v154);
        *(uint64_t *)((char *)v44 + v75) = v150;
        goto LABEL_58;
      }
      uint64_t v47 = v150;
      uint64_t v158 = v150;
      swift_getWitnessTable();
      char v48 = sub_24E8641C8();
      v43(v44, v21);
      if (v48)
      {
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        uint64_t *v44 = v47;
        swift_storeEnumTagMultiPayload();
        swift_retain();
      }
      uint64_t v105 = v146;
      unint64_t v26 = (unint64_t)v152;
      uint64_t v106 = *v151;
      uint64_t v107 = *v46;
      uint64_t v108 = *v35;
      if (*v151)
      {
        id v109 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v111 = v109[2];
        unint64_t v110 = v109[3];
        if (v111 >= v110 >> 1) {
          id v109 = sub_24E575670((void *)(v110 > 1), v111 + 1, 1, v109);
        }
        v109[2] = v111 + 1;
        v109[v111 + 4] = v106;
      }
      else
      {
        id v109 = (void *)MEMORY[0x263F8EE78];
      }
      if (v107)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v109 = sub_24E575670(0, v109[2] + 1, 1, v109);
        }
        unint64_t v113 = v109[2];
        unint64_t v112 = v109[3];
        if (v113 >= v112 >> 1) {
          id v109 = sub_24E575670((void *)(v112 > 1), v113 + 1, 1, v109);
        }
        v109[2] = v113 + 1;
        v109[v113 + 4] = v107;
      }
      if (v108)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v109 = sub_24E575670(0, v109[2] + 1, 1, v109);
        }
        unint64_t v115 = v109[2];
        unint64_t v114 = v109[3];
        if (v115 >= v114 >> 1) {
          id v109 = sub_24E575670((void *)(v114 > 1), v115 + 1, 1, v109);
        }
        v109[2] = v115 + 1;
        v109[v115 + 4] = v108;
      }
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v105 + 8))(v151, TupleTypeMetadata3);
      return v26;
    case 2:
      id v135 = *v24;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v128 - 64, "task upstreams downstreamContinuation buffer ");
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
      uint64_t v50 = TupleTypeMetadata3;
      uint64_t v158 = v49;
      uint64_t v159 = TupleTypeMetadata3;
      uint64_t v52 = v147;
      uint64_t v51 = v148;
      swift_getTupleTypeMetadata3();
      sub_24E864388();
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
      sub_24E864AA8();
      uint64_t v160 = sub_24E8640A8();
      uint64_t v161 = sub_24E862108();
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v54 = (char *)v24 + TupleTypeMetadata[12];
      uint64_t v133 = *(uint64_t *)((char *)v24 + TupleTypeMetadata[16]);
      uint64_t v134 = *(uint64_t *)((char *)v24 + TupleTypeMetadata[20]);
      uint64_t v55 = *(int *)(v50 + 48);
      uint64_t v56 = &v152[v55];
      uint64_t v57 = *(int *)(v50 + 64);
      uint64_t v58 = &v152[v57];
      uint64_t v59 = &v54[v55];
      uint64_t v60 = &v54[v57];
      uint64_t v61 = *(void *)(v156 - 8);
      uint64_t v62 = *(void (**)(void))(v61 + 32);
      uint64_t v132 = v61 + 32;
      v62();
      uint64_t v63 = *(void *)(v155 - 8);
      uint64_t v64 = *(void (**)(void, void))(v63 + 32);
      v151 = (uint64_t *)v56;
      uint64_t v131 = (void (*)(char *, uint64_t *, uint64_t))v64;
      uint64_t v130 = v63 + 32;
      v64(v56, v59);
      uint64_t v65 = *(void *)(v154 - 8);
      uint64_t v129 = *(void (**)(char *, char *))(v65 + 32);
      uint64_t v128 = v65 + 32;
      v129(v58, v60);
      uint64_t v66 = *(void (**)(uint64_t *, uint64_t))(v22 + 8);
      v66(v157, v21);
      swift_storeEnumTagMultiPayload();
      if (v149 == 2)
      {
        uint64_t v79 = v154;
        v58[*(int *)(v154 + 80)] = 1;
        uint64_t v80 = v144;
        os_log_type_t v81 = v143;
        uint64_t v82 = v150;
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v143, &v58[*(int *)(v79 + 76)], v150);
        int v83 = (*(uint64_t (**)(char *, uint64_t))(*((void *)v145 - 1) + 48))(v81, 1);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
        if (v83 == 1) {
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v150 = (uint64_t)v62;
        if (v149 == 1)
        {
          uint64_t v94 = v155;
          uint64_t v95 = (char *)v151;
          *((unsigned char *)v151 + *(int *)(v155 + 80)) = 1;
          uint64_t v96 = v141;
          uint64_t v97 = v58;
          uint64_t v98 = v140;
          uint64_t v99 = v142;
          (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v140, &v95[*(int *)(v94 + 76)], v142);
          int v73 = (*(uint64_t (**)(char *, uint64_t, void (*)(void)))(*((void *)v51 - 1) + 48))(v98, 1, v51);
          uint64_t v100 = v98;
          uint64_t v58 = v97;
          (*(void (**)(char *, uint64_t))(v96 + 8))(v100, v99);
        }
        else
        {
          if (v149)
          {
LABEL_78:
            swift_release();
            swift_release();
            __break(1u);
            JUMPOUT(0x24E58099CLL);
          }
          uint64_t v67 = v58;
          uint64_t v68 = v156;
          uint64_t v69 = v152;
          v152[*(int *)(v156 + 80)] = 1;
          uint64_t v70 = v138;
          uint64_t v71 = v137;
          uint64_t v72 = v139;
          (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v137, &v69[*(int *)(v68 + 76)], v139);
          int v73 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v71, 1, v52);
          (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
          uint64_t v58 = v67;
        }
        uint64_t v62 = (void (*)(void))v150;
        if (v73 == 1)
        {
LABEL_26:
          uint64_t v101 = (uint64_t *)v58;
          uint64_t v85 = v133;
          v66(v157, v21);
          swift_storeEnumTagMultiPayload();
          uint64_t v102 = *(void *)v152;
          uint64_t v87 = *v151;
          uint64_t v88 = *v101;
          if (*(void *)v152)
          {
            uint64_t v89 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
            unint64_t v104 = v89[2];
            unint64_t v103 = v89[3];
            uint64_t v93 = v146;
            if (v104 >= v103 >> 1) {
              uint64_t v89 = sub_24E575670((void *)(v103 > 1), v104 + 1, 1, v89);
            }
            v89[2] = v104 + 1;
            v89[v104 + 4] = v102;
            if (!v87) {
              goto LABEL_66;
            }
            goto LABEL_61;
          }
          uint64_t v89 = (void *)MEMORY[0x263F8EE78];
          uint64_t v93 = v146;
          if (!v87)
          {
LABEL_66:
            if (v88)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v89 = sub_24E575670(0, v89[2] + 1, 1, v89);
              }
              unint64_t v126 = v89[2];
              unint64_t v125 = v89[3];
              if (v126 >= v125 >> 1) {
                uint64_t v89 = sub_24E575670((void *)(v125 > 1), v126 + 1, 1, v89);
              }
              v89[2] = v126 + 1;
              v89[v126 + 4] = v88;
            }
            swift_release();
            (*(void (**)(char *, uint64_t))(v93 + 8))(v152, TupleTypeMetadata3);
            return v85 | 0x8000000000000000;
          }
LABEL_61:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v89 = sub_24E575670(0, v89[2] + 1, 1, v89);
          }
          unint64_t v124 = v89[2];
          unint64_t v123 = v89[3];
          if (v124 >= v123 >> 1) {
            uint64_t v89 = sub_24E575670((void *)(v123 > 1), v124 + 1, 1, v89);
          }
          v89[2] = v124 + 1;
          v89[v124 + 4] = v87;
          goto LABEL_66;
        }
      }
      if (v152[*(int *)(v156 + 80)] != 1 || *((unsigned char *)v151 + *(int *)(v155 + 80)) != 1) {
        goto LABEL_57;
      }
      if (v58[*(int *)(v154 + 80)] == 1)
      {
        v84 = (uint64_t *)v58;
        uint64_t v85 = v133;
        v66(v157, v21);
        swift_storeEnumTagMultiPayload();
        uint64_t v86 = *(void *)v152;
        uint64_t v87 = *v151;
        uint64_t v88 = *v84;
        if (*(void *)v152)
        {
          uint64_t v89 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
          unint64_t v91 = v89[2];
          unint64_t v90 = v89[3];
          unint64_t v92 = v91 + 1;
          uint64_t v93 = v146;
          if (v91 >= v90 >> 1) {
            goto LABEL_55;
          }
          goto LABEL_56;
        }
        goto LABEL_59;
      }
      if (*(uint64_t *)((char *)v157 + *((int *)v136 + 17)) == 2)
      {
        uint64_t v116 = (uint64_t *)v58;
        uint64_t v85 = v133;
        v66(v157, v21);
        swift_storeEnumTagMultiPayload();
        uint64_t v86 = *(void *)v152;
        uint64_t v87 = *v151;
        uint64_t v88 = *v116;
        if (*(void *)v152)
        {
          uint64_t v89 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
          unint64_t v91 = v89[2];
          unint64_t v90 = v89[3];
          unint64_t v92 = v91 + 1;
          uint64_t v93 = v146;
          if (v91 >= v90 >> 1) {
LABEL_55:
          }
            uint64_t v89 = sub_24E575670((void *)(v90 > 1), v91 + 1, 1, v89);
LABEL_56:
          v89[2] = v92;
          v89[v91 + 4] = v86;
          goto LABEL_60;
        }
LABEL_59:
        uint64_t v89 = (void *)MEMORY[0x263F8EE78];
        uint64_t v93 = v146;
LABEL_60:
        if (!v87) {
          goto LABEL_66;
        }
        goto LABEL_61;
      }
LABEL_57:
      uint64_t v117 = v157;
      v66(v157, v21);
      int v118 = (char *)v117 + TupleTypeMetadata[12];
      uint64_t v119 = TupleTypeMetadata[16];
      uint64_t v120 = TupleTypeMetadata[20];
      *uint64_t v117 = (uint64_t)v135;
      uint64_t v121 = &v118[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v122 = &v118[*(int *)(TupleTypeMetadata3 + 64)];
      v62();
      v131(v121, v151, v155);
      ((void (*)(char *, char *, uint64_t))v129)(v122, v58, v154);
      *(uint64_t *)((char *)v117 + v119) = v133;
      *(uint64_t *)((char *)v117 + v120) = v134;
LABEL_58:
      swift_storeEnumTagMultiPayload();
      return 0xF000000000000007;
    case 3:
      __break(1u);
      goto LABEL_75;
    case 4:

      return v26;
    case 5:
      return v26;
    case 6:
      goto LABEL_76;
    default:
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      swift_release();
      swift_release();
      __break(1u);
      goto LABEL_78;
  }
}

unint64_t sub_24E5809B8(void (*a1)(void, void), void *a2)
{
  uint64_t v141 = a1;
  uint64_t v3 = a2[2];
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  uint64_t v6 = a2[5];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = a2[6];
  uint64_t v9 = a2[7];
  uint64_t v143 = AssociatedTypeWitness;
  uint64_t v10 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v142 = swift_getAssociatedTypeWitness();
  uint64_t v11 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v152 = v3;
  uint64_t v153 = v4;
  uint64_t v154 = v5;
  uint64_t v155 = swift_getAssociatedTypeWitness();
  uint64_t v156 = v6;
  uint64_t v157 = v8;
  uint64_t v158 = v9;
  uint64_t v149 = v11;
  uint64_t v150 = v10;
  uint64_t v147 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v140 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](TupleTypeMetadata3);
  uint64_t v145 = (char *)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v124 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v124 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v144 = (char **)((char *)&v124 - v21);
  MEMORY[0x270FA5388](v20);
  uint64_t v146 = (char *)&v124 - v22;
  uint64_t v152 = v3;
  uint64_t v153 = v4;
  uint64_t v154 = v5;
  uint64_t v155 = v6;
  uint64_t v156 = v8;
  uint64_t v157 = v9;
  uint64_t v23 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  unint64_t v26 = (id *)((char *)&v124 - v25);
  (*(void (**)(char *, void *, uint64_t))(v24 + 16))((char *)&v124 - v25, v151, v23);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v28 = 0xF000000000000007;
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      id v137 = *v26;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
      sub_24E864388();
      swift_getTupleTypeMetadata3();
      sub_24E862108();
      uint64_t v138 = v16;
      uint64_t v29 = TupleTypeMetadata3;
      uint64_t v30 = (char *)v26 + *(int *)(swift_getTupleTypeMetadata3() + 48);
      swift_release();
      uint64_t v31 = *(int *)(v29 + 48);
      uint64_t v32 = &v146[v31];
      uint64_t v142 = (uint64_t)&v146[v31];
      uint64_t v33 = *(int *)(v29 + 64);
      uint64_t v34 = &v146[v33];
      uint64_t v35 = &v30[v31];
      uint64_t v36 = &v30[v33];
      uint64_t v139 = v19;
      uint64_t v37 = *(void *)(v150 - 8);
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v146, v30, v150);
      uint64_t v143 = *(void *)(v149 - 8);
      (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v32, v35, v149);
      uint64_t v145 = *(char **)(v147 - 8);
      uint64_t v38 = v34;
      (*((void (**)(char *, char *, uint64_t))v145 + 4))(v34, v36, v147);
      uint64_t v39 = v151;
      (*(void (**)(void *, uint64_t))(v24 + 8))(v151, v23);
      uint64_t v40 = v141;
      *uint64_t v39 = v141;
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = v144;
      uint64_t v134 = (char *)v144 + *(int *)(v29 + 48);
      uint64_t v42 = v134;
      uint64_t v133 = (char *)v144 + *(int *)(v29 + 64);
      uint64_t v43 = v133;
      v151 = *(void **)(v37 + 16);
      ((void (*)(char **, char *, uint64_t))v151)(v144, v146, v150);
      uint64_t v136 = *(void (**)(void))(v143 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v136)(v42, v142, v149);
      id v135 = (char *)*((void *)v145 + 2);
      uint64_t v129 = v34;
      ((void (*)(char *, char *, uint64_t))v135)(v43, v34, v147);
      uint64_t v132 = *v41;
      id v44 = v40;
      uint64_t v45 = *(void (**)(void, void))(v37 + 8);
      uint64_t v131 = (void (*)(char *, uint64_t))(v37 + 8);
      uint64_t v141 = v45;
      v45(v41, v150);
      uint64_t v46 = &v139[*(int *)(v29 + 48)];
      uint64_t v130 = &v139[*(int *)(v29 + 64)];
      uint64_t v47 = v130;
      ((void (*)(void))v151)();
      uint64_t v48 = v142;
      uint64_t v49 = v149;
      ((void (*)(char *, uint64_t, uint64_t))v136)(v46, v142, v149);
      uint64_t v50 = v38;
      uint64_t v51 = v147;
      ((void (*)(char *, char *, uint64_t))v135)(v47, v50, v147);
      uint64_t v144 = *(char ***)v46;
      uint64_t v52 = *(void (**)(char *, uint64_t))(v143 + 8);
      v52(v46, v49);
      uint64_t v53 = &v138[*(int *)(v29 + 48)];
      uint64_t v54 = &v138[*(int *)(v29 + 64)];
      uint64_t v55 = v150;
      ((void (*)(void))v151)();
      uint64_t v56 = v48;
      uint64_t v57 = v149;
      ((void (*)(char *, uint64_t, uint64_t))v136)(v53, v56, v149);
      ((void (*)(char *, char *, uint64_t))v135)(v54, v129, v51);
      v151 = *(void **)v54;
      uint64_t v58 = (void (*)(char *, uint64_t))*((void *)v145 + 1);
      v58(v54, v51);
      uint64_t v59 = v57;
      v52(v53, v57);
      uint64_t v60 = (void (*)(char *, uint64_t))v141;
      v141(v138, v55);
      v58(v130, v51);
      v60(v139, v55);
      uint64_t v61 = v132;
      v58(v133, v51);
      v52(v134, v59);
      if (!v61)
      {
        uint64_t v62 = (void *)MEMORY[0x263F8EE78];
        uint64_t v65 = v140;
        uint64_t v66 = v144;
        uint64_t v67 = v151;
        if (!v144) {
          goto LABEL_21;
        }
        goto LABEL_16;
      }
      uint64_t v62 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v64 = v62[2];
      unint64_t v63 = v62[3];
      uint64_t v65 = v140;
      if (v64 >= v63 >> 1) {
        uint64_t v62 = sub_24E575670((void *)(v63 > 1), v64 + 1, 1, v62);
      }
      uint64_t v66 = v144;
      uint64_t v67 = v151;
      v62[2] = v64 + 1;
      v62[v64 + 4] = v61;
      if (v66)
      {
LABEL_16:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v62 = sub_24E575670(0, v62[2] + 1, 1, v62);
        }
        unint64_t v115 = v62[2];
        unint64_t v114 = v62[3];
        if (v115 >= v114 >> 1) {
          uint64_t v62 = sub_24E575670((void *)(v114 > 1), v115 + 1, 1, v62);
        }
        v62[2] = v115 + 1;
        v62[v115 + 4] = v66;
      }
LABEL_21:
      if (v67)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v62 = sub_24E575670(0, v62[2] + 1, 1, v62);
        }
        unint64_t v117 = v62[2];
        unint64_t v116 = v62[3];
        if (v117 >= v116 >> 1) {
          uint64_t v62 = sub_24E575670((void *)(v116 > 1), v117 + 1, 1, v62);
        }
        v62[2] = v117 + 1;
        v62[v117 + 4] = v67;
      }
      (*(void (**)(char *, uint64_t))(v65 + 8))(v146, TupleTypeMetadata3);
      return (unint64_t)v137;
    case 2:
      uint64_t v134 = (char *)*v26;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v124 - 64, "task upstreams downstreamContinuation buffer ");
      uint64_t v68 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
      uint64_t v69 = TupleTypeMetadata3;
      uint64_t v152 = v68;
      uint64_t v153 = TupleTypeMetadata3;
      sub_24E864388();
      swift_getTupleTypeMetadata3();
      uint64_t v139 = v19;
      sub_24E864388();
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
      sub_24E864AA8();
      uint64_t v154 = sub_24E8640A8();
      uint64_t v155 = sub_24E862108();
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      uint64_t v71 = (char *)v26 + *(int *)(TupleTypeMetadata + 48);
      id v137 = *(id *)((char *)v26 + *(int *)(TupleTypeMetadata + 64));
      swift_release();
      uint64_t v72 = *(int *)(v69 + 48);
      int v73 = &v145[v72];
      id v135 = &v145[v72];
      uint64_t v74 = *(int *)(v69 + 64);
      uint64_t v75 = &v145[v74];
      uint64_t v142 = (uint64_t)&v145[v74];
      uint64_t v76 = &v71[v72];
      uint64_t v138 = v16;
      uint64_t v77 = &v71[v74];
      uint64_t v78 = *(void *)(v150 - 8);
      uint64_t v79 = v145;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v145, v71, v150);
      uint64_t v146 = *(char **)(v149 - 8);
      (*((void (**)(char *, char *, uint64_t))v146 + 4))(v73, v76, v149);
      uint64_t v143 = *(void *)(v147 - 8);
      (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v75, v77, v147);
      (*(void (**)(void *, uint64_t))(v24 + 8))(v151, v23);
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = v144;
      uint64_t v133 = (char *)v144 + *(int *)(v69 + 48);
      os_log_type_t v81 = v133;
      uint64_t v132 = (char *)v144 + *(int *)(v69 + 64);
      uint64_t v82 = v132;
      uint64_t v83 = v78;
      uint64_t v136 = *(void (**)(void))(v78 + 16);
      v151 = (void *)(v78 + 16);
      uint64_t v84 = v150;
      ((void (*)(char **, char *, uint64_t))v136)(v144, v79, v150);
      unint64_t v126 = (void (*)(char *, char *, uint64_t))*((void *)v146 + 2);
      uint64_t v85 = v135;
      v126(v81, v135, v149);
      uint64_t v86 = *(void (**)(char *, uint64_t, uint64_t))(v143 + 16);
      uint64_t v87 = v147;
      v86(v82, v142, v147);
      unint64_t v125 = v86;
      uint64_t v129 = *v80;
      uint64_t v88 = *(void (**)(char *, uint64_t))(v83 + 8);
      uint64_t v130 = (char *)(v83 + 8);
      uint64_t v131 = v88;
      v88((char *)v80, v84);
      uint64_t v89 = &v139[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v90 = TupleTypeMetadata3;
      uint64_t v128 = &v139[*(int *)(TupleTypeMetadata3 + 64)];
      unint64_t v91 = v128;
      v136();
      unint64_t v92 = v85;
      uint64_t v93 = v149;
      uint64_t v94 = v126;
      v126(v89, v92, v149);
      uint64_t v95 = v142;
      v86(v91, v142, v87);
      uint64_t v144 = *(char ***)v89;
      uint64_t v96 = (void (*)(char *, uint64_t))*((void *)v146 + 1);
      v146 += 8;
      uint64_t v127 = v96;
      v96(v89, v93);
      uint64_t v97 = v138;
      uint64_t v98 = &v138[*(int *)(v90 + 48)];
      uint64_t v99 = &v138[*(int *)(v90 + 64)];
      uint64_t v100 = v150;
      ((void (*)(char *, char *, uint64_t))v136)(v138, v145, v150);
      v94(v98, v135, v93);
      v125(v99, v95, v87);
      v151 = *(void **)v99;
      uint64_t v101 = *(void (**)(char *, uint64_t))(v143 + 8);
      uint64_t v102 = v99;
      unint64_t v103 = v129;
      v101(v102, v87);
      unint64_t v104 = v127;
      v127(v98, v93);
      uint64_t v105 = v97;
      uint64_t v106 = v131;
      v131(v105, v100);
      v101(v128, v87);
      v106(v139, v100);
      v101(v132, v87);
      v104(v133, v93);
      if (v103)
      {
        uint64_t v107 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v109 = v107[2];
        unint64_t v108 = v107[3];
        uint64_t v110 = v140;
        unint64_t v111 = v141;
        if (v109 >= v108 >> 1) {
          uint64_t v107 = sub_24E575670((void *)(v108 > 1), v109 + 1, 1, v107);
        }
        unint64_t v112 = v144;
        unint64_t v113 = v151;
        v107[2] = v109 + 1;
        v107[v109 + 4] = v103;
        if (!v112)
        {
LABEL_34:
          if (v113)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v107 = sub_24E575670(0, v107[2] + 1, 1, v107);
            }
            unint64_t v121 = v107[2];
            unint64_t v120 = v107[3];
            if (v121 >= v120 >> 1) {
              uint64_t v107 = sub_24E575670((void *)(v120 > 1), v121 + 1, 1, v107);
            }
            v107[2] = v121 + 1;
            v107[v121 + 4] = v113;
          }
          (*(void (**)(char *, uint64_t))(v110 + 8))(v145, TupleTypeMetadata3);
          id v122 = v111;
          return (unint64_t)v137;
        }
      }
      else
      {
        uint64_t v107 = (void *)MEMORY[0x263F8EE78];
        uint64_t v110 = v140;
        unint64_t v111 = v141;
        unint64_t v112 = v144;
        unint64_t v113 = v151;
        if (!v144) {
          goto LABEL_34;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v107 = sub_24E575670(0, v107[2] + 1, 1, v107);
      }
      unint64_t v119 = v107[2];
      unint64_t v118 = v107[3];
      if (v119 >= v118 >> 1) {
        uint64_t v107 = sub_24E575670((void *)(v118 > 1), v119 + 1, 1, v107);
      }
      v107[2] = v119 + 1;
      v107[v119 + 4] = v112;
      goto LABEL_34;
    case 3:
      swift_release();
      return 0xF000000000000007;
    case 4:

      return 0xF000000000000007;
    case 5:
      return v28;
    case 6:
      goto LABEL_44;
    default:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x24E581A54);
  }
}

unint64_t sub_24E581A70(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v139 = AssociatedTypeWitness;
  uint64_t v9 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v138 = swift_getAssociatedTypeWitness();
  uint64_t v10 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v149 = v2;
  uint64_t v150 = v3;
  uint64_t v151 = v5;
  uint64_t v152 = swift_getAssociatedTypeWitness();
  uint64_t v153 = v4;
  uint64_t v154 = v7;
  uint64_t v155 = v8;
  uint64_t v146 = v10;
  uint64_t v147 = v9;
  uint64_t v145 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v142 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](TupleTypeMetadata3);
  uint64_t v13 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v141 = (char *)&v125 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v125 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v140 = (char *)&v125 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v143 = (char *)&v125 - v21;
  uint64_t v149 = v2;
  uint64_t v150 = v3;
  uint64_t v151 = v5;
  uint64_t v152 = v4;
  uint64_t v153 = v7;
  uint64_t v154 = v8;
  uint64_t v22 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (id *)((char *)&v125 - v24);
  (*(void (**)(char *, void (*)(void), uint64_t))(v23 + 16))((char *)&v125 - v24, v148, v22);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v27 = 0xF000000000000007;
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      unint64_t v126 = (void (*)(char *, char *, uint64_t))*v25;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
      sub_24E864388();
      swift_getTupleTypeMetadata3();
      sub_24E862108();
      uint64_t v32 = TupleTypeMetadata3;
      uint64_t v33 = (char *)v25 + *(int *)(swift_getTupleTypeMetadata3() + 48);
      swift_release();
      uint64_t v34 = *(int *)(v32 + 48);
      uint64_t v35 = &v143[v34];
      id v135 = &v143[v34];
      uint64_t v36 = *(int *)(v32 + 64);
      uint64_t v37 = &v143[v36];
      uint64_t v132 = &v143[v36];
      uint64_t v38 = &v33[v34];
      uint64_t v39 = &v33[v36];
      uint64_t v139 = *(void *)(v147 - 8);
      (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v143, v33, v147);
      uint64_t v40 = *(void *)(v146 - 8);
      uint64_t v138 = v40;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v35, v38, v146);
      uint64_t v136 = *(char **)(v145 - 8);
      id v137 = v18;
      (*((void (**)(char *, char *, uint64_t))v136 + 4))(v37, v39, v145);
      (*(void (**)(void (*)(void), uint64_t))(v23 + 8))(v148, v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = v140;
      uint64_t v131 = &v140[*(int *)(v32 + 48)];
      uint64_t v42 = v131;
      uint64_t v130 = &v140[*(int *)(v32 + 64)];
      uint64_t v43 = v130;
      uint64_t v44 = v139;
      v148 = *(void (**)(void))(v139 + 16);
      uint64_t v45 = v147;
      ((void (*)(char *, char *, uint64_t))v148)(v140, v143, v147);
      uint64_t v134 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
      v134(v42, v135, v146);
      uint64_t v133 = (void (*)(char *, char *, uint64_t))*((void *)v136 + 2);
      uint64_t v46 = v132;
      v133(v43, v132, v145);
      uint64_t v129 = *(void (**)(void, void))v41;
      uint64_t v47 = *(void (**)(char *, uint64_t))(v44 + 8);
      uint64_t v139 = v44 + 8;
      uint64_t v128 = v47;
      v47(v41, v45);
      uint64_t v48 = &v137[*(int *)(v32 + 48)];
      uint64_t v140 = &v137[*(int *)(v32 + 64)];
      uint64_t v49 = v140;
      v148();
      uint64_t v50 = v135;
      uint64_t v51 = v146;
      v134(v48, v135, v146);
      uint64_t v52 = v49;
      uint64_t v53 = v145;
      v133(v52, v46, v145);
      uint64_t v125 = *(void *)v48;
      uint64_t v54 = *(void (**)(char *, uint64_t))(v138 + 8);
      v138 += 8;
      uint64_t v127 = v54;
      v54(v48, v51);
      uint64_t v55 = v141;
      uint64_t v56 = &v141[*(int *)(v32 + 48)];
      uint64_t v57 = (void (**)(void))&v141[*(int *)(v32 + 64)];
      ((void (*)(char *, char *, uint64_t))v148)(v141, v143, v147);
      v134(v56, v50, v51);
      v133((char *)v57, v132, v53);
      v148 = *v57;
      uint64_t v58 = (void (*)(void (**)(void), uint64_t))*((void *)v136 + 1);
      v58(v57, v53);
      uint64_t v59 = v127;
      v127(v56, v51);
      uint64_t v60 = v55;
      uint64_t v61 = v147;
      uint64_t v62 = v128;
      v128(v60, v147);
      v58((void (**)(void))v140, v53);
      v62(v137, v61);
      v58((void (**)(void))v130, v53);
      unint64_t v63 = v129;
      v59(v131, v51);
      unint64_t v64 = (void *)MEMORY[0x263F8EE78];
      if (v63)
      {
        unint64_t v64 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v66 = v64[2];
        unint64_t v65 = v64[3];
        if (v66 >= v65 >> 1) {
          unint64_t v64 = sub_24E575670((void *)(v65 > 1), v66 + 1, 1, v64);
        }
        unint64_t v67 = (unint64_t)v126;
        uint64_t v68 = v125;
        uint64_t v69 = v148;
        id v64[2] = v66 + 1;
        v64[v66 + 4] = v63;
        if (!v68)
        {
LABEL_7:
          if (!v69) {
            goto LABEL_27;
          }
          goto LABEL_8;
        }
      }
      else
      {
        unint64_t v67 = (unint64_t)v126;
        uint64_t v68 = v125;
        uint64_t v69 = v148;
        if (!v125) {
          goto LABEL_7;
        }
      }
      unint64_t v117 = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v117 = sub_24E575670(0, v117[2] + 1, 1, v117);
      }
      unint64_t v64 = v117;
      unint64_t v119 = v117[2];
      unint64_t v118 = v117[3];
      if (v119 >= v118 >> 1) {
        unint64_t v64 = sub_24E575670((void *)(v118 > 1), v119 + 1, 1, v117);
      }
      id v64[2] = v119 + 1;
      v64[v119 + 4] = v68;
      if (v69)
      {
LABEL_8:
        uint64_t v70 = v64;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v70 = sub_24E575670(0, v70[2] + 1, 1, v70);
        }
        uint64_t v71 = v70;
        unint64_t v73 = v70[2];
        unint64_t v72 = v70[3];
        if (v73 >= v72 >> 1) {
          uint64_t v71 = sub_24E575670((void *)(v72 > 1), v73 + 1, 1, v70);
        }
        v71[2] = v73 + 1;
        v71[v73 + 4] = v69;
      }
LABEL_27:
      (*(void (**)(char *, uint64_t))(v142 + 8))(v143, TupleTypeMetadata3);
      return v67 | 0x8000000000000000;
    case 2:
      uint64_t v134 = (void (*)(char *, char *, uint64_t))*v25;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v125 - 64, "task upstreams downstreamContinuation buffer ");
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
      uint64_t v75 = TupleTypeMetadata3;
      uint64_t v149 = v74;
      uint64_t v150 = TupleTypeMetadata3;
      sub_24E864388();
      swift_getTupleTypeMetadata3();
      id v137 = v18;
      sub_24E864388();
      uint64_t v76 = v13;
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
      sub_24E864AA8();
      uint64_t v151 = sub_24E8640A8();
      uint64_t v152 = sub_24E862108();
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      uint64_t v78 = (char *)v25 + *(int *)(TupleTypeMetadata + 48);
      uint64_t v133 = *(void (**)(char *, char *, uint64_t))((char *)v25 + *(int *)(TupleTypeMetadata + 64));
      swift_release();
      uint64_t v79 = *(int *)(v75 + 48);
      uint64_t v80 = &v76[v79];
      uint64_t v81 = *(int *)(v75 + 64);
      uint64_t v82 = &v76[v81];
      id v135 = &v76[v81];
      uint64_t v136 = v76;
      uint64_t v83 = &v78[v79];
      uint64_t v84 = &v78[v81];
      uint64_t v85 = *(void *)(v147 - 8);
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v76, v78, v147);
      uint64_t v86 = *(char **)(v146 - 8);
      uint64_t v143 = v86;
      (*((void (**)(char *, char *, uint64_t))v86 + 4))(v80, v83, v146);
      uint64_t v139 = *(void *)(v145 - 8);
      (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v82, v84, v145);
      (*(void (**)(void (*)(void), uint64_t))(v23 + 8))(v148, v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v87 = (char **)v140;
      uint64_t v132 = &v140[*(int *)(v75 + 48)];
      uint64_t v88 = v132;
      uint64_t v131 = &v140[*(int *)(v75 + 64)];
      uint64_t v89 = v131;
      v148 = *(void (**)(void))(v85 + 16);
      ((void (*)(char *, char *, uint64_t))v148)(v140, v136, v147);
      uint64_t v138 = *((void *)v86 + 2);
      uint64_t v90 = v80;
      ((void (*)(char *, char *, uint64_t))v138)(v88, v80, v146);
      unint64_t v126 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
      unint64_t v91 = v135;
      v126(v89, v135, v145);
      uint64_t v130 = *v87;
      unint64_t v92 = *(void (**)(void, void))(v85 + 8);
      uint64_t v128 = (void (*)(char *, uint64_t))(v85 + 8);
      uint64_t v129 = v92;
      v92(v87, v147);
      uint64_t v93 = &v137[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v94 = TupleTypeMetadata3;
      uint64_t v140 = &v137[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v95 = v140;
      v148();
      uint64_t v96 = v146;
      ((void (*)(char *, char *, uint64_t))v138)(v93, v90, v146);
      uint64_t v97 = v95;
      uint64_t v98 = v91;
      uint64_t v99 = v145;
      uint64_t v100 = (void (*)(void (**)(void), char *, uint64_t))v126;
      v126(v97, v98, v145);
      uint64_t v125 = *(void *)v93;
      uint64_t v101 = (void (*)(char *, uint64_t))*((void *)v143 + 1);
      v143 += 8;
      uint64_t v127 = v101;
      v101(v93, v96);
      uint64_t v102 = v141;
      unint64_t v103 = &v141[*(int *)(v94 + 48)];
      unint64_t v104 = (void (**)(void))&v141[*(int *)(v94 + 64)];
      ((void (*)(char *, char *, uint64_t))v148)(v141, v136, v147);
      ((void (*)(char *, char *, uint64_t))v138)(v103, v90, v96);
      v100(v104, v135, v99);
      v148 = *v104;
      uint64_t v105 = *(void (**)(void (**)(void), uint64_t))(v139 + 8);
      v105(v104, v99);
      uint64_t v106 = v127;
      v127(v103, v96);
      uint64_t v107 = v102;
      unint64_t v108 = v130;
      uint64_t v109 = v147;
      uint64_t v110 = (void (*)(char *, uint64_t))v129;
      v129(v107, v147);
      v105((void (**)(void))v140, v99);
      v110(v137, v109);
      v105((void (**)(void))v131, v99);
      v106(v132, v96);
      if (!v108)
      {
        unint64_t v111 = (void *)MEMORY[0x263F8EE78];
        uint64_t v114 = v125;
        unint64_t v115 = v148;
        unint64_t v116 = v136;
        if (!v125) {
          goto LABEL_34;
        }
        goto LABEL_29;
      }
      unint64_t v111 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v113 = v111[2];
      unint64_t v112 = v111[3];
      if (v113 >= v112 >> 1) {
        unint64_t v111 = sub_24E575670((void *)(v112 > 1), v113 + 1, 1, v111);
      }
      uint64_t v114 = v125;
      unint64_t v115 = v148;
      v111[2] = v113 + 1;
      v111[v113 + 4] = v108;
      unint64_t v116 = v136;
      if (v114)
      {
LABEL_29:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v111 = sub_24E575670(0, v111[2] + 1, 1, v111);
        }
        unint64_t v121 = v111[2];
        unint64_t v120 = v111[3];
        if (v121 >= v120 >> 1) {
          unint64_t v111 = sub_24E575670((void *)(v120 > 1), v121 + 1, 1, v111);
        }
        v111[2] = v121 + 1;
        v111[v121 + 4] = v114;
        unint64_t v116 = v136;
      }
LABEL_34:
      if (v115)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v111 = sub_24E575670(0, v111[2] + 1, 1, v111);
        }
        unint64_t v123 = v111[2];
        unint64_t v122 = v111[3];
        if (v123 >= v122 >> 1) {
          unint64_t v111 = sub_24E575670((void *)(v122 > 1), v123 + 1, 1, v111);
        }
        v111[2] = v123 + 1;
        v111[v123 + 4] = v115;
        unint64_t v116 = v136;
      }
      (*(void (**)(char *, uint64_t))(v142 + 8))(v116, TupleTypeMetadata3);
      return (unint64_t)v133;
    case 3:
      swift_release();
      (*(void (**)(void (*)(void), uint64_t))(v23 + 8))(v148, v22);
      swift_storeEnumTagMultiPayload();
      return 0xF000000000000007;
    case 4:

      return 0xF000000000000007;
    case 5:
      return v27;
    case 6:
      __break(1u);
      JUMPOUT(0x24E582C0CLL);
    default:
      uint64_t v28 = sub_24E864388();
      uint64_t v29 = swift_getTupleTypeMetadata3();
      uint64_t v30 = (char *)v25 + *(int *)(v29 + 48);
      uint64_t v31 = (char *)v25 + *(int *)(v29 + 64);
      (*(void (**)(void (*)(void), uint64_t))(v23 + 8))(v148, v22);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v31, v28);
      (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v30, v3);
      (*(void (**)(id *, uint64_t))(*(void *)(v2 - 8) + 8))(v25, v2);
      return 0xF000000000000007;
  }
}

uint64_t sub_24E582C28@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v160 = a3;
  uint64_t v155 = a1;
  uint64_t v4 = (void (*)(void, void))a2[5];
  uint64_t v5 = (char *)a2[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = (void (*)(void, void))a2[6];
  uint64_t v162 = a2[3];
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = (void (*)(void, void))a2[7];
  uint64_t v10 = (char *)a2[4];
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v143 = sub_24E864388();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v154 = sub_24E864388();
  uint64_t v141 = *(void *)(v154 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v154);
  uint64_t v144 = (char *)&v124 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v145 = (char *)&v124 - v16;
  uint64_t v153 = TupleTypeMetadata3;
  uint64_t v152 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v140 = (char *)&v124 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v142 = (char *)&v124 - v19;
  uint64_t v20 = v162;
  uint64_t v164 = v5;
  uint64_t v165 = v162;
  uint64_t v166 = (uint64_t)v10;
  uint64_t v167 = (void (*)(void, void))AssociatedTypeWitness;
  uint64_t v148 = AssociatedTypeWitness;
  v168 = v4;
  v169 = v7;
  uint64_t v170 = v9;
  uint64_t v21 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v164 = v5;
  uint64_t v165 = v20;
  uint64_t v166 = (uint64_t)v10;
  uint64_t v167 = (void (*)(void, void))v8;
  uint64_t v146 = v8;
  v168 = v4;
  v169 = v7;
  uint64_t v170 = v9;
  uint64_t v22 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v164 = v5;
  uint64_t v165 = v20;
  uint64_t v166 = (uint64_t)v10;
  uint64_t v167 = (void (*)(void, void))v11;
  v168 = v4;
  v169 = v7;
  uint64_t v170 = v9;
  uint64_t v23 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v150 = v22;
  uint64_t v149 = (void (*)(char *, char *))v23;
  uint64_t v147 = swift_getTupleTypeMetadata3();
  MEMORY[0x270FA5388](v147);
  uint64_t v151 = (char *)&v124 - v24;
  uint64_t v157 = v5;
  uint64_t v158 = v7;
  uint64_t v164 = v5;
  uint64_t v25 = v20;
  unint64_t v26 = v161;
  uint64_t v165 = v25;
  uint64_t v166 = (uint64_t)v10;
  uint64_t v159 = v4;
  uint64_t v167 = v4;
  v168 = v7;
  uint64_t v156 = v9;
  v169 = v9;
  uint64_t v27 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (uint64_t *)((char *)&v124 - v29);
  (*(void (**)(char *, void *, uint64_t))(v28 + 16))((char *)&v124 - v29, v26, v27);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v140 = v10;
      uint64_t v138 = (void (*)(void, void))*v30;
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F1F98);
      uint64_t v40 = v153;
      uint64_t v41 = sub_24E862108();
      uint64_t v128 = (char *)v39;
      uint64_t v42 = v147;
      uint64_t v43 = swift_getTupleTypeMetadata3();
      uint64_t v44 = (char *)v30 + *(int *)(v43 + 48);
      uint64_t v127 = v43;
      uint64_t v131 = *(void (**)(void, void))((char *)v30 + *(int *)(v43 + 64));
      uint64_t v45 = *(int *)(v42 + 48);
      uint64_t v46 = &v151[v45];
      uint64_t v47 = *(int *)(v42 + 64);
      uint64_t v48 = &v151[v47];
      uint64_t v49 = &v44[v45];
      uint64_t v50 = (void *)v21;
      uint64_t v51 = &v44[v47];
      uint64_t v52 = *(v50 - 1);
      uint64_t v53 = *(void (**)(void))(v52 + 32);
      uint64_t v139 = (void (*)(void *, uint64_t))v50;
      id v137 = v53;
      uint64_t v136 = v52 + 32;
      v53();
      uint64_t v54 = *(void *)(v150 - 8);
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
      uint64_t v144 = v46;
      id v135 = v55;
      uint64_t v134 = v54 + 32;
      ((void (*)(char *, char *))v55)(v46, v49);
      uint64_t v56 = *((void *)v149 - 1);
      uint64_t v57 = *(void (**)(char *, char *, void *))(v56 + 32);
      uint64_t v130 = v48;
      uint64_t v133 = (void (*)(char *, char *, void (*)(char *, char *)))v57;
      uint64_t v132 = v56 + 32;
      v57(v48, v51, v149);
      uint64_t v163 = v131;
      uint64_t v131 = *(void (**)(void, void))(v28 + 8);
      v131(v26, v27);
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = v145;
      uint64_t v129 = (void (*)(char *, char *))v41;
      sub_24E8620E8();
      uint64_t v59 = v40;
      uint64_t v60 = v26;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v58, 1, v40) != 1)
      {
        uint64_t v75 = *(int *)(v40 + 48);
        uint64_t v76 = &v142[v75];
        uint64_t v128 = &v142[v75];
        uint64_t v77 = *(int *)(v59 + 64);
        uint64_t v78 = &v142[v77];
        uint64_t v125 = &v142[v77];
        uint64_t v79 = &v58[v75];
        uint64_t v80 = v58;
        uint64_t v81 = &v58[v77];
        uint64_t v82 = *(void *)(v148 - 8);
        uint64_t v129 = *(void (**)(char *, char *))(v82 + 32);
        uint64_t v141 = v82 + 32;
        v129(v142, v80);
        uint64_t v83 = *(void *)(v146 - 8);
        uint64_t v145 = *(char **)(v83 + 32);
        uint64_t v126 = v83 + 32;
        ((void (*)(char *, char *))v145)(v76, v79);
        uint64_t v84 = v143;
        uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32);
        v85(v78, v81, v143);
        v131(v60, v27);
        uint64_t v86 = (char *)v60 + *(int *)(v127 + 48);
        uint64_t v87 = *(int *)(v127 + 64);
        *uint64_t v60 = v138;
        uint64_t v88 = &v86[*(int *)(v42 + 48)];
        uint64_t v89 = &v86[*(int *)(v42 + 64)];
        v137();
        v135(v88, v144, v150);
        v133(v89, v130, v149);
        *(void *)((char *)v60 + v87) = v163;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
        sub_24E864AA8();
        sub_24E8640A8();
        uint64_t v90 = &v160[*(int *)(swift_getTupleTypeMetadata2() + 48)];
        *(void *)uint64_t v160 = v155;
        uint64_t v91 = v153;
        unint64_t v92 = &v90[*(int *)(v153 + 48)];
        uint64_t v93 = &v90[*(int *)(v153 + 64)];
        ((void (*)(char *, char *, uint64_t))v129)(v90, v142, v148);
        ((void (*)(char *, char *, uint64_t))v145)(v92, v128, v146);
        v85(v93, v125, v84);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v152 + 56))(v90, 0, 1, v91);
        swift_storeEnumTagMultiPayload();
        uint64_t v164 = v157;
        uint64_t v165 = v162;
        uint64_t v166 = (uint64_t)v140;
        uint64_t v167 = v159;
        v168 = v158;
        v169 = v156;
        type metadata accessor for CombineLatestStateMachine.NextAction();
        return swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, uint64_t))(v141 + 8))(v58, v154);
      uint64_t v61 = *(void *)v151;
      uint64_t v62 = *(void *)v144;
      unint64_t v63 = v130;
      uint64_t v153 = *(void *)v130;
      if (v61)
      {
        unint64_t v64 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v66 = v64[2];
        unint64_t v65 = v64[3];
        if (v66 >= v65 >> 1) {
          unint64_t v64 = sub_24E575670((void *)(v65 > 1), v66 + 1, 1, v64);
        }
        id v64[2] = v66 + 1;
        v64[v66 + 4] = v61;
        if (v62) {
          goto LABEL_8;
        }
LABEL_20:
        uint64_t v69 = v63;
        goto LABEL_21;
      }
      unint64_t v64 = (void *)MEMORY[0x263F8EE78];
      if (!v62) {
        goto LABEL_20;
      }
LABEL_8:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v64 = sub_24E575670(0, v64[2] + 1, 1, v64);
      }
      unint64_t v68 = v64[2];
      unint64_t v67 = v64[3];
      if (v68 >= v67 >> 1) {
        unint64_t v64 = sub_24E575670((void *)(v67 > 1), v68 + 1, 1, v64);
      }
      uint64_t v69 = v63;
      id v64[2] = v68 + 1;
      v64[v68 + 4] = v62;
LABEL_21:
      uint64_t v109 = v147;
      uint64_t v110 = v151;
      unint64_t v111 = v144;
      unint64_t v112 = (uint64_t (*)(void *, uint64_t))v131;
      if (v153)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v64 = sub_24E575670(0, v64[2] + 1, 1, v64);
        }
        unint64_t v114 = v64[2];
        unint64_t v113 = v64[3];
        if (v114 >= v113 >> 1) {
          unint64_t v64 = sub_24E575670((void *)(v113 > 1), v114 + 1, 1, v64);
        }
        id v64[2] = v114 + 1;
        v64[v114 + 4] = v153;
        uint64_t v109 = v147;
      }
      *(void *)uint64_t v110 = 0;
      *(void *)unint64_t v111 = 0;
      *(void *)uint64_t v69 = 0;
      uint64_t v115 = v112(v60, v27);
      MEMORY[0x270FA5388](v115);
      strcpy((char *)&v124 - 64, "task upstreams downstreamContinuation buffer ");
      uint64_t v164 = v128;
      uint64_t v165 = v109;
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
      sub_24E864AA8();
      uint64_t v166 = sub_24E8640A8();
      uint64_t v167 = (void (*)(void, void))v129;
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      unint64_t v117 = (char *)v60 + TupleTypeMetadata[12];
      uint64_t v118 = v109;
      uint64_t v119 = TupleTypeMetadata[16];
      uint64_t v120 = TupleTypeMetadata[20];
      *uint64_t v60 = v138;
      unint64_t v121 = &v117[*(int *)(v118 + 48)];
      unint64_t v122 = &v117[*(int *)(v118 + 64)];
      ((void (*)(char *, char *, void (*)(void *, uint64_t)))v137)(v117, v110, v139);
      v135(v121, v111, v150);
      v133(v122, v69, v149);
      *(void *)((char *)v60 + v119) = v155;
      *(void *)((char *)v60 + v120) = v163;
      swift_storeEnumTagMultiPayload();
      *(void *)uint64_t v160 = v64;
      uint64_t v164 = v157;
      uint64_t v165 = v162;
      uint64_t v166 = (uint64_t)v140;
      uint64_t v167 = v159;
      v168 = v158;
      v169 = v156;
      type metadata accessor for CombineLatestStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
    case 2u:
      __break(1u);
      goto LABEL_30;
    case 3u:
      uint64_t v163 = (void (*)(void, void))*v30;
      uint64_t v70 = *(void (**)(void *, uint64_t))(v28 + 8);
      v70(v26, v27);
      swift_storeEnumTagMultiPayload();
      uint64_t v71 = v153;
      sub_24E862108();
      unint64_t v72 = v144;
      sub_24E8620E8();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v72, 1, v71) == 1)
      {
        swift_release();
        (*(void (**)(char *, uint64_t))(v141 + 8))(v72, v154);
        v70(v26, v27);
        swift_storeEnumTagMultiPayload();
LABEL_15:
        *(void *)uint64_t v160 = v155;
        uint64_t v164 = v157;
        uint64_t v165 = v25;
        uint64_t v166 = (uint64_t)v10;
        uint64_t v167 = v159;
        v168 = v158;
        v169 = v156;
        type metadata accessor for CombineLatestStateMachine.NextAction();
      }
      else
      {
        uint64_t v94 = *(int *)(v71 + 48);
        uint64_t v95 = &v140[v94];
        uint64_t v147 = (uint64_t)&v140[v94];
        uint64_t v96 = *(int *)(v71 + 64);
        uint64_t v151 = &v140[v96];
        uint64_t v139 = v70;
        uint64_t v97 = v26;
        uint64_t v98 = &v72[v94];
        uint64_t v99 = &v72[v96];
        uint64_t v100 = *(void *)(v148 - 8);
        uint64_t v149 = *(void (**)(char *, char *))(v100 + 32);
        uint64_t v150 = v100 + 32;
        v149(v140, v72);
        uint64_t v101 = v146;
        uint64_t v102 = *(void *)(v146 - 8);
        uint64_t v144 = *(char **)(v102 + 32);
        uint64_t v145 = (char *)(v102 + 32);
        ((void (*)(char *, char *, uint64_t))v144)(v95, v98, v146);
        uint64_t v103 = v143;
        uint64_t v104 = *(void *)(v143 - 8);
        uint64_t v141 = *(void *)(v104 + 32);
        uint64_t v142 = (char *)(v104 + 32);
        ((void (*)(char *, char *, uint64_t))v141)(v151, v99, v143);
        v139(v97, v27);
        *uint64_t v97 = v163;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
        sub_24E864AA8();
        sub_24E8640A8();
        uint64_t v105 = &v160[*(int *)(swift_getTupleTypeMetadata2() + 48)];
        *(void *)uint64_t v160 = v155;
        uint64_t v106 = v153;
        uint64_t v107 = &v105[*(int *)(v153 + 48)];
        unint64_t v108 = &v105[*(int *)(v153 + 64)];
        ((void (*)(char *, char *, uint64_t))v149)(v105, v140, v148);
        ((void (*)(char *, uint64_t, uint64_t))v144)(v107, v147, v101);
        ((void (*)(char *, char *, uint64_t))v141)(v108, v151, v103);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v152 + 56))(v105, 0, 1, v106);
        swift_storeEnumTagMultiPayload();
        uint64_t v164 = v157;
        uint64_t v165 = v25;
        uint64_t v166 = (uint64_t)v10;
        uint64_t v167 = v159;
        v168 = v158;
        v169 = v156;
        type metadata accessor for CombineLatestStateMachine.NextAction();
      }
      return swift_storeEnumTagMultiPayload();
    case 4u:
      unint64_t v73 = (void (*)(void, void))*v30;
      (*(void (**)(void *, uint64_t))(v28 + 8))(v26, v27);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
      sub_24E864AA8();
      sub_24E8640A8();
      uint64_t v74 = &v160[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      *(void *)uint64_t v160 = v155;
      *(void *)uint64_t v74 = v73;
      swift_storeEnumTagMultiPayload();
      uint64_t v164 = v157;
      uint64_t v165 = v25;
      uint64_t v166 = (uint64_t)v10;
      uint64_t v167 = v159;
      v168 = v158;
      v169 = v156;
      type metadata accessor for CombineLatestStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
    case 5u:
      goto LABEL_15;
    case 6u:
LABEL_30:
      __break(1u);
      JUMPOUT(0x24E583FACLL);
    default:
      uint64_t v31 = sub_24E864388();
      uint64_t v32 = v157;
      uint64_t v33 = swift_getTupleTypeMetadata3();
      uint64_t v34 = (char *)v30 + *(int *)(v33 + 48);
      uint64_t v35 = (uint64_t)v10;
      uint64_t v36 = (char *)v30 + *(int *)(v33 + 64);
      uint64_t v37 = v160;
      (*(void (**)(char *, void *, char *))(*((void *)v32 - 1) + 32))(v160, v30, v32);
      uint64_t v38 = swift_getTupleTypeMetadata3();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(&v37[*(int *)(v38 + 48)], v34, v25);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(&v37[*(int *)(v38 + 64)], v36, v31);
      uint64_t v164 = v32;
      uint64_t v165 = v25;
      uint64_t v166 = v35;
      uint64_t v167 = v159;
      v168 = v158;
      v169 = v156;
      type metadata accessor for CombineLatestStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_24E583FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v6, a1, a4);

  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_24E58405C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_24E864388();
  swift_getTupleTypeMetadata3();
  sub_24E864388();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  uint64_t v3 = sub_24E864AA8();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E584248, 0, 0);
}

uint64_t sub_24E584248()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2698F1FB8 + dword_2698F1FB8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E584310;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[3];
  return v5(v2, 0, 0, (uint64_t)sub_24E5AC074, v3);
}

uint64_t sub_24E584310()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E58440C, 0, 0);
}

uint64_t sub_24E58440C()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t WitnessTable = swift_getWitnessTable();
  (*(void (**)(uint64_t, uint64_t))(WitnessTable + 16))(v3, WitnessTable);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

void sub_24E5844F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  type metadata accessor for CombineLatestStateMachine();
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_24E5AC07C(v3);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_24E5845D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v78 = a2;
  uint64_t v85 = a1;
  uint64_t v4 = *(void **)a3;
  uint64_t v5 = *(void *)(*(void *)a3 + 80);
  uint64_t v6 = *(void *)(*(void *)a3 + 104);
  swift_getAssociatedTypeWitness();
  uint64_t v77 = v4[14];
  uint64_t v7 = v4[11];
  swift_getAssociatedTypeWitness();
  uint64_t v8 = v4[15];
  uint64_t v65 = a3;
  uint64_t v9 = v4[12];
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  swift_getAssociatedTypeWitness();
  sub_24E864388();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  sub_24E864388();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  uint64_t v12 = sub_24E864AA8();
  uint64_t v72 = *(void *)(v12 - 8);
  unint64_t v73 = (char *)v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  unint64_t v68 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v71 = (char *)&v59 - v15;
  uint64_t v76 = v11;
  uint64_t v16 = sub_24E864388();
  uint64_t v66 = *(void *)(v16 - 8);
  uint64_t v67 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  unint64_t v63 = (char *)&v59 - v18;
  uint64_t v64 = *(void *)(v7 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v61 = (char *)&v59 - v20;
  uint64_t v62 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v60 = (char *)&v59 - v21;
  uint64_t v79 = v5;
  uint64_t v80 = v7;
  uint64_t v81 = v11;
  uint64_t v82 = v6;
  uint64_t v22 = v6;
  uint64_t v23 = v77;
  uint64_t v83 = v77;
  uint64_t v84 = v10;
  uint64_t Action = type metadata accessor for CombineLatestStateMachine.NextAction();
  uint64_t v25 = *(void *)(Action - 8);
  uint64_t v26 = MEMORY[0x270FA5388](Action);
  uint64_t v28 = (char *)&v59 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v59 - v29;
  uint64_t v74 = v5;
  uint64_t v79 = v5;
  uint64_t v80 = v7;
  uint64_t v70 = v7;
  uint64_t v81 = v76;
  uint64_t v82 = v22;
  uint64_t v31 = v78;
  uint64_t v83 = v23;
  uint64_t v84 = v10;
  uint64_t v32 = (void *)type metadata accessor for CombineLatestStateMachine();
  uint64_t v33 = v85;
  sub_24E582C28(v31, v32, v30);
  uint64_t v76 = v25;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  uint64_t v75 = v30;
  v34(v28, v30, Action);
  uint64_t v77 = Action;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v46 = *(void *)(*(void *)v28 + 16);
      if (v46)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v46; ++i)
          swift_continuation_throwingResume();
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
      return swift_bridgeObjectRelease();
    case 2u:
      uint64_t v49 = *(void *)v28;
      uint64_t v50 = v73;
      sub_24E8640A8();
      uint64_t v51 = &v28[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v53 = v71;
      uint64_t v52 = v72;
      uint64_t v54 = *(void (**)(char *, char *, char *))(v72 + 32);
      v54(v71, v51, v50);
      uint64_t v55 = v68;
      (*(void (**)(char *, char *, char *))(v52 + 16))(v68, v53, v50);
      v54(*(char **)(*(void *)(v49 + 64) + 40), v55, v50);
      swift_continuation_resume();
      (*(void (**)(char *, char *))(v52 + 8))(v53, v50);
      return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v75, v77);
    case 3u:
      uint64_t v56 = *(void *)v28;
      uint64_t v57 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 56))(v71, 1, 1);
      uint64_t v58 = v73;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void, char *, char *))(v72 + 32))(*(void *)(*(void *)(v56 + 64) + 40), v57, v58);
      swift_continuation_resume();
      return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v75, v77);
    default:
      uint64_t v35 = v74;
      uint64_t v36 = v70;
      uint64_t v37 = v67;
      uint64_t v38 = swift_getTupleTypeMetadata3();
      uint64_t v39 = &v28[*(int *)(v38 + 48)];
      unint64_t v73 = &v28[*(int *)(v38 + 64)];
      uint64_t v40 = v62;
      uint64_t v41 = (uint64_t)v60;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v60, v28, v35);
      uint64_t v42 = v64;
      uint64_t v43 = (uint64_t)v61;
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v39, v36);
      uint64_t v44 = v66;
      uint64_t v45 = (uint64_t)v63;
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v63, v73, v37);
      sub_24E584DD0(v33, v41, v43, v45, v31);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v37);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v70);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v74);
      return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v75, v77);
  }
}

uint64_t sub_24E584DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v48 = a1;
  uint64_t v49 = a5;
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v43 = a2;
  uint64_t v7 = *(void **)v5;
  uint64_t v54 = *(void *)(*(void *)v5 + 96);
  uint64_t v53 = sub_24E864388();
  uint64_t v51 = *(void *)(v53 - 8);
  uint64_t v45 = *(void *)(v51 + 64);
  uint64_t v8 = MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v40 - v9;
  uint64_t v50 = v7[11];
  uint64_t v10 = *(void *)(v50 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v8);
  uint64_t v14 = (char *)&v40 - v13;
  uint64_t v42 = (char *)&v40 - v13;
  uint64_t v15 = v7[10];
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v41 = (char *)&v40 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v22;
  uint64_t v23 = sub_24E863FE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v43, v15);
  uint64_t v40 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, v46, v50);
  uint64_t v24 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v52, v47, v53);
  unint64_t v25 = (*(unsigned __int8 *)(v16 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v26 = (v17 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (*(unsigned __int8 *)(v10 + 80) + v26 + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v28 = (v11 + *(unsigned __int8 *)(v24 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = 0;
  *((void *)v29 + 3) = 0;
  uint64_t v30 = v15;
  *((void *)v29 + 4) = v15;
  uint64_t v31 = v50;
  uint64_t v32 = v54;
  *((void *)v29 + 5) = v50;
  *((void *)v29 + 6) = v32;
  uint64_t v47 = v7[13];
  *((void *)v29 + 7) = v47;
  uint64_t v33 = v7[14];
  *((void *)v29 + 8) = v33;
  uint64_t v34 = v7[15];
  *((void *)v29 + 9) = v34;
  uint64_t v35 = &v29[v25];
  uint64_t v36 = v30;
  (*(void (**)(char *, char *))(v16 + 32))(v35, v41);
  *(void *)&v29[v26] = v6;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v29[v27], v42, v31);
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(&v29[v28], v52, v53);
  swift_retain();
  uint64_t v37 = (void **)sub_24E5C54D0((uint64_t)v44, (uint64_t)&unk_2698F1FC8, (uint64_t)v29);
  uint64_t v55 = v36;
  uint64_t v56 = v31;
  uint64_t v57 = v54;
  uint64_t v58 = v47;
  uint64_t v59 = v33;
  uint64_t v60 = v34;
  uint64_t v38 = (void *)type metadata accessor for CombineLatestStateMachine();
  sub_24E57B328(v37, v49, v38);
  return swift_release();
}

uint64_t sub_24E585234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v6 = sub_24E863F18();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  return MEMORY[0x270FA2498](sub_24E5852C8, v6, v8);
}

uint64_t sub_24E5852C8()
{
  uint64_t v1 = (void (*)(uint64_t))v0[11];
  uint64_t v2 = v0[10];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_24E585370;
  uint64_t v3 = swift_continuation_init();
  v1(v3);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24E585370()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 8);
  return v1();
}

void sub_24E585448(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  type metadata accessor for CombineLatestStateMachine();
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_24E5ABFF8(v2);
  os_unfair_lock_unlock(v3);
}

unint64_t sub_24E585590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7)
{
  uint64_t v35 = a6;
  uint64_t v34 = a7;
  uint64_t v42 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_24E864388();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  sub_24E864388();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  uint64_t v12 = sub_24E864AA8();
  uint64_t v33 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v40 = v35;
  uint64_t v41 = v34;
  uint64_t v15 = (void *)type metadata accessor for CombineLatestStateMachine();
  unint64_t result = sub_24E581A70(v15);
  if ((~result & 0xF000000000000007) != 0)
  {
    uint64_t v19 = result;
    uint64_t v35 = v14;
    uint64_t v42 = v17;
    if ((result & 0x8000000000000000) != 0)
    {
      uint64_t v24 = result & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v25 = *(void *)(v17 + 16);
      if (v25)
      {
        unint64_t v32 = result;
        sub_24E863F68();
        sub_24E5AB52C();
        uint64_t v35 = (char *)v24;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v26 = 0;
        do
        {
          ++v26;
          uint64_t v27 = swift_allocError();
          sub_24E863B28();
          swift_allocError();
          uint64_t *v28 = v27;
          swift_continuation_throwingResumeWithError();
        }
        while (v25 != v26);
        swift_bridgeObjectRelease();
        uint64_t v19 = v32;
      }
      else
      {
        swift_retain();
      }
      sub_24E864068();
      sub_24E5AC01C(v19);
      return swift_release();
    }
    else
    {
      uint64_t v34 = v12;
      uint64_t v20 = *(void *)(v18 + 16);
      if (v20)
      {
        uint64_t v31 = TupleTypeMetadata3;
        unint64_t v32 = result;
        sub_24E863F68();
        sub_24E5AB52C();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v21 = 0;
        do
        {
          ++v21;
          uint64_t v22 = swift_allocError();
          sub_24E863B28();
          swift_allocError();
          uint64_t *v23 = v22;
          swift_continuation_throwingResumeWithError();
        }
        while (v20 != v21);
        swift_bridgeObjectRelease();
        TupleTypeMetadata3 = v31;
        uint64_t v19 = v32;
      }
      else
      {
        swift_retain();
      }
      sub_24E864068();
      uint64_t v29 = v35;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 56))(v35, 1, 1, TupleTypeMetadata3);
      uint64_t v30 = v34;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void, char *, uint64_t))(v33 + 32))(*(void *)(*(void *)(v19 + 64) + 40), v29, v30);
      swift_continuation_resume();
      swift_release();
      return sub_24E5AC01C(v19);
    }
  }
  return result;
}

uint64_t sub_24E5859FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_24E585A24, 0, 0);
}

uint64_t sub_24E585A24()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24E5C54C4;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  uint64_t v6 = MEMORY[0x263F8EE60] + 8;
  uint64_t v7 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA22B8](v4, v5, v6, 0, 0, &unk_2698F1FD8, v1, v7);
}

uint64_t sub_24E585B14(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[9] = a3;
  v6[10] = a4;
  v6[8] = a2;
  uint64_t v7 = (void *)*a4;
  v6[13] = *a4;
  uint64_t v8 = v7[12];
  v6[14] = v8;
  uint64_t v9 = sub_24E864388();
  v6[15] = v9;
  v6[16] = *(void *)(v9 - 8);
  v6[17] = swift_task_alloc();
  uint64_t v10 = *(void *)(v8 - 8);
  v6[18] = v10;
  v6[19] = *(void *)(v10 + 64);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  uint64_t v11 = v7[11];
  v6[22] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v6[23] = v12;
  v6[24] = *(void *)(v12 + 64);
  v6[25] = swift_task_alloc();
  uint64_t v13 = v7[10];
  v6[26] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v6[27] = v14;
  v6[28] = *(void *)(v14 + 64);
  v6[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  v6[30] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E585DA8, 0, 0);
}

uint64_t sub_24E585DA8()
{
  uint64_t v2 = v0[29];
  uint64_t v1 = v0[30];
  uint64_t v53 = v1;
  uint64_t v3 = v0[27];
  uint64_t v34 = v0[28];
  uint64_t v4 = v0[26];
  uint64_t v42 = v0[25];
  uint64_t v43 = v0[24];
  uint64_t v5 = v0[22];
  uint64_t v33 = v5;
  uint64_t v46 = v0[16];
  uint64_t v47 = v0[17];
  uint64_t v6 = v0[14];
  uint64_t v48 = v0[15];
  uint64_t v50 = v0[18];
  uint64_t v38 = v6;
  uint64_t v7 = (void *)v0[13];
  uint64_t v45 = v0[12];
  uint64_t v39 = v0[11];
  uint64_t v41 = v0[23];
  uint64_t v8 = v0[9];
  uint64_t v55 = v0[10];
  uint64_t v9 = sub_24E863FE8();
  uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v52(v1, 1, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v8, v4);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = 0;
  *((void *)v11 + 3) = 0;
  uint64_t v12 = v4;
  uint64_t v36 = v4;
  *((void *)v11 + 4) = v4;
  *((void *)v11 + 5) = v5;
  *((void *)v11 + 6) = v6;
  uint64_t v13 = v7[13];
  v0[31] = v13;
  *((void *)v11 + 7) = v13;
  uint64_t v14 = v7[14];
  v0[32] = v14;
  *((void *)v11 + 8) = v14;
  uint64_t v15 = v7[15];
  v0[33] = v15;
  *((void *)v11 + 9) = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v11[v10], v2, v12);
  *(void *)&v11[(v34 + v10 + 7) & 0xFFFFFFFFFFFFFFF8] = v55;
  swift_retain();
  sub_24E588030(v53, (uint64_t)&unk_2698F1FE8, (uint64_t)v11);
  sub_24E569A98(v53);
  uint64_t v35 = v9;
  v52(v53, 1, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v42, v39, v33);
  unint64_t v16 = (*(unsigned __int8 *)(v41 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  unint64_t v17 = (v43 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = 0;
  *((void *)v18 + 3) = 0;
  *((void *)v18 + 4) = v36;
  *((void *)v18 + 5) = v33;
  *((void *)v18 + 6) = v38;
  *((void *)v18 + 7) = v13;
  uint64_t v40 = v13;
  uint64_t v44 = v14;
  *((void *)v18 + 8) = v14;
  *((void *)v18 + 9) = v15;
  uint64_t v37 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(&v18[v16], v42, v33);
  *(void *)&v18[v17] = v55;
  swift_retain();
  sub_24E588030(v53, (uint64_t)&unk_2698F1FF8, (uint64_t)v18);
  sub_24E569A98(v53);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v47, v45, v48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v47, 1, v38) == 1)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  }
  else
  {
    uint64_t v19 = v0[30];
    uint64_t v54 = v0[26];
    uint64_t v20 = v0[21];
    uint64_t v21 = v0[19];
    uint64_t v22 = v0[20];
    uint64_t v49 = v22;
    uint64_t v51 = v0[22];
    uint64_t v23 = v0[18];
    uint64_t v24 = v0[14];
    uint64_t v56 = v0[10];
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
    v25(v20, v0[17], v24);
    v52(v19, 1, 1, v35);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v22, v20, v24);
    unint64_t v26 = (*(unsigned __int8 *)(v23 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    unint64_t v27 = (v21 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (void *)swift_allocObject();
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = v54;
    v28[5] = v51;
    v28[6] = v24;
    v28[7] = v40;
    v28[8] = v44;
    v28[9] = v37;
    v25((uint64_t)v28 + v26, v49, v24);
    *(void *)((char *)v28 + v27) = v56;
    swift_retain();
    sub_24E588030(v19, (uint64_t)&unk_2698F2008, (uint64_t)v28);
    sub_24E569A98(v19);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v20, v24);
  }
  v0[34] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
  if (sub_24E8640C8())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = (uint64_t (*)(void))v0[1];
    return v29();
  }
  else
  {
    uint64_t v31 = (void *)swift_task_alloc();
    v0[35] = v31;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1F78);
    *uint64_t v31 = v0;
    v31[1] = sub_24E58636C;
    return MEMORY[0x270FA2048](v0 + 37, 0, 0, v32);
  }
}

uint64_t sub_24E58636C()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E5865E8;
  }
  else {
    uint64_t v2 = sub_24E586480;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E586480()
{
  if (sub_24E8640C8())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v3;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1F78);
    *uint64_t v3 = v0;
    v3[1] = sub_24E58636C;
    return MEMORY[0x270FA2048](v0 + 296, 0, 0, v4);
  }
}

uint64_t sub_24E5865E8()
{
  uint64_t v1 = (void *)v0[36];
  uint64_t v2 = v0[33];
  uint64_t v4 = v0[31];
  uint64_t v3 = v0[32];
  uint64_t v5 = v0[26];
  uint64_t v6 = v0[22];
  uint64_t v7 = v0[14];
  uint64_t v8 = *(void *)(v0[10] + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  v9[2] = v5;
  v9[3] = v6;
  v9[4] = v7;
  v9[5] = v4;
  v9[6] = v3;
  v9[7] = v2;
  v9[8] = v1;
  v0[2] = v5;
  v0[3] = v6;
  v0[4] = v7;
  v0[5] = v4;
  v0[6] = v3;
  v0[7] = v2;
  type metadata accessor for CombineLatestStateMachine();
  uint64_t v10 = v8 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v8 + 16);
  uint64_t v11 = (os_unfair_lock_s *)(v8 + ((*(unsigned int *)(*(void *)v8 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v11);
  sub_24E5AC968(v10);
  os_unfair_lock_unlock(v11);
  swift_task_dealloc();
  sub_24E8640D8();

  if (sub_24E8640C8())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  else
  {
    uint64_t v14 = (void *)swift_task_alloc();
    v0[35] = v14;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1F78);
    void *v14 = v0;
    v14[1] = sub_24E58636C;
    return MEMORY[0x270FA2048](v0 + 37, 0, 0, v15);
  }
}

uint64_t sub_24E586860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[31] = a4;
  v5[32] = a5;
  uint64_t v6 = *(void **)a5;
  v5[33] = *(void *)(*(void *)a5 + 104);
  uint64_t v7 = v6[10];
  v5[34] = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[35] = AssociatedTypeWitness;
  v5[36] = v6[14];
  v5[37] = v6[11];
  swift_getAssociatedTypeWitness();
  v5[38] = v6[15];
  v5[39] = v6[12];
  swift_getAssociatedTypeWitness();
  sub_24E864388();
  v5[40] = swift_getTupleTypeMetadata3();
  sub_24E864388();
  v5[41] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  uint64_t v9 = sub_24E864AA8();
  v5[42] = v9;
  v5[43] = *(void *)(v9 - 8);
  v5[44] = swift_task_alloc();
  uint64_t v10 = sub_24E864388();
  v5[45] = v10;
  v5[46] = *(void *)(v10 - 8);
  v5[47] = swift_task_alloc();
  v5[48] = *(void *)(AssociatedTypeWitness - 8);
  v5[49] = swift_task_alloc();
  v5[50] = *(void *)(v7 - 8);
  v5[51] = swift_task_alloc();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  v5[52] = v11;
  v5[53] = *(void *)(v11 - 8);
  v5[54] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E586BCC, 0, 0);
}

uint64_t sub_24E586BCC()
{
  (*(void (**)(void, void, void))(v0[50] + 16))(v0[51], v0[31], v0[34]);
  sub_24E8640E8();
  return MEMORY[0x270FA2498](sub_24E586C70, 0, 0);
}

uint64_t sub_24E586C70()
{
  uint64_t v1 = v0[32];
  v0[2] = v0;
  v0[3] = sub_24E586D08;
  uint64_t v2 = swift_continuation_init();
  sub_24E5875C0(v2, v1);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24E586D08()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 440) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x270FA2498](sub_24E5C54BC, 0, 0);
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v5 = (void *)swift_task_alloc();
    v1[56] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_24E586EBC;
    uint64_t v6 = v1[52];
    uint64_t v7 = v1[47];
    return MEMORY[0x270FA1E80](v7, v6, AssociatedConformanceWitness);
  }
}

uint64_t sub_24E586EBC()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E5C54C0;
  }
  else {
    uint64_t v2 = sub_24E586FD0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E586FD0()
{
  uint64_t v1 = v0[47];
  uint64_t v2 = v0[48];
  uint64_t v3 = v0[35];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = v0[38];
    uint64_t v5 = v0[39];
    uint64_t v7 = v0[36];
    uint64_t v6 = v0[37];
    uint64_t v9 = v0[33];
    uint64_t v8 = v0[34];
    uint64_t v10 = v0[32];
    (*(void (**)(uint64_t, void))(v0[46] + 8))(v1, v0[45]);
    uint64_t v11 = *(void *)(v10 + 16);
    uint64_t v12 = (void *)swift_task_alloc();
    v12[2] = v8;
    uint64_t v12[3] = v6;
    v12[4] = v5;
    v12[5] = v9;
    v12[6] = v7;
    v12[7] = v4;
    v0[10] = v8;
    v0[11] = v6;
    v0[12] = v5;
    v0[13] = v9;
    v0[14] = v7;
    v0[15] = v4;
    type metadata accessor for CombineLatestStateMachine();
    v0[16] = v8;
    v0[17] = v6;
    v0[18] = v5;
    v0[19] = v9;
    v0[20] = v7;
    v0[21] = v4;
    type metadata accessor for CombineLatestStateMachine.UpstreamFinishedAction();
    sub_24E864388();
    uint64_t v13 = (os_unfair_lock_s *)(v11 + ((*(unsigned int *)(*(void *)v11 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v13);
    sub_24E5ACDE0(v0 + 28);
    os_unfair_lock_unlock(v13);
    swift_task_dealloc();
    uint64_t v14 = v0[28];
    if ((~v14 & 0xF000000000000007) != 0)
    {
      uint64_t v15 = v0[30];
      if (v14 < 0)
      {
        uint64_t v32 = v14 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v33 = *(void *)(v15 + 16);
        if (v33)
        {
          uint64_t v45 = v14 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v48 = v0[28];
          sub_24E863F68();
          sub_24E5AB52C();
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v34 = 0;
          do
          {
            ++v34;
            uint64_t v35 = v15;
            uint64_t v36 = swift_allocError();
            sub_24E863B28();
            swift_allocError();
            *uint64_t v37 = v36;
            uint64_t v15 = v35;
            swift_continuation_throwingResumeWithError();
          }
          while (v33 != v34);
          swift_bridgeObjectRelease();
          uint64_t v32 = v45;
          uint64_t v14 = v48;
        }
        else
        {
          swift_retain();
        }
        uint64_t v39 = v0[43];
        uint64_t v38 = v0[44];
        uint64_t v40 = v0[42];
        uint64_t v41 = v0[40];
        sub_24E864068();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v38, 1, 1, v41);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void, uint64_t, uint64_t))(v39 + 32))(*(void *)(*(void *)(v32 + 64) + 40), v38, v40);
        swift_continuation_resume();
      }
      else
      {
        uint64_t v16 = *(void *)(v0[29] + 16);
        if (v16)
        {
          sub_24E863F68();
          sub_24E5AB52C();
          uint64_t v46 = v14;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v17 = 0;
          do
          {
            ++v17;
            uint64_t v18 = swift_allocError();
            sub_24E863B28();
            swift_allocError();
            uint64_t *v19 = v18;
            swift_continuation_throwingResumeWithError();
          }
          while (v16 != v17);
          swift_bridgeObjectRelease();
          uint64_t v14 = v46;
        }
        else
        {
          swift_retain();
        }
        sub_24E864068();
      }
      swift_release();
      sub_24E5ACBC4(v14);
    }
    (*(void (**)(void, void))(v0[53] + 8))(v0[54], v0[52]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = (uint64_t (*)(void))v0[1];
    return v42();
  }
  else
  {
    uint64_t v47 = v3;
    uint64_t v20 = v0[49];
    uint64_t v21 = v0[39];
    uint64_t v44 = v0[38];
    uint64_t v23 = v0[36];
    uint64_t v22 = v0[37];
    uint64_t v24 = v3;
    uint64_t v25 = v0[33];
    uint64_t v26 = v0[34];
    uint64_t v27 = v0[32];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v20, v1, v24);
    uint64_t v28 = *(void *)(v27 + 16);
    uint64_t v29 = (void *)swift_task_alloc();
    v29[2] = v26;
    id v29[3] = v22;
    v29[4] = v21;
    v29[5] = v25;
    v29[6] = v23;
    v29[7] = v44;
    v29[8] = v20;
    v0[22] = v26;
    v0[23] = v22;
    v0[24] = v21;
    v0[25] = v25;
    v0[26] = v23;
    v0[27] = v44;
    type metadata accessor for CombineLatestStateMachine();
    uint64_t v30 = v28 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v28 + 16);
    uint64_t v31 = (os_unfair_lock_s *)(v28 + ((*(unsigned int *)(*(void *)v28 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v31);
    sub_24E5ACE78(v30);
    os_unfair_lock_unlock(v31);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v20, v47);
    return MEMORY[0x270FA2498](sub_24E586C70, 0, 0);
  }
}

void sub_24E5875C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  type metadata accessor for CombineLatestStateMachine();
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_24E5ACED4(v3);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_24E587708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v6 = sub_24E863F18();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  return MEMORY[0x270FA2498](sub_24E58779C, v6, v8);
}

uint64_t sub_24E58779C()
{
  uint64_t v1 = (void (*)(uint64_t))v0[11];
  uint64_t v2 = v0[10];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_24E587844;
  uint64_t v3 = swift_continuation_init();
  v1(v3);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24E587844()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_24E58794C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v63 = a7;
  uint64_t v64 = a8;
  uint64_t v65 = a3;
  uint64_t v72 = a6;
  uint64_t v61 = a2;
  uint64_t v62 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v50 = a4;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v51 = a5;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v52 = v11;
  uint64_t v12 = sub_24E864388();
  uint64_t v59 = v12;
  swift_getTupleTypeMetadata3();
  sub_24E864388();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  uint64_t v49 = sub_24E864AA8();
  uint64_t v48 = *(void *)(v49 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v49);
  uint64_t v46 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v47 = (char *)&v46 - v16;
  uint64_t v58 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v46 - v17;
  uint64_t v19 = sub_24E864388();
  uint64_t v56 = *(void *)(v19 - 8);
  uint64_t v57 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v46 - v20;
  uint64_t v22 = sub_24E864388();
  uint64_t v54 = *(void *)(v22 - 8);
  uint64_t v55 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char **)((char *)&v46 - v23);
  uint64_t v66 = v65;
  uint64_t v67 = a4;
  uint64_t v68 = a5;
  uint64_t v69 = v72;
  uint64_t v70 = v63;
  uint64_t v71 = v64;
  uint64_t v53 = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
  uint64_t v25 = sub_24E864388();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (uint64_t *)((char *)&v46 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (int **)((char *)&v46 - v30);
  uint64_t v32 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v32 + 16))(v24, v61, AssociatedTypeWitness);
  uint64_t v33 = AssociatedTypeWitness;
  uint64_t v34 = v25;
  (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v24, 0, 1, v33);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v21, 1, 1);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v18, 1, 1);
  uint64_t v66 = v65;
  uint64_t v67 = v50;
  uint64_t v68 = v51;
  uint64_t v69 = v72;
  uint64_t v70 = v63;
  uint64_t v71 = v64;
  uint64_t v35 = (void *)type metadata accessor for CombineLatestStateMachine();
  sub_24E57C690(v24, v21, v18, v35, v31);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v18, v59);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v21, v57);
  (*(void (**)(void *, uint64_t))(v54 + 8))(v24, v55);
  uint64_t v36 = *(void (**)(uint64_t *, int **, uint64_t))(v26 + 16);
  uint64_t v37 = v31;
  uint64_t v72 = v34;
  v36(v29, v31, v34);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(*(void *)(v53 - 8) + 48))(v29, 1) != 1)
  {
    uint64_t v38 = *v29;
    uint64_t v39 = v49;
    sub_24E8640A8();
    uint64_t v40 = (char *)v29 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    uint64_t v41 = v48;
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    uint64_t v43 = v47;
    v42(v47, v40, v39);
    uint64_t v44 = v46;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v46, v43, v39);
    v42(*(char **)(*(void *)(v38 + 64) + 40), v44, v39);
    swift_continuation_resume();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v39);
  }
  return (*(uint64_t (**)(int **, uint64_t))(v26 + 8))(v37, v72);
}

uint64_t sub_24E588030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E56A108(a1, (uint64_t)v9);
  uint64_t v10 = sub_24E863FE8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_24E569A98((uint64_t)v9);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_24E863F18();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_24E863FD8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  uint64_t v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_24E588200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[31] = a4;
  v5[32] = a5;
  uint64_t v6 = *(void **)a5;
  v5[33] = *(void *)(*(void *)a5 + 104);
  v5[34] = v6[10];
  swift_getAssociatedTypeWitness();
  v5[35] = v6[14];
  uint64_t v7 = v6[11];
  v5[36] = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[37] = AssociatedTypeWitness;
  v5[38] = v6[15];
  v5[39] = v6[12];
  swift_getAssociatedTypeWitness();
  sub_24E864388();
  v5[40] = swift_getTupleTypeMetadata3();
  sub_24E864388();
  v5[41] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  uint64_t v9 = sub_24E864AA8();
  v5[42] = v9;
  v5[43] = *(void *)(v9 - 8);
  v5[44] = swift_task_alloc();
  uint64_t v10 = sub_24E864388();
  v5[45] = v10;
  v5[46] = *(void *)(v10 - 8);
  v5[47] = swift_task_alloc();
  v5[48] = *(void *)(AssociatedTypeWitness - 8);
  v5[49] = swift_task_alloc();
  v5[50] = *(void *)(v7 - 8);
  v5[51] = swift_task_alloc();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  v5[52] = v11;
  v5[53] = *(void *)(v11 - 8);
  v5[54] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E58856C, 0, 0);
}

uint64_t sub_24E58856C()
{
  (*(void (**)(void, void, void))(v0[50] + 16))(v0[51], v0[31], v0[36]);
  sub_24E8640E8();
  return MEMORY[0x270FA2498](sub_24E588610, 0, 0);
}

uint64_t sub_24E588610()
{
  uint64_t v1 = v0[32];
  v0[2] = v0;
  v0[3] = sub_24E5886A8;
  uint64_t v2 = swift_continuation_init();
  sub_24E5890D8(v2, v1);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24E5886A8()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 440) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x270FA2498](sub_24E588970, 0, 0);
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v5 = (void *)swift_task_alloc();
    v1[56] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_24E58885C;
    uint64_t v6 = v1[52];
    uint64_t v7 = v1[47];
    return MEMORY[0x270FA1E80](v7, v6, AssociatedConformanceWitness);
  }
}

uint64_t sub_24E58885C()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E58901C;
  }
  else {
    uint64_t v2 = sub_24E588A2C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E588970()
{
  (*(void (**)(void, void))(v0[53] + 8))(v0[54], v0[52]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E588A2C()
{
  uint64_t v1 = v0[47];
  uint64_t v2 = v0[48];
  uint64_t v3 = v0[37];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = v0[38];
    uint64_t v5 = v0[39];
    uint64_t v7 = v0[35];
    uint64_t v6 = v0[36];
    uint64_t v9 = v0[33];
    uint64_t v8 = v0[34];
    uint64_t v10 = v0[32];
    (*(void (**)(uint64_t, void))(v0[46] + 8))(v1, v0[45]);
    uint64_t v11 = *(void *)(v10 + 16);
    uint64_t v12 = (void *)swift_task_alloc();
    v12[2] = v8;
    uint64_t v12[3] = v6;
    v12[4] = v5;
    v12[5] = v9;
    v12[6] = v7;
    v12[7] = v4;
    v0[10] = v8;
    v0[11] = v6;
    v0[12] = v5;
    v0[13] = v9;
    v0[14] = v7;
    v0[15] = v4;
    type metadata accessor for CombineLatestStateMachine();
    v0[16] = v8;
    v0[17] = v6;
    v0[18] = v5;
    v0[19] = v9;
    v0[20] = v7;
    v0[21] = v4;
    type metadata accessor for CombineLatestStateMachine.UpstreamFinishedAction();
    sub_24E864388();
    uint64_t v13 = (os_unfair_lock_s *)(v11 + ((*(unsigned int *)(*(void *)v11 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v13);
    sub_24E5ACD7C(v0 + 28);
    os_unfair_lock_unlock(v13);
    swift_task_dealloc();
    uint64_t v14 = v0[28];
    if ((~v14 & 0xF000000000000007) != 0)
    {
      uint64_t v15 = v0[30];
      if (v14 < 0)
      {
        uint64_t v32 = v14 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v33 = *(void *)(v15 + 16);
        if (v33)
        {
          uint64_t v45 = v14 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v48 = v0[28];
          sub_24E863F68();
          sub_24E5AB52C();
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v34 = 0;
          do
          {
            ++v34;
            uint64_t v35 = v15;
            uint64_t v36 = swift_allocError();
            sub_24E863B28();
            swift_allocError();
            *uint64_t v37 = v36;
            uint64_t v15 = v35;
            swift_continuation_throwingResumeWithError();
          }
          while (v33 != v34);
          swift_bridgeObjectRelease();
          uint64_t v32 = v45;
          uint64_t v14 = v48;
        }
        else
        {
          swift_retain();
        }
        uint64_t v39 = v0[43];
        uint64_t v38 = v0[44];
        uint64_t v40 = v0[42];
        uint64_t v41 = v0[40];
        sub_24E864068();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v38, 1, 1, v41);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void, uint64_t, uint64_t))(v39 + 32))(*(void *)(*(void *)(v32 + 64) + 40), v38, v40);
        swift_continuation_resume();
      }
      else
      {
        uint64_t v16 = *(void *)(v0[29] + 16);
        if (v16)
        {
          sub_24E863F68();
          sub_24E5AB52C();
          uint64_t v46 = v14;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v17 = 0;
          do
          {
            ++v17;
            uint64_t v18 = swift_allocError();
            sub_24E863B28();
            swift_allocError();
            uint64_t *v19 = v18;
            swift_continuation_throwingResumeWithError();
          }
          while (v16 != v17);
          swift_bridgeObjectRelease();
          uint64_t v14 = v46;
        }
        else
        {
          swift_retain();
        }
        sub_24E864068();
      }
      swift_release();
      sub_24E5ACBC4(v14);
    }
    (*(void (**)(void, void))(v0[53] + 8))(v0[54], v0[52]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = (uint64_t (*)(void))v0[1];
    return v42();
  }
  else
  {
    uint64_t v47 = v3;
    uint64_t v20 = v0[49];
    uint64_t v21 = v0[39];
    uint64_t v44 = v0[38];
    uint64_t v23 = v0[35];
    uint64_t v22 = v0[36];
    uint64_t v24 = v3;
    uint64_t v25 = v0[33];
    uint64_t v26 = v0[34];
    uint64_t v27 = v0[32];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v20, v1, v24);
    uint64_t v28 = *(void *)(v27 + 16);
    uint64_t v29 = (void *)swift_task_alloc();
    v29[2] = v26;
    id v29[3] = v22;
    v29[4] = v21;
    v29[5] = v25;
    v29[6] = v23;
    v29[7] = v44;
    v29[8] = v20;
    v0[22] = v26;
    v0[23] = v22;
    v0[24] = v21;
    v0[25] = v25;
    v0[26] = v23;
    v0[27] = v44;
    type metadata accessor for CombineLatestStateMachine();
    uint64_t v30 = v28 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v28 + 16);
    uint64_t v31 = (os_unfair_lock_s *)(v28 + ((*(unsigned int *)(*(void *)v28 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v31);
    sub_24E5ACD98(v30);
    os_unfair_lock_unlock(v31);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v20, v47);
    return MEMORY[0x270FA2498](sub_24E588610, 0, 0);
  }
}

uint64_t sub_24E58901C()
{
  (*(void (**)(void, void))(v0[53] + 8))(v0[54], v0[52]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_24E5890D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  type metadata accessor for CombineLatestStateMachine();
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_24E5ACDC4(v3);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_24E589220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int **a6, uint64_t a7, uint64_t a8)
{
  uint64_t v63 = a7;
  uint64_t v64 = a8;
  uint64_t v71 = a6;
  uint64_t v61 = a2;
  uint64_t v62 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v51 = a4;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v52 = a5;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_24E864388();
  uint64_t v59 = v13;
  swift_getTupleTypeMetadata3();
  sub_24E864388();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  uint64_t v49 = sub_24E864AA8();
  uint64_t v48 = *(void *)(v49 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v49);
  uint64_t v46 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v47 = (char *)&v45 - v17;
  uint64_t v58 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v45 - v18;
  uint64_t v20 = sub_24E864388();
  uint64_t v56 = *(void *)(v20 - 8);
  uint64_t v57 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v45 - v21;
  uint64_t v23 = AssociatedTypeWitness;
  uint64_t v24 = sub_24E864388();
  uint64_t v54 = *(void *)(v24 - 8);
  uint64_t v55 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (uint64_t *)((char *)&v45 - v25);
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  uint64_t v67 = a5;
  uint64_t v68 = v71;
  uint64_t v69 = v63;
  uint64_t v70 = v64;
  uint64_t v53 = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
  uint64_t v27 = sub_24E864388();
  uint64_t v50 = *(void *)(v27 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (uint64_t *)((char *)&v45 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (int **)((char *)&v45 - v31);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v26, 1, 1, v23);
  uint64_t v33 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v22, v61, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v22, 0, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v19, 1, 1);
  uint64_t v65 = a3;
  uint64_t v34 = v50;
  uint64_t v66 = v51;
  uint64_t v67 = v52;
  uint64_t v68 = v71;
  uint64_t v69 = v63;
  uint64_t v70 = v64;
  uint64_t v35 = (void *)type metadata accessor for CombineLatestStateMachine();
  sub_24E57C690(v26, v22, v19, v35, v32);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v19, v59);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v22, v57);
  (*(void (**)(void *, uint64_t))(v54 + 8))(v26, v55);
  uint64_t v36 = *(void (**)(uint64_t *, int **, uint64_t))(v34 + 16);
  uint64_t v71 = v32;
  v36(v30, v32, v27);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(*(void *)(v53 - 8) + 48))(v30, 1) != 1)
  {
    uint64_t v37 = *v30;
    uint64_t v38 = v49;
    sub_24E8640A8();
    uint64_t v39 = (char *)v30 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    uint64_t v40 = v48;
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    uint64_t v42 = v47;
    v41(v47, v39, v38);
    uint64_t v43 = v46;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v46, v42, v38);
    v41(*(char **)(*(void *)(v37 + 64) + 40), v43, v38);
    swift_continuation_resume();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v38);
  }
  return (*(uint64_t (**)(int **, uint64_t))(v34 + 8))(v71, v27);
}

uint64_t sub_24E5898F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[31] = a4;
  v5[32] = a5;
  uint64_t v6 = *(void **)a5;
  v5[33] = *(void *)(*(void *)a5 + 104);
  v5[34] = v6[10];
  swift_getAssociatedTypeWitness();
  v5[35] = v6[14];
  v5[36] = v6[11];
  swift_getAssociatedTypeWitness();
  v5[37] = v6[15];
  uint64_t v7 = v6[12];
  v5[38] = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[39] = AssociatedTypeWitness;
  uint64_t v9 = sub_24E864388();
  v5[40] = v9;
  v5[41] = swift_getTupleTypeMetadata3();
  sub_24E864388();
  v5[42] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  uint64_t v10 = sub_24E864AA8();
  v5[43] = v10;
  v5[44] = *(void *)(v10 - 8);
  v5[45] = swift_task_alloc();
  v5[46] = *(void *)(v9 - 8);
  v5[47] = swift_task_alloc();
  v5[48] = *(void *)(AssociatedTypeWitness - 8);
  v5[49] = swift_task_alloc();
  v5[50] = *(void *)(v7 - 8);
  v5[51] = swift_task_alloc();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  v5[52] = v11;
  v5[53] = *(void *)(v11 - 8);
  v5[54] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E589C60, 0, 0);
}

uint64_t sub_24E589C60()
{
  (*(void (**)(void, void, void))(v0[50] + 16))(v0[51], v0[31], v0[38]);
  sub_24E8640E8();
  return MEMORY[0x270FA2498](sub_24E589D04, 0, 0);
}

uint64_t sub_24E589D04()
{
  uint64_t v1 = v0[32];
  v0[2] = v0;
  v0[3] = sub_24E589D9C;
  uint64_t v2 = swift_continuation_init();
  sub_24E58A7D0(v2, v1);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24E589D9C()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 440) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x270FA2498](sub_24E58A064, 0, 0);
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v5 = (void *)swift_task_alloc();
    v1[56] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_24E589F50;
    uint64_t v6 = v1[52];
    uint64_t v7 = v1[47];
    return MEMORY[0x270FA1E80](v7, v6, AssociatedConformanceWitness);
  }
}

uint64_t sub_24E589F50()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E58A714;
  }
  else {
    uint64_t v2 = sub_24E58A120;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E58A064()
{
  (*(void (**)(void, void))(v0[53] + 8))(v0[54], v0[52]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E58A120()
{
  uint64_t v1 = v0[47];
  uint64_t v2 = v0[48];
  uint64_t v3 = v0[39];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = v0[37];
    uint64_t v5 = v0[38];
    uint64_t v7 = v0[35];
    uint64_t v6 = v0[36];
    uint64_t v9 = v0[33];
    uint64_t v8 = v0[34];
    uint64_t v10 = v0[32];
    (*(void (**)(uint64_t, void))(v0[46] + 8))(v1, v0[40]);
    uint64_t v11 = *(void *)(v10 + 16);
    uint64_t v12 = (void *)swift_task_alloc();
    v12[2] = v8;
    uint64_t v12[3] = v6;
    v12[4] = v5;
    v12[5] = v9;
    v12[6] = v7;
    v12[7] = v4;
    v0[10] = v8;
    v0[11] = v6;
    v0[12] = v5;
    v0[13] = v9;
    v0[14] = v7;
    v0[15] = v4;
    type metadata accessor for CombineLatestStateMachine();
    v0[16] = v8;
    v0[17] = v6;
    v0[18] = v5;
    v0[19] = v9;
    v0[20] = v7;
    v0[21] = v4;
    type metadata accessor for CombineLatestStateMachine.UpstreamFinishedAction();
    sub_24E864388();
    uint64_t v13 = (os_unfair_lock_s *)(v11 + ((*(unsigned int *)(*(void *)v11 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v13);
    sub_24E5ACB90(v0 + 28);
    os_unfair_lock_unlock(v13);
    swift_task_dealloc();
    uint64_t v14 = v0[28];
    if ((~v14 & 0xF000000000000007) != 0)
    {
      uint64_t v15 = v0[30];
      if (v14 < 0)
      {
        uint64_t v32 = v14 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v33 = *(void *)(v15 + 16);
        if (v33)
        {
          uint64_t v45 = v14 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v48 = v0[28];
          sub_24E863F68();
          sub_24E5AB52C();
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v34 = 0;
          do
          {
            ++v34;
            uint64_t v35 = v15;
            uint64_t v36 = swift_allocError();
            sub_24E863B28();
            swift_allocError();
            *uint64_t v37 = v36;
            uint64_t v15 = v35;
            swift_continuation_throwingResumeWithError();
          }
          while (v33 != v34);
          swift_bridgeObjectRelease();
          uint64_t v32 = v45;
          uint64_t v14 = v48;
        }
        else
        {
          swift_retain();
        }
        uint64_t v39 = v0[44];
        uint64_t v38 = v0[45];
        uint64_t v40 = v0[43];
        uint64_t v41 = v0[41];
        sub_24E864068();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v38, 1, 1, v41);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void, uint64_t, uint64_t))(v39 + 32))(*(void *)(*(void *)(v32 + 64) + 40), v38, v40);
        swift_continuation_resume();
      }
      else
      {
        uint64_t v16 = *(void *)(v0[29] + 16);
        if (v16)
        {
          sub_24E863F68();
          sub_24E5AB52C();
          uint64_t v46 = v14;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v17 = 0;
          do
          {
            ++v17;
            uint64_t v18 = swift_allocError();
            sub_24E863B28();
            swift_allocError();
            uint64_t *v19 = v18;
            swift_continuation_throwingResumeWithError();
          }
          while (v16 != v17);
          swift_bridgeObjectRelease();
          uint64_t v14 = v46;
        }
        else
        {
          swift_retain();
        }
        sub_24E864068();
      }
      swift_release();
      sub_24E5ACBC4(v14);
    }
    (*(void (**)(void, void))(v0[53] + 8))(v0[54], v0[52]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = (uint64_t (*)(void))v0[1];
    return v42();
  }
  else
  {
    uint64_t v47 = v3;
    uint64_t v20 = v0[49];
    uint64_t v21 = v0[38];
    uint64_t v44 = v0[37];
    uint64_t v23 = v0[35];
    uint64_t v22 = v0[36];
    uint64_t v24 = v3;
    uint64_t v25 = v0[33];
    uint64_t v26 = v0[34];
    uint64_t v27 = v0[32];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v20, v1, v24);
    uint64_t v28 = *(void *)(v27 + 16);
    uint64_t v29 = (void *)swift_task_alloc();
    v29[2] = v26;
    id v29[3] = v22;
    v29[4] = v21;
    v29[5] = v25;
    v29[6] = v23;
    v29[7] = v44;
    v29[8] = v20;
    v0[22] = v26;
    v0[23] = v22;
    v0[24] = v21;
    v0[25] = v25;
    v0[26] = v23;
    v0[27] = v44;
    type metadata accessor for CombineLatestStateMachine();
    uint64_t v30 = v28 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v28 + 16);
    uint64_t v31 = (os_unfair_lock_s *)(v28 + ((*(unsigned int *)(*(void *)v28 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v31);
    sub_24E5ACC18(v30);
    os_unfair_lock_unlock(v31);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v20, v47);
    return MEMORY[0x270FA2498](sub_24E589D04, 0, 0);
  }
}

uint64_t sub_24E58A714()
{
  (*(void (**)(void, void))(v0[53] + 8))(v0[54], v0[52]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_24E58A7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  type metadata accessor for CombineLatestStateMachine();
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_24E5ACC5C(v3);
  os_unfair_lock_unlock(v4);
}

void sub_24E58A918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = (void *)type metadata accessor for CombineLatestStateMachine();
  unint64_t v12 = sub_24E57BF9C(a9, a2, v10);
  if ((~v12 & 0xF00000000000000FLL) != 0 || (v11 & 0xF000000000000007) != 0xF000000000000007)
  {
    uint64_t v14 = v11;
    if (v11 < 0)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
      swift_allocError();
      *uint64_t v15 = v14 & 0x7FFFFFFFFFFFFFFFLL;
      swift_continuation_throwingResumeWithError();
    }
    else
    {
      swift_continuation_throwingResume();
      sub_24E5ACCB0(v12, v14);
    }
  }
}

uint64_t sub_24E58A9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int **a6, uint64_t a7, uint64_t a8)
{
  uint64_t v65 = a8;
  unint64_t v73 = a6;
  uint64_t v66 = a3;
  uint64_t v63 = a2;
  uint64_t v64 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v53 = a7;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v54 = a5;
  uint64_t v62 = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_24E864388();
  uint64_t v61 = v13;
  swift_getTupleTypeMetadata3();
  sub_24E864388();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  uint64_t v51 = sub_24E864AA8();
  uint64_t v50 = *(void *)(v51 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v51);
  uint64_t v48 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v49 = (char *)&v47 - v17;
  uint64_t v60 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v47 - v18;
  uint64_t v20 = v12;
  uint64_t v21 = sub_24E864388();
  uint64_t v58 = *(void *)(v21 - 8);
  uint64_t v59 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v47 - v22;
  uint64_t v24 = sub_24E864388();
  uint64_t v56 = *(void *)(v24 - 8);
  uint64_t v57 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (uint64_t *)((char *)&v47 - v25);
  uint64_t v67 = v66;
  uint64_t v68 = a4;
  uint64_t v69 = a5;
  uint64_t v70 = v73;
  uint64_t v71 = a7;
  uint64_t v72 = v65;
  uint64_t v55 = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
  uint64_t v27 = sub_24E864388();
  uint64_t v52 = *(void *)(v27 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (uint64_t *)((char *)&v47 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (int **)((char *)&v47 - v31);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v26, 1, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v23, 1, 1, v20);
  uint64_t v33 = v62;
  uint64_t v34 = *(void *)(v62 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v19, v63, v62);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v19, 0, 1, v33);
  uint64_t v35 = v27;
  uint64_t v67 = v66;
  uint64_t v68 = a4;
  uint64_t v36 = v52;
  uint64_t v69 = v54;
  uint64_t v70 = v73;
  uint64_t v71 = v53;
  uint64_t v72 = v65;
  uint64_t v37 = (void *)type metadata accessor for CombineLatestStateMachine();
  sub_24E57C690(v26, v23, v19, v37, v32);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v19, v61);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v23, v59);
  (*(void (**)(void *, uint64_t))(v56 + 8))(v26, v57);
  uint64_t v38 = *(void (**)(uint64_t *, int **, uint64_t))(v36 + 16);
  unint64_t v73 = v32;
  v38(v30, v32, v27);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(*(void *)(v55 - 8) + 48))(v30, 1) != 1)
  {
    uint64_t v39 = *v30;
    uint64_t v40 = v51;
    sub_24E8640A8();
    uint64_t v41 = (char *)v30 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    uint64_t v42 = v50;
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
    uint64_t v44 = v49;
    v43(v49, v41, v40);
    uint64_t v45 = v48;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v48, v44, v40);
    v43(*(char **)(*(void *)(v39 + 64) + 40), v45, v40);
    swift_continuation_resume();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v40);
  }
  return (*(uint64_t (**)(int **, uint64_t))(v36 + 8))(v73, v35);
}

unint64_t sub_24E58B0D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v36 = a8;
  uint64_t v37 = a7;
  uint64_t v38 = a6;
  uint64_t v39 = a2;
  uint64_t v40 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_24E864388();
  swift_getTupleTypeMetadata3();
  sub_24E864388();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  uint64_t v11 = sub_24E864AA8();
  uint64_t v35 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v43 = a5;
  uint64_t v44 = v38;
  uint64_t v45 = v37;
  uint64_t v46 = v36;
  uint64_t v14 = (void *)type metadata accessor for CombineLatestStateMachine();
  unint64_t result = sub_24E5809B8((void (*)(void, void))v39, v14);
  if ((~(v17 & result) & 0xF000000000000007) != 0)
  {
    uint64_t v19 = result;
    uint64_t v20 = v16;
    uint64_t v21 = v17;
    uint64_t v39 = v13;
    uint64_t v40 = v11;
    if (v17 < 0)
    {
      uint64_t v26 = v17 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v27 = *(void *)(v18 + 16);
      if (v27)
      {
        uint64_t v37 = v17;
        uint64_t v38 = result;
        uint64_t v28 = v16;
        sub_24E863F68();
        sub_24E5AB52C();
        uint64_t v36 = v26;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v29 = 0;
        do
        {
          ++v29;
          uint64_t v30 = swift_allocError();
          sub_24E863B28();
          swift_allocError();
          *uint64_t v31 = v30;
          swift_continuation_throwingResumeWithError();
        }
        while (v27 != v29);
        swift_bridgeObjectRelease();
        uint64_t v21 = v37;
        uint64_t v19 = v38;
      }
      else
      {
        uint64_t v32 = v16;
        swift_retain();
      }
      sub_24E864068();
      uint64_t v34 = v39;
      uint64_t v33 = v40;
      *uint64_t v39 = v20;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void, void *, uint64_t))(v35 + 32))(*(void *)(*(void *)(v19 + 64) + 40), v34, v33);
      swift_continuation_resume();
      swift_release();
      return sub_24E5ACCE4(v19, v20, v21);
    }
    else
    {
      uint64_t v22 = v16[2];
      if (v22)
      {
        uint64_t v37 = v17;
        uint64_t v40 = v18;
        sub_24E863F68();
        sub_24E5AB52C();
        uint64_t v38 = v19;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v23 = 0;
        do
        {
          ++v23;
          uint64_t v24 = swift_allocError();
          sub_24E863B28();
          swift_allocError();
          uint64_t *v25 = v24;
          swift_continuation_throwingResumeWithError();
        }
        while (v22 != v23);
        swift_bridgeObjectRelease();
        uint64_t v21 = v37;
        uint64_t v19 = v38;
      }
      else
      {
        swift_retain();
      }
      sub_24E864068();
      sub_24E5ACCE4(v19, v20, v21);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_24E58B524()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24E58B55C()
{
  MEMORY[0x253342580]();

  return swift_deallocClassInstance();
}

uint64_t sub_24E58B5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v18 - v11;
  MEMORY[0x270FA5388](v10);
  (*(void (**)(char *))(v14 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_24E58B7B8(a1, (uint64_t)v12, a2);
  if (v2)
  {
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v16(v9, v12, v5);
    if (sub_24E864958())
    {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    else
    {
      swift_allocError();
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(v17, v9, v5);
    }
  }
  return result;
}

uint64_t sub_24E58B7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t sub_24E58B888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t sub_24E58B960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v8(a2, 1, 1, AssociatedTypeWitness);
  uint64_t v6 = sub_24E864388();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a2, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a2, a1, AssociatedTypeWitness);

  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v8)(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_24E58BA98(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = v2;
  v3[4] = *(void *)(a2 + 24);
  v3[5] = *(void *)(a2 + 16);
  v3[6] = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_24E864388();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E58BB8C, 0, 0);
}

uint64_t sub_24E58BB8C()
{
  if (sub_24E864088()) {
    goto LABEL_6;
  }
  uint64_t v1 = v0[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v1, 1, AssociatedTypeWitness);
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  if (v3)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v5 - 8) + 56))(v0[9], 1, 1, v0[6]);
LABEL_5:
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
LABEL_6:
    uint64_t v7 = v0[6];
    uint64_t v8 = v0[3];
    uint64_t v9 = v0[2];
    uint64_t v10 = swift_getAssociatedTypeWitness();
    uint64_t v11 = sub_24E864388();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v8, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v9, 1, 1, v7);
    goto LABEL_7;
  }
  swift_getAssociatedConformanceWitness();
  sub_24E864398();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    goto LABEL_5;
  }
  uint64_t v14 = v0[6];
  uint64_t v15 = v0[2];
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v15, v0[9], v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v14);
LABEL_7:
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_24E58BE68(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E58BF10;
  return sub_24E58BA98(a1, a2);
}

uint64_t sub_24E58BF10()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E58C008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_24E58C0D4;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v12);
}

uint64_t sub_24E58C0D4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E58C1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness - 8);
  uint64_t v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  sub_24E863DD8();
  return sub_24E58B960((uint64_t)v10, a2);
}

uint64_t sub_24E58C31C(uint64_t a1, uint64_t a2)
{
  return sub_24E595910(a1, a2, (void (*)(void))sub_24E58C1D0);
}

uint64_t sub_24E58C334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, void (*a11)(void, uint64_t *), uint64_t (*a12)(void, uint64_t *))
{
  uint64_t v18 = sub_24E864388();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v20 = a9 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v21 = a9 + *(int *)(TupleTypeMetadata3 + 64);
  uint64_t v22 = a1;
  uint64_t v23 = a7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a9, v22, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v20, a2, a5);
  uint64_t v24 = *(void *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v21, a3, v18);
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v33 = v23;
  uint64_t v34 = a8;
  uint64_t v35 = a10;
  a11(0, &v30);
  swift_storeEnumTagMultiPayload();
  LODWORD(v20) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 48))(a3, 1, a6);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a3, v18);
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v33 = v23;
  uint64_t v34 = a8;
  uint64_t v35 = a10;
  uint64_t result = a12(0, &v30);
  if (v20 == 1) {
    uint64_t v26 = 2;
  }
  else {
    uint64_t v26 = 3;
  }
  *(void *)(a9 + *(int *)(result + 68)) = v26;
  return result;
}

uint64_t sub_24E58C590(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v18 = v3;
  uint64_t v19 = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  long long v17 = *(_OWORD *)(a1 + 32);
  long long v20 = v17;
  long long v21 = v5;
  uint64_t v6 = type metadata accessor for MergeStateMachine.State();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - v8;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)&v17 - v8, v2, v6);
  uint64_t v10 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = *(void *)v9;
      uint64_t v14 = *((void *)v9 + 4);
      swift_release();
      if (v14) {
        goto LABEL_9;
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v2, v6);
      swift_storeEnumTagMultiPayload();
      break;
    case 2u:
      uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
      v15(v9, v6);
      v15(v2, v6);
      swift_storeEnumTagMultiPayload();
      goto LABEL_6;
    case 3u:
      return v10;
    case 4u:
      __break(1u);
LABEL_9:
      __break(1u);
      JUMPOUT(0x24E58C81CLL);
    default:
      uint64_t v11 = sub_24E864388();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v13 = &v9[*(int *)(TupleTypeMetadata3 + 48)];
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(&v9[*(int *)(TupleTypeMetadata3 + 64)], v11);
      (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v13, v4);
      (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v9, v3);
LABEL_6:
      uint64_t v10 = 0;
      break;
  }
  return v10;
}

uint64_t sub_24E58C830(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v28 = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v30 = v4;
  uint64_t v31 = v5;
  uint64_t v32 = v6;
  long long v27 = *(_OWORD *)(a2 + 40);
  long long v33 = v27;
  uint64_t v34 = v7;
  uint64_t v8 = type metadata accessor for MergeStateMachine.State();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v29 = v3;
  v15((char *)&v25 - v13, v3, v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    switch(EnumCaseMultiPayload)
    {
      case 2:
        goto LABEL_6;
      case 3:
        goto LABEL_5;
      case 4:
        goto LABEL_7;
      default:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
LABEL_5:
        __break(1u);
LABEL_6:
        uint64_t v24 = (void *)*((void *)v14 + 1);
        swift_release();

        __break(1u);
LABEL_7:
        __break(1u);
        JUMPOUT(0x24E58CB1CLL);
    }
  }
  uint64_t v17 = sub_24E864388();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v26 = &v14[*(int *)(TupleTypeMetadata3 + 48)];
  uint64_t v19 = &v14[*(int *)(TupleTypeMetadata3 + 64)];
  swift_getAssociatedTypeWitness();
  uint64_t v20 = v28;
  swift_retain();
  uint64_t v21 = sub_24E8620F8();
  *uint64_t v12 = v20;
  v12[1] = v21;
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v12[3] = 0;
  v12[4] = 0;
  v12[2] = v22;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void *, uint64_t))(v9 + 40))(v29, v12, v8);
  (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v19, v17);
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v26, v5);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v14, v4);
}

uint64_t sub_24E58CB2C(uint64_t a1, _OWORD *a2)
{
  long long v4 = a2[2];
  long long v20 = a2[1];
  long long v21 = v4;
  long long v22 = a2[3];
  uint64_t v5 = type metadata accessor for MergeStateMachine.State();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v18 - v7);
  (*(void (**)(char *, void *, uint64_t))(v6 + 16))((char *)&v18 - v7, v2, v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = *v8;
      uint64_t v9 = v8[1];
      uint64_t v11 = (void *)v8[2];
      if (v8[4])
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v19 = v8[3];
        uint64_t v14 = *(void (**)(void *, uint64_t))(v6 + 8);
        v14(v2, v5);
        swift_storeEnumTagMultiPayload();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_24E575670(0, v11[2] + 1, 1, v11);
        }
        unint64_t v16 = v11[2];
        unint64_t v15 = v11[3];
        if (v16 >= v15 >> 1) {
          uint64_t v11 = sub_24E575670((void *)(v15 > 1), v16 + 1, 1, v11);
        }
        v11[2] = v16 + 1;
        v11[v16 + 4] = a1;
        v14(v2, v5);
        *uint64_t v2 = v10;
        v2[1] = v9;
        uint64_t v17 = v19;
        v2[2] = v11;
        v2[3] = v17;
        v2[4] = 0;
        swift_storeEnumTagMultiPayload();
        return 0;
      }
      return a1;
    case 2u:
      uint64_t v12 = (void *)v8[1];
      swift_release();

      goto LABEL_5;
    case 3u:
LABEL_5:
      sub_24E863F68();
      sub_24E5AB52C();
      swift_allocError();
      sub_24E863B28();
      return a1;
    case 4u:
      break;
    default:
      __break(1u);
      break;
  }
  __break(1u);
  JUMPOUT(0x24E58CDA4);
}

uint64_t sub_24E58CDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  long long v4 = v3;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 56);
  long long v34 = *(_OWORD *)(a2 + 16);
  uint64_t v37 = v7;
  long long v35 = *(_OWORD *)(a2 + 40);
  long long v36 = v34;
  long long v38 = v35;
  uint64_t v39 = v8;
  uint64_t v9 = type metadata accessor for MergeStateMachine.State();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v30 - v11);
  (*(void (**)(char *, void *, uint64_t))(v10 + 16))((char *)&v30 - v11, v4, v9);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v32 = a3;
      uint64_t v33 = a1;
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      uint64_t v15 = v12[2];
      uint64_t v16 = v12[3];
      uint64_t v17 = v12[4];
      if (v17)
      {
        uint64_t v31 = v12[3];
        *(void *)&long long v36 = v14;
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        sub_24E862108();
        swift_getWitnessTable();
        if ((sub_24E8641C8() & 1) == 0)
        {
          __break(1u);
LABEL_11:
          __break(1u);
LABEL_12:
          __break(1u);
          JUMPOUT(0x24E58D26CLL);
        }
        (*(void (**)(void *, uint64_t))(v10 + 8))(v4, v9);
        *long long v4 = v13;
        v4[1] = v14;
        uint64_t v19 = v31;
        v4[2] = v15;
        v4[3] = v19;
        v4[4] = 0;
        swift_storeEnumTagMultiPayload();
        sub_24E864388();
        __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
        sub_24E8640A8();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        long long v22 = v32;
        uint64_t v21 = v33;
        uint64_t v23 = (char *)v32 + *(int *)(TupleTypeMetadata2 + 48);
        void *v32 = v17;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v23, v21, AssociatedTypeWitness);
        return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v22, 0, 1, TupleTypeMetadata2);
      }
      else
      {
        *(void *)&long long v36 = v12[1];
        uint64_t v28 = *(void (**)(void *, uint64_t))(v10 + 8);
        v28(v4, v9);
        swift_storeEnumTagMultiPayload();
        swift_getAssociatedTypeWitness();
        sub_24E862108();
        sub_24E8620C8();
        v28(v4, v9);
        uint64_t v29 = v36;
        *long long v4 = v13;
        v4[1] = v29;
        v4[2] = v15;
        v4[3] = v16;
        v4[4] = 0;
        swift_storeEnumTagMultiPayload();
        sub_24E864388();
        __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
        sub_24E8640A8();
        uint64_t v25 = swift_getTupleTypeMetadata2();
        uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
        long long v27 = v32;
        return v26(v27, 1, 1, v25);
      }
    case 2u:
      (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
      goto LABEL_6;
    case 3u:
LABEL_6:
      swift_getAssociatedTypeWitness();
      sub_24E864388();
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
      sub_24E8640A8();
      uint64_t v25 = swift_getTupleTypeMetadata2();
      uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
      long long v27 = a3;
      return v26(v27, 1, 1, v25);
    case 4u:
      goto LABEL_12;
    default:
      goto LABEL_11;
  }
}

uint64_t sub_24E58D280(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 56);
  long long v21 = *(_OWORD *)(a1 + 16);
  long long v22 = v21;
  uint64_t v23 = v4;
  long long v20 = *(_OWORD *)(a1 + 40);
  long long v24 = v20;
  uint64_t v25 = v5;
  uint64_t v6 = type metadata accessor for MergeStateMachine.State();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v18 - v8);
  (*(void (**)(char *, void *, uint64_t))(v7 + 16))((char *)&v18 - v8, v2, v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0x8000000000000000;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v12 = *v9;
      uint64_t v13 = v9[1];
      uint64_t v14 = v9[2];
      uint64_t v15 = v9[3];
      if (v9[4])
      {
        uint64_t v19 = v9[4];
        *(void *)&long long v22 = v13;
        swift_getAssociatedTypeWitness();
        sub_24E862108();
        swift_getWitnessTable();
        if (sub_24E8641C8())
        {
          uint64_t v16 = v15 + 1;
          if (!__OFADD__(v15, 1))
          {
            if (v16 == *(void *)((char *)v2 + *(int *)(a1 + 68)))
            {
              swift_release();
              (*(void (**)(void *, uint64_t))(v7 + 8))(v2, v6);
              swift_storeEnumTagMultiPayload();
              return v19 | 0x4000000000000000;
            }
            (*(void (**)(void *, uint64_t))(v7 + 8))(v2, v6);
            *uint64_t v2 = v12;
            v2[1] = v13;
            v2[2] = v14;
            v2[3] = v16;
            v2[4] = v19;
            swift_storeEnumTagMultiPayload();
            return 0x8000000000000000;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        JUMPOUT(0x24E58D584);
      }
      uint64_t v17 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_16;
      }
      (*(void (**)(void *, uint64_t))(v7 + 8))(v2, v6);
      *uint64_t v2 = v12;
      v2[1] = v13;
      v2[2] = v14;
      v2[3] = v17;
      v2[4] = 0;
      swift_storeEnumTagMultiPayload();
      if (v17 == *(void *)((char *)v2 + *(int *)(a1 + 68)))
      {
        swift_retain();
        swift_bridgeObjectRetain();
        return v12;
      }
      return 0x8000000000000000;
    case 2:
      (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
      return 0x8000000000000000;
    case 3:
      return result;
    case 4:
      goto LABEL_18;
    default:
      goto LABEL_17;
  }
}

uint64_t sub_24E58D598(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 56);
  long long v19 = *(_OWORD *)(a2 + 16);
  long long v20 = v19;
  uint64_t v21 = v5;
  long long v18 = *(_OWORD *)(a2 + 40);
  long long v22 = v18;
  uint64_t v23 = v6;
  uint64_t v7 = type metadata accessor for MergeStateMachine.State();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v18 - v9);
  (*(void (**)(char *, void *, uint64_t))(v8 + 16))((char *)&v18 - v9, v2, v7);
  uint64_t v11 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = *v10;
      uint64_t v12 = v10[1];
      uint64_t v11 = v10[4];
      if (v11)
      {
        *(void *)&long long v20 = v10[1];
        swift_getAssociatedTypeWitness();
        sub_24E862108();
        swift_getWitnessTable();
        char v14 = sub_24E8641C8();
        swift_release();
        if ((v14 & 1) == 0)
        {
          __break(1u);
LABEL_9:
          __break(1u);
LABEL_10:
          __break(1u);
          JUMPOUT(0x24E58D824);
        }
        (*(void (**)(void *, uint64_t))(v8 + 8))(v3, v7);
        swift_storeEnumTagMultiPayload();
        id v15 = a1;
      }
      else
      {
        (*(void (**)(void *, uint64_t))(v8 + 8))(v2, v7);
        *uint64_t v2 = v12;
        v2[1] = a1;
        swift_storeEnumTagMultiPayload();
        id v16 = a1;
        return v13;
      }
      return v11;
    case 2u:
      (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
      return 0;
    case 3u:
      return v11;
    case 4u:
      goto LABEL_10;
    default:
      goto LABEL_9;
  }
}

uint64_t sub_24E58D838(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v18 = v2;
  uint64_t v19 = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v17 = *(_OWORD *)(a1 + 32);
  long long v20 = v17;
  long long v21 = v4;
  uint64_t v5 = type metadata accessor for MergeStateMachine.State();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v17 - v7);
  (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 16))((char *)&v17 - v7, v1, v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = *v8;
      uint64_t v14 = v8[4];
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v1, v5);
      swift_storeEnumTagMultiPayload();
      if (!v14) {
        return v16 | 0x4000000000000000;
      }
      return v14;
    case 2u:
      uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
      v13(v8, v5);
      v13(v1, v5);
      goto LABEL_5;
    case 3u:
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v1, v5);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    case 4u:
      __break(1u);
      JUMPOUT(0x24E58DB18);
    default:
      uint64_t v9 = sub_24E864388();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v11 = (char *)v8 + *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v12 = (char *)v8 + *(int *)(TupleTypeMetadata3 + 64);
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v1, v5);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v12, v9);
      (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v11, v3);
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v2 - 8) + 8))(v8, v2);
      break;
  }
  return 0x8000000000000000;
}

uint64_t sub_24E58DB2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v61 = a2;
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24E864388();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v51 - v13;
  uint64_t v55 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  long long v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v51 - v18;
  uint64_t v21 = a1[3];
  uint64_t v20 = a1[4];
  uint64_t v23 = a1[6];
  uint64_t v22 = a1[7];
  uint64_t v63 = v6;
  uint64_t v64 = v21;
  uint64_t v56 = v21;
  uint64_t v57 = v20;
  uint64_t v65 = v20;
  uint64_t v66 = v5;
  uint64_t v59 = v22;
  uint64_t v60 = v5;
  uint64_t v58 = v23;
  uint64_t v67 = v23;
  uint64_t v68 = v22;
  uint64_t v24 = type metadata accessor for MergeStateMachine.State();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  long long v27 = (uint64_t *)((char *)&v51 - v26);
  (*(void (**)(char *, void *, uint64_t))(v25 + 16))((char *)&v51 - v26, v3, v24);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (v27[4]) {
        goto LABEL_14;
      }
      uint64_t v39 = v27[3];
      uint64_t v51 = v27[2];
      uint64_t v52 = v39;
      uint64_t v40 = *v27;
      uint64_t v62 = v27[1];
      uint64_t v41 = *(void (**)(void *, uint64_t))(v25 + 8);
      v41(v3, v24);
      swift_storeEnumTagMultiPayload();
      sub_24E862108();
      sub_24E8620E8();
      uint64_t v42 = v55;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v14, 1, AssociatedTypeWitness) == 1)
      {
        (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v54);
        v41(v3, v24);
        uint64_t v43 = v62;
        *uint64_t v3 = v40;
        v3[1] = v43;
        uint64_t v44 = v52;
        v3[2] = v51;
        v3[3] = v44;
        v3[4] = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v63 = v6;
        uint64_t v64 = v56;
        uint64_t v65 = v57;
        uint64_t v66 = v60;
        uint64_t v67 = v58;
        uint64_t v68 = v59;
        type metadata accessor for MergeStateMachine.NextAction();
        return swift_storeEnumTagMultiPayload();
      }
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
      v47(v19, v14, AssociatedTypeWitness);
      v41(v3, v24);
      uint64_t v48 = v62;
      *uint64_t v3 = v40;
      v3[1] = v48;
      uint64_t v49 = v52;
      v3[2] = v51;
      v3[3] = v49;
      v3[4] = 0;
      swift_storeEnumTagMultiPayload();
      v47((char *)v61, v19, AssociatedTypeWitness);
      goto LABEL_11;
    case 2u:
      uint64_t v36 = v27[1];
      uint64_t v62 = *v27;
      uint64_t v37 = *(void (**)(void *, uint64_t))(v25 + 8);
      v37(v3, v24);
      swift_storeEnumTagMultiPayload();
      sub_24E862108();
      sub_24E8620E8();
      uint64_t v38 = v55;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v11, 1, AssociatedTypeWitness) == 1)
      {
        swift_release();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v11, v54);
        v37(v3, v24);
        swift_storeEnumTagMultiPayload();
        *uint64_t v61 = v36;
        uint64_t v63 = v6;
        uint64_t v64 = v56;
        uint64_t v65 = v57;
        uint64_t v66 = v60;
        uint64_t v67 = v58;
        uint64_t v68 = v59;
        type metadata accessor for MergeStateMachine.NextAction();
      }
      else
      {
        uint64_t v54 = v36;
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
        v45(v17, v11, AssociatedTypeWitness);
        v37(v3, v24);
        uint64_t v46 = v54;
        *uint64_t v3 = v62;
        v3[1] = v46;
        swift_storeEnumTagMultiPayload();
        v45((char *)v61, v17, AssociatedTypeWitness);
LABEL_11:
        __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
        sub_24E864AA8();
        swift_storeEnumTagMultiPayload();
        uint64_t v63 = v6;
        uint64_t v64 = v56;
        uint64_t v65 = v57;
        uint64_t v66 = v60;
        uint64_t v67 = v58;
        uint64_t v68 = v59;
        type metadata accessor for MergeStateMachine.NextAction();
      }
      return swift_storeEnumTagMultiPayload();
    case 3u:
      uint64_t v63 = v6;
      uint64_t v64 = v56;
      uint64_t v65 = v57;
      uint64_t v66 = v60;
      uint64_t v67 = v58;
      uint64_t v68 = v59;
      type metadata accessor for MergeStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
    case 4u:
      __break(1u);
LABEL_14:
      __break(1u);
      JUMPOUT(0x24E58E2A8);
    default:
      uint64_t v28 = v57;
      uint64_t v29 = sub_24E864388();
      uint64_t v30 = v56;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v32 = (char *)v27 + *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v33 = (char *)v27 + *(int *)(TupleTypeMetadata3 + 64);
      long long v34 = (char *)v61;
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 32))(v61, v27, v6);
      uint64_t v35 = swift_getTupleTypeMetadata3();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(&v34[*(int *)(v35 + 48)], v32, v30);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(&v34[*(int *)(v35 + 64)], v33, v29);
      uint64_t v63 = v6;
      uint64_t v64 = v30;
      uint64_t v65 = v28;
      uint64_t v66 = v60;
      uint64_t v67 = v58;
      uint64_t v68 = v59;
      type metadata accessor for MergeStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_24E58E2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v23 = v5;
  uint64_t v24 = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  long long v22 = *(_OWORD *)(a2 + 32);
  long long v25 = v22;
  long long v26 = v7;
  uint64_t v8 = type metadata accessor for MergeStateMachine.State();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - v10;
  (*(void (**)(char *, void *, uint64_t))(v9 + 16))((char *)&v22 - v10, v3, v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
  {
    switch(EnumCaseMultiPayload)
    {
      case 1:
        goto LABEL_10;
      case 2:
        goto LABEL_8;
      case 3:
        goto LABEL_6;
      case 4:
        goto LABEL_7;
      default:
        uint64_t v18 = sub_24E864388();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v20 = &v11[*(int *)(TupleTypeMetadata3 + 48)];
        (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(&v11[*(int *)(TupleTypeMetadata3 + 64)], v18);
        (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v20, v6);
        (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v11, v5);
LABEL_6:
        __break(1u);
LABEL_7:
        __break(1u);
LABEL_8:
        uint64_t v21 = (void *)*((void *)v11 + 1);
        swift_release();

        __break(1u);
        break;
    }
LABEL_9:
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_10:
    __break(1u);
    JUMPOUT(0x24E58E540);
  }
  uint64_t v14 = *(void *)v11;
  uint64_t v13 = *((void *)v11 + 1);
  uint64_t v15 = *((void *)v11 + 2);
  if (*((void *)v11 + 4)) {
    goto LABEL_9;
  }
  uint64_t v16 = *((void *)v11 + 3);
  (*(void (**)(void *, uint64_t))(v9 + 8))(v3, v8);
  *uint64_t v3 = v14;
  v3[1] = v13;
  v3[2] = MEMORY[0x263F8EE78];
  v3[3] = v16;
  v3[4] = a1;
  swift_storeEnumTagMultiPayload();
  return v15;
}

uint64_t sub_24E58E554()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 136);
  uint64_t v2 = type metadata accessor for MergeStateMachine();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_24E58E60C()
{
  sub_24E58E554();

  return swift_deallocClassInstance();
}

void sub_24E58E664()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (os_unfair_lock_s *)v0[2];
  long long v3 = *(_OWORD *)(*v0 + 96);
  v9[0] = *(_OWORD *)(*v0 + 80);
  v9[1] = v3;
  v9[2] = *(_OWORD *)(v1 + 112);
  type metadata accessor for MergeStateMachine.IteratorDeinitializedAction();
  os_unfair_lock_lock(v2);
  sub_24E5ABE64((uint64_t *)v9);
  os_unfair_lock_unlock(v2);
  uint64_t v4 = *(void *)&v9[0];
  if (*(void *)&v9[0])
  {
    uint64_t v5 = *(void *)(*((void *)&v9[0] + 1) + 16);
    if (v5)
    {
      sub_24E863F68();
      sub_24E5AB52C();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v6 = 0;
      do
      {
        ++v6;
        uint64_t v7 = swift_allocError();
        sub_24E863B28();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
        swift_allocError();
        *uint64_t v8 = v7;
        swift_continuation_throwingResumeWithError();
      }
      while (v5 != v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    sub_24E864068();
    sub_24E5ABF14(v4);
    swift_release();
  }
}

uint64_t sub_24E58E800@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for MergeStateMachine();
  uint64_t result = sub_24E58C590(v2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24E58E8B8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_24E58E900, 0, 0);
}

uint64_t sub_24E58E900()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  swift_getAssociatedTypeWitness();
  sub_24E864388();
  *uint64_t v1 = v0;
  v1[1] = sub_24E58EA00;
  uint64_t v2 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2338](v2, &unk_2698F1F48);
}

uint64_t sub_24E58EA00()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E58EB34, 0, 0);
  }
  else
  {
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E58EB34()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24E58EB4C(uint64_t a1, uint64_t a2)
{
  v2[20] = a1;
  v2[21] = a2;
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(*(void *)a2 + 104);
  v2[22] = v4;
  uint64_t v5 = v3[10];
  v2[23] = v5;
  v2[24] = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  uint64_t v6 = sub_24E864AA8();
  v2[25] = v6;
  v2[26] = *(void *)(v6 - 8);
  v2[27] = swift_task_alloc();
  uint64_t v7 = v3[12];
  v2[28] = v7;
  uint64_t v8 = sub_24E864388();
  v2[29] = v8;
  v2[30] = *(void *)(v8 - 8);
  v2[31] = swift_task_alloc();
  uint64_t v9 = v3[11];
  v2[32] = v9;
  v2[33] = *(void *)(v9 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = *(void *)(v5 - 8);
  v2[36] = swift_task_alloc();
  uint64_t v10 = v3[14];
  v2[37] = v10;
  uint64_t v11 = v3[15];
  v2[2] = v5;
  v2[38] = v11;
  v2[3] = v9;
  v2[4] = v7;
  v2[5] = v4;
  v2[6] = v10;
  v2[7] = v11;
  uint64_t Action = type metadata accessor for MergeStateMachine.NextAction();
  v2[39] = Action;
  v2[40] = *(void *)(Action - 8);
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E58EE80, 0, 0);
}

uint64_t sub_24E58EE80()
{
  uint64_t v1 = *(uint64_t **)(v0 + 336);
  uint64_t v47 = *(void *)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v8 = *(void **)(v0 + 168);
  long long v45 = *(_OWORD *)(v0 + 296);
  lock = (os_unfair_lock_s *)v8[2];
  os_unfair_lock_lock(lock);
  uint64_t v9 = (char *)v8 + *(void *)(*v8 + 136);
  swift_beginAccess();
  *(void *)(v0 + 64) = v6;
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  *(void *)(v0 + 88) = v7;
  *(_OWORD *)(v0 + 96) = v45;
  uint64_t v10 = (void *)type metadata accessor for MergeStateMachine();
  sub_24E58DB2C(v10, v1);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v3 + 16))(v47, v1, v2);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v25 = *(void *)(v0 + 200);
      (*(void (**)(void, void, uint64_t))(*(void *)(v0 + 208) + 32))(*(void *)(v0 + 216), *(void *)(v0 + 328), v25);
      os_unfair_lock_unlock(lock);
      uint64_t WitnessTable = swift_getWitnessTable();
      (*(void (**)(uint64_t, uint64_t))(WitnessTable + 16))(v25, WitnessTable);
      uint64_t v35 = *(void *)(v0 + 336);
      uint64_t v36 = *(void *)(v0 + 312);
      uint64_t v37 = *(void *)(v0 + 320);
      uint64_t v38 = *(void *)(v0 + 192);
      uint64_t v39 = *(void *)(v0 + 160);
      (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v39, 0, 1, v38);
      goto LABEL_10;
    case 2u:
      os_unfair_lock_unlock(lock);
      swift_willThrow();
      (*(void (**)(void, void))(*(void *)(v0 + 320) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 312));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      long long v27 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_11;
    case 3u:
      uint64_t v28 = *(void *)(v0 + 336);
      uint64_t v30 = *(void *)(v0 + 312);
      uint64_t v29 = *(void *)(v0 + 320);
      uint64_t v31 = *(void *)(v0 + 192);
      uint64_t v32 = *(void *)(v0 + 160);
      os_unfair_lock_unlock(lock);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v32, 1, 1, v31);
LABEL_10:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      long long v27 = *(uint64_t (**)(void))(v0 + 8);
LABEL_11:
      return v27();
    case 4u:
      uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2698F1F50
                                                                                + dword_2698F1F50);
      uint64_t v33 = (void *)swift_task_alloc();
      *(void *)(v0 + 360) = v33;
      sub_24E864388();
      void *v33 = v0;
      v33[1] = sub_24E58F6A0;
      uint64_t v22 = *(void *)(v0 + 160);
      uint64_t v23 = *(void *)(v0 + 168);
      uint64_t v24 = v48;
      goto LABEL_7;
    default:
      uint64_t v11 = *(void *)(v0 + 328);
      uint64_t v12 = *(void *)(v0 + 280);
      uint64_t v13 = *(void *)(v0 + 288);
      uint64_t v14 = *(void *)(v0 + 264);
      uint64_t v15 = *(void *)(v0 + 256);
      uint64_t v42 = *(void *)(v0 + 272);
      uint64_t v43 = *(void *)(v0 + 248);
      uint64_t v16 = *(void *)(v0 + 240);
      uint64_t v41 = *(void *)(v0 + 232);
      uint64_t v17 = *(void *)(v0 + 184);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v19 = (uint64_t)v9;
      uint64_t v20 = v11 + *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v40 = v11 + *(int *)(TupleTypeMetadata3 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v13, v11, v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v42, v20, v15);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v43, v40, v41);
      swift_beginAccess();
      sub_24E58FA6C(v19, v13, v42, v43);
      swift_endAccess();
      uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2698F1F50
                                                                                + dword_2698F1F50);
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 344) = v21;
      sub_24E864388();
      *uint64_t v21 = v0;
      v21[1] = sub_24E58F45C;
      uint64_t v22 = *(void *)(v0 + 160);
      uint64_t v23 = *(void *)(v0 + 168);
      uint64_t v24 = v46;
LABEL_7:
      return v24(v22, 0, 0, (uint64_t)sub_24E5AB600, v23);
  }
}

uint64_t sub_24E58F45C()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E58F878;
  }
  else {
    uint64_t v2 = sub_24E58F570;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E58F570()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[40];
  uint64_t v5 = v0[35];
  uint64_t v4 = v0[36];
  uint64_t v7 = v0[33];
  uint64_t v6 = v0[34];
  uint64_t v8 = v0[32];
  uint64_t v9 = v0[23];
  (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v9);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_24E58F6A0()
{
  *(void *)(*(void *)v1 + 368) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E58F99C;
  }
  else {
    uint64_t v2 = sub_24E58F7B4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E58F7B4()
{
  (*(void (**)(void, void))(v0[40] + 8))(v0[42], v0[39]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E58F878()
{
  uint64_t v2 = v0[35];
  uint64_t v1 = v0[36];
  uint64_t v4 = v0[33];
  uint64_t v3 = v0[34];
  uint64_t v5 = v0[32];
  uint64_t v6 = v0[23];
  (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v6);
  (*(void (**)(void, void))(v0[40] + 8))(v0[42], v0[39]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_24E58F99C()
{
  (*(void (**)(void, void))(v0[40] + 8))(v0[42], v0[39]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E58FA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v44 = a2;
  uint64_t v48 = a1;
  uint64_t v6 = *(void **)v4;
  uint64_t v53 = *(void *)(*(void *)v4 + 96);
  uint64_t v52 = sub_24E864388();
  uint64_t v50 = *(void *)(v52 - 8);
  uint64_t v45 = *(void *)(v50 + 64);
  uint64_t v7 = MEMORY[0x270FA5388](v52);
  uint64_t v51 = (char *)&v39 - v8;
  uint64_t v9 = v6[11];
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v7);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v42 = (char *)&v39 - v13;
  uint64_t v49 = v6[10];
  uint64_t v15 = *(void *)(v49 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v41 = (char *)&v39 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v21;
  uint64_t v22 = sub_24E863FE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v44, v49);
  uint64_t v24 = v10;
  uint64_t v40 = v10;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v26 = v9;
  v25(v14, v46, v9);
  uint64_t v27 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v51, v47, v52);
  unint64_t v28 = (*(unsigned __int8 *)(v15 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v29 = (v16 + *(unsigned __int8 *)(v24 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v30 = (v11 + *(unsigned __int8 *)(v27 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v31 = (char *)swift_allocObject();
  *((void *)v31 + 2) = 0;
  *((void *)v31 + 3) = 0;
  uint64_t v32 = v23;
  *((void *)v31 + 4) = v23;
  *((void *)v31 + 5) = v26;
  *((void *)v31 + 6) = v53;
  uint64_t v33 = v6[13];
  *((void *)v31 + 7) = v33;
  uint64_t v34 = v6[14];
  *((void *)v31 + 8) = v34;
  uint64_t v35 = v6[15];
  *((void *)v31 + 9) = v35;
  *((void *)v31 + 10) = v5;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v31[v28], v41, v32);
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v31[v29], v42, v26);
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v31[v30], v51, v52);
  swift_retain();
  uint64_t v36 = sub_24E5C54D0((uint64_t)v43, (uint64_t)&unk_2698F1F60, (uint64_t)v31);
  uint64_t v54 = v49;
  uint64_t v55 = v26;
  uint64_t v56 = v53;
  uint64_t v57 = v33;
  uint64_t v58 = v34;
  uint64_t v59 = v35;
  uint64_t v37 = type metadata accessor for MergeStateMachine();
  sub_24E58C830(v36, v37);
  return swift_release();
}

uint64_t sub_24E58FEC0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for MergeStateMachine();
  uint64_t v5 = sub_24E58E2BC(a1, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a2 + 16));
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v6; ++i)
      swift_continuation_throwingResume();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_24E58FFC0(void *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 104);
  unint64_t v4 = *(void *)(*a1 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_24E864388();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = (os_unfair_lock_s *)a1[2];
  unint64_t v26 = v4;
  long long v27 = *(_OWORD *)(v2 + 88);
  uint64_t v28 = v3;
  long long v29 = *(_OWORD *)(v2 + 112);
  type metadata accessor for MergeStateMachine.CancelledAction();
  os_unfair_lock_lock(v10);
  sub_24E5AB4F8((uint64_t *)&v26);
  os_unfair_lock_unlock(v10);
  unint64_t v11 = v26;
  if (v26 >> 62)
  {
    if (v26 >> 62 == 1)
    {
      uint64_t v12 = v26 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v13 = *(void *)(v27 + 16);
      if (v13)
      {
        unint64_t v25 = v26;
        sub_24E863F68();
        sub_24E5AB52C();
        uint64_t v24 = v12;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v14 = 0;
        do
        {
          ++v14;
          uint64_t v15 = swift_allocError();
          sub_24E863B28();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
          swift_allocError();
          *uint64_t v16 = v15;
          swift_continuation_throwingResumeWithError();
        }
        while (v13 != v14);
        swift_bridgeObjectRelease();
        unint64_t v11 = v25;
      }
      else
      {
        swift_retain();
      }
      sub_24E864068();
      sub_24E5AB584(v11);
      swift_release();
    }
  }
  else
  {
    uint64_t v17 = *(void *)(*((void *)&v27 + 1) + 16);
    if (v17)
    {
      uint64_t v21 = v9;
      uint64_t v22 = AssociatedTypeWitness;
      uint64_t v23 = v7;
      uint64_t v24 = v6;
      unint64_t v25 = v26;
      sub_24E863F68();
      sub_24E5AB52C();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v18 = 0;
      do
      {
        ++v18;
        uint64_t v19 = swift_allocError();
        sub_24E863B28();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
        swift_allocError();
        *uint64_t v20 = v19;
        swift_continuation_throwingResumeWithError();
      }
      while (v17 != v18);
      swift_bridgeObjectRelease();
      uint64_t v6 = v24;
      unint64_t v11 = v25;
      uint64_t AssociatedTypeWitness = v22;
      uint64_t v7 = v23;
      uint64_t v9 = v21;
    }
    else
    {
      swift_retain();
    }
    sub_24E864068();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v9, 1, 1, AssociatedTypeWitness);
    (*(void (**)(void, char *, uint64_t))(v7 + 32))(*(void *)(*(void *)(v11 + 64) + 40), v9, v6);
    swift_continuation_throwingResume();
    swift_release();
    sub_24E5AB584(v11);
  }
}

uint64_t sub_24E5903D0@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for MergeStateMachine();
  uint64_t result = sub_24E58D838(v2);
  *a1 = result;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_24E59048C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_24E5904B4, 0, 0);
}

uint64_t sub_24E5904B4()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24E5905A4;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  uint64_t v6 = MEMORY[0x263F8EE60] + 8;
  uint64_t v7 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA22B8](v4, v5, v6, 0, 0, &unk_2698F1F70, v1, v7);
}

uint64_t sub_24E5905A4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E5906B4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[16] = a5;
  v6[17] = a6;
  v6[14] = a3;
  v6[15] = a4;
  v6[13] = a2;
  uint64_t v7 = *a3;
  v6[18] = *a3;
  uint64_t v8 = *(void *)(v7 + 96);
  v6[19] = v8;
  uint64_t v9 = sub_24E864388();
  v6[20] = v9;
  v6[21] = *(void *)(v9 - 8);
  v6[22] = swift_task_alloc();
  v6[23] = *(void *)(v8 - 8);
  v6[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E590814, 0, 0);
}

uint64_t sub_24E590814()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v5 = (void *)v0[18];
  uint64_t v23 = v0[19];
  uint64_t v7 = v0[16];
  uint64_t v6 = v0[17];
  uint64_t v8 = v0[15];
  uint64_t v9 = v0[13];
  uint64_t v10 = v5[10];
  v0[25] = v10;
  uint64_t v11 = v5[13];
  v0[26] = v11;
  sub_24E591170(v8, v9, v10, v11);
  uint64_t v12 = v5[11];
  v0[27] = v12;
  uint64_t v13 = v5[14];
  v0[28] = v13;
  sub_24E591170(v7, v9, v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v6, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v23) == 1)
  {
    (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  }
  else
  {
    uint64_t v15 = v0[23];
    uint64_t v14 = v0[24];
    uint64_t v17 = v0[18];
    uint64_t v16 = v0[19];
    uint64_t v18 = v0[13];
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 32))(v14, v0[22], v16);
    sub_24E591170(v14, v18, v16, *(void *)(v17 + 120));
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v0[29] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
  if (sub_24E8640C8())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
  else
  {
    uint64_t v21 = (void *)swift_task_alloc();
    v0[30] = v21;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1F78);
    *uint64_t v21 = v0;
    v21[1] = sub_24E590A84;
    return MEMORY[0x270FA2048](v0 + 32, 0, 0, v22);
  }
}

uint64_t sub_24E590A84()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E590CCC;
  }
  else {
    uint64_t v2 = sub_24E590B98;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E590B98()
{
  if (sub_24E8640C8())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v3;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1F78);
    *uint64_t v3 = v0;
    v3[1] = sub_24E590A84;
    return MEMORY[0x270FA2048](v0 + 256, 0, 0, v4);
  }
}

uint64_t sub_24E590CCC()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[27];
  uint64_t v36 = v0[28];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[26];
  uint64_t v6 = v0[18];
  uint64_t v5 = v0[19];
  uint64_t v7 = v0[14];
  uint64_t v8 = *(os_unfair_lock_s **)(v7 + 16);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v1;
  v0[2] = v3;
  uint64_t v10 = v0 + 2;
  uint64_t v11 = *(void *)(v6 + 120);
  v0[3] = v2;
  v0[4] = v5;
  v0[5] = v4;
  v0[6] = v36;
  v0[7] = v11;
  type metadata accessor for MergeStateMachine.UpstreamThrewAction();
  os_unfair_lock_lock(v8);
  sub_24E5ABAC0(v0 + 8);
  os_unfair_lock_unlock(v8);
  swift_task_dealloc();
  uint64_t v12 = v0[8];
  uint64_t v13 = (void *)v0[9];
  unint64_t v14 = v0[10];
  uint64_t v37 = v13;
  if (v14 >> 62)
  {
    if (v14 >> 62 == 1)
    {
      unint64_t v35 = v0[10];
      uint64_t v15 = *(void *)(v0[11] + 16);
      if (v15)
      {
        uint64_t v33 = v0[8];
        uint64_t v16 = v13;
        sub_24E863F68();
        sub_24E5AB52C();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v17 = 0;
        do
        {
          ++v17;
          uint64_t v18 = swift_allocError();
          sub_24E863B28();
          swift_allocError();
          uint64_t *v19 = v18;
          swift_continuation_throwingResumeWithError();
        }
        while (v15 != v17);
        swift_bridgeObjectRelease();
        uint64_t v12 = v33;
        uint64_t v20 = v13;
      }
      else
      {
        unint64_t v25 = v13;
        swift_retain();
        uint64_t v20 = v13;
      }
      uint64_t v26 = v0[29];
      sub_24E864068();
      v0[12] = v20;
      swift_getAssociatedTypeWitness();
      uint64_t v27 = sub_24E864388();
      sub_24E583FC8((uint64_t)(v0 + 12), v12, v27, v26);
      swift_release();
      uint64_t v13 = v20;
      unint64_t v14 = v35;
      uint64_t v10 = v0 + 2;
    }
  }
  else
  {
    uint64_t v21 = v13[2];
    if (v21)
    {
      sub_24E863F68();
      sub_24E5AB52C();
      int v34 = v12;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v22 = 0;
      do
      {
        ++v22;
        uint64_t v23 = swift_allocError();
        sub_24E863B28();
        swift_allocError();
        *uint64_t v24 = v23;
        uint64_t v13 = v37;
        swift_continuation_throwingResumeWithError();
      }
      while (v21 != v22);
      swift_bridgeObjectRelease();
      LODWORD(v12) = v34;
    }
    else
    {
      swift_retain();
    }
    sub_24E864068();
    swift_release();
    uint64_t v10 = v0 + 2;
  }
  uint64_t v28 = (void *)v0[31];
  sub_24E8640D8();
  sub_24E5ABAF4(v12, v13, v14);

  if (sub_24E8640C8())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    long long v29 = (uint64_t (*)(void))v0[1];
    return v29();
  }
  else
  {
    uint64_t v31 = (void *)swift_task_alloc();
    v0[30] = v31;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1F78);
    *uint64_t v31 = v0;
    v31[1] = sub_24E590A84;
    return MEMORY[0x270FA2048](v10 + 30, 0, 0, v32);
  }
}

uint64_t sub_24E591170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v19[0] = a4;
  v19[1] = a2;
  uint64_t v8 = *v4;
  uint64_t v9 = *v4;
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24E863FE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v9 + 80);
  *(void *)(v17 + 48) = *(void *)(v8 + 96);
  *(void *)(v17 + 56) = a3;
  *(_OWORD *)(v17 + 64) = *(_OWORD *)(v9 + 104);
  *(void *)(v17 + 80) = *(void *)(v8 + 120);
  *(void *)(v17 + 88) = v19[0];
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v16, (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  *(void *)(v17 + ((v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  swift_retain();
  sub_24E588030((uint64_t)v14, (uint64_t)&unk_2698F1F88, v17);
  return sub_24E569A98((uint64_t)v14);
}

uint64_t sub_24E5913D4@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for MergeStateMachine();
  uint64_t v5 = sub_24E58D598(a1, v4);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t result = swift_endAccess();
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
  return result;
}

uint64_t sub_24E5914BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[27] = a6;
  v7[28] = a7;
  v7[25] = a4;
  v7[26] = a5;
  uint64_t v9 = *(void **)a5;
  uint64_t v10 = *(void *)(*(void *)a5 + 80);
  v7[29] = v10;
  uint64_t v11 = v9[11];
  v7[30] = v11;
  uint64_t v12 = v9[12];
  v7[31] = v12;
  uint64_t v13 = v9[13];
  v7[32] = v13;
  uint64_t v14 = v9[14];
  v7[33] = v14;
  uint64_t v15 = v9[15];
  v7[10] = v10;
  v7[34] = v15;
  v7[11] = v11;
  v7[12] = v12;
  v7[13] = v13;
  v7[14] = v14;
  v7[15] = v15;
  uint64_t v16 = type metadata accessor for MergeStateMachine.ElementProducedAction();
  v7[35] = v16;
  v7[36] = *(void *)(v16 - 8);
  v7[37] = swift_task_alloc();
  v7[38] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[39] = AssociatedTypeWitness;
  uint64_t v18 = sub_24E864388();
  v7[40] = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  v7[41] = v19;
  v7[42] = v19;
  v7[43] = swift_task_alloc();
  v7[44] = swift_task_alloc();
  v7[45] = *(void *)(AssociatedTypeWitness - 8);
  v7[46] = swift_task_alloc();
  v7[47] = swift_task_alloc();
  v7[48] = *(void *)(a6 - 8);
  v7[49] = swift_task_alloc();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  v7[50] = v20;
  v7[51] = *(void *)(v20 - 8);
  v7[52] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E591810, 0, 0);
}

uint64_t sub_24E591810()
{
  (*(void (**)(void, void, void))(v0[48] + 16))(v0[49], v0[25], v0[27]);
  sub_24E8640E8();
  return MEMORY[0x270FA2498](sub_24E5918B4, 0, 0);
}

uint64_t sub_24E5918B4()
{
  uint64_t v1 = (void *)v0[26];
  v0[2] = v0;
  v0[3] = sub_24E591960;
  uint64_t v2 = swift_continuation_init();
  sub_24E592514(v2, v1);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24E591960()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 424) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x270FA2498](sub_24E591C28, 0, 0);
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v5 = (void *)swift_task_alloc();
    v1[54] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_24E591B14;
    uint64_t v6 = v1[50];
    uint64_t v7 = v1[44];
    return MEMORY[0x270FA1E80](v7, v6, AssociatedConformanceWitness);
  }
}

uint64_t sub_24E591B14()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E592430;
  }
  else {
    uint64_t v2 = sub_24E591D0C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E591C28()
{
  (*(void (**)(void, void))(v0[51] + 8))(v0[52], v0[50]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E591D0C()
{
  uint64_t v1 = *(char **)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 312);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 208);
    long long v47 = *(_OWORD *)(v0 + 216);
    long long v50 = *(_OWORD *)(v0 + 232);
    long long v53 = *(_OWORD *)(v0 + 264);
    long long v56 = *(_OWORD *)(v0 + 248);
    (*(void (**)(char *, void))(*(void *)(v0 + 336) + 8))(v1, *(void *)(v0 + 320));
    uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
    uint64_t v6 = swift_task_alloc();
    *(_OWORD *)(v6 + 16) = v47;
    *(void *)(v6 + 32) = v4;
    *(_OWORD *)(v0 + 128) = v50;
    *(_OWORD *)(v0 + 144) = v56;
    *(_OWORD *)(v0 + 160) = v53;
    type metadata accessor for MergeStateMachine.UpstreamFinishedAction();
    os_unfair_lock_lock(v5);
    sub_24E5ABDBC((uint64_t *)(v0 + 176));
    os_unfair_lock_unlock(v5);
    swift_task_dealloc();
    unint64_t v7 = *(void *)(v0 + 176);
    uint64_t v8 = *(void *)(v0 + 192);
    if (v7 >> 62)
    {
      if (v7 >> 62 != 1)
      {
LABEL_23:
        (*(void (**)(void, void))(*(void *)(v0 + 408) + 8))(*(void *)(v0 + 416), *(void *)(v0 + 400));
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
        return v44();
      }
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        sub_24E863F68();
        sub_24E5AB52C();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v10 = 0;
        do
        {
          ++v10;
          uint64_t v11 = v8;
          uint64_t v12 = swift_allocError();
          sub_24E863B28();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
          swift_allocError();
          uint64_t *v13 = v12;
          uint64_t v8 = v11;
          swift_continuation_throwingResumeWithError();
        }
        while (v9 != v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
      }
      uint64_t v39 = *(void *)(v0 + 360);
      uint64_t v40 = *(void *)(v0 + 344);
      uint64_t v42 = *(void *)(v0 + 320);
      uint64_t v41 = *(void *)(v0 + 328);
      uint64_t v43 = *(void *)(v0 + 312);
      sub_24E864068();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v40, 1, 1, v43);
      (*(void (**)(void, uint64_t, uint64_t))(v41 + 32))(*(void *)(*(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x40) + 40), v40, v42);
      swift_continuation_throwingResume();
    }
    else
    {
      uint64_t v35 = *(void *)(*(void *)(v0 + 184) + 16);
      if (v35)
      {
        sub_24E863F68();
        sub_24E5AB52C();
        unint64_t v58 = v7;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v36 = 0;
        do
        {
          ++v36;
          uint64_t v37 = swift_allocError();
          sub_24E863B28();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
          swift_allocError();
          *uint64_t v38 = v37;
          swift_continuation_throwingResumeWithError();
        }
        while (v35 != v36);
        swift_bridgeObjectRelease();
        unint64_t v7 = v58;
      }
      else
      {
        swift_retain();
      }
      sub_24E864068();
    }
    swift_release();
    sub_24E5B8944(v7);
    goto LABEL_23;
  }
  uint64_t v14 = *(void *)(v0 + 376);
  uint64_t v15 = *(void **)(v0 + 304);
  uint64_t v51 = *(void *)(v0 + 296);
  uint64_t v16 = *(void *)(v0 + 288);
  uint64_t v54 = *(void *)(v0 + 280);
  uint64_t v17 = *(void *)(v0 + 208);
  long long v48 = *(_OWORD *)(v0 + 216);
  uint64_t v46 = *(void (**)(uint64_t, char *, uint64_t))(v2 + 32);
  v46(v14, v1, v3);
  uint64_t v18 = *(os_unfair_lock_s **)(v17 + 16);
  uint64_t v19 = swift_task_alloc();
  *(_OWORD *)(v19 + 16) = v48;
  *(void *)(v19 + 32) = v17;
  *(void *)(v19 + 40) = v14;
  os_unfair_lock_lock(v18);
  sub_24E5ABDF4(v15);
  os_unfair_lock_unlock(v18);
  swift_task_dealloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v16 + 16))(v51, v15, v54);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  sub_24E8640A8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v51, 1, TupleTypeMetadata2);
  uint64_t v22 = *(void *)(v0 + 376);
  if (v21 == 1)
  {
    uint64_t v23 = *(void *)(v0 + 360);
    uint64_t v24 = *(void *)(v0 + 312);
    (*(void (**)(void, void))(*(void *)(v0 + 288) + 8))(*(void *)(v0 + 304), *(void *)(v0 + 280));
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  }
  else
  {
    uint64_t v57 = *(void *)(v0 + 376);
    uint64_t v26 = *(void *)(v0 + 360);
    uint64_t v25 = *(void *)(v0 + 368);
    uint64_t v27 = *(void *)(v0 + 344);
    uint64_t v28 = *(void *)(v0 + 320);
    uint64_t v49 = *(void *)(v0 + 328);
    uint64_t v29 = *(void *)(v0 + 312);
    uint64_t v55 = *(void *)(v0 + 304);
    uint64_t v31 = *(void *)(v0 + 288);
    unint64_t v30 = *(uint64_t **)(v0 + 296);
    uint64_t v52 = *(void *)(v0 + 280);
    uint64_t v32 = (char *)v30 + *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v33 = *v30;
    v46(v25, v32, v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v27, v25, v29);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v27, 0, 1, v29);
    (*(void (**)(void, uint64_t, uint64_t))(v49 + 32))(*(void *)(*(void *)(v33 + 64) + 40), v27, v28);
    swift_continuation_throwingResume();
    int v34 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v34(v25, v29);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v55, v52);
    v34(v57, v29);
  }
  return MEMORY[0x270FA2498](sub_24E5918B4, 0, 0);
}

uint64_t sub_24E592430()
{
  (*(void (**)(void, void))(v0[51] + 8))(v0[52], v0[50]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_24E592514(uint64_t a1, void *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = (os_unfair_lock_s *)a2[2];
  long long v4 = *(_OWORD *)(*a2 + 96);
  v7[0] = *(_OWORD *)(*a2 + 80);
  v7[1] = v4;
  v7[2] = *(_OWORD *)(v2 + 112);
  type metadata accessor for MergeStateMachine.ChildTaskSuspendedAction();
  os_unfair_lock_lock(v3);
  sub_24E5ABE14((uint64_t *)v7);
  os_unfair_lock_unlock(v3);
  if (*((void *)&v7[0] + 1) >> 62)
  {
    if (*((void *)&v7[0] + 1) >> 62 == 1)
    {
      uint64_t v5 = *((void *)&v7[0] + 1) & 0x3FFFFFFFFFFFFFFFLL;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
      swift_allocError();
      uint64_t *v6 = v5;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
}

uint64_t sub_24E592604@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  swift_beginAccess();
  long long v4 = (_OWORD *)type metadata accessor for MergeStateMachine();
  uint64_t v5 = sub_24E58CB2C(a1, v4);
  uint64_t v7 = v6;
  uint64_t result = swift_endAccess();
  *a2 = v5;
  a2[1] = v7;
  return result;
}

uint64_t sub_24E5926E0@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for MergeStateMachine();
  sub_24E58CDB8(a1, v4, a2);
  return swift_endAccess();
}

uint64_t sub_24E5927B4@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for MergeStateMachine();
  uint64_t v3 = sub_24E58D280(v2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t result = swift_endAccess();
  *a1 = v3;
  a1[1] = v5;
  a1[2] = v7;
  return result;
}

uint64_t sub_24E59288C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(void, void *)@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15 = *(void *)(a4 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](a1);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a2, a4);
  return sub_24E593070((uint64_t)v20, (uint64_t)v18, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_24E592A18(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = sub_24E864388();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = *(void *)(a1 + 24);
  v12[0] = v3;
  v12[1] = v8;
  v12[2] = v3;
  long long v13 = *(_OWORD *)(a1 + 32);
  uint64_t v14 = v13;
  type metadata accessor for MergeStorage();
  uint64_t v9 = v1 + *(int *)(a1 + 52);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v7, 1, 1, v3);
  swift_allocObject();
  uint64_t v10 = sub_24E5973B8(v1, v9, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_24E592B88((uint64_t)v10);
}

uint64_t sub_24E592B88(uint64_t a1)
{
  type metadata accessor for AsyncMerge2Sequence.Iterator.InternalClass();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_24E592BFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_24E592A18(a1);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v2, a1);
  *a2 = v5;
  return result;
}

uint64_t sub_24E592C64(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_24E592C98()
{
  return sub_24E592CB0(sub_24E58E664);
}

uint64_t sub_24E592CB0(void (*a1)(void))
{
  a1();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24E592D00(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_24E592D20, 0, 0);
}

uint64_t sub_24E592D20()
{
  uint64_t v1 = *(void **)(v0[3] + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24E592DFC;
  v2[2] = v0[2];
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_24E58E900, 0, 0);
}

uint64_t sub_24E592DFC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24E592EF0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_24E592F10, 0, 0);
}

uint64_t sub_24E592F10()
{
  uint64_t v1 = **(void **)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24E5C54B0;
  v2[2] = *(void *)(v0 + 16);
  v2[3] = v1;
  return MEMORY[0x270FA2498](sub_24E592D20, 0, 0);
}

uint64_t sub_24E592FC4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_24E56A260;
  return MEMORY[0x270FA2498](sub_24E592F10, 0, 0);
}

uint64_t sub_24E593070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(void, void *)@<X6>, uint64_t a8@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a8, a1);
  v17[0] = a3;
  v17[1] = a4;
  v17[2] = a5;
  v17[3] = a6;
  uint64_t v15 = a7(0, v17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a8 + *(int *)(v15 + 52), a2, a4);
}

uint64_t sub_24E593148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v6(a3, 1, 1, AssociatedTypeWitness);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for AsyncChain2Sequence.Iterator() + 52);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v10(v7, 1, 1, v8);
  uint64_t v11 = sub_24E864388();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a3, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a3, a1, AssociatedTypeWitness);
  v6(a3, 0, 1, AssociatedTypeWitness);
  uint64_t v12 = sub_24E864388();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v7, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v7, a2, v8);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v10)(v7, 0, 1, v8);
}

uint64_t sub_24E59338C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(void *)(a2 + 32);
  v3[6] = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  uint64_t v5 = sub_24E864388();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = *(void *)(AssociatedTypeWitness - 8);
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5934D8, 0, 0);
}

uint64_t sub_24E5934D8()
{
  uint64_t v1 = v0[4];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v0[13] = AssociatedTypeWitness;
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  v0[14] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, AssociatedTypeWitness))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[11] + 56))(v0[10], 1, 1, v0[7]);
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[14];
    uint64_t v7 = v0[3];
    uint64_t v6 = v0[4];
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
    uint64_t v8 = sub_24E864388();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
    uint64_t v9 = v6 + *(int *)(v7 + 52);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v9, 1, AssociatedTypeWitness))
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v0[11] + 56))(v0[2], 1, 1, v0[7]);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v10 = (uint64_t (*)(void))v0[1];
      return v10();
    }
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v15 = (void *)swift_task_alloc();
    v0[17] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_24E593BCC;
    uint64_t v14 = v0[2];
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    long long v13 = (void *)swift_task_alloc();
    v0[15] = v13;
    void *v13 = v0;
    v13[1] = sub_24E593814;
    uint64_t v14 = v0[10];
  }
  return MEMORY[0x270FA1E80](v14, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_24E593814()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E593D18;
  }
  else {
    uint64_t v2 = sub_24E593928;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E593928()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[14];
    uint64_t v7 = v0[3];
    uint64_t v6 = v0[4];
    (*(void (**)(uint64_t, void))(v0[9] + 8))(v1, v0[8]);
    uint64_t v8 = sub_24E864388();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    uint64_t v9 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
    uint64_t v10 = v6 + *(int *)(v7 + 52);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v10, 1, AssociatedTypeWitness))
    {
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      long long v13 = (void *)swift_task_alloc();
      v0[17] = v13;
      void *v13 = v0;
      v13[1] = sub_24E593BCC;
      uint64_t v14 = v0[2];
      return MEMORY[0x270FA1E80](v14, AssociatedTypeWitness, AssociatedConformanceWitness);
    }
  }
  else
  {
    uint64_t v15 = v0[12];
    uint64_t v16 = v0[2];
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v17(v15, v1, v3);
    v17(v16, v15, v3);
    uint64_t v9 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[11] + 56))(v0[2], v9, 1, v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_24E593BCC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24E593EB0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24E593D18()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = sub_24E864388();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  uint64_t v6 = v3 + *(int *)(v4 + 52);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24E864388();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v6, 1, 1, AssociatedTypeWitness);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_24E593EB0()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = sub_24E864388();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  uint64_t v6 = v3 + *(int *)(v4 + 52);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24E864388();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v6, 1, 1, AssociatedTypeWitness);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_24E594048(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E5699A4;
  return sub_24E59338C(a1, a2);
}

uint64_t sub_24E5940F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[3] = AssociatedTypeWitness;
  v6[4] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = swift_task_alloc();
  _OWORD v6[5] = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  v6[6] = v14;
  void *v14 = v6;
  v14[1] = sub_24E594244;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v13);
}

uint64_t sub_24E594244()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0) {
    (*(void (**)(void, void, void))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  }
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v3[1];
  return v4();
}

uint64_t sub_24E594378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(void *)(v6 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness - 8);
  uint64_t v12 = (char *)v21 - v11;
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)v21 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v3, v13);
  sub_24E8640E8();
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v8, v3 + *(int *)(a1 + 52), v5);
  sub_24E8640E8();
  return sub_24E593148((uint64_t)v19, (uint64_t)v12, v23);
}

uint64_t sub_24E5945E8(uint64_t a1, uint64_t a2)
{
  return sub_24E595910(a1, a2, (void (*)(void))sub_24E594378);
}

uint64_t sub_24E594600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 56);
  v9(a5, 1, 1);
  uint64_t v10 = (int *)type metadata accessor for AsyncTimerSequence.Iterator();
  uint64_t v11 = a5 + v10[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v11, 1, 1, AssociatedTypeWitness);
  uint64_t v13 = sub_24E864388();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a5, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a5, a3, a4);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v9)(a5, 0, 1, a4);
  uint64_t v14 = a5 + v10[9];
  uint64_t v15 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a1, v15);
  uint64_t v16 = a5 + v10[10];
  uint64_t v17 = sub_24E864388();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32);

  return v18(v16, a2, v17);
}

uint64_t sub_24E594854@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(char **)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v50 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v51 = AssociatedTypeWitness;
  uint64_t v6 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v49 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v52 = (char *)&v47 - v9;
  MEMORY[0x270FA5388](v8);
  long long v48 = (char *)&v47 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_24E864388();
  uint64_t v54 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v47 - v14;
  uint64_t v16 = *(void *)(v11 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v13);
  uint64_t v59 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v47 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v47 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v57 = v4;
  unint64_t v58 = v3;
  uint64_t v26 = (char *)&v47 - v25;
  sub_24E8649E8();
  uint64_t v56 = a1;
  uint64_t v27 = *(int *)(a1 + 44);
  uint64_t v29 = v54;
  uint64_t v28 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v15, v55 + v27, v12);
  unint64_t v30 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v60 = v26;
  v30(v21, v26, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v11) == 1)
  {
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v31(v24, v21, v11);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v11);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v31(v24, v15, v11);
  }
  uint64_t v32 = v28 + *(int *)(v56 + 36);
  swift_getAssociatedConformanceWitness();
  uint64_t v33 = v59;
  sub_24E864648();
  if ((sub_24E863BE8() & 1) == 0)
  {
    uint64_t v46 = *(void (**)(char *, uint64_t))(v16 + 8);
    v46(v24, v11);
    v46(v60, v11);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(v53, v33, v11);
  }
  unint64_t v58 = v24;
  uint64_t v35 = v50;
  uint64_t v34 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v52, v32, v51);
  uint64_t v36 = v49;
  sub_24E864658();
  swift_getAssociatedConformanceWitness();
  sub_24E8646E8();
  double v38 = v37;
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t))(v35 + 8);
  uint64_t result = v39(v36, v34);
  double v41 = ceil(v38);
  if ((~*(void *)&v41 & 0x7FF0000000000000) != 0)
  {
    if (v41 > -9.22337204e18)
    {
      if (v41 < 9.22337204e18)
      {
        uint64_t v42 = v48;
        uint64_t v43 = v52;
        sub_24E8646F8();
        v39(v43, v34);
        uint64_t v44 = v58;
        sub_24E864648();
        v39(v42, v34);
        uint64_t v45 = *(void (**)(char *, uint64_t))(v16 + 8);
        v45(v59, v11);
        v45(v44, v11);
        return ((uint64_t (*)(char *, uint64_t))v45)(v60, v11);
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_24E594E2C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  v3[6] = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  v3[8] = *(void *)(AssociatedTypeWitness - 8);
  v3[9] = swift_task_alloc();
  uint64_t v6 = sub_24E864388();
  v3[10] = v6;
  v3[11] = *(void *)(v6 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E594FC8, 0, 0);
}

uint64_t sub_24E594FC8()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[6];
  (*(void (**)(uint64_t, void, void))(v0[11] + 16))(v1, v0[4], v0[10]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = v0[8];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(void, uint64_t, uint64_t, void))(v4 + 56))(v0[2], 1, 1, v0[7]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v0[9];
    uint64_t v9 = v0[3];
    uint64_t v8 = v0[4];
    (*(void (**)(void, void, void))(v0[13] + 32))(v0[14], v0[12], v0[6]);
    sub_24E594854(v9, v7);
    uint64_t v10 = v8 + *(int *)(v9 + 40);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[15] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_24E595190;
    uint64_t v12 = v0[9];
    uint64_t v14 = v0[5];
    uint64_t v13 = v0[6];
    return MEMORY[0x270FA2380](v12, v10, v13, v14);
  }
}

uint64_t sub_24E595190()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E59540C;
  }
  else {
    uint64_t v2 = sub_24E5952A4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E5952A4()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[3];
  sub_24E8649E8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v6);
  uint64_t v9 = v7 + *(int *)(v8 + 44);
  uint64_t v10 = sub_24E864388();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v9, v3, v5);
  uint64_t v11 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56);
  v11(v9, 0, 1, v5);
  v11(v0[2], 0, 1, v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_24E59540C()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  (*(void (**)(void, void))(v6 + 8))(v0[9], v0[7]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v7);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v7);
  (*(void (**)(void, uint64_t, uint64_t, void))(v6 + 56))(v0[2], 1, 1, v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_24E595548(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E5C54C8;
  return sub_24E594E2C(a1, a2);
}

uint64_t sub_24E5955F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_24E5C54CC;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v12);
}

uint64_t sub_24E5956BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v21 = a2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v7 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_24E864388();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v20 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v20 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v20 - v16, v3 + *(int *)(a1 + 36), AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v3 + *(int *)(a1 + 40), v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v3, v5);
  return sub_24E594600((uint64_t)v17, (uint64_t)v15, (uint64_t)v9, v5, v21);
}

uint64_t sub_24E5958F8(uint64_t a1, uint64_t a2)
{
  return sub_24E595910(a1, a2, (void (*)(void))sub_24E5956BC);
}

uint64_t sub_24E595910(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v5(v3, a1);
}

uint64_t sub_24E595974(uint64_t a1, void *a2)
{
  v3[16] = a1;
  v3[17] = v2;
  uint64_t v5 = a2[3];
  v3[18] = v5;
  v3[19] = *(void *)(v5 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v6 = a2[5];
  v3[21] = v6;
  uint64_t v7 = a2[2];
  v3[22] = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[23] = AssociatedTypeWitness;
  v3[24] = *(void *)(AssociatedTypeWitness - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  uint64_t v9 = a2[4];
  v3[27] = v9;
  uint64_t v10 = a2[6];
  v3[28] = v10;
  uint64_t v11 = a2[7];
  v3[2] = v7;
  v3[29] = v11;
  v3[3] = v5;
  v3[4] = v9;
  v3[5] = v6;
  v3[6] = v10;
  v3[7] = v11;
  uint64_t v12 = type metadata accessor for AsyncChunksOfCountOrSignalSequence.Either();
  v3[30] = v12;
  uint64_t v13 = sub_24E864388();
  v3[31] = v13;
  v3[32] = *(void *)(v13 - 8);
  v3[33] = swift_task_alloc();
  v3[34] = *(void *)(v12 - 8);
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  uint64_t v14 = sub_24E864388();
  v3[37] = v14;
  v3[38] = *(void *)(v14 - 8);
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E595C60, 0, 0);
}

uint64_t sub_24E595C60()
{
  uint64_t v1 = v0[19];
  char v2 = *(unsigned char *)(v0[17] + 24);
  uint64_t v3 = *(void (**)(void, uint64_t, uint64_t, void))(v1 + 56);
  v0[43] = v3;
  v0[44] = (v1 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  if (v2)
  {
    v3(v0[16], 1, 1, v0[18]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    v3(v0[42], 1, 1, v0[18]);
    uint64_t v6 = v0[17];
    uint64_t v7 = (void *)swift_task_alloc();
    v0[45] = v7;
    uint64_t v8 = sub_24E8646C8();
    sub_24E863EF8();
    swift_getWitnessTable();
    uint64_t v9 = type metadata accessor for AsyncSyncSequence();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v11 = swift_getWitnessTable();
    v0[8] = v8;
    v0[9] = v9;
    v0[10] = WitnessTable;
    v0[11] = v11;
    uint64_t v12 = type metadata accessor for AsyncChain2Sequence();
    uint64_t v13 = sub_24E8646C8();
    uint64_t v14 = swift_getWitnessTable();
    uint64_t v15 = swift_getWitnessTable();
    v0[12] = v12;
    v0[13] = v13;
    v0[14] = v14;
    v0[15] = v15;
    type metadata accessor for AsyncMerge2Sequence.Iterator();
    *uint64_t v7 = v0;
    v7[1] = sub_24E595F54;
    v7[2] = v0[33];
    v7[3] = v6 + 16;
    return MEMORY[0x270FA2498](sub_24E592F10, 0, 0);
  }
}

uint64_t sub_24E595F54()
{
  *(void *)(*(void *)v1 + 368) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_24E5967C4;
  }
  else {
    char v2 = sub_24E596068;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E596068()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[30];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v9 = v0[35];
    uint64_t v8 = v0[36];
    uint64_t v10 = v0[23];
    uint64_t v11 = v0[24];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v8, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v9, v8, v3);
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 2, v10);
    if (v12)
    {
      if (v12 == 1)
      {
        uint64_t v13 = v0[42];
        uint64_t v14 = v0[37];
        uint64_t v15 = v0[38];
        uint64_t v16 = v0[16];
        uint64_t v17 = v0[17];
        (*(void (**)(void, void))(v0[34] + 8))(v0[36], v0[30]);
        *(unsigned char *)(v17 + 24) = 1;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v13, v14);
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
        goto LABEL_18;
      }
      uint64_t v42 = v0[42];
      uint64_t v44 = v0[38];
      uint64_t v43 = v0[39];
      uint64_t v45 = v0[37];
      uint64_t v46 = v0[18];
      uint64_t v47 = v0[19];
      (*(void (**)(void, void))(v0[34] + 8))(v0[36], v0[30]);
      long long v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
      v48(v43, v42, v45);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v43, 1, v46) != 1)
      {
        uint64_t v49 = v0[42];
        uint64_t v50 = v0[37];
        uint64_t v51 = v0[16];
        uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v0[38] + 8);
        v52(v0[39], v50);
        v48(v51, v49, v50);
        v52(v49, v50);
        goto LABEL_18;
      }
      (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[37]);
      goto LABEL_21;
    }
    uint64_t v18 = v0[41];
    uint64_t v19 = v0[42];
    uint64_t v20 = v0[37];
    uint64_t v21 = v0[38];
    uint64_t v22 = v0[18];
    uint64_t v23 = v0[19];
    (*(void (**)(void, void, void))(v0[24] + 32))(v0[26], v0[35], v0[23]);
    uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    v79(v18, v19, v20);
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    LODWORD(v19) = v24(v18, 1, v22);
    uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v78(v18, v20);
    if (v19 == 1)
    {
      uint64_t v25 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[43];
      uint64_t v26 = v0[42];
      uint64_t v27 = v0[40];
      uint64_t v28 = v0[37];
      uint64_t v29 = v0[38];
      uint64_t v30 = v0[18];
      sub_24E8641F8();
      v25(v27, 0, 1, v30);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 40))(v26, v27, v28);
    }
    uint64_t v31 = v0[42];
    uint64_t v32 = v0[18];
    (*(void (**)(void, void, void))(v0[24] + 16))(v0[25], v0[26], v0[23]);
    uint64_t v33 = (uint64_t (*)())v24(v31, 1, v32);
    if (v33 == 1)
    {
      __break(1u);
      return MEMORY[0x270FA2498](v33, v34, v35);
    }
    uint64_t v36 = v0[42];
    uint64_t v37 = v0[18];
    sub_24E8641E8();
    if (v24(v36, 1, v37))
    {
      uint64_t v38 = v0[36];
      uint64_t v39 = v0[34];
      uint64_t v40 = v0[30];
      uint64_t v41 = v0[17];
      (*(void (**)(void, void))(v0[24] + 8))(v0[26], v0[23]);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
      if ((*(unsigned char *)(v41 + 8) & 1) == 0) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v53 = v0[34];
      uint64_t v76 = v0[30];
      uint64_t v77 = v0[36];
      uint64_t v54 = v0[26];
      uint64_t v55 = v0[23];
      uint64_t v56 = v0[24];
      uint64_t v57 = v0[19];
      uint64_t v58 = v0[20];
      uint64_t v59 = v0[17];
      uint64_t v60 = v0[18];
      (*(void (**)(uint64_t, void, uint64_t))(v57 + 16))(v58, v0[42], v60);
      uint64_t v61 = sub_24E8641A8();
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v58, v60);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v77, v76);
      if ((*(unsigned char *)(v59 + 8) & 1) != 0 || v61 != *(void *)v0[17])
      {
LABEL_21:
        uint64_t v66 = v0[17];
        uint64_t v67 = (void *)swift_task_alloc();
        v0[45] = v67;
        uint64_t v68 = sub_24E8646C8();
        sub_24E863EF8();
        swift_getWitnessTable();
        uint64_t v69 = type metadata accessor for AsyncSyncSequence();
        uint64_t WitnessTable = swift_getWitnessTable();
        uint64_t v71 = swift_getWitnessTable();
        v0[8] = v68;
        v0[9] = v69;
        v0[10] = WitnessTable;
        v0[11] = v71;
        uint64_t v72 = type metadata accessor for AsyncChain2Sequence();
        uint64_t v73 = sub_24E8646C8();
        uint64_t v74 = swift_getWitnessTable();
        uint64_t v75 = swift_getWitnessTable();
        v0[12] = v72;
        v0[13] = v73;
        v0[14] = v74;
        v0[15] = v75;
        type metadata accessor for AsyncMerge2Sequence.Iterator();
        *uint64_t v67 = v0;
        v67[1] = sub_24E595F54;
        v67[2] = v0[33];
        v67[3] = v66 + 16;
        uint64_t v33 = sub_24E592F10;
        uint64_t v34 = 0;
        uint64_t v35 = 0;
        return MEMORY[0x270FA2498](v33, v34, v35);
      }
    }
    uint64_t v62 = v0[42];
    uint64_t v63 = v0[37];
    v79(v0[16], v62, v63);
    v78(v62, v63);
    goto LABEL_18;
  }
  uint64_t v4 = v0[42];
  uint64_t v5 = v0[37];
  uint64_t v6 = v0[38];
  uint64_t v7 = v0[16];
  (*(void (**)(uint64_t, void))(v0[32] + 8))(v1, v0[31]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v4, v5);
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v64 = (uint64_t (*)(void))v0[1];
  return v64();
}

uint64_t sub_24E5967C4()
{
  (*(void (**)(void, void))(v0[38] + 8))(v0[42], v0[37]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E5968C4(uint64_t a1, void *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E56A260;
  return sub_24E595974(a1, a2);
}

uint64_t sub_24E59696C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v60 = *(void *)(v1 - 8);
  uint64_t v2 = (void *)MEMORY[0x270FA5388](a1);
  uint64_t v59 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v2;
  uint64_t v4 = v2[2];
  uint64_t v6 = v2[5];
  uint64_t v5 = v2[6];
  uint64_t v64 = v2[3];
  uint64_t v65 = v5;
  uint64_t v7 = v2[7];
  uint64_t v68 = v4;
  uint64_t v69 = v64;
  uint64_t v70 = v1;
  uint64_t v71 = v6;
  uint64_t v62 = v6;
  uint64_t v63 = v7;
  uint64_t v72 = v5;
  uint64_t v73 = v7;
  type metadata accessor for AsyncChunksOfCountOrSignalSequence.Either();
  uint64_t v43 = v1;
  uint64_t v8 = sub_24E8646C8();
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v58 = (char *)&v43 - v10;
  uint64_t v11 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24E8646C8();
  uint64_t v56 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v44 = (char *)&v43 - v15;
  uint64_t v49 = sub_24E863EF8();
  swift_getWitnessTable();
  uint64_t v16 = type metadata accessor for AsyncSyncSequence();
  uint64_t v48 = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v47 = WitnessTable;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v68 = v14;
  uint64_t v69 = v16;
  uint64_t v70 = WitnessTable;
  uint64_t v71 = v46;
  uint64_t v18 = type metadata accessor for AsyncChain2Sequence();
  uint64_t v57 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v45 = (uint64_t)&v43 - v19;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v52 = v20;
  uint64_t v50 = v8;
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v68 = v18;
  uint64_t v69 = v8;
  uint64_t v70 = v20;
  uint64_t v71 = v51;
  uint64_t v54 = type metadata accessor for AsyncMerge2Sequence();
  uint64_t v55 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v22 = (char *)&v43 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v66, v4);
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = v64;
  v23[2] = v4;
  v23[3] = v24;
  v23[4] = v1;
  uint64_t v25 = v65;
  v23[5] = v62;
  v23[6] = v25;
  v23[7] = v63;
  uint64_t v26 = (uint64_t)v44;
  sub_24E8640F8();
  swift_release();
  sub_24E864938();
  swift_allocObject();
  uint64_t v27 = sub_24E863E68();
  uint64_t v29 = v28;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v29, 1, 2, AssociatedTypeWitness);
  uint64_t v67 = sub_24E7DBAFC(v27);
  sub_24E58B888(v49, (uint64_t)&v68);
  swift_bridgeObjectRelease();
  uint64_t v67 = v68;
  uint64_t v31 = v45;
  sub_24E59288C(v26, (uint64_t)&v67, v14, v48, v47, v46, (uint64_t (*)(void, void *))type metadata accessor for AsyncChain2Sequence, v45);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v26, v14);
  uint64_t v32 = v53;
  uint64_t v33 = v66;
  uint64_t v34 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, v66 + *((int *)v53 + 17), v43);
  uint64_t v35 = (void *)swift_allocObject();
  uint64_t v36 = v63;
  uint64_t v37 = v64;
  v35[2] = v4;
  v35[3] = v37;
  uint64_t v38 = v62;
  v35[4] = v34;
  v35[5] = v38;
  v35[6] = v65;
  v35[7] = v36;
  uint64_t v39 = (uint64_t)v58;
  sub_24E8640F8();
  swift_release();
  uint64_t v40 = v50;
  sub_24E59288C(v31, v39, v18, v50, v52, v51, (uint64_t (*)(void, void *))type metadata accessor for AsyncMerge2Sequence, (uint64_t)v22);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v39, v40);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v31, v18);
  uint64_t v41 = v54;
  sub_24E592A18(v54);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v22, v41);
  return *(void *)(v33 + *((int *)v32 + 18));
}

uint64_t sub_24E597138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a3;
  _OWORD v6[5] = a6;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_24E59715C, 0, 0);
}

uint64_t sub_24E59715C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, AssociatedTypeWitness);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 2, AssociatedTypeWitness);
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_24E59724C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a3;
  v6[4] = a6;
  v6[2] = a1;
  return MEMORY[0x270FA2498](sub_24E597270, 0, 0);
}

uint64_t sub_24E597270()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v1, 2, 2, AssociatedTypeWitness);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24E597320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24E59696C(a1);
  char v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v2, a1);
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v7 & 1;
  *(void *)(a2 + 16) = v9;
  *(unsigned char *)(a2 + 24) = v11 & 1;
  return result;
}

char *sub_24E5973B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v30 = a1;
  uint64_t v4 = *(void **)v3;
  uint64_t v26 = *(void *)(*(void *)v3 + 96);
  uint64_t v5 = v26;
  uint64_t v31 = sub_24E864388();
  uint64_t v29 = *(void *)(v31 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v31);
  uint64_t v28 = (char *)&v24 - v7;
  uint64_t v8 = v4[11];
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v6);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = v4[10];
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v25 = v4[13];
  uint64_t v24 = v4[14];
  uint64_t v17 = v4[15];
  uint64_t v34 = v13;
  uint64_t v35 = v8;
  uint64_t v36 = v5;
  uint64_t v37 = v25;
  uint64_t v38 = v24;
  uint64_t v39 = v17;
  uint64_t v27 = type metadata accessor for MergeStateMachine();
  uint64_t v18 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v20 = (char *)&v24 - v19;
  uint64_t v21 = (_DWORD *)swift_slowAlloc();
  *uint64_t v21 = 0;
  *((void *)v3 + 2) = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v30, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v32, v8);
  uint64_t v22 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v28, v33, v31);
  sub_24E58C334((uint64_t)v16, (uint64_t)v12, v22, v13, v8, v26, v25, v24, (uint64_t)v20, v17, (void (*)(void, uint64_t *))type metadata accessor for MergeStateMachine.State, (uint64_t (*)(void, uint64_t *))type metadata accessor for MergeStateMachine);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v3[*(void *)(*(void *)v3 + 136)], v20, v27);
  return v3;
}

uint64_t sub_24E597750()
{
  return sub_24E864558();
}

void *sub_24E5977B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v30 = a1;
  uint64_t v4 = (void *)*v3;
  uint64_t v27 = *(void *)(*v3 + 96);
  uint64_t v5 = v27;
  uint64_t v31 = sub_24E864388();
  uint64_t v29 = *(void *)(v31 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v31);
  uint64_t v28 = (char *)&v24 - v7;
  uint64_t v8 = v4[11];
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v6);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = v4[10];
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v26 = v4[13];
  uint64_t v25 = v4[14];
  uint64_t v24 = v4[15];
  uint64_t v34 = v13;
  uint64_t v35 = v8;
  uint64_t v36 = v5;
  uint64_t v37 = v26;
  uint64_t v38 = v25;
  uint64_t v39 = v24;
  uint64_t v17 = type metadata accessor for CombineLatestStateMachine();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v24 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v30, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v32, v8);
  uint64_t v21 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v28, v33, v31);
  sub_24E58C334((uint64_t)v16, (uint64_t)v12, v21, v13, v8, v27, v26, v25, (uint64_t)v20, v24, (void (*)(void, uint64_t *))type metadata accessor for CombineLatestStateMachine.State, (uint64_t (*)(void, uint64_t *))type metadata accessor for CombineLatestStateMachine);
  uint64_t v22 = sub_24E597750();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v3[2] = v22;
  return v3;
}

uint64_t sub_24E597B44()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E597B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t type metadata accessor for AsyncCombineLatest2Sequence()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for AsyncCombineLatest2Sequence.Iterator()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for AsyncCombineLatest2Sequence.Iterator.InternalClass()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E597BDC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24E597C24()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ManagedCriticalState.LockedBuffer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E597C80()
{
  uint64_t result = type metadata accessor for MergeStateMachine();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MergeStorage()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for MergeStateMachine()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E597D64()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AsyncMerge2Sequence.Iterator.InternalClass()
{
  return swift_getGenericMetadata();
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Lock(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for Lock(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)uint64_t result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Lock()
{
  return &type metadata for Lock;
}

uint64_t sub_24E597E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_24E597E68(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_24E59D440(a1, a2, a3, (uint64_t (*)(uint64_t, _OWORD *))type metadata accessor for MergeStateMachine.State);
}

void *sub_24E597E80(char *__dst, unsigned __int8 *__src, void *a3)
{
  int v3 = __src;
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(a3[2] - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = a3[3];
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (v6 + v9) & ~v9;
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v13 = a3[4] - 8;
  uint64_t v14 = *(void *)v13;
  int v15 = *(_DWORD *)(*(void *)v13 + 80);
  uint64_t v16 = v15;
  uint64_t v17 = (v12 + v16 + v11) & ~v16;
  if (*(_DWORD *)(*(void *)v13 + 84)) {
    size_t v18 = *(void *)(*(void *)v13 + 64);
  }
  else {
    size_t v18 = *(void *)(*(void *)v13 + 64) + 1;
  }
  if (v18 + v17 <= 0x28) {
    uint64_t v19 = 40;
  }
  else {
    uint64_t v19 = v18 + v17;
  }
  if (v19 > 3) {
    goto LABEL_11;
  }
  unsigned int v20 = ((1 << (8 * v19)) + 1) >> (8 * v19);
  uint64_t v21 = 2;
  if (v20 > 0xFFFC) {
    uint64_t v21 = 4;
  }
  if (v20 <= 0xFC) {
LABEL_11:
  }
    uint64_t v21 = 1;
  unint64_t v22 = ((v19 + v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  int v23 = *(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80) | v15;
  if (v22 <= 0x18 && (v23 & 0x1000F8) == 0)
  {
    if (v19 > 3) {
      goto LABEL_20;
    }
    unsigned int v26 = ((1 << (8 * v19)) + 1) >> (8 * v19);
    if (v26 > 0xFFFC)
    {
      unsigned int v27 = *(_DWORD *)&__src[v19];
      unsigned int v28 = v27 - 3;
      if (v27 < 3) {
        goto LABEL_38;
      }
      goto LABEL_25;
    }
    if (v26 > 0xFC)
    {
      unsigned int v27 = *(unsigned __int16 *)&__src[v19];
      unsigned int v28 = v27 - 3;
      if (v27 < 3) {
        goto LABEL_38;
      }
    }
    else
    {
LABEL_20:
      unsigned int v27 = __src[v19];
      unsigned int v28 = v27 - 3;
      if (v27 < 3) {
        goto LABEL_38;
      }
    }
LABEL_25:
    if (v19 <= 3) {
      uint64_t v29 = v19;
    }
    else {
      uint64_t v29 = 4;
    }
    switch(v29)
    {
      case 1:
        int v30 = *__src;
        if (v19 < 4) {
          goto LABEL_36;
        }
        goto LABEL_37;
      case 2:
        int v30 = *(unsigned __int16 *)__src;
        if (v19 >= 4) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 3:
        int v30 = *(unsigned __int16 *)__src | (__src[2] << 16);
        if (v19 >= 4) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 4:
        int v30 = *(_DWORD *)__src;
        if (v19 < 4) {
LABEL_36:
        }
          v30 |= v28 << (8 * v19);
LABEL_37:
        unsigned int v27 = v30 + 3;
        break;
      default:
        break;
    }
LABEL_38:
    if (v27 != 2)
    {
      if (v27 != 1)
      {
        if (v27)
        {
          if (v19 > 3) {
            goto LABEL_57;
          }
          unsigned int v42 = ((1 << (8 * v19)) + 1) >> (8 * v19);
          uint64_t v43 = 2;
          if (v42 > 0xFFFC) {
            uint64_t v43 = 4;
          }
          if (v42 <= 0xFC) {
LABEL_57:
          }
            uint64_t v43 = 1;
          memcpy(__dst, __src, v43 + v19);
          if (v19 <= 3)
          {
LABEL_63:
            unsigned int v44 = ((1 << (8 * v19)) + 1) >> (8 * v19);
            uint64_t v45 = 2;
            if (v44 > 0xFFFC) {
              uint64_t v45 = 4;
            }
            if (v44 > 0xFC) {
              goto LABEL_77;
            }
          }
LABEL_66:
          uint64_t v45 = 1;
LABEL_77:
          *(void *)(((unint64_t)v4 + v45 + v19 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v3[v45 + 7 + v19] & 0xFFFFFFFFFFFFFFF8);
          return v4;
        }
        uint64_t v49 = ~v9;
        uint64_t v50 = a3[4];
        (*(void (**)(char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
        uint64_t v31 = (char *)v3;
        unint64_t v32 = ((unint64_t)v4 + v10) & v49;
        uint64_t v48 = v31;
        unint64_t v33 = (unint64_t)&v31[v10] & v49;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v32, v33, v7);
        uint64_t v34 = (void *)((v32 + v12 + v16) & ~v16);
        uint64_t v35 = (const void *)((v33 + v12 + v16) & ~v16);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v35, 1, v50))
        {
          memcpy(v34, v35, v18);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v34, v35, v50);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v34, 0, 1, v50);
        }
        int v3 = (unsigned __int8 *)v48;
        if (v19 > 3)
        {
LABEL_62:
          *((unsigned char *)v4 + v19) = 0;
          if (v19 <= 3) {
            goto LABEL_63;
          }
          goto LABEL_66;
        }
        unsigned int v38 = ((1 << (8 * v19)) + 1) >> (8 * v19);
        if (v38 > 0xFFFC)
        {
          *(_DWORD *)((char *)v4 + v19) = 0;
        }
        else
        {
          if (v38 <= 0xFC) {
            goto LABEL_62;
          }
          *(_WORD *)((char *)v4 + v19) = 0;
        }
LABEL_75:
        BOOL v46 = v38 > 0xFFFC;
        uint64_t v45 = 2;
        if (v46) {
          uint64_t v45 = 4;
        }
        goto LABEL_77;
      }
      uint64_t v40 = *((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      *((void *)__dst + 1) = v40;
      *((void *)__dst + 2) = *((void *)__src + 2);
      *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v19 > 3) {
        goto LABEL_50;
      }
      int v41 = 1;
      unsigned int v38 = ((1 << (8 * v19)) + 1) >> (8 * v19);
      if (v38 <= 0xFFFC)
      {
        if (v38 <= 0xFC)
        {
LABEL_50:
          char v39 = 1;
LABEL_51:
          *((unsigned char *)v4 + v19) = v39;
          if (v19 <= 3) {
            goto LABEL_63;
          }
          goto LABEL_66;
        }
LABEL_74:
        *(_WORD *)((char *)v4 + v19) = v41;
        goto LABEL_75;
      }
LABEL_71:
      *(_DWORD *)((char *)v4 + v19) = v41;
      goto LABEL_75;
    }
    uint64_t v36 = (void *)*((void *)__src + 1);
    *(void *)__dst = *(void *)__src;
    swift_retain();
    id v37 = v36;
    v4[1] = v36;
    if (v19 <= 3)
    {
      unsigned int v38 = ((1 << (8 * v19)) + 1) >> (8 * v19);
      if (v38 > 0xFFFC)
      {
        int v41 = 2;
        goto LABEL_71;
      }
      if (v38 > 0xFC)
      {
        LOWORD(v41) = 2;
        goto LABEL_74;
      }
    }
    char v39 = 2;
    goto LABEL_51;
  }
  uint64_t v25 = *(void *)__src;
  *uint64_t v4 = *(void *)__src;
  uint64_t v4 = (void *)(v25 + (((v23 & 0xF8 | 7u) + 16) & ~(unint64_t)(v23 & 0xF8 | 7u)));
  swift_retain();
  return v4;
}

char *sub_24E598454(char *__dst, char *__src, void *a3)
{
  int v3 = __src;
  uint64_t v5 = a3[3];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(*(void *)(a3[2] - 8) + 64) + v7;
  uint64_t v9 = a3[4] - 8;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)v9 + 80);
  uint64_t v12 = (*(void *)(v6 + 64) + v11 + (v8 & ~v7)) & ~v11;
  if (*(_DWORD *)(*(void *)v9 + 84)) {
    uint64_t v13 = *(void *)(*(void *)v9 + 64);
  }
  else {
    uint64_t v13 = *(void *)(*(void *)v9 + 64) + 1;
  }
  if ((unint64_t)(v13 + v12) <= 0x28) {
    uint64_t v14 = 40;
  }
  else {
    uint64_t v14 = v13 + v12;
  }
  if (v14 > 3) {
    goto LABEL_10;
  }
  unsigned int v15 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  if (v15 > 0xFFFC)
  {
    unsigned int v16 = *(_DWORD *)&__src[v14];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
    goto LABEL_15;
  }
  if (v15 > 0xFC)
  {
    unsigned int v16 = *(unsigned __int16 *)&__src[v14];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
  }
  else
  {
LABEL_10:
    unsigned int v16 = __src[v14];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
  }
LABEL_15:
  if (v14 <= 3) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = 4;
  }
  switch(v18)
  {
    case 1:
      int v19 = *__src;
      if (v14 < 4) {
        goto LABEL_26;
      }
      goto LABEL_27;
    case 2:
      int v19 = *(unsigned __int16 *)__src;
      if (v14 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 3:
      int v19 = *(unsigned __int16 *)__src | (__src[2] << 16);
      if (v14 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 4:
      int v19 = *(_DWORD *)__src;
      if (v14 < 4) {
LABEL_26:
      }
        v19 |= v17 << (8 * v14);
LABEL_27:
      unsigned int v16 = v19 + 3;
      break;
    default:
      break;
  }
LABEL_28:
  switch(v16)
  {
    case 2u:
      unsigned int v26 = (void *)*((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      swift_retain();
      id v27 = v26;
      *((void *)__dst + 1) = v26;
      if (v14 <= 3)
      {
        unsigned int v28 = ((1 << (8 * v14)) + 1) >> (8 * v14);
        if (v28 > 0xFFFC)
        {
          int v31 = 2;
          goto LABEL_61;
        }
        if (v28 > 0xFC)
        {
          LOWORD(v31) = 2;
          goto LABEL_64;
        }
      }
      char v29 = 2;
      goto LABEL_41;
    case 1u:
      uint64_t v30 = *((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      *((void *)__dst + 1) = v30;
      *((void *)__dst + 2) = *((void *)__src + 2);
      *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v14 > 3)
      {
LABEL_40:
        char v29 = 1;
LABEL_41:
        __dst[v14] = v29;
        if (v14 <= 3) {
          goto LABEL_53;
        }
        goto LABEL_56;
      }
      int v31 = 1;
      unsigned int v28 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v28 <= 0xFFFC)
      {
        if (v28 <= 0xFC) {
          goto LABEL_40;
        }
LABEL_64:
        *(_WORD *)&__dst[v14] = v31;
        goto LABEL_65;
      }
LABEL_61:
      *(_DWORD *)&__dst[v14] = v31;
      goto LABEL_65;
    case 0u:
      size_t __n = v13;
      uint64_t v20 = ~v7;
      uint64_t v40 = *(void *)(v6 + 64);
      uint64_t v41 = a3[4];
      (*(void (**)(char *, char *))(*(void *)(a3[2] - 8) + 16))(__dst, __src);
      uint64_t v21 = v3;
      unint64_t v22 = (unint64_t)&__dst[v8] & v20;
      char v39 = v21;
      unint64_t v23 = (unint64_t)&v21[v8] & v20;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v22, v23, v5);
      uint64_t v24 = (void *)((v22 + v40 + v11) & ~v11);
      uint64_t v25 = (const void *)((v23 + v40 + v11) & ~v11);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v25, 1, v41))
      {
        memcpy(v24, v25, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v24, v25, v41);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v41);
      }
      int v3 = v39;
      if (v14 > 3)
      {
LABEL_52:
        __dst[v14] = 0;
        if (v14 <= 3) {
          goto LABEL_53;
        }
LABEL_56:
        uint64_t v35 = 1;
        goto LABEL_67;
      }
      unsigned int v28 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v28 > 0xFFFC)
      {
        *(_DWORD *)&__dst[v14] = 0;
      }
      else
      {
        if (v28 <= 0xFC) {
          goto LABEL_52;
        }
        *(_WORD *)&__dst[v14] = 0;
      }
LABEL_65:
      BOOL v36 = v28 > 0xFFFC;
      uint64_t v35 = 2;
      if (v36) {
        uint64_t v35 = 4;
      }
      goto LABEL_67;
  }
  if (v14 > 3) {
    goto LABEL_47;
  }
  unsigned int v32 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  uint64_t v33 = 2;
  if (v32 > 0xFFFC) {
    uint64_t v33 = 4;
  }
  if (v32 <= 0xFC) {
LABEL_47:
  }
    uint64_t v33 = 1;
  memcpy(__dst, __src, v33 + v14);
  if (v14 > 3) {
    goto LABEL_56;
  }
LABEL_53:
  unsigned int v34 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  uint64_t v35 = 2;
  if (v34 > 0xFFFC) {
    uint64_t v35 = 4;
  }
  if (v34 <= 0xFC) {
    goto LABEL_56;
  }
LABEL_67:
  *(void *)((unint64_t)&__dst[v35 + 7 + v14] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v3[v35 + 7 + v14] & 0xFFFFFFFFFFFFFFF8);
  return __dst;
}

id *sub_24E598990(id *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v6 = a3[2];
  uint64_t v7 = *(void *)(v6 - 8);
  if (a1 == (id *)a2) {
    goto LABEL_91;
  }
  uint64_t v50 = *(void *)(a3[2] - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v53 = a3[3];
  uint64_t v52 = *(void *)(v53 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v52 + 80);
  uint64_t v49 = v8 + v9;
  uint64_t v10 = a3[4] - 8;
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(unsigned __int8 *)(*(void *)v10 + 80);
  uint64_t v51 = *(void *)(v52 + 64);
  uint64_t v13 = (v51 + v12 + ((v8 + v9) & ~v9)) & ~v12;
  if (*(_DWORD *)(*(void *)v10 + 84)) {
    uint64_t v14 = *(void *)(*(void *)v10 + 64);
  }
  else {
    uint64_t v14 = *(void *)(*(void *)v10 + 64) + 1;
  }
  if ((unint64_t)(v14 + v13) <= 0x28) {
    uint64_t v15 = 40;
  }
  else {
    uint64_t v15 = v14 + v13;
  }
  char v16 = 8 * v15;
  if (v15 > 3) {
    goto LABEL_11;
  }
  unsigned int v17 = ((1 << v16) + 1) >> v16;
  if (v17 > 0xFFFC)
  {
    unsigned int v18 = *(_DWORD *)((char *)a1 + v15);
    unsigned int v19 = v18 - 3;
    if (v18 < 3) {
      goto LABEL_29;
    }
    goto LABEL_16;
  }
  if (v17 > 0xFC)
  {
    unsigned int v18 = *(unsigned __int16 *)((char *)a1 + v15);
    unsigned int v19 = v18 - 3;
    if (v18 < 3) {
      goto LABEL_29;
    }
  }
  else
  {
LABEL_11:
    unsigned int v18 = *((unsigned __int8 *)a1 + v15);
    unsigned int v19 = v18 - 3;
    if (v18 < 3) {
      goto LABEL_29;
    }
  }
LABEL_16:
  if (v15 <= 3) {
    uint64_t v20 = v15;
  }
  else {
    uint64_t v20 = 4;
  }
  switch(v20)
  {
    case 1:
      int v21 = *(unsigned __int8 *)a1;
      if (v15 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v21 = *(unsigned __int16 *)a1;
      if (v15 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 3:
      int v21 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      if (v15 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 4:
      int v21 = *(_DWORD *)a1;
      if (v15 < 4) {
LABEL_27:
      }
        v21 |= v19 << v16;
LABEL_28:
      unsigned int v18 = v21 + 3;
      break;
    default:
      break;
  }
LABEL_29:
  size_t __n = v14;
  uint64_t v47 = ~v9;
  uint64_t v48 = ~v12;
  uint64_t v54 = a3[4];
  switch(v18)
  {
    case 2u:
      swift_release();

      break;
    case 1u:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v15 > 3) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0u:
      (*(void (**)(id *, uint64_t))(v50 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v52 + 8))(((unint64_t)a1 + v49) & v47, v53);
      unint64_t v22 = ((((unint64_t)a1 + v49) & v47) + v51 + v12) & v48;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v22, 1, v54))
      {
        (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v22, v54);
        if (v15 > 3) {
          goto LABEL_41;
        }
        goto LABEL_39;
      }
      break;
  }
  if (v15 > 3)
  {
LABEL_41:
    unsigned int v24 = a2[v15];
    unsigned int v25 = v24 - 3;
    if (v24 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
LABEL_39:
  unsigned int v23 = ((1 << v16) + 1) >> v16;
  if (v23 > 0xFFFC)
  {
    unsigned int v24 = *(_DWORD *)&a2[v15];
    unsigned int v25 = v24 - 3;
    if (v24 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
  if (v23 <= 0xFC) {
    goto LABEL_41;
  }
  unsigned int v24 = *(unsigned __int16 *)&a2[v15];
  unsigned int v25 = v24 - 3;
  if (v24 < 3) {
    goto LABEL_59;
  }
LABEL_46:
  if (v15 <= 3) {
    uint64_t v26 = v15;
  }
  else {
    uint64_t v26 = 4;
  }
  switch(v26)
  {
    case 1:
      int v27 = *a2;
      if (v15 < 4) {
        goto LABEL_57;
      }
      goto LABEL_58;
    case 2:
      int v27 = *(unsigned __int16 *)a2;
      if (v15 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 3:
      int v27 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v15 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 4:
      int v27 = *(_DWORD *)a2;
      if (v15 < 4) {
LABEL_57:
      }
        v27 |= v25 << v16;
LABEL_58:
      unsigned int v24 = v27 + 3;
      break;
    default:
      break;
  }
LABEL_59:
  switch(v24)
  {
    case 2u:
      *a1 = *(id *)a2;
      uint64_t v30 = (void *)*((void *)a2 + 1);
      swift_retain();
      id v31 = v30;
      a1[1] = v30;
      if (v15 <= 3)
      {
        unsigned int v32 = ((1 << v16) + 1) >> v16;
        if (v32 > 0xFFFC)
        {
          int v34 = 2;
          goto LABEL_85;
        }
        if (v32 > 0xFC)
        {
          LOWORD(v34) = 2;
          goto LABEL_88;
        }
      }
      char v33 = 2;
LABEL_73:
      *((unsigned char *)a1 + v15) = v33;
LABEL_90:
      uint64_t v7 = v50;
      goto LABEL_91;
    case 1u:
      *a1 = *(id *)a2;
      a1[1] = (id)*((void *)a2 + 1);
      a1[2] = (id)*((void *)a2 + 2);
      a1[3] = (id)*((void *)a2 + 3);
      a1[4] = (id)*((void *)a2 + 4);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v15 > 3)
      {
LABEL_72:
        char v33 = 1;
        goto LABEL_73;
      }
      int v34 = 1;
      unsigned int v35 = ((1 << v16) + 1) >> v16;
      if (v35 <= 0xFFFC)
      {
        if (v35 <= 0xFC) {
          goto LABEL_72;
        }
LABEL_88:
        *(_WORD *)((char *)a1 + v15) = v34;
        goto LABEL_90;
      }
LABEL_85:
      *(_DWORD *)((char *)a1 + v15) = v34;
      goto LABEL_90;
    case 0u:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v50 + 16))(a1, a2, v6);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v52 + 16))(((unint64_t)a1 + v49) & v47, (unint64_t)&a2[v49] & v47, v53);
      unsigned int v28 = (void *)(((((unint64_t)a1 + v49) & v47) + v51 + v12) & v48);
      char v29 = (const void *)((((unint64_t)&a2[v49] & v47) + v51 + v12) & v48);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v29, 1, v54))
      {
        memcpy(v28, v29, __n);
        if (v15 > 3) {
          goto LABEL_83;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v28, v29, v54);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v28, 0, 1, v54);
        if (v15 > 3)
        {
LABEL_83:
          *((unsigned char *)a1 + v15) = 0;
          goto LABEL_90;
        }
      }
      unsigned int v38 = ((1 << v16) + 1) >> v16;
      if (v38 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v15) = 0;
        goto LABEL_90;
      }
      if (v38 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v15) = 0;
        goto LABEL_90;
      }
      goto LABEL_83;
  }
  if (v15 > 3) {
    goto LABEL_78;
  }
  unsigned int v36 = ((1 << v16) + 1) >> v16;
  uint64_t v37 = 2;
  if (v36 > 0xFFFC) {
    uint64_t v37 = 4;
  }
  if (v36 <= 0xFC) {
LABEL_78:
  }
    uint64_t v37 = 1;
  uint64_t v7 = v50;
  memcpy(a1, a2, v37 + v15);
LABEL_91:
  uint64_t v39 = *(void *)(a3[4] - 8);
  unint64_t v40 = (((*(void *)(v7 + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
       + *(void *)(*(void *)(a3[3] - 8) + 64)
       + *(unsigned __int8 *)(v39 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v41 = *(void *)(v39 + 64);
  if (!*(_DWORD *)(v39 + 84)) {
    ++v41;
  }
  unint64_t v42 = v41 + v40;
  if (v42 <= 0x28) {
    unint64_t v42 = 40;
  }
  if (v42 > 3) {
    goto LABEL_99;
  }
  unsigned int v43 = ((1 << (8 * v42)) + 1) >> (8 * v42);
  uint64_t v44 = 2;
  if (v43 > 0xFFFC) {
    uint64_t v44 = 4;
  }
  if (v43 <= 0xFC) {
LABEL_99:
  }
    uint64_t v44 = 1;
  *(void *)(((unint64_t)a1 + v44 + v42 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v44 + 7 + v42] & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_24E59917C(_OWORD *__dst, _OWORD *__src, void *a3)
{
  int v3 = __src;
  uint64_t v6 = a3[3];
  uint64_t v5 = a3[4];
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(*(void *)(a3[2] - 8) + 64) + v8;
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (*(void *)(v7 + 64) + v11 + (v9 & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v13 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    uint64_t v13 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  if ((unint64_t)(v13 + v12) <= 0x28) {
    uint64_t v14 = 40;
  }
  else {
    uint64_t v14 = v13 + v12;
  }
  if (v14 > 3) {
    goto LABEL_10;
  }
  unsigned int v15 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  if (v15 > 0xFFFC)
  {
    unsigned int v16 = *(_DWORD *)((char *)__src + v14);
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
    goto LABEL_15;
  }
  if (v15 > 0xFC)
  {
    unsigned int v16 = *(unsigned __int16 *)((char *)__src + v14);
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
  }
  else
  {
LABEL_10:
    unsigned int v16 = *((unsigned __int8 *)__src + v14);
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
  }
LABEL_15:
  if (v14 <= 3) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = 4;
  }
  switch(v18)
  {
    case 1:
      int v19 = *(unsigned __int8 *)__src;
      if (v14 < 4) {
        goto LABEL_26;
      }
      goto LABEL_27;
    case 2:
      int v19 = *(unsigned __int16 *)__src;
      if (v14 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 3:
      int v19 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
      if (v14 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 4:
      int v19 = *(_DWORD *)__src;
      if (v14 < 4) {
LABEL_26:
      }
        v19 |= v17 << (8 * v14);
LABEL_27:
      unsigned int v16 = v19 + 3;
      break;
    default:
      break;
  }
LABEL_28:
  switch(v16)
  {
    case 2u:
      char *__dst = *__src;
      if (v14 <= 3)
      {
        unsigned int v26 = ((1 << (8 * v14)) + 1) >> (8 * v14);
        if (v26 > 0xFFFC)
        {
          int v29 = 2;
          goto LABEL_61;
        }
        if (v26 > 0xFC)
        {
          LOWORD(v29) = 2;
          goto LABEL_64;
        }
      }
      char v27 = 2;
      goto LABEL_41;
    case 1u:
      long long v28 = __src[1];
      char *__dst = *__src;
      __dst[1] = v28;
      *((void *)__dst + 4) = *((void *)__src + 4);
      if (v14 > 3)
      {
LABEL_40:
        char v27 = 1;
LABEL_41:
        *((unsigned char *)__dst + v14) = v27;
        if (v14 <= 3) {
          goto LABEL_53;
        }
        goto LABEL_56;
      }
      int v29 = 1;
      unsigned int v26 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v26 <= 0xFFFC)
      {
        if (v26 <= 0xFC) {
          goto LABEL_40;
        }
LABEL_64:
        *(_WORD *)((char *)__dst + v14) = v29;
        goto LABEL_65;
      }
LABEL_61:
      *(_DWORD *)((char *)__dst + v14) = v29;
      goto LABEL_65;
    case 0u:
      size_t __n = v13;
      uint64_t v20 = ~v8;
      uint64_t v38 = *(void *)(v7 + 64);
      uint64_t v39 = a3[4];
      (*(void (**)(_OWORD *, _OWORD *))(*(void *)(a3[2] - 8) + 32))(__dst, __src);
      int v21 = v3;
      unint64_t v22 = ((unint64_t)__dst + v9) & v20;
      uint64_t v37 = v21;
      unint64_t v23 = ((unint64_t)v21 + v9) & v20;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v22, v23, v6);
      unsigned int v24 = (void *)((v22 + v38 + v11) & ~v11);
      unsigned int v25 = (const void *)((v23 + v38 + v11) & ~v11);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v25, 1, v39))
      {
        memcpy(v24, v25, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v24, v25, v39);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v39);
      }
      int v3 = v37;
      if (v14 > 3)
      {
LABEL_52:
        *((unsigned char *)__dst + v14) = 0;
        if (v14 <= 3) {
          goto LABEL_53;
        }
LABEL_56:
        uint64_t v33 = 1;
        goto LABEL_67;
      }
      unsigned int v26 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v26 > 0xFFFC)
      {
        *(_DWORD *)((char *)__dst + v14) = 0;
      }
      else
      {
        if (v26 <= 0xFC) {
          goto LABEL_52;
        }
        *(_WORD *)((char *)__dst + v14) = 0;
      }
LABEL_65:
      BOOL v34 = v26 > 0xFFFC;
      uint64_t v33 = 2;
      if (v34) {
        uint64_t v33 = 4;
      }
      goto LABEL_67;
  }
  if (v14 > 3) {
    goto LABEL_47;
  }
  unsigned int v30 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  uint64_t v31 = 2;
  if (v30 > 0xFFFC) {
    uint64_t v31 = 4;
  }
  if (v30 <= 0xFC) {
LABEL_47:
  }
    uint64_t v31 = 1;
  memcpy(__dst, __src, v31 + v14);
  if (v14 > 3) {
    goto LABEL_56;
  }
LABEL_53:
  unsigned int v32 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  uint64_t v33 = 2;
  if (v32 > 0xFFFC) {
    uint64_t v33 = 4;
  }
  if (v32 <= 0xFC) {
    goto LABEL_56;
  }
LABEL_67:
  *(void *)(((unint64_t)__dst + v33 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v3
                                                                                             + v33
                                                                                             + v14
                                                                                             + 7) & 0xFFFFFFFFFFFFFFF8);
  return __dst;
}

id *sub_24E599688(id *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v6 = a3[2];
  uint64_t v7 = *(void *)(v6 - 8);
  if (a1 == (id *)a2) {
    goto LABEL_91;
  }
  uint64_t v49 = *(void *)(a3[2] - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = a3[4];
  uint64_t v52 = a3[3];
  uint64_t v51 = *(void *)(v52 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v51 + 80);
  uint64_t v48 = v8 + v10;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v50 = *(void *)(v51 + 64);
  uint64_t v13 = (v50 + v12 + ((v8 + v10) & ~v10)) & ~v12;
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v14 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  else {
    uint64_t v14 = *(void *)(*(void *)(v9 - 8) + 64) + 1;
  }
  if ((unint64_t)(v14 + v13) <= 0x28) {
    uint64_t v15 = 40;
  }
  else {
    uint64_t v15 = v14 + v13;
  }
  char v16 = 8 * v15;
  if (v15 > 3) {
    goto LABEL_11;
  }
  unsigned int v17 = ((1 << v16) + 1) >> v16;
  if (v17 > 0xFFFC)
  {
    unsigned int v18 = *(_DWORD *)((char *)a1 + v15);
    unsigned int v19 = v18 - 3;
    if (v18 < 3) {
      goto LABEL_29;
    }
    goto LABEL_16;
  }
  if (v17 > 0xFC)
  {
    unsigned int v18 = *(unsigned __int16 *)((char *)a1 + v15);
    unsigned int v19 = v18 - 3;
    if (v18 < 3) {
      goto LABEL_29;
    }
  }
  else
  {
LABEL_11:
    unsigned int v18 = *((unsigned __int8 *)a1 + v15);
    unsigned int v19 = v18 - 3;
    if (v18 < 3) {
      goto LABEL_29;
    }
  }
LABEL_16:
  if (v15 <= 3) {
    uint64_t v20 = v15;
  }
  else {
    uint64_t v20 = 4;
  }
  switch(v20)
  {
    case 1:
      int v21 = *(unsigned __int8 *)a1;
      if (v15 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v21 = *(unsigned __int16 *)a1;
      if (v15 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 3:
      int v21 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      if (v15 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 4:
      int v21 = *(_DWORD *)a1;
      if (v15 < 4) {
LABEL_27:
      }
        v21 |= v19 << v16;
LABEL_28:
      unsigned int v18 = v21 + 3;
      break;
    default:
      break;
  }
LABEL_29:
  size_t __n = v14;
  uint64_t v46 = ~v10;
  uint64_t v47 = ~v12;
  uint64_t v53 = a3[4];
  switch(v18)
  {
    case 2u:
      swift_release();

      break;
    case 1u:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v15 > 3) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0u:
      (*(void (**)(id *, uint64_t))(v49 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v51 + 8))(((unint64_t)a1 + v48) & v46, v52);
      unint64_t v22 = ((((unint64_t)a1 + v48) & v46) + v50 + v12) & v47;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v22, 1, v53))
      {
        (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v22, v53);
        if (v15 > 3) {
          goto LABEL_41;
        }
        goto LABEL_39;
      }
      break;
  }
  if (v15 > 3)
  {
LABEL_41:
    unsigned int v24 = a2[v15];
    unsigned int v25 = v24 - 3;
    if (v24 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
LABEL_39:
  unsigned int v23 = ((1 << v16) + 1) >> v16;
  if (v23 > 0xFFFC)
  {
    unsigned int v24 = *(_DWORD *)&a2[v15];
    unsigned int v25 = v24 - 3;
    if (v24 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
  if (v23 <= 0xFC) {
    goto LABEL_41;
  }
  unsigned int v24 = *(unsigned __int16 *)&a2[v15];
  unsigned int v25 = v24 - 3;
  if (v24 < 3) {
    goto LABEL_59;
  }
LABEL_46:
  if (v15 <= 3) {
    uint64_t v26 = v15;
  }
  else {
    uint64_t v26 = 4;
  }
  switch(v26)
  {
    case 1:
      int v27 = *a2;
      if (v15 < 4) {
        goto LABEL_57;
      }
      goto LABEL_58;
    case 2:
      int v27 = *(unsigned __int16 *)a2;
      if (v15 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 3:
      int v27 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v15 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 4:
      int v27 = *(_DWORD *)a2;
      if (v15 < 4) {
LABEL_57:
      }
        v27 |= v25 << v16;
LABEL_58:
      unsigned int v24 = v27 + 3;
      break;
    default:
      break;
  }
LABEL_59:
  switch(v24)
  {
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (v15 <= 3)
      {
        unsigned int v30 = ((1 << v16) + 1) >> v16;
        if (v30 > 0xFFFC)
        {
          int v33 = 2;
          goto LABEL_85;
        }
        if (v30 > 0xFC)
        {
          LOWORD(v33) = 2;
          goto LABEL_88;
        }
      }
      char v31 = 2;
LABEL_73:
      *((unsigned char *)a1 + v15) = v31;
LABEL_90:
      uint64_t v7 = v49;
      goto LABEL_91;
    case 1u:
      long long v32 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v32;
      a1[4] = (id)*((void *)a2 + 4);
      if (v15 > 3)
      {
LABEL_72:
        char v31 = 1;
        goto LABEL_73;
      }
      int v33 = 1;
      unsigned int v34 = ((1 << v16) + 1) >> v16;
      if (v34 <= 0xFFFC)
      {
        if (v34 <= 0xFC) {
          goto LABEL_72;
        }
LABEL_88:
        *(_WORD *)((char *)a1 + v15) = v33;
        goto LABEL_90;
      }
LABEL_85:
      *(_DWORD *)((char *)a1 + v15) = v33;
      goto LABEL_90;
    case 0u:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v49 + 32))(a1, a2, v6);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 32))(((unint64_t)a1 + v48) & v46, (unint64_t)&a2[v48] & v46, v52);
      long long v28 = (void *)(((((unint64_t)a1 + v48) & v46) + v50 + v12) & v47);
      int v29 = (const void *)((((unint64_t)&a2[v48] & v46) + v50 + v12) & v47);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v29, 1, v53))
      {
        memcpy(v28, v29, __n);
        if (v15 > 3) {
          goto LABEL_83;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v28, v29, v53);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v28, 0, 1, v53);
        if (v15 > 3)
        {
LABEL_83:
          *((unsigned char *)a1 + v15) = 0;
          goto LABEL_90;
        }
      }
      unsigned int v37 = ((1 << v16) + 1) >> v16;
      if (v37 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v15) = 0;
        goto LABEL_90;
      }
      if (v37 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v15) = 0;
        goto LABEL_90;
      }
      goto LABEL_83;
  }
  if (v15 > 3) {
    goto LABEL_78;
  }
  unsigned int v35 = ((1 << v16) + 1) >> v16;
  uint64_t v36 = 2;
  if (v35 > 0xFFFC) {
    uint64_t v36 = 4;
  }
  if (v35 <= 0xFC) {
LABEL_78:
  }
    uint64_t v36 = 1;
  uint64_t v7 = v49;
  memcpy(a1, a2, v36 + v15);
LABEL_91:
  uint64_t v38 = *(void *)(a3[4] - 8);
  unint64_t v39 = (((*(void *)(v7 + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
       + *(void *)(*(void *)(a3[3] - 8) + 64)
       + *(unsigned __int8 *)(v38 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v40 = *(void *)(v38 + 64);
  if (!*(_DWORD *)(v38 + 84)) {
    ++v40;
  }
  unint64_t v41 = v40 + v39;
  if (v41 <= 0x28) {
    unint64_t v41 = 40;
  }
  if (v41 > 3) {
    goto LABEL_99;
  }
  unsigned int v42 = ((1 << (8 * v41)) + 1) >> (8 * v41);
  uint64_t v43 = 2;
  if (v42 > 0xFFFC) {
    uint64_t v43 = 4;
  }
  if (v42 <= 0xFC) {
LABEL_99:
  }
    uint64_t v43 = 1;
  *(void *)(((unint64_t)a1 + v43 + v41 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v43 + 7 + v41] & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24E599E34(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  unint64_t v4 = (((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
      + *(void *)(*(void *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v5;
  }
  unint64_t v6 = v5 + v4;
  if (v6 <= 0x28) {
    unint64_t v6 = 40;
  }
  char v7 = 8 * v6;
  if (v6 > 3)
  {
    int v8 = 4;
LABEL_7:
    char v9 = 8;
    goto LABEL_8;
  }
  unsigned int v11 = ((1 << v7) + 1) >> v7;
  if (v11 > 0xFFFC) {
    goto LABEL_14;
  }
  int v8 = v11 + 3;
  if (v11 <= 0xFC) {
    goto LABEL_7;
  }
  char v9 = 16;
LABEL_8:
  unsigned int v10 = (1 << v9) - v8;
  if ((v10 & 0x80000000) == 0)
  {
    if (v6 > 3) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_14:
  unsigned int v10 = 0x7FFFFFFF;
  if (v6 > 3)
  {
LABEL_18:
    uint64_t v13 = 1;
    goto LABEL_19;
  }
LABEL_15:
  unsigned int v12 = ((1 << v7) + 1) >> v7;
  uint64_t v13 = 2;
  if (v12 > 0xFFFC) {
    uint64_t v13 = 4;
  }
  if (v12 <= 0xFC) {
    goto LABEL_18;
  }
LABEL_19:
  if (!a2) {
    return 0;
  }
  if (v10 < a2)
  {
    unint64_t v14 = ((v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v15 = v14 & 0xFFFFFFF8;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = a2 - v10 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v14);
        if (!v19) {
          break;
        }
        goto LABEL_36;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v14);
        if (v19) {
          goto LABEL_36;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24E59A340);
      case 4:
        int v19 = *(_DWORD *)((char *)a1 + v14);
        if (!v19) {
          break;
        }
LABEL_36:
        int v20 = v19 - 1;
        if (v15)
        {
          int v20 = 0;
          int v21 = *(_DWORD *)a1;
        }
        else
        {
          int v21 = 0;
        }
        return v10 + (v21 | v20) + 1;
      default:
        break;
    }
  }
  if (!v10) {
    return 0;
  }
  if (v6 > 3)
  {
    int v22 = 4;
LABEL_42:
    char v23 = 8;
    goto LABEL_43;
  }
  unsigned int v28 = ((1 << v7) + 1) >> v7;
  if (v28 > 0xFFFC)
  {
LABEL_53:
    unsigned int v24 = 0x7FFFFFFF;
    if (v6 > 3) {
      goto LABEL_45;
    }
    goto LABEL_54;
  }
  int v22 = v28 + 3;
  if (v28 <= 0xFC) {
    goto LABEL_42;
  }
  char v23 = 16;
LABEL_43:
  unsigned int v24 = (1 << v23) - v22;
  if ((v24 & 0x80000000) != 0) {
    goto LABEL_53;
  }
  if (v6 > 3)
  {
LABEL_45:
    int v25 = 4;
LABEL_46:
    char v26 = 8;
    goto LABEL_47;
  }
LABEL_54:
  unsigned int v29 = ((1 << v7) + 1) >> v7;
  if (v29 > 0xFFFC)
  {
LABEL_57:
    if (v24 != 0x7FFFFFFF) {
      return 0;
    }
    goto LABEL_58;
  }
  int v25 = v29 + 3;
  if (v29 <= 0xFC) {
    goto LABEL_46;
  }
  char v26 = 16;
LABEL_47:
  int v27 = (1 << v26) - v25;
  if (v27 < 0) {
    goto LABEL_57;
  }
  if (v27 != v24) {
    return 0;
  }
LABEL_58:
  if (v6 > 3)
  {
    int v30 = 4;
LABEL_60:
    char v31 = 8;
    goto LABEL_61;
  }
  unsigned int v33 = ((1 << v7) + 1) >> v7;
  if (v33 > 0xFFFC) {
    goto LABEL_67;
  }
  int v30 = v33 + 3;
  if (v33 <= 0xFC) {
    goto LABEL_60;
  }
  char v31 = 16;
LABEL_61:
  unsigned int v32 = (1 << v31) - v30;
  if ((v32 & 0x80000000) == 0)
  {
    if (v6 > 3) {
      goto LABEL_71;
    }
    goto LABEL_68;
  }
LABEL_67:
  unsigned int v32 = 0x7FFFFFFF;
  if (v6 > 3)
  {
LABEL_71:
    uint64_t v35 = 1;
    goto LABEL_72;
  }
LABEL_68:
  unsigned int v34 = ((1 << v7) + 1) >> v7;
  uint64_t v35 = 2;
  if (v34 > 0xFFFC) {
    uint64_t v35 = 4;
  }
  if (v34 <= 0xFC) {
    goto LABEL_71;
  }
LABEL_72:
  if (!v24) {
    return 0;
  }
  unsigned int v36 = v24 - v32;
  if (v24 <= v32) {
    goto LABEL_93;
  }
  unint64_t v37 = v35 + v6;
  char v38 = 8 * (v35 + v6);
  if (v37 > 3)
  {
LABEL_75:
    int v39 = *((unsigned __int8 *)a1 + v37);
    goto LABEL_84;
  }
  unsigned int v41 = ((v36 + ~(-1 << v38)) >> v38) + 1;
  if (HIWORD(v41))
  {
    int v39 = *(_DWORD *)((char *)a1 + v37);
  }
  else
  {
    if (v41 <= 0xFF)
    {
      if (v41 < 2)
      {
LABEL_93:
        if (v32)
        {
          if (v6 <= 3)
          {
            unsigned int v51 = ((1 << v7) + 1) >> v7;
            if (v51 > 0xFFFC)
            {
              unsigned int v46 = *(_DWORD *)((char *)a1 + v6);
              unsigned int v47 = ~v46;
LABEL_103:
              unsigned int v50 = 0x7FFFFFFF;
LABEL_104:
              if (v50 > v47) {
                return -v46;
              }
              else {
                return 0;
              }
            }
            int v49 = v51 + 3;
            if (v51 > 0xFC)
            {
              int v53 = *(unsigned __int16 *)((char *)a1 + v6);
              unsigned int v46 = v53 | 0xFFFF0000;
              unsigned int v47 = v53 ^ 0xFFFF;
              char v48 = 16;
            }
            else
            {
              int v52 = *((unsigned __int8 *)a1 + v6);
              unsigned int v46 = v52 | 0xFFFFFF00;
              unsigned int v47 = v52 ^ 0xFF;
              char v48 = 8;
            }
          }
          else
          {
            int v45 = *((unsigned __int8 *)a1 + v6);
            unsigned int v46 = v45 | 0xFFFFFF00;
            unsigned int v47 = v45 ^ 0xFF;
            char v48 = 8;
            int v49 = 4;
          }
          unsigned int v50 = (1 << v48) - v49;
          if ((v50 & 0x80000000) == 0) {
            goto LABEL_104;
          }
          goto LABEL_103;
        }
        return 0;
      }
      goto LABEL_75;
    }
    int v39 = *(unsigned __int16 *)((char *)a1 + v37);
  }
LABEL_84:
  if (!v39) {
    goto LABEL_93;
  }
  int v42 = (v39 - 1) << v38;
  if (v37 > 3) {
    int v42 = 0;
  }
  if (v37)
  {
    if (v37 <= 3) {
      int v43 = v37;
    }
    else {
      int v43 = 4;
    }
    switch(v43)
    {
      case 2:
        int v44 = *a1;
        break;
      case 3:
        int v44 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v44 = *(_DWORD *)a1;
        break;
      default:
        int v44 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v44 = 0;
  }
  return v32 + (v44 | v42) + 1;
}

void sub_24E59A364(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v5 = *(void *)(a4[4] - 8);
  unint64_t v6 = (((*(void *)(*(void *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80))
      + *(void *)(*(void *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v7;
  }
  unint64_t v8 = v7 + v6;
  if (v8 <= 0x28) {
    unint64_t v8 = 40;
  }
  char v9 = 8 * v8;
  if (v8 > 3)
  {
    int v10 = 4;
LABEL_7:
    char v11 = 8;
    goto LABEL_8;
  }
  unsigned int v13 = ((1 << v9) + 1) >> v9;
  if (v13 > 0xFFFC) {
    goto LABEL_14;
  }
  int v10 = v13 + 3;
  if (v13 <= 0xFC) {
    goto LABEL_7;
  }
  char v11 = 16;
LABEL_8:
  unsigned int v12 = (1 << v11) - v10;
  if ((v12 & 0x80000000) == 0)
  {
    if (v8 > 3) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_14:
  unsigned int v12 = 0x7FFFFFFF;
  if (v8 > 3)
  {
LABEL_18:
    uint64_t v15 = 1;
    goto LABEL_19;
  }
LABEL_15:
  unsigned int v14 = ((1 << v9) + 1) >> v9;
  uint64_t v15 = 2;
  if (v14 > 0xFFFC) {
    uint64_t v15 = 4;
  }
  if (v14 <= 0xFC) {
    goto LABEL_18;
  }
LABEL_19:
  size_t v16 = ((v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v12 < a3)
  {
    if (((v8 + v15 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v17 = a3 - v12 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_32;
    }
LABEL_36:
    if (v16) {
      int v21 = 1;
    }
    else {
      int v21 = v20;
    }
    if (v16)
    {
      int v22 = ~v12 + a2;
      bzero(a1, v16);
      *(_DWORD *)a1 = v22;
    }
    switch(v19)
    {
      case 1:
LABEL_42:
        a1[v16] = v21;
        break;
      case 2:
LABEL_113:
        *(_WORD *)&a1[v16] = v21;
        break;
      case 3:
LABEL_116:
        __break(1u);
        JUMPOUT(0x24E59A934);
      case 4:
LABEL_114:
        *(_DWORD *)&a1[v16] = v21;
        break;
      default:
        return;
    }
    return;
  }
  int v19 = 0;
  int v20 = a2 - v12;
  if (a2 > v12) {
    goto LABEL_36;
  }
LABEL_32:
  switch(v19)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 3:
      goto LABEL_116;
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_44;
    default:
LABEL_44:
      if (!a2) {
        return;
      }
LABEL_45:
      if (v8 > 3)
      {
        int v23 = 4;
LABEL_47:
        char v24 = 8;
        goto LABEL_48;
      }
      unsigned int v32 = ((1 << v9) + 1) >> v9;
      if (v32 > 0xFFFC)
      {
LABEL_63:
        unsigned int v25 = 0x7FFFFFFF;
        if (v8 > 3) {
          goto LABEL_50;
        }
        goto LABEL_64;
      }
      int v23 = v32 + 3;
      if (v32 <= 0xFC) {
        goto LABEL_47;
      }
      char v24 = 16;
LABEL_48:
      unsigned int v25 = (1 << v24) - v23;
      if ((v25 & 0x80000000) != 0) {
        goto LABEL_63;
      }
      if (v8 > 3)
      {
LABEL_50:
        int v26 = 4;
LABEL_51:
        char v27 = 8;
        goto LABEL_52;
      }
LABEL_64:
      unsigned int v33 = ((1 << v9) + 1) >> v9;
      if (v33 > 0xFFFC) {
        goto LABEL_67;
      }
      int v26 = v33 + 3;
      if (v33 <= 0xFC) {
        goto LABEL_51;
      }
      char v27 = 16;
LABEL_52:
      int v28 = (1 << v27) - v26;
      if ((v28 & 0x80000000) == 0)
      {
        if (v28 == v25) {
          goto LABEL_54;
        }
        goto LABEL_68;
      }
LABEL_67:
      if (v25 == 0x7FFFFFFF)
      {
LABEL_54:
        if (v8 <= 3)
        {
          unsigned int v36 = ((1 << v9) + 1) >> v9;
          if (v36 > 0xFFFC) {
            goto LABEL_79;
          }
          int v29 = v36 + 3;
          if (v36 > 0xFC)
          {
            char v30 = 16;
LABEL_57:
            unsigned int v31 = (1 << v30) - v29;
            if ((v31 & 0x80000000) == 0)
            {
              if (v8 > 3) {
                goto LABEL_83;
              }
              goto LABEL_80;
            }
LABEL_79:
            unsigned int v31 = 0x7FFFFFFF;
            if (v8 > 3)
            {
LABEL_83:
              uint64_t v38 = 1;
LABEL_84:
              size_t v16 = v38 + v8;
              BOOL v39 = v25 >= v31;
              unsigned int v40 = v25 - v31;
              if (v40 != 0 && v39)
              {
                if (v16 <= 3)
                {
                  unsigned int v43 = ((v40 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
                  if (HIWORD(v43))
                  {
                    int v41 = 4;
                  }
                  else if (v43 >= 0x100)
                  {
                    int v41 = 2;
                  }
                  else
                  {
                    int v41 = v43 > 1;
                  }
                }
                else
                {
                  int v41 = 1;
                }
              }
              else
              {
                int v41 = 0;
              }
              if (v31 < a2)
              {
                unsigned int v42 = ~v31 + a2;
                if (v16 < 4)
                {
                  int v21 = (v42 >> (8 * v16)) + 1;
                  if (v16)
                  {
                    int v44 = v42 & ~(-1 << (8 * v16));
                    bzero(a1, v16);
                    if (v16 == 3)
                    {
                      *(_WORD *)a1 = v44;
                      a1[2] = BYTE2(v44);
                    }
                    else if (v16 == 2)
                    {
                      *(_WORD *)a1 = v44;
                    }
                    else
                    {
                      *a1 = v44;
                    }
                  }
                }
                else
                {
                  bzero(a1, v16);
                  *(_DWORD *)a1 = v42;
                  int v21 = 1;
                }
                switch(v41)
                {
                  case 1:
                    goto LABEL_42;
                  case 2:
                    goto LABEL_113;
                  case 3:
                    goto LABEL_116;
                  case 4:
                    goto LABEL_114;
                  default:
                    return;
                }
              }
              switch(v41)
              {
                case 1:
                  a1[v16] = 0;
                  goto LABEL_103;
                case 2:
                  *(_WORD *)&a1[v16] = 0;
                  goto LABEL_103;
                case 3:
                  goto LABEL_116;
                case 4:
                  *(_DWORD *)&a1[v16] = 0;
                  goto LABEL_103;
                default:
LABEL_103:
                  int v45 = -a2;
                  if (v8 > 3) {
                    goto LABEL_106;
                  }
                  unsigned int v46 = ((1 << v9) + 1) >> v9;
                  if (v46 > 0xFFFC)
                  {
                    *(_DWORD *)&a1[v8] = v45;
                  }
                  else if (v46 > 0xFC)
                  {
                    *(_WORD *)&a1[v8] = v45;
                  }
                  else
                  {
LABEL_106:
                    a1[v8] = v45;
                  }
                  break;
              }
              return;
            }
LABEL_80:
            unsigned int v37 = ((1 << v9) + 1) >> v9;
            uint64_t v38 = 2;
            if (v37 > 0xFFFC) {
              uint64_t v38 = 4;
            }
            if (v37 > 0xFC) {
              goto LABEL_84;
            }
            goto LABEL_83;
          }
        }
        else
        {
          int v29 = 4;
        }
        char v30 = 8;
        goto LABEL_57;
      }
LABEL_68:
      if (v8 > 3) {
        goto LABEL_72;
      }
      unsigned int v34 = ((1 << v9) + 1) >> v9;
      uint64_t v35 = 2;
      if (v34 > 0xFFFC) {
        uint64_t v35 = 4;
      }
      if (v34 <= 0xFC) {
LABEL_72:
      }
        uint64_t v35 = 1;
      *(void *)((unint64_t)&a1[v8 + 7 + v35] & 0xFFFFFFFFFFFFFFF8) = a2 - 1;
      return;
  }
}

uint64_t type metadata accessor for MergeStateMachine.State()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E59A99C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_24E864388();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout3();
        uint64_t v5 = &v4;
        unint64_t v6 = "(";
        uint64_t v7 = &unk_24E8676B8;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

void *sub_24E59AAD0(char *__dst, char *__src, void *a3)
{
  char v4 = __dst;
  uint64_t v5 = *(void *)(a3[2] - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = *(void *)(v9 + 64);
  uint64_t v13 = *(void *)(v8 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = (v12 + v14 + ((v6 + v10) & ~v10)) & ~v14;
  if (*(_DWORD *)(v13 + 84)) {
    uint64_t v16 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  else {
    uint64_t v16 = *(void *)(*(void *)(v8 - 8) + 64) + 1;
  }
  if ((unint64_t)(v16 + v15) <= 0x28) {
    uint64_t v17 = 40;
  }
  else {
    uint64_t v17 = v16 + v15;
  }
  if (v17 > 3) {
    goto LABEL_11;
  }
  unsigned int v18 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  uint64_t v19 = 2;
  if (v18 > 0xFFFC) {
    uint64_t v19 = 4;
  }
  if (v18 <= 0xFC) {
LABEL_11:
  }
    uint64_t v19 = 1;
  unint64_t v20 = v19 + v17;
  int v21 = *(_DWORD *)(v9 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v13 + 80);
  if (v20 > 0x18 || (v21 & 0x1000F8) != 0)
  {
    uint64_t v23 = *(void *)__src;
    *char v4 = *(void *)__src;
    char v4 = (void *)(v23 + (((v21 & 0xF8 | 7u) + 16) & ~(unint64_t)(v21 & 0xF8 | 7u)));
    swift_retain();
    return v4;
  }
  if (v17 > 3) {
    goto LABEL_21;
  }
  unsigned int v25 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  if (v25 > 0xFFFC)
  {
    unsigned int v26 = *(_DWORD *)&__src[v17];
    unsigned int v27 = v26 - 3;
    if (v26 < 3) {
      goto LABEL_39;
    }
    goto LABEL_26;
  }
  if (v25 > 0xFC)
  {
    unsigned int v26 = *(unsigned __int16 *)&__src[v17];
    unsigned int v27 = v26 - 3;
    if (v26 < 3) {
      goto LABEL_39;
    }
  }
  else
  {
LABEL_21:
    unsigned int v26 = __src[v17];
    unsigned int v27 = v26 - 3;
    if (v26 < 3) {
      goto LABEL_39;
    }
  }
LABEL_26:
  if (v17 <= 3) {
    uint64_t v28 = v17;
  }
  else {
    uint64_t v28 = 4;
  }
  switch(v28)
  {
    case 1:
      int v29 = *__src;
      if (v17 < 4) {
        goto LABEL_37;
      }
      goto LABEL_38;
    case 2:
      int v29 = *(unsigned __int16 *)__src;
      if (v17 >= 4) {
        goto LABEL_38;
      }
      goto LABEL_37;
    case 3:
      int v29 = *(unsigned __int16 *)__src | (__src[2] << 16);
      if (v17 >= 4) {
        goto LABEL_38;
      }
      goto LABEL_37;
    case 4:
      int v29 = *(_DWORD *)__src;
      if (v17 < 4) {
LABEL_37:
      }
        v29 |= v27 << (8 * v17);
LABEL_38:
      unsigned int v26 = v29 + 3;
      break;
    default:
      break;
  }
LABEL_39:
  switch(v26)
  {
    case 2u:
      unsigned int v34 = (void *)*((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      swift_retain();
      id v35 = v34;
      v4[1] = v34;
      if (v17 <= 3)
      {
        unsigned int v36 = ((1 << (8 * v17)) + 1) >> (8 * v17);
        if (v36 > 0xFFFC)
        {
          int v38 = 2;
          goto LABEL_64;
        }
        if (v36 > 0xFC)
        {
          LOWORD(v38) = 2;
          goto LABEL_67;
        }
      }
      *((unsigned char *)v4 + v17) = 2;
      return v4;
    case 1u:
      uint64_t v37 = *((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      *((void *)__dst + 1) = v37;
      *((void *)__dst + 2) = *((void *)__src + 2);
      *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v17 > 3)
      {
LABEL_52:
        *((unsigned char *)v4 + v17) = 1;
        return v4;
      }
      int v38 = 1;
      unsigned int v39 = ((1 << (8 * v17)) + 1) >> (8 * v17);
      if (v39 <= 0xFFFC)
      {
        if (v39 <= 0xFC) {
          goto LABEL_52;
        }
LABEL_67:
        *(_WORD *)((char *)v4 + v17) = v38;
        return v4;
      }
LABEL_64:
      *(_DWORD *)((char *)v4 + v17) = v38;
      return v4;
    case 0u:
      size_t __n = v16;
      uint64_t v44 = ~v10;
      (*(void (**)(char *, char *))(v5 + 16))(__dst, __src);
      uint64_t v45 = v8;
      unint64_t v30 = ((unint64_t)v4 + v11) & v44;
      unint64_t v31 = (unint64_t)&__src[v11] & v44;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v30, v31, v7);
      unsigned int v32 = (void *)((v30 + v12 + v14) & ~v14);
      unsigned int v33 = (const void *)((v31 + v12 + v14) & ~v14);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v33, 1, v45))
      {
        memcpy(v32, v33, __n);
        if (v17 > 3) {
          goto LABEL_62;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v32, v33, v45);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0, 1, v45);
        if (v17 > 3)
        {
LABEL_62:
          *((unsigned char *)v4 + v17) = 0;
          return v4;
        }
      }
      unsigned int v42 = ((1 << (8 * v17)) + 1) >> (8 * v17);
      if (v42 > 0xFFFC)
      {
        *(_DWORD *)((char *)v4 + v17) = 0;
        return v4;
      }
      if (v42 > 0xFC)
      {
        *(_WORD *)((char *)v4 + v17) = 0;
        return v4;
      }
      goto LABEL_62;
  }
  if (v17 > 3) {
    goto LABEL_57;
  }
  unsigned int v40 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  uint64_t v41 = 2;
  if (v40 > 0xFFFC) {
    uint64_t v41 = 4;
  }
  if (v40 <= 0xFC) {
LABEL_57:
  }
    uint64_t v41 = 1;
  memcpy(__dst, __src, v41 + v17);
  return v4;
}

void sub_24E59B018(unsigned __int8 *a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v3 = a2[4];
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(*(void *)(a2[2] - 8) + 64) + v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = *(void *)(v3 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v11;
  }
  unint64_t v12 = v11 + ((v8 + v10 + (v7 & ~v6)) & ~v10);
  if (v12 <= 0x28) {
    unint64_t v12 = 40;
  }
  if (v12 > 3) {
    goto LABEL_6;
  }
  unsigned int v14 = ((1 << (8 * v12)) + 1) >> (8 * v12);
  if (v14 > 0xFFFC)
  {
    unsigned int v13 = *(_DWORD *)&a1[v12];
  }
  else
  {
    if (v14 <= 0xFC)
    {
LABEL_6:
      unsigned int v13 = a1[v12];
      goto LABEL_11;
    }
    unsigned int v13 = *(unsigned __int16 *)&a1[v12];
  }
LABEL_11:
  unsigned int v15 = v13 - 3;
  if (v13 >= 3)
  {
    if (v12 <= 3) {
      uint64_t v16 = v12;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a1;
        goto LABEL_20;
      case 2:
        int v17 = *(unsigned __int16 *)a1;
        goto LABEL_20;
      case 3:
        int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_20;
      case 4:
        int v17 = *(_DWORD *)a1;
LABEL_20:
        int v18 = (v17 | (v15 << (8 * v12))) + 3;
        unsigned int v13 = v17 + 3;
        if (v12 < 4) {
          unsigned int v13 = v18;
        }
        break;
      default:
        break;
    }
  }
  switch(v13)
  {
    case 2u:
      swift_release();
      int v22 = (void *)*((void *)a1 + 1);

      break;
    case 1u:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      break;
    case 0u:
      uint64_t v19 = ~v6;
      uint64_t v24 = *(void *)(v3 - 8);
      (*(void (**)(unsigned __int8 *))(*(void *)(a2[2] - 8) + 8))(a1);
      unint64_t v20 = (unint64_t)&a1[v7] & v19;
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v20, v4);
      unint64_t v21 = (v20 + v8 + v10) & ~v10;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v24 + 48))(v21, 1, v3))
      {
        uint64_t v23 = *(void (**)(unint64_t, uint64_t))(v24 + 8);
        v23(v21, v3);
      }
      break;
  }
}

char *sub_24E59B388(char *__dst, char *__src, void *a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a3[3];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(*(void *)(a3[2] - 8) + 64) + v7;
  uint64_t v9 = a3[4] - 8;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)v9 + 80);
  uint64_t v12 = (*(void *)(v6 + 64) + v11 + (v8 & ~v7)) & ~v11;
  if (*(_DWORD *)(*(void *)v9 + 84)) {
    uint64_t v13 = *(void *)(*(void *)v9 + 64);
  }
  else {
    uint64_t v13 = *(void *)(*(void *)v9 + 64) + 1;
  }
  if ((unint64_t)(v13 + v12) <= 0x28) {
    uint64_t v14 = 40;
  }
  else {
    uint64_t v14 = v13 + v12;
  }
  if (v14 > 3) {
    goto LABEL_10;
  }
  unsigned int v15 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  if (v15 > 0xFFFC)
  {
    unsigned int v16 = *(_DWORD *)&__src[v14];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
    goto LABEL_15;
  }
  if (v15 > 0xFC)
  {
    unsigned int v16 = *(unsigned __int16 *)&__src[v14];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
  }
  else
  {
LABEL_10:
    unsigned int v16 = __src[v14];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_28;
    }
  }
LABEL_15:
  if (v14 <= 3) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = 4;
  }
  switch(v18)
  {
    case 1:
      int v19 = *__src;
      if (v14 < 4) {
        goto LABEL_26;
      }
      goto LABEL_27;
    case 2:
      int v19 = *(unsigned __int16 *)__src;
      if (v14 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 3:
      int v19 = *(unsigned __int16 *)__src | (__src[2] << 16);
      if (v14 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 4:
      int v19 = *(_DWORD *)__src;
      if (v14 < 4) {
LABEL_26:
      }
        v19 |= v17 << (8 * v14);
LABEL_27:
      unsigned int v16 = v19 + 3;
      break;
    default:
      break;
  }
LABEL_28:
  if (v16 == 2)
  {
    unsigned int v25 = (void *)*((void *)__src + 1);
    *(void *)__dst = *(void *)__src;
    swift_retain();
    id v26 = v25;
    *((void *)v4 + 1) = v25;
    if (v14 <= 3)
    {
      unsigned int v27 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v27 > 0xFFFC)
      {
        int v29 = 2;
        goto LABEL_54;
      }
      if (v27 > 0xFC)
      {
        LOWORD(v29) = 2;
        goto LABEL_57;
      }
    }
    v4[v14] = 2;
    return v4;
  }
  if (v16 == 1)
  {
    uint64_t v28 = *((void *)__src + 1);
    *(void *)__dst = *(void *)__src;
    *((void *)__dst + 1) = v28;
    *((void *)__dst + 2) = *((void *)__src + 2);
    *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v14 > 3)
    {
LABEL_40:
      v4[v14] = 1;
      return v4;
    }
    int v29 = 1;
    unsigned int v30 = ((1 << (8 * v14)) + 1) >> (8 * v14);
    if (v30 <= 0xFFFC)
    {
      if (v30 <= 0xFC) {
        goto LABEL_40;
      }
LABEL_57:
      *(_WORD *)&v4[v14] = v29;
      return v4;
    }
LABEL_54:
    *(_DWORD *)&v4[v14] = v29;
    return v4;
  }
  if (v16)
  {
    if (v14 > 3) {
      goto LABEL_45;
    }
    unsigned int v31 = ((1 << (8 * v14)) + 1) >> (8 * v14);
    uint64_t v32 = 2;
    if (v31 > 0xFFFC) {
      uint64_t v32 = 4;
    }
    if (v31 <= 0xFC) {
LABEL_45:
    }
      uint64_t v32 = 1;
    memcpy(__dst, __src, v32 + v14);
  }
  else
  {
    size_t __n = v13;
    uint64_t v20 = ~v7;
    uint64_t v37 = *(void *)(v6 + 64);
    uint64_t v38 = a3[4];
    (*(void (**)(char *, char *))(*(void *)(a3[2] - 8) + 16))(__dst, __src);
    unsigned int v36 = v4;
    unint64_t v21 = (unint64_t)&v4[v8] & v20;
    unint64_t v22 = (unint64_t)&__src[v8] & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v21, v22, v5);
    uint64_t v23 = (void *)((v21 + v37 + v11) & ~v11);
    uint64_t v24 = (const void *)((v22 + v37 + v11) & ~v11);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v24, 1, v38))
    {
      memcpy(v23, v24, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v23, v24, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v38);
    }
    uint64_t v4 = v36;
    if (v14 > 3) {
      goto LABEL_49;
    }
    unsigned int v33 = ((1 << (8 * v14)) + 1) >> (8 * v14);
    if (v33 > 0xFFFC)
    {
      *(_DWORD *)&v36[v14] = 0;
      return v4;
    }
    if (v33 <= 0xFC) {
LABEL_49:
    }
      v36[v14] = 0;
    else {
      *(_WORD *)&v36[v14] = 0;
    }
  }
  return v4;
}

id *sub_24E59B844(id *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == (id *)a2) {
    return a1;
  }
  uint64_t v5 = a3[2];
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v42 + 64);
  uint64_t v44 = a3[3];
  uint64_t v7 = *(void *)(v44 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 + v8;
  uint64_t v10 = *(void *)(a3[4] - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v43 = *(void *)(v7 + 64);
  uint64_t v12 = (v43 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v13 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v10 + 64) + 1;
  }
  if ((unint64_t)(v13 + v12) <= 0x28) {
    uint64_t v14 = 40;
  }
  else {
    uint64_t v14 = v13 + v12;
  }
  char v15 = 8 * v14;
  if (v14 > 3) {
    goto LABEL_11;
  }
  unsigned int v16 = ((1 << v15) + 1) >> v15;
  if (v16 > 0xFFFC)
  {
    unsigned int v17 = *(_DWORD *)((char *)a1 + v14);
    unsigned int v18 = v17 - 3;
    if (v17 < 3) {
      goto LABEL_29;
    }
    goto LABEL_16;
  }
  if (v16 > 0xFC)
  {
    unsigned int v17 = *(unsigned __int16 *)((char *)a1 + v14);
    unsigned int v18 = v17 - 3;
    if (v17 < 3) {
      goto LABEL_29;
    }
  }
  else
  {
LABEL_11:
    unsigned int v17 = *((unsigned __int8 *)a1 + v14);
    unsigned int v18 = v17 - 3;
    if (v17 < 3) {
      goto LABEL_29;
    }
  }
LABEL_16:
  if (v14 <= 3) {
    uint64_t v19 = v14;
  }
  else {
    uint64_t v19 = 4;
  }
  switch(v19)
  {
    case 1:
      int v20 = *(unsigned __int8 *)a1;
      if (v14 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v20 = *(unsigned __int16 *)a1;
      if (v14 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 3:
      int v20 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      if (v14 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 4:
      int v20 = *(_DWORD *)a1;
      if (v14 < 4) {
LABEL_27:
      }
        v20 |= v18 << v15;
LABEL_28:
      unsigned int v17 = v20 + 3;
      break;
    default:
      break;
  }
LABEL_29:
  size_t __n = v13;
  uint64_t v40 = ~v8;
  uint64_t v41 = ~v11;
  uint64_t v45 = a3[4];
  switch(v17)
  {
    case 2u:
      swift_release();

      break;
    case 1u:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v14 > 3) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0u:
      (*(void (**)(id *, uint64_t))(v42 + 8))(a1, v5);
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)a1 + v9) & v40, v44);
      unint64_t v21 = ((((unint64_t)a1 + v9) & v40) + v43 + v11) & v41;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v21, 1, v45))
      {
        (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v21, v45);
        if (v14 > 3) {
          goto LABEL_41;
        }
        goto LABEL_39;
      }
      break;
  }
  if (v14 > 3)
  {
LABEL_41:
    unsigned int v23 = a2[v14];
    unsigned int v24 = v23 - 3;
    if (v23 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
LABEL_39:
  unsigned int v22 = ((1 << v15) + 1) >> v15;
  if (v22 > 0xFFFC)
  {
    unsigned int v23 = *(_DWORD *)&a2[v14];
    unsigned int v24 = v23 - 3;
    if (v23 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
  if (v22 <= 0xFC) {
    goto LABEL_41;
  }
  unsigned int v23 = *(unsigned __int16 *)&a2[v14];
  unsigned int v24 = v23 - 3;
  if (v23 < 3) {
    goto LABEL_59;
  }
LABEL_46:
  if (v14 <= 3) {
    uint64_t v25 = v14;
  }
  else {
    uint64_t v25 = 4;
  }
  switch(v25)
  {
    case 1:
      int v26 = *a2;
      if (v14 < 4) {
        goto LABEL_57;
      }
      goto LABEL_58;
    case 2:
      int v26 = *(unsigned __int16 *)a2;
      if (v14 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 3:
      int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v14 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 4:
      int v26 = *(_DWORD *)a2;
      if (v14 < 4) {
LABEL_57:
      }
        v26 |= v24 << v15;
LABEL_58:
      unsigned int v23 = v26 + 3;
      break;
    default:
      break;
  }
LABEL_59:
  switch(v23)
  {
    case 2u:
      *a1 = *(id *)a2;
      unsigned int v30 = (void *)*((void *)a2 + 1);
      swift_retain();
      id v31 = v30;
      a1[1] = v30;
      if (v14 <= 3)
      {
        unsigned int v32 = ((1 << v15) + 1) >> v15;
        if (v32 > 0xFFFC)
        {
          int v33 = 2;
          goto LABEL_84;
        }
        if (v32 > 0xFC)
        {
          LOWORD(v33) = 2;
          goto LABEL_87;
        }
      }
      *((unsigned char *)a1 + v14) = 2;
      return a1;
    case 1u:
      *a1 = *(id *)a2;
      a1[1] = (id)*((void *)a2 + 1);
      a1[2] = (id)*((void *)a2 + 2);
      a1[3] = (id)*((void *)a2 + 3);
      a1[4] = (id)*((void *)a2 + 4);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v14 > 3)
      {
LABEL_72:
        *((unsigned char *)a1 + v14) = 1;
        return a1;
      }
      int v33 = 1;
      unsigned int v34 = ((1 << v15) + 1) >> v15;
      if (v34 <= 0xFFFC)
      {
        if (v34 <= 0xFC) {
          goto LABEL_72;
        }
LABEL_87:
        *(_WORD *)((char *)a1 + v14) = v33;
        return a1;
      }
LABEL_84:
      *(_DWORD *)((char *)a1 + v14) = v33;
      return a1;
    case 0u:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v42 + 16))(a1, a2, v5);
      unint64_t v27 = (unint64_t)&a2[v9] & v40;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)a1 + v9) & v40, v27, v44);
      uint64_t v28 = (void *)(((((unint64_t)a1 + v9) & v40) + v43 + v11) & v41);
      int v29 = (const void *)((v27 + v43 + v11) & v41);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v29, 1, v45))
      {
        memcpy(v28, v29, __n);
        if (v14 > 3) {
          goto LABEL_82;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v28, v29, v45);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v45);
        if (v14 > 3)
        {
LABEL_82:
          *((unsigned char *)a1 + v14) = 0;
          return a1;
        }
      }
      unsigned int v37 = ((1 << v15) + 1) >> v15;
      if (v37 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v14) = 0;
        return a1;
      }
      if (v37 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v14) = 0;
        return a1;
      }
      goto LABEL_82;
  }
  if (v14 > 3) {
    goto LABEL_77;
  }
  unsigned int v35 = ((1 << v15) + 1) >> v15;
  uint64_t v36 = 2;
  if (v35 > 0xFFFC) {
    uint64_t v36 = 4;
  }
  if (v35 <= 0xFC) {
LABEL_77:
  }
    uint64_t v36 = 1;
  memcpy(a1, a2, v36 + v14);
  return a1;
}

char *sub_24E59BEF0(char *__dst, _OWORD *__src, void *a3)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a3[3];
  uint64_t v5 = a3[4];
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(*(void *)(a3[2] - 8) + 64) + v8;
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (*(void *)(v7 + 64) + v11 + (v9 & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v13 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    uint64_t v13 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  if ((unint64_t)(v13 + v12) <= 0x28) {
    uint64_t v14 = 40;
  }
  else {
    uint64_t v14 = v13 + v12;
  }
  if (v14 > 3) {
    goto LABEL_10;
  }
  unsigned int v15 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  if (v15 > 0xFFFC)
  {
    unsigned int v16 = *(_DWORD *)((char *)__src + v14);
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_25;
    }
    goto LABEL_15;
  }
  if (v15 > 0xFC)
  {
    unsigned int v16 = *(unsigned __int16 *)((char *)__src + v14);
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_25;
    }
  }
  else
  {
LABEL_10:
    unsigned int v16 = *((unsigned __int8 *)__src + v14);
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_25;
    }
  }
LABEL_15:
  if (v14 <= 3) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = 4;
  }
  switch(v18)
  {
    case 1:
      int v19 = *(unsigned __int8 *)__src;
      goto LABEL_23;
    case 2:
      int v19 = *(unsigned __int16 *)__src;
      goto LABEL_23;
    case 3:
      int v19 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
      goto LABEL_23;
    case 4:
      int v19 = *(_DWORD *)__src;
LABEL_23:
      int v20 = (v19 | (v17 << (8 * v14))) + 3;
      unsigned int v16 = v19 + 3;
      if (v14 < 4) {
        unsigned int v16 = v20;
      }
      break;
    default:
      break;
  }
LABEL_25:
  if (v16 == 2)
  {
    *(_OWORD *)__dst = *__src;
    if (v14 <= 3)
    {
      unsigned int v26 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v26 > 0xFFFC)
      {
        int v28 = 2;
        goto LABEL_51;
      }
      if (v26 > 0xFC)
      {
        LOWORD(v28) = 2;
        goto LABEL_54;
      }
    }
    __dst[v14] = 2;
    return v4;
  }
  if (v16 == 1)
  {
    long long v27 = __src[1];
    *(_OWORD *)__dst = *__src;
    *((_OWORD *)__dst + 1) = v27;
    *((void *)__dst + 4) = *((void *)__src + 4);
    if (v14 > 3)
    {
LABEL_37:
      __dst[v14] = 1;
      return v4;
    }
    int v28 = 1;
    unsigned int v29 = ((1 << (8 * v14)) + 1) >> (8 * v14);
    if (v29 <= 0xFFFC)
    {
      if (v29 <= 0xFC) {
        goto LABEL_37;
      }
LABEL_54:
      *(_WORD *)&__dst[v14] = v28;
      return v4;
    }
LABEL_51:
    *(_DWORD *)&__dst[v14] = v28;
    return v4;
  }
  if (v16)
  {
    if (v14 > 3) {
      goto LABEL_42;
    }
    unsigned int v30 = ((1 << (8 * v14)) + 1) >> (8 * v14);
    uint64_t v31 = 2;
    if (v30 > 0xFFFC) {
      uint64_t v31 = 4;
    }
    if (v30 <= 0xFC) {
LABEL_42:
    }
      uint64_t v31 = 1;
    memcpy(__dst, __src, v31 + v14);
  }
  else
  {
    size_t __n = v13;
    uint64_t v36 = *(void *)(v7 + 64);
    uint64_t v37 = a3[4];
    uint64_t v21 = ~v8;
    (*(void (**)(char *, _OWORD *))(*(void *)(a3[2] - 8) + 32))(__dst, __src);
    unsigned int v35 = v4;
    unint64_t v22 = (unint64_t)&v4[v9] & v21;
    unint64_t v23 = ((unint64_t)__src + v9) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v22, v23, v6);
    unsigned int v24 = (void *)((v22 + v36 + v11) & ~v11);
    uint64_t v25 = (const void *)((v23 + v36 + v11) & ~v11);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v25, 1, v37))
    {
      memcpy(v24, v25, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v24, v25, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v37);
    }
    uint64_t v4 = v35;
    if (v14 > 3) {
      goto LABEL_46;
    }
    unsigned int v32 = ((1 << (8 * v14)) + 1) >> (8 * v14);
    if (v32 > 0xFFFC)
    {
      *(_DWORD *)&v35[v14] = 0;
      return v4;
    }
    if (v32 <= 0xFC) {
LABEL_46:
    }
      v35[v14] = 0;
    else {
      *(_WORD *)&v35[v14] = 0;
    }
  }
  return v4;
}

id *sub_24E59C36C(id *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == (id *)a2) {
    return a1;
  }
  uint64_t v5 = a3[2];
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v41 + 64);
  uint64_t v43 = a3[3];
  uint64_t v7 = *(void *)(v43 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 + v8;
  uint64_t v10 = *(void *)(a3[4] - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v42 = *(void *)(v7 + 64);
  uint64_t v12 = (v42 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v13 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v10 + 64) + 1;
  }
  if ((unint64_t)(v13 + v12) <= 0x28) {
    uint64_t v14 = 40;
  }
  else {
    uint64_t v14 = v13 + v12;
  }
  char v15 = 8 * v14;
  if (v14 > 3) {
    goto LABEL_11;
  }
  unsigned int v16 = ((1 << v15) + 1) >> v15;
  if (v16 > 0xFFFC)
  {
    unsigned int v17 = *(_DWORD *)((char *)a1 + v14);
    unsigned int v18 = v17 - 3;
    if (v17 < 3) {
      goto LABEL_29;
    }
    goto LABEL_16;
  }
  if (v16 > 0xFC)
  {
    unsigned int v17 = *(unsigned __int16 *)((char *)a1 + v14);
    unsigned int v18 = v17 - 3;
    if (v17 < 3) {
      goto LABEL_29;
    }
  }
  else
  {
LABEL_11:
    unsigned int v17 = *((unsigned __int8 *)a1 + v14);
    unsigned int v18 = v17 - 3;
    if (v17 < 3) {
      goto LABEL_29;
    }
  }
LABEL_16:
  if (v14 <= 3) {
    uint64_t v19 = v14;
  }
  else {
    uint64_t v19 = 4;
  }
  switch(v19)
  {
    case 1:
      int v20 = *(unsigned __int8 *)a1;
      if (v14 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v20 = *(unsigned __int16 *)a1;
      if (v14 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 3:
      int v20 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      if (v14 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 4:
      int v20 = *(_DWORD *)a1;
      if (v14 < 4) {
LABEL_27:
      }
        v20 |= v18 << v15;
LABEL_28:
      unsigned int v17 = v20 + 3;
      break;
    default:
      break;
  }
LABEL_29:
  size_t __n = v13;
  uint64_t v39 = ~v8;
  uint64_t v40 = ~v11;
  uint64_t v44 = a3[4];
  switch(v17)
  {
    case 2u:
      swift_release();

      break;
    case 1u:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v14 > 3) {
        goto LABEL_41;
      }
      goto LABEL_39;
    case 0u:
      (*(void (**)(id *, uint64_t))(v41 + 8))(a1, v5);
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)a1 + v9) & v39, v43);
      unint64_t v21 = ((((unint64_t)a1 + v9) & v39) + v42 + v11) & v40;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v21, 1, v44))
      {
        (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v21, v44);
        if (v14 > 3) {
          goto LABEL_41;
        }
        goto LABEL_39;
      }
      break;
  }
  if (v14 > 3)
  {
LABEL_41:
    unsigned int v23 = a2[v14];
    unsigned int v24 = v23 - 3;
    if (v23 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
LABEL_39:
  unsigned int v22 = ((1 << v15) + 1) >> v15;
  if (v22 > 0xFFFC)
  {
    unsigned int v23 = *(_DWORD *)&a2[v14];
    unsigned int v24 = v23 - 3;
    if (v23 < 3) {
      goto LABEL_59;
    }
    goto LABEL_46;
  }
  if (v22 <= 0xFC) {
    goto LABEL_41;
  }
  unsigned int v23 = *(unsigned __int16 *)&a2[v14];
  unsigned int v24 = v23 - 3;
  if (v23 < 3) {
    goto LABEL_59;
  }
LABEL_46:
  if (v14 <= 3) {
    uint64_t v25 = v14;
  }
  else {
    uint64_t v25 = 4;
  }
  switch(v25)
  {
    case 1:
      int v26 = *a2;
      if (v14 < 4) {
        goto LABEL_57;
      }
      goto LABEL_58;
    case 2:
      int v26 = *(unsigned __int16 *)a2;
      if (v14 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 3:
      int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v14 >= 4) {
        goto LABEL_58;
      }
      goto LABEL_57;
    case 4:
      int v26 = *(_DWORD *)a2;
      if (v14 < 4) {
LABEL_57:
      }
        v26 |= v24 << v15;
LABEL_58:
      unsigned int v23 = v26 + 3;
      break;
    default:
      break;
  }
LABEL_59:
  switch(v23)
  {
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (v14 <= 3)
      {
        unsigned int v30 = ((1 << v15) + 1) >> v15;
        if (v30 > 0xFFFC)
        {
          int v32 = 2;
          goto LABEL_84;
        }
        if (v30 > 0xFC)
        {
          LOWORD(v32) = 2;
          goto LABEL_87;
        }
      }
      *((unsigned char *)a1 + v14) = 2;
      return a1;
    case 1u:
      long long v31 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v31;
      a1[4] = (id)*((void *)a2 + 4);
      if (v14 > 3)
      {
LABEL_72:
        *((unsigned char *)a1 + v14) = 1;
        return a1;
      }
      int v32 = 1;
      unsigned int v33 = ((1 << v15) + 1) >> v15;
      if (v33 <= 0xFFFC)
      {
        if (v33 <= 0xFC) {
          goto LABEL_72;
        }
LABEL_87:
        *(_WORD *)((char *)a1 + v14) = v32;
        return a1;
      }
LABEL_84:
      *(_DWORD *)((char *)a1 + v14) = v32;
      return a1;
    case 0u:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v41 + 32))(a1, a2, v5);
      unint64_t v27 = (unint64_t)&a2[v9] & v39;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(((unint64_t)a1 + v9) & v39, v27, v43);
      int v28 = (void *)(((((unint64_t)a1 + v9) & v39) + v42 + v11) & v40);
      unsigned int v29 = (const void *)((v27 + v42 + v11) & v40);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v29, 1, v44))
      {
        memcpy(v28, v29, __n);
        if (v14 > 3) {
          goto LABEL_82;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v28, v29, v44);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v44);
        if (v14 > 3)
        {
LABEL_82:
          *((unsigned char *)a1 + v14) = 0;
          return a1;
        }
      }
      unsigned int v36 = ((1 << v15) + 1) >> v15;
      if (v36 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v14) = 0;
        return a1;
      }
      if (v36 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v14) = 0;
        return a1;
      }
      goto LABEL_82;
  }
  if (v14 > 3) {
    goto LABEL_77;
  }
  unsigned int v34 = ((1 << v15) + 1) >> v15;
  uint64_t v35 = 2;
  if (v34 > 0xFFFC) {
    uint64_t v35 = 4;
  }
  if (v34 <= 0xFC) {
LABEL_77:
  }
    uint64_t v35 = 1;
  memcpy(a1, a2, v35 + v14);
  return a1;
}

uint64_t sub_24E59C9D8(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  unint64_t v4 = (((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
      + *(void *)(*(void *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v5;
  }
  unint64_t v6 = v5 + v4;
  if (v6 <= 0x28) {
    unint64_t v6 = 40;
  }
  if (v6 > 3)
  {
    int v7 = 4;
LABEL_9:
    char v9 = 8;
    goto LABEL_10;
  }
  unsigned int v8 = ((1 << (8 * v6)) + 1) >> (8 * v6);
  if (v8 > 0xFFFC) {
    goto LABEL_13;
  }
  int v7 = v8 + 3;
  if (v8 <= 0xFC) {
    goto LABEL_9;
  }
  char v9 = 16;
LABEL_10:
  unsigned int v10 = (1 << v9) - v7;
  if ((v10 & 0x80000000) == 0)
  {
    if (v6 > 3) {
      goto LABEL_17;
    }
LABEL_14:
    unsigned int v11 = ((1 << (8 * v6)) + 1) >> (8 * v6);
    uint64_t v12 = 2;
    if (v11 > 0xFFFC) {
      uint64_t v12 = 4;
    }
    if (v11 > 0xFC) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_13:
  unsigned int v10 = 0x7FFFFFFF;
  if (v6 <= 3) {
    goto LABEL_14;
  }
LABEL_17:
  uint64_t v12 = 1;
LABEL_18:
  if (!a2) {
    return 0;
  }
  if (a2 <= v10) {
    goto LABEL_37;
  }
  unint64_t v13 = v12 + v6;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v16 < 2)
    {
LABEL_37:
      if (v10)
      {
        if (v6 <= 3)
        {
          unsigned int v24 = ((1 << (8 * v6)) + 1) >> (8 * v6);
          if (v24 > 0xFFFC)
          {
            unsigned int v19 = *(_DWORD *)((char *)a1 + v6);
            unsigned int v20 = ~v19;
LABEL_47:
            unsigned int v27 = 0x7FFFFFFF;
LABEL_48:
            if (v27 > v20) {
              return -v19;
            }
            else {
              return 0;
            }
          }
          int v22 = v24 + 3;
          if (v24 > 0xFC)
          {
            int v26 = *(unsigned __int16 *)((char *)a1 + v6);
            unsigned int v19 = v26 | 0xFFFF0000;
            unsigned int v20 = v26 ^ 0xFFFF;
            char v21 = 16;
          }
          else
          {
            int v25 = *((unsigned __int8 *)a1 + v6);
            unsigned int v19 = v25 | 0xFFFFFF00;
            unsigned int v20 = v25 ^ 0xFF;
            char v21 = 8;
          }
        }
        else
        {
          int v18 = *((unsigned __int8 *)a1 + v6);
          unsigned int v19 = v18 | 0xFFFFFF00;
          unsigned int v20 = v18 ^ 0xFF;
          char v21 = 8;
          int v22 = 4;
        }
        unsigned int v27 = (1 << v21) - v22;
        if ((v27 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_47;
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_37;
  }
LABEL_29:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 > 3) {
      LODWORD(v13) = 4;
    }
    switch((int)v13)
    {
      case 2:
        LODWORD(v13) = *a1;
        break;
      case 3:
        LODWORD(v13) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v13) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v13) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v10 + (v13 | v17) + 1;
}

void sub_24E59CCE8(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v5 = *(void *)(a4[4] - 8);
  unint64_t v6 = (((*(void *)(*(void *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80))
      + *(void *)(*(void *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v7;
  }
  unint64_t v8 = v7 + v6;
  if (v8 <= 0x28) {
    unint64_t v8 = 40;
  }
  char v9 = 8 * v8;
  if (v8 > 3)
  {
    int v10 = 4;
LABEL_7:
    char v11 = 8;
    goto LABEL_8;
  }
  unsigned int v13 = ((1 << v9) + 1) >> v9;
  if (v13 > 0xFFFC) {
    goto LABEL_14;
  }
  int v10 = v13 + 3;
  if (v13 <= 0xFC) {
    goto LABEL_7;
  }
  char v11 = 16;
LABEL_8:
  unsigned int v12 = (1 << v11) - v10;
  if ((v12 & 0x80000000) == 0)
  {
    if (v8 > 3) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_14:
  unsigned int v12 = 0x7FFFFFFF;
  if (v8 > 3)
  {
LABEL_18:
    uint64_t v15 = 1;
    goto LABEL_19;
  }
LABEL_15:
  unsigned int v14 = ((1 << v9) + 1) >> v9;
  uint64_t v15 = 2;
  if (v14 > 0xFFFC) {
    uint64_t v15 = 4;
  }
  if (v14 <= 0xFC) {
    goto LABEL_18;
  }
LABEL_19:
  size_t v16 = v15 + v8;
  if (a3 <= v12)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v12 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_55;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 3:
LABEL_55:
      __break(1u);
      JUMPOUT(0x24E59D034);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_38;
    default:
LABEL_38:
      if (!a2) {
        return;
      }
LABEL_39:
      int v22 = -a2;
      if (v8 > 3) {
        goto LABEL_40;
      }
      unsigned int v23 = ((1 << v9) + 1) >> v9;
      if (v23 > 0xFFFC)
      {
        *(_DWORD *)&a1[v8] = v22;
      }
      else if (v23 <= 0xFC)
      {
LABEL_40:
        a1[v8] = v22;
      }
      else
      {
        *(_WORD *)&a1[v8] = v22;
      }
      return;
  }
}

uint64_t sub_24E59D05C(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = *(void *)(a2[4] - 8);
  unint64_t v3 = (((*(void *)(*(void *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80))
      + *(void *)(*(void *)(a2[3] - 8) + 64)
      + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  if (!*(_DWORD *)(v2 + 84)) {
    ++v4;
  }
  unint64_t v5 = v4 + v3;
  uint64_t v6 = 40;
  if (v5 > 0x28) {
    uint64_t v6 = v5;
  }
  if (v6 > 3) {
    goto LABEL_6;
  }
  unsigned int v8 = ((1 << (8 * v6)) + 1) >> (8 * v6);
  if (v8 > 0xFFFC)
  {
    uint64_t v7 = *(unsigned int *)&a1[v6];
  }
  else
  {
    if (v8 <= 0xFC)
    {
LABEL_6:
      uint64_t v7 = a1[v6];
      goto LABEL_11;
    }
    uint64_t v7 = *(unsigned __int16 *)&a1[v6];
  }
LABEL_11:
  int v9 = v7 - 3;
  if (v7 >= 3)
  {
    if (v6 <= 3) {
      uint64_t v10 = v6;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_20;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_20;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_20;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_20:
        unsigned int v12 = (v11 | (v9 << (8 * v6))) + 3;
        LODWORD(v7) = v11 + 3;
        if (v6 >= 4) {
          uint64_t v7 = v7;
        }
        else {
          uint64_t v7 = v12;
        }
        break;
      default:
        return v7;
    }
  }
  return v7;
}

void sub_24E59D200(unsigned char *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[4] - 8);
  unint64_t v6 = (((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
      + *(void *)(*(void *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v7;
  }
  unint64_t v8 = v7 + v6;
  if (v8 <= 0x28) {
    size_t v9 = 40;
  }
  else {
    size_t v9 = v8;
  }
  if (a2 > 2)
  {
    unsigned int v10 = a2 - 3;
    if (v9 < 4)
    {
      int v12 = (v10 >> (8 * v9)) + 3;
      v10 &= ~(-1 << (8 * v9));
      unsigned int v13 = (int *)&a1[v9];
      unsigned int v14 = ((1 << (8 * v9)) + 1) >> (8 * v9);
      if (v14 > 0xFFFC)
      {
        int *v13 = v12;
      }
      else if (v14 > 0xFC)
      {
        *(_WORD *)unsigned int v13 = v12;
      }
      else
      {
        *(unsigned char *)unsigned int v13 = v12;
      }
    }
    else
    {
      a1[v9] = 3;
    }
    if (v9 >= 4) {
      int v15 = 4;
    }
    else {
      int v15 = v9;
    }
    bzero(a1, v9);
    switch(v15)
    {
      case 2:
        *(_WORD *)a1 = v10;
        break;
      case 3:
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
        break;
      case 4:
        *(_DWORD *)a1 = v10;
        break;
      default:
        *a1 = v10;
        break;
    }
  }
  else
  {
    if (v9 > 3)
    {
LABEL_8:
      a1[v9] = a2;
      return;
    }
    unsigned int v11 = ((1 << (8 * v9)) + 1) >> (8 * v9);
    if (v11 > 0xFFFC)
    {
      *(_DWORD *)&a1[v9] = a2;
    }
    else
    {
      if (v11 <= 0xFC) {
        goto LABEL_8;
      }
      *(_WORD *)&a1[v9] = a2;
    }
  }
}

uint64_t sub_24E59D428(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_24E59D440(a1, a2, a3, (uint64_t (*)(uint64_t, _OWORD *))type metadata accessor for CombineLatestStateMachine.State);
}

uint64_t sub_24E59D440(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _OWORD *))
{
  long long v4 = a1[2];
  v7[0] = a1[1];
  v7[1] = v4;
  v7[2] = a1[3];
  uint64_t result = a4(319, v7);
  if (v6 <= 0x3F)
  {
    *(void *)&v7[0] = *(void *)(result - 8) + 64;
    *((void *)&v7[0] + 1) = MEMORY[0x263F8CF70] + 64;
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_24E59D4F0(char *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v138 = *(void *)(v4 - 8);
  uint64_t v5 = a3[3];
  uint64_t v6 = a3[4];
  uint64_t v105 = *(void *)(v5 - 8);
  int v135 = *(_DWORD *)(v105 + 80);
  uint64_t v101 = *(void *)(v138 + 64) + v135;
  uint64_t v114 = *(void *)(v6 - 8);
  int v132 = *(_DWORD *)(v114 + 80);
  uint64_t v102 = *(void *)(v105 + 64);
  size_t v7 = *(void *)(v114 + 64);
  if (!*(_DWORD *)(v114 + 84)) {
    ++v7;
  }
  size_t __n = v7;
  size_t v123 = v7
       + ((v102
         + *(_DWORD *)(v114 + 80)
         + (v101 & ~(unint64_t)*(_DWORD *)(v105 + 80))) & ~(unint64_t)*(_DWORD *)(v114 + 80));
  uint64_t v108 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v122 = *(void *)(AssociatedTypeWitness - 8);
  int v129 = *(_DWORD *)(v122 + 80);
  uint64_t v111 = v5;
  uint64_t v121 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v121 - 8);
  uint64_t v9 = v8;
  int v126 = *(_DWORD *)(v8 + 80);
  uint64_t v142 = v126 | 7;
  uint64_t v117 = v6;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12 | 7;
  unint64_t v14 = v126 | (unint64_t)v129 | v12;
  uint64_t v15 = v14 | 7;
  uint64_t v16 = v129 + 8;
  unint64_t v17 = v16 & ~(unint64_t)v129;
  if (*(_DWORD *)(v122 + 84)) {
    size_t v18 = *(void *)(v122 + 64);
  }
  else {
    size_t v18 = *(void *)(v122 + 64) + 1;
  }
  unint64_t v19 = v17 + 1;
  uint64_t v20 = v126 + 8;
  unint64_t v21 = v20 & ~(unint64_t)v126;
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v22 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v8 + 64) + 1;
  }
  unint64_t v23 = v21 + 1;
  uint64_t v24 = (v21 + 1 + v13 + v22 + ((v17 + 1 + v142 + v18) & ~v142)) & ~v13;
  uint64_t v25 = v12 + 8;
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v26 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  else {
    uint64_t v26 = *(void *)(*(void *)(v10 - 8) + 64) + 1;
  }
  uint64_t v27 = ((v12 + 8) & ~v12) + v26 + v24 + 1;
  unint64_t v28 = (v27 + ((v14 + 8) & ~(v14 | 7)) + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v29 = v28 + 8;
  if (v28 + 8 <= v123) {
    size_t v29 = v123;
  }
  unint64_t v30 = ((v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v30 <= v29) {
    unint64_t v30 = v29;
  }
  if (v30 <= 8) {
    uint64_t v31 = 8;
  }
  else {
    uint64_t v31 = v30;
  }
  if (v31 > 3) {
    goto LABEL_23;
  }
  unsigned int v32 = ((1 << (8 * v31)) + 1) >> (8 * v31);
  uint64_t v33 = 2;
  if (v32 > 0xFFFA) {
    uint64_t v33 = 4;
  }
  if (v32 <= 0xFA) {
LABEL_23:
  }
    uint64_t v33 = 1;
  unint64_t v34 = ((v31 + v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  int v35 = *(_DWORD *)(v138 + 80);
  unint64_t v36 = v14 | ((v132 | v135) | v35) & 0xF8 | 7u;
  BOOL v38 = v34 <= 0x18 && ((v132 | v135 | v129 | v126 | *(_DWORD *)(v11 + 80) | v35) & 0x100000) == 0 && v36 == 7;
  uint64_t v39 = a2;
  if (v38)
  {
    if (v31 > 3) {
      goto LABEL_35;
    }
    unsigned int v42 = ((1 << (8 * v31)) + 1) >> (8 * v31);
    if (v42 > 0xFFFA)
    {
      unsigned int v43 = *(_DWORD *)&a2[v31];
      unsigned int v44 = v43 - 5;
      if (v43 < 5) {
        goto LABEL_53;
      }
      goto LABEL_40;
    }
    if (v42 > 0xFA)
    {
      unsigned int v43 = *(unsigned __int16 *)&a2[v31];
      unsigned int v44 = v43 - 5;
      if (v43 < 5)
      {
LABEL_53:
        uint64_t v47 = ~v15;
        unint64_t v48 = ~(unint64_t)v129;
        uint64_t v49 = ~v142;
        uint64_t v50 = ~v12;
        switch(v43)
        {
          case 0u:
            uint64_t v41 = a1;
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v138 + 16))(a1, a2, v108);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v105 + 16))((unint64_t)&a1[v101] & ~(unint64_t)v135, (unint64_t)&a2[v101] & ~(unint64_t)v135, v111);
            unsigned int v51 = (void *)((((unint64_t)&a1[v101] & ~(unint64_t)v135)
                          + v102
                          + v132) & ~(unint64_t)v132);
            int v52 = (const void *)((((unint64_t)&a2[v101] & ~(unint64_t)v135)
                                + v102
                                + v132) & ~(unint64_t)v132);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v114 + 48))(v52, 1, v117))
            {
              memcpy(v51, v52, __n);
              if (v31 > 3)
              {
LABEL_79:
                a1[v31] = 0;
                if (v31 <= 3) {
                  goto LABEL_104;
                }
                goto LABEL_107;
              }
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v114 + 16))(v51, v52, v117);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v114 + 56))(v51, 0, 1, v117);
              if (v31 > 3) {
                goto LABEL_79;
              }
            }
            unsigned int v58 = ((1 << (8 * v31)) + 1) >> (8 * v31);
            if (v58 > 0xFFFA)
            {
              *(_DWORD *)&a1[v31] = 0;
              goto LABEL_118;
            }
            if (v58 > 0xFA)
            {
              *(_WORD *)&a1[v31] = 0;
              goto LABEL_118;
            }
            goto LABEL_79;
          case 1u:
            unint64_t v110 = ~(unint64_t)v126;
            uint64_t v113 = ~v13;
            uint64_t v116 = v50;
            unint64_t v119 = v23;
            size_t v125 = v22;
            uint64_t v128 = v25;
            size_t v131 = v26;
            uint64_t v134 = v27;
            uint64_t v137 = *(void *)(v10 - 8);
            uint64_t v140 = v10;
            *(void *)a1 = *(void *)a2;
            uint64_t v64 = (void *)((unint64_t)&a1[v15 + 8] & v47);
            uint64_t v65 = (void *)((unint64_t)&a2[v15 + 8] & v47);
            void *v64 = *v65;
            unint64_t v104 = (unint64_t)v64;
            unint64_t v107 = (unint64_t)v65;
            __dsta = (unsigned char *)(((unint64_t)v64 + v16) & v48);
            uint64_t v66 = (const void *)(((unint64_t)v65 + v16) & v48);
            uint64_t v67 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v122 + 48);
            swift_retain();
            if (v67(v66, 1, AssociatedTypeWitness))
            {
              uint64_t v68 = __dsta;
              memcpy(__dsta, v66, v18);
            }
            else
            {
              uint64_t v68 = __dsta;
              (*(void (**)(unsigned char *, const void *, uint64_t))(v122 + 16))(__dsta, v66, AssociatedTypeWitness);
              (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v122 + 56))(__dsta, 0, 1, AssociatedTypeWitness);
            }
            v68[v18] = *((unsigned char *)v66 + v18);
            unint64_t v75 = v19 + v18;
            uint64_t v76 = (void *)((v104 + v142 + v19 + v18) & v49);
            uint64_t v77 = (void *)((v107 + v142 + v75) & v49);
            *uint64_t v76 = *v77;
            uint64_t v78 = (void *)(((unint64_t)v76 + v20) & v110);
            uint64_t v79 = (const void *)(((unint64_t)v77 + v20) & v110);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v79, 1, v121))
            {
              size_t v80 = v125;
              memcpy(v78, v79, v125);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v78, v79, v121);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v78, 0, 1, v121);
              size_t v80 = v125;
            }
            *((unsigned char *)v78 + v80) = *((unsigned char *)v79 + v80);
            uint64_t v86 = (void *)(((unint64_t)v76 + v13 + v119 + v80) & v113);
            uint64_t v87 = (void *)(((unint64_t)v77 + v13 + v119 + v80) & v113);
            void *v86 = *v87;
            uint64_t v88 = (void *)(((unint64_t)v86 + v128) & v116);
            uint64_t v89 = (const void *)(((unint64_t)v87 + v128) & v116);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v137 + 48))(v89, 1, v140))
            {
              size_t v90 = v131;
              memcpy(v88, v89, v131);
              uint64_t v41 = a1;
              uint64_t v39 = a2;
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v137 + 16))(v88, v89, v140);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v137 + 56))(v88, 0, 1, v140);
              uint64_t v41 = a1;
              uint64_t v39 = a2;
              size_t v90 = v131;
            }
            *((unsigned char *)v88 + v90) = *((unsigned char *)v89 + v90);
            *(void *)(((v104 | 7) + v134) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v107 | 7) + v134) & 0xFFFFFFFFFFFFFFF8);
            swift_retain();
            if (v31 > 3) {
              goto LABEL_102;
            }
            int v93 = 1;
            unsigned int v58 = ((1 << (8 * v31)) + 1) >> (8 * v31);
            if (v58 > 0xFFFA) {
              goto LABEL_112;
            }
            if (v58 > 0xFA) {
              goto LABEL_117;
            }
LABEL_102:
            char v59 = 1;
            goto LABEL_103;
          case 2u:
            unint64_t v109 = ~(unint64_t)v126;
            uint64_t v112 = ~v13;
            uint64_t v115 = v50;
            unint64_t v118 = v23;
            size_t v124 = v22;
            uint64_t v127 = v25;
            size_t v130 = v26;
            uint64_t v133 = v27;
            uint64_t v136 = *(void *)(v10 - 8);
            uint64_t v139 = v10;
            *(void *)a1 = *(void *)a2;
            int v53 = (void *)((unint64_t)&a1[v15 + 8] & v47);
            uint64_t v54 = (void *)((unint64_t)&a2[v15 + 8] & v47);
            *int v53 = *v54;
            unint64_t v103 = (unint64_t)v53;
            unint64_t v106 = (unint64_t)v54;
            __dst = (unsigned char *)(((unint64_t)v53 + v16) & v48);
            uint64_t v55 = (const void *)(((unint64_t)v54 + v16) & v48);
            uint64_t v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v122 + 48);
            swift_retain();
            if (v56(v55, 1, AssociatedTypeWitness))
            {
              uint64_t v57 = __dst;
              memcpy(__dst, v55, v18);
            }
            else
            {
              uint64_t v57 = __dst;
              (*(void (**)(unsigned char *, const void *, uint64_t))(v122 + 16))(__dst, v55, AssociatedTypeWitness);
              (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v122 + 56))(__dst, 0, 1, AssociatedTypeWitness);
            }
            v57[v18] = *((unsigned char *)v55 + v18);
            unint64_t v69 = v19 + v18;
            uint64_t v70 = (void *)((v103 + v142 + v19 + v18) & v49);
            uint64_t v71 = (void *)((v106 + v142 + v69) & v49);
            *uint64_t v70 = *v71;
            uint64_t v72 = (void *)(((unint64_t)v70 + v20) & v109);
            uint64_t v73 = (const void *)(((unint64_t)v71 + v20) & v109);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v73, 1, v121))
            {
              size_t v74 = v124;
              memcpy(v72, v73, v124);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v72, v73, v121);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v72, 0, 1, v121);
              size_t v74 = v124;
            }
            *((unsigned char *)v72 + v74) = *((unsigned char *)v73 + v74);
            uint64_t v81 = (void *)(((unint64_t)v70 + v13 + v118 + v74) & v112);
            uint64_t v82 = (void *)(((unint64_t)v71 + v13 + v118 + v74) & v112);
            *uint64_t v81 = *v82;
            uint64_t v83 = (void *)(((unint64_t)v81 + v127) & v115);
            uint64_t v84 = (const void *)(((unint64_t)v82 + v127) & v115);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48))(v84, 1, v139))
            {
              size_t v85 = v130;
              memcpy(v83, v84, v130);
              uint64_t v41 = a1;
              uint64_t v39 = a2;
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v136 + 16))(v83, v84, v139);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v83, 0, 1, v139);
              uint64_t v41 = a1;
              uint64_t v39 = a2;
              size_t v85 = v130;
            }
            *((unsigned char *)v83 + v85) = *((unsigned char *)v84 + v85);
            uint64_t v91 = (void *)(((v103 | 7) + v133) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v92 = (void *)(((v106 | 7) + v133) & 0xFFFFFFFFFFFFFFF8);
            void *v91 = *v92;
            *(void *)(((unint64_t)v91 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v92 + 15) & 0xFFFFFFFFFFFFFFF8);
            swift_retain();
            if (v31 > 3) {
              goto LABEL_97;
            }
            unsigned int v58 = ((1 << (8 * v31)) + 1) >> (8 * v31);
            if (v58 > 0xFFFA)
            {
              int v93 = 2;
LABEL_112:
              *(_DWORD *)&v41[v31] = v93;
              goto LABEL_118;
            }
            if (v58 <= 0xFA)
            {
LABEL_97:
              char v59 = 2;
              goto LABEL_103;
            }
            LOWORD(v93) = 2;
            goto LABEL_117;
          case 3u:
            uint64_t v41 = a1;
            *(void *)a1 = *(void *)a2;
            swift_retain();
            if (v31 > 3) {
              goto LABEL_62;
            }
            unsigned int v58 = ((1 << (8 * v31)) + 1) >> (8 * v31);
            if (v58 > 0xFFFA)
            {
              *(_DWORD *)&a1[v31] = 3;
              goto LABEL_118;
            }
            if (v58 <= 0xFA)
            {
LABEL_62:
              char v59 = 3;
              goto LABEL_103;
            }
            LOWORD(v93) = 3;
            goto LABEL_117;
          case 4u:
            uint64_t v60 = *(void *)a2;
            id v61 = *(id *)a2;
            uint64_t v41 = a1;
            *(void *)a1 = v60;
            if (v31 > 3) {
              goto LABEL_66;
            }
            unsigned int v58 = ((1 << (8 * v31)) + 1) >> (8 * v31);
            if (v58 > 0xFFFA)
            {
              *(_DWORD *)&a1[v31] = 4;
            }
            else
            {
              if (v58 <= 0xFA)
              {
LABEL_66:
                char v59 = 4;
LABEL_103:
                v41[v31] = v59;
                if (v31 > 3) {
                  goto LABEL_107;
                }
LABEL_104:
                unsigned int v94 = ((1 << (8 * v31)) + 1) >> (8 * v31);
                uint64_t v95 = 2;
                if (v94 > 0xFFFA) {
                  uint64_t v95 = 4;
                }
                if (v94 <= 0xFA) {
LABEL_107:
                }
                  uint64_t v95 = 1;
LABEL_120:
                *(void *)((unint64_t)&v41[v95 + 7 + v31] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v39[v95 + 7 + v31] & 0xFFFFFFFFFFFFFFF8);
                return v41;
              }
              LOWORD(v93) = 4;
LABEL_117:
              *(_WORD *)&v41[v31] = v93;
            }
LABEL_118:
            BOOL v96 = v58 > 0xFFFA;
            uint64_t v95 = 2;
            if (v96) {
              uint64_t v95 = 4;
            }
            goto LABEL_120;
          default:
            if (v31 > 3) {
              goto LABEL_71;
            }
            unsigned int v62 = ((1 << (8 * v31)) + 1) >> (8 * v31);
            uint64_t v63 = 2;
            if (v62 > 0xFFFA) {
              uint64_t v63 = 4;
            }
            if (v62 <= 0xFA) {
LABEL_71:
            }
              uint64_t v63 = 1;
            uint64_t v41 = a1;
            memcpy(a1, a2, v63 + v31);
            if (v31 > 3) {
              goto LABEL_107;
            }
            goto LABEL_104;
        }
      }
    }
    else
    {
LABEL_35:
      unsigned int v43 = a2[v31];
      unsigned int v44 = v43 - 5;
      if (v43 < 5) {
        goto LABEL_53;
      }
    }
LABEL_40:
    if (v31 <= 3) {
      uint64_t v45 = v31;
    }
    else {
      uint64_t v45 = 4;
    }
    switch(v45)
    {
      case 1:
        int v46 = *a2;
        if (v31 < 4) {
          goto LABEL_51;
        }
        goto LABEL_52;
      case 2:
        int v46 = *(unsigned __int16 *)a2;
        if (v31 >= 4) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 3:
        int v46 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v31 >= 4) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 4:
        int v46 = *(_DWORD *)a2;
        if (v31 < 4) {
LABEL_51:
        }
          v46 |= v44 << (8 * v31);
LABEL_52:
        unsigned int v43 = v46 + 5;
        break;
      default:
        goto LABEL_53;
    }
    goto LABEL_53;
  }
  uint64_t v40 = *(char **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v41 = &v40[(v36 + 16) & ~v36];
  swift_retain();
  return v41;
}

void *sub_24E59E39C(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v107 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v107 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v113 = *(void *)(v6 - 8);
  uint64_t v98 = *(unsigned __int8 *)(v113 + 80);
  uint64_t v101 = v5 + v98;
  size_t v8 = *(void *)(v7 - 8);
  uint64_t v110 = *(void *)(v113 + 64);
  uint64_t v104 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v9 = (v110 + v104 + ((v5 + v98) & ~v98)) & ~v104;
  size_t v120 = v8;
  size_t v10 = *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v10;
  }
  size_t __n = v10;
  unint64_t v133 = v10 + v9;
  uint64_t v114 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v131 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v131;
  uint64_t v12 = *(unsigned __int8 *)(v131 + 80);
  uint64_t v117 = v6;
  uint64_t v127 = swift_getAssociatedTypeWitness();
  uint64_t v128 = *(void *)(v127 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v128 + 80);
  uint64_t v14 = v13 | 7;
  uint64_t v123 = v7;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v17 | 7;
  uint64_t v19 = v13 | v12 | v17;
  uint64_t v20 = v12;
  uint64_t v21 = v19 | 7;
  uint64_t v22 = (v19 + 8) & ~(v19 | 7);
  uint64_t v23 = v12 + 8;
  uint64_t v24 = (v12 + 8) & ~v12;
  if (*(_DWORD *)(v131 + 84)) {
    size_t v25 = *(void *)(v131 + 64);
  }
  else {
    size_t v25 = *(void *)(v131 + 64) + 1;
  }
  uint64_t v26 = v24 + 1;
  uint64_t v27 = (v24 + 1 + v14 + v25) & ~v14;
  uint64_t v28 = v13 + 8;
  uint64_t v29 = (v13 + 8) & ~v13;
  uint64_t v132 = v128;
  unint64_t v30 = a2;
  if (*(_DWORD *)(v128 + 84)) {
    uint64_t v31 = *(void *)(v128 + 64);
  }
  else {
    uint64_t v31 = *(void *)(v128 + 64) + 1;
  }
  uint64_t v32 = (v29 + 1 + v18 + v31 + v27) & ~v18;
  uint64_t v33 = v17 + 8;
  if (*(_DWORD *)(v16 + 84)) {
    uint64_t v34 = *(void *)(*(void *)(v15 - 8) + 64);
  }
  else {
    uint64_t v34 = *(void *)(*(void *)(v15 - 8) + 64) + 1;
  }
  uint64_t v35 = ((v17 + 8) & ~v17) + v34 + v32 + 1;
  unint64_t v36 = (v35 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = v36 + 8;
  if (v36 + 8 <= v133) {
    unint64_t v37 = v133;
  }
  unint64_t v38 = ((v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v38 <= v37) {
    unint64_t v38 = v37;
  }
  if (v38 <= 8) {
    uint64_t v39 = 8;
  }
  else {
    uint64_t v39 = v38;
  }
  if (v39 > 3) {
    goto LABEL_22;
  }
  unsigned int v40 = ((1 << (8 * v39)) + 1) >> (8 * v39);
  if (v40 > 0xFFFA)
  {
    unsigned int v41 = *(_DWORD *)&a2[v39];
    unsigned int v42 = v41 - 5;
    if (v41 < 5) {
      goto LABEL_40;
    }
    goto LABEL_27;
  }
  if (v40 <= 0xFA)
  {
LABEL_22:
    unsigned int v41 = a2[v39];
    unsigned int v42 = v41 - 5;
    if (v41 < 5) {
      goto LABEL_40;
    }
LABEL_27:
    if (v39 <= 3) {
      uint64_t v43 = v39;
    }
    else {
      uint64_t v43 = 4;
    }
    switch(v43)
    {
      case 1:
        int v44 = *a2;
        if (v39 < 4) {
          goto LABEL_38;
        }
        goto LABEL_39;
      case 2:
        int v44 = *(unsigned __int16 *)a2;
        if (v39 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 3:
        int v44 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v39 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 4:
        int v44 = *(_DWORD *)a2;
        if (v39 < 4) {
LABEL_38:
        }
          v44 |= v42 << (8 * v39);
LABEL_39:
        unsigned int v41 = v44 + 5;
        break;
      default:
        goto LABEL_40;
    }
    goto LABEL_40;
  }
  unsigned int v41 = *(unsigned __int16 *)&a2[v39];
  unsigned int v42 = v41 - 5;
  if (v41 >= 5) {
    goto LABEL_27;
  }
LABEL_40:
  uint64_t v45 = ~v21;
  uint64_t v46 = ~v20;
  uint64_t v47 = ~v14;
  uint64_t v48 = ~v13;
  uint64_t v49 = ~v17;
  switch(v41)
  {
    case 0u:
      uint64_t v50 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v107 + 16))(a1, a2, v114);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v113 + 16))(((unint64_t)a1 + v101) & ~v98, (unint64_t)&a2[v101] & ~v98, v117);
      unsigned int v51 = (void *)(((((unint64_t)a1 + v101) & ~v98) + v110 + v104) & ~v104);
      int v52 = (const void *)((((unint64_t)&a2[v101] & ~v98) + v110 + v104) & ~v104);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v120 + 48))(v52, 1, v123))
      {
        memcpy(v51, v52, __n);
        if (v39 > 3)
        {
LABEL_77:
          *((unsigned char *)a1 + v39) = 0;
          if (v39 <= 3) {
            goto LABEL_89;
          }
          goto LABEL_92;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v120 + 16))(v51, v52, v123);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v120 + 56))(v51, 0, 1, v123);
        if (v39 > 3) {
          goto LABEL_77;
        }
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 0;
        goto LABEL_105;
      }
      if (v57 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v39) = 0;
        goto LABEL_105;
      }
      goto LABEL_77;
    case 1u:
      uint64_t v100 = v48;
      uint64_t v103 = ~v18;
      uint64_t v106 = v49;
      uint64_t v109 = v26;
      size_t v112 = v31;
      uint64_t v116 = v29 + 1;
      uint64_t v119 = v33;
      size_t v122 = v34;
      uint64_t v125 = v35;
      uint64_t v130 = *(void *)(v15 - 8);
      uint64_t v135 = v15;
      *a1 = *(void *)a2;
      uint64_t v63 = (void *)(((unint64_t)a1 + v21 + 8) & v45);
      uint64_t v64 = (void *)((unint64_t)&a2[v21 + 8] & v45);
      *uint64_t v63 = *v64;
      unint64_t v94 = (unint64_t)v64;
      size_t __nb = (size_t)v63;
      __dsta = (void *)(((unint64_t)v63 + v23) & v46);
      uint64_t v65 = (const void *)(((unint64_t)v64 + v23) & v46);
      uint64_t v66 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
      swift_retain();
      if (v66(v65, 1, AssociatedTypeWitness))
      {
        memcpy(__dsta, v65, v25);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dsta, v65, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dsta, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__dsta + v25) = *((unsigned char *)v65 + v25);
      uint64_t v78 = (void *)((__nb + v14 + v109 + v25) & v47);
      uint64_t v79 = (void *)((v94 + v14 + v109 + v25) & v47);
      *uint64_t v78 = *v79;
      size_t v80 = (void *)(((unint64_t)v78 + v28) & v48);
      uint64_t v81 = (const void *)(((unint64_t)v79 + v28) & v48);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v132 + 48))(((unint64_t)v79 + v28) & v100, 1, v127))
      {
        memcpy(v80, v81, v112);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v132 + 16))(v80, v81, v127);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v80, 0, 1, v127);
      }
      *((unsigned char *)v80 + v112) = *((unsigned char *)v81 + v112);
      uint64_t v82 = (void *)(((unint64_t)v78 + v18 + v116 + v112) & v103);
      uint64_t v83 = (void *)(((unint64_t)v79 + v18 + v116 + v112) & v103);
      *uint64_t v82 = *v83;
      uint64_t v84 = (void *)(((unint64_t)v82 + v119) & v106);
      size_t v85 = (const void *)(((unint64_t)v83 + v119) & v106);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v130 + 48))(v85, 1, v135))
      {
        size_t v86 = v122;
        memcpy(v84, v85, v122);
        uint64_t v50 = a1;
        unint64_t v30 = a2;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v130 + 16))(v84, v85, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v130 + 56))(v84, 0, 1, v135);
        uint64_t v50 = a1;
        unint64_t v30 = a2;
        size_t v86 = v122;
      }
      *((unsigned char *)v84 + v86) = *((unsigned char *)v85 + v86);
      *(void *)(((__nb | 7) + v125) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v94 | 7) + v125) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v39 > 3) {
        goto LABEL_87;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)v50 + v39) = 1;
      }
      else
      {
        if (v57 <= 0xFA)
        {
LABEL_87:
          char v58 = 1;
          goto LABEL_88;
        }
        *(_WORD *)((char *)v50 + v39) = 1;
      }
      goto LABEL_105;
    case 2u:
      uint64_t v99 = v48;
      uint64_t v102 = ~v18;
      uint64_t v105 = v49;
      uint64_t v108 = v26;
      size_t v111 = v31;
      uint64_t v115 = v29 + 1;
      uint64_t v118 = v33;
      size_t v121 = v34;
      uint64_t v124 = v35;
      uint64_t v129 = *(void *)(v15 - 8);
      uint64_t v134 = v15;
      *a1 = *(void *)a2;
      int v53 = (void *)(((unint64_t)a1 + v21 + 8) & v45);
      uint64_t v54 = (void *)((unint64_t)&a2[v21 + 8] & v45);
      *int v53 = *v54;
      unint64_t v93 = (unint64_t)v54;
      size_t __na = (size_t)v53;
      __dst = (void *)(((unint64_t)v53 + v23) & v46);
      uint64_t v55 = (const void *)(((unint64_t)v54 + v23) & v46);
      uint64_t v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
      swift_retain();
      if (v56(v55, 1, AssociatedTypeWitness))
      {
        memcpy(__dst, v55, v25);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v55, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__dst + v25) = *((unsigned char *)v55 + v25);
      uint64_t v67 = (void *)((__na + v14 + v108 + v25) & v47);
      uint64_t v68 = (void *)((v93 + v14 + v108 + v25) & v47);
      *uint64_t v67 = *v68;
      unint64_t v69 = (void *)(((unint64_t)v67 + v28) & v48);
      uint64_t v70 = (const void *)(((unint64_t)v68 + v28) & v48);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v132 + 48))(((unint64_t)v68 + v28) & v99, 1, v127))
      {
        memcpy(v69, v70, v111);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v132 + 16))(v69, v70, v127);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v69, 0, 1, v127);
      }
      *((unsigned char *)v69 + v111) = *((unsigned char *)v70 + v111);
      uint64_t v71 = (void *)(((unint64_t)v67 + v18 + v115 + v111) & v102);
      uint64_t v72 = (void *)(((unint64_t)v68 + v18 + v115 + v111) & v102);
      void *v71 = *v72;
      uint64_t v73 = (void *)(((unint64_t)v71 + v118) & v105);
      size_t v74 = (const void *)(((unint64_t)v72 + v118) & v105);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v129 + 48))(v74, 1, v134))
      {
        size_t v75 = v121;
        memcpy(v73, v74, v121);
        uint64_t v50 = a1;
        unint64_t v30 = a2;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v129 + 16))(v73, v74, v134);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v73, 0, 1, v134);
        uint64_t v50 = a1;
        unint64_t v30 = a2;
        size_t v75 = v121;
      }
      *((unsigned char *)v73 + v75) = *((unsigned char *)v74 + v75);
      uint64_t v76 = (void *)(((__na | 7) + v124) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v77 = (void *)(((v93 | 7) + v124) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v76 = *v77;
      *(void *)(((unint64_t)v76 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v39 > 3) {
        goto LABEL_73;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)v50 + v39) = 2;
      }
      else
      {
        if (v57 <= 0xFA)
        {
LABEL_73:
          char v58 = 2;
          goto LABEL_88;
        }
        *(_WORD *)((char *)v50 + v39) = 2;
      }
      goto LABEL_105;
    case 3u:
      uint64_t v50 = a1;
      *a1 = *(void *)a2;
      swift_retain();
      if (v39 > 3) {
        goto LABEL_49;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 3;
      }
      else
      {
        if (v57 <= 0xFA)
        {
LABEL_49:
          char v58 = 3;
          goto LABEL_88;
        }
        *(_WORD *)((char *)a1 + v39) = 3;
      }
      goto LABEL_105;
    case 4u:
      uint64_t v59 = *(void *)a2;
      id v60 = *(id *)a2;
      uint64_t v50 = a1;
      *a1 = v59;
      if (v39 > 3) {
        goto LABEL_53;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 4;
        goto LABEL_105;
      }
      if (v57 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v39) = 4;
LABEL_105:
        BOOL v89 = v57 > 0xFFFA;
        uint64_t v88 = 2;
        if (v89) {
          uint64_t v88 = 4;
        }
        goto LABEL_107;
      }
LABEL_53:
      char v58 = 4;
LABEL_88:
      *((unsigned char *)v50 + v39) = v58;
      if (v39 > 3) {
        goto LABEL_92;
      }
LABEL_89:
      unsigned int v87 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      uint64_t v88 = 2;
      if (v87 > 0xFFFA) {
        uint64_t v88 = 4;
      }
      if (v87 <= 0xFA) {
LABEL_92:
      }
        uint64_t v88 = 1;
LABEL_107:
      *(void *)(((unint64_t)v50 + v88 + v39 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v30[v88 + 7 + v39] & 0xFFFFFFFFFFFFFFF8);
      return v50;
    default:
      if (v39 > 3) {
        goto LABEL_58;
      }
      unsigned int v61 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      uint64_t v62 = 2;
      if (v61 > 0xFFFA) {
        uint64_t v62 = 4;
      }
      if (v61 <= 0xFA) {
LABEL_58:
      }
        uint64_t v62 = 1;
      uint64_t v50 = a1;
      memcpy(a1, a2, v62 + v39);
      if (v39 > 3) {
        goto LABEL_92;
      }
      goto LABEL_89;
  }
}

unsigned __int8 *sub_24E59F174(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  unint64_t v3 = a3;
  if (a1 != a2)
  {
    uint64_t v4 = a3[2];
    uint64_t v5 = v3[3];
    uint64_t v134 = *(void *)(v3[2] - 8);
    uint64_t v6 = *(void *)(v134 + 64);
    uint64_t v136 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v136 + 80);
    uint64_t v133 = v6 + v7;
    uint64_t v162 = v7;
    uint64_t v8 = v3[4];
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v135 = *(void *)(v136 + 64);
    uint64_t v164 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v10 = (v135 + v164 + ((v6 + v7) & ~v7)) & ~v164;
    uint64_t v145 = v9;
    size_t v11 = *(void *)(v9 + 64);
    if (!*(_DWORD *)(v9 + 84)) {
      ++v11;
    }
    size_t __n = v11;
    unint64_t v160 = v11 + v10;
    uint64_t v137 = v4;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v167 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v12 = *(unsigned __int8 *)(v167 + 80);
    uint64_t v138 = v5;
    uint64_t v155 = swift_getAssociatedTypeWitness();
    uint64_t v157 = v3;
    uint64_t v158 = *(void *)(v155 - 8);
    uint64_t v13 = *(unsigned __int8 *)(v158 + 80);
    uint64_t v14 = v13 | 7;
    uint64_t v15 = v13 | v12;
    uint64_t v146 = v8;
    uint64_t v16 = swift_getAssociatedTypeWitness();
    uint64_t v17 = v13;
    uint64_t v18 = v12;
    uint64_t v19 = *(void *)(v16 - 8);
    uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
    uint64_t v21 = v20 | 7;
    uint64_t v22 = v13 | v12 | v20 | 7;
    uint64_t v150 = v12 + 8;
    uint64_t v153 = v167;
    if (*(_DWORD *)(v167 + 84)) {
      uint64_t v23 = *(void *)(v167 + 64);
    }
    else {
      uint64_t v23 = *(void *)(v167 + 64) + 1;
    }
    size_t v139 = v23;
    uint64_t v140 = ((v12 + 8) & ~v12) + v23 + 1;
    uint64_t v24 = v140 + v14;
    uint64_t v168 = v13 | 7;
    uint64_t v152 = v13 + 8;
    uint64_t v154 = v158;
    size_t v25 = *(void *)(v158 + 64);
    uint64_t v26 = *(void *)(v16 - 8);
    if (!*(_DWORD *)(v158 + 84)) {
      ++v25;
    }
    uint64_t v142 = ((v13 + 8) & ~v13) + v25 + 1;
    uint64_t v27 = v142 + v21;
    uint64_t v159 = v20 + 8;
    size_t v28 = *(void *)(*(void *)(v16 - 8) + 64);
    if (!*(_DWORD *)(v19 + 84)) {
      ++v28;
    }
    size_t v144 = v28;
    uint64_t v29 = ((v20 + 8) & ~v20) + v28 + ((v142 + v21 + (v24 & ~v14)) & ~v21) + 1;
    unint64_t v30 = (v29 + (((v15 | v20) + 8) & ~v22) + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = v30 + 8;
    if (v30 + 8 <= v160) {
      unint64_t v31 = v160;
    }
    unint64_t v32 = ((v30 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v32 <= v31) {
      unint64_t v32 = v31;
    }
    if (v32 <= 8) {
      uint64_t v33 = 8;
    }
    else {
      uint64_t v33 = v32;
    }
    char v34 = 8 * v33;
    uint64_t v35 = a1;
    if (v33 > 3) {
      goto LABEL_21;
    }
    unsigned int v36 = ((1 << v34) + 1) >> v34;
    if (v36 > 0xFFFA)
    {
      unsigned int v37 = *(_DWORD *)&a1[v33];
      unsigned int v38 = v37 - 5;
      if (v37 < 5) {
        goto LABEL_39;
      }
      goto LABEL_26;
    }
    if (v36 > 0xFA)
    {
      unsigned int v37 = *(unsigned __int16 *)&a1[v33];
      unsigned int v38 = v37 - 5;
      if (v37 < 5) {
        goto LABEL_39;
      }
    }
    else
    {
LABEL_21:
      unsigned int v37 = a1[v33];
      unsigned int v38 = v37 - 5;
      if (v37 < 5) {
        goto LABEL_39;
      }
    }
LABEL_26:
    if (v33 <= 3) {
      uint64_t v39 = v33;
    }
    else {
      uint64_t v39 = 4;
    }
    switch(v39)
    {
      case 1:
        int v40 = *a1;
        if (v33 < 4) {
          goto LABEL_37;
        }
        goto LABEL_38;
      case 2:
        int v40 = *(unsigned __int16 *)a1;
        if (v33 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 3:
        int v40 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v33 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 4:
        int v40 = *(_DWORD *)a1;
        if (v33 < 4) {
LABEL_37:
        }
          v40 |= v38 << v34;
LABEL_38:
        unsigned int v37 = v40 + 5;
        break;
      default:
        break;
    }
LABEL_39:
    size_t v141 = v25;
    uint64_t v161 = v16;
    uint64_t v131 = ~v162;
    uint64_t v132 = ~v164;
    uint64_t v41 = ~v22;
    uint64_t v147 = ~v18;
    uint64_t v148 = ~v168;
    uint64_t v149 = ~v17;
    uint64_t v143 = v20 | 7;
    uint64_t v151 = ~v21;
    uint64_t v163 = ~v20;
    switch(v37)
    {
      case 0u:
        uint64_t v42 = v22;
        (*(void (**)(unsigned __int8 *, uint64_t))(v134 + 8))(a1, v137);
        (*(void (**)(unint64_t, uint64_t))(v136 + 8))((unint64_t)&a1[v133] & v131, v138);
        unint64_t v43 = (((unint64_t)&a1[v133] & v131) + v135 + v164) & v132;
        int v44 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v145 + 48))(v43, 1, v146);
        uint64_t v22 = v42;
        if (v44) {
          break;
        }
        (*(void (**)(unint64_t, uint64_t))(v145 + 8))(v43, v146);
        uint64_t v22 = v42;
        if (v33 <= 3) {
          goto LABEL_63;
        }
        goto LABEL_65;
      case 1u:
        uint64_t v128 = v29;
        uint64_t v49 = v22;
        swift_release();
        uint64_t v125 = v49;
        uint64_t v50 = (unint64_t)&a1[v49 + 8] & v41;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v153 + 48))((v150 + v50) & v147, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v153 + 8))((v150 + v50) & v147, AssociatedTypeWitness); {
        uint64_t v51 = (v24 + v50) & v148;
        }
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))((v152 + v51) & v149, 1, v155)) {
          (*(void (**)(uint64_t, uint64_t))(v154 + 8))((v152 + v51) & v149, v155);
        }
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))((v159 + ((v27 + v51) & v151)) & v163, 1, v161))(*(void (**)(uint64_t, uint64_t))(v26 + 8))((v159 + ((v27 + v51) & v151)) & v163, v161); {
        uint64_t v29 = v128;
        }
        goto LABEL_62;
      case 2u:
        uint64_t v127 = v29;
        uint64_t v45 = v22;
        swift_release();
        uint64_t v125 = v45;
        uint64_t v46 = (unint64_t)&a1[v45 + 8] & v41;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v153 + 48))((v150 + v46) & v147, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v153 + 8))((v150 + v46) & v147, AssociatedTypeWitness); {
        uint64_t v47 = (v24 + v46) & v148;
        }
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))((v152 + v47) & v149, 1, v155)) {
          (*(void (**)(uint64_t, uint64_t))(v154 + 8))((v152 + v47) & v149, v155);
        }
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))((v159 + ((v27 + v47) & v151)) & v163, 1, v161))(*(void (**)(uint64_t, uint64_t))(v26 + 8))((v159 + ((v27 + v47) & v151)) & v163, v161); {
        uint64_t v29 = v127;
        }
LABEL_62:
        swift_release();
        uint64_t v35 = a1;
        uint64_t v22 = v125;
        if (v33 <= 3) {
          goto LABEL_63;
        }
        goto LABEL_65;
      case 3u:
        uint64_t v48 = v22;
        swift_release();
        goto LABEL_52;
      case 4u:
        uint64_t v48 = v22;

LABEL_52:
        uint64_t v22 = v48;
        break;
      default:
        break;
    }
    if (v33 <= 3)
    {
LABEL_63:
      unsigned int v52 = ((1 << v34) + 1) >> v34;
      if (v52 > 0xFFFA)
      {
        unsigned int v53 = *(_DWORD *)&a2[v33];
        unsigned int v54 = v53 - 5;
        if (v53 < 5) {
          goto LABEL_83;
        }
        goto LABEL_70;
      }
      if (v52 > 0xFA)
      {
        unsigned int v53 = *(unsigned __int16 *)&a2[v33];
        unsigned int v54 = v53 - 5;
        if (v53 < 5)
        {
LABEL_83:
          switch(v53)
          {
            case 0u:
              (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t, uint64_t))(v134 + 16))(v35, a2, v137, v22);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v136 + 16))((unint64_t)&v35[v133] & v131, (unint64_t)&a2[v133] & v131, v138);
              unsigned int v57 = (void *)((((unint64_t)&v35[v133] & v131) + v135 + v164) & v132);
              char v58 = (const void *)((((unint64_t)&a2[v133] & v131) + v135 + v164) & v132);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v145 + 48))(v58, 1, v146))
              {
                memcpy(v57, v58, __n);
                if (v33 > 3) {
                  goto LABEL_108;
                }
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v145 + 16))(v57, v58, v146);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v145 + 56))(v57, 0, 1, v146);
                if (v33 > 3) {
                  goto LABEL_108;
                }
              }
              unsigned int v79 = ((1 << v34) + 1) >> v34;
              if (v79 > 0xFFFA)
              {
                *(_DWORD *)&v35[v33] = 0;
                goto LABEL_141;
              }
              if (v79 > 0xFA)
              {
                *(_WORD *)&v35[v33] = 0;
                goto LABEL_141;
              }
LABEL_108:
              v35[v33] = 0;
LABEL_141:
              unint64_t v3 = v157;
              goto LABEL_142;
            case 1u:
              uint64_t v130 = v29;
              uint64_t v166 = v26;
              *(void *)uint64_t v35 = *(void *)a2;
              uint64_t v72 = (unint64_t)&v35[v22 + 8] & v41;
              uint64_t v73 = (unint64_t)&a2[v22 + 8] & v41;
              *(void *)uint64_t v72 = *(void *)v73;
              size_t v74 = (void *)((v150 + v72) & v147);
              size_t v75 = (const void *)((v150 + v73) & v147);
              uint64_t v76 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v153 + 48);
              swift_retain();
              if (v76(v75, 1, AssociatedTypeWitness))
              {
                size_t v77 = v139;
                memcpy(v74, v75, v139);
                uint64_t v78 = v155;
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v153 + 16))(v74, v75, AssociatedTypeWitness);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v153 + 56))(v74, 0, 1, AssociatedTypeWitness);
                uint64_t v78 = v155;
                size_t v77 = v139;
              }
              *((unsigned char *)v74 + v77) = *((unsigned char *)v75 + v77);
              size_t v85 = (void *)((v72 + v168 + v140) & v148);
              size_t v86 = (void *)((v73 + v168 + v140) & v148);
              *size_t v85 = *v86;
              unsigned int v87 = (void *)(((unint64_t)v85 + v152) & v149);
              uint64_t v88 = (const void *)(((unint64_t)v86 + v152) & v149);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v154 + 48))(v88, 1, v78))
              {
                size_t v89 = v141;
                memcpy(v87, v88, v141);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v154 + 16))(v87, v88, v78);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v87, 0, 1, v78);
                size_t v89 = v141;
              }
              *((unsigned char *)v87 + v89) = *((unsigned char *)v88 + v89);
              uint64_t v95 = (void *)(((unint64_t)v85 + v143 + v142) & v151);
              BOOL v96 = (void *)(((unint64_t)v86 + v143 + v142) & v151);
              *uint64_t v95 = *v96;
              uint64_t v97 = (void *)(((unint64_t)v95 + v159) & v163);
              uint64_t v98 = (const void *)(((unint64_t)v96 + v159) & v163);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v166 + 48))(v98, 1, v161))
              {
                size_t v99 = v144;
                memcpy(v97, v98, v144);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v166 + 16))(v97, v98, v161);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v166 + 56))(v97, 0, 1, v161);
                size_t v99 = v144;
              }
              *((unsigned char *)v97 + v99) = *((unsigned char *)v98 + v99);
              *(void *)(((v72 | 7) + v130) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v73 | 7) + v130) & 0xFFFFFFFFFFFFFFF8);
              swift_retain();
              if (v33 > 3) {
                goto LABEL_130;
              }
              unsigned int v103 = ((1 << v34) + 1) >> v34;
              if (v103 > 0xFFFA)
              {
                *(_DWORD *)&a1[v33] = 1;
              }
              else if (v103 > 0xFA)
              {
                *(_WORD *)&a1[v33] = 1;
              }
              else
              {
LABEL_130:
                a1[v33] = 1;
              }
              goto LABEL_141;
            case 2u:
              uint64_t v129 = v29;
              uint64_t v165 = v26;
              *(void *)uint64_t v35 = *(void *)a2;
              uint64_t v59 = (unint64_t)&v35[v22 + 8] & v41;
              uint64_t v60 = (unint64_t)&a2[v22 + 8] & v41;
              *(void *)uint64_t v59 = *(void *)v60;
              unsigned int v61 = (void *)((v150 + v59) & v147);
              uint64_t v62 = (const void *)((v150 + v60) & v147);
              uint64_t v63 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v153 + 48);
              swift_retain();
              if (v63(v62, 1, AssociatedTypeWitness))
              {
                size_t v64 = v139;
                memcpy(v61, v62, v139);
                uint64_t v65 = v155;
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v153 + 16))(v61, v62, AssociatedTypeWitness);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v153 + 56))(v61, 0, 1, AssociatedTypeWitness);
                uint64_t v65 = v155;
                size_t v64 = v139;
              }
              *((unsigned char *)v61 + v64) = *((unsigned char *)v62 + v64);
              size_t v80 = (void *)((v59 + v168 + v140) & v148);
              uint64_t v81 = (void *)((v60 + v168 + v140) & v148);
              *size_t v80 = *v81;
              uint64_t v82 = (void *)(((unint64_t)v80 + v152) & v149);
              uint64_t v83 = (const void *)(((unint64_t)v81 + v152) & v149);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v154 + 48))(v83, 1, v65))
              {
                size_t v84 = v141;
                memcpy(v82, v83, v141);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v154 + 16))(v82, v83, v65);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v82, 0, 1, v65);
                size_t v84 = v141;
              }
              *((unsigned char *)v82 + v84) = *((unsigned char *)v83 + v84);
              size_t v90 = (void *)(((unint64_t)v80 + v143 + v142) & v151);
              uint64_t v91 = (void *)(((unint64_t)v81 + v143 + v142) & v151);
              *size_t v90 = *v91;
              unint64_t v92 = (void *)(((unint64_t)v90 + v159) & v163);
              unint64_t v93 = (const void *)(((unint64_t)v91 + v159) & v163);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v165 + 48))(v93, 1, v161))
              {
                size_t v94 = v144;
                memcpy(v92, v93, v144);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v165 + 16))(v92, v93, v161);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v165 + 56))(v92, 0, 1, v161);
                size_t v94 = v144;
              }
              *((unsigned char *)v92 + v94) = *((unsigned char *)v93 + v94);
              uint64_t v100 = (void *)(((v59 | 7) + v129) & 0xFFFFFFFFFFFFFFF8);
              uint64_t v101 = (void *)(((v60 | 7) + v129) & 0xFFFFFFFFFFFFFFF8);
              *uint64_t v100 = *v101;
              *(void *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v101
                                                                                             + 15) & 0xFFFFFFFFFFFFFFF8);
              swift_retain();
              if (v33 > 3) {
                goto LABEL_125;
              }
              unsigned int v102 = ((1 << v34) + 1) >> v34;
              if (v102 > 0xFFFA)
              {
                *(_DWORD *)&a1[v33] = 2;
              }
              else if (v102 > 0xFA)
              {
                *(_WORD *)&a1[v33] = 2;
              }
              else
              {
LABEL_125:
                a1[v33] = 2;
              }
              goto LABEL_141;
            case 3u:
              *(void *)uint64_t v35 = *(void *)a2;
              swift_retain();
              if (v33 > 3) {
                goto LABEL_92;
              }
              unsigned int v66 = ((1 << v34) + 1) >> v34;
              if (v66 > 0xFFFA)
              {
                *(_DWORD *)&v35[v33] = 3;
              }
              else if (v66 > 0xFA)
              {
                *(_WORD *)&v35[v33] = 3;
              }
              else
              {
LABEL_92:
                v35[v33] = 3;
              }
              goto LABEL_141;
            case 4u:
              uint64_t v67 = *(void *)a2;
              id v68 = *(id *)a2;
              *(void *)uint64_t v35 = v67;
              if (v33 > 3) {
                goto LABEL_96;
              }
              unsigned int v69 = ((1 << v34) + 1) >> v34;
              if (v69 > 0xFFFA)
              {
                *(_DWORD *)&v35[v33] = 4;
              }
              else if (v69 > 0xFA)
              {
                *(_WORD *)&v35[v33] = 4;
              }
              else
              {
LABEL_96:
                v35[v33] = 4;
              }
              goto LABEL_141;
            default:
              if (v33 > 3) {
                goto LABEL_101;
              }
              unsigned int v70 = ((1 << v34) + 1) >> v34;
              uint64_t v71 = 2;
              if (v70 > 0xFFFA) {
                uint64_t v71 = 4;
              }
              if (v70 <= 0xFA) {
LABEL_101:
              }
                uint64_t v71 = 1;
              memcpy(v35, a2, v71 + v33);
              goto LABEL_141;
          }
        }
LABEL_70:
        if (v33 <= 3) {
          uint64_t v55 = v33;
        }
        else {
          uint64_t v55 = 4;
        }
        switch(v55)
        {
          case 1:
            int v56 = *a2;
            if (v33 < 4) {
              goto LABEL_81;
            }
            goto LABEL_82;
          case 2:
            int v56 = *(unsigned __int16 *)a2;
            if (v33 >= 4) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 3:
            int v56 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v33 >= 4) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 4:
            int v56 = *(_DWORD *)a2;
            if (v33 < 4) {
LABEL_81:
            }
              v56 |= v54 << v34;
LABEL_82:
            unsigned int v53 = v56 + 5;
            break;
          default:
            goto LABEL_83;
        }
        goto LABEL_83;
      }
    }
LABEL_65:
    unsigned int v53 = a2[v33];
    unsigned int v54 = v53 - 5;
    if (v53 < 5) {
      goto LABEL_83;
    }
    goto LABEL_70;
  }
LABEL_142:
  uint64_t v104 = *(void *)(v3[4] - 8);
  uint64_t v105 = *(void *)(v104 + 64);
  if (!*(_DWORD *)(v104 + 84)) {
    ++v105;
  }
  unint64_t v169 = v105
       + ((((*(void *)(*(void *)(v3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(v3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3[3] - 8) + 80))
         + *(void *)(*(void *)(v3[3] - 8) + 64)
         + *(unsigned __int8 *)(v104 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80));
  uint64_t v106 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v107 = *(unsigned __int8 *)(v106 + 80);
  uint64_t v108 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v109 = *(unsigned __int8 *)(v108 + 80);
  uint64_t v110 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v111 = v110;
  uint64_t v112 = *(unsigned __int8 *)(v110 + 80);
  uint64_t v113 = v112 | 7;
  uint64_t v114 = ((v107 + 8) & ~v107) + (v109 | 7) + *(void *)(v106 + 64);
  if (!*(_DWORD *)(v106 + 84)) {
    ++v114;
  }
  uint64_t v115 = (v114 + 1) & ~(v109 | 7);
  uint64_t v116 = ((v109 + 8) & ~v109) + v113 + *(void *)(v108 + 64);
  if (!*(_DWORD *)(v108 + 84)) {
    ++v116;
  }
  uint64_t v117 = (v116 + v115 + 1) & ~v113;
  unint64_t v118 = ((v112 + 8) & ~v112)
       + *(void *)(v110 + 64)
       + (((v109 | v107 | v112) & 0xF8 ^ 0x1F8) & ((v109 | v107 | v112) + 8));
  if (!*(_DWORD *)(v111 + 84)) {
    ++v118;
  }
  unint64_t v119 = (v118 + v117 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v120 = v119 + 8;
  if (v119 + 8 <= v169) {
    unint64_t v120 = v169;
  }
  unint64_t v121 = ((v119 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v121 <= v120) {
    unint64_t v121 = v120;
  }
  if (v121 <= 8) {
    unint64_t v121 = 8;
  }
  if (v121 > 3) {
    goto LABEL_160;
  }
  unsigned int v122 = ((1 << (8 * v121)) + 1) >> (8 * v121);
  uint64_t v123 = 2;
  if (v122 > 0xFFFA) {
    uint64_t v123 = 4;
  }
  if (v122 <= 0xFA) {
LABEL_160:
  }
    uint64_t v123 = 1;
  uint64_t result = a1;
  *(void *)((unint64_t)&a1[v123 + 7 + v121] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v123 + 7 + v121] & 0xFFFFFFFFFFFFFFF8);
  return result;
}

void *sub_24E5A0694(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v101 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v101 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v107 = *(void *)(v6 - 8);
  uint64_t v92 = *(unsigned __int8 *)(v107 + 80);
  uint64_t v95 = v5 + v92;
  size_t v8 = *(void *)(v7 - 8);
  uint64_t v104 = *(void *)(v107 + 64);
  uint64_t v98 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v9 = (v104 + v98 + ((v5 + v92) & ~v92)) & ~v98;
  size_t v116 = v8;
  size_t v10 = *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v10;
  }
  size_t __n = v10;
  unint64_t v128 = v10 + v9;
  uint64_t v110 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v126 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(unsigned __int8 *)(v126 + 80);
  uint64_t v113 = v6;
  uint64_t v122 = swift_getAssociatedTypeWitness();
  uint64_t v123 = *(void *)(v122 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v123 + 80);
  uint64_t v119 = v7;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = v126;
  uint64_t v15 = v12 | 7;
  uint64_t v16 = *(void *)(v13 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v17 | 7;
  uint64_t v19 = v12 | v11 | v17;
  uint64_t v20 = v11;
  uint64_t v21 = v19 | 7;
  uint64_t v22 = (v19 + 8) & ~(v19 | 7);
  uint64_t v23 = v11 + 8;
  uint64_t v24 = (v11 + 8) & ~v11;
  if (*(_DWORD *)(v126 + 84)) {
    size_t v25 = *(void *)(v126 + 64);
  }
  else {
    size_t v25 = *(void *)(v126 + 64) + 1;
  }
  uint64_t v26 = v24 + 1;
  uint64_t v27 = (v24 + 1 + (v12 | 7) + v25) & ~(v12 | 7);
  uint64_t v28 = v12 + 8;
  uint64_t v29 = (v12 + 8) & ~v12;
  uint64_t v127 = v123;
  unint64_t v30 = a2;
  if (*(_DWORD *)(v123 + 84)) {
    size_t v31 = *(void *)(v123 + 64);
  }
  else {
    size_t v31 = *(void *)(v123 + 64) + 1;
  }
  uint64_t v32 = (v29 + 1 + v18 + v31 + v27) & ~v18;
  uint64_t v33 = v17 + 8;
  if (*(_DWORD *)(v16 + 84)) {
    uint64_t v34 = *(void *)(*(void *)(v13 - 8) + 64);
  }
  else {
    uint64_t v34 = *(void *)(*(void *)(v13 - 8) + 64) + 1;
  }
  uint64_t v35 = ((v17 + 8) & ~v17) + v34 + v32 + 1;
  unint64_t v36 = (v35 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = v36 + 8;
  if (v36 + 8 <= v128) {
    unint64_t v37 = v128;
  }
  unint64_t v38 = ((v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v38 <= v37) {
    unint64_t v38 = v37;
  }
  if (v38 <= 8) {
    uint64_t v39 = 8;
  }
  else {
    uint64_t v39 = v38;
  }
  if (v39 > 3) {
    goto LABEL_22;
  }
  unsigned int v40 = ((1 << (8 * v39)) + 1) >> (8 * v39);
  if (v40 > 0xFFFA)
  {
    unsigned int v41 = *(_DWORD *)&a2[v39];
  }
  else
  {
    if (v40 <= 0xFA)
    {
LABEL_22:
      unsigned int v41 = a2[v39];
      goto LABEL_25;
    }
    unsigned int v41 = *(unsigned __int16 *)&a2[v39];
  }
LABEL_25:
  unsigned int v42 = v41 - 5;
  unint64_t v43 = a1;
  if (v41 >= 5)
  {
    if (v39 <= 3) {
      uint64_t v44 = v39;
    }
    else {
      uint64_t v44 = 4;
    }
    switch(v44)
    {
      case 1:
        int v45 = *a2;
        if (v39 < 4) {
          goto LABEL_37;
        }
        goto LABEL_38;
      case 2:
        int v45 = *(unsigned __int16 *)a2;
        if (v39 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 3:
        int v45 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v39 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 4:
        int v45 = *(_DWORD *)a2;
        if (v39 < 4) {
LABEL_37:
        }
          v45 |= v42 << (8 * v39);
LABEL_38:
        unsigned int v41 = v45 + 5;
        break;
      default:
        break;
    }
  }
  uint64_t v46 = ~v21;
  uint64_t v47 = ~v20;
  uint64_t v48 = ~v15;
  uint64_t v49 = ~v12;
  uint64_t v50 = ~v17;
  switch(v41)
  {
    case 0u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v101 + 32))(a1, a2, v110);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v107 + 32))(((unint64_t)a1 + v95) & ~v92, (unint64_t)&a2[v95] & ~v92, v113);
      uint64_t v51 = (void *)(((((unint64_t)a1 + v95) & ~v92) + v104 + v98) & ~v98);
      unsigned int v52 = (const void *)((((unint64_t)&a2[v95] & ~v92) + v104 + v98) & ~v98);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v116 + 48))(v52, 1, v119))
      {
        memcpy(v51, v52, __n);
        if (v39 > 3)
        {
LABEL_76:
          *((unsigned char *)a1 + v39) = 0;
          if (v39 <= 3) {
            goto LABEL_88;
          }
          goto LABEL_91;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v116 + 32))(v51, v52, v119);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v116 + 56))(v51, 0, 1, v119);
        if (v39 > 3) {
          goto LABEL_76;
        }
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 0;
        goto LABEL_104;
      }
      if (v57 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v39) = 0;
        goto LABEL_104;
      }
      goto LABEL_76;
    case 1u:
      uint64_t v100 = ~v18;
      uint64_t v103 = v50;
      uint64_t v106 = v26;
      uint64_t v109 = v15;
      uint64_t v112 = v29 + 1;
      uint64_t v115 = v33;
      size_t v118 = v34;
      uint64_t v121 = v35;
      uint64_t v125 = *(void *)(v13 - 8);
      uint64_t v130 = v13;
      *a1 = *(void *)a2;
      unsigned int v61 = (void *)(((unint64_t)a1 + v21 + 8) & v46);
      uint64_t v62 = (void *)((unint64_t)&a2[v21 + 8] & v46);
      *unsigned int v61 = *v62;
      unint64_t v94 = (unint64_t)v62;
      unint64_t v97 = (unint64_t)v61;
      size_t __nb = (void *)(((unint64_t)v61 + v23) & v47);
      uint64_t v63 = (const void *)(((unint64_t)v62 + v23) & v47);
      uint64_t v64 = v14;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v63, 1, AssociatedTypeWitness))
      {
        memcpy(__nb, v63, v25);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(__nb, v63, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(__nb, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__nb + v25) = *((unsigned char *)v63 + v25);
      uint64_t v76 = (void *)((v97 + v109 + v106 + v25) & v48);
      size_t v77 = (void *)((v94 + v109 + v106 + v25) & v48);
      *uint64_t v76 = *v77;
      uint64_t v78 = (void *)(((unint64_t)v76 + v28) & v49);
      unsigned int v79 = (const void *)(((unint64_t)v77 + v28) & v49);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v127 + 48))(v79, 1, v122))
      {
        memcpy(v78, v79, v31);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v127 + 32))(v78, v79, v122);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v127 + 56))(v78, 0, 1, v122);
      }
      *((unsigned char *)v78 + v31) = *((unsigned char *)v79 + v31);
      size_t v80 = (void *)(((unint64_t)v76 + v18 + v112 + v31) & v100);
      uint64_t v81 = (void *)(((unint64_t)v77 + v18 + v112 + v31) & v100);
      *size_t v80 = *v81;
      uint64_t v82 = (void *)(((unint64_t)v80 + v115) & v103);
      uint64_t v83 = (const void *)(((unint64_t)v81 + v115) & v103);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v125 + 48))(v83, 1, v130))
      {
        size_t v84 = v118;
        memcpy(v82, v83, v118);
        unint64_t v30 = a2;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v125 + 32))(v82, v83, v130);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v125 + 56))(v82, 0, 1, v130);
        unint64_t v30 = a2;
        size_t v84 = v118;
      }
      unint64_t v43 = a1;
      *((unsigned char *)v82 + v84) = *((unsigned char *)v83 + v84);
      *(void *)(((v97 | 7) + v121) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v94 | 7) + v121) & 0xFFFFFFFFFFFFFFF8);
      if (v39 > 3) {
        goto LABEL_86;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 1;
      }
      else
      {
        if (v57 <= 0xFA)
        {
LABEL_86:
          char v58 = 1;
          goto LABEL_87;
        }
        *(_WORD *)((char *)a1 + v39) = 1;
      }
      goto LABEL_104;
    case 2u:
      uint64_t v99 = ~v18;
      uint64_t v102 = v50;
      uint64_t v105 = v26;
      uint64_t v108 = v15;
      uint64_t v111 = v29 + 1;
      uint64_t v114 = v33;
      size_t v117 = v34;
      uint64_t v120 = v35;
      uint64_t v124 = *(void *)(v13 - 8);
      uint64_t v129 = v13;
      *a1 = *(void *)a2;
      unsigned int v53 = (void *)(((unint64_t)a1 + v21 + 8) & v46);
      unsigned int v54 = (void *)((unint64_t)&a2[v21 + 8] & v46);
      *unsigned int v53 = *v54;
      unint64_t v93 = (unint64_t)v54;
      unint64_t v96 = (unint64_t)v53;
      size_t __na = (void *)(((unint64_t)v53 + v23) & v47);
      uint64_t v55 = (const void *)(((unint64_t)v54 + v23) & v47);
      uint64_t v56 = v14;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v55, 1, AssociatedTypeWitness))
      {
        memcpy(__na, v55, v25);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v56 + 32))(__na, v55, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(__na, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__na + v25) = *((unsigned char *)v55 + v25);
      uint64_t v65 = (void *)((v96 + v108 + v105 + v25) & v48);
      unsigned int v66 = (void *)((v93 + v108 + v105 + v25) & v48);
      void *v65 = *v66;
      uint64_t v67 = (void *)(((unint64_t)v65 + v28) & v49);
      id v68 = (const void *)(((unint64_t)v66 + v28) & v49);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v127 + 48))(v68, 1, v122))
      {
        memcpy(v67, v68, v31);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v127 + 32))(v67, v68, v122);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v127 + 56))(v67, 0, 1, v122);
      }
      *((unsigned char *)v67 + v31) = *((unsigned char *)v68 + v31);
      unsigned int v69 = (void *)(((unint64_t)v65 + v18 + v111 + v31) & v99);
      unsigned int v70 = (void *)(((unint64_t)v66 + v18 + v111 + v31) & v99);
      void *v69 = *v70;
      uint64_t v71 = (void *)(((unint64_t)v69 + v114) & v102);
      uint64_t v72 = (const void *)(((unint64_t)v70 + v114) & v102);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v124 + 48))(v72, 1, v129))
      {
        size_t v73 = v117;
        memcpy(v71, v72, v117);
        unint64_t v30 = a2;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v124 + 32))(v71, v72, v129);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v71, 0, 1, v129);
        unint64_t v30 = a2;
        size_t v73 = v117;
      }
      unint64_t v43 = a1;
      *((unsigned char *)v71 + v73) = *((unsigned char *)v72 + v73);
      size_t v74 = (void *)(((v96 | 7) + v120) & 0xFFFFFFFFFFFFFFF8);
      size_t v75 = (void *)(((v93 | 7) + v120) & 0xFFFFFFFFFFFFFFF8);
      *size_t v74 = *v75;
      *(void *)(((unint64_t)v74 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v75 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v39 > 3) {
        goto LABEL_72;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 2;
      }
      else
      {
        if (v57 <= 0xFA)
        {
LABEL_72:
          char v58 = 2;
          goto LABEL_87;
        }
        *(_WORD *)((char *)a1 + v39) = 2;
      }
      goto LABEL_104;
    case 3u:
      *a1 = *(void *)a2;
      if (v39 > 3) {
        goto LABEL_48;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 3;
      }
      else
      {
        if (v57 <= 0xFA)
        {
LABEL_48:
          char v58 = 3;
          goto LABEL_87;
        }
        *(_WORD *)((char *)a1 + v39) = 3;
      }
      goto LABEL_104;
    case 4u:
      *a1 = *(void *)a2;
      if (v39 > 3) {
        goto LABEL_52;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 4;
        goto LABEL_104;
      }
      if (v57 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v39) = 4;
LABEL_104:
        BOOL v87 = v57 > 0xFFFA;
        uint64_t v86 = 2;
        if (v87) {
          uint64_t v86 = 4;
        }
        goto LABEL_106;
      }
LABEL_52:
      char v58 = 4;
LABEL_87:
      *((unsigned char *)v43 + v39) = v58;
      if (v39 > 3) {
        goto LABEL_91;
      }
LABEL_88:
      unsigned int v85 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      uint64_t v86 = 2;
      if (v85 > 0xFFFA) {
        uint64_t v86 = 4;
      }
      if (v85 <= 0xFA) {
LABEL_91:
      }
        uint64_t v86 = 1;
LABEL_106:
      *(void *)(((unint64_t)v43 + v86 + v39 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v30[v86 + 7 + v39] & 0xFFFFFFFFFFFFFFF8);
      return v43;
    default:
      if (v39 > 3) {
        goto LABEL_57;
      }
      unsigned int v59 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      uint64_t v60 = 2;
      if (v59 > 0xFFFA) {
        uint64_t v60 = 4;
      }
      if (v59 <= 0xFA) {
LABEL_57:
      }
        uint64_t v60 = 1;
      memcpy(a1, a2, v60 + v39);
      if (v39 > 3) {
        goto LABEL_91;
      }
      goto LABEL_88;
  }
}

unsigned __int8 *sub_24E5A1418(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  unint64_t v3 = a3;
  if (a1 != a2)
  {
    uint64_t v4 = a3[2];
    uint64_t v5 = v3[3];
    uint64_t v132 = *(void *)(v3[2] - 8);
    uint64_t v6 = *(void *)(v132 + 64);
    uint64_t v134 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v134 + 80);
    uint64_t v131 = v6 + v7;
    uint64_t v158 = v7;
    uint64_t v8 = v3[4];
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v133 = *(void *)(v134 + 64);
    uint64_t v160 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v10 = (v133 + v160 + ((v6 + v7) & ~v7)) & ~v160;
    uint64_t v142 = v9;
    size_t v11 = *(void *)(v9 + 64);
    if (!*(_DWORD *)(v9 + 84)) {
      ++v11;
    }
    size_t __n = v11;
    unint64_t v161 = v11 + v10;
    uint64_t v135 = v4;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v163 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v12 = *(unsigned __int8 *)(v163 + 80);
    uint64_t v136 = v5;
    uint64_t v152 = swift_getAssociatedTypeWitness();
    uint64_t v155 = v3;
    uint64_t v156 = *(void *)(v152 - 8);
    uint64_t v13 = *(unsigned __int8 *)(v156 + 80);
    uint64_t v14 = v13 | 7;
    uint64_t v143 = v8;
    uint64_t v15 = swift_getAssociatedTypeWitness();
    uint64_t v16 = v13;
    uint64_t v17 = v12;
    uint64_t v18 = *(void *)(v15 - 8);
    uint64_t v19 = v18;
    uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
    uint64_t v21 = v20 | 7;
    uint64_t v22 = v13 | v12 | v20 | 7;
    uint64_t v23 = ((v13 | v12 | v20) + 8) & ~v22;
    uint64_t v147 = v12 + 8;
    uint64_t v150 = v163;
    if (*(_DWORD *)(v163 + 84)) {
      uint64_t v24 = *(void *)(v163 + 64);
    }
    else {
      uint64_t v24 = *(void *)(v163 + 64) + 1;
    }
    size_t v137 = v24;
    uint64_t v138 = ((v12 + 8) & ~v12) + v24 + 1;
    uint64_t v25 = v138 + v14;
    uint64_t v164 = v13 | 7;
    uint64_t v149 = v13 + 8;
    uint64_t v26 = v156;
    if (*(_DWORD *)(v156 + 84)) {
      uint64_t v27 = *(void *)(v156 + 64);
    }
    else {
      uint64_t v27 = *(void *)(v156 + 64) + 1;
    }
    size_t v139 = v27;
    uint64_t v140 = ((v13 + 8) & ~v13) + v27 + 1;
    uint64_t v28 = v140 + v21;
    uint64_t v151 = v20 + 8;
    if (*(_DWORD *)(v18 + 84)) {
      uint64_t v29 = *(void *)(*(void *)(v15 - 8) + 64);
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v15 - 8) + 64) + 1;
    }
    uint64_t v30 = ((v20 + 8) & ~v20) + v29 + ((v140 + v21 + (v25 & ~v14)) & ~v21) + 1;
    unint64_t v31 = (v30 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = v31 + 8;
    if (v31 + 8 <= v161) {
      unint64_t v32 = v161;
    }
    unint64_t v33 = ((v31 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v33 <= v32) {
      unint64_t v33 = v32;
    }
    if (v33 <= 8) {
      uint64_t v34 = 8;
    }
    else {
      uint64_t v34 = v33;
    }
    char v35 = 8 * v34;
    if (v34 > 3) {
      goto LABEL_23;
    }
    unsigned int v36 = ((1 << v35) + 1) >> v35;
    if (v36 > 0xFFFA)
    {
      unsigned int v37 = *(_DWORD *)&a1[v34];
      unsigned int v38 = v37 - 5;
      if (v37 < 5) {
        goto LABEL_41;
      }
      goto LABEL_28;
    }
    if (v36 > 0xFA)
    {
      unsigned int v37 = *(unsigned __int16 *)&a1[v34];
      unsigned int v38 = v37 - 5;
      if (v37 < 5)
      {
LABEL_41:
        char v162 = 8 * v34;
        uint64_t v154 = v19;
        uint64_t v157 = v15;
        uint64_t v129 = ~v158;
        uint64_t v130 = ~v160;
        uint64_t v41 = ~v22;
        uint64_t v144 = ~v17;
        uint64_t v145 = ~v164;
        uint64_t v146 = ~v16;
        uint64_t v141 = v20 | 7;
        uint64_t v148 = ~v21;
        uint64_t v159 = ~v20;
        switch(v37)
        {
          case 0u:
            uint64_t v42 = v22;
            (*(void (**)(unsigned __int8 *, uint64_t))(v132 + 8))(a1, v135);
            (*(void (**)(unint64_t, uint64_t))(v134 + 8))((unint64_t)&a1[v131] & v129, v136);
            unint64_t v43 = (((unint64_t)&a1[v131] & v129) + v133 + v160) & v130;
            int v44 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v142 + 48))(v43, 1, v143);
            uint64_t v22 = v42;
            if (!v44)
            {
              (*(void (**)(unint64_t, uint64_t))(v142 + 8))(v43, v143);
              uint64_t v22 = v42;
            }
            goto LABEL_62;
          case 1u:
            uint64_t v123 = v29;
            uint64_t v126 = ((v20 + 8) & ~v20) + v29 + ((v140 + v21 + (v25 & ~v14)) & ~v21) + 1;
            uint64_t v49 = v22;
            swift_release();
            uint64_t v122 = v49;
            uint64_t v50 = (unint64_t)&a1[v49 + 8] & v41;
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))((v147 + v50) & v144, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v150 + 8))((v147 + v50) & v144, AssociatedTypeWitness); {
            uint64_t v51 = (v25 + v50) & v145;
            }
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))((v149 + v51) & v146, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(v26 + 8))((v149 + v51) & v146, v152);
            }
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))((v151 + ((v28 + v51) & v148)) & v159, 1, v157))(*(void (**)(uint64_t, uint64_t))(v154 + 8))((v151 + ((v28 + v51) & v148)) & v159, v157); {
            uint64_t v30 = v126;
            }
            goto LABEL_61;
          case 2u:
            uint64_t v123 = v29;
            uint64_t v125 = ((v20 + 8) & ~v20) + v29 + ((v140 + v21 + (v25 & ~v14)) & ~v21) + 1;
            uint64_t v45 = v22;
            swift_release();
            uint64_t v122 = v45;
            uint64_t v46 = (unint64_t)&a1[v45 + 8] & v41;
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))((v147 + v46) & v144, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v150 + 8))((v147 + v46) & v144, AssociatedTypeWitness); {
            uint64_t v47 = (v25 + v46) & v145;
            }
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))((v149 + v47) & v146, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(v26 + 8))((v149 + v47) & v146, v152);
            }
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))((v151 + ((v28 + v47) & v148)) & v159, 1, v157))(*(void (**)(uint64_t, uint64_t))(v154 + 8))((v151 + ((v28 + v47) & v148)) & v159, v157); {
            uint64_t v30 = v125;
            }
LABEL_61:
            swift_release();
            uint64_t v22 = v122;
            uint64_t v29 = v123;
            goto LABEL_62;
          case 3u:
            uint64_t v48 = v22;
            swift_release();
            goto LABEL_53;
          case 4u:
            uint64_t v48 = v22;

LABEL_53:
            uint64_t v22 = v48;
            break;
          default:
            goto LABEL_62;
        }
        if (v34 > 3) {
          goto LABEL_65;
        }
LABEL_62:
        unsigned int v52 = ((1 << v162) + 1) >> v162;
        if (v52 > 0xFFFA)
        {
          unsigned int v53 = *(_DWORD *)&a2[v34];
          unsigned int v54 = v53 - 5;
          if (v53 < 5) {
            goto LABEL_83;
          }
          goto LABEL_70;
        }
        if (v52 > 0xFA)
        {
          unsigned int v53 = *(unsigned __int16 *)&a2[v34];
          unsigned int v54 = v53 - 5;
          if (v53 < 5) {
            goto LABEL_83;
          }
        }
        else
        {
LABEL_65:
          unsigned int v53 = a2[v34];
          unsigned int v54 = v53 - 5;
          if (v53 < 5) {
            goto LABEL_83;
          }
        }
LABEL_70:
        if (v34 <= 3) {
          uint64_t v55 = v34;
        }
        else {
          uint64_t v55 = 4;
        }
        switch(v55)
        {
          case 1:
            int v56 = *a2;
            if (v34 < 4) {
              goto LABEL_81;
            }
            goto LABEL_82;
          case 2:
            int v56 = *(unsigned __int16 *)a2;
            if (v34 >= 4) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 3:
            int v56 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v34 >= 4) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 4:
            int v56 = *(_DWORD *)a2;
            if (v34 < 4) {
LABEL_81:
            }
              v56 |= v54 << v162;
LABEL_82:
            unsigned int v53 = v56 + 5;
            break;
          default:
            break;
        }
LABEL_83:
        switch(v53)
        {
          case 0u:
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t, uint64_t))(v132 + 32))(a1, a2, v135, v22);
            unint64_t v57 = (unint64_t)&a1[v131] & v129;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v134 + 32))(v57, (unint64_t)&a2[v131] & v129, v136);
            char v58 = (void *)((v57 + v133 + v160) & v130);
            unsigned int v59 = (const void *)((((unint64_t)&a2[v131] & v129) + v133 + v160) & v130);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v142 + 48))(v59, 1, v143))
            {
              memcpy(v58, v59, __n);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v142 + 32))(v58, v59, v143);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v142 + 56))(v58, 0, 1, v143);
            }
            if (v34 > 3) {
              goto LABEL_108;
            }
            unsigned int v76 = ((1 << v162) + 1) >> v162;
            if (v76 > 0xFFFA)
            {
              *(_DWORD *)&a1[v34] = 0;
            }
            else if (v76 > 0xFA)
            {
              *(_WORD *)&a1[v34] = 0;
            }
            else
            {
LABEL_108:
              a1[v34] = 0;
            }
            break;
          case 1u:
            uint64_t v128 = v30;
            *(void *)a1 = *(void *)a2;
            uint64_t v70 = (unint64_t)&a1[v22 + 8] & v41;
            uint64_t v71 = (unint64_t)&a2[v22 + 8] & v41;
            *(void *)uint64_t v70 = *(void *)v71;
            uint64_t v72 = (void *)((v147 + v70) & v144);
            size_t v73 = (const void *)((v147 + v71) & v144);
            size_t v74 = v29;
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v150 + 48))(v73, 1, AssociatedTypeWitness))
            {
              size_t v75 = v137;
              memcpy(v72, v73, v137);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v150 + 32))(v72, v73, AssociatedTypeWitness);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v150 + 56))(v72, 0, 1, AssociatedTypeWitness);
              size_t v75 = v137;
            }
            *((unsigned char *)v72 + v75) = *((unsigned char *)v73 + v75);
            uint64_t v82 = (void *)((v70 + v164 + v138) & v145);
            uint64_t v83 = (void *)((v71 + v164 + v138) & v145);
            *uint64_t v82 = *v83;
            size_t v84 = (void *)(((unint64_t)v82 + v149) & v146);
            unsigned int v85 = (const void *)(((unint64_t)v83 + v149) & v146);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v85, 1, v152))
            {
              size_t v86 = v139;
              memcpy(v84, v85, v139);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v84, v85, v152);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v84, 0, 1, v152);
              size_t v86 = v139;
            }
            *((unsigned char *)v84 + v86) = *((unsigned char *)v85 + v86);
            uint64_t v92 = (void *)(((unint64_t)v82 + v141 + v140) & v148);
            unint64_t v93 = (void *)(((unint64_t)v83 + v141 + v140) & v148);
            *uint64_t v92 = *v93;
            unint64_t v94 = (void *)(((unint64_t)v92 + v151) & v159);
            uint64_t v95 = (const void *)(((unint64_t)v93 + v151) & v159);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v154 + 48))(v95, 1, v157))
            {
              size_t v96 = v74;
              memcpy(v94, v95, v74);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v154 + 32))(v94, v95, v157);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v94, 0, 1, v157);
              size_t v96 = v74;
            }
            *((unsigned char *)v94 + v96) = *((unsigned char *)v95 + v96);
            *(void *)(((v70 | 7) + v128) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v71 | 7) + v128) & 0xFFFFFFFFFFFFFFF8);
            if (v34 > 3) {
              goto LABEL_130;
            }
            unsigned int v100 = ((1 << v162) + 1) >> v162;
            if (v100 > 0xFFFA)
            {
              *(_DWORD *)&a1[v34] = 1;
            }
            else if (v100 > 0xFA)
            {
              *(_WORD *)&a1[v34] = 1;
            }
            else
            {
LABEL_130:
              a1[v34] = 1;
            }
            break;
          case 2u:
            uint64_t v127 = v30;
            *(void *)a1 = *(void *)a2;
            uint64_t v60 = (unint64_t)&a1[v22 + 8] & v41;
            uint64_t v61 = (unint64_t)&a2[v22 + 8] & v41;
            *(void *)uint64_t v60 = *(void *)v61;
            uint64_t v62 = (void *)((v147 + v60) & v144);
            uint64_t v63 = (const void *)((v147 + v61) & v144);
            size_t v64 = v29;
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v150 + 48))(v63, 1, AssociatedTypeWitness))
            {
              size_t v65 = v137;
              memcpy(v62, v63, v137);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v150 + 32))(v62, v63, AssociatedTypeWitness);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v150 + 56))(v62, 0, 1, AssociatedTypeWitness);
              size_t v65 = v137;
            }
            *((unsigned char *)v62 + v65) = *((unsigned char *)v63 + v65);
            size_t v77 = (void *)((v60 + v164 + v138) & v145);
            uint64_t v78 = (void *)((v61 + v164 + v138) & v145);
            *size_t v77 = *v78;
            unsigned int v79 = (void *)(((unint64_t)v77 + v149) & v146);
            size_t v80 = (const void *)(((unint64_t)v78 + v149) & v146);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v80, 1, v152))
            {
              size_t v81 = v139;
              memcpy(v79, v80, v139);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v79, v80, v152);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v79, 0, 1, v152);
              size_t v81 = v139;
            }
            *((unsigned char *)v79 + v81) = *((unsigned char *)v80 + v81);
            BOOL v87 = (void *)(((unint64_t)v77 + v141 + v140) & v148);
            uint64_t v88 = (void *)(((unint64_t)v78 + v141 + v140) & v148);
            *BOOL v87 = *v88;
            size_t v89 = (void *)(((unint64_t)v87 + v151) & v159);
            size_t v90 = (const void *)(((unint64_t)v88 + v151) & v159);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v154 + 48))(v90, 1, v157))
            {
              size_t v91 = v64;
              memcpy(v89, v90, v64);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v154 + 32))(v89, v90, v157);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v89, 0, 1, v157);
              size_t v91 = v64;
            }
            *((unsigned char *)v89 + v91) = *((unsigned char *)v90 + v91);
            unint64_t v97 = (void *)(((v60 | 7) + v127) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v98 = (void *)(((v61 | 7) + v127) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v97 = *v98;
            *(void *)(((unint64_t)v97 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v98 + 15) & 0xFFFFFFFFFFFFFFF8);
            if (v34 > 3) {
              goto LABEL_125;
            }
            unsigned int v99 = ((1 << v162) + 1) >> v162;
            if (v99 > 0xFFFA)
            {
              *(_DWORD *)&a1[v34] = 2;
            }
            else if (v99 > 0xFA)
            {
              *(_WORD *)&a1[v34] = 2;
            }
            else
            {
LABEL_125:
              a1[v34] = 2;
            }
            break;
          case 3u:
            *(void *)a1 = *(void *)a2;
            if (v34 > 3) {
              goto LABEL_91;
            }
            unsigned int v66 = ((1 << v162) + 1) >> v162;
            if (v66 > 0xFFFA)
            {
              *(_DWORD *)&a1[v34] = 3;
            }
            else if (v66 > 0xFA)
            {
              *(_WORD *)&a1[v34] = 3;
            }
            else
            {
LABEL_91:
              a1[v34] = 3;
            }
            break;
          case 4u:
            *(void *)a1 = *(void *)a2;
            if (v34 > 3) {
              goto LABEL_95;
            }
            unsigned int v67 = ((1 << v162) + 1) >> v162;
            if (v67 > 0xFFFA)
            {
              *(_DWORD *)&a1[v34] = 4;
            }
            else if (v67 > 0xFA)
            {
              *(_WORD *)&a1[v34] = 4;
            }
            else
            {
LABEL_95:
              a1[v34] = 4;
            }
            break;
          default:
            if (v34 > 3) {
              goto LABEL_100;
            }
            unsigned int v68 = ((1 << v162) + 1) >> v162;
            uint64_t v69 = 2;
            if (v68 > 0xFFFA) {
              uint64_t v69 = 4;
            }
            if (v68 <= 0xFA) {
LABEL_100:
            }
              uint64_t v69 = 1;
            memcpy(a1, a2, v69 + v34);
            break;
        }
        unint64_t v3 = v155;
        goto LABEL_142;
      }
    }
    else
    {
LABEL_23:
      unsigned int v37 = a1[v34];
      unsigned int v38 = v37 - 5;
      if (v37 < 5) {
        goto LABEL_41;
      }
    }
LABEL_28:
    if (v34 <= 3) {
      uint64_t v39 = v34;
    }
    else {
      uint64_t v39 = 4;
    }
    switch(v39)
    {
      case 1:
        int v40 = *a1;
        if (v34 < 4) {
          goto LABEL_39;
        }
        goto LABEL_40;
      case 2:
        int v40 = *(unsigned __int16 *)a1;
        if (v34 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 3:
        int v40 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v34 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 4:
        int v40 = *(_DWORD *)a1;
        if (v34 < 4) {
LABEL_39:
        }
          v40 |= v38 << v35;
LABEL_40:
        unsigned int v37 = v40 + 5;
        break;
      default:
        goto LABEL_41;
    }
    goto LABEL_41;
  }
LABEL_142:
  uint64_t v101 = *(void *)(v3[4] - 8);
  uint64_t v102 = *(void *)(v101 + 64);
  if (!*(_DWORD *)(v101 + 84)) {
    ++v102;
  }
  unint64_t v165 = v102
       + ((((*(void *)(*(void *)(v3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(v3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3[3] - 8) + 80))
         + *(void *)(*(void *)(v3[3] - 8) + 64)
         + *(unsigned __int8 *)(v101 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80));
  uint64_t v103 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v104 = *(unsigned __int8 *)(v103 + 80);
  uint64_t v105 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v106 = *(unsigned __int8 *)(v105 + 80);
  uint64_t v107 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v108 = v107;
  uint64_t v109 = *(unsigned __int8 *)(v107 + 80);
  uint64_t v110 = v109 | 7;
  uint64_t v111 = ((v104 + 8) & ~v104) + (v106 | 7) + *(void *)(v103 + 64);
  if (!*(_DWORD *)(v103 + 84)) {
    ++v111;
  }
  uint64_t v112 = (v111 + 1) & ~(v106 | 7);
  uint64_t v113 = ((v106 + 8) & ~v106) + v110 + *(void *)(v105 + 64);
  if (!*(_DWORD *)(v105 + 84)) {
    ++v113;
  }
  uint64_t v114 = (v113 + v112 + 1) & ~v110;
  unint64_t v115 = ((v109 + 8) & ~v109)
       + *(void *)(v107 + 64)
       + (((v106 | v104 | v109) & 0xF8 ^ 0x1F8) & ((v106 | v104 | v109) + 8));
  if (!*(_DWORD *)(v108 + 84)) {
    ++v115;
  }
  unint64_t v116 = (v115 + v114 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v117 = v116 + 8;
  if (v116 + 8 <= v165) {
    unint64_t v117 = v165;
  }
  unint64_t v118 = ((v116 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v118 <= v117) {
    unint64_t v118 = v117;
  }
  if (v118 <= 8) {
    unint64_t v118 = 8;
  }
  if (v118 > 3) {
    goto LABEL_160;
  }
  unsigned int v119 = ((1 << (8 * v118)) + 1) >> (8 * v118);
  uint64_t v120 = 2;
  if (v119 > 0xFFFA) {
    uint64_t v120 = 4;
  }
  if (v119 <= 0xFA) {
LABEL_160:
  }
    uint64_t v120 = 1;
  uint64_t result = a1;
  *(void *)((unint64_t)&a1[v120 + 7 + v118] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v120 + 7 + v118] & 0xFFFFFFFFFFFFFFF8);
  return result;
}

uint64_t sub_24E5A2914(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v4;
  }
  unint64_t v71 = v4
      + ((((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
        + *(void *)(*(void *)(a3[3] - 8) + 64)
        + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v11 | 7;
  uint64_t v13 = ((v6 + 8) & ~v6) + (v8 | 7) + *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v13;
  }
  uint64_t v14 = (v13 + 1) & ~(v8 | 7);
  uint64_t v15 = ((v8 + 8) & ~v8) + v12 + *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v15;
  }
  uint64_t v16 = (v15 + v14 + 1) & ~v12;
  unint64_t v17 = ((v11 + 8) & ~v11)
      + *(void *)(v9 + 64)
      + (((v8 | v6 | v11) & 0xF8 ^ 0x1F8) & ((v8 | v6 | v11) + 8));
  if (!*(_DWORD *)(v10 + 84)) {
    ++v17;
  }
  unint64_t v18 = (v17 + v16 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 8;
  if (v18 + 8 <= v71) {
    unint64_t v19 = v71;
  }
  unint64_t v20 = ((v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v20 <= v19) {
    unint64_t v20 = v19;
  }
  if (v20 <= 8) {
    unint64_t v20 = 8;
  }
  char v21 = 8 * v20;
  if (v20 > 3)
  {
    int v22 = 6;
LABEL_17:
    unsigned int v23 = a2;
    char v24 = 8;
    goto LABEL_18;
  }
  unsigned int v26 = ((1 << v21) + 1) >> v21;
  if (v26 > 0xFFFA)
  {
    unsigned int v25 = 0x7FFFFFFF;
    unsigned int v23 = a2;
    if (v20 > 3) {
      goto LABEL_32;
    }
    goto LABEL_27;
  }
  int v22 = v26 + 5;
  if (v26 <= 0xFA) {
    goto LABEL_17;
  }
  char v24 = 16;
  unsigned int v23 = a2;
LABEL_18:
  unsigned int v25 = (1 << v24) - v22;
  if ((v25 & 0x80000000) != 0)
  {
    unsigned int v25 = 0x7FFFFFFF;
    if (v20 > 3) {
      goto LABEL_32;
    }
  }
  else if (v20 > 3)
  {
    goto LABEL_32;
  }
LABEL_27:
  unsigned int v27 = ((1 << v21) + 1) >> v21;
  uint64_t v28 = 2;
  if (v27 > 0xFFFA) {
    uint64_t v28 = 4;
  }
  if (v27 > 0xFA)
  {
    if (!v23) {
      return 0;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v28 = 1;
  if (!v23) {
    return 0;
  }
LABEL_33:
  if (v25 < v23)
  {
    unint64_t v29 = ((v20 + v28 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v30 = v29 & 0xFFFFFFF8;
    if ((v29 & 0xFFFFFFF8) != 0) {
      unsigned int v31 = 2;
    }
    else {
      unsigned int v31 = v23 - v25 + 1;
    }
    if (v31 >= 0x10000) {
      unsigned int v32 = 4;
    }
    else {
      unsigned int v32 = 2;
    }
    if (v31 < 0x100) {
      unsigned int v32 = 1;
    }
    if (v31 >= 2) {
      uint64_t v33 = v32;
    }
    else {
      uint64_t v33 = 0;
    }
    switch(v33)
    {
      case 1:
        int v34 = *((unsigned __int8 *)a1 + v29);
        if (!v34) {
          break;
        }
        goto LABEL_49;
      case 2:
        int v34 = *(unsigned __int16 *)((char *)a1 + v29);
        if (v34) {
          goto LABEL_49;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24E5A30C0);
      case 4:
        int v34 = *(_DWORD *)((char *)a1 + v29);
        if (!v34) {
          break;
        }
LABEL_49:
        int v35 = v34 - 1;
        if (v30)
        {
          int v35 = 0;
          int v36 = *(_DWORD *)a1;
        }
        else
        {
          int v36 = 0;
        }
        unsigned int v55 = v25 + (v36 | v35);
        return v55 + 1;
      default:
        break;
    }
  }
  if (!v25) {
    return 0;
  }
  if (v20 > 3)
  {
    int v37 = 6;
LABEL_55:
    char v38 = 8;
    goto LABEL_56;
  }
  unsigned int v43 = ((1 << v21) + 1) >> v21;
  if (v43 > 0xFFFA)
  {
LABEL_66:
    unsigned int v39 = 0x7FFFFFFF;
    if (v20 > 3) {
      goto LABEL_58;
    }
    goto LABEL_67;
  }
  int v37 = v43 + 5;
  if (v43 <= 0xFA) {
    goto LABEL_55;
  }
  char v38 = 16;
LABEL_56:
  unsigned int v39 = (1 << v38) - v37;
  if ((v39 & 0x80000000) != 0) {
    goto LABEL_66;
  }
  if (v20 > 3)
  {
LABEL_58:
    int v40 = 6;
LABEL_59:
    char v41 = 8;
    goto LABEL_60;
  }
LABEL_67:
  unsigned int v44 = ((1 << v21) + 1) >> v21;
  if (v44 > 0xFFFA)
  {
LABEL_70:
    if (v39 != 0x7FFFFFFF) {
      return 0;
    }
    goto LABEL_71;
  }
  int v40 = v44 + 5;
  if (v44 <= 0xFA) {
    goto LABEL_59;
  }
  char v41 = 16;
LABEL_60:
  int v42 = (1 << v41) - v40;
  if (v42 < 0) {
    goto LABEL_70;
  }
  if (v42 != v39) {
    return 0;
  }
LABEL_71:
  if (v20 > 3)
  {
    int v45 = 6;
LABEL_73:
    char v46 = 8;
    goto LABEL_74;
  }
  unsigned int v48 = ((1 << v21) + 1) >> v21;
  if (v48 > 0xFFFA) {
    goto LABEL_80;
  }
  int v45 = v48 + 5;
  if (v48 <= 0xFA) {
    goto LABEL_73;
  }
  char v46 = 16;
LABEL_74:
  unsigned int v47 = (1 << v46) - v45;
  if ((v47 & 0x80000000) == 0)
  {
    if (v20 > 3) {
      goto LABEL_84;
    }
    goto LABEL_81;
  }
LABEL_80:
  unsigned int v47 = 0x7FFFFFFF;
  if (v20 > 3)
  {
LABEL_84:
    uint64_t v50 = 1;
    goto LABEL_85;
  }
LABEL_81:
  unsigned int v49 = ((1 << v21) + 1) >> v21;
  uint64_t v50 = 2;
  if (v49 > 0xFFFA) {
    uint64_t v50 = 4;
  }
  if (v49 <= 0xFA) {
    goto LABEL_84;
  }
LABEL_85:
  if (!v39) {
    return 0;
  }
  unsigned int v51 = v39 - v47;
  if (v39 <= v47) {
    goto LABEL_107;
  }
  unint64_t v52 = v50 + v20;
  char v53 = 8 * (v50 + v20);
  if (v52 > 3)
  {
LABEL_88:
    int v54 = *((unsigned __int8 *)a1 + v52);
    goto LABEL_98;
  }
  unsigned int v57 = ((v51 + ~(-1 << v53)) >> v53) + 1;
  if (HIWORD(v57))
  {
    int v54 = *(_DWORD *)((char *)a1 + v52);
  }
  else
  {
    if (v57 <= 0xFF)
    {
      if (v57 < 2)
      {
LABEL_107:
        if (v47)
        {
          if (v20 <= 3)
          {
            unsigned int v67 = ((1 << v21) + 1) >> v21;
            if (v67 > 0xFFFA)
            {
              unsigned int v62 = *(_DWORD *)((char *)a1 + v20);
              unsigned int v63 = ~v62;
LABEL_117:
              unsigned int v66 = 0x7FFFFFFF;
LABEL_118:
              if (v66 > v63) {
                return -v62;
              }
              else {
                return 0;
              }
            }
            int v65 = v67 + 5;
            if (v67 > 0xFA)
            {
              int v69 = *(unsigned __int16 *)((char *)a1 + v20);
              unsigned int v62 = v69 | 0xFFFF0000;
              unsigned int v63 = v69 ^ 0xFFFF;
              char v64 = 16;
            }
            else
            {
              int v68 = *((unsigned __int8 *)a1 + v20);
              unsigned int v62 = v68 | 0xFFFFFF00;
              unsigned int v63 = v68 ^ 0xFF;
              char v64 = 8;
            }
          }
          else
          {
            int v61 = *((unsigned __int8 *)a1 + v20);
            unsigned int v62 = v61 | 0xFFFFFF00;
            unsigned int v63 = v61 ^ 0xFF;
            char v64 = 8;
            int v65 = 6;
          }
          unsigned int v66 = (1 << v64) - v65;
          if ((v66 & 0x80000000) == 0) {
            goto LABEL_118;
          }
          goto LABEL_117;
        }
        return 0;
      }
      goto LABEL_88;
    }
    int v54 = *(unsigned __int16 *)((char *)a1 + v52);
  }
LABEL_98:
  if (!v54) {
    goto LABEL_107;
  }
  int v58 = (v54 - 1) << v53;
  if (v52 > 3) {
    int v58 = 0;
  }
  if (v52)
  {
    if (v52 <= 3) {
      int v59 = v52;
    }
    else {
      int v59 = 4;
    }
    switch(v59)
    {
      case 2:
        int v60 = *a1;
        break;
      case 3:
        int v60 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v60 = *(_DWORD *)a1;
        break;
      default:
        int v60 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v60 = 0;
  }
  unsigned int v55 = v47 + (v60 | v58);
  return v55 + 1;
}

void sub_24E5A30E4(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v4 = *(void *)(a4[4] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v5;
  }
  unint64_t v65 = v5
      + ((((*(void *)(*(void *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80))
        + *(void *)(*(void *)(a4[3] - 8) + 64)
        + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v12 | 7;
  uint64_t v14 = ((v7 + 8) & ~v7) + (v9 | 7) + *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v14;
  }
  uint64_t v15 = (v14 + 1) & ~(v9 | 7);
  uint64_t v16 = ((v9 + 8) & ~v9) + v13 + *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v16;
  }
  uint64_t v17 = (v16 + v15 + 1) & ~v13;
  unint64_t v18 = ((v12 + 8) & ~v12)
      + *(void *)(v10 + 64)
      + (((v9 | v7 | v12) & 0xF8 ^ 0x1F8) & ((v9 | v7 | v12) + 8));
  if (!*(_DWORD *)(v11 + 84)) {
    ++v18;
  }
  unint64_t v19 = (v18 + v17 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = v19 + 8;
  if (v19 + 8 <= v65) {
    unint64_t v20 = v65;
  }
  unint64_t v21 = ((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v21 <= v20) {
    unint64_t v21 = v20;
  }
  if (v21 <= 8) {
    unint64_t v21 = 8;
  }
  char v22 = 8 * v21;
  if (v21 > 3)
  {
    int v23 = 6;
    goto LABEL_17;
  }
  unsigned int v31 = ((1 << v22) + 1) >> v22;
  if (v31 <= 0xFFFA)
  {
    int v23 = v31 + 5;
    if (v31 > 0xFA)
    {
      char v27 = 16;
      char v24 = a1;
      unsigned int v25 = a3;
      unsigned int v26 = a2;
LABEL_18:
      unsigned int v28 = (1 << v27) - v23;
      if ((v28 & 0x80000000) != 0) {
        unsigned int v28 = 0x7FFFFFFF;
      }
      if (v21 > 3) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
LABEL_17:
    char v24 = a1;
    unsigned int v25 = a3;
    unsigned int v26 = a2;
    char v27 = 8;
    goto LABEL_18;
  }
  unsigned int v28 = 0x7FFFFFFF;
  char v24 = a1;
  unsigned int v25 = a3;
  unsigned int v26 = a2;
  if (v21 > 3)
  {
LABEL_29:
    uint64_t v30 = 1;
    goto LABEL_30;
  }
LABEL_21:
  unsigned int v29 = ((1 << v22) + 1) >> v22;
  uint64_t v30 = 2;
  if (v29 > 0xFFFA) {
    uint64_t v30 = 4;
  }
  if (v29 <= 0xFA) {
    goto LABEL_29;
  }
LABEL_30:
  size_t v32 = ((v21 + v30 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v28 < v25)
  {
    if (((v21 + v30 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v33 = v25 - v28 + 1;
    }
    else {
      unsigned int v33 = 2;
    }
    if (v33 >= 0x10000) {
      int v34 = 4;
    }
    else {
      int v34 = 2;
    }
    if (v33 < 0x100) {
      int v34 = 1;
    }
    if (v33 >= 2) {
      int v35 = v34;
    }
    else {
      int v35 = 0;
    }
    int v36 = v26 - v28;
    if (v26 <= v28) {
      goto LABEL_43;
    }
LABEL_47:
    if (v32) {
      int v37 = 1;
    }
    else {
      int v37 = v36;
    }
    if (v32)
    {
      int v38 = ~v28 + v26;
      bzero(v24, v32);
      *(_DWORD *)char v24 = v38;
    }
    switch(v35)
    {
      case 1:
        v24[v32] = v37;
        break;
      case 2:
        *(_WORD *)&v24[v32] = v37;
        break;
      case 3:
LABEL_130:
        __break(1u);
        JUMPOUT(0x24E5A38FCLL);
      case 4:
        *(_DWORD *)&v24[v32] = v37;
        break;
      default:
        return;
    }
    return;
  }
  int v35 = 0;
  int v36 = v26 - v28;
  if (v26 > v28) {
    goto LABEL_47;
  }
LABEL_43:
  switch(v35)
  {
    case 1:
      v24[v32] = 0;
      if (!v26) {
        return;
      }
      goto LABEL_56;
    case 2:
      *(_WORD *)&v24[v32] = 0;
      if (!v26) {
        return;
      }
      goto LABEL_56;
    case 3:
      goto LABEL_130;
    case 4:
      *(_DWORD *)&v24[v32] = 0;
      goto LABEL_55;
    default:
LABEL_55:
      if (!v26) {
        return;
      }
LABEL_56:
      if (v21 > 3)
      {
        int v39 = 6;
LABEL_58:
        char v40 = 8;
        goto LABEL_59;
      }
      unsigned int v48 = ((1 << v22) + 1) >> v22;
      if (v48 > 0xFFFA)
      {
LABEL_74:
        unsigned int v41 = 0x7FFFFFFF;
        if (v21 > 3) {
          goto LABEL_61;
        }
        goto LABEL_75;
      }
      int v39 = v48 + 5;
      if (v48 <= 0xFA) {
        goto LABEL_58;
      }
      char v40 = 16;
LABEL_59:
      unsigned int v41 = (1 << v40) - v39;
      if ((v41 & 0x80000000) != 0) {
        goto LABEL_74;
      }
      if (v21 > 3)
      {
LABEL_61:
        int v42 = 6;
LABEL_62:
        char v43 = 8;
        goto LABEL_63;
      }
LABEL_75:
      unsigned int v49 = ((1 << v22) + 1) >> v22;
      if (v49 > 0xFFFA) {
        goto LABEL_78;
      }
      int v42 = v49 + 5;
      if (v49 <= 0xFA) {
        goto LABEL_62;
      }
      char v43 = 16;
LABEL_63:
      int v44 = (1 << v43) - v42;
      if ((v44 & 0x80000000) == 0)
      {
        if (v44 == v41) {
          goto LABEL_65;
        }
        goto LABEL_79;
      }
LABEL_78:
      if (v41 == 0x7FFFFFFF)
      {
LABEL_65:
        if (v21 <= 3)
        {
          unsigned int v52 = ((1 << v22) + 1) >> v22;
          if (v52 > 0xFFFA) {
            goto LABEL_92;
          }
          int v45 = v52 + 5;
          if (v52 > 0xFA)
          {
            char v46 = 16;
LABEL_68:
            unsigned int v47 = (1 << v46) - v45;
            if ((v47 & 0x80000000) == 0)
            {
              if (v21 > 3) {
                goto LABEL_96;
              }
              goto LABEL_93;
            }
LABEL_92:
            unsigned int v47 = 0x7FFFFFFF;
            if (v21 > 3)
            {
LABEL_96:
              uint64_t v54 = 1;
LABEL_97:
              size_t v55 = v54 + v21;
              BOOL v56 = v41 >= v47;
              unsigned int v57 = v41 - v47;
              if (v57 != 0 && v56)
              {
                if (v55 <= 3)
                {
                  unsigned int v61 = ((v57 + ~(-1 << (8 * v55))) >> (8 * v55)) + 1;
                  if (HIWORD(v61))
                  {
                    int v58 = 4;
                  }
                  else if (v61 >= 0x100)
                  {
                    int v58 = 2;
                  }
                  else
                  {
                    int v58 = v61 > 1;
                  }
                }
                else
                {
                  int v58 = 1;
                }
              }
              else
              {
                int v58 = 0;
              }
              if (v47 < v26)
              {
                unsigned int v59 = ~v47 + v26;
                if (v55 < 4)
                {
                  int v60 = (v59 >> (8 * v55)) + 1;
                  if (v55)
                  {
                    int v62 = v59 & ~(-1 << (8 * v55));
                    bzero(v24, v55);
                    if (v55 == 3)
                    {
                      *(_WORD *)char v24 = v62;
                      v24[2] = BYTE2(v62);
                    }
                    else if (v55 == 2)
                    {
                      *(_WORD *)char v24 = v62;
                    }
                    else
                    {
                      *char v24 = v62;
                    }
                  }
                }
                else
                {
                  bzero(v24, v55);
                  *(_DWORD *)char v24 = v59;
                  int v60 = 1;
                }
                switch(v58)
                {
                  case 1:
                    v24[v55] = v60;
                    return;
                  case 2:
                    *(_WORD *)&v24[v55] = v60;
                    return;
                  case 3:
                    goto LABEL_130;
                  case 4:
                    *(_DWORD *)&v24[v55] = v60;
                    return;
                  default:
                    return;
                }
              }
              switch(v58)
              {
                case 1:
                  v24[v55] = 0;
                  goto LABEL_116;
                case 2:
                  *(_WORD *)&v24[v55] = 0;
                  goto LABEL_116;
                case 3:
                  goto LABEL_130;
                case 4:
                  *(_DWORD *)&v24[v55] = 0;
                  goto LABEL_116;
                default:
LABEL_116:
                  int v63 = -v26;
                  if (v21 > 3) {
                    goto LABEL_119;
                  }
                  unsigned int v64 = ((1 << v22) + 1) >> v22;
                  if (v64 > 0xFFFA)
                  {
                    *(_DWORD *)&v24[v21] = v63;
                  }
                  else if (v64 > 0xFA)
                  {
                    *(_WORD *)&v24[v21] = v63;
                  }
                  else
                  {
LABEL_119:
                    v24[v21] = v63;
                  }
                  break;
              }
              return;
            }
LABEL_93:
            unsigned int v53 = ((1 << v22) + 1) >> v22;
            uint64_t v54 = 2;
            if (v53 > 0xFFFA) {
              uint64_t v54 = 4;
            }
            if (v53 > 0xFA) {
              goto LABEL_97;
            }
            goto LABEL_96;
          }
        }
        else
        {
          int v45 = 6;
        }
        char v46 = 8;
        goto LABEL_68;
      }
LABEL_79:
      if (v21 > 3) {
        goto LABEL_83;
      }
      unsigned int v50 = ((1 << v22) + 1) >> v22;
      uint64_t v51 = 2;
      if (v50 > 0xFFFA) {
        uint64_t v51 = 4;
      }
      if (v50 <= 0xFA) {
LABEL_83:
      }
        uint64_t v51 = 1;
      *(void *)((unint64_t)&v24[v21 + 7 + v51] & 0xFFFFFFFFFFFFFFF8) = v26 - 1;
      return;
  }
}

uint64_t type metadata accessor for CombineLatestStateMachine()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CombineLatestStateMachine.State()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5A397C(void *a1)
{
  uint64_t v2 = swift_checkMetadataState();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = swift_checkMetadataState();
    uint64_t v5 = (uint64_t *)v4;
    if (v6 > 0x3F)
    {
      return v4;
    }
    else
    {
      uint64_t v7 = (void *)a1[4];
      uint64_t v8 = sub_24E864388();
      if (v9 > 0x3F) {
        return v8;
      }
      swift_getTupleTypeLayout3();
      uint64_t v30 = &v29;
      uint64_t v10 = a1[5];
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v12 = a1[6];
      uint64_t v13 = a1[7];
      uint64_t v21 = v2;
      char v22 = v5;
      int v23 = v7;
      uint64_t v24 = AssociatedTypeWitness;
      uint64_t v25 = v10;
      uint64_t v26 = v12;
      uint64_t v27 = v13;
      uint64_t v8 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
      if (v14 > 0x3F) {
        return v8;
      }
      uint64_t v21 = v2;
      char v22 = v5;
      int v23 = v7;
      uint64_t v24 = swift_getAssociatedTypeWitness();
      uint64_t v25 = v10;
      uint64_t v26 = v12;
      uint64_t v27 = v13;
      uint64_t v8 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
      if (v15 > 0x3F)
      {
        return v8;
      }
      else
      {
        uint64_t v21 = v2;
        char v22 = v5;
        int v23 = v7;
        uint64_t v24 = swift_getAssociatedTypeWitness();
        uint64_t v25 = v10;
        uint64_t v26 = v12;
        uint64_t v27 = v13;
        uint64_t v2 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
        if (v16 <= 0x3F)
        {
          swift_getTupleTypeLayout3();
          uint64_t v17 = MEMORY[0x263F8CF88] + 64;
          swift_getTupleTypeLayout3();
          unsigned int v31 = &v28;
          uint64_t v21 = v17;
          swift_getTupleTypeLayout3();
          char v22 = &v19;
          int v23 = &unk_24E867710;
          uint64_t v24 = v17;
          swift_getTupleTypeLayout();
          size_t v32 = &v20;
          uint64_t v33 = v17;
          int v34 = &unk_24E867728;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return v2;
}

char *sub_24E5A3CCC(char *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v133 = *(void *)(v4 - 8);
  uint64_t v5 = a3[3];
  uint64_t v6 = a3[4];
  uint64_t v98 = *(void *)(v5 - 8);
  int v130 = *(_DWORD *)(v98 + 80);
  unint64_t __dst = *(void *)(v133 + 64) + v130;
  uint64_t v105 = *(void *)(v6 - 8);
  int v127 = *(_DWORD *)(v105 + 80);
  uint64_t v95 = *(void *)(v98 + 64);
  size_t v7 = *(void *)(v105 + 64);
  if (!*(_DWORD *)(v105 + 84)) {
    ++v7;
  }
  size_t __n = v7;
  unint64_t v118 = v7
       + ((v95
         + *(_DWORD *)(v105 + 80)
         + (__dst & ~(unint64_t)*(_DWORD *)(v98 + 80))) & ~(unint64_t)*(_DWORD *)(v105 + 80));
  uint64_t v99 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v116 = *(void *)(AssociatedTypeWitness - 8);
  int v124 = *(_DWORD *)(v116 + 80);
  uint64_t v102 = v5;
  uint64_t v112 = swift_getAssociatedTypeWitness();
  uint64_t v113 = *(void *)(v112 - 8);
  int v121 = *(_DWORD *)(v113 + 80);
  uint64_t v108 = v6;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = v121 | 7;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v11 | 7;
  unint64_t v13 = v121 | (unint64_t)v124 | v11;
  uint64_t v14 = v116;
  uint64_t v15 = v13 | 7;
  uint64_t v16 = v124 + 8;
  unint64_t v17 = v16 & ~(unint64_t)v124;
  if (*(_DWORD *)(v116 + 84)) {
    size_t v18 = *(void *)(v116 + 64);
  }
  else {
    size_t v18 = *(void *)(v116 + 64) + 1;
  }
  unint64_t v19 = v17 + 1;
  uint64_t v20 = v121 + 8;
  unint64_t v21 = v20 & ~(unint64_t)v121;
  uint64_t v117 = v113;
  if (*(_DWORD *)(v113 + 84)) {
    size_t v22 = *(void *)(v113 + 64);
  }
  else {
    size_t v22 = *(void *)(v113 + 64) + 1;
  }
  unint64_t v23 = v21 + 1;
  uint64_t v24 = (v21 + 1 + v12 + v22 + ((v17 + 1 + v9 + v18) & ~v9)) & ~v12;
  uint64_t v25 = v11 + 8;
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v26 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  else {
    uint64_t v26 = *(void *)(*(void *)(v8 - 8) + 64) + 1;
  }
  uint64_t v27 = ((v11 + 8) & ~v11) + v26 + v24 + 1;
  unint64_t v28 = (v27 + ((v13 + 8) & ~(v13 | 7)) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = v28 + 8;
  if (v28 + 8 <= v118) {
    unint64_t v29 = v118;
  }
  unint64_t v30 = ((v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v30 <= v29) {
    unint64_t v30 = v29;
  }
  if (v30 <= 8) {
    uint64_t v31 = 8;
  }
  else {
    uint64_t v31 = v30;
  }
  if (v31 > 3) {
    goto LABEL_23;
  }
  unsigned int v32 = ((1 << (8 * v31)) + 1) >> (8 * v31);
  uint64_t v33 = 2;
  if (v32 > 0xFFFA) {
    uint64_t v33 = 4;
  }
  if (v32 <= 0xFA) {
LABEL_23:
  }
    uint64_t v33 = 1;
  unint64_t v34 = v33 + v31;
  int v35 = *(_DWORD *)(v133 + 80);
  unint64_t v36 = v13 | ((v127 | v130) | v35) & 0xF8 | 7u;
  if (v34 > 0x18 || ((v127 | v130 | v124 | v121 | *(_DWORD *)(v10 + 80) | v35) & 0x100000) != 0 || v36 != 7)
  {
    int v39 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    char v40 = &v39[(v36 + 16) & ~v36];
    swift_retain();
    return v40;
  }
  if (v31 > 3) {
    goto LABEL_36;
  }
  unsigned int v42 = ((1 << (8 * v31)) + 1) >> (8 * v31);
  if (v42 > 0xFFFA)
  {
    unsigned int v43 = *(_DWORD *)&a2[v31];
    unsigned int v44 = v43 - 5;
    if (v43 < 5) {
      goto LABEL_54;
    }
    goto LABEL_41;
  }
  if (v42 > 0xFA)
  {
    unsigned int v43 = *(unsigned __int16 *)&a2[v31];
    unsigned int v44 = v43 - 5;
    if (v43 < 5) {
      goto LABEL_54;
    }
  }
  else
  {
LABEL_36:
    unsigned int v43 = a2[v31];
    unsigned int v44 = v43 - 5;
    if (v43 < 5) {
      goto LABEL_54;
    }
  }
LABEL_41:
  if (v31 <= 3) {
    uint64_t v45 = v31;
  }
  else {
    uint64_t v45 = 4;
  }
  switch(v45)
  {
    case 1:
      int v46 = *a2;
      if (v31 < 4) {
        goto LABEL_52;
      }
      goto LABEL_53;
    case 2:
      int v46 = *(unsigned __int16 *)a2;
      if (v31 >= 4) {
        goto LABEL_53;
      }
      goto LABEL_52;
    case 3:
      int v46 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v31 >= 4) {
        goto LABEL_53;
      }
      goto LABEL_52;
    case 4:
      int v46 = *(_DWORD *)a2;
      if (v31 < 4) {
LABEL_52:
      }
        v46 |= v44 << (8 * v31);
LABEL_53:
      unsigned int v43 = v46 + 5;
      break;
    default:
      break;
  }
LABEL_54:
  uint64_t v47 = ~v15;
  unint64_t v48 = ~(unint64_t)v124;
  uint64_t v49 = ~v9;
  uint64_t v50 = ~v11;
  switch(v43)
  {
    case 0u:
      char v40 = a1;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v133 + 16))(a1, a2, v99);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v98 + 16))((unint64_t)&a1[__dst] & ~(unint64_t)v130, (unint64_t)&a2[__dst] & ~(unint64_t)v130, v102);
      uint64_t v51 = (void *)((((unint64_t)&a1[__dst] & ~(unint64_t)v130)
                    + v95
                    + v127) & ~(unint64_t)v127);
      unsigned int v52 = (const void *)((((unint64_t)&a2[__dst] & ~(unint64_t)v130)
                          + v95
                          + v127) & ~(unint64_t)v127);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v105 + 48))(v52, 1, v108))
      {
        memcpy(v51, v52, __n);
        if (v31 > 3) {
          goto LABEL_79;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v105 + 16))(v51, v52, v108);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v51, 0, 1, v108);
        if (v31 > 3) {
          goto LABEL_79;
        }
      }
      unsigned int v67 = ((1 << (8 * v31)) + 1) >> (8 * v31);
      if (v67 > 0xFFFA)
      {
        *(_DWORD *)&a1[v31] = 0;
        return v40;
      }
      if (v67 > 0xFA)
      {
        *(_WORD *)&a1[v31] = 0;
        return v40;
      }
LABEL_79:
      a1[v31] = 0;
      break;
    case 1u:
      unint64_t v101 = ~(unint64_t)v121;
      uint64_t v104 = ~v12;
      uint64_t v107 = v50;
      unint64_t v110 = v19;
      uint64_t v115 = v121 | 7;
      unint64_t v120 = v23;
      uint64_t v123 = v25;
      size_t v126 = v26;
      uint64_t v129 = v27;
      uint64_t v132 = *(void *)(v8 - 8);
      uint64_t v135 = v8;
      *(void *)a1 = *(void *)a2;
      int v63 = (void *)((unint64_t)&a1[v15 + 8] & v47);
      unsigned int v64 = (void *)((unint64_t)&a2[v15 + 8] & v47);
      *int v63 = *v64;
      unint64_t v138 = (unint64_t)v63;
      __dstb = (void *)(((unint64_t)v63 + v16) & v48);
      unint64_t v97 = (unint64_t)v64;
      unint64_t v65 = (const void *)(((unint64_t)v64 + v16) & v48);
      unsigned int v66 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
      swift_retain();
      if (v66(v65, 1, AssociatedTypeWitness))
      {
        memcpy(__dstb, v65, v18);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dstb, v65, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dstb, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__dstb + v18) = *((unsigned char *)v65 + v18);
      uint64_t v72 = (void *)((v138 + v115 + v110 + v18) & v49);
      size_t v73 = (void *)((v97 + v115 + v110 + v18) & v49);
      void *v72 = *v73;
      size_t v74 = (void *)(((unint64_t)v72 + v20) & v101);
      size_t v75 = (const void *)(((unint64_t)v73 + v20) & v101);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v117 + 48))(v75, 1, v112))
      {
        memcpy(v74, v75, v22);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v117 + 16))(v74, v75, v112);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(v74, 0, 1, v112);
      }
      *((unsigned char *)v74 + v22) = *((unsigned char *)v75 + v22);
      size_t v81 = (void *)(((unint64_t)v72 + v12 + v120 + v22) & v104);
      uint64_t v82 = (void *)(((unint64_t)v73 + v12 + v120 + v22) & v104);
      *size_t v81 = *v82;
      uint64_t v83 = (void *)(((unint64_t)v81 + v123) & v107);
      size_t v84 = (const void *)(((unint64_t)v82 + v123) & v107);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v132 + 48))(v84, 1, v135))
      {
        size_t v85 = v126;
        memcpy(v83, v84, v126);
        char v40 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v132 + 16))(v83, v84, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v83, 0, 1, v135);
        char v40 = a1;
        size_t v85 = v126;
      }
      *((unsigned char *)v83 + v85) = *((unsigned char *)v84 + v85);
      *(void *)(((v138 | 7) + v129) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v97 | 7) + v129) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v31 <= 3)
      {
        int v89 = 1;
        unsigned int v90 = ((1 << (8 * v31)) + 1) >> (8 * v31);
        if (v90 > 0xFFFA) {
          goto LABEL_106;
        }
        if (v90 > 0xFA) {
          goto LABEL_111;
        }
      }
      v40[v31] = 1;
      return v40;
    case 2u:
      unint64_t v100 = ~(unint64_t)v121;
      uint64_t v103 = ~v12;
      uint64_t v106 = v50;
      unint64_t v109 = v19;
      uint64_t v114 = v121 | 7;
      unint64_t v119 = v23;
      uint64_t v122 = v25;
      size_t v125 = v26;
      uint64_t v128 = v27;
      uint64_t v131 = *(void *)(v8 - 8);
      uint64_t v134 = v8;
      *(void *)a1 = *(void *)a2;
      unsigned int v53 = (void *)((unint64_t)&a1[v15 + 8] & v47);
      uint64_t v54 = (void *)((unint64_t)&a2[v15 + 8] & v47);
      *unsigned int v53 = *v54;
      unint64_t v137 = (unint64_t)v53;
      __dsta = (void *)(((unint64_t)v53 + v16) & v48);
      unint64_t v96 = (unint64_t)v54;
      size_t v55 = (const void *)(((unint64_t)v54 + v16) & v48);
      BOOL v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
      swift_retain();
      if (v56(v55, 1, AssociatedTypeWitness))
      {
        memcpy(__dsta, v55, v18);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dsta, v55, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dsta, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__dsta + v18) = *((unsigned char *)v55 + v18);
      int v68 = (void *)((v137 + v114 + v109 + v18) & v49);
      int v69 = (void *)((v96 + v114 + v109 + v18) & v49);
      *int v68 = *v69;
      uint64_t v70 = (void *)(((unint64_t)v68 + v20) & v100);
      unint64_t v71 = (const void *)(((unint64_t)v69 + v20) & v100);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v117 + 48))(v71, 1, v112))
      {
        memcpy(v70, v71, v22);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v117 + 16))(v70, v71, v112);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(v70, 0, 1, v112);
      }
      *((unsigned char *)v70 + v22) = *((unsigned char *)v71 + v22);
      unsigned int v76 = (void *)(((unint64_t)v68 + v12 + v119 + v22) & v103);
      size_t v77 = (void *)(((unint64_t)v69 + v12 + v119 + v22) & v103);
      *unsigned int v76 = *v77;
      uint64_t v78 = (void *)(((unint64_t)v76 + v122) & v106);
      unsigned int v79 = (const void *)(((unint64_t)v77 + v122) & v106);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v131 + 48))(v79, 1, v134))
      {
        size_t v80 = v125;
        memcpy(v78, v79, v125);
        char v40 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v131 + 16))(v78, v79, v134);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v131 + 56))(v78, 0, 1, v134);
        char v40 = a1;
        size_t v80 = v125;
      }
      *((unsigned char *)v78 + v80) = *((unsigned char *)v79 + v80);
      size_t v86 = (void *)(((v137 | 7) + v128) & 0xFFFFFFFFFFFFFFF8);
      BOOL v87 = (void *)(((v96 | 7) + v128) & 0xFFFFFFFFFFFFFFF8);
      void *v86 = *v87;
      *(void *)(((unint64_t)v86 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v87 + 15) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v31 > 3) {
        goto LABEL_96;
      }
      unsigned int v88 = ((1 << (8 * v31)) + 1) >> (8 * v31);
      if (v88 > 0xFFFA)
      {
        int v89 = 2;
LABEL_106:
        *(_DWORD *)&v40[v31] = v89;
      }
      else
      {
        if (v88 <= 0xFA)
        {
LABEL_96:
          v40[v31] = 2;
          return v40;
        }
        LOWORD(v89) = 2;
LABEL_111:
        *(_WORD *)&v40[v31] = v89;
      }
      return v40;
    case 3u:
      char v40 = a1;
      *(void *)a1 = *(void *)a2;
      swift_retain();
      if (v31 <= 3)
      {
        unsigned int v57 = ((1 << (8 * v31)) + 1) >> (8 * v31);
        if (v57 > 0xFFFA)
        {
          *(_DWORD *)&a1[v31] = 3;
          return v40;
        }
        if (v57 > 0xFA)
        {
          *(_WORD *)&a1[v31] = 3;
          return v40;
        }
      }
      a1[v31] = 3;
      return v40;
    case 4u:
      uint64_t v58 = *(void *)a2;
      id v59 = *(id *)a2;
      char v40 = a1;
      *(void *)a1 = v58;
      if (v31 <= 3)
      {
        unsigned int v60 = ((1 << (8 * v31)) + 1) >> (8 * v31);
        if (v60 > 0xFFFA)
        {
          *(_DWORD *)&a1[v31] = 4;
          return v40;
        }
        if (v60 > 0xFA)
        {
          *(_WORD *)&a1[v31] = 4;
          return v40;
        }
      }
      a1[v31] = 4;
      return v40;
    default:
      if (v31 > 3) {
        goto LABEL_72;
      }
      unsigned int v61 = ((1 << (8 * v31)) + 1) >> (8 * v31);
      uint64_t v62 = 2;
      if (v61 > 0xFFFA) {
        uint64_t v62 = 4;
      }
      if (v61 <= 0xFA) {
LABEL_72:
      }
        uint64_t v62 = 1;
      char v40 = a1;
      memcpy(a1, a2, v62 + v31);
      return v40;
  }
  return v40;
}

void sub_24E5A4AF8(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = a2[3];
  uint64_t v53 = *(void *)(a2[2] - 8);
  uint64_t v3 = *(void *)(v53 + 64);
  uint64_t v54 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v54 + 80);
  uint64_t v51 = v3 + v4;
  uint64_t v49 = v4;
  uint64_t v5 = a2[4];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v52 = *(void *)(v54 + 64);
  uint64_t v50 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v7 = (v52 + v50 + ((v3 + v4) & ~v4)) & ~v50;
  uint64_t v59 = v6;
  uint64_t v8 = *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v8;
  }
  unint64_t v73 = v8 + v7;
  uint64_t v55 = a2[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v71 + 80);
  uint64_t v56 = v2;
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v68 = *(void *)(v67 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v68 + 80);
  uint64_t v11 = v10 | 7;
  uint64_t v12 = v10 | v9;
  uint64_t v62 = v5;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = v10 | 7;
  uint64_t v15 = v10;
  uint64_t v16 = v9;
  uint64_t v17 = *(void *)(v13 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = v18 | 7;
  uint64_t v20 = v10 | v9 | v18 | 7;
  uint64_t v21 = v16 + 8;
  uint64_t v65 = v71;
  uint64_t v22 = ((v16 + 8) & ~v16) + *(void *)(v71 + 64);
  if (!*(_DWORD *)(v71 + 84)) {
    ++v22;
  }
  uint64_t v23 = v22 + v11 + 1;
  uint64_t v72 = v68;
  uint64_t v24 = ((v15 + 8) & ~v15) + *(void *)(v68 + 64);
  if (!*(_DWORD *)(v68 + 84)) {
    ++v24;
  }
  uint64_t v25 = ((v18 + 8) & ~v18) + *(void *)(*(void *)(v13 - 8) + 64);
  if (!*(_DWORD *)(v17 + 84)) {
    ++v25;
  }
  unint64_t v26 = (v25 + ((v24 + v19 + 1 + (v23 & ~v11)) & ~v19) + 1 + (((v12 | v18) + 8) & ~v20) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = v26 + 8;
  if (v26 + 8 <= v73) {
    unint64_t v27 = v73;
  }
  unint64_t v28 = ((v26 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v28 <= v27) {
    unint64_t v28 = v27;
  }
  if (v28 <= 8) {
    unint64_t v28 = 8;
  }
  if (v28 > 3) {
    goto LABEL_18;
  }
  unsigned int v29 = ((1 << (8 * v28)) + 1) >> (8 * v28);
  if (v29 <= 0xFFFA)
  {
    if (v29 > 0xFA)
    {
      unsigned int v30 = *(unsigned __int16 *)&a1[v28];
      unsigned int v31 = v30 - 5;
      if (v30 < 5) {
        goto LABEL_33;
      }
      goto LABEL_23;
    }
LABEL_18:
    unsigned int v30 = a1[v28];
    unsigned int v31 = v30 - 5;
    if (v30 < 5) {
      goto LABEL_33;
    }
LABEL_23:
    if (v28 <= 3) {
      uint64_t v32 = v28;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *a1;
        if (v28 >= 4) {
          goto LABEL_58;
        }
        goto LABEL_32;
      case 2:
        int v33 = *(unsigned __int16 *)a1;
        if (v28 >= 4) {
          goto LABEL_58;
        }
        goto LABEL_32;
      case 3:
        int v33 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v28 < 4) {
          goto LABEL_32;
        }
        goto LABEL_58;
      case 4:
        int v33 = *(_DWORD *)a1;
        if (v28 < 4)
        {
LABEL_32:
          unsigned int v30 = (v33 | (v31 << (8 * v28))) + 5;
          goto LABEL_33;
        }
LABEL_58:
        unsigned int v30 = v33 + 5;
        if (v30 > 4) {
          return;
        }
        goto LABEL_33;
      default:
        goto LABEL_33;
    }
  }
  unsigned int v30 = *(_DWORD *)&a1[v28];
  unsigned int v31 = v30 - 5;
  if (v30 >= 5) {
    goto LABEL_23;
  }
LABEL_33:
  uint64_t v34 = ~v20;
  uint64_t v35 = ~v16;
  uint64_t v36 = ~v14;
  uint64_t v37 = ~v15;
  uint64_t v38 = ~v19;
  switch(v30)
  {
    case 0u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v53 + 8))(a1, v55);
      unint64_t v39 = (unint64_t)&a1[v51] & ~v49;
      (*(void (**)(unint64_t, uint64_t))(v54 + 8))(v39, v56);
      unint64_t v40 = (v39 + v52 + v50) & ~v50;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v59 + 48))(v40, 1, v62))
      {
        unsigned int v41 = *(void (**)(unint64_t, uint64_t))(v59 + 8);
        v41(v40, v62);
      }
      return;
    case 1u:
      uint64_t v57 = ~v18;
      uint64_t v60 = v15 + 8;
      uint64_t v63 = v24 + v19 + 1;
      uint64_t v69 = v18 + 8;
      uint64_t v74 = v13;
      swift_release();
      uint64_t v42 = (unint64_t)&a1[v20 + 8] & v34;
      uint64_t v43 = (v21 + v42) & v35;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v43, 1, AssociatedTypeWitness)) {
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v43, AssociatedTypeWitness);
      }
      uint64_t v44 = (v23 + v42) & v36;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))((v60 + v44) & v37, 1, v67)) {
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))((v60 + v44) & v37, v67);
      }
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))((v69 + ((v63 + v44) & v38)) & v57, 1, v74))(*(void (**)(uint64_t, uint64_t))(v17 + 8))((v69 + ((v63 + v44) & v38)) & v57, v74); {
      goto LABEL_51;
      }
    case 2u:
      uint64_t v58 = ~v18;
      uint64_t v61 = v15 + 8;
      uint64_t v64 = v24 + v19 + 1;
      uint64_t v70 = v18 + 8;
      uint64_t v75 = v13;
      swift_release();
      uint64_t v45 = (unint64_t)&a1[v20 + 8] & v34;
      uint64_t v46 = (v21 + v45) & v35;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v46, 1, AssociatedTypeWitness)) {
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v46, AssociatedTypeWitness);
      }
      uint64_t v47 = (v23 + v45) & v36;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))((v61 + v47) & v37, 1, v67)) {
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))((v61 + v47) & v37, v67);
      }
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))((v70 + ((v64 + v47) & v38)) & v58, 1, v75))(*(void (**)(uint64_t, uint64_t))(v17 + 8))((v70 + ((v64 + v47) & v38)) & v58, v75); {
      goto LABEL_51;
      }
    case 3u:
LABEL_51:
      swift_release();
      break;
    case 4u:
      unint64_t v48 = *(void **)a1;

      break;
    default:
      return;
  }
}

void *sub_24E5A536C(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v108 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v108 + 64);
  size_t v6 = a3[3];
  size_t v7 = a3[4];
  uint64_t v114 = *(void *)(v6 - 8);
  uint64_t v101 = *(unsigned __int8 *)(v114 + 80);
  uint64_t v104 = v5 + v101;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v111 = *(void *)(v114 + 64);
  uint64_t v105 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v9 = (v111 + v105 + ((v5 + v101) & ~v101)) & ~v105;
  uint64_t v123 = v8;
  size_t v10 = *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v10;
  }
  size_t __n = v10;
  unint64_t v135 = v10 + v9;
  uint64_t v117 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v134 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(unsigned __int8 *)(v134 + 80);
  size_t v120 = v6;
  uint64_t v130 = swift_getAssociatedTypeWitness();
  uint64_t v131 = *(void *)(v130 - 8);
  uint64_t v12 = v131;
  uint64_t v13 = *(unsigned __int8 *)(v131 + 80);
  size_t v126 = v7;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = v13 | 7;
  uint64_t v16 = v11;
  uint64_t v17 = *(void *)(v14 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = v18 | 7;
  uint64_t v20 = v13 | v11 | v18 | 7;
  uint64_t v21 = v11 + 8;
  uint64_t v22 = (v11 + 8) & ~v11;
  if (*(_DWORD *)(v134 + 84)) {
    size_t v23 = *(void *)(v134 + 64);
  }
  else {
    size_t v23 = *(void *)(v134 + 64) + 1;
  }
  uint64_t v24 = v22 + 1;
  uint64_t v25 = (v22 + 1 + v15 + v23) & ~v15;
  uint64_t v26 = v13 + 8;
  uint64_t v27 = (v13 + 8) & ~v13;
  unint64_t v28 = a2;
  if (*(_DWORD *)(v131 + 84)) {
    uint64_t v29 = *(void *)(v131 + 64);
  }
  else {
    uint64_t v29 = *(void *)(v131 + 64) + 1;
  }
  uint64_t v30 = (v27 + 1 + v19 + v29 + v25) & ~v19;
  uint64_t v31 = v18 + 8;
  if (*(_DWORD *)(v17 + 84)) {
    uint64_t v32 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  else {
    uint64_t v32 = *(void *)(*(void *)(v14 - 8) + 64) + 1;
  }
  uint64_t v33 = ((v18 + 8) & ~v18) + v32 + v30 + 1;
  unint64_t v34 = (v33 + (((v13 | v11 | v18) + 8) & ~v20) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = v34 + 8;
  if (v34 + 8 <= v135) {
    unint64_t v35 = v135;
  }
  unint64_t v36 = ((v34 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v36 <= v35) {
    unint64_t v36 = v35;
  }
  if (v36 <= 8) {
    uint64_t v37 = 8;
  }
  else {
    uint64_t v37 = v36;
  }
  if (v37 > 3) {
    goto LABEL_22;
  }
  unsigned int v38 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v38 > 0xFFFA)
  {
    unsigned int v39 = *(_DWORD *)&a2[v37];
    unsigned int v40 = v39 - 5;
    if (v39 < 5) {
      goto LABEL_40;
    }
    goto LABEL_27;
  }
  if (v38 <= 0xFA)
  {
LABEL_22:
    unsigned int v39 = a2[v37];
    unsigned int v40 = v39 - 5;
    if (v39 < 5) {
      goto LABEL_40;
    }
LABEL_27:
    if (v37 <= 3) {
      uint64_t v41 = v37;
    }
    else {
      uint64_t v41 = 4;
    }
    switch(v41)
    {
      case 1:
        int v42 = *a2;
        if (v37 < 4) {
          goto LABEL_38;
        }
        goto LABEL_39;
      case 2:
        int v42 = *(unsigned __int16 *)a2;
        if (v37 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 3:
        int v42 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v37 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 4:
        int v42 = *(_DWORD *)a2;
        if (v37 < 4) {
LABEL_38:
        }
          v42 |= v40 << (8 * v37);
LABEL_39:
        unsigned int v39 = v42 + 5;
        break;
      default:
        goto LABEL_40;
    }
    goto LABEL_40;
  }
  unsigned int v39 = *(unsigned __int16 *)&a2[v37];
  unsigned int v40 = v39 - 5;
  if (v39 >= 5) {
    goto LABEL_27;
  }
LABEL_40:
  uint64_t v43 = ~v20;
  uint64_t v44 = ~v16;
  uint64_t v45 = ~v15;
  uint64_t v46 = ~v13;
  uint64_t v47 = ~v18;
  switch(v39)
  {
    case 0u:
      unint64_t v48 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v108 + 16))(a1, a2, v117);
      (*(void (**)(unint64_t, unint64_t, size_t))(v114 + 16))(((unint64_t)a1 + v104) & ~v101, (unint64_t)&a2[v104] & ~v101, v120);
      uint64_t v49 = (void *)(((((unint64_t)a1 + v104) & ~v101) + v111 + v105) & ~v105);
      uint64_t v50 = (const void *)((((unint64_t)&a2[v104] & ~v101) + v111 + v105) & ~v105);
      if ((*(unsigned int (**)(const void *, uint64_t, size_t))(v123 + 48))(v50, 1, v126))
      {
        memcpy(v49, v50, __n);
        if (v37 > 3) {
          goto LABEL_76;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, size_t))(v123 + 16))(v49, v50, v126);
        (*(void (**)(void *, void, uint64_t, size_t))(v123 + 56))(v49, 0, 1, v126);
        if (v37 > 3)
        {
LABEL_76:
          *((unsigned char *)a1 + v37) = 0;
          return v48;
        }
      }
      unsigned int v78 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      if (v78 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v37) = 0;
        return v48;
      }
      if (v78 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v37) = 0;
        return v48;
      }
      goto LABEL_76;
    case 1u:
      uint64_t v107 = ~v19;
      uint64_t v110 = v47;
      uint64_t v113 = v24;
      uint64_t v116 = v13 | 7;
      uint64_t v119 = v27 + 1;
      size_t v122 = v29;
      uint64_t v125 = v31;
      size_t v128 = v32;
      uint64_t v133 = v33;
      uint64_t v137 = *(void *)(v14 - 8);
      uint64_t v140 = v14;
      *a1 = *(void *)v28;
      uint64_t v61 = (void *)(((unint64_t)a1 + v20 + 8) & v43);
      uint64_t v62 = (void *)((unint64_t)&v28[v20 + 8] & v43);
      *uint64_t v61 = *v62;
      size_t __nb = (size_t)v62;
      unint64_t v103 = (unint64_t)v61;
      __dsta = (void *)(((unint64_t)v61 + v21) & v44);
      uint64_t v63 = (const void *)(((unint64_t)v62 + v21) & v44);
      uint64_t v64 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v134 + 48);
      swift_retain();
      if (v64(v63, 1, AssociatedTypeWitness))
      {
        memcpy(__dsta, v63, v23);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v134 + 16))(__dsta, v63, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v134 + 56))(__dsta, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__dsta + v23) = *((unsigned char *)v63 + v23);
      unsigned int v79 = (void *)((v103 + v116 + v113 + v23) & v45);
      size_t v80 = (void *)((__nb + v116 + v113 + v23) & v45);
      void *v79 = *v80;
      size_t v81 = (void *)(((unint64_t)v79 + v26) & v46);
      uint64_t v82 = (const void *)(((unint64_t)v80 + v26) & v46);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v82, 1, v130))
      {
        size_t v83 = v122;
        memcpy(v81, v82, v122);
        uint64_t v84 = v140;
        unint64_t v48 = a1;
        uint64_t v85 = v137;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v81, v82, v130);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v81, 0, 1, v130);
        uint64_t v84 = v140;
        unint64_t v48 = a1;
        uint64_t v85 = v137;
        size_t v83 = v122;
      }
      *((unsigned char *)v81 + v83) = *((unsigned char *)v82 + v83);
      size_t v86 = (void *)(((unint64_t)v79 + v19 + v119 + v83) & v107);
      BOOL v87 = (void *)(((unint64_t)v80 + v19 + v119 + v83) & v107);
      void *v86 = *v87;
      unsigned int v88 = (void *)(((unint64_t)v86 + v125) & v110);
      int v89 = (const void *)(((unint64_t)v87 + v125) & v110);
      uint64_t v90 = v84;
      uint64_t v91 = v85;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v85 + 48))(v89, 1, v84))
      {
        size_t v92 = v128;
        memcpy(v88, v89, v128);
        uint64_t v93 = v133;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(v88, v89, v90);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        uint64_t v93 = v133;
        size_t v92 = v128;
      }
      *((unsigned char *)v88 + v92) = *((unsigned char *)v89 + v92);
      *(void *)(((v103 | 7) + v93) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((__nb | 7) + v93) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v37 > 3) {
        goto LABEL_85;
      }
      unsigned int v94 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      if (v94 > 0xFFFA)
      {
        *(_DWORD *)((char *)v48 + v37) = 1;
        return v48;
      }
      if (v94 <= 0xFA) {
LABEL_85:
      }
        *((unsigned char *)v48 + v37) = 1;
      else {
        *(_WORD *)((char *)v48 + v37) = 1;
      }
      return v48;
    case 2u:
      uint64_t v106 = ~v19;
      uint64_t v109 = v47;
      uint64_t v112 = v24;
      uint64_t v115 = v13 | 7;
      uint64_t v118 = v27 + 1;
      size_t v121 = v29;
      uint64_t v124 = v31;
      size_t v127 = v32;
      uint64_t v132 = v33;
      uint64_t v136 = *(void *)(v14 - 8);
      uint64_t v139 = v14;
      *a1 = *(void *)v28;
      uint64_t v51 = (void *)(((unint64_t)a1 + v20 + 8) & v43);
      uint64_t v52 = (void *)((unint64_t)&v28[v20 + 8] & v43);
      void *v51 = *v52;
      unint64_t __dst = (void *)(((unint64_t)v51 + v21) & v44);
      size_t __na = (size_t)v51;
      unint64_t v102 = (unint64_t)v52;
      uint64_t v53 = (const void *)(((unint64_t)v52 + v21) & v44);
      uint64_t v54 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v134 + 48);
      swift_retain();
      if (v54(v53, 1, AssociatedTypeWitness))
      {
        memcpy(__dst, v53, v23);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v134 + 16))(__dst, v53, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v134 + 56))(__dst, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__dst + v23) = *((unsigned char *)v53 + v23);
      uint64_t v65 = (void *)((__na + v115 + v112 + v23) & v45);
      unsigned int v66 = (void *)((v102 + v115 + v112 + v23) & v45);
      void *v65 = *v66;
      uint64_t v67 = (void *)(((unint64_t)v65 + v26) & v46);
      uint64_t v68 = (const void *)(((unint64_t)v66 + v26) & v46);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v68, 1, v130))
      {
        size_t v69 = v121;
        memcpy(v67, v68, v121);
        unint64_t v48 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v67, v68, v130);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v67, 0, 1, v130);
        unint64_t v48 = a1;
        size_t v69 = v121;
      }
      *((unsigned char *)v67 + v69) = *((unsigned char *)v68 + v69);
      uint64_t v70 = (void *)(((unint64_t)v65 + v19 + v118 + v69) & v106);
      uint64_t v71 = (void *)(((unint64_t)v66 + v19 + v118 + v69) & v106);
      *uint64_t v70 = *v71;
      uint64_t v72 = (void *)(((unint64_t)v70 + v124) & v109);
      unint64_t v73 = (const void *)(((unint64_t)v71 + v124) & v109);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48))(v73, 1, v139))
      {
        size_t v74 = v127;
        memcpy(v72, v73, v127);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v136 + 16))(v72, v73, v139);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v72, 0, 1, v139);
        size_t v74 = v127;
      }
      *((unsigned char *)v72 + v74) = *((unsigned char *)v73 + v74);
      uint64_t v75 = (void *)(((__na | 7) + v132) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v76 = (void *)(((v102 | 7) + v132) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v75 = *v76;
      *(void *)(((unint64_t)v75 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v76 + 15) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v37 <= 3)
      {
        unsigned int v77 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v77 > 0xFFFA)
        {
          *(_DWORD *)((char *)v48 + v37) = 2;
          return v48;
        }
        if (v77 > 0xFA)
        {
          *(_WORD *)((char *)v48 + v37) = 2;
          return v48;
        }
      }
      *((unsigned char *)v48 + v37) = 2;
      return v48;
    case 3u:
      unint64_t v48 = a1;
      *a1 = *(void *)a2;
      swift_retain();
      if (v37 <= 3)
      {
        unsigned int v55 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v55 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v37) = 3;
          return v48;
        }
        if (v55 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v37) = 3;
          return v48;
        }
      }
      *((unsigned char *)a1 + v37) = 3;
      return v48;
    case 4u:
      uint64_t v56 = *(void *)a2;
      id v57 = *(id *)a2;
      unint64_t v48 = a1;
      *a1 = v56;
      if (v37 <= 3)
      {
        unsigned int v58 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v58 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v37) = 4;
          return v48;
        }
        if (v58 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v37) = 4;
          return v48;
        }
      }
      *((unsigned char *)a1 + v37) = 4;
      return v48;
    default:
      if (v37 > 3) {
        goto LABEL_58;
      }
      unsigned int v59 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      uint64_t v60 = 2;
      if (v59 > 0xFFFA) {
        uint64_t v60 = 4;
      }
      if (v59 <= 0xFA) {
LABEL_58:
      }
        uint64_t v60 = 1;
      unint64_t v48 = a1;
      memcpy(a1, a2, v60 + v37);
      return v48;
  }
}

unsigned __int8 *sub_24E5A60D4(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a3[2];
    uint64_t v110 = *(void *)(v5 - 8);
    uint64_t v6 = *(void *)(v110 + 64);
    uint64_t v7 = a3[3];
    uint64_t v8 = a3[4];
    uint64_t v112 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v112 + 80);
    uint64_t v109 = v6 + v9;
    uint64_t v138 = v9;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v111 = *(void *)(v112 + 64);
    uint64_t v143 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v11 = (v111 + v143 + ((v6 + v9) & ~v9)) & ~v143;
    uint64_t v121 = v10;
    size_t v12 = *(void *)(v10 + 64);
    if (!*(_DWORD *)(v10 + 84)) {
      ++v12;
    }
    size_t __n = v12;
    unint64_t v136 = v12 + v11;
    uint64_t v113 = v5;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v146 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v13 = *(unsigned __int8 *)(v146 + 80);
    uint64_t v114 = v7;
    uint64_t v130 = swift_getAssociatedTypeWitness();
    uint64_t v134 = *(void *)(v130 - 8);
    uint64_t v14 = *(unsigned __int8 *)(v134 + 80);
    uint64_t v15 = v14 | 7;
    uint64_t v16 = v14 | v13;
    uint64_t v122 = v8;
    uint64_t v17 = swift_getAssociatedTypeWitness();
    uint64_t v18 = v14;
    uint64_t v19 = v13;
    uint64_t v133 = v17;
    uint64_t v20 = *(void *)(v17 - 8);
    uint64_t v21 = v20;
    uint64_t v22 = *(unsigned __int8 *)(v20 + 80);
    uint64_t v23 = v22 | 7;
    uint64_t v24 = v14 | v13 | v22 | 7;
    uint64_t v127 = v13 + 8;
    uint64_t v131 = v146;
    uint64_t v25 = v20;
    if (*(_DWORD *)(v146 + 84)) {
      uint64_t v26 = *(void *)(v146 + 64);
    }
    else {
      uint64_t v26 = *(void *)(v146 + 64) + 1;
    }
    size_t v115 = v26;
    uint64_t v116 = ((v13 + 8) & ~v13) + v26 + 1;
    uint64_t v27 = v116 + v15;
    uint64_t v147 = v14 | 7;
    uint64_t v128 = v14 + 8;
    uint64_t v129 = v134;
    size_t v28 = *(void *)(v134 + 64);
    if (!*(_DWORD *)(v134 + 84)) {
      ++v28;
    }
    uint64_t v118 = ((v14 + 8) & ~v14) + v28 + 1;
    uint64_t v29 = v118 + v23;
    uint64_t v135 = v22 + 8;
    size_t v30 = *(void *)(v20 + 64);
    if (!*(_DWORD *)(v21 + 84)) {
      ++v30;
    }
    size_t v120 = v30;
    uint64_t v31 = ((v22 + 8) & ~v22) + v30 + ((v118 + v23 + (v27 & ~v15)) & ~v23) + 1;
    unint64_t v32 = (v31 + (((v16 | v22) + 8) & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = v32 + 8;
    if (v32 + 8 <= v136) {
      unint64_t v33 = v136;
    }
    unint64_t v34 = ((v32 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v34 <= v33) {
      unint64_t v34 = v33;
    }
    if (v34 <= 8) {
      uint64_t v35 = 8;
    }
    else {
      uint64_t v35 = v34;
    }
    char v36 = 8 * v35;
    if (v35 > 3) {
      goto LABEL_21;
    }
    unsigned int v37 = ((1 << v36) + 1) >> v36;
    if (v37 > 0xFFFA)
    {
      unsigned int v38 = *(_DWORD *)&a1[v35];
      unsigned int v39 = v38 - 5;
      if (v38 < 5) {
        goto LABEL_39;
      }
      goto LABEL_26;
    }
    if (v37 > 0xFA)
    {
      unsigned int v38 = *(unsigned __int16 *)&a1[v35];
      unsigned int v39 = v38 - 5;
      if (v38 < 5)
      {
LABEL_39:
        size_t v117 = v28;
        uint64_t v107 = ~v138;
        uint64_t v108 = ~v143;
        uint64_t v123 = ~v24;
        uint64_t v124 = ~v19;
        uint64_t v125 = ~v147;
        uint64_t v126 = ~v18;
        uint64_t v119 = v22 | 7;
        uint64_t v137 = ~v23;
        uint64_t v139 = ~v22;
        switch(v38)
        {
          case 0u:
            (*(void (**)(unsigned __int8 *, uint64_t))(v110 + 8))(a1, v113);
            (*(void (**)(unint64_t, uint64_t))(v112 + 8))((unint64_t)&a1[v109] & v107, v114);
            unint64_t v42 = (((unint64_t)&a1[v109] & v107) + v111 + v143) & v108;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v121 + 48))(v42, 1, v122)) {
              (*(void (**)(unint64_t, uint64_t))(v121 + 8))(v42, v122);
            }
            goto LABEL_58;
          case 1u:
            uint64_t v104 = v31;
            swift_release();
            uint64_t v45 = (unint64_t)&a1[v24 + 8] & v123;
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))((v127 + v45) & v124, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v131 + 8))((v127 + v45) & v124, AssociatedTypeWitness); {
            uint64_t v46 = (v27 + v45) & v125;
            }
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))((v128 + v46) & v126, 1, v130))(*(void (**)(uint64_t, uint64_t))(v129 + 8))((v128 + v46) & v126, v130); {
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))((v135 + ((v29 + v46) & v137)) & v139, 1, v133))(*(void (**)(uint64_t, uint64_t))(v25 + 8))((v135 + ((v29 + v46) & v137)) & v139, v133);
            }
            uint64_t v31 = v104;
            goto LABEL_57;
          case 2u:
            uint64_t v103 = v31;
            swift_release();
            uint64_t v43 = (unint64_t)&a1[v24 + 8] & v123;
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))((v127 + v43) & v124, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v131 + 8))((v127 + v43) & v124, AssociatedTypeWitness); {
            uint64_t v44 = (v27 + v43) & v125;
            }
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))((v128 + v44) & v126, 1, v130))(*(void (**)(uint64_t, uint64_t))(v129 + 8))((v128 + v44) & v126, v130); {
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))((v135 + ((v29 + v44) & v137)) & v139, 1, v133))(*(void (**)(uint64_t, uint64_t))(v25 + 8))((v135 + ((v29 + v44) & v137)) & v139, v133);
            }
            uint64_t v31 = v103;
            goto LABEL_57;
          case 3u:
LABEL_57:
            swift_release();
            break;
          case 4u:

            break;
          default:
            goto LABEL_58;
        }
        if (v35 > 3) {
          goto LABEL_61;
        }
LABEL_58:
        unsigned int v47 = ((1 << v36) + 1) >> v36;
        if (v47 > 0xFFFA)
        {
          unsigned int v48 = *(_DWORD *)&a2[v35];
          unsigned int v49 = v48 - 5;
          if (v48 < 5) {
            goto LABEL_79;
          }
          goto LABEL_66;
        }
        if (v47 > 0xFA)
        {
          unsigned int v48 = *(unsigned __int16 *)&a2[v35];
          unsigned int v49 = v48 - 5;
          if (v48 < 5)
          {
LABEL_79:
            switch(v48)
            {
              case 0u:
                (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v110 + 16))(a1, a2, v113);
                unint64_t v52 = (unint64_t)&a2[v109] & v107;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v112 + 16))((unint64_t)&a1[v109] & v107, v52, v114);
                uint64_t v53 = (void *)((((unint64_t)&a1[v109] & v107) + v111 + v143) & v108);
                uint64_t v54 = (const void *)((v52 + v111 + v143) & v108);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v121 + 48))(v54, 1, v122))
                {
                  memcpy(v53, v54, __n);
                  if (v35 > 3) {
                    goto LABEL_104;
                  }
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v121 + 16))(v53, v54, v122);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v121 + 56))(v53, 0, 1, v122);
                  if (v35 > 3)
                  {
LABEL_104:
                    a1[v35] = 0;
                    return a1;
                  }
                }
                unsigned int v75 = ((1 << v36) + 1) >> v36;
                if (v75 > 0xFFFA)
                {
                  *(_DWORD *)&a1[v35] = 0;
                  return a1;
                }
                if (v75 > 0xFA)
                {
                  *(_WORD *)&a1[v35] = 0;
                  return a1;
                }
                goto LABEL_104;
              case 1u:
                uint64_t v106 = v31;
                uint64_t v145 = v25;
                *(void *)a1 = *(void *)a2;
                uint64_t v68 = (unint64_t)&a1[v24 + 8] & v123;
                size_t v69 = (void *)((unint64_t)&a2[v24 + 8] & v123);
                *(void *)uint64_t v68 = *v69;
                uint64_t v70 = (void *)((v127 + v68) & v124);
                unint64_t v142 = (unint64_t)v69;
                uint64_t v71 = (const void *)(((unint64_t)v69 + v127) & v124);
                uint64_t v72 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v131 + 48);
                swift_retain();
                if (v72(v71, 1, AssociatedTypeWitness))
                {
                  size_t v73 = v115;
                  memcpy(v70, v71, v115);
                  uint64_t v74 = v130;
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v131 + 16))(v70, v71, AssociatedTypeWitness);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v131 + 56))(v70, 0, 1, AssociatedTypeWitness);
                  uint64_t v74 = v130;
                  size_t v73 = v115;
                }
                *((unsigned char *)v70 + v73) = *((unsigned char *)v71 + v73);
                size_t v81 = (void *)((v68 + v147 + v116) & v125);
                uint64_t v82 = (void *)((v142 + v147 + v116) & v125);
                *size_t v81 = *v82;
                size_t v83 = (void *)(((unint64_t)v81 + v128) & v126);
                uint64_t v84 = (const void *)(((unint64_t)v82 + v128) & v126);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v129 + 48))(v84, 1, v74))
                {
                  size_t v85 = v117;
                  memcpy(v83, v84, v117);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v129 + 16))(v83, v84, v74);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v83, 0, 1, v74);
                  size_t v85 = v117;
                }
                *((unsigned char *)v83 + v85) = *((unsigned char *)v84 + v85);
                uint64_t v91 = (void *)(((unint64_t)v81 + v119 + v118) & v137);
                size_t v92 = (void *)(((unint64_t)v82 + v119 + v118) & v137);
                void *v91 = *v92;
                uint64_t v93 = (void *)(((unint64_t)v91 + v135) & v139);
                unsigned int v94 = (const void *)(((unint64_t)v92 + v135) & v139);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v145 + 48))(v94, 1, v133))
                {
                  size_t v95 = v120;
                  memcpy(v93, v94, v120);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v145 + 16))(v93, v94, v133);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v145 + 56))(v93, 0, 1, v133);
                  size_t v95 = v120;
                }
                *((unsigned char *)v93 + v95) = *((unsigned char *)v94 + v95);
                *(void *)(((v68 | 7) + v106) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v142 | 7) + v106) & 0xFFFFFFFFFFFFFFF8);
                swift_retain();
                if (v35 <= 3)
                {
                  __int16 v99 = 1;
                  unsigned int v100 = ((1 << v36) + 1) >> v36;
                  if (v100 > 0xFFFA)
                  {
                    *(_DWORD *)&a1[v35] = 1;
                    return a1;
                  }
                  if (v100 > 0xFA) {
                    goto LABEL_136;
                  }
                }
                a1[v35] = 1;
                return a1;
              case 2u:
                uint64_t v105 = v31;
                uint64_t v144 = v25;
                *(void *)a1 = *(void *)a2;
                uint64_t v55 = (unint64_t)&a1[v24 + 8] & v123;
                uint64_t v56 = (void *)((unint64_t)&a2[v24 + 8] & v123);
                *(void *)uint64_t v55 = *v56;
                id v57 = (void *)((v127 + v55) & v124);
                unint64_t v141 = (unint64_t)v56;
                unsigned int v58 = (const void *)(((unint64_t)v56 + v127) & v124);
                unsigned int v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v131 + 48);
                swift_retain();
                if (v59(v58, 1, AssociatedTypeWitness))
                {
                  size_t v60 = v115;
                  memcpy(v57, v58, v115);
                  uint64_t v61 = v130;
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v131 + 16))(v57, v58, AssociatedTypeWitness);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v131 + 56))(v57, 0, 1, AssociatedTypeWitness);
                  uint64_t v61 = v130;
                  size_t v60 = v115;
                }
                *((unsigned char *)v57 + v60) = *((unsigned char *)v58 + v60);
                unsigned int v76 = (void *)((v55 + v147 + v116) & v125);
                unsigned int v77 = (void *)((v141 + v147 + v116) & v125);
                *unsigned int v76 = *v77;
                unsigned int v78 = (void *)(((unint64_t)v76 + v128) & v126);
                unsigned int v79 = (const void *)(((unint64_t)v77 + v128) & v126);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v129 + 48))(v79, 1, v61))
                {
                  size_t v80 = v117;
                  memcpy(v78, v79, v117);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v129 + 16))(v78, v79, v61);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v78, 0, 1, v61);
                  size_t v80 = v117;
                }
                *((unsigned char *)v78 + v80) = *((unsigned char *)v79 + v80);
                size_t v86 = (void *)(((unint64_t)v76 + v119 + v118) & v137);
                BOOL v87 = (void *)(((unint64_t)v77 + v119 + v118) & v137);
                void *v86 = *v87;
                unsigned int v88 = (void *)(((unint64_t)v86 + v135) & v139);
                int v89 = (const void *)(((unint64_t)v87 + v135) & v139);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v144 + 48))(v89, 1, v133))
                {
                  size_t v90 = v120;
                  memcpy(v88, v89, v120);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v144 + 16))(v88, v89, v133);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v144 + 56))(v88, 0, 1, v133);
                  size_t v90 = v120;
                }
                *((unsigned char *)v88 + v90) = *((unsigned char *)v89 + v90);
                unint64_t v96 = (void *)(((v55 | 7) + v105) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v97 = (void *)(((v141 | 7) + v105) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v96 = *v97;
                *(void *)(((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v97
                                                                                              + 15) & 0xFFFFFFFFFFFFFFF8);
                swift_retain();
                if (v35 <= 3)
                {
                  unsigned int v98 = ((1 << v36) + 1) >> v36;
                  if (v98 > 0xFFFA)
                  {
                    *(_DWORD *)&a1[v35] = 2;
                    return a1;
                  }
                  if (v98 > 0xFA)
                  {
                    __int16 v99 = 2;
                    goto LABEL_136;
                  }
                }
                a1[v35] = 2;
                return a1;
              case 3u:
                *(void *)a1 = *(void *)a2;
                swift_retain();
                if (v35 <= 3)
                {
                  unsigned int v62 = ((1 << v36) + 1) >> v36;
                  if (v62 > 0xFFFA)
                  {
                    *(_DWORD *)&a1[v35] = 3;
                    return a1;
                  }
                  if (v62 > 0xFA)
                  {
                    __int16 v99 = 3;
                    goto LABEL_136;
                  }
                }
                a1[v35] = 3;
                return a1;
              case 4u:
                uint64_t v63 = *(void *)a2;
                id v64 = *(id *)a2;
                *(void *)a1 = v63;
                if (v35 > 3) {
                  goto LABEL_92;
                }
                unsigned int v65 = ((1 << v36) + 1) >> v36;
                if (v65 > 0xFFFA)
                {
                  *(_DWORD *)&a1[v35] = 4;
                  return a1;
                }
                if (v65 > 0xFA)
                {
                  __int16 v99 = 4;
LABEL_136:
                  *(_WORD *)&a1[v35] = v99;
                }
                else
                {
LABEL_92:
                  a1[v35] = 4;
                }
                return a1;
              default:
                if (v35 > 3) {
                  goto LABEL_97;
                }
                unsigned int v66 = ((1 << v36) + 1) >> v36;
                uint64_t v67 = 2;
                if (v66 > 0xFFFA) {
                  uint64_t v67 = 4;
                }
                if (v66 <= 0xFA) {
LABEL_97:
                }
                  uint64_t v67 = 1;
                memcpy(a1, a2, v67 + v35);
                return a1;
            }
          }
        }
        else
        {
LABEL_61:
          unsigned int v48 = a2[v35];
          unsigned int v49 = v48 - 5;
          if (v48 < 5) {
            goto LABEL_79;
          }
        }
LABEL_66:
        if (v35 <= 3) {
          uint64_t v50 = v35;
        }
        else {
          uint64_t v50 = 4;
        }
        switch(v50)
        {
          case 1:
            int v51 = *a2;
            if (v35 < 4) {
              goto LABEL_77;
            }
            goto LABEL_78;
          case 2:
            int v51 = *(unsigned __int16 *)a2;
            if (v35 >= 4) {
              goto LABEL_78;
            }
            goto LABEL_77;
          case 3:
            int v51 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v35 >= 4) {
              goto LABEL_78;
            }
            goto LABEL_77;
          case 4:
            int v51 = *(_DWORD *)a2;
            if (v35 < 4) {
LABEL_77:
            }
              v51 |= v49 << v36;
LABEL_78:
            unsigned int v48 = v51 + 5;
            break;
          default:
            goto LABEL_79;
        }
        goto LABEL_79;
      }
    }
    else
    {
LABEL_21:
      unsigned int v38 = a1[v35];
      unsigned int v39 = v38 - 5;
      if (v38 < 5) {
        goto LABEL_39;
      }
    }
LABEL_26:
    if (v35 <= 3) {
      uint64_t v40 = v35;
    }
    else {
      uint64_t v40 = 4;
    }
    switch(v40)
    {
      case 1:
        int v41 = *a1;
        if (v35 < 4) {
          goto LABEL_37;
        }
        goto LABEL_38;
      case 2:
        int v41 = *(unsigned __int16 *)a1;
        if (v35 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 3:
        int v41 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v35 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 4:
        int v41 = *(_DWORD *)a1;
        if (v35 < 4) {
LABEL_37:
        }
          v41 |= v39 << v36;
LABEL_38:
        unsigned int v38 = v41 + 5;
        break;
      default:
        goto LABEL_39;
    }
    goto LABEL_39;
  }
  return a1;
}

void *sub_24E5A7298(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v104 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v104 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v110 = *(void *)(v6 - 8);
  uint64_t v97 = *(unsigned __int8 *)(v110 + 80);
  uint64_t v98 = v5 + v97;
  size_t v8 = *(void *)(v7 - 8);
  uint64_t v107 = *(void *)(v110 + 64);
  uint64_t v101 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v9 = (v107 + v101 + ((v5 + v97) & ~v97)) & ~v101;
  size_t v117 = v8;
  size_t v10 = *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v10;
  }
  size_t __n = v10;
  unint64_t v131 = v10 + v9;
  uint64_t v111 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v138 = *(void *)(AssociatedTypeWitness - 8);
  size_t v11 = *(unsigned __int8 *)(v138 + 80);
  uint64_t v114 = v6;
  uint64_t v124 = swift_getAssociatedTypeWitness();
  uint64_t v128 = *(void *)(v124 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v128 + 80);
  size_t v13 = v12 | v11;
  uint64_t v120 = v7;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = v12 | 7;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v12 | v11 | v17 | 7;
  size_t v19 = v11 + 8;
  size_t v125 = v11;
  uint64_t v20 = (v11 + 8) & ~v11;
  uint64_t v21 = v138;
  if (*(_DWORD *)(v138 + 84)) {
    size_t v22 = *(void *)(v138 + 64);
  }
  else {
    size_t v22 = *(void *)(v138 + 64) + 1;
  }
  uint64_t v23 = v20 + 1;
  uint64_t v24 = (v20 + 1 + (v12 | 7) + v22) & ~(v12 | 7);
  uint64_t v25 = v12 + 8;
  uint64_t v26 = v12;
  uint64_t v27 = (v12 + 8) & ~v12;
  uint64_t v123 = v128;
  size_t v28 = a2;
  if (*(_DWORD *)(v128 + 84)) {
    uint64_t v29 = *(void *)(v128 + 64);
  }
  else {
    uint64_t v29 = *(void *)(v128 + 64) + 1;
  }
  uint64_t v139 = v17 | 7;
  uint64_t v30 = (v27 + 1 + (v17 | 7) + v29 + v24) & ~(v17 | 7);
  uint64_t v31 = v17 + 8;
  if (*(_DWORD *)(v16 + 84)) {
    uint64_t v32 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  else {
    uint64_t v32 = *(void *)(*(void *)(v14 - 8) + 64) + 1;
  }
  uint64_t v33 = ((v17 + 8) & ~v17) + v32 + v30 + 1;
  unint64_t v34 = (v33 + (((v13 | v17) + 8) & ~v18) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = v34 + 8;
  if (v34 + 8 <= v131) {
    unint64_t v35 = v131;
  }
  unint64_t v36 = ((v34 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v36 <= v35) {
    unint64_t v36 = v35;
  }
  if (v36 <= 8) {
    uint64_t v37 = 8;
  }
  else {
    uint64_t v37 = v36;
  }
  if (v37 > 3) {
    goto LABEL_22;
  }
  unsigned int v38 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v38 > 0xFFFA)
  {
    unsigned int v39 = *(_DWORD *)&a2[v37];
  }
  else
  {
    if (v38 <= 0xFA)
    {
LABEL_22:
      unsigned int v39 = a2[v37];
      goto LABEL_25;
    }
    unsigned int v39 = *(unsigned __int16 *)&a2[v37];
  }
LABEL_25:
  unsigned int v40 = v39 - 5;
  int v41 = a1;
  uint64_t v42 = v21;
  if (v39 >= 5)
  {
    if (v37 <= 3) {
      uint64_t v43 = v37;
    }
    else {
      uint64_t v43 = 4;
    }
    switch(v43)
    {
      case 1:
        int v44 = *a2;
        if (v37 < 4) {
          goto LABEL_37;
        }
        goto LABEL_38;
      case 2:
        int v44 = *(unsigned __int16 *)a2;
        if (v37 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 3:
        int v44 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v37 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 4:
        int v44 = *(_DWORD *)a2;
        if (v37 < 4) {
LABEL_37:
        }
          v44 |= v40 << (8 * v37);
LABEL_38:
        unsigned int v39 = v44 + 5;
        break;
      default:
        break;
    }
  }
  uint64_t v45 = v25;
  uint64_t v46 = ~v18;
  size_t v47 = ~v125;
  uint64_t v48 = ~v15;
  uint64_t v49 = ~v26;
  uint64_t v50 = ~v17;
  switch(v39)
  {
    case 0u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v104 + 32))(a1, a2, v111);
      unint64_t v51 = ((unint64_t)a1 + v98) & ~v97;
      unint64_t v52 = (unint64_t)&a2[v98] & ~v97;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v110 + 32))(v51, v52, v114);
      uint64_t v53 = (void *)((v51 + v107 + v101) & ~v101);
      uint64_t v54 = (const void *)((v52 + v107 + v101) & ~v101);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v117 + 48))(v54, 1, v120))
      {
        memcpy(v53, v54, __n);
        if (v37 > 3) {
          goto LABEL_75;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v117 + 32))(v53, v54, v120);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(v53, 0, 1, v120);
        if (v37 > 3)
        {
LABEL_75:
          *((unsigned char *)a1 + v37) = 0;
          return v41;
        }
      }
      unsigned int v80 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      if (v80 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v37) = 0;
        return v41;
      }
      if (v80 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v37) = 0;
        return v41;
      }
      goto LABEL_75;
    case 1u:
      uint64_t v106 = ~v139;
      uint64_t v109 = v50;
      uint64_t v113 = v15;
      uint64_t v116 = v27 + 1;
      size_t v119 = v29;
      uint64_t v122 = v31;
      size_t v127 = v32;
      uint64_t v133 = *(void *)(v14 - 8);
      uint64_t v136 = v14;
      *a1 = *(void *)v28;
      uint64_t v63 = (void *)(((unint64_t)a1 + v18 + 8) & v46);
      id v64 = (void *)((unint64_t)&v28[v18 + 8] & v46);
      *uint64_t v63 = *v64;
      unint64_t v100 = (unint64_t)v64;
      unint64_t v103 = (unint64_t)v63;
      unsigned int v65 = (void *)(((unint64_t)v63 + v19) & v47);
      unsigned int v66 = (const void *)(((unint64_t)v64 + v19) & v47);
      uint64_t v130 = v33;
      if ((*(unsigned int (**)(const void *, uint64_t))(v42 + 48))(v66, 1))
      {
        memcpy(v65, v66, v22);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v65, v66, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v65, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)v65 + v22) = *((unsigned char *)v66 + v22);
      size_t v81 = (void *)((v103 + v113 + v23 + v22) & v48);
      uint64_t v82 = (void *)((v100 + v113 + v23 + v22) & v48);
      *size_t v81 = *v82;
      size_t v83 = (void *)(((unint64_t)v81 + v45) & v49);
      uint64_t v84 = (const void *)(((unint64_t)v82 + v45) & v49);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v123 + 48))(v84, 1, v124))
      {
        size_t v85 = v119;
        memcpy(v83, v84, v119);
        uint64_t v86 = v136;
        uint64_t v87 = v133;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v123 + 32))(v83, v84, v124);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v123 + 56))(v83, 0, 1, v124);
        uint64_t v86 = v136;
        uint64_t v87 = v133;
        size_t v85 = v119;
      }
      *((unsigned char *)v83 + v85) = *((unsigned char *)v84 + v85);
      unsigned int v88 = (void *)(((unint64_t)v81 + v139 + v116 + v85) & v106);
      int v89 = (void *)(((unint64_t)v82 + v139 + v116 + v85) & v106);
      *unsigned int v88 = *v89;
      size_t v90 = (void *)(((unint64_t)v88 + v122) & v109);
      uint64_t v91 = (const void *)(((unint64_t)v89 + v122) & v109);
      uint64_t v92 = v87;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v87 + 48))(v91, 1, v86))
      {
        size_t v93 = v127;
        memcpy(v90, v91, v127);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v92 + 32))(v90, v91, v86);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56))(v90, 0, 1, v86);
        size_t v93 = v127;
      }
      int v41 = a1;
      *((unsigned char *)v90 + v93) = *((unsigned char *)v91 + v93);
      *(void *)(((v103 | 7) + v130) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v100 | 7) + v130) & 0xFFFFFFFFFFFFFFF8);
      if (v37 > 3) {
        goto LABEL_84;
      }
      unsigned int v94 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      if (v94 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v37) = 1;
        return v41;
      }
      if (v94 <= 0xFA) {
LABEL_84:
      }
        *((unsigned char *)a1 + v37) = 1;
      else {
        *(_WORD *)((char *)a1 + v37) = 1;
      }
      return v41;
    case 2u:
      uint64_t v105 = ~v139;
      uint64_t v108 = v50;
      uint64_t v112 = v15;
      uint64_t v115 = v27 + 1;
      size_t v118 = v29;
      uint64_t v121 = v31;
      size_t v126 = v32;
      uint64_t v132 = *(void *)(v14 - 8);
      uint64_t v135 = v14;
      *a1 = *(void *)v28;
      uint64_t v55 = (void *)(((unint64_t)a1 + v18 + 8) & v46);
      uint64_t v56 = (void *)((unint64_t)&v28[v18 + 8] & v46);
      void *v55 = *v56;
      unint64_t v99 = (unint64_t)v56;
      unint64_t v102 = (unint64_t)v55;
      id v57 = (void *)(((unint64_t)v55 + v19) & v47);
      unsigned int v58 = (const void *)(((unint64_t)v56 + v19) & v47);
      uint64_t v129 = v33;
      if ((*(unsigned int (**)(const void *, uint64_t))(v42 + 48))(v58, 1))
      {
        memcpy(v57, v58, v22);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v57, v58, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v57, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)v57 + v22) = *((unsigned char *)v58 + v22);
      uint64_t v67 = (void *)((v102 + v112 + v23 + v22) & v48);
      uint64_t v68 = (void *)((v99 + v112 + v23 + v22) & v48);
      *uint64_t v67 = *v68;
      size_t v69 = (void *)(((unint64_t)v67 + v45) & v49);
      uint64_t v70 = (const void *)(((unint64_t)v68 + v45) & v49);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v123 + 48))(v70, 1, v124))
      {
        size_t v71 = v118;
        memcpy(v69, v70, v118);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v123 + 32))(v69, v70, v124);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v123 + 56))(v69, 0, 1, v124);
        size_t v71 = v118;
      }
      *((unsigned char *)v69 + v71) = *((unsigned char *)v70 + v71);
      uint64_t v72 = (void *)(((unint64_t)v67 + v139 + v115 + v71) & v105);
      size_t v73 = (void *)(((unint64_t)v68 + v139 + v115 + v71) & v105);
      void *v72 = *v73;
      uint64_t v74 = (void *)(((unint64_t)v72 + v121) & v108);
      unsigned int v75 = (const void *)(((unint64_t)v73 + v121) & v108);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v132 + 48))(v75, 1, v135))
      {
        size_t v76 = v126;
        memcpy(v74, v75, v126);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v132 + 32))(v74, v75, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v74, 0, 1, v135);
        size_t v76 = v126;
      }
      int v41 = a1;
      *((unsigned char *)v74 + v76) = *((unsigned char *)v75 + v76);
      unsigned int v77 = (void *)(((v102 | 7) + v129) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v78 = (void *)(((v99 | 7) + v129) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v77 = *v78;
      *(void *)(((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v37 <= 3)
      {
        unsigned int v79 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v79 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v37) = 2;
          return v41;
        }
        if (v79 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v37) = 2;
          return v41;
        }
      }
      *((unsigned char *)a1 + v37) = 2;
      return v41;
    case 3u:
      *a1 = *(void *)a2;
      if (v37 <= 3)
      {
        unsigned int v59 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v59 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v37) = 3;
          return v41;
        }
        if (v59 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v37) = 3;
          return v41;
        }
      }
      *((unsigned char *)a1 + v37) = 3;
      return v41;
    case 4u:
      *a1 = *(void *)a2;
      if (v37 <= 3)
      {
        unsigned int v60 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v60 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v37) = 4;
          return v41;
        }
        if (v60 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v37) = 4;
          return v41;
        }
      }
      *((unsigned char *)a1 + v37) = 4;
      return v41;
    default:
      if (v37 > 3) {
        goto LABEL_57;
      }
      unsigned int v61 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      uint64_t v62 = 2;
      if (v61 > 0xFFFA) {
        uint64_t v62 = 4;
      }
      if (v61 <= 0xFA) {
LABEL_57:
      }
        uint64_t v62 = 1;
      memcpy(a1, a2, v62 + v37);
      return v41;
  }
}

unsigned __int8 *sub_24E5A7FC8(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = a3[2];
  uint64_t v113 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v113 + 64);
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  uint64_t v115 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v115 + 80);
  uint64_t v112 = v6 + v9;
  uint64_t v146 = v9;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v114 = *(void *)(v115 + 64);
  uint64_t v141 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v11 = (v114 + v141 + ((v6 + v9) & ~v9)) & ~v141;
  uint64_t v126 = v10;
  size_t v12 = *(void *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84)) {
    ++v12;
  }
  size_t __n = v12;
  unint64_t v138 = v12 + v11;
  uint64_t v116 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v144 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = *(unsigned __int8 *)(v144 + 80);
  uint64_t v117 = v7;
  uint64_t v134 = swift_getAssociatedTypeWitness();
  uint64_t v136 = *(void *)(v134 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v136 + 80);
  uint64_t v15 = v14 | 7;
  uint64_t v127 = v8;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = v14;
  uint64_t v18 = v13;
  uint64_t v135 = v16;
  uint64_t v19 = *(void *)(v16 - 8);
  uint64_t v20 = v19;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = v21 | 7;
  uint64_t v23 = v14 | v13 | v21 | 7;
  uint64_t v24 = ((v14 | v13 | v21) + 8) & ~v23;
  uint64_t v132 = v13 + 8;
  uint64_t v148 = v144;
  uint64_t v25 = v19;
  if (*(_DWORD *)(v144 + 84)) {
    uint64_t v26 = *(void *)(v144 + 64);
  }
  else {
    uint64_t v26 = *(void *)(v144 + 64) + 1;
  }
  size_t v120 = v26;
  uint64_t v121 = ((v13 + 8) & ~v13) + v26 + 1;
  uint64_t v27 = v121 + v15;
  uint64_t v145 = v14 | 7;
  uint64_t v28 = v14 + 8;
  uint64_t v29 = v136;
  if (*(_DWORD *)(v136 + 84)) {
    uint64_t v30 = *(void *)(v136 + 64);
  }
  else {
    uint64_t v30 = *(void *)(v136 + 64) + 1;
  }
  size_t v122 = v30;
  uint64_t v123 = ((v14 + 8) & ~v14) + v30 + 1;
  uint64_t v31 = v123 + v22;
  uint64_t v133 = v21 + 8;
  uint64_t v137 = v19;
  size_t v32 = *(void *)(v19 + 64);
  if (!*(_DWORD *)(v20 + 84)) {
    ++v32;
  }
  size_t v125 = v32;
  uint64_t v33 = ((v21 + 8) & ~v21) + v32 + ((v123 + v22 + (v27 & ~v15)) & ~v22) + 1;
  unint64_t v34 = (v33 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = v34 + 8;
  if (v34 + 8 <= v138) {
    unint64_t v35 = v138;
  }
  unint64_t v36 = ((v34 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v36 <= v35) {
    unint64_t v36 = v35;
  }
  if (v36 <= 8) {
    uint64_t v37 = 8;
  }
  else {
    uint64_t v37 = v36;
  }
  char v38 = 8 * v37;
  if (v37 > 3) {
    goto LABEL_22;
  }
  unsigned int v39 = ((1 << v38) + 1) >> v38;
  if (v39 > 0xFFFA)
  {
    unsigned int v40 = *(_DWORD *)&a1[v37];
    unsigned int v41 = v40 - 5;
    if (v40 < 5) {
      goto LABEL_40;
    }
    goto LABEL_27;
  }
  if (v39 <= 0xFA)
  {
LABEL_22:
    unsigned int v40 = a1[v37];
    unsigned int v41 = v40 - 5;
    if (v40 < 5) {
      goto LABEL_40;
    }
LABEL_27:
    if (v37 <= 3) {
      uint64_t v42 = v37;
    }
    else {
      uint64_t v42 = 4;
    }
    switch(v42)
    {
      case 1:
        int v43 = *a1;
        if (v37 < 4) {
          goto LABEL_38;
        }
        goto LABEL_39;
      case 2:
        int v43 = *(unsigned __int16 *)a1;
        if (v37 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 3:
        int v43 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v37 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 4:
        int v43 = *(_DWORD *)a1;
        if (v37 < 4) {
LABEL_38:
        }
          v43 |= v41 << v38;
LABEL_39:
        unsigned int v40 = v43 + 5;
        break;
      default:
        goto LABEL_40;
    }
    goto LABEL_40;
  }
  unsigned int v40 = *(unsigned __int16 *)&a1[v37];
  unsigned int v41 = v40 - 5;
  if (v40 >= 5) {
    goto LABEL_27;
  }
LABEL_40:
  uint64_t v110 = ~v146;
  uint64_t v111 = ~v141;
  uint64_t v128 = ~v23;
  uint64_t v129 = ~v18;
  uint64_t v130 = ~v145;
  uint64_t v131 = ~v17;
  uint64_t v124 = v21 | 7;
  uint64_t v139 = ~v22;
  uint64_t v44 = ~v21;
  char v147 = 8 * v37;
  switch(v40)
  {
    case 0u:
      uint64_t v45 = v23;
      (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v113 + 8))(a1, v116, v25);
      (*(void (**)(unint64_t, uint64_t))(v115 + 8))((unint64_t)&a1[v112] & v110, v117);
      unint64_t v46 = (((unint64_t)&a1[v112] & v110) + v114 + v141) & v111;
      int v47 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v126 + 48))(v46, 1, v127);
      uint64_t v23 = v45;
      char v38 = 8 * v37;
      if (!v47)
      {
        (*(void (**)(unint64_t, uint64_t))(v126 + 8))(v46, v127);
        uint64_t v23 = v45;
        goto LABEL_53;
      }
      break;
    case 1u:
      uint64_t v107 = v33;
      uint64_t v52 = v23;
      swift_release();
      uint64_t v118 = v52;
      uint64_t v53 = (unint64_t)&a1[v52 + 8] & v128;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))((v132 + v53) & v129, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v148 + 8))((v132 + v53) & v129, AssociatedTypeWitness); {
      uint64_t v54 = (v27 + v53) & v130;
      }
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))((v28 + v54) & v131, 1, v134)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))((v28 + v54) & v131, v134);
      }
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))((v133 + ((v31 + v54) & v139)) & v44, 1, v135))(*(void (**)(uint64_t, uint64_t))(v137 + 8))((v133 + ((v31 + v54) & v139)) & v44, v135); {
      uint64_t v33 = v107;
      }
      goto LABEL_61;
    case 2u:
      uint64_t v106 = v33;
      uint64_t v48 = v23;
      swift_release();
      uint64_t v118 = v48;
      uint64_t v49 = (unint64_t)&a1[v48 + 8] & v128;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))((v132 + v49) & v129, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v148 + 8))((v132 + v49) & v129, AssociatedTypeWitness); {
      uint64_t v50 = (v27 + v49) & v130;
      }
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))((v28 + v50) & v131, 1, v134)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))((v28 + v50) & v131, v134);
      }
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))((v133 + ((v31 + v50) & v139)) & v44, 1, v135))(*(void (**)(uint64_t, uint64_t))(v137 + 8))((v133 + ((v31 + v50) & v139)) & v44, v135); {
      uint64_t v33 = v106;
      }
LABEL_61:
      swift_release();
      char v38 = 8 * v37;
      uint64_t v23 = v118;
      break;
    case 3u:
      uint64_t v51 = v23;
      swift_release();
      goto LABEL_52;
    case 4u:
      uint64_t v51 = v23;

LABEL_52:
      uint64_t v23 = v51;
LABEL_53:
      char v38 = 8 * v37;
      break;
    default:
      break;
  }
  uint64_t v119 = v44;
  uint64_t v55 = v29;
  if (v37 > 3) {
    goto LABEL_65;
  }
  unsigned int v56 = ((1 << v38) + 1) >> v38;
  if (v56 > 0xFFFA)
  {
    unsigned int v57 = *(_DWORD *)&a2[v37];
    unsigned int v58 = v57 - 5;
    if (v57 < 5) {
      goto LABEL_83;
    }
    goto LABEL_70;
  }
  if (v56 > 0xFA)
  {
    unsigned int v57 = *(unsigned __int16 *)&a2[v37];
    unsigned int v58 = v57 - 5;
    if (v57 < 5) {
      goto LABEL_83;
    }
  }
  else
  {
LABEL_65:
    unsigned int v57 = a2[v37];
    unsigned int v58 = v57 - 5;
    if (v57 < 5) {
      goto LABEL_83;
    }
  }
LABEL_70:
  if (v37 <= 3) {
    uint64_t v59 = v37;
  }
  else {
    uint64_t v59 = 4;
  }
  switch(v59)
  {
    case 1:
      int v60 = *a2;
      if (v37 < 4) {
        goto LABEL_81;
      }
      goto LABEL_82;
    case 2:
      int v60 = *(unsigned __int16 *)a2;
      if (v37 >= 4) {
        goto LABEL_82;
      }
      goto LABEL_81;
    case 3:
      int v60 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v37 >= 4) {
        goto LABEL_82;
      }
      goto LABEL_81;
    case 4:
      int v60 = *(_DWORD *)a2;
      if (v37 < 4) {
LABEL_81:
      }
        v60 |= v58 << v38;
LABEL_82:
      unsigned int v57 = v60 + 5;
      break;
    default:
      break;
  }
LABEL_83:
  switch(v57)
  {
    case 0u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v113 + 32))(a1, a2, v116);
      unint64_t v61 = (unint64_t)&a2[v112] & v110;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v115 + 32))((unint64_t)&a1[v112] & v110, v61, v117);
      uint64_t v62 = (void *)((((unint64_t)&a1[v112] & v110) + v114 + v141) & v111);
      uint64_t v63 = (const void *)((v61 + v114 + v141) & v111);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v126 + 48))(v63, 1, v127))
      {
        memcpy(v62, v63, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v126 + 32))(v62, v63, v127);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v126 + 56))(v62, 0, 1, v127);
      }
      if (v37 <= 3)
      {
        unsigned int v78 = ((1 << v147) + 1) >> v147;
        if (v78 > 0xFFFA)
        {
          *(_DWORD *)&a1[v37] = 0;
          return a1;
        }
        if (v78 > 0xFA)
        {
          *(_WORD *)&a1[v37] = 0;
          return a1;
        }
      }
      a1[v37] = 0;
      break;
    case 1u:
      uint64_t v143 = v28;
      *(void *)a1 = *(void *)a2;
      uint64_t v73 = (unint64_t)&a1[v23 + 8] & v128;
      uint64_t v74 = (unint64_t)&a2[v23 + 8] & v128;
      *(void *)uint64_t v73 = *(void *)v74;
      unsigned int v75 = (void *)((v132 + v73) & v129);
      size_t v76 = (const void *)((v132 + v74) & v129);
      uint64_t v109 = v33;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v148 + 48))(v76, 1, AssociatedTypeWitness))
      {
        size_t v77 = v120;
        memcpy(v75, v76, v120);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v148 + 32))(v75, v76, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v148 + 56))(v75, 0, 1, AssociatedTypeWitness);
        size_t v77 = v120;
      }
      *((unsigned char *)v75 + v77) = *((unsigned char *)v76 + v77);
      uint64_t v84 = (void *)((v73 + v145 + v121) & v130);
      size_t v85 = (void *)((v74 + v145 + v121) & v130);
      void *v84 = *v85;
      uint64_t v86 = (void *)(((unint64_t)v84 + v143) & v131);
      uint64_t v87 = (const void *)(((unint64_t)v85 + v143) & v131);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v87, 1, v134))
      {
        size_t v88 = v122;
        memcpy(v86, v87, v122);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v55 + 32))(v86, v87, v134);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v86, 0, 1, v134);
        size_t v88 = v122;
      }
      *((unsigned char *)v86 + v88) = *((unsigned char *)v87 + v88);
      unsigned int v94 = (void *)(((unint64_t)v84 + v124 + v123) & v139);
      size_t v95 = (void *)(((unint64_t)v85 + v124 + v123) & v139);
      *unsigned int v94 = *v95;
      unint64_t v96 = (void *)(((unint64_t)v94 + v133) & v119);
      uint64_t v97 = (const void *)(((unint64_t)v95 + v133) & v119);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v137 + 48))(v97, 1, v135))
      {
        size_t v98 = v125;
        memcpy(v96, v97, v125);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v137 + 32))(v96, v97, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v137 + 56))(v96, 0, 1, v135);
        size_t v98 = v125;
      }
      *((unsigned char *)v96 + v98) = *((unsigned char *)v97 + v98);
      *(void *)(((v73 | 7) + v109) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v74 | 7) + v109) & 0xFFFFFFFFFFFFFFF8);
      if (v37 <= 3)
      {
        __int16 v102 = 1;
        unsigned int v103 = ((1 << v147) + 1) >> v147;
        if (v103 > 0xFFFA)
        {
          *(_DWORD *)&a1[v37] = 1;
          return a1;
        }
        if (v103 > 0xFA) {
          goto LABEL_140;
        }
      }
      a1[v37] = 1;
      break;
    case 2u:
      uint64_t v142 = v28;
      *(void *)a1 = *(void *)a2;
      uint64_t v64 = (unint64_t)&a1[v23 + 8] & v128;
      uint64_t v65 = (unint64_t)&a2[v23 + 8] & v128;
      *(void *)uint64_t v64 = *(void *)v65;
      unsigned int v66 = (void *)((v132 + v64) & v129);
      uint64_t v67 = (const void *)((v132 + v65) & v129);
      uint64_t v108 = v33;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v148 + 48))(v67, 1, AssociatedTypeWitness))
      {
        size_t v68 = v120;
        memcpy(v66, v67, v120);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v148 + 32))(v66, v67, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v148 + 56))(v66, 0, 1, AssociatedTypeWitness);
        size_t v68 = v120;
      }
      *((unsigned char *)v66 + v68) = *((unsigned char *)v67 + v68);
      unsigned int v79 = (void *)((v64 + v145 + v121) & v130);
      unsigned int v80 = (void *)((v65 + v145 + v121) & v130);
      void *v79 = *v80;
      size_t v81 = (void *)(((unint64_t)v79 + v142) & v131);
      uint64_t v82 = (const void *)(((unint64_t)v80 + v142) & v131);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v82, 1, v134))
      {
        size_t v83 = v122;
        memcpy(v81, v82, v122);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v55 + 32))(v81, v82, v134);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v81, 0, 1, v134);
        size_t v83 = v122;
      }
      *((unsigned char *)v81 + v83) = *((unsigned char *)v82 + v83);
      int v89 = (void *)(((unint64_t)v79 + v124 + v123) & v139);
      size_t v90 = (void *)(((unint64_t)v80 + v124 + v123) & v139);
      *int v89 = *v90;
      uint64_t v91 = (void *)(((unint64_t)v89 + v133) & v119);
      uint64_t v92 = (const void *)(((unint64_t)v90 + v133) & v119);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v137 + 48))(v92, 1, v135))
      {
        size_t v93 = v125;
        memcpy(v91, v92, v125);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v137 + 32))(v91, v92, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v137 + 56))(v91, 0, 1, v135);
        size_t v93 = v125;
      }
      *((unsigned char *)v91 + v93) = *((unsigned char *)v92 + v93);
      unint64_t v99 = (void *)(((v64 | 7) + v108) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v100 = (void *)(((v65 | 7) + v108) & 0xFFFFFFFFFFFFFFF8);
      void *v99 = *v100;
      *(void *)(((unint64_t)v99 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v37 <= 3)
      {
        unsigned int v101 = ((1 << v147) + 1) >> v147;
        if (v101 > 0xFFFA)
        {
          *(_DWORD *)&a1[v37] = 2;
          return a1;
        }
        if (v101 > 0xFA)
        {
          __int16 v102 = 2;
          goto LABEL_140;
        }
      }
      a1[v37] = 2;
      break;
    case 3u:
      *(void *)a1 = *(void *)a2;
      if (v37 <= 3)
      {
        unsigned int v69 = ((1 << v38) + 1) >> v38;
        if (v69 > 0xFFFA)
        {
          *(_DWORD *)&a1[v37] = 3;
          return a1;
        }
        if (v69 > 0xFA)
        {
          __int16 v102 = 3;
          goto LABEL_140;
        }
      }
      a1[v37] = 3;
      break;
    case 4u:
      *(void *)a1 = *(void *)a2;
      if (v37 > 3) {
        goto LABEL_95;
      }
      unsigned int v70 = ((1 << v38) + 1) >> v38;
      if (v70 > 0xFFFA)
      {
        *(_DWORD *)&a1[v37] = 4;
        return a1;
      }
      if (v70 > 0xFA)
      {
        __int16 v102 = 4;
LABEL_140:
        *(_WORD *)&a1[v37] = v102;
      }
      else
      {
LABEL_95:
        a1[v37] = 4;
      }
      break;
    default:
      if (v37 > 3) {
        goto LABEL_100;
      }
      unsigned int v71 = ((1 << v38) + 1) >> v38;
      uint64_t v72 = 2;
      if (v71 > 0xFFFA) {
        uint64_t v72 = 4;
      }
      if (v71 <= 0xFA) {
LABEL_100:
      }
        uint64_t v72 = 1;
      memcpy(a1, a2, v72 + v37);
      break;
  }
  return a1;
}

uint64_t sub_24E5A9174(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v4;
  }
  unint64_t v45 = v4
      + ((((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
        + *(void *)(*(void *)(a3[3] - 8) + 64)
        + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v11 | 7;
  uint64_t v13 = ((v6 + 8) & ~v6) + (v8 | 7) + *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v13;
  }
  uint64_t v14 = (v13 + 1) & ~(v8 | 7);
  uint64_t v15 = ((v8 + 8) & ~v8) + v12 + *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v15;
  }
  uint64_t v16 = (v15 + v14 + 1) & ~v12;
  unint64_t v17 = ((v11 + 8) & ~v11)
      + *(void *)(v9 + 64)
      + (((v8 | v6 | v11) & 0xF8 ^ 0x1F8) & ((v8 | v6 | v11) + 8));
  if (!*(_DWORD *)(v10 + 84)) {
    ++v17;
  }
  unint64_t v18 = (v17 + v16 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 8;
  if (v18 + 8 <= v45) {
    unint64_t v19 = v45;
  }
  unint64_t v20 = ((v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v20 <= v19) {
    unint64_t v20 = v19;
  }
  if (v20 <= 8) {
    unint64_t v20 = 8;
  }
  if (v20 > 3)
  {
    int v21 = 6;
    goto LABEL_19;
  }
  unsigned int v22 = ((1 << (8 * v20)) + 1) >> (8 * v20);
  if (v22 <= 0xFFFA)
  {
    int v21 = v22 + 5;
    if (v22 > 0xFA)
    {
      char v24 = 16;
      unsigned int v23 = a2;
LABEL_20:
      unsigned int v25 = (1 << v24) - v21;
      if ((v25 & 0x80000000) != 0) {
        unsigned int v25 = 0x7FFFFFFF;
      }
      if (v20 > 3) {
        goto LABEL_28;
      }
LABEL_25:
      unsigned int v26 = ((1 << (8 * v20)) + 1) >> (8 * v20);
      uint64_t v27 = 2;
      if (v26 > 0xFFFA) {
        uint64_t v27 = 4;
      }
      if (v26 > 0xFA) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
LABEL_19:
    unsigned int v23 = a2;
    char v24 = 8;
    goto LABEL_20;
  }
  unsigned int v25 = 0x7FFFFFFF;
  unsigned int v23 = a2;
  if (v20 <= 3) {
    goto LABEL_25;
  }
LABEL_28:
  uint64_t v27 = 1;
LABEL_29:
  if (!v23) {
    return 0;
  }
  if (v23 <= v25) {
    goto LABEL_48;
  }
  unint64_t v28 = v27 + v20;
  char v29 = 8 * v28;
  if (v28 <= 3)
  {
    unsigned int v31 = ((v23 - v25 + ~(-1 << v29)) >> v29) + 1;
    if (HIWORD(v31))
    {
      int v30 = *(_DWORD *)((char *)a1 + v28);
      if (!v30) {
        goto LABEL_48;
      }
      goto LABEL_40;
    }
    if (v31 > 0xFF)
    {
      int v30 = *(unsigned __int16 *)((char *)a1 + v28);
      if (!*(unsigned __int16 *)((char *)a1 + v28)) {
        goto LABEL_48;
      }
      goto LABEL_40;
    }
    if (v31 < 2)
    {
LABEL_48:
      if (v25)
      {
        if (v20 <= 3)
        {
          unsigned int v39 = ((1 << (8 * v20)) + 1) >> (8 * v20);
          if (v39 > 0xFFFA)
          {
            unsigned int v34 = *(_DWORD *)((char *)a1 + v20);
            unsigned int v35 = ~v34;
LABEL_58:
            unsigned int v42 = 0x7FFFFFFF;
LABEL_59:
            if (v42 > v35) {
              return -v34;
            }
            else {
              return 0;
            }
          }
          int v37 = v39 + 5;
          if (v39 > 0xFA)
          {
            int v41 = *(unsigned __int16 *)((char *)a1 + v20);
            unsigned int v34 = v41 | 0xFFFF0000;
            unsigned int v35 = v41 ^ 0xFFFF;
            char v36 = 16;
          }
          else
          {
            int v40 = *((unsigned __int8 *)a1 + v20);
            unsigned int v34 = v40 | 0xFFFFFF00;
            unsigned int v35 = v40 ^ 0xFF;
            char v36 = 8;
          }
        }
        else
        {
          int v33 = *((unsigned __int8 *)a1 + v20);
          unsigned int v34 = v33 | 0xFFFFFF00;
          unsigned int v35 = v33 ^ 0xFF;
          char v36 = 8;
          int v37 = 6;
        }
        unsigned int v42 = (1 << v36) - v37;
        if ((v42 & 0x80000000) == 0) {
          goto LABEL_59;
        }
        goto LABEL_58;
      }
      return 0;
    }
  }
  int v30 = *((unsigned __int8 *)a1 + v28);
  if (!*((unsigned char *)a1 + v28)) {
    goto LABEL_48;
  }
LABEL_40:
  int v32 = (v30 - 1) << v29;
  if (v28 > 3) {
    int v32 = 0;
  }
  if (v28)
  {
    if (v28 > 3) {
      LODWORD(v28) = 4;
    }
    switch((int)v28)
    {
      case 2:
        LODWORD(v28) = *a1;
        break;
      case 3:
        LODWORD(v28) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v28) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v28) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v25 + (v28 | v32) + 1;
}

void sub_24E5A9704(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v4 = *(void *)(a4[4] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v5;
  }
  unint64_t v40 = v5
      + ((((*(void *)(*(void *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80))
        + *(void *)(*(void *)(a4[3] - 8) + 64)
        + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v12 | 7;
  uint64_t v14 = ((v7 + 8) & ~v7) + (v9 | 7) + *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v14;
  }
  uint64_t v15 = (v14 + 1) & ~(v9 | 7);
  uint64_t v16 = ((v9 + 8) & ~v9) + v13 + *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v16;
  }
  uint64_t v17 = (v16 + v15 + 1) & ~v13;
  unint64_t v18 = ((v12 + 8) & ~v12)
      + *(void *)(v10 + 64)
      + (((v9 | v7 | v12) & 0xF8 ^ 0x1F8) & ((v9 | v7 | v12) + 8));
  if (!*(_DWORD *)(v11 + 84)) {
    ++v18;
  }
  unint64_t v19 = (v18 + v17 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = v19 + 8;
  if (v19 + 8 <= v40) {
    unint64_t v20 = v40;
  }
  unint64_t v21 = ((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v21 <= v20) {
    unint64_t v21 = v20;
  }
  if (v21 <= 8) {
    unint64_t v21 = 8;
  }
  char v22 = 8 * v21;
  if (v21 > 3)
  {
    int v23 = 6;
    goto LABEL_17;
  }
  unsigned int v31 = ((1 << v22) + 1) >> v22;
  if (v31 <= 0xFFFA)
  {
    int v23 = v31 + 5;
    if (v31 > 0xFA)
    {
      char v27 = 16;
      char v24 = a1;
      unsigned int v26 = a3;
      unsigned int v25 = a2;
LABEL_18:
      unsigned int v28 = (1 << v27) - v23;
      if ((v28 & 0x80000000) != 0) {
        unsigned int v28 = 0x7FFFFFFF;
      }
      if (v21 > 3) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
LABEL_17:
    char v24 = a1;
    unsigned int v26 = a3;
    unsigned int v25 = a2;
    char v27 = 8;
    goto LABEL_18;
  }
  unsigned int v28 = 0x7FFFFFFF;
  char v24 = a1;
  unsigned int v26 = a3;
  unsigned int v25 = a2;
  if (v21 > 3)
  {
LABEL_29:
    uint64_t v30 = 1;
    goto LABEL_30;
  }
LABEL_21:
  unsigned int v29 = ((1 << v22) + 1) >> v22;
  uint64_t v30 = 2;
  if (v29 > 0xFFFA) {
    uint64_t v30 = 4;
  }
  if (v29 <= 0xFA) {
    goto LABEL_29;
  }
LABEL_30:
  size_t v32 = v30 + v21;
  if (v26 <= v28)
  {
    int v33 = 0;
  }
  else if (v32 <= 3)
  {
    unsigned int v36 = ((v26 - v28 + ~(-1 << (8 * v32))) >> (8 * v32)) + 1;
    if (HIWORD(v36))
    {
      int v33 = 4;
    }
    else if (v36 >= 0x100)
    {
      int v33 = 2;
    }
    else
    {
      int v33 = v36 > 1;
    }
  }
  else
  {
    int v33 = 1;
  }
  if (v28 < v25)
  {
    unsigned int v34 = ~v28 + v25;
    if (v32 < 4)
    {
      int v35 = (v34 >> (8 * v32)) + 1;
      if (v32)
      {
        int v37 = v34 & ~(-1 << (8 * v32));
        bzero(v24, v32);
        if (v32 == 3)
        {
          *(_WORD *)char v24 = v37;
          v24[2] = BYTE2(v37);
        }
        else if (v32 == 2)
        {
          *(_WORD *)char v24 = v37;
        }
        else
        {
          *char v24 = v37;
        }
      }
    }
    else
    {
      bzero(v24, v32);
      *(_DWORD *)char v24 = v34;
      int v35 = 1;
    }
    switch(v33)
    {
      case 1:
        v24[v32] = v35;
        return;
      case 2:
        *(_WORD *)&v24[v32] = v35;
        return;
      case 3:
        goto LABEL_66;
      case 4:
        *(_DWORD *)&v24[v32] = v35;
        return;
      default:
        return;
    }
  }
  switch(v33)
  {
    case 1:
      v24[v32] = 0;
      if (!v25) {
        return;
      }
      goto LABEL_50;
    case 2:
      *(_WORD *)&v24[v32] = 0;
      if (!v25) {
        return;
      }
      goto LABEL_50;
    case 3:
LABEL_66:
      __break(1u);
      JUMPOUT(0x24E5A9C80);
    case 4:
      *(_DWORD *)&v24[v32] = 0;
      goto LABEL_49;
    default:
LABEL_49:
      if (!v25) {
        return;
      }
LABEL_50:
      int v38 = -v25;
      if (v21 > 3) {
        goto LABEL_51;
      }
      unsigned int v39 = ((1 << v22) + 1) >> v22;
      if (v39 > 0xFFFA)
      {
        *(_DWORD *)&v24[v21] = v38;
      }
      else if (v39 <= 0xFA)
      {
LABEL_51:
        v24[v21] = v38;
      }
      else
      {
        *(_WORD *)&v24[v21] = v38;
      }
      return;
  }
}

uint64_t sub_24E5A9CA8(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = *(void *)(a2[4] - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  if (!*(_DWORD *)(v2 + 84)) {
    ++v3;
  }
  unint64_t v24 = v3
      + ((((*(void *)(*(void *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80))
        + *(void *)(*(void *)(a2[3] - 8) + 64)
        + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v10 | 7;
  uint64_t v12 = ((v5 + 8) & ~v5) + (v7 | 7) + *(void *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v12;
  }
  uint64_t v13 = (v12 + 1) & ~(v7 | 7);
  uint64_t v14 = ((v7 + 8) & ~v7) + v11 + *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v14;
  }
  uint64_t v15 = (v14 + v13 + 1) & ~v11;
  unint64_t v16 = ((v10 + 8) & ~v10)
      + *(void *)(v8 + 64)
      + (((v7 | v5 | v10) & 0xF8 ^ 0x1F8) & ((v7 | v5 | v10) + 8));
  if (!*(_DWORD *)(v9 + 84)) {
    ++v16;
  }
  unint64_t v17 = (v16 + v15 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = v17 + 8;
  if (v17 + 8 <= v24) {
    unint64_t v18 = v24;
  }
  unint64_t v19 = ((v17 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v19 <= v18) {
    unint64_t v19 = v18;
  }
  if (v19 <= 8) {
    unint64_t v19 = 8;
  }
  if (v19 > 3) {
    goto LABEL_16;
  }
  unsigned int v21 = ((1 << (8 * v19)) + 1) >> (8 * v19);
  if (v21 > 0xFFFA)
  {
    uint64_t result = *(unsigned int *)&a1[v19];
  }
  else
  {
    if (v21 <= 0xFA)
    {
LABEL_16:
      uint64_t result = a1[v19];
      goto LABEL_21;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v19];
  }
LABEL_21:
  if (result >= 5)
  {
    if (v19 <= 3) {
      uint64_t v22 = v19;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *a1;
        if (v19 < 4) {
          goto LABEL_31;
        }
        goto LABEL_33;
      case 2:
        int v23 = *(unsigned __int16 *)a1;
        if (v19 >= 4) {
          goto LABEL_33;
        }
        goto LABEL_31;
      case 3:
        int v23 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v19 < 4) {
          goto LABEL_31;
        }
        goto LABEL_33;
      case 4:
        int v23 = *(_DWORD *)a1;
        if (v19 < 4) {
LABEL_31:
        }
          uint64_t result = (v23 | ((result - 5) << (8 * v19))) + 5;
        else {
LABEL_33:
        }
          uint64_t result = (v23 + 5);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24E5AA09C(unsigned char *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v4;
  }
  unint64_t v30 = v4
      + ((((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
        + *(void *)(*(void *)(a3[3] - 8) + 64)
        + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v11 | 7;
  uint64_t v13 = ((v6 + 8) & ~v6) + (v8 | 7) + *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v13;
  }
  uint64_t v14 = (v13 + 1) & ~(v8 | 7);
  uint64_t v15 = ((v8 + 8) & ~v8) + v12 + *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v15;
  }
  uint64_t v16 = (v15 + v14 + 1) & ~v12;
  unint64_t v17 = ((v11 + 8) & ~v11)
      + *(void *)(v9 + 64)
      + (((v8 | v6 | v11) & 0xF8 ^ 0x1F8) & ((v8 | v6 | v11) + 8));
  if (!*(_DWORD *)(v10 + 84)) {
    ++v17;
  }
  unint64_t v18 = (v17 + v16 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 8;
  if (v18 + 8 <= v30) {
    unint64_t v19 = v30;
  }
  unint64_t v20 = ((v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v20 <= v19) {
    unint64_t v20 = v19;
  }
  if (v20 <= 8) {
    size_t v21 = 8;
  }
  else {
    size_t v21 = v20;
  }
  if (a2 > 4)
  {
    unsigned int v22 = a2 - 5;
    if (v21 < 4)
    {
      int v25 = (v22 >> (8 * v21)) + 5;
      v22 &= ~(-1 << (8 * v21));
      int v23 = a1;
      unsigned int v26 = (int *)&a1[v21];
      unsigned int v27 = ((1 << (8 * v21)) + 1) >> (8 * v21);
      if (v27 > 0xFFFA)
      {
        int *v26 = v25;
      }
      else if (v27 > 0xFA)
      {
        *(_WORD *)unsigned int v26 = v25;
      }
      else
      {
        *(unsigned char *)unsigned int v26 = v25;
      }
    }
    else
    {
      int v23 = a1;
      a1[v21] = 5;
    }
    if (v21 >= 4) {
      int v28 = 4;
    }
    else {
      int v28 = v21;
    }
    bzero(v23, v21);
    switch(v28)
    {
      case 2:
        *(_WORD *)int v23 = v22;
        break;
      case 3:
        *(_WORD *)int v23 = v22;
        v23[2] = BYTE2(v22);
        break;
      case 4:
        *(_DWORD *)int v23 = v22;
        break;
      default:
        unsigned char *v23 = v22;
        break;
    }
  }
  else
  {
    if (v21 > 3)
    {
LABEL_18:
      a1[v21] = a2;
      return;
    }
    unsigned int v24 = ((1 << (8 * v21)) + 1) >> (8 * v21);
    if (v24 > 0xFFFA)
    {
      *(_DWORD *)&a1[v21] = a2;
    }
    else
    {
      if (v24 <= 0xFA) {
        goto LABEL_18;
      }
      *(_WORD *)&a1[v21] = a2;
    }
  }
}

uint64_t type metadata accessor for CombineLatestStateMachine.State.Upstream()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5AA508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 72);
}

uint64_t sub_24E5AA510()
{
  uint64_t result = sub_24E864388();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24E5AA5B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v10 = v9 + ((v7 + 8) & ~(unint64_t)v7) + 1;
  int v11 = v7 & 0x100000;
  if (v8 > 7 || v11 != 0 || v10 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v15 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
    uint64_t v16 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(((unint64_t)a2 + v8 + 8) & ~v8, 1, v4))
    {
      memcpy(v15, v16, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v15, v16, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v4);
    }
    *((unsigned char *)v15 + v9) = *((unsigned char *)v16 + v9);
  }
  return v3;
}

uint64_t sub_24E5AA72C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(v2 - 8);
  unint64_t v3 = (a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v2);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
    return v5(v3, v2);
  }
  return result;
}

void *sub_24E5AA804(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
    if (v9) {
      size_t v11 = v10;
    }
    else {
      size_t v11 = v10 + 1;
    }
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, v4);
    uint64_t v13 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v12 = v5 + 56;
    v13(v7, 0, 1, v4);
    int v9 = *(_DWORD *)(v12 + 28);
    size_t v10 = *(void *)(v12 + 8);
  }
  if (v9) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = v10 + 1;
  }
  *((unsigned char *)v7 + v14) = *((unsigned char *)v8 + v14);
  return a1;
}

void *sub_24E5AA938(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  int v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v10 = v9(v7, 1, v4);
  int v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(v7, v8, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      goto LABEL_12;
    }
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(v7, v8, v4);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  if (v12) {
    size_t v14 = v13;
  }
  else {
    size_t v14 = v13 + 1;
  }
  memcpy(v7, v8, v14);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v15 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v15 = *(void *)(v5 + 64) + 1;
  }
  *((unsigned char *)v7 + v15) = *((unsigned char *)v8 + v15);
  return a1;
}

void *sub_24E5AAAE8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
    if (v9) {
      size_t v11 = v10;
    }
    else {
      size_t v11 = v10 + 1;
    }
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    size_t v13 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v12 = v5 + 56;
    v13(v7, 0, 1, v4);
    int v9 = *(_DWORD *)(v12 + 28);
    size_t v10 = *(void *)(v12 + 8);
  }
  if (v9) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = v10 + 1;
  }
  *((unsigned char *)v7 + v14) = *((unsigned char *)v8 + v14);
  return a1;
}

void *sub_24E5AAC1C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  int v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v10 = v9(v7, 1, v4);
  int v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v7, v8, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      goto LABEL_12;
    }
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(v7, v8, v4);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  if (v12) {
    size_t v14 = v13;
  }
  else {
    size_t v14 = v13 + 1;
  }
  memcpy(v7, v8, v14);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v15 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v15 = *(void *)(v5 + 64) + 1;
  }
  *((unsigned char *)v7 + v15) = *((unsigned char *)v8 + v15);
  return a1;
}

uint64_t sub_24E5AADCC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 40) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  if (v5) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = 2;
  }
  if (!a2) {
    return 0;
  }
  int v10 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_29;
  }
  uint64_t v11 = v9 + *(void *)(*(void *)(*(void *)(a3 + 40) - 8) + 64) + ((v8 + 8) & ~v8);
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
    if (v15 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
    if (v15 < 2)
    {
LABEL_29:
      if (v6 > 0x7FFFFFFE)
      {
        unsigned int v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v8 + 8) & ~v8);
        if (v18 >= 2) {
          return v18 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        uint64_t v17 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v17) = -1;
        }
        if ((v17 + 1) >= 2) {
          return v17;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_29;
  }
LABEL_21:
  int v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v11 | v16) + 1;
}

void sub_24E5AAFC0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 40) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 40) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = v12 + ((v11 + 8) & ~v11) + 1;
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 == 0 || !v14)
  {
LABEL_17:
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v13 > 3)
  {
    int v6 = 1;
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  unsigned int v16 = ((v15 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
  if (!HIWORD(v16))
  {
    if (v16 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v16 > 1;
    }
    goto LABEL_17;
  }
  int v6 = 4;
  if (v10 < a2)
  {
LABEL_18:
    unsigned int v17 = ~v10 + a2;
    if (v13 < 4)
    {
      int v18 = (v17 >> (8 * v13)) + 1;
      if (v12 + ((v11 + 8) & ~v11) != -1)
      {
        int v19 = v17 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if (v13 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v13 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v18;
        return;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v13] = v18;
        return;
      default:
        return;
    }
  }
LABEL_25:
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x24E5AB2E8);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        if (v9 > 0x7FFFFFFE)
        {
          unint64_t v20 = (unsigned char *)((unint64_t)&a1[v11 + 8] & ~v11);
          if (v9 >= a2)
          {
            uint64_t v24 = a2 + 1;
            int v25 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
            unint64_t v26 = (unint64_t)&a1[v11 + 8] & ~v11;
            v25(v26, v24);
          }
          else
          {
            if (v12 <= 3) {
              int v21 = ~(-1 << (8 * v12));
            }
            else {
              int v21 = -1;
            }
            if (v12)
            {
              int v22 = v21 & (~v9 + a2);
              if (v12 <= 3) {
                int v23 = v12;
              }
              else {
                int v23 = 4;
              }
              bzero(v20, v12);
              switch(v23)
              {
                case 2:
                  *(_WORD *)unint64_t v20 = v22;
                  break;
                case 3:
                  *(_WORD *)unint64_t v20 = v22;
                  void v20[2] = BYTE2(v22);
                  break;
                case 4:
                  *(_DWORD *)unint64_t v20 = v22;
                  break;
                default:
                  *unint64_t v20 = v22;
                  break;
              }
            }
          }
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *(void *)a1 = 0;
          *(_DWORD *)a1 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *(void *)a1 = a2;
        }
      }
      return;
  }
}

uint64_t sub_24E5AB320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t type metadata accessor for ManagedCriticalState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E5AB340()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E5AB35C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E5AB378()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();

  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_24E5AB41C()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for AsyncThrottleSequence.Iterator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5AB454(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E56A260;
  return sub_24E58EB4C(a1, v1);
}

void sub_24E5AB4F0()
{
  sub_24E58FFC0(v0);
}

uint64_t sub_24E5AB4F8@<X0>(uint64_t *a1@<X8>)
{
  return sub_24E5903D0(a1);
}

uint64_t type metadata accessor for MergeStateMachine.CancelledAction()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24E5AB52C()
{
  unint64_t result = qword_2698F3170;
  if (!qword_2698F3170)
  {
    sub_24E863F68();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F3170);
  }
  return result;
}

unint64_t sub_24E5AB584(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for MergeStateMachine.NextAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5AB600(uint64_t a1)
{
  return sub_24E58FEC0(a1, v1);
}

uint64_t sub_24E5AB61C()
{
  uint64_t v1 = *((void *)v0 + 4);
  uint64_t v14 = *((void *)v0 + 5);
  uint64_t v2 = *((void *)v0 + 6);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v4 = (v16 + 88) & ~v16;
  uint64_t v5 = *(void *)(v14 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v4 + *(void *)(v3 + 64) + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = *(void *)(sub_24E864388() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v7 + v8 + v10) & ~v10;
  uint64_t v15 = *(void *)(v9 + 64);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(&v0[v4], v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(&v0[v7], v14);
  uint64_t v12 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&v0[v11], 1, v2)) {
    (*(void (**)(char *, uint64_t))(v12 + 8))(&v0[v11], v2);
  }

  return MEMORY[0x270FA0238](v0, v11 + v15, v16 | v6 | v10 | 7);
}

uint64_t sub_24E5AB84C(uint64_t a1)
{
  uint64_t v3 = v2;
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80);
  uint64_t v6 = *(void *)(v1[5] - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  unint64_t v8 = (v5 + *(void *)(*(void *)(v1[4] - 8) + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(sub_24E864388() - 8) + 80);
  unint64_t v10 = v8 + v7 + v9;
  uint64_t v11 = v1[10];
  uint64_t v12 = (char *)v1 + v5;
  size_t v13 = (char *)v1 + v8;
  uint64_t v14 = (char *)v1 + (v10 & ~v9);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  _OWORD v15[5] = v13;
  void v15[6] = v14;
  v15[3] = v11;
  void v15[4] = v12;
  v15[1] = sub_24E5699A4;
  v15[2] = a1;
  return MEMORY[0x270FA2498](sub_24E5904B4, 0, 0);
}

uint64_t sub_24E5AB9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t *)v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *unint64_t v10 = v3;
  v10[1] = sub_24E56A260;
  return sub_24E5906B4(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_24E5ABAC0@<X0>(uint64_t *a1@<X8>)
{
  return sub_24E5913D4(*(void **)(v1 + 24), a1);
}

uint64_t type metadata accessor for MergeStateMachine.UpstreamThrewAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5ABAF4(int a1, id a2, unint64_t a3)
{
  if (a3 >> 62 == 1)
  {

    swift_bridgeObjectRelease();
    return swift_release();
  }
  else if (!(a3 >> 62))
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24E5ABB90()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24E5ABC70(uint64_t a1)
{
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[11];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + v6;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_24E5699A4;
  return sub_24E5914BC(a1, v7, v8, v9, v10, v4, v5);
}

uint64_t type metadata accessor for MergeStateMachine.ElementProducedAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5ABDBC@<X0>(uint64_t *a1@<X8>)
{
  return sub_24E5927B4(a1);
}

uint64_t type metadata accessor for MergeStateMachine.UpstreamFinishedAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5ABDF4@<X0>(void *a1@<X8>)
{
  return sub_24E5926E0(*(void *)(v1 + 40), a1);
}

uint64_t sub_24E5ABE14@<X0>(uint64_t *a1@<X8>)
{
  return sub_24E592604(*(void *)(v1 + 40), a1);
}

uint64_t type metadata accessor for MergeStateMachine.ChildTaskSuspendedAction()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for AsyncChain2Sequence.Iterator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5ABE64@<X0>(uint64_t *a1@<X8>)
{
  return sub_24E58E800(a1);
}

uint64_t type metadata accessor for MergeStateMachine.IteratorDeinitializedAction()
{
  return swift_getGenericMetadata();
}

id sub_24E5ABE98@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)type metadata accessor for CombineLatestStateMachine();
  id result = sub_24E57A8DC(v2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t type metadata accessor for CombineLatestStateMachine.IteratorDeinitializedAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5ABF14(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24E5ABF54(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E56A260;
  return sub_24E58405C(a1, v1);
}

void sub_24E5ABFF0()
{
  sub_24E585448(v0);
}

unint64_t sub_24E5ABFF8(uint64_t a1)
{
  return sub_24E585590(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(char **)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_24E5AC01C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_24E5AC030();
  }
  return result;
}

uint64_t sub_24E5AC030()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_24E5AC074(uint64_t a1)
{
  sub_24E5844F0(a1, v1);
}

uint64_t sub_24E5AC07C(uint64_t a1)
{
  return sub_24E5845D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for CombineLatestStateMachine.NextAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5AC0B0()
{
  uint64_t v13 = *((void *)v0 + 5);
  uint64_t v14 = *((void *)v0 + 4);
  uint64_t v1 = *((void *)v0 + 6);
  uint64_t v2 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v16 + 80) & ~v16;
  uint64_t v4 = *(void *)(v13 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v8 = *(void *)(sub_24E864388() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = *(void *)(v8 + 64);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v3], v14);
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(&v0[v6], v13);
  unint64_t v10 = (v6 + v7 + v9) & ~v9;
  uint64_t v11 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&v0[v10], 1, v1)) {
    (*(void (**)(char *, uint64_t))(v11 + 8))(&v0[v10], v1);
  }

  return MEMORY[0x270FA0238](v0, v10 + v15, v16 | v5 | v9 | 7);
}

uint64_t sub_24E5AC2EC(uint64_t a1)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 32) - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 32) - 8) + 80);
  unint64_t v5 = (*(void *)(*(void *)(*(void *)(v1 + 32) - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(*(void *)(v1 + 40) - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(sub_24E864388() - 8) + 80);
  unint64_t v10 = v8 + v7 + v9;
  uint64_t v11 = v1 + v4;
  uint64_t v12 = *(void *)(v1 + v5);
  uint64_t v13 = v1 + v8;
  uint64_t v14 = v1 + (v10 & ~v9);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  _OWORD v15[5] = v13;
  void v15[6] = v14;
  v15[3] = v11;
  void v15[4] = v12;
  v15[1] = sub_24E56A260;
  v15[2] = a1;
  return MEMORY[0x270FA2498](sub_24E585A24, 0, 0);
}

uint64_t sub_24E5AC4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = (void *)v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *unint64_t v10 = v3;
  v10[1] = sub_24E56A260;
  return sub_24E585B14(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_24E5AC568()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24E5AC648(uint64_t a1)
{
  uint64_t v4 = v1[3];
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = (uint64_t)v1 + v5;
  uint64_t v8 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v1[4] - 8) + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_24E56A260;
  return sub_24E586860(a1, v6, v4, v7, v8);
}

uint64_t sub_24E5AC768()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24E5AC848(uint64_t a1)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1[5] - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[5] - 8) + 80);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (uint64_t)v1 + v4;
  uint64_t v8 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v1[5] - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_24E56A260;
  return sub_24E588200(a1, v5, v6, v7, v8);
}

unint64_t sub_24E5AC968(uint64_t a1)
{
  return sub_24E58B0D0(a1, *(void **)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_24E5AC990()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24E5ACA70(uint64_t a1)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1[6] - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[6] - 8) + 80);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (uint64_t)v1 + v4;
  uint64_t v8 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v1[6] - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_24E56A260;
  return sub_24E5898F8(a1, v5, v6, v7, v8);
}

unint64_t sub_24E5ACB90@<X0>(unint64_t *a1@<X8>)
{
  return sub_24E5ACDFC(2, a1);
}

uint64_t type metadata accessor for CombineLatestStateMachine.UpstreamFinishedAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5ACBC4(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_24E5ACBD8();
  }
  return result;
}

uint64_t sub_24E5ACBD8()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24E5ACC18(uint64_t a1)
{
  return sub_24E5ACEA4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_24E58A9FC);
}

uint64_t type metadata accessor for CombineLatestStateMachine.ElementProducedAction()
{
  return swift_getGenericMetadata();
}

void sub_24E5ACC5C(uint64_t a1)
{
}

void sub_24E5ACC78(uint64_t a1, uint64_t a2)
{
  sub_24E58A918(a1, v2[8], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

void sub_24E5ACCB0(uint64_t a1, uint64_t a2)
{
  if ((~a1 & 0xF00000000000000FLL) != 0 || (a2 & 0xF000000000000007) != 0xF000000000000007) {
    sub_24E5ACCD4(a1, a2);
  }
}

void sub_24E5ACCD4(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
}
  }

uint64_t sub_24E5ACCE4(uint64_t a1, id a2, uint64_t a3)
{
  if ((~(a1 & a3) & 0xF000000000000007) != 0) {
    return sub_24E5ACCFC(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_24E5ACCFC(int a1, id a2, uint64_t a3)
{
  if (a3 < 0)
  {

    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_24E5ACD7C@<X0>(unint64_t *a1@<X8>)
{
  return sub_24E5ACDFC(1, a1);
}

uint64_t sub_24E5ACD98(uint64_t a1)
{
  return sub_24E5ACEA4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_24E589220);
}

void sub_24E5ACDC4(uint64_t a1)
{
}

unint64_t sub_24E5ACDE0@<X0>(unint64_t *a1@<X8>)
{
  return sub_24E5ACDFC(0, a1);
}

unint64_t sub_24E5ACDFC@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  unint64_t v4 = (void *)type metadata accessor for CombineLatestStateMachine();
  unint64_t result = sub_24E57F6FC(a1, v4);
  *a2 = result;
  a2[1] = v6;
  a2[2] = v7;
  return result;
}

uint64_t sub_24E5ACE78(uint64_t a1)
{
  return sub_24E5ACEA4(a1, sub_24E58794C);
}

uint64_t sub_24E5ACEA4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[8], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

void sub_24E5ACED4(uint64_t a1)
{
}

uint64_t sub_24E5ACEF0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + *MEMORY[0x263F8DD00]) - 8) + 16))(a2, v3);
}

uint64_t type metadata accessor for AsyncChunksOfCountOrSignalSequence.Either()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for AsyncSyncSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for AsyncChain2Sequence()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for AsyncMerge2Sequence()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5ACFE8()
{
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24E5ACFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[4] = v6;
  v8[5] = v7;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_24E56A260;
  return MEMORY[0x270FA2498](sub_24E59715C, 0, 0);
}

uint64_t sub_24E5AD0BC()
{
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24E5AD0CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[3] = v4;
  v6[4] = v5;
  v6[1] = sub_24E56A260;
  v6[2] = a1;
  return MEMORY[0x270FA2498](sub_24E597270, 0, 0);
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5AD1B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_24E5AD1C0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24E5AD250(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_24E5AD308(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_24E5AD334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_24E5AD384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_24E5AD3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_24E5AD424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_24E5AD474(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_24E5AD5D0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x24E5AD7E8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_24E5AD810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_24E5AD818()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_24E5AD8A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  size_t v7 = *(void *)(v5 + 64);
  unint64_t v8 = v7;
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      unsigned int v10 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v10 > 0xFFFE)
      {
        uint64_t v9 = 4;
      }
      else
      {
        BOOL v11 = v10 != 0;
        BOOL v12 = v10 >= 0xFF;
        uint64_t v9 = 2;
        if (!v12) {
          uint64_t v9 = v11;
        }
      }
    }
    else
    {
      uint64_t v9 = 1;
    }
    unint64_t v8 = v9 + v7;
  }
  uint64_t v13 = *(_DWORD *)(v5 + 80);
  if (v13 <= 7 && v8 <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 2, AssociatedTypeWitness))
    {
      if (v6 <= 1)
      {
        if (v7 <= 3)
        {
          unsigned int v18 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
          if (v18 > 0xFFFE)
          {
            uint64_t v17 = 4;
          }
          else
          {
            BOOL v19 = v18 != 0;
            BOOL v12 = v18 >= 0xFF;
            uint64_t v17 = 2;
            if (!v12) {
              uint64_t v17 = v19;
            }
          }
        }
        else
        {
          uint64_t v17 = 1;
        }
        v7 += v17;
      }
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
    }
  }
  else
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  return a1;
}

uint64_t sub_24E5ADAC0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, AssociatedTypeWitness);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, AssociatedTypeWitness);
  }
  return result;
}

void *sub_24E5ADB98(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 2, AssociatedTypeWitness))
  {
    unsigned int v6 = *(_DWORD *)(v5 + 84);
    size_t v7 = *(void *)(v5 + 64);
    if (v6 <= 1)
    {
      if (v7 <= 3)
      {
        unsigned int v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
        if (v9 > 0xFFFE)
        {
          uint64_t v8 = 4;
        }
        else
        {
          BOOL v10 = v9 != 0;
          BOOL v11 = v9 >= 0xFF;
          uint64_t v8 = 2;
          if (!v11) {
            uint64_t v8 = v10;
          }
        }
      }
      else
      {
        uint64_t v8 = 1;
      }
      v7 += v8;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_24E5ADCF4(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 2, AssociatedTypeWitness);
  int v8 = v6(a2, 2, AssociatedTypeWitness);
  if (v7)
  {
    if (v8)
    {
      unsigned int v9 = *(_DWORD *)(v5 + 84);
      size_t v10 = *(void *)(v5 + 64);
      if (v9 <= 1)
      {
        if (v10 > 3)
        {
LABEL_5:
          uint64_t v11 = 1;
LABEL_16:
          v10 += v11;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v14 = (~(-1 << (8 * v10)) - v9 + 2) >> (8 * v10);
        if (v14 > 0xFFFE)
        {
          uint64_t v11 = 4;
        }
        else
        {
          BOOL v15 = v14 != 0;
          BOOL v16 = v14 >= 0xFF;
          uint64_t v11 = 2;
          if (!v16) {
            uint64_t v11 = v15;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  else
  {
    if (v8)
    {
      uint64_t v13 = *(void (**)(void *, uint64_t))(v5 + 8);
      uint64_t v12 = v5 + 8;
      v13(a1, AssociatedTypeWitness);
      unsigned int v9 = *(_DWORD *)(v12 + 76);
      size_t v10 = *(void *)(v12 + 56);
      if (v9 <= 1)
      {
        if (v10 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v10);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_24E5ADED4(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 2, AssociatedTypeWitness))
  {
    unsigned int v6 = *(_DWORD *)(v5 + 84);
    size_t v7 = *(void *)(v5 + 64);
    if (v6 <= 1)
    {
      if (v7 <= 3)
      {
        unsigned int v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
        if (v9 > 0xFFFE)
        {
          uint64_t v8 = 4;
        }
        else
        {
          BOOL v10 = v9 != 0;
          BOOL v11 = v9 >= 0xFF;
          uint64_t v8 = 2;
          if (!v11) {
            uint64_t v8 = v10;
          }
        }
      }
      else
      {
        uint64_t v8 = 1;
      }
      v7 += v8;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_24E5AE030(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 2, AssociatedTypeWitness);
  int v8 = v6(a2, 2, AssociatedTypeWitness);
  if (v7)
  {
    if (v8)
    {
      unsigned int v9 = *(_DWORD *)(v5 + 84);
      size_t v10 = *(void *)(v5 + 64);
      if (v9 <= 1)
      {
        if (v10 > 3)
        {
LABEL_5:
          uint64_t v11 = 1;
LABEL_16:
          v10 += v11;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v14 = (~(-1 << (8 * v10)) - v9 + 2) >> (8 * v10);
        if (v14 > 0xFFFE)
        {
          uint64_t v11 = 4;
        }
        else
        {
          BOOL v15 = v14 != 0;
          BOOL v16 = v14 >= 0xFF;
          uint64_t v11 = 2;
          if (!v16) {
            uint64_t v11 = v15;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  else
  {
    if (v8)
    {
      uint64_t v13 = *(void (**)(void *, uint64_t))(v5 + 8);
      uint64_t v12 = v5 + 8;
      v13(a1, AssociatedTypeWitness);
      unsigned int v9 = *(_DWORD *)(v12 + 76);
      size_t v10 = *(void *)(v12 + 56);
      if (v9 <= 1)
      {
        if (v10 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v10);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_24E5AE210(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 2;
  uint64_t v7 = *(void *)(v4 + 64);
  if (v5 <= 1)
  {
    unsigned int v6 = 0;
    if (v7 <= 3)
    {
      unsigned int v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        uint64_t v8 = 4;
      }
      else
      {
        BOOL v10 = v9 != 0;
        BOOL v11 = v9 >= 0xFF;
        uint64_t v8 = 2;
        if (!v11) {
          uint64_t v8 = v10;
        }
      }
    }
    else
    {
      uint64_t v8 = 1;
    }
    v7 += v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v6) {
    goto LABEL_28;
  }
  char v12 = 8 * v7;
  if (v7 <= 3)
  {
    unsigned int v14 = ((a2 - v6 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v14))
    {
      int v13 = *(_DWORD *)((char *)a1 + v7);
      if (!v13) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v14 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v14 < 2)
    {
LABEL_28:
      if (v6)
      {
        unsigned int v16 = (*(uint64_t (**)(unsigned __int16 *))(v4 + 48))(a1);
        if (v16 >= 3) {
          return v16 - 2;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_28;
  }
LABEL_20:
  int v15 = (v13 - 1) << v12;
  if (v7 > 3) {
    int v15 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v6 + (v7 | v15) + 1;
}

void sub_24E5AE424(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v8 = v7 - 2;
  size_t v9 = *(void *)(v6 + 64);
  if (v7 <= 1)
  {
    unsigned int v8 = 0;
    if (v9 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    v9 += v10;
  }
  if (a3 <= v8)
  {
    int v14 = 0;
  }
  else if (v9 <= 3)
  {
    unsigned int v17 = ((a3 - v8 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
    if (HIWORD(v17))
    {
      int v14 = 4;
    }
    else if (v17 >= 0x100)
    {
      int v14 = 2;
    }
    else
    {
      int v14 = v17 > 1;
    }
  }
  else
  {
    int v14 = 1;
  }
  if (v8 < a2)
  {
    unsigned int v15 = ~v8 + a2;
    if (v9 < 4)
    {
      int v16 = (v15 >> (8 * v9)) + 1;
      if (v9)
      {
        int v18 = v15 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v14)
    {
      case 1:
        a1[v9] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v16;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v9] = v16;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x24E5AE6CCLL);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        BOOL v19 = *(void (**)(unsigned char *, void))(v6 + 56);
        v19(a1, a2 + 2);
      }
      return;
  }
}

uint64_t sub_24E5AE6F4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48);

  return v3(a1, 2, AssociatedTypeWitness);
}

uint64_t sub_24E5AE778(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);

  return v5(a1, a2, 2, AssociatedTypeWitness);
}

uint64_t sub_24E5AE800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t sub_24E5AE808()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24E5AE8E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 32);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 9;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    unint64_t v19 = (v11 + v18) & 0xFFFFFFFFFFFFFFF8;
    char v20 = *(unsigned char *)(v19 + 8);
    unint64_t v21 = (v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v21 = *(void *)v19;
    *(unsigned char *)(v21 + 8) = v20;
  }
  return v4;
}

uint64_t sub_24E5AEA80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 32) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_24E5AEB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 32) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  char v17 = *(unsigned char *)(v16 + 8);
  *(void *)unint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v17;
  return a1;
}

uint64_t sub_24E5AEBFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 32) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  char v17 = *(unsigned char *)(v16 + 8);
  *(void *)unint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v17;
  return a1;
}

uint64_t sub_24E5AECD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 32) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  char v17 = *(unsigned char *)(v16 + 8);
  *(void *)unint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v17;
  return a1;
}

uint64_t sub_24E5AEDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 32) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  char v17 = *(unsigned char *)(v16 + 8);
  *(void *)unint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v17;
  return a1;
}

uint64_t sub_24E5AEE84(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 32);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  if (v10 < a2)
  {
    unint64_t v12 = ((*(void *)(*(void *)(v5 - 8) + 64) + (v11 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v13 = (a2 - v10 + 255) >> (8 * v12);
    if (v12 < 4) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      LODWORD(v15) = 4;
    }
    else {
      LODWORD(v15) = 2;
    }
    if (v14 < 0x100) {
      LODWORD(v15) = 1;
    }
    if (v14 >= 2) {
      uint64_t v15 = v15;
    }
    else {
      uint64_t v15 = 0;
    }
    switch(v15)
    {
      case 1:
        int v16 = a1[v12];
        if (!a1[v12]) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v16 = *(unsigned __int16 *)&a1[v12];
        if (*(_WORD *)&a1[v12]) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24E5AF048);
      case 4:
        int v16 = *(_DWORD *)&a1[v12];
        if (!v16) {
          break;
        }
LABEL_21:
        int v17 = (v16 - 1) << (8 * v12);
        if (v12 >= 4) {
          int v17 = 0;
        }
        if (v12 == 1) {
          int v18 = *a1;
        }
        else {
          int v18 = *(_DWORD *)a1;
        }
        return v10 + (v18 | v17) + 1;
      default:
        break;
    }
  }
  if (!v10) {
    return 0;
  }
  if (v6 >= v8) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))((unint64_t)&a1[v11] & ~v9, v8, v5);
}

void sub_24E5AF05C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 32);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = ((*(void *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v15 = 8 * v14;
  if (v12 >= a3)
  {
    int v19 = 0;
    if (v12 >= a2)
    {
LABEL_17:
      switch(v19)
      {
        case 1:
          a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_45;
        case 4:
          *(_DWORD *)&a1[v14] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 >= v10)
            {
              uint64_t v24 = *(void (**)(void))(v6 + 56);
              v24();
            }
            else
            {
              unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
              int v23 = *(void (**)(unint64_t))(v9 + 56);
              v23(v22);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = (a3 - v12 + 255) >> v15;
    if (v14 <= 3) {
      unsigned int v17 = v16 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    if (v12 >= a2) {
      goto LABEL_17;
    }
  }
  if (v14 < 4) {
    unsigned int v20 = ((~v12 + a2) >> v15) + 1;
  }
  else {
    unsigned int v20 = 1;
  }
  if (v14 >= 4) {
    unsigned int v21 = ~v12 + a2;
  }
  else {
    unsigned int v21 = (~(_BYTE)v12 + a2);
  }
  bzero(a1, v14);
  if (v14 == 1) {
    *a1 = v21;
  }
  else {
    *(_DWORD *)a1 = v21;
  }
  switch(v19)
  {
    case 1:
      a1[v14] = v20;
      break;
    case 2:
      *(_WORD *)&a1[v14] = v20;
      break;
    case 3:
LABEL_45:
      __break(1u);
      JUMPOUT(0x24E5AF2E4);
    case 4:
      *(_DWORD *)&a1[v14] = v20;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for AsyncChunksOfCountOrSignalSequence()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5AF324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_24E5AF32C()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t AssociatedTypeWitness = sub_24E864388();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_24E5AF464(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = *(void *)(v9 + 64);
  uint64_t v13 = v12 + v10;
  uint64_t v14 = (v12 + v10 + ((v7 + v10) & ~v10)) & ~v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v15 = *(void *)(v9 + 64);
  }
  else {
    size_t v15 = v12 + 1;
  }
  unint64_t v16 = v14 + v15;
  uint64_t v17 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v17 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v16 > 0x18)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  else
  {
    uint64_t v21 = AssociatedTypeWitness;
    uint64_t v22 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v23 = ((unint64_t)a1 + v11) & v22;
    unint64_t v24 = ((unint64_t)a2 + v11) & v22;
    int v25 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    v25(v23, v24, v21);
    unint64_t __dst = (void *)((v13 + v23) & v22);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((v13 + v24) & v22, 1, v21))
    {
      memcpy(__dst, (const void *)((v13 + v24) & v22), v15);
    }
    else
    {
      v25((unint64_t)__dst, (v13 + v24) & v22, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t sub_24E5AF69C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + a1 + v7) & ~v7;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11(v8, AssociatedTypeWitness);
  uint64_t v9 = (*(void *)(v6 + 64) + v7 + v8) & ~v7;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v9, 1, AssociatedTypeWitness);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_24E5AF7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v17 = a1;
  uint64_t v11 = (v6 + v9 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v13(v11, v12, AssociatedTypeWitness);
  size_t v14 = *(void *)(v8 + 64);
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v8 + 48))((v14 + v9 + v12) & ~v9, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy((void *)((v14 + v9 + v11) & ~v9), (const void *)((v14 + v9 + v12) & ~v9), v15);
  }
  else
  {
    v13((v14 + v9 + v11) & ~v9, (v14 + v9 + v12) & ~v9, AssociatedTypeWitness);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v8 + 56))((v14 + v9 + v11) & ~v9, 0, 1, AssociatedTypeWitness);
  }
  return v17;
}

uint64_t sub_24E5AF9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v23 = a1;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  size_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  v14(v12, v13, AssociatedTypeWitness);
  size_t v15 = *(void *)(v8 + 64);
  unint64_t v16 = (void *)((v15 + v10 + v12) & ~v10);
  uint64_t v17 = (void *)((v15 + v10 + v13) & ~v10);
  int v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v12) = v18(v16, 1, AssociatedTypeWitness);
  int v19 = v18(v17, 1, AssociatedTypeWitness);
  if (v12)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v16, v17, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, AssociatedTypeWitness);
      return v23;
    }
    int v20 = *(_DWORD *)(v9 + 84);
  }
  else
  {
    if (!v19)
    {
      v14((uint64_t)v16, (uint64_t)v17, AssociatedTypeWitness);
      return v23;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v16, AssociatedTypeWitness);
    int v20 = *(_DWORD *)(v9 + 84);
  }
  if (v20) {
    size_t v21 = v15;
  }
  else {
    size_t v21 = v15 + 1;
  }
  memcpy(v16, v17, v21);
  return v23;
}

uint64_t sub_24E5AFBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v17 = a1;
  uint64_t v11 = (v6 + v9 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v13(v11, v12, AssociatedTypeWitness);
  size_t v14 = *(void *)(v8 + 64);
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v8 + 48))((v14 + v9 + v12) & ~v9, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy((void *)((v14 + v9 + v11) & ~v9), (const void *)((v14 + v9 + v12) & ~v9), v15);
  }
  else
  {
    v13((v14 + v9 + v11) & ~v9, (v14 + v9 + v12) & ~v9, AssociatedTypeWitness);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v8 + 56))((v14 + v9 + v11) & ~v9, 0, 1, AssociatedTypeWitness);
  }
  return v17;
}

uint64_t sub_24E5AFD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v23 = a1;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  size_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  v14(v12, v13, AssociatedTypeWitness);
  size_t v15 = *(void *)(v8 + 64);
  unint64_t v16 = (void *)((v15 + v10 + v12) & ~v10);
  uint64_t v17 = (void *)((v15 + v10 + v13) & ~v10);
  int v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v12) = v18(v16, 1, AssociatedTypeWitness);
  int v19 = v18(v17, 1, AssociatedTypeWitness);
  if (v12)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v16, v17, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, AssociatedTypeWitness);
      return v23;
    }
    int v20 = *(_DWORD *)(v9 + 84);
  }
  else
  {
    if (!v19)
    {
      v14((uint64_t)v16, (uint64_t)v17, AssociatedTypeWitness);
      return v23;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v16, AssociatedTypeWitness);
    int v20 = *(_DWORD *)(v9 + 84);
  }
  if (v20) {
    size_t v21 = v15;
  }
  else {
    size_t v21 = v15 + 1;
  }
  memcpy(v16, v17, v21);
  return v23;
}

uint64_t sub_24E5AFFA8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  unsigned int v12 = v10 - 1;
  if (!v10) {
    unsigned int v12 = 0;
  }
  if (v12 > v11) {
    unsigned int v11 = v12;
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v10) {
    uint64_t v15 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    uint64_t v15 = v14 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v16 = AssociatedTypeWitness;
  uint64_t v17 = *(void *)(v6 + 64) + v13;
  uint64_t v18 = v14 + v13;
  if (a2 <= v11) {
    goto LABEL_31;
  }
  uint64_t v19 = v15 + ((v18 + (v17 & ~v13)) & ~v13);
  char v20 = 8 * v19;
  if (v19 <= 3)
  {
    unsigned int v22 = ((a2 - v11 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v22))
    {
      int v21 = *(_DWORD *)((char *)a1 + v19);
      if (!v21) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v22 > 0xFF)
    {
      int v21 = *(unsigned __int16 *)((char *)a1 + v19);
      if (!*(unsigned __int16 *)((char *)a1 + v19)) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v22 < 2)
    {
LABEL_31:
      if (v11)
      {
        if (v7 == v11)
        {
          unint64_t v26 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v26(a1, v7, v5);
        }
        else
        {
          uint64_t v28 = ~v13;
          unint64_t v29 = ((unint64_t)a1 + v17) & v28;
          if (v10 == v11)
          {
            unint64_t v30 = *(uint64_t (**)(unint64_t))(v9 + 48);
            return v30(v29);
          }
          else
          {
            unsigned int v31 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((v18 + v29) & v28, v10, v16);
            if (v31 >= 2) {
              return v31 - 1;
            }
            else {
              return 0;
            }
          }
        }
      }
      return 0;
    }
  }
  int v21 = *((unsigned __int8 *)a1 + v19);
  if (!*((unsigned char *)a1 + v19)) {
    goto LABEL_31;
  }
LABEL_21:
  int v23 = (v21 - 1) << v20;
  if (v19 > 3) {
    int v23 = 0;
  }
  if (v19)
  {
    if (v19 <= 3) {
      int v24 = v19;
    }
    else {
      int v24 = 4;
    }
    switch(v24)
    {
      case 2:
        int v25 = *a1;
        break;
      case 3:
        int v25 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v25 = *(_DWORD *)a1;
        break;
      default:
        int v25 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v25 = 0;
  }
  return v11 + (v25 | v23) + 1;
}

void sub_24E5B0290(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v36 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  int v10 = 0;
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = v11;
  unsigned int v13 = *(_DWORD *)(v11 + 84);
  if (v13 <= v9) {
    unsigned int v14 = v9;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  unsigned int v15 = v13 - 1;
  if (!v13) {
    unsigned int v15 = 0;
  }
  if (v15 > v14) {
    unsigned int v14 = v15;
  }
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = *(void *)(v8 + 64) + v16;
  uint64_t v18 = *(void *)(v11 + 64);
  uint64_t v19 = v18 + v16;
  if (v13) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v18 + 1;
  }
  size_t v21 = v20 + ((v18 + v16 + (v17 & ~v16)) & ~v16);
  if (a3 <= v14) {
    goto LABEL_19;
  }
  if (v21 <= 3)
  {
    unsigned int v22 = ((a3 - v14 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
    if (HIWORD(v22))
    {
      int v10 = 4;
      if (v14 >= a2) {
        goto LABEL_27;
      }
LABEL_20:
      unsigned int v23 = ~v14 + a2;
      if (v21 < 4)
      {
        int v24 = (v23 >> (8 * v21)) + 1;
        if (v21)
        {
          int v25 = v23 & ~(-1 << (8 * v21));
          bzero(a1, v21);
          if (v21 == 3)
          {
            *(_WORD *)a1 = v25;
            a1[2] = BYTE2(v25);
          }
          else if (v21 == 2)
          {
            *(_WORD *)a1 = v25;
          }
          else
          {
            *a1 = v25;
          }
        }
      }
      else
      {
        bzero(a1, v21);
        *(_DWORD *)a1 = v23;
        int v24 = 1;
      }
      switch(v10)
      {
        case 1:
          a1[v21] = v24;
          break;
        case 2:
          *(_WORD *)&a1[v21] = v24;
          break;
        case 3:
LABEL_67:
          __break(1u);
          JUMPOUT(0x24E5B0684);
        case 4:
          *(_DWORD *)&a1[v21] = v24;
          break;
        default:
          return;
      }
      return;
    }
    if (v22 >= 0x100) {
      int v10 = 2;
    }
    else {
      int v10 = v22 > 1;
    }
LABEL_19:
    if (v14 >= a2) {
      goto LABEL_27;
    }
    goto LABEL_20;
  }
  int v10 = 1;
  if (v14 < a2) {
    goto LABEL_20;
  }
LABEL_27:
  uint64_t v26 = ~v16;
  switch(v10)
  {
    case 1:
      a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
      goto LABEL_67;
    case 4:
      *(_DWORD *)&a1[v21] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (!a2) {
        return;
      }
LABEL_32:
      if (v9 == v14)
      {
        unsigned int v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
        v27(a1, a2, v9, v7);
        return;
      }
      unint64_t v28 = (unint64_t)&a1[v17] & v26;
      if (v13 == v14)
      {
        unint64_t v29 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
        uint64_t v30 = a2;
LABEL_61:
        v29(v28, v30);
        return;
      }
      unint64_t v31 = (v19 + v28) & v26;
      if (v13) {
        size_t v32 = v18;
      }
      else {
        size_t v32 = (v18 + 1);
      }
      if (v15 >= a2)
      {
        uint64_t v30 = (a2 + 1);
        unint64_t v29 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
        unint64_t v28 = (v19 + v28) & v26;
        goto LABEL_61;
      }
      if (v32 <= 3) {
        int v33 = ~(-1 << (8 * v32));
      }
      else {
        int v33 = -1;
      }
      if (v32)
      {
        int v34 = v33 & (~v15 + a2);
        if (v32 <= 3) {
          int v35 = v32;
        }
        else {
          int v35 = 4;
        }
        bzero((void *)((v19 + v28) & v26), v32);
        switch(v35)
        {
          case 2:
            *(_WORD *)unint64_t v31 = v34;
            break;
          case 3:
            *(_WORD *)unint64_t v31 = v34;
            *(unsigned char *)(v31 + 2) = BYTE2(v34);
            break;
          case 4:
            *(_DWORD *)unint64_t v31 = v34;
            break;
          default:
            *(unsigned char *)unint64_t v31 = v34;
            break;
        }
      }
      break;
  }
}

uint64_t type metadata accessor for AsyncTimerSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E5B06D4(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_24E864388();
  swift_getTupleTypeMetadata3();
  sub_24E864388();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
  uint64_t result = sub_24E864AA8();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t *sub_24E5B0854(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  int v3 = *(_DWORD *)(v2 + 80);
  uint64_t v65 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v65 - 8);
  uint64_t v5 = v4;
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  int v7 = *(_DWORD *)(v4 + 80) | v3;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = v6;
  uint64_t v10 = v2;
  uint64_t v11 = *(void *)(v8 - 8);
  int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(_DWORD *)(v11 + 80);
  int v14 = v7 | *(_DWORD *)(v11 + 80);
  uint64_t v15 = v14 & 0xF8 | 7u;
  uint64_t v16 = ~v15;
  uint64_t v17 = *(unsigned int *)(v2 + 84);
  uint64_t v18 = *(unsigned int *)(v4 + 84);
  if (v18 <= v17) {
    unsigned int v19 = *(_DWORD *)(v2 + 84);
  }
  else {
    unsigned int v19 = *(_DWORD *)(v4 + 84);
  }
  unsigned int v20 = v12 - 1;
  if (!v12) {
    unsigned int v20 = 0;
  }
  if (v20 <= v19) {
    unsigned int v21 = v19;
  }
  else {
    unsigned int v21 = v20;
  }
  uint64_t v22 = *(void *)(v2 + 64) + v9;
  uint64_t v23 = *(void *)(v4 + 64);
  uint64_t v24 = v23 + v13;
  uint64_t v25 = (v23 + v13 + (v22 & ~v9)) & ~v13;
  if (v12) {
    uint64_t v26 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  else {
    uint64_t v26 = *(void *)(*(void *)(v8 - 8) + 64) + 1;
  }
  uint64_t v27 = v25 + v26;
  if (v21) {
    size_t v28 = v25 + v26;
  }
  else {
    size_t v28 = v27 + 1;
  }
  if (v28 <= 8) {
    uint64_t v29 = 8;
  }
  else {
    uint64_t v29 = v28;
  }
  if ((v14 & 0x1000F8) != 0 || v29 + ((v15 + 8) & (unint64_t)~v15) + 1 > 0x18)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    size_t v32 = (uint64_t *)(v31 + ((v15 + 16) & v16));
    swift_retain();
  }
  else
  {
    size_t v32 = a1;
    *a1 = *a2;
    int v33 = (void *)(((unint64_t)a1 + v15 + 8) & v16);
    int v34 = (unsigned __int8 *)(((unint64_t)a2 + v15 + 8) & v16);
    unsigned int v35 = v34[v29];
    unsigned int v36 = v35 - 2;
    if (v35 < 2)
    {
      uint64_t v38 = v65;
LABEL_31:
      if (v35 != 1) {
        goto LABEL_39;
      }
    }
    else
    {
      if (v29 <= 3) {
        uint64_t v37 = v29;
      }
      else {
        uint64_t v37 = 4;
      }
      uint64_t v38 = v65;
      switch(v37)
      {
        case 1:
          int v39 = *v34;
          break;
        case 2:
          int v39 = *(unsigned __int16 *)v34;
          break;
        case 3:
          int v39 = *(unsigned __int16 *)v34 | (v34[2] << 16);
          break;
        case 4:
          int v39 = *(_DWORD *)v34;
          break;
        default:
          goto LABEL_31;
      }
      int v42 = (v39 | (v36 << (8 * v29))) + 2;
      int v43 = v39 + 2;
      if (v29 < 4) {
        int v43 = v42;
      }
      if (v43 != 1)
      {
LABEL_39:
        uint64_t v63 = v8;
        uint64_t v59 = v27;
        size_t __n = v26;
        __dsta = v33;
        uint64_t v61 = ~v9;
        uint64_t v62 = ~v13;
        if (v21)
        {
          if (v17 == v21)
          {
            unsigned int v44 = v21;
            uint64_t v45 = v10;
            int v46 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v34, v17, AssociatedTypeWitness);
            uint64_t v10 = v45;
            unsigned int v21 = v44;
            int v33 = __dsta;
            if (!v46) {
              goto LABEL_56;
            }
LABEL_66:
            memcpy(v33, v34, v28);
            goto LABEL_67;
          }
          uint64_t v50 = v10;
          unint64_t v51 = (unint64_t)&v34[v22] & ~v9;
          unsigned int v52 = v21;
          if (v18 != v21)
          {
            unsigned int v54 = (*(uint64_t (**)(unint64_t))(v11 + 48))((v24 + v51) & ~v13);
            unsigned int v21 = v52;
            uint64_t v10 = v50;
            int v33 = __dsta;
            if (v54 < 2) {
              goto LABEL_56;
            }
            goto LABEL_66;
          }
          int v53 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v51, v18, v38);
          unsigned int v21 = v52;
          uint64_t v10 = v50;
          int v33 = __dsta;
          if (v53) {
            goto LABEL_66;
          }
        }
        else if (v34[v27])
        {
          int v47 = (v34[v27] - 1) << (8 * v27);
          if (v27 > 3) {
            int v47 = 0;
          }
          if (v27)
          {
            int v48 = v27 <= 3 ? v27 : 4;
            switch(v48)
            {
              case 2:
                int v49 = *(unsigned __int16 *)v34;
                break;
              case 3:
                int v49 = *(unsigned __int16 *)v34 | (v34[2] << 16);
                break;
              case 4:
                int v49 = *(_DWORD *)v34;
                break;
              default:
                int v49 = *v34;
                break;
            }
          }
          else
          {
            int v49 = 0;
          }
          if ((v49 | v47) != 0xFFFFFFFF) {
            goto LABEL_66;
          }
        }
LABEL_56:
        unsigned int v55 = v21;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v10 + 16))(v33, v34, AssociatedTypeWitness);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)v33 + v22) & v61, (unint64_t)&v34[v22] & v61, v65);
        unsigned int v56 = (void *)((v24 + (((unint64_t)v33 + v22) & v61)) & v62);
        unsigned int v57 = (const void *)((v24 + ((unint64_t)&v34[v22] & v61)) & v62);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v57, 1, v63))
        {
          memcpy(v56, v57, __n);
          int v33 = __dsta;
          if (!v55) {
            goto LABEL_60;
          }
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v56, v57, v63);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v56, 0, 1, v63);
          int v33 = __dsta;
          if (!v55) {
LABEL_60:
          }
            *((unsigned char *)v33 + v59) = 0;
        }
LABEL_67:
        *((unsigned char *)v33 + v29) = 0;
        return v32;
      }
    }
    uint64_t v40 = *(void *)v34;
    id v41 = *(id *)v34;
    void *v33 = v40;
    *((unsigned char *)v33 + v29) = 1;
  }
  return v32;
}

void sub_24E5B0E14(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  int v2 = *(_DWORD *)(v1 + 80);
  uint64_t v39 = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(v39 - 8);
  uint64_t v4 = v3;
  int v5 = *(_DWORD *)(v3 + 80);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  char v9 = v5 | v2 | *(_DWORD *)(v7 + 80);
  uint64_t v10 = v1;
  uint64_t v11 = v9 & 0xF8 | 7u;
  uint64_t v12 = *(unsigned int *)(v1 + 84);
  uint64_t v13 = *(unsigned int *)(v3 + 84);
  uint64_t v14 = *(void *)(v1 + 64);
  uint64_t v15 = *(void *)(v3 + 64);
  uint64_t v16 = *(void *)(v7 + 64);
  uint64_t v17 = *(_DWORD *)(v7 + 80);
  uint64_t v18 = (unsigned __int8 *)((a1 + v11 + 8) & ~v11);
  if (v13 <= v12) {
    unsigned int v19 = *(_DWORD *)(v1 + 84);
  }
  else {
    unsigned int v19 = *(_DWORD *)(v3 + 84);
  }
  unsigned int v20 = v8 - 1;
  if (!v8) {
    unsigned int v20 = 0;
  }
  if (v20 > v19) {
    unsigned int v19 = v20;
  }
  uint64_t v21 = v14 + v5;
  uint64_t v22 = v15 + v17;
  if (!v8) {
    ++v16;
  }
  unint64_t v23 = v16 + ((v15 + v17 + ((v14 + v5) & ~(unint64_t)v5)) & ~v17);
  if (v19) {
    unint64_t v24 = v23;
  }
  else {
    unint64_t v24 = v23 + 1;
  }
  if (v24 <= 8) {
    unint64_t v24 = 8;
  }
  unsigned int v25 = v18[v24];
  if (v25 >= 2)
  {
    if (v24 <= 3) {
      uint64_t v26 = v24;
    }
    else {
      uint64_t v26 = 4;
    }
    switch(v26)
    {
      case 1:
        int v27 = *v18;
        goto LABEL_24;
      case 2:
        int v27 = *(unsigned __int16 *)v18;
        goto LABEL_24;
      case 3:
        int v27 = *(unsigned __int16 *)v18 | (v18[2] << 16);
        goto LABEL_24;
      case 4:
        int v27 = *(_DWORD *)v18;
LABEL_24:
        int v28 = (v27 | ((v25 - 2) << (8 * v24))) + 2;
        unsigned int v29 = v27 + 2;
        if (v24 >= 4) {
          unsigned int v25 = v29;
        }
        else {
          unsigned int v25 = v28;
        }
        break;
      default:
        break;
    }
  }
  if (v25 == 1)
  {
    uint64_t v30 = *(void **)v18;

    return;
  }
  unint64_t v31 = ~(unint64_t)v5;
  uint64_t v32 = ~v17;
  uint64_t v38 = *(void *)(v6 - 8);
  if (v19)
  {
    if (v12 == v19)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v18, v12, AssociatedTypeWitness))
      {
        return;
      }
    }
    else
    {
      unint64_t v36 = (unint64_t)&v18[v21] & v31;
      if (v13 == v19)
      {
        if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v36, v13, v39)) {
          return;
        }
      }
      else if ((*(unsigned int (**)(unint64_t))(v7 + 48))((v22 + v36) & v32) >= 2)
      {
        return;
      }
    }
    goto LABEL_54;
  }
  if (!v18[v23]) {
    goto LABEL_54;
  }
  int v33 = (v18[v23] - 1) << (8 * v23);
  if (v23 > 3) {
    int v33 = 0;
  }
  if (v23)
  {
    int v34 = v23 <= 3 ? v23 : 4;
    switch(v34)
    {
      case 2:
        int v35 = *(unsigned __int16 *)v18;
        break;
      case 3:
        int v35 = *(unsigned __int16 *)v18 | (v18[2] << 16);
        break;
      case 4:
        int v35 = *(_DWORD *)v18;
        break;
      default:
        int v35 = *v18;
        break;
    }
  }
  else
  {
    int v35 = 0;
  }
  if ((v35 | v33) == 0xFFFFFFFF)
  {
LABEL_54:
    (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v18, AssociatedTypeWitness);
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))((unint64_t)&v18[v21] & v31, v39);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v38 + 48))((v22 + ((unint64_t)&v18[v21] & v31)) & v32, 1, v6))
    {
      uint64_t v37 = *(void (**)(unint64_t, uint64_t))(v38 + 8);
      v37((v22 + ((unint64_t)&v18[v21] & v31)) & v32, v6);
    }
  }
}

void *sub_24E5B12CC(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  int v3 = *(_DWORD *)(v2 + 80);
  uint64_t v52 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v52 - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  int v6 = *(_DWORD *)(v4 + 80) | v3;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = v5;
  uint64_t v9 = *(void *)(v7 - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(_DWORD *)(v9 + 80);
  char v12 = v6 | *(_DWORD *)(v9 + 80);
  uint64_t v13 = a1;
  uint64_t v14 = v12 & 0xF8 | 7u;
  uint64_t v15 = (void *)(((unint64_t)a1 + v14 + 8) & ~v14);
  uint64_t v16 = (unsigned __int8 *)(((unint64_t)a2 + v14 + 8) & ~v14);
  uint64_t v55 = v2;
  uint64_t v17 = *(unsigned int *)(v2 + 84);
  uint64_t v51 = v4;
  uint64_t v18 = *(unsigned int *)(v4 + 84);
  if (v18 <= v17) {
    unsigned int v19 = *(_DWORD *)(v2 + 84);
  }
  else {
    unsigned int v19 = *(_DWORD *)(v4 + 84);
  }
  unsigned int v20 = v10 - 1;
  if (!v10) {
    unsigned int v20 = 0;
  }
  if (v20 <= v19) {
    unsigned int v21 = v19;
  }
  else {
    unsigned int v21 = v20;
  }
  uint64_t v22 = *(void *)(v2 + 64) + v8;
  uint64_t v23 = *(void *)(v4 + 64);
  uint64_t v24 = v23 + v11;
  uint64_t v25 = (v23 + v11 + (v22 & ~v8)) & ~v11;
  if (v10) {
    uint64_t v26 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  else {
    uint64_t v26 = *(void *)(*(void *)(v7 - 8) + 64) + 1;
  }
  uint64_t v27 = v25 + v26;
  if (v21) {
    size_t v28 = v25 + v26;
  }
  else {
    size_t v28 = v27 + 1;
  }
  if (v28 <= 8) {
    uint64_t v29 = 8;
  }
  else {
    uint64_t v29 = v28;
  }
  unsigned int v30 = v16[v29];
  unsigned int v31 = v30 - 2;
  if (v30 >= 2)
  {
    if (v29 <= 3) {
      uint64_t v32 = v29;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *v16;
        goto LABEL_27;
      case 2:
        int v33 = *(unsigned __int16 *)v16;
        goto LABEL_27;
      case 3:
        int v33 = *(unsigned __int16 *)v16 | (v16[2] << 16);
        goto LABEL_27;
      case 4:
        int v33 = *(_DWORD *)v16;
LABEL_27:
        int v34 = (v33 | (v31 << (8 * v29))) + 2;
        unsigned int v30 = v33 + 2;
        if (v29 < 4) {
          unsigned int v30 = v34;
        }
        break;
      default:
        break;
    }
  }
  if (v30 == 1)
  {
    uint64_t v35 = *(void *)v16;
    id v36 = *(id *)v16;
    *uint64_t v15 = v35;
    char v37 = 1;
    goto LABEL_59;
  }
  uint64_t v49 = ~v11;
  uint64_t v50 = v7;
  size_t __n = v26;
  uint64_t v48 = ~v8;
  if (!v21)
  {
    if (!v16[v27]) {
      goto LABEL_48;
    }
    int v38 = (v16[v27] - 1) << (8 * v27);
    if (v27 > 3) {
      int v38 = 0;
    }
    if (v27)
    {
      int v39 = v27 <= 3 ? v25 + v26 : 4;
      switch(v39)
      {
        case 2:
          int v40 = *(unsigned __int16 *)v16;
          break;
        case 3:
          int v40 = *(unsigned __int16 *)v16 | (v16[2] << 16);
          break;
        case 4:
          int v40 = *(_DWORD *)v16;
          break;
        default:
          int v40 = *v16;
          break;
      }
    }
    else
    {
      int v40 = 0;
    }
    if ((v40 | v38) == 0xFFFFFFFF) {
      goto LABEL_48;
    }
    goto LABEL_58;
  }
  if (v17 == v21)
  {
    if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v55 + 48))(v16, v17, AssociatedTypeWitness))goto LABEL_48; {
LABEL_58:
    }
    memcpy(v15, v16, v28);
    char v37 = 0;
    goto LABEL_59;
  }
  unint64_t v41 = (unint64_t)&v16[v22] & ~v8;
  if (v18 == v21)
  {
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v51 + 48))(v41, v18, v52)) {
      goto LABEL_48;
    }
    goto LABEL_58;
  }
  if ((*(unsigned int (**)(unint64_t))(v9 + 48))((v24 + v41) & ~v11) >= 2) {
    goto LABEL_58;
  }
LABEL_48:
  uint64_t v46 = v27;
  (*(void (**)(void *, unsigned __int8 *, uint64_t))(v55 + 16))(v15, v16, AssociatedTypeWitness);
  unint64_t v42 = (unint64_t)&v16[v22] & v48;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 16))(((unint64_t)v15 + v22) & v48, v42, v52);
  int v43 = (void *)((v24 + (((unint64_t)v15 + v22) & v48)) & v49);
  unsigned int v44 = (const void *)((v24 + v42) & v49);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v44, 1, v50))
  {
    memcpy(v43, v44, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v43, v44, v50);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v43, 0, 1, v50);
  }
  uint64_t v13 = a1;
  char v37 = 0;
  if (!v21) {
    *((unsigned char *)v15 + v46) = 0;
  }
LABEL_59:
  *((unsigned char *)v15 + v29) = v37;
  return v13;
}

void *sub_24E5B17E8(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v65 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v65 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = ((v7 | v5) | *(_DWORD *)(v9 + 80)) & 0xF8 | 7u;
  uint64_t v11 = (unsigned __int8 *)(((unint64_t)a1 + v10 + 8) & ~v10);
  char v12 = (unsigned __int8 *)(((unint64_t)a2 + v10 + 8) & ~v10);
  if (v11 != v12)
  {
    uint64_t v13 = *(void *)(v8 - 8);
    uint64_t v60 = v8;
    uint64_t v14 = v7;
    uint64_t v15 = *(_DWORD *)(v9 + 80);
    uint64_t v16 = *(unsigned int *)(v4 + 84);
    unsigned int v17 = *(_DWORD *)(v6 + 84);
    unsigned int v57 = v17;
    if (v17 <= v16) {
      unsigned int v17 = *(_DWORD *)(v4 + 84);
    }
    unsigned int v18 = *(_DWORD *)(v9 + 84);
    unsigned int v19 = v18 - 1;
    if (!v18) {
      unsigned int v19 = 0;
    }
    if (v19 <= v17) {
      unsigned int v20 = v17;
    }
    else {
      unsigned int v20 = v19;
    }
    unsigned int v55 = *(_DWORD *)(v9 + 84);
    uint64_t v62 = *(void *)(v4 + 64);
    uint64_t v59 = *(void *)(v6 + 64) + v15;
    if (v18) {
      uint64_t v21 = *(void *)(v9 + 64);
    }
    else {
      uint64_t v21 = *(void *)(v9 + 64) + 1;
    }
    uint64_t v63 = ((v59 + ((v62 + v14) & ~v14)) & ~v15) + v21;
    if (v20) {
      unint64_t v22 = ((v59 + ((v62 + v14) & ~v14)) & ~v15) + v21;
    }
    else {
      unint64_t v22 = ((v59 + ((v62 + v14) & ~v14)) & ~v15) + v21 + 1;
    }
    if (v22 <= 8) {
      uint64_t v23 = 8;
    }
    else {
      uint64_t v23 = v22;
    }
    unsigned int v24 = v11[v23];
    unsigned int v25 = v24 - 2;
    if (v24 >= 2)
    {
      if (v23 <= 3) {
        uint64_t v26 = v23;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *v11;
          goto LABEL_27;
        case 2:
          int v27 = *(unsigned __int16 *)v11;
          goto LABEL_27;
        case 3:
          int v27 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_27;
        case 4:
          int v27 = *(_DWORD *)v11;
LABEL_27:
          int v28 = (v27 | (v25 << (8 * v23))) + 2;
          unsigned int v24 = v27 + 2;
          if (v23 < 4) {
            unsigned int v24 = v28;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v61 = ~v14;
    uint64_t v58 = ~v15;
    unsigned int v64 = v20;
    size_t v54 = v21;
    size_t __n = v22;
    if (v24 == 1)
    {

      goto LABEL_56;
    }
    if (v20)
    {
      if (v16 == v20)
      {
        int v29 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v11, v16, AssociatedTypeWitness);
      }
      else
      {
        unint64_t v33 = (unint64_t)&v11[v14 + v62] & v61;
        if (v57 != v20)
        {
          if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v13 + 48))((v59 + v33) & v58, v18, v60) >= 2)goto LABEL_56; {
          goto LABEL_54;
          }
        }
        int v29 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v6 + 48))(v33, v57, v65);
      }
      if (v29) {
        goto LABEL_56;
      }
    }
    else if (v11[v63])
    {
      int v30 = (v11[v63] - 1) << (8 * v63);
      if (v63 > 3) {
        int v30 = 0;
      }
      if (v63)
      {
        int v31 = v63 <= 3 ? v63 : 4;
        switch(v31)
        {
          case 2:
            int v32 = *(unsigned __int16 *)v11;
            break;
          case 3:
            int v32 = *(unsigned __int16 *)v11 | (v11[2] << 16);
            break;
          case 4:
            int v32 = *(_DWORD *)v11;
            break;
          default:
            int v32 = *v11;
            break;
        }
      }
      else
      {
        int v32 = 0;
      }
      if ((v32 | v30) != 0xFFFFFFFF)
      {
LABEL_56:
        unsigned int v35 = v12[v23];
        unsigned int v36 = v35 - 2;
        if (v35 < 2)
        {
          unsigned int v38 = v64;
LABEL_63:
          if (v35 != 1) {
            goto LABEL_71;
          }
        }
        else
        {
          if (v23 <= 3) {
            uint64_t v37 = v23;
          }
          else {
            uint64_t v37 = 4;
          }
          unsigned int v38 = v64;
          switch(v37)
          {
            case 1:
              int v39 = *v12;
              break;
            case 2:
              int v39 = *(unsigned __int16 *)v12;
              break;
            case 3:
              int v39 = *(unsigned __int16 *)v12 | (v12[2] << 16);
              break;
            case 4:
              int v39 = *(_DWORD *)v12;
              break;
            default:
              goto LABEL_63;
          }
          int v43 = (v39 | (v36 << (8 * v23))) + 2;
          int v44 = v39 + 2;
          if (v23 < 4) {
            int v44 = v43;
          }
          if (v44 != 1)
          {
LABEL_71:
            if (!v38)
            {
              uint64_t v46 = v63;
              if (v12[v63])
              {
                int v47 = (v12[v63] - 1) << (8 * v63);
                if (v63 > 3) {
                  int v47 = 0;
                }
                if (v63)
                {
                  int v48 = v63 <= 3 ? v63 : 4;
                  switch(v48)
                  {
                    case 2:
                      int v49 = *(unsigned __int16 *)v12;
                      break;
                    case 3:
                      int v49 = *(unsigned __int16 *)v12 | (v12[2] << 16);
                      break;
                    case 4:
                      int v49 = *(_DWORD *)v12;
                      break;
                    default:
                      int v49 = *v12;
                      break;
                  }
                }
                else
                {
                  int v49 = 0;
                }
                if ((v49 | v47) != 0xFFFFFFFF) {
                  goto LABEL_86;
                }
              }
              goto LABEL_94;
            }
            if (v16 == v38)
            {
              int v45 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v12, v16, AssociatedTypeWitness);
            }
            else
            {
              unint64_t v50 = (unint64_t)&v12[v14 + v62] & v61;
              if (v57 != v38)
              {
                uint64_t v46 = v63;
                if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v13 + 48))((v59 + v50) & v58, v55, v60) >= 2)goto LABEL_86; {
                goto LABEL_94;
                }
              }
              int v45 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v6 + 48))(v50, v57, v65);
            }
            uint64_t v46 = v63;
            if (v45)
            {
LABEL_86:
              memcpy(v11, v12, __n);
              char v42 = 0;
              goto LABEL_99;
            }
LABEL_94:
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 16))(v11, v12, AssociatedTypeWitness);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))((unint64_t)&v11[v14 + v62] & v61, (unint64_t)&v12[v14 + v62] & v61, v65);
            uint64_t v51 = (void *)((v59 + ((unint64_t)&v11[v14 + v62] & v61)) & v58);
            uint64_t v52 = (const void *)((v59 + ((unint64_t)&v12[v14 + v62] & v61)) & v58);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v52, 1, v60))
            {
              memcpy(v51, v52, v54);
              char v42 = v64;
              if (v64)
              {
LABEL_96:
                char v42 = 0;
                goto LABEL_99;
              }
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v51, v52, v60);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v51, 0, 1, v60);
              char v42 = v64;
              if (v64) {
                goto LABEL_96;
              }
            }
            v11[v46] = 0;
            goto LABEL_99;
          }
        }
        uint64_t v40 = *(void *)v12;
        id v41 = *(id *)v12;
        *(void *)uint64_t v11 = v40;
        char v42 = 1;
LABEL_99:
        v11[v23] = v42;
        return a1;
      }
    }
LABEL_54:
    (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(v11, AssociatedTypeWitness);
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&v11[v14 + v62] & v61, v65);
    unint64_t v34 = (v59 + ((unint64_t)&v11[v14 + v62] & v61)) & v58;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v34, 1, v60)) {
      (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v34, v60);
    }
    goto LABEL_56;
  }
  return a1;
}

void *sub_24E5B1F7C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  int v3 = *(_DWORD *)(v2 + 80);
  uint64_t v50 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v50 - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  int v6 = *(_DWORD *)(v4 + 80) | v3;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = v5;
  uint64_t v9 = *(void *)(v7 - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(_DWORD *)(v9 + 80);
  char v12 = v6 | *(_DWORD *)(v9 + 80);
  uint64_t v13 = a1;
  uint64_t v14 = v12 & 0xF8 | 7u;
  uint64_t v15 = (void *)(((unint64_t)a1 + v14 + 8) & ~v14);
  uint64_t v16 = (unsigned __int8 *)(((unint64_t)a2 + v14 + 8) & ~v14);
  uint64_t v53 = v2;
  uint64_t v17 = *(unsigned int *)(v2 + 84);
  uint64_t v49 = v4;
  uint64_t v18 = *(unsigned int *)(v4 + 84);
  if (v18 <= v17) {
    unsigned int v19 = *(_DWORD *)(v2 + 84);
  }
  else {
    unsigned int v19 = *(_DWORD *)(v4 + 84);
  }
  unsigned int v20 = v10 - 1;
  if (!v10) {
    unsigned int v20 = 0;
  }
  if (v20 <= v19) {
    unsigned int v21 = v19;
  }
  else {
    unsigned int v21 = v20;
  }
  uint64_t v22 = *(void *)(v2 + 64) + v8;
  uint64_t v23 = *(void *)(v4 + 64);
  uint64_t v24 = v23 + v11;
  uint64_t v25 = (v23 + v11 + (v22 & ~v8)) & ~v11;
  if (v10) {
    uint64_t v26 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  else {
    uint64_t v26 = *(void *)(*(void *)(v7 - 8) + 64) + 1;
  }
  uint64_t v27 = v25 + v26;
  if (v21) {
    size_t v28 = v25 + v26;
  }
  else {
    size_t v28 = v27 + 1;
  }
  if (v28 <= 8) {
    uint64_t v29 = 8;
  }
  else {
    uint64_t v29 = v28;
  }
  unsigned int v30 = v16[v29];
  unsigned int v31 = v30 - 2;
  if (v30 >= 2)
  {
    if (v29 <= 3) {
      uint64_t v32 = v29;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *v16;
        goto LABEL_27;
      case 2:
        int v33 = *(unsigned __int16 *)v16;
        goto LABEL_27;
      case 3:
        int v33 = *(unsigned __int16 *)v16 | (v16[2] << 16);
        goto LABEL_27;
      case 4:
        int v33 = *(_DWORD *)v16;
LABEL_27:
        int v34 = (v33 | (v31 << (8 * v29))) + 2;
        unsigned int v30 = v33 + 2;
        if (v29 < 4) {
          unsigned int v30 = v34;
        }
        break;
      default:
        break;
    }
  }
  if (v30 == 1)
  {
    *uint64_t v15 = *(void *)v16;
    char v35 = 1;
    goto LABEL_59;
  }
  uint64_t v47 = ~v11;
  uint64_t v48 = v7;
  size_t __n = v26;
  uint64_t v46 = ~v8;
  if (!v21)
  {
    if (!v16[v27]) {
      goto LABEL_48;
    }
    int v36 = (v16[v27] - 1) << (8 * v27);
    if (v27 > 3) {
      int v36 = 0;
    }
    if (v27)
    {
      int v37 = v27 <= 3 ? v25 + v26 : 4;
      switch(v37)
      {
        case 2:
          int v38 = *(unsigned __int16 *)v16;
          break;
        case 3:
          int v38 = *(unsigned __int16 *)v16 | (v16[2] << 16);
          break;
        case 4:
          int v38 = *(_DWORD *)v16;
          break;
        default:
          int v38 = *v16;
          break;
      }
    }
    else
    {
      int v38 = 0;
    }
    if ((v38 | v36) == 0xFFFFFFFF) {
      goto LABEL_48;
    }
    goto LABEL_58;
  }
  if (v17 == v21)
  {
    if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v53 + 48))(v16, v17, AssociatedTypeWitness))goto LABEL_48; {
LABEL_58:
    }
    memcpy(v15, v16, v28);
    char v35 = 0;
    goto LABEL_59;
  }
  unint64_t v39 = (unint64_t)&v16[v22] & ~v8;
  if (v18 == v21)
  {
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v49 + 48))(v39, v18, v50)) {
      goto LABEL_48;
    }
    goto LABEL_58;
  }
  if ((*(unsigned int (**)(unint64_t))(v9 + 48))((v24 + v39) & ~v11) >= 2) {
    goto LABEL_58;
  }
LABEL_48:
  uint64_t v44 = v27;
  (*(void (**)(void *, unsigned __int8 *, uint64_t))(v53 + 32))(v15, v16, AssociatedTypeWitness);
  unint64_t v40 = (unint64_t)&v16[v22] & v46;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v49 + 32))(((unint64_t)v15 + v22) & v46, v40, v50);
  id v41 = (void *)((v24 + (((unint64_t)v15 + v22) & v46)) & v47);
  char v42 = (const void *)((v24 + v40) & v47);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v42, 1, v48))
  {
    memcpy(v41, v42, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v41, v42, v48);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v41, 0, 1, v48);
  }
  uint64_t v13 = a1;
  char v35 = 0;
  if (!v21) {
    *((unsigned char *)v15 + v44) = 0;
  }
LABEL_59:
  *((unsigned char *)v15 + v29) = v35;
  return v13;
}

void *sub_24E5B2490(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v63 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v63 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = ((v7 | v5) | *(_DWORD *)(v9 + 80)) & 0xF8 | 7u;
  uint64_t v11 = (unsigned __int8 *)(((unint64_t)a1 + v10 + 8) & ~v10);
  char v12 = (unsigned __int8 *)(((unint64_t)a2 + v10 + 8) & ~v10);
  if (v11 != v12)
  {
    uint64_t v13 = *(void *)(v8 - 8);
    uint64_t v14 = v7;
    uint64_t v15 = *(_DWORD *)(v9 + 80);
    uint64_t v16 = *(unsigned int *)(v4 + 84);
    unsigned int v17 = *(_DWORD *)(v6 + 84);
    unsigned int v55 = v17;
    if (v17 <= v16) {
      unsigned int v17 = *(_DWORD *)(v4 + 84);
    }
    unsigned int v18 = *(_DWORD *)(v9 + 84);
    unsigned int v19 = v18 - 1;
    if (!v18) {
      unsigned int v19 = 0;
    }
    if (v19 <= v17) {
      unsigned int v20 = v17;
    }
    else {
      unsigned int v20 = v19;
    }
    unsigned int v53 = *(_DWORD *)(v9 + 84);
    uint64_t v60 = *(void *)(v4 + 64);
    uint64_t v57 = *(void *)(v6 + 64) + v15;
    if (v18) {
      uint64_t v21 = *(void *)(v9 + 64);
    }
    else {
      uint64_t v21 = *(void *)(v9 + 64) + 1;
    }
    uint64_t v61 = ((v57 + ((v60 + v14) & ~v14)) & ~v15) + v21;
    if (v20) {
      unint64_t v22 = ((v57 + ((v60 + v14) & ~v14)) & ~v15) + v21;
    }
    else {
      unint64_t v22 = ((v57 + ((v60 + v14) & ~v14)) & ~v15) + v21 + 1;
    }
    if (v22 <= 8) {
      uint64_t v23 = 8;
    }
    else {
      uint64_t v23 = v22;
    }
    unsigned int v24 = v11[v23];
    unsigned int v25 = v24 - 2;
    if (v24 >= 2)
    {
      if (v23 <= 3) {
        uint64_t v26 = v23;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *v11;
          goto LABEL_27;
        case 2:
          int v27 = *(unsigned __int16 *)v11;
          goto LABEL_27;
        case 3:
          int v27 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_27;
        case 4:
          int v27 = *(_DWORD *)v11;
LABEL_27:
          int v28 = (v27 | (v25 << (8 * v23))) + 2;
          unsigned int v24 = v27 + 2;
          if (v23 < 4) {
            unsigned int v24 = v28;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v58 = v8;
    uint64_t v59 = ~v14;
    uint64_t v56 = ~v15;
    unsigned int v62 = v20;
    size_t v52 = v21;
    size_t __n = v22;
    if (v24 == 1)
    {

      goto LABEL_56;
    }
    if (v20)
    {
      if (v16 == v20)
      {
        int v29 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v11, v16, AssociatedTypeWitness);
      }
      else
      {
        unint64_t v33 = (unint64_t)&v11[v14 + v60] & v59;
        if (v55 != v20)
        {
          if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v13 + 48))((v57 + v33) & v56, v18, v58) >= 2)goto LABEL_56; {
          goto LABEL_54;
          }
        }
        int v29 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v6 + 48))(v33, v55, v63);
      }
      if (v29) {
        goto LABEL_56;
      }
    }
    else if (v11[v61])
    {
      int v30 = (v11[v61] - 1) << (8 * v61);
      if (v61 > 3) {
        int v30 = 0;
      }
      if (v61)
      {
        int v31 = v61 <= 3 ? v61 : 4;
        switch(v31)
        {
          case 2:
            int v32 = *(unsigned __int16 *)v11;
            break;
          case 3:
            int v32 = *(unsigned __int16 *)v11 | (v11[2] << 16);
            break;
          case 4:
            int v32 = *(_DWORD *)v11;
            break;
          default:
            int v32 = *v11;
            break;
        }
      }
      else
      {
        int v32 = 0;
      }
      if ((v32 | v30) != 0xFFFFFFFF)
      {
LABEL_56:
        unsigned int v35 = v12[v23];
        unsigned int v36 = v35 - 2;
        if (v35 < 2)
        {
          unsigned int v38 = v62;
LABEL_63:
          if (v35 != 1) {
            goto LABEL_71;
          }
        }
        else
        {
          if (v23 <= 3) {
            uint64_t v37 = v23;
          }
          else {
            uint64_t v37 = 4;
          }
          unsigned int v38 = v62;
          switch(v37)
          {
            case 1:
              int v39 = *v12;
              break;
            case 2:
              int v39 = *(unsigned __int16 *)v12;
              break;
            case 3:
              int v39 = *(unsigned __int16 *)v12 | (v12[2] << 16);
              break;
            case 4:
              int v39 = *(_DWORD *)v12;
              break;
            default:
              goto LABEL_63;
          }
          int v41 = (v39 | (v36 << (8 * v23))) + 2;
          int v42 = v39 + 2;
          if (v23 < 4) {
            int v42 = v41;
          }
          if (v42 != 1)
          {
LABEL_71:
            if (!v38)
            {
              uint64_t v44 = v61;
              if (v12[v61])
              {
                int v45 = (v12[v61] - 1) << (8 * v61);
                if (v61 > 3) {
                  int v45 = 0;
                }
                if (v61)
                {
                  int v46 = v61 <= 3 ? v61 : 4;
                  switch(v46)
                  {
                    case 2:
                      int v47 = *(unsigned __int16 *)v12;
                      break;
                    case 3:
                      int v47 = *(unsigned __int16 *)v12 | (v12[2] << 16);
                      break;
                    case 4:
                      int v47 = *(_DWORD *)v12;
                      break;
                    default:
                      int v47 = *v12;
                      break;
                  }
                }
                else
                {
                  int v47 = 0;
                }
                if ((v47 | v45) != 0xFFFFFFFF) {
                  goto LABEL_86;
                }
              }
              goto LABEL_94;
            }
            if (v16 == v38)
            {
              int v43 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v12, v16, AssociatedTypeWitness);
            }
            else
            {
              unint64_t v48 = (unint64_t)&v12[v14 + v60] & v59;
              if (v55 != v38)
              {
                uint64_t v44 = v61;
                if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v13 + 48))((v57 + v48) & v56, v53, v58) >= 2)goto LABEL_86; {
                goto LABEL_94;
                }
              }
              int v43 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v6 + 48))(v48, v55, v63);
            }
            uint64_t v44 = v61;
            if (v43)
            {
LABEL_86:
              memcpy(v11, v12, __n);
              char v40 = 0;
              goto LABEL_99;
            }
LABEL_94:
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32))(v11, v12, AssociatedTypeWitness);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))((unint64_t)&v11[v14 + v60] & v59, (unint64_t)&v12[v14 + v60] & v59, v63);
            uint64_t v49 = (void *)((v57 + ((unint64_t)&v11[v14 + v60] & v59)) & v56);
            uint64_t v50 = (const void *)((v57 + ((unint64_t)&v12[v14 + v60] & v59)) & v56);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v50, 1, v58))
            {
              memcpy(v49, v50, v52);
              char v40 = v62;
              if (v62)
              {
LABEL_96:
                char v40 = 0;
                goto LABEL_99;
              }
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v49, v50, v58);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v49, 0, 1, v58);
              char v40 = v62;
              if (v62) {
                goto LABEL_96;
              }
            }
            v11[v44] = 0;
            goto LABEL_99;
          }
        }
        *(void *)uint64_t v11 = *(void *)v12;
        char v40 = 1;
LABEL_99:
        v11[v23] = v40;
        return a1;
      }
    }
LABEL_54:
    (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(v11, AssociatedTypeWitness);
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&v11[v14 + v60] & v59, v63);
    unint64_t v34 = (v57 + ((unint64_t)&v11[v14 + v60] & v59)) & v56;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v34, 1, v58)) {
      (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v34, v58);
    }
    goto LABEL_56;
  }
  return a1;
}

uint64_t sub_24E5B2C18(unsigned __int16 *a1, int a2)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v5 + 84) > v4) {
    unsigned int v4 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  int v8 = *(_DWORD *)(v6 + 84);
  int v9 = v8 - 1;
  if (!v8) {
    int v9 = 0;
  }
  uint64_t v10 = (v9 | v4) == 0;
  uint64_t v11 = *(void *)(v6 + 64);
  if (!v8) {
    ++v10;
  }
  unint64_t v12 = v10
      + v11
      + ((((*(void *)(v3 + 64) + *(_DWORD *)(v5 + 80)) & ~(unint64_t)*(_DWORD *)(v5 + 80))
        + *(void *)(v5 + 64)
        + v7) & ~(unint64_t)v7);
  if (v12 <= 8) {
    unint64_t v12 = 8;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_11;
  }
  uint64_t v15 = ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v3 + 80)) | v7) & 0xF8 | 7u;
  uint64_t v16 = v12 + ((v15 + 8) & ~v15) + 1;
  char v17 = 8 * v16;
  if (v16 > 3) {
    goto LABEL_16;
  }
  unsigned int v19 = (a2 - 0x7FFFFFFF + ~(-1 << v17)) >> v17;
  if (v19 > 0xFFFE)
  {
    int v18 = *(_DWORD *)((char *)a1 + v16);
    if (!v18) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
  if (v19 <= 0xFE)
  {
    if (!v19) {
      goto LABEL_11;
    }
LABEL_16:
    int v18 = *((unsigned __int8 *)a1 + v16);
    if (!*((unsigned char *)a1 + v16)) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
  int v18 = *(unsigned __int16 *)((char *)a1 + v16);
  if (!*(unsigned __int16 *)((char *)a1 + v16))
  {
LABEL_11:
    uint64_t v13 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v13) = -1;
    }
    return (v13 + 1);
  }
LABEL_25:
  int v20 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v20 = 0;
  }
  if (v16)
  {
    if (v16 > 3) {
      LODWORD(v16) = 4;
    }
    switch((int)v16)
    {
      case 2:
        LODWORD(v16) = *a1;
        break;
      case 3:
        LODWORD(v16) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v16) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v16) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v16 | v20) ^ 0x80000000;
}

void sub_24E5B2F24(unsigned char *a1, int a2, int a3)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v5 + 84) > v4) {
    unsigned int v4 = *(_DWORD *)(v5 + 84);
  }
  int v6 = 0;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  int v9 = *(_DWORD *)(v7 + 84);
  int v10 = v9 - 1;
  if (!v9) {
    int v10 = 0;
  }
  uint64_t v11 = (v10 | v4) == 0;
  BOOL v12 = v9 == 0;
  unint64_t v13 = (((*(void *)(v3 + 64) + *(_DWORD *)(v5 + 80)) & ~(unint64_t)*(_DWORD *)(v5 + 80))
       + *(void *)(v5 + 64)
       + *(_DWORD *)(v7 + 80)) & ~(unint64_t)*(_DWORD *)(v7 + 80);
  uint64_t v14 = *(void *)(v7 + 64);
  uint64_t v15 = ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v3 + 80)) | v8) & 0xF8 | 7u;
  uint64_t v16 = (v15 + 8) & ~v15;
  if (v12) {
    ++v11;
  }
  unint64_t v17 = v11 + v14 + v13;
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  size_t v18 = v17 + v16 + 1;
  if (a3 < 0)
  {
    if (v18 <= 3)
    {
      unsigned int v20 = (a3 - 0x7FFFFFFF + ~(-1 << (8 * v18))) >> (8 * v18);
      if (v20 > 0xFFFE)
      {
        int v6 = 4;
      }
      else if (v20 >= 0xFF)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v20 != 0;
      }
    }
    else
    {
      int v6 = 1;
    }
    int v19 = a2;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_11:
      switch(v6)
      {
        case 1:
          a1[v18] = 0;
          if (!v19) {
            return;
          }
          goto LABEL_22;
        case 2:
          *(_WORD *)&a1[v18] = 0;
          goto LABEL_21;
        case 3:
          goto LABEL_40;
        case 4:
          *(_DWORD *)&a1[v18] = 0;
          if (!v19) {
            return;
          }
          goto LABEL_22;
        default:
LABEL_21:
          if (v19) {
LABEL_22:
          }
            *(void *)a1 = (v19 - 1);
          break;
      }
      return;
    }
  }
  else
  {
    int v19 = a2;
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_11;
    }
  }
  unsigned int v21 = v19 ^ 0x80000000;
  if (v18 < 4)
  {
    int v22 = (v21 >> (8 * v18)) + 1;
    if (v18)
    {
      int v23 = v19 & ~(-1 << (8 * v18));
      bzero(a1, v18);
      if (v18 == 3)
      {
        *(_WORD *)a1 = v23;
        a1[2] = BYTE2(v23);
      }
      else if (v18 == 2)
      {
        *(_WORD *)a1 = v23;
      }
      else
      {
        *a1 = v23;
      }
    }
  }
  else
  {
    bzero(a1, v18);
    *(_DWORD *)a1 = v21;
    int v22 = 1;
  }
  switch(v6)
  {
    case 1:
      a1[v18] = v22;
      break;
    case 2:
      *(_WORD *)&a1[v18] = v22;
      break;
    case 3:
LABEL_40:
      __break(1u);
      JUMPOUT(0x24E5B32A4);
    case 4:
      *(_DWORD *)&a1[v18] = v22;
      break;
    default:
      return;
  }
}

void *sub_24E5B32CC(void *a1, void *a2, uint64_t a3)
{
  return sub_24E5BD488(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_24E5B32E4);
}

uint64_t sub_24E5B32E4()
{
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_24E5B3324()
{
  return sub_24E5ACBD8();
}

uint64_t *sub_24E5B3334(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_24E5BD504(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_24E5B32E4, (void (*)(uint64_t, uint64_t, uint64_t))sub_24E5ACBD8);
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t *sub_24E5B3374(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_24E5BD588(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_24E5ACBD8);
}

uint64_t sub_24E5B338C(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_24E5B33E8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)__n128 result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_24E5B3440(void *a1)
{
  return *a1 >> 63;
}

void *sub_24E5B344C(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_24E5B345C(uint64_t *result, uint64_t a2)
{
  *__n128 result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

uint64_t sub_24E5B3470()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = swift_checkMetadataState();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      uint64_t v4 = sub_24E864388();
      if (v5 > 0x3F)
      {
        return v4;
      }
      else
      {
        swift_getTupleTypeLayout3();
        int v10 = &v9;
        uint64_t v11 = MEMORY[0x263F8CF50] + 64;
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        sub_24E864388();
        swift_getTupleTypeMetadata3();
        sub_24E864388();
        __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
        uint64_t v0 = sub_24E864AA8();
        if (v6 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          BOOL v12 = &v8;
          unint64_t v13 = &unk_24E867710;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return v0;
}

void *sub_24E5B36E0(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v96 = *(void *)(v4 - 8);
  uint64_t v5 = a3[3];
  uint64_t v6 = a3[4];
  uint64_t v84 = *(void *)(v5 - 8);
  int v94 = *(_DWORD *)(v84 + 80);
  uint64_t v82 = *(void *)(v96 + 64) + v94;
  uint64_t v7 = *(void *)(v6 - 8);
  int v92 = *(_DWORD *)(v7 + 80);
  uint64_t v87 = v7;
  uint64_t v83 = *(void *)(v84 + 64);
  size_t v8 = *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v8;
  }
  size_t __n = v8;
  unint64_t v91 = v8
      + ((v83 + *(_DWORD *)(v7 + 80) + (v82 & ~(unint64_t)*(_DWORD *)(v84 + 80))) & ~(unint64_t)*(_DWORD *)(v7 + 80));
  uint64_t v85 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v86 = v5;
  uint64_t v78 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v78 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  int v13 = *(_DWORD *)(v11 + 80) | v10;
  uint64_t v88 = v6;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = v12;
  uint64_t v16 = v14;
  uint64_t v17 = *(void *)(v14 - 8);
  uint64_t v18 = v17;
  int v19 = *(_DWORD *)(v17 + 84);
  uint64_t v20 = *(_DWORD *)(v17 + 80);
  int v21 = v13 | *(_DWORD *)(v17 + 80);
  uint64_t v22 = v21 & 0xF8 | 7u;
  uint64_t v23 = (v22 + 8) & ~v22;
  uint64_t v79 = v9;
  uint64_t v24 = *(unsigned int *)(v9 + 84);
  uint64_t v77 = v11;
  uint64_t v25 = *(unsigned int *)(v11 + 84);
  if (v25 <= v24) {
    unsigned int v26 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v26 = *(_DWORD *)(v11 + 84);
  }
  unsigned int v27 = v19 - 1;
  if (!v19) {
    unsigned int v27 = 0;
  }
  if (v27 <= v26) {
    unsigned int v28 = v26;
  }
  else {
    unsigned int v28 = v27;
  }
  uint64_t v29 = *(void *)(v9 + 64) + v12;
  uint64_t v30 = *(void *)(v11 + 64);
  uint64_t v31 = v30 + v20;
  uint64_t v32 = (v30 + v20 + (v29 & ~v12)) & ~v20;
  size_t v33 = *(void *)(v17 + 64);
  if (v19) {
    size_t v34 = v33;
  }
  else {
    size_t v34 = v33 + 1;
  }
  size_t v35 = v32 + v34;
  if (v28) {
    size_t v36 = v35;
  }
  else {
    size_t v36 = v35 + 1;
  }
  if (v36 <= 8) {
    uint64_t v37 = 8;
  }
  else {
    uint64_t v37 = v36;
  }
  if (v91 <= v37 + v23 + 1) {
    unint64_t v38 = v37 + v23 + 1;
  }
  else {
    unint64_t v38 = v91;
  }
  if (v38 <= 8) {
    uint64_t v39 = 8;
  }
  else {
    uint64_t v39 = v38;
  }
  int v40 = v21 | v92 | v94 | *(_DWORD *)(v96 + 80);
  if ((v40 & 0x1000F8) == 0 && (unint64_t)(v39 + 1) <= 0x18)
  {
    unsigned int v41 = a2[v39];
    unsigned int v42 = v41 - 4;
    if (v41 < 4)
    {
      uint64_t v44 = a1;
      uint64_t v45 = v94;
    }
    else
    {
      if (v39 <= 3) {
        uint64_t v43 = v39;
      }
      else {
        uint64_t v43 = 4;
      }
      uint64_t v44 = a1;
      uint64_t v45 = v94;
      switch(v43)
      {
        case 1:
          int v46 = *a2;
          if (v39 < 4) {
            goto LABEL_43;
          }
          goto LABEL_44;
        case 2:
          int v46 = *(unsigned __int16 *)a2;
          if (v39 >= 4) {
            goto LABEL_44;
          }
          goto LABEL_43;
        case 3:
          int v46 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v39 >= 4) {
            goto LABEL_44;
          }
          goto LABEL_43;
        case 4:
          int v46 = *(_DWORD *)a2;
          if (v39 < 4) {
LABEL_43:
          }
            v46 |= v42 << (8 * v39);
LABEL_44:
          unsigned int v41 = v46 + 4;
          break;
        default:
          break;
      }
    }
    uint64_t v49 = ~v45;
    unint64_t v50 = ~(unint64_t)v92;
    uint64_t v51 = ~v22;
    switch(v41)
    {
      case 1u:
        void *v44 = *(void *)a2;
        *((unsigned char *)v44 + v39) = 1;
        swift_bridgeObjectRetain();
        return v44;
      case 2u:
        void *v44 = *(void *)a2;
        size_t v54 = (void *)(((unint64_t)v44 + v22 + 8) & v51);
        unsigned int v55 = (unsigned __int8 *)((unint64_t)&a2[v22 + 8] & v51);
        unsigned int v56 = v55[v37];
        unsigned int v57 = v56 - 2;
        if (v56 >= 2)
        {
          if (v37 <= 3) {
            uint64_t v58 = v37;
          }
          else {
            uint64_t v58 = 4;
          }
          switch(v58)
          {
            case 1:
              int v59 = *v55;
              goto LABEL_61;
            case 2:
              int v59 = *(unsigned __int16 *)v55;
              goto LABEL_61;
            case 3:
              int v59 = *(unsigned __int16 *)v55 | (v55[2] << 16);
              goto LABEL_61;
            case 4:
              int v59 = *(_DWORD *)v55;
LABEL_61:
              int v60 = (v59 | (v57 << (8 * v37))) + 2;
              unsigned int v56 = v59 + 2;
              if (v37 < 4) {
                unsigned int v56 = v60;
              }
              break;
            default:
              break;
          }
        }
        if (v56 == 1)
        {
          uint64_t v61 = *(void *)v55;
          id v62 = *(id *)v55;
          *size_t v54 = v61;
          char v63 = 1;
LABEL_94:
          *((unsigned char *)v54 + v37) = v63;
          *((unsigned char *)v44 + v39) = 2;
          return v44;
        }
        uint64_t v75 = v16;
        size_t v76 = v35;
        size_t v74 = v34;
        uint64_t v93 = ~v15;
        uint64_t v95 = ~v20;
        if (!v28)
        {
          if (v55[v35])
          {
            int v66 = (v55[v35] - 1) << (8 * v35);
            if (v35 > 3) {
              int v66 = 0;
            }
            if (v35)
            {
              int v67 = v35 <= 3 ? v35 : 4;
              switch(v67)
              {
                case 2:
                  int v68 = *(unsigned __int16 *)v55;
                  break;
                case 3:
                  int v68 = *(unsigned __int16 *)v55 | (v55[2] << 16);
                  break;
                case 4:
                  int v68 = *(_DWORD *)v55;
                  break;
                default:
                  int v68 = *v55;
                  break;
              }
            }
            else
            {
              int v68 = 0;
            }
            if ((v68 | v66) != 0xFFFFFFFF) {
              goto LABEL_80;
            }
          }
          goto LABEL_88;
        }
        if (v24 == v28)
        {
          unsigned int v64 = v28;
          int v65 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v79 + 48))(v55, v24, AssociatedTypeWitness);
        }
        else
        {
          unint64_t v69 = (unint64_t)&v55[v29] & ~v15;
          unsigned int v64 = v28;
          if (v25 != v28)
          {
            unsigned int v70 = (*(uint64_t (**)(unint64_t))(v18 + 48))((v31 + v69) & ~v20);
            unsigned int v28 = v64;
            if (v70 >= 2) {
              goto LABEL_80;
            }
            goto LABEL_88;
          }
          int v65 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v77 + 48))(v69, v25, v78);
        }
        unsigned int v28 = v64;
        if (v65)
        {
LABEL_80:
          memcpy(v54, v55, v36);
          char v63 = 0;
          goto LABEL_94;
        }
LABEL_88:
        unsigned int v73 = v28;
        uint64_t v97 = v37;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v79 + 16))(v54, v55, AssociatedTypeWitness);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v77 + 16))(((unint64_t)v54 + v29) & v93, (unint64_t)&v55[v29] & v93, v78);
        unsigned int v71 = (void *)((v31 + (((unint64_t)v54 + v29) & v93)) & v95);
        uint64_t v72 = (const void *)((v31 + ((unint64_t)&v55[v29] & v93)) & v95);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v72, 1, v75))
        {
          memcpy(v71, v72, v74);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v71, v72, v75);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v71, 0, 1, v75);
        }
        uint64_t v37 = v97;
        char v63 = v73;
        if (v73) {
          char v63 = 0;
        }
        else {
          *((unsigned char *)v54 + v76) = 0;
        }
        goto LABEL_94;
      case 3u:
        void *v44 = *(void *)a2;
        *((unsigned char *)v44 + v39) = 3;
        return v44;
      default:
        (*(void (**)(void *, unsigned __int8 *, uint64_t, uint64_t))(v96 + 16))(v44, a2, v85, v16);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v84 + 16))(((unint64_t)v44 + v82) & v49, (unint64_t)&a2[v82] & v49, v86);
        size_t v52 = (void *)(((((unint64_t)v44 + v82) & v49) + v83 + v92) & v50);
        unsigned int v53 = (const void *)((((unint64_t)&a2[v82] & v49) + v83 + v92) & v50);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v87 + 48))(v53, 1, v88))
        {
          memcpy(v52, v53, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v87 + 16))(v52, v53, v88);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v87 + 56))(v52, 0, 1, v88);
        }
        *((unsigned char *)v44 + v39) = 0;
        return v44;
    }
  }
  uint64_t v47 = *(void *)a2;
  *a1 = *(void *)a2;
  uint64_t v44 = (void *)(v47 + (((v40 & 0xF8 | 7u) + 16) & ~(unint64_t)(v40 & 0xF8 | 7u)));
  swift_retain();
  return v44;
}

void sub_24E5B3FF0(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = a2[3];
  uint64_t v70 = *(void *)(a2[2] - 8);
  uint64_t v3 = *(void *)(v70 + 64);
  uint64_t v71 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v71 + 80);
  uint64_t v68 = v3 + v4;
  uint64_t v75 = v4;
  uint64_t v5 = a2[4];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v69 = *(void *)(v71 + 64);
  uint64_t v78 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v7 = (v69 + v78 + ((v3 + v4) & ~v4)) & ~v78;
  uint64_t v74 = v6;
  uint64_t v8 = *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v8;
  }
  unint64_t v76 = v8 + v7;
  uint64_t v72 = a2[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 80);
  uint64_t v73 = v2;
  uint64_t v66 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v66 - 8);
  uint64_t v13 = v12;
  uint64_t v14 = *(_DWORD *)(v12 + 80);
  int v15 = *(_DWORD *)(v12 + 80) | v11;
  uint64_t v16 = v5;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = v14;
  uint64_t v19 = v17;
  uint64_t v20 = *(void *)(v17 - 8);
  int v21 = *(_DWORD *)(v20 + 84);
  uint64_t v22 = *(_DWORD *)(v20 + 80);
  uint64_t v23 = (v15 | *(_DWORD *)(v20 + 80)) & 0xF8 | 7u;
  uint64_t v24 = *(unsigned int *)(v9 + 84);
  uint64_t v25 = *(unsigned int *)(v12 + 84);
  if (v25 <= v24) {
    unsigned int v26 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v26 = *(_DWORD *)(v12 + 84);
  }
  unsigned int v27 = v21 - 1;
  if (!v21) {
    unsigned int v27 = 0;
  }
  if (v27 > v26) {
    unsigned int v26 = v27;
  }
  uint64_t v28 = *(void *)(v9 + 64) + v14;
  uint64_t v29 = *(void *)(v12 + 64);
  uint64_t v30 = v29 + v22;
  uint64_t v31 = *(void *)(*(void *)(v17 - 8) + 64);
  if (!v21) {
    ++v31;
  }
  unint64_t v32 = v31 + ((v29 + v22 + (v28 & ~v18)) & ~v22);
  if (v26) {
    unint64_t v33 = v32;
  }
  else {
    unint64_t v33 = v32 + 1;
  }
  if (v33 <= 8) {
    unint64_t v33 = 8;
  }
  unint64_t v34 = v33 + ((v23 + 8) & ~v23);
  if (v76 <= v34 + 1) {
    unint64_t v35 = v34 + 1;
  }
  else {
    unint64_t v35 = v76;
  }
  if (v35 <= 8) {
    uint64_t v36 = 8;
  }
  else {
    uint64_t v36 = v35;
  }
  unsigned int v37 = a1[v36];
  uint64_t v38 = v37 - 4;
  if (v37 < 4)
  {
    uint64_t v40 = v75;
  }
  else
  {
    if (v36 <= 3) {
      uint64_t v39 = v36;
    }
    else {
      uint64_t v39 = 4;
    }
    uint64_t v40 = v75;
    switch(v39)
    {
      case 1:
        int v41 = *a1;
        if (v36 < 4) {
          goto LABEL_36;
        }
        goto LABEL_37;
      case 2:
        int v41 = *(unsigned __int16 *)a1;
        if (v36 >= 4) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 3:
        int v41 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v36 >= 4) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 4:
        int v41 = *(_DWORD *)a1;
        if (v36 < 4) {
LABEL_36:
        }
          v41 |= v38 << (8 * v36);
LABEL_37:
        unsigned int v37 = v41 + 4;
        break;
      default:
        break;
    }
  }
  uint64_t v42 = ~v40;
  uint64_t v43 = ~v18;
  uint64_t v44 = ~v22;
  switch(v37)
  {
    case 1u:
      swift_bridgeObjectRelease();
      return;
    case 2u:
      unint64_t v48 = (unsigned __int8 *)((unint64_t)&a1[v23 + 8] & ~v23);
      unsigned int v49 = v48[v33];
      unsigned int v50 = v49 - 2;
      if (v49 >= 2)
      {
        if (v33 <= 3) {
          uint64_t v51 = v33;
        }
        else {
          uint64_t v51 = 4;
        }
        switch(v51)
        {
          case 1:
            int v52 = *v48;
            goto LABEL_56;
          case 2:
            int v52 = *(unsigned __int16 *)v48;
            goto LABEL_56;
          case 3:
            int v52 = *(unsigned __int16 *)v48 | (v48[2] << 16);
            goto LABEL_56;
          case 4:
            int v52 = *(_DWORD *)v48;
LABEL_56:
            int v53 = (v52 | (v50 << (8 * v33))) + 2;
            unsigned int v49 = v52 + 2;
            if (v33 < 4) {
              unsigned int v49 = v53;
            }
            break;
          default:
            break;
        }
      }
      if (v49 == 1)
      {
        size_t v54 = *(void **)v48;

        return;
      }
      uint64_t v65 = v20;
      if (v26)
      {
        if (v24 == v26)
        {
          uint64_t v55 = v19;
          int v56 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v48, v24, AssociatedTypeWitness);
          goto LABEL_76;
        }
        unint64_t v60 = (unint64_t)&v48[v28] & v43;
        if (v25 == v26)
        {
          uint64_t v55 = v19;
          int v56 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v60, v25, v66);
LABEL_76:
          uint64_t v19 = v55;
          if (v56) {
            return;
          }
          goto LABEL_85;
        }
        uint64_t v61 = v19;
        unsigned int v62 = (*(uint64_t (**)(unint64_t))(v20 + 48))((v30 + v60) & v44);
        uint64_t v19 = v61;
        if (v62 >= 2) {
          return;
        }
      }
      else if (v48[v32])
      {
        int v57 = (v48[v32] - 1) << (8 * v32);
        if (v32 > 3) {
          int v57 = 0;
        }
        if (v32)
        {
          int v58 = v32 <= 3 ? v32 : 4;
          switch(v58)
          {
            case 2:
              int v59 = *(unsigned __int16 *)v48;
              break;
            case 3:
              int v59 = *(unsigned __int16 *)v48 | (v48[2] << 16);
              break;
            case 4:
              int v59 = *(_DWORD *)v48;
              break;
            default:
              int v59 = *v48;
              break;
          }
        }
        else
        {
          int v59 = 0;
        }
        if ((v59 | v57) != 0xFFFFFFFF) {
          return;
        }
      }
LABEL_85:
      uint64_t v16 = v19;
      (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 8))(v48, AssociatedTypeWitness, v38);
      unint64_t v63 = (unint64_t)&v48[v28] & v43;
      (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v63, v66);
      unint64_t v45 = (v30 + v63) & v44;
      int v64 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v65 + 48))(v45, 1, v16);
      uint64_t v46 = v65;
      if (!v64) {
        goto LABEL_41;
      }
      return;
    case 3u:
      return;
    default:
      (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v70 + 8))(a1, v72, v38);
      (*(void (**)(unint64_t, uint64_t))(v71 + 8))((unint64_t)&a1[v68] & v42, v73);
      unint64_t v45 = (((unint64_t)&a1[v68] & v42) + v69 + v78) & ~v78;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v74 + 48))(v45, 1, v16))
      {
        uint64_t v46 = v74;
LABEL_41:
        uint64_t v47 = *(void (**)(unint64_t, uint64_t))(v46 + 8);
        v47(v45, v16);
      }
      return;
  }
}

void *sub_24E5B47A8(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v88 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v88 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v90 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v90 + 80);
  uint64_t v87 = v5 + v8;
  uint64_t v95 = v8;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v89 = *(void *)(v90 + 64);
  uint64_t v101 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v10 = (v89 + v101 + ((v5 + v8) & ~v8)) & ~v101;
  uint64_t v93 = v9;
  size_t v11 = *(void *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v11;
  }
  size_t __n = v11;
  unint64_t v98 = v11 + v10;
  uint64_t v91 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v92 = v6;
  uint64_t v83 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v83 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  int v16 = *(_DWORD *)(v14 + 80) | v13;
  uint64_t v94 = v7;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = v15;
  uint64_t v19 = v17;
  uint64_t v20 = *(void *)(v17 - 8);
  uint64_t v21 = v20;
  int v22 = *(_DWORD *)(v20 + 84);
  uint64_t v23 = *(_DWORD *)(v20 + 80);
  uint64_t v24 = (v16 | *(_DWORD *)(v20 + 80)) & 0xF8 | 7u;
  uint64_t v25 = (v24 + 8) & ~v24;
  uint64_t v84 = v12;
  uint64_t v26 = *(unsigned int *)(v12 + 84);
  uint64_t v27 = v14;
  uint64_t v28 = *(unsigned int *)(v14 + 84);
  if (v28 <= v26) {
    unsigned int v29 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v29 = *(_DWORD *)(v14 + 84);
  }
  unsigned int v30 = v22 - 1;
  if (!v22) {
    unsigned int v30 = 0;
  }
  if (v30 <= v29) {
    unsigned int v31 = v29;
  }
  else {
    unsigned int v31 = v30;
  }
  uint64_t v32 = *(void *)(v12 + 64) + v15;
  uint64_t v33 = *(void *)(v14 + 64);
  uint64_t v34 = v33 + v23;
  uint64_t v35 = (v33 + v23 + (v32 & ~v15)) & ~v23;
  size_t v36 = *(void *)(v20 + 64);
  if (v22) {
    size_t v37 = v36;
  }
  else {
    size_t v37 = v36 + 1;
  }
  size_t v38 = v35 + v37;
  if (v31) {
    size_t v39 = v38;
  }
  else {
    size_t v39 = v38 + 1;
  }
  if (v39 <= 8) {
    uint64_t v40 = 8;
  }
  else {
    uint64_t v40 = v39;
  }
  if (v98 <= v40 + v25 + 1) {
    unint64_t v41 = v40 + v25 + 1;
  }
  else {
    unint64_t v41 = v98;
  }
  if (v41 <= 8) {
    uint64_t v42 = 8;
  }
  else {
    uint64_t v42 = v41;
  }
  unsigned int v43 = a2[v42];
  unsigned int v44 = v43 - 4;
  if (v43 < 4)
  {
    uint64_t v46 = a1;
    uint64_t v47 = v95;
  }
  else
  {
    if (v42 <= 3) {
      uint64_t v45 = v42;
    }
    else {
      uint64_t v45 = 4;
    }
    uint64_t v46 = a1;
    uint64_t v47 = v95;
    switch(v45)
    {
      case 1:
        int v48 = *a2;
        if (v42 < 4) {
          goto LABEL_39;
        }
        goto LABEL_40;
      case 2:
        int v48 = *(unsigned __int16 *)a2;
        if (v42 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 3:
        int v48 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v42 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 4:
        int v48 = *(_DWORD *)a2;
        if (v42 < 4) {
LABEL_39:
        }
          v48 |= v44 << (8 * v42);
LABEL_40:
        unsigned int v43 = v48 + 4;
        break;
      default:
        break;
    }
  }
  uint64_t v49 = ~v47;
  uint64_t v50 = ~v101;
  uint64_t v51 = ~v24;
  switch(v43)
  {
    case 1u:
      void *v46 = *(void *)a2;
      *((unsigned char *)v46 + v42) = 1;
      swift_bridgeObjectRetain();
      return v46;
    case 2u:
      void *v46 = *(void *)a2;
      size_t v54 = (void *)(((unint64_t)v46 + v24 + 8) & v51);
      uint64_t v55 = (unsigned __int8 *)((unint64_t)&a2[v24 + 8] & v51);
      unsigned int v56 = v55[v40];
      unsigned int v57 = v56 - 2;
      if (v56 >= 2)
      {
        if (v40 <= 3) {
          uint64_t v58 = v40;
        }
        else {
          uint64_t v58 = 4;
        }
        switch(v58)
        {
          case 1:
            int v59 = *v55;
            goto LABEL_57;
          case 2:
            int v59 = *(unsigned __int16 *)v55;
            goto LABEL_57;
          case 3:
            int v59 = *(unsigned __int16 *)v55 | (v55[2] << 16);
            goto LABEL_57;
          case 4:
            int v59 = *(_DWORD *)v55;
LABEL_57:
            int v61 = (v59 | (v57 << (8 * v40))) + 2;
            unsigned int v56 = v59 + 2;
            if (v40 < 4) {
              unsigned int v56 = v61;
            }
            break;
          default:
            break;
        }
      }
      if (v56 == 1)
      {
        uint64_t v62 = *(void *)v55;
        id v63 = *(id *)v55;
        *size_t v54 = v62;
        char v64 = 1;
LABEL_90:
        *((unsigned char *)v54 + v40) = v64;
        char v60 = 2;
        goto LABEL_91;
      }
      uint64_t v81 = v19;
      size_t v82 = v38;
      size_t v79 = v37;
      uint64_t v80 = v32;
      uint64_t v97 = ~v18;
      uint64_t v99 = ~v23;
      if (!v31)
      {
        if (v55[v38])
        {
          int v67 = (v55[v38] - 1) << (8 * v38);
          if (v38 > 3) {
            int v67 = 0;
          }
          if (v38)
          {
            int v68 = v38 <= 3 ? v38 : 4;
            switch(v68)
            {
              case 2:
                int v69 = *(unsigned __int16 *)v55;
                break;
              case 3:
                int v69 = *(unsigned __int16 *)v55 | (v55[2] << 16);
                break;
              case 4:
                int v69 = *(_DWORD *)v55;
                break;
              default:
                int v69 = *v55;
                break;
            }
          }
          else
          {
            int v69 = 0;
          }
          if ((v69 | v67) != 0xFFFFFFFF) {
            goto LABEL_76;
          }
        }
        goto LABEL_84;
      }
      if (v26 == v31)
      {
        unsigned int v65 = v31;
        int v66 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v84 + 48))(v55, v26, AssociatedTypeWitness);
      }
      else
      {
        unint64_t v70 = (unint64_t)&v55[v32] & ~v18;
        unsigned int v65 = v31;
        if (v28 != v31)
        {
          unsigned int v71 = (*(uint64_t (**)(unint64_t))(v21 + 48))((v34 + v70) & ~v23);
          unsigned int v31 = v65;
          if (v71 >= 2) {
            goto LABEL_76;
          }
          goto LABEL_84;
        }
        int v66 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v70, v28, v83);
      }
      unsigned int v31 = v65;
      if (v66)
      {
LABEL_76:
        memcpy(v54, v55, v39);
        char v64 = 0;
        goto LABEL_90;
      }
LABEL_84:
      uint64_t v72 = v54;
      unsigned int v73 = v31;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v84 + 16))(v72, v55, AssociatedTypeWitness);
      __int16 v102 = v72;
      unint64_t v74 = ((unint64_t)v72 + v80) & v97;
      unint64_t v75 = (unint64_t)&v55[v80] & v97;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v27 + 16))(v74, v75, v83);
      unint64_t v76 = (void *)((v34 + v74) & v99);
      uint64_t v77 = (const void *)((v34 + v75) & v99);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v77, 1, v81))
      {
        memcpy(v76, v77, v79);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v76, v77, v81);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v76, 0, 1, v81);
      }
      char v64 = 0;
      if (v73)
      {
        size_t v54 = v102;
      }
      else
      {
        size_t v54 = v102;
        *((unsigned char *)v102 + v82) = 0;
      }
      goto LABEL_90;
    case 3u:
      void *v46 = *(void *)a2;
      char v60 = 3;
LABEL_91:
      *((unsigned char *)v46 + v42) = v60;
      return v46;
    default:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v88 + 16))(v46, a2, v91);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 16))(((unint64_t)v46 + v87) & v49, (unint64_t)&a2[v87] & v49, v92);
      int v52 = (void *)(((((unint64_t)v46 + v87) & v49) + v89 + v101) & v50);
      int v53 = (const void *)((((unint64_t)&a2[v87] & v49) + v89 + v101) & v50);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v93 + 48))(v53, 1, v94))
      {
        memcpy(v52, v53, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v93 + 16))(v52, v53, v94);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v93 + 56))(v52, 0, 1, v94);
      }
      *((unsigned char *)v46 + v42) = 0;
      return v46;
  }
}

unsigned __int8 *sub_24E5B5058(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a3[2];
    uint64_t v103 = *(void *)(v5 - 8);
    uint64_t v6 = *(void *)(v103 + 64);
    uint64_t v8 = a3[3];
    uint64_t v7 = a3[4];
    uint64_t v105 = *(void *)(v8 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v105 + 80);
    uint64_t v102 = v6 + v9;
    uint64_t v110 = v9;
    uint64_t v10 = *(void *)(v7 - 8);
    uint64_t v104 = *(void *)(v105 + 64);
    uint64_t v116 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v11 = (v104 + v116 + ((v6 + v9) & ~v9)) & ~v116;
    uint64_t v108 = v10;
    size_t v12 = *(void *)(v10 + 64);
    if (!*(_DWORD *)(v10 + 84)) {
      ++v12;
    }
    size_t __n = v12;
    unint64_t v112 = v12 + v11;
    uint64_t v106 = v5;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
    int v14 = *(_DWORD *)(v13 + 80);
    uint64_t v107 = v8;
    uint64_t v94 = swift_getAssociatedTypeWitness();
    uint64_t v15 = *(void *)(v94 - 8);
    uint64_t v16 = *(_DWORD *)(v15 + 80);
    int v17 = *(_DWORD *)(v15 + 80) | v14;
    uint64_t v109 = v7;
    uint64_t v18 = swift_getAssociatedTypeWitness();
    uint64_t v19 = *(void *)(v18 - 8);
    int v20 = *(_DWORD *)(v19 + 84);
    uint64_t v100 = v19;
    uint64_t v21 = *(_DWORD *)(v19 + 80);
    uint64_t v22 = (v17 | *(_DWORD *)(v19 + 80)) & 0xF8 | 7u;
    uint64_t v23 = (v22 + 8) & ~v22;
    uint64_t v98 = v13;
    uint64_t v24 = *(unsigned int *)(v13 + 84);
    uint64_t v91 = v15;
    uint64_t v25 = *(unsigned int *)(v15 + 84);
    if (v25 <= v24) {
      unsigned int v26 = *(_DWORD *)(v13 + 84);
    }
    else {
      unsigned int v26 = *(_DWORD *)(v15 + 84);
    }
    unsigned int v27 = v20 - 1;
    if (!v20) {
      unsigned int v27 = 0;
    }
    if (v27 <= v26) {
      unsigned int v28 = v26;
    }
    else {
      unsigned int v28 = v27;
    }
    unsigned int v88 = *(_DWORD *)(v19 + 84);
    BOOL v29 = v20 == 0;
    uint64_t v30 = v16;
    uint64_t v97 = *(void *)(v13 + 64) + v16;
    uint64_t v93 = *(void *)(v15 + 64) + v21;
    if (v29) {
      uint64_t v32 = *(void *)(*(void *)(v18 - 8) + 64) + 1;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v18 - 8) + 64);
    }
    uint64_t v31 = (*(void *)(v15 + 64) + v21 + (v97 & ~v16)) & ~v21;
    uint64_t v33 = v31 + v32;
    unsigned int v101 = v28;
    if (v28) {
      unint64_t v34 = v31 + v32;
    }
    else {
      unint64_t v34 = v33 + 1;
    }
    size_t v89 = v34;
    if (v34 <= 8) {
      uint64_t v35 = 8;
    }
    else {
      uint64_t v35 = v34;
    }
    if (v112 <= v35 + v23 + 1) {
      unint64_t v36 = v35 + v23 + 1;
    }
    else {
      unint64_t v36 = v112;
    }
    if (v36 <= 8) {
      uint64_t v37 = 8;
    }
    else {
      uint64_t v37 = v36;
    }
    unsigned int v38 = a1[v37];
    unsigned int v39 = v38 - 4;
    if (v38 < 4)
    {
      uint64_t v41 = v110;
    }
    else
    {
      if (v37 <= 3) {
        uint64_t v40 = v37;
      }
      else {
        uint64_t v40 = 4;
      }
      uint64_t v41 = v110;
      switch(v40)
      {
        case 1:
          int v42 = *a1;
          if (v37 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 2:
          int v42 = *(unsigned __int16 *)a1;
          if (v37 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 3:
          int v42 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v37 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 4:
          int v42 = *(_DWORD *)a1;
          if (v37 < 4) {
LABEL_40:
          }
            v42 |= v39 << (8 * v37);
LABEL_41:
          unsigned int v38 = v42 + 4;
          break;
        default:
          break;
      }
    }
    uint64_t v95 = v18;
    uint64_t v111 = ~v41;
    uint64_t v113 = ~v116;
    uint64_t v43 = ~v22;
    uint64_t v96 = ~v30;
    uint64_t v92 = ~v21;
    switch(v38)
    {
      case 1u:
        swift_bridgeObjectRelease();
        goto LABEL_84;
      case 2u:
        uint64_t v45 = (id *)((unint64_t)&a1[v22 + 8] & v43);
        unsigned int v46 = *((unsigned __int8 *)v45 + v35);
        unsigned int v47 = v46 - 2;
        if (v46 >= 2)
        {
          if (v35 <= 3) {
            uint64_t v48 = v35;
          }
          else {
            uint64_t v48 = 4;
          }
          switch(v48)
          {
            case 1:
              int v49 = *(unsigned __int8 *)v45;
              goto LABEL_55;
            case 2:
              int v49 = *(unsigned __int16 *)v45;
              goto LABEL_55;
            case 3:
              int v49 = *(unsigned __int16 *)v45 | (*(unsigned __int8 *)(((unint64_t)&a1[v22 + 8] & v43) + 2) << 16);
              goto LABEL_55;
            case 4:
              int v49 = *(_DWORD *)v45;
LABEL_55:
              int v50 = (v49 | (v47 << (8 * v35))) + 2;
              unsigned int v46 = v49 + 2;
              if (v35 < 4) {
                unsigned int v46 = v50;
              }
              break;
            default:
              break;
          }
        }
        if (v46 == 1)
        {

          goto LABEL_84;
        }
        if (!v28)
        {
          if (*((unsigned char *)v45 + v33))
          {
            int v52 = (*((unsigned __int8 *)v45 + v33) - 1) << (8 * v33);
            if (v33 > 3) {
              int v52 = 0;
            }
            if (v33)
            {
              int v53 = v33 <= 3 ? v33 : 4;
              switch(v53)
              {
                case 2:
                  int v54 = *(unsigned __int16 *)v45;
                  break;
                case 3:
                  int v54 = *(unsigned __int16 *)v45 | (*(unsigned __int8 *)(((unint64_t)&a1[v22 + 8] & v43) + 2) << 16);
                  break;
                case 4:
                  int v54 = *(_DWORD *)v45;
                  break;
                default:
                  int v54 = *(unsigned __int8 *)v45;
                  break;
              }
            }
            else
            {
              int v54 = 0;
            }
            if ((v54 | v52) != 0xFFFFFFFF) {
              goto LABEL_84;
            }
          }
          goto LABEL_82;
        }
        if (v24 == v28)
        {
          int v51 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v98 + 48))((unint64_t)&a1[v22 + 8] & v43, v24, AssociatedTypeWitness);
        }
        else
        {
          unint64_t v55 = ((unint64_t)v45 + v97) & v96;
          if (v25 != v28)
          {
            if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v100 + 48))((v93 + v55) & v92, v88, v95) < 2)goto LABEL_82; {
            goto LABEL_84;
            }
          }
          int v51 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v91 + 48))(v55, v25, v94);
        }
        if (!v51)
        {
LABEL_82:
          (*(void (**)(unint64_t, uint64_t))(v98 + 8))((unint64_t)&a1[v22 + 8] & v43, AssociatedTypeWitness);
          unint64_t v56 = ((unint64_t)v45 + v97) & v96;
          (*(void (**)(unint64_t, uint64_t))(v91 + 8))(v56, v94);
          unint64_t v57 = (v93 + v56) & v92;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v100 + 48))(v57, 1, v95)) {
            (*(void (**)(unint64_t, uint64_t))(v100 + 8))(v57, v95);
          }
        }
LABEL_84:
        unsigned int v58 = a2[v37];
        unsigned int v59 = v58 - 4;
        if (v58 >= 4)
        {
          if (v37 <= 3) {
            uint64_t v60 = v37;
          }
          else {
            uint64_t v60 = 4;
          }
          switch(v60)
          {
            case 1:
              int v61 = *a2;
              if (v37 >= 4) {
                goto LABEL_96;
              }
              goto LABEL_92;
            case 2:
              int v61 = *(unsigned __int16 *)a2;
              if (v37 < 4) {
                goto LABEL_92;
              }
              goto LABEL_96;
            case 3:
              int v61 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              if (v37 < 4) {
                goto LABEL_92;
              }
              goto LABEL_96;
            case 4:
              int v61 = *(_DWORD *)a2;
              if (v37 < 4) {
LABEL_92:
              }
                unsigned int v58 = (v61 | (v59 << (8 * v37))) + 4;
              else {
LABEL_96:
              }
                unsigned int v58 = v61 + 4;
              break;
            default:
              break;
          }
        }
        switch(v58)
        {
          case 1u:
            *(void *)a1 = *(void *)a2;
            a1[v37] = 1;
            swift_bridgeObjectRetain();
            return a1;
          case 2u:
            size_t v117 = v32;
            uint64_t v64 = v33;
            *(void *)a1 = *(void *)a2;
            unsigned int v65 = (void *)((unint64_t)&a1[v22 + 8] & v43);
            int v66 = (id *)((unint64_t)&a2[v22 + 8] & v43);
            unsigned int v67 = *((unsigned __int8 *)v66 + v35);
            unsigned int v68 = v67 - 2;
            if (v67 >= 2)
            {
              if (v35 <= 3) {
                uint64_t v69 = v35;
              }
              else {
                uint64_t v69 = 4;
              }
              switch(v69)
              {
                case 1:
                  int v70 = *(unsigned __int8 *)v66;
                  goto LABEL_113;
                case 2:
                  int v70 = *(unsigned __int16 *)v66;
                  goto LABEL_113;
                case 3:
                  int v70 = *(unsigned __int16 *)((unint64_t)&a2[v22 + 8] & v43) | (*(unsigned __int8 *)(((unint64_t)&a2[v22 + 8] & v43) + 2) << 16);
                  goto LABEL_113;
                case 4:
                  int v70 = *(_DWORD *)v66;
LABEL_113:
                  int v72 = (v70 | (v68 << (8 * v35))) + 2;
                  unsigned int v67 = v70 + 2;
                  if (v35 < 4) {
                    unsigned int v67 = v72;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v67 == 1)
            {
              id v73 = *v66;
              id v74 = *v66;
              void *v65 = v73;
              char v75 = 1;
LABEL_146:
              *((unsigned char *)v65 + v35) = v75;
              char v71 = 2;
              goto LABEL_147;
            }
            if (!v101)
            {
              uint64_t v77 = v100;
              if (*((unsigned char *)v66 + v64))
              {
                int v78 = (*((unsigned __int8 *)v66 + v64) - 1) << (8 * v64);
                if (v64 > 3) {
                  int v78 = 0;
                }
                if (v64)
                {
                  int v79 = v64 <= 3 ? v64 : 4;
                  switch(v79)
                  {
                    case 2:
                      int v80 = *(unsigned __int16 *)v66;
                      break;
                    case 3:
                      int v80 = *(unsigned __int16 *)((unint64_t)&a2[v22 + 8] & v43) | (*(unsigned __int8 *)(((unint64_t)&a2[v22 + 8] & v43) + 2) << 16);
                      break;
                    case 4:
                      int v80 = *(_DWORD *)v66;
                      break;
                    default:
                      int v80 = *(unsigned __int8 *)v66;
                      break;
                  }
                }
                else
                {
                  int v80 = 0;
                }
                if ((v80 | v78) != 0xFFFFFFFF) {
                  goto LABEL_132;
                }
              }
              goto LABEL_140;
            }
            if (v24 == v101)
            {
              int v76 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(v98 + 48))(v66, v24, AssociatedTypeWitness);
            }
            else
            {
              unint64_t v81 = ((unint64_t)v66 + v97) & v96;
              if (v25 != v101)
              {
                uint64_t v77 = v100;
                if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v100 + 48))((v93 + v81) & v92, v88, v95) >= 2)goto LABEL_132; {
                goto LABEL_140;
                }
              }
              int v76 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v91 + 48))(v81, v25, v94);
            }
            uint64_t v77 = v100;
            if (v76)
            {
LABEL_132:
              memcpy((void *)((unint64_t)&a1[v22 + 8] & v43), v66, v89);
              char v75 = 0;
              goto LABEL_146;
            }
LABEL_140:
            (*(void (**)(void *, id *, uint64_t))(v98 + 16))(v65, v66, AssociatedTypeWitness);
            unint64_t v82 = (unint64_t)v66 + v97;
            uint64_t v83 = v77;
            unint64_t v84 = v82 & v96;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v91 + 16))(((unint64_t)v65 + v97) & v96, v82 & v96, v94);
            uint64_t v85 = (void *)((v93 + (((unint64_t)v65 + v97) & v96)) & v92);
            uint64_t v86 = (const void *)((v93 + v84) & v92);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v83 + 48))(v86, 1, v95))
            {
              memcpy(v85, v86, v117);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v83 + 16))(v85, v86, v95);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v85, 0, 1, v95);
            }
            char v75 = v101;
            if (v101) {
              char v75 = 0;
            }
            else {
              *((unsigned char *)v65 + v64) = 0;
            }
            goto LABEL_146;
          case 3u:
            *(void *)a1 = *(void *)a2;
            char v71 = 3;
LABEL_147:
            a1[v37] = v71;
            return a1;
          default:
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v103 + 16))(a1, a2, v106);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v105 + 16))((unint64_t)&a1[v102] & v111, (unint64_t)&a2[v102] & v111, v107);
            uint64_t v62 = (void *)((((unint64_t)&a1[v102] & v111) + v104 + v116) & v113);
            id v63 = (const void *)((((unint64_t)&a2[v102] & v111) + v104 + v116) & v113);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v108 + 48))(v63, 1, v109))
            {
              memcpy(v62, v63, __n);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v108 + 16))(v62, v63, v109);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v108 + 56))(v62, 0, 1, v109);
            }
            a1[v37] = 0;
            return a1;
        }
      case 3u:
        goto LABEL_84;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v103 + 8))(a1, v106);
        (*(void (**)(unint64_t, uint64_t))(v105 + 8))((unint64_t)&a1[v102] & v111, v107);
        unint64_t v44 = (((unint64_t)&a1[v102] & v111) + v104 + v116) & v113;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v108 + 48))(v44, 1, v109)) {
          (*(void (**)(unint64_t, uint64_t))(v108 + 8))(v44, v109);
        }
        goto LABEL_84;
    }
  }
  return a1;
}

void *sub_24E5B5D14(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v86 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v86 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v88 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v88 + 80);
  uint64_t v85 = v5 + v8;
  uint64_t v93 = v8;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v87 = *(void *)(v88 + 64);
  uint64_t v99 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v10 = (v87 + v99 + ((v5 + v8) & ~v8)) & ~v99;
  uint64_t v91 = v9;
  size_t v11 = *(void *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v11;
  }
  size_t __n = v11;
  unint64_t v96 = v11 + v10;
  uint64_t v89 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v90 = v6;
  uint64_t v81 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v81 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  int v16 = *(_DWORD *)(v14 + 80) | v13;
  uint64_t v92 = v7;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = v15;
  uint64_t v19 = v17;
  uint64_t v20 = *(void *)(v17 - 8);
  uint64_t v21 = v20;
  int v22 = *(_DWORD *)(v20 + 84);
  uint64_t v23 = *(_DWORD *)(v20 + 80);
  uint64_t v24 = (v16 | *(_DWORD *)(v20 + 80)) & 0xF8 | 7u;
  uint64_t v25 = (v24 + 8) & ~v24;
  uint64_t v82 = v12;
  uint64_t v26 = *(unsigned int *)(v12 + 84);
  uint64_t v27 = v14;
  uint64_t v28 = *(unsigned int *)(v14 + 84);
  if (v28 <= v26) {
    unsigned int v29 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v29 = *(_DWORD *)(v14 + 84);
  }
  unsigned int v30 = v22 - 1;
  if (!v22) {
    unsigned int v30 = 0;
  }
  if (v30 <= v29) {
    unsigned int v31 = v29;
  }
  else {
    unsigned int v31 = v30;
  }
  uint64_t v32 = *(void *)(v12 + 64) + v15;
  uint64_t v33 = *(void *)(v14 + 64);
  uint64_t v34 = v33 + v23;
  uint64_t v35 = (v33 + v23 + (v32 & ~v15)) & ~v23;
  size_t v36 = *(void *)(v20 + 64);
  if (v22) {
    size_t v37 = v36;
  }
  else {
    size_t v37 = v36 + 1;
  }
  size_t v38 = v35 + v37;
  if (v31) {
    size_t v39 = v38;
  }
  else {
    size_t v39 = v38 + 1;
  }
  if (v39 <= 8) {
    uint64_t v40 = 8;
  }
  else {
    uint64_t v40 = v39;
  }
  if (v96 <= v40 + v25 + 1) {
    unint64_t v41 = v40 + v25 + 1;
  }
  else {
    unint64_t v41 = v96;
  }
  if (v41 <= 8) {
    uint64_t v42 = 8;
  }
  else {
    uint64_t v42 = v41;
  }
  unsigned int v43 = a2[v42];
  unsigned int v44 = v43 - 4;
  if (v43 < 4)
  {
    unsigned int v46 = a1;
    uint64_t v47 = v93;
  }
  else
  {
    if (v42 <= 3) {
      uint64_t v45 = v42;
    }
    else {
      uint64_t v45 = 4;
    }
    unsigned int v46 = a1;
    uint64_t v47 = v93;
    switch(v45)
    {
      case 1:
        int v48 = *a2;
        if (v42 < 4) {
          goto LABEL_39;
        }
        goto LABEL_40;
      case 2:
        int v48 = *(unsigned __int16 *)a2;
        if (v42 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 3:
        int v48 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v42 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 4:
        int v48 = *(_DWORD *)a2;
        if (v42 < 4) {
LABEL_39:
        }
          v48 |= v44 << (8 * v42);
LABEL_40:
        unsigned int v43 = v48 + 4;
        break;
      default:
        break;
    }
  }
  uint64_t v49 = ~v47;
  uint64_t v50 = ~v99;
  uint64_t v51 = ~v24;
  switch(v43)
  {
    case 1u:
      void *v46 = *(void *)a2;
      char v54 = 1;
      goto LABEL_91;
    case 2u:
      void *v46 = *(void *)a2;
      unint64_t v55 = (void *)(((unint64_t)v46 + v24 + 8) & v51);
      unint64_t v56 = (unsigned __int8 *)((unint64_t)&a2[v24 + 8] & v51);
      unsigned int v57 = v56[v40];
      unsigned int v58 = v57 - 2;
      if (v57 >= 2)
      {
        if (v40 <= 3) {
          uint64_t v59 = v40;
        }
        else {
          uint64_t v59 = 4;
        }
        switch(v59)
        {
          case 1:
            int v60 = *v56;
            goto LABEL_57;
          case 2:
            int v60 = *(unsigned __int16 *)v56;
            goto LABEL_57;
          case 3:
            int v60 = *(unsigned __int16 *)v56 | (v56[2] << 16);
            goto LABEL_57;
          case 4:
            int v60 = *(_DWORD *)v56;
LABEL_57:
            int v61 = (v60 | (v58 << (8 * v40))) + 2;
            unsigned int v57 = v60 + 2;
            if (v40 < 4) {
              unsigned int v57 = v61;
            }
            break;
          default:
            break;
        }
      }
      if (v57 == 1)
      {
        void *v55 = *(void *)v56;
        char v62 = 1;
LABEL_90:
        *((unsigned char *)v55 + v40) = v62;
        char v54 = 2;
        goto LABEL_91;
      }
      uint64_t v79 = v19;
      size_t v80 = v38;
      size_t v77 = v37;
      uint64_t v78 = v32;
      uint64_t v95 = ~v18;
      uint64_t v97 = ~v23;
      if (!v31)
      {
        if (v56[v38])
        {
          int v65 = (v56[v38] - 1) << (8 * v38);
          if (v38 > 3) {
            int v65 = 0;
          }
          if (v38)
          {
            int v66 = v38 <= 3 ? v38 : 4;
            switch(v66)
            {
              case 2:
                int v67 = *(unsigned __int16 *)v56;
                break;
              case 3:
                int v67 = *(unsigned __int16 *)v56 | (v56[2] << 16);
                break;
              case 4:
                int v67 = *(_DWORD *)v56;
                break;
              default:
                int v67 = *v56;
                break;
            }
          }
          else
          {
            int v67 = 0;
          }
          if ((v67 | v65) != 0xFFFFFFFF) {
            goto LABEL_76;
          }
        }
        goto LABEL_84;
      }
      if (v26 == v31)
      {
        unsigned int v63 = v31;
        int v64 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v82 + 48))(v56, v26, AssociatedTypeWitness);
      }
      else
      {
        unint64_t v68 = (unint64_t)&v56[v32] & ~v18;
        unsigned int v63 = v31;
        if (v28 != v31)
        {
          unsigned int v69 = (*(uint64_t (**)(unint64_t))(v21 + 48))((v34 + v68) & ~v23);
          unsigned int v31 = v63;
          if (v69 >= 2) {
            goto LABEL_76;
          }
          goto LABEL_84;
        }
        int v64 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v68, v28, v81);
      }
      unsigned int v31 = v63;
      if (v64)
      {
LABEL_76:
        memcpy(v55, v56, v39);
        char v62 = 0;
        goto LABEL_90;
      }
LABEL_84:
      int v70 = v55;
      unsigned int v71 = v31;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v82 + 32))(v70, v56, AssociatedTypeWitness);
      uint64_t v100 = v70;
      unint64_t v72 = ((unint64_t)v70 + v78) & v95;
      unint64_t v73 = (unint64_t)&v56[v78] & v95;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v27 + 32))(v72, v73, v81);
      id v74 = (void *)((v34 + v72) & v97);
      char v75 = (const void *)((v34 + v73) & v97);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v75, 1, v79))
      {
        memcpy(v74, v75, v77);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v74, v75, v79);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v74, 0, 1, v79);
      }
      char v62 = 0;
      if (v71)
      {
        unint64_t v55 = v100;
      }
      else
      {
        unint64_t v55 = v100;
        *((unsigned char *)v100 + v80) = 0;
      }
      goto LABEL_90;
    case 3u:
      void *v46 = *(void *)a2;
      char v54 = 3;
      goto LABEL_91;
    default:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v86 + 32))(v46, a2, v89);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v88 + 32))(((unint64_t)v46 + v85) & v49, (unint64_t)&a2[v85] & v49, v90);
      int v52 = (void *)(((((unint64_t)v46 + v85) & v49) + v87 + v99) & v50);
      int v53 = (const void *)((((unint64_t)&a2[v85] & v49) + v87 + v99) & v50);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v91 + 48))(v53, 1, v92))
      {
        memcpy(v52, v53, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v91 + 32))(v52, v53, v92);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v52, 0, 1, v92);
      }
      char v54 = 0;
LABEL_91:
      *((unsigned char *)v46 + v42) = v54;
      return v46;
  }
}

unsigned __int8 *sub_24E5B65B4(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    uint64_t v5 = a3[2];
    uint64_t v100 = *(void *)(v5 - 8);
    uint64_t v6 = *(void *)(v100 + 64);
    uint64_t v8 = a3[3];
    uint64_t v7 = a3[4];
    uint64_t v102 = *(void *)(v8 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v102 + 80);
    uint64_t v99 = v6 + v9;
    uint64_t v107 = v9;
    uint64_t v10 = *(void *)(v7 - 8);
    uint64_t v101 = *(void *)(v102 + 64);
    uint64_t v113 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v11 = (v101 + v113 + ((v6 + v9) & ~v9)) & ~v113;
    uint64_t v105 = v10;
    size_t v12 = *(void *)(v10 + 64);
    if (!*(_DWORD *)(v10 + 84)) {
      ++v12;
    }
    size_t __n = v12;
    unint64_t v109 = v12 + v11;
    uint64_t v103 = v5;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
    int v14 = *(_DWORD *)(v13 + 80);
    uint64_t v104 = v8;
    uint64_t v92 = swift_getAssociatedTypeWitness();
    uint64_t v15 = *(void *)(v92 - 8);
    uint64_t v16 = *(_DWORD *)(v15 + 80);
    int v17 = *(_DWORD *)(v15 + 80) | v14;
    uint64_t v106 = v7;
    uint64_t v18 = swift_getAssociatedTypeWitness();
    uint64_t v19 = *(void *)(v18 - 8);
    int v20 = *(_DWORD *)(v19 + 84);
    uint64_t v94 = v19;
    uint64_t v21 = *(_DWORD *)(v19 + 80);
    uint64_t v22 = (v17 | *(_DWORD *)(v19 + 80)) & 0xF8 | 7u;
    uint64_t v23 = (v22 + 8) & ~v22;
    uint64_t v96 = v13;
    uint64_t v24 = *(unsigned int *)(v13 + 84);
    uint64_t v89 = v15;
    uint64_t v25 = *(unsigned int *)(v15 + 84);
    if (v25 <= v24) {
      unsigned int v26 = *(_DWORD *)(v13 + 84);
    }
    else {
      unsigned int v26 = *(_DWORD *)(v15 + 84);
    }
    unsigned int v27 = v20 - 1;
    if (!v20) {
      unsigned int v27 = 0;
    }
    if (v27 <= v26) {
      unsigned int v28 = v26;
    }
    else {
      unsigned int v28 = v27;
    }
    unsigned int v86 = *(_DWORD *)(v19 + 84);
    BOOL v29 = v20 == 0;
    uint64_t v30 = v16;
    uint64_t v3 = a1;
    uint64_t v95 = *(void *)(v13 + 64) + v16;
    uint64_t v91 = *(void *)(v15 + 64) + v21;
    uint64_t v31 = (v91 + (v95 & ~v16)) & ~v21;
    if (v29) {
      uint64_t v32 = *(void *)(*(void *)(v18 - 8) + 64) + 1;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v18 - 8) + 64);
    }
    uint64_t v33 = v31 + v32;
    unsigned int v98 = v28;
    if (v28) {
      unint64_t v34 = v31 + v32;
    }
    else {
      unint64_t v34 = v33 + 1;
    }
    size_t v87 = v34;
    if (v34 <= 8) {
      uint64_t v35 = 8;
    }
    else {
      uint64_t v35 = v34;
    }
    if (v109 <= v35 + v23 + 1) {
      unint64_t v36 = v35 + v23 + 1;
    }
    else {
      unint64_t v36 = v109;
    }
    if (v36 <= 8) {
      uint64_t v37 = 8;
    }
    else {
      uint64_t v37 = v36;
    }
    unsigned int v38 = a1[v37];
    unsigned int v39 = v38 - 4;
    size_t v85 = v32;
    if (v38 < 4)
    {
      uint64_t v41 = v107;
    }
    else
    {
      if (v37 <= 3) {
        uint64_t v40 = v37;
      }
      else {
        uint64_t v40 = 4;
      }
      uint64_t v41 = v107;
      switch(v40)
      {
        case 1:
          int v42 = *a1;
          if (v37 < 4) {
            goto LABEL_40;
          }
          goto LABEL_41;
        case 2:
          int v42 = *(unsigned __int16 *)a1;
          if (v37 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 3:
          int v42 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v37 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 4:
          int v42 = *(_DWORD *)a1;
          if (v37 < 4) {
LABEL_40:
          }
            v42 |= v39 << (8 * v37);
LABEL_41:
          unsigned int v38 = v42 + 4;
          break;
        default:
          break;
      }
    }
    uint64_t v93 = v18;
    uint64_t v43 = ~v41;
    uint64_t v110 = ~v113;
    uint64_t v44 = ~v22;
    uint64_t v108 = ~v30;
    uint64_t v90 = ~v21;
    switch(v38)
    {
      case 1u:
        swift_bridgeObjectRelease();
        goto LABEL_84;
      case 2u:
        int v48 = (id *)((unint64_t)&a1[v22 + 8] & v44);
        unsigned int v49 = *((unsigned __int8 *)v48 + v35);
        unsigned int v50 = v49 - 2;
        if (v49 >= 2)
        {
          if (v35 <= 3) {
            uint64_t v51 = v35;
          }
          else {
            uint64_t v51 = 4;
          }
          switch(v51)
          {
            case 1:
              int v52 = *(unsigned __int8 *)v48;
              goto LABEL_56;
            case 2:
              int v52 = *(unsigned __int16 *)v48;
              goto LABEL_56;
            case 3:
              int v52 = *(unsigned __int16 *)v48 | (*(unsigned __int8 *)(((unint64_t)&a1[v22 + 8] & v44) + 2) << 16);
              goto LABEL_56;
            case 4:
              int v52 = *(_DWORD *)v48;
LABEL_56:
              int v53 = (v52 | (v50 << (8 * v35))) + 2;
              unsigned int v49 = v52 + 2;
              if (v35 < 4) {
                unsigned int v49 = v53;
              }
              break;
            default:
              break;
          }
        }
        if (v49 == 1)
        {

          goto LABEL_84;
        }
        if (!v28)
        {
          if (*((unsigned char *)v48 + v33))
          {
            int v55 = (*((unsigned __int8 *)v48 + v33) - 1) << (8 * v33);
            if (v33 > 3) {
              int v55 = 0;
            }
            if (v33)
            {
              int v56 = v33 <= 3 ? v33 : 4;
              switch(v56)
              {
                case 2:
                  int v57 = *(unsigned __int16 *)v48;
                  break;
                case 3:
                  int v57 = *(unsigned __int16 *)v48 | (*(unsigned __int8 *)(((unint64_t)&a1[v22 + 8] & v44) + 2) << 16);
                  break;
                case 4:
                  int v57 = *(_DWORD *)v48;
                  break;
                default:
                  int v57 = *(unsigned __int8 *)v48;
                  break;
              }
            }
            else
            {
              int v57 = 0;
            }
            if ((v57 | v55) != 0xFFFFFFFF) {
              goto LABEL_84;
            }
          }
LABEL_83:
          (*(void (**)(unint64_t, uint64_t))(v96 + 8))((unint64_t)&a1[v22 + 8] & v44, AssociatedTypeWitness);
          unint64_t v59 = ((unint64_t)v48 + v95) & v108;
          (*(void (**)(unint64_t, uint64_t))(v89 + 8))(v59, v92);
          unint64_t v45 = (v91 + v59) & v90;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v94 + 48))(v45, 1, v93))
          {
            uint64_t v46 = v93;
            uint64_t v47 = v94;
            goto LABEL_45;
          }
          goto LABEL_84;
        }
        if (v24 == v28)
        {
          int v54 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v96 + 48))((unint64_t)&a1[v22 + 8] & v44, v24, AssociatedTypeWitness);
        }
        else
        {
          unint64_t v58 = ((unint64_t)v48 + v95) & v108;
          if (v25 != v28)
          {
            if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v94 + 48))((v91 + v58) & v90, v86, v93) < 2)goto LABEL_83; {
            goto LABEL_84;
            }
          }
          int v54 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v89 + 48))(v58, v25, v92);
        }
        if (!v54) {
          goto LABEL_83;
        }
LABEL_84:
        unsigned int v60 = a2[v37];
        unsigned int v61 = v60 - 4;
        if (v60 >= 4)
        {
          if (v37 <= 3) {
            uint64_t v62 = v37;
          }
          else {
            uint64_t v62 = 4;
          }
          switch(v62)
          {
            case 1:
              int v63 = *a2;
              if (v37 < 4) {
                goto LABEL_92;
              }
              goto LABEL_96;
            case 2:
              int v63 = *(unsigned __int16 *)a2;
              if (v37 < 4) {
                goto LABEL_92;
              }
              goto LABEL_96;
            case 3:
              int v63 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              if (v37 < 4) {
                goto LABEL_92;
              }
              goto LABEL_96;
            case 4:
              int v63 = *(_DWORD *)a2;
              if (v37 < 4) {
LABEL_92:
              }
                unsigned int v60 = (v63 | (v61 << (8 * v37))) + 4;
              else {
LABEL_96:
              }
                unsigned int v60 = v63 + 4;
              break;
            default:
              break;
          }
        }
        switch(v60)
        {
          case 1u:
            *(void *)a1 = *(void *)a2;
            char v66 = 1;
            goto LABEL_149;
          case 2u:
            uint64_t v114 = v33;
            *(void *)a1 = *(void *)a2;
            int v67 = (void *)((unint64_t)&a1[v22 + 8] & v44);
            uint64_t v68 = v35;
            unsigned int v69 = (unsigned __int8 *)((unint64_t)&a2[v22 + 8] & v44);
            unsigned int v70 = v69[v68];
            unsigned int v71 = v70 - 2;
            if (v70 < 2)
            {
              uint64_t v73 = v68;
LABEL_110:
              if (v70 != 1) {
                goto LABEL_119;
              }
            }
            else
            {
              if (v68 <= 3) {
                uint64_t v72 = v68;
              }
              else {
                uint64_t v72 = 4;
              }
              uint64_t v73 = v68;
              switch(v72)
              {
                case 1:
                  int v74 = *v69;
                  break;
                case 2:
                  int v74 = *(unsigned __int16 *)v69;
                  break;
                case 3:
                  int v74 = *(unsigned __int16 *)((unint64_t)&a2[v22 + 8] & v44) | (*(unsigned __int8 *)(((unint64_t)&a2[v22 + 8] & v44) + 2) << 16);
                  break;
                case 4:
                  int v74 = *(_DWORD *)v69;
                  break;
                default:
                  goto LABEL_110;
              }
              int v76 = (v74 | (v71 << (8 * v68))) + 2;
              int v77 = v74 + 2;
              if (v68 < 4) {
                int v77 = v76;
              }
              if (v77 != 1)
              {
LABEL_119:
                if (v98)
                {
                  if (v24 == v98)
                  {
                    if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v96 + 48))(v69, v24, AssociatedTypeWitness))goto LABEL_137; {
LABEL_147:
                    }
                    memcpy((void *)((unint64_t)&a1[v22 + 8] & v44), v69, v87);
                    char v75 = 0;
                    goto LABEL_148;
                  }
                  unint64_t v81 = (unint64_t)&v69[v95] & v108;
                  if (v25 != v98)
                  {
                    if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v94 + 48))((v91 + v81) & v90, v86, v93) < 2)goto LABEL_137; {
                    goto LABEL_147;
                    }
                  }
                  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v89 + 48))(v81, v25, v92)) {
                    goto LABEL_147;
                  }
                }
                else if (v69[v114])
                {
                  int v78 = (v69[v114] - 1) << (8 * v114);
                  if (v114 > 3) {
                    int v78 = 0;
                  }
                  if (v114)
                  {
                    int v79 = v114 <= 3 ? v114 : 4;
                    switch(v79)
                    {
                      case 2:
                        int v80 = *(unsigned __int16 *)v69;
                        break;
                      case 3:
                        int v80 = *(unsigned __int16 *)((unint64_t)&a2[v22 + 8] & v44) | (*(unsigned __int8 *)(((unint64_t)&a2[v22 + 8] & v44) + 2) << 16);
                        break;
                      case 4:
                        int v80 = *(_DWORD *)v69;
                        break;
                      default:
                        int v80 = *v69;
                        break;
                    }
                  }
                  else
                  {
                    int v80 = 0;
                  }
                  if ((v80 | v78) != 0xFFFFFFFF) {
                    goto LABEL_147;
                  }
                }
LABEL_137:
                (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v96 + 32))((unint64_t)&a1[v22 + 8] & v44, v69, AssociatedTypeWitness);
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v89 + 32))(((unint64_t)v67 + v95) & v108, (unint64_t)&v69[v95] & v108, v92);
                uint64_t v82 = (void *)((v91 + (((unint64_t)v67 + v95) & v108)) & v90);
                uint64_t v83 = (const void *)((v91 + ((unint64_t)&v69[v95] & v108)) & v90);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v94 + 48))(v83, 1, v93))
                {
                  memcpy(v82, v83, v85);
                  char v75 = v98;
                  if (v98)
                  {
LABEL_139:
                    char v75 = 0;
                    goto LABEL_148;
                  }
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v94 + 32))(v82, v83, v93);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v94 + 56))(v82, 0, 1, v93);
                  char v75 = v98;
                  if (v98) {
                    goto LABEL_139;
                  }
                }
                *((unsigned char *)v67 + v114) = 0;
                goto LABEL_148;
              }
            }
            *int v67 = *(void *)v69;
            char v75 = 1;
LABEL_148:
            *((unsigned char *)v67 + v73) = v75;
            char v66 = 2;
LABEL_149:
            a1[v37] = v66;
            return v3;
          case 3u:
            *(void *)a1 = *(void *)a2;
            char v66 = 3;
            goto LABEL_149;
          default:
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v100 + 32))(a1, a2, v103);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v102 + 32))((unint64_t)&a1[v99] & v43, (unint64_t)&a2[v99] & v43, v104);
            int v64 = (void *)((((unint64_t)&a1[v99] & v43) + v101 + v113) & v110);
            int v65 = (const void *)((((unint64_t)&a2[v99] & v43) + v101 + v113) & v110);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v105 + 48))(v65, 1, v106))
            {
              memcpy(v64, v65, __n);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v105 + 32))(v64, v65, v106);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v64, 0, 1, v106);
            }
            char v66 = 0;
            goto LABEL_149;
        }
      case 3u:
        goto LABEL_84;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v100 + 8))(a1, v103);
        (*(void (**)(unint64_t, uint64_t))(v102 + 8))((unint64_t)&a1[v99] & v43, v104);
        unint64_t v45 = (((unint64_t)&a1[v99] & v43) + v101 + v113) & v110;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v105 + 48))(v45, 1, v106))
        {
          uint64_t v47 = v105;
          uint64_t v46 = v106;
LABEL_45:
          (*(void (**)(unint64_t, uint64_t))(v47 + 8))(v45, v46);
        }
        goto LABEL_84;
    }
  }
  return v3;
}

uint64_t sub_24E5B7264(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  unint64_t v37 = (((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
       + *(void *)(*(void *)(a3[3] - 8) + 64)
       + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int v34 = *(_DWORD *)(v3 + 84);
  uint64_t v36 = *(void *)(v3 + 64);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v33 = *(_DWORD *)(v4 + 80);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = v7;
  unsigned int v9 = *(_DWORD *)(v4 + 84);
  if (*(_DWORD *)(v5 + 84) > v9) {
    unsigned int v9 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v12 = v7 + 80;
  int v10 = *(_DWORD *)(v7 + 80);
  int v11 = *(_DWORD *)(v12 + 4);
  int v13 = v11 - 1;
  if (!v11) {
    int v13 = 0;
  }
  BOOL v14 = v11 == 0;
  uint64_t v15 = *(void *)(v8 + 64);
  if (v14) {
    ++v15;
  }
  uint64_t v16 = v10;
  uint64_t v17 = ((v6 | v33) | v10) & 0xF8 | 7u;
  uint64_t v18 = (v17 + 8) & ~v17;
  int v19 = v13 | v9;
  uint64_t v20 = v36;
  if (!v34) {
    uint64_t v20 = v36 + 1;
  }
  BOOL v14 = v19 == 0;
  unint64_t v21 = v20 + v37;
  if (v14) {
    ++v15;
  }
  unint64_t v22 = v15
      + ((*(void *)(v5 + 64)
        + v16
        + ((*(void *)(v4 + 64) + v6) & ~(unint64_t)v6)) & ~v16);
  if (v22 <= 8) {
    unint64_t v22 = 8;
  }
  unint64_t v23 = v22 + v18;
  if (v21 <= v23 + 1) {
    unint64_t v21 = v23 + 1;
  }
  if (v21 <= 8) {
    uint64_t v24 = 8;
  }
  else {
    uint64_t v24 = v21;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_37;
  }
  uint64_t v25 = v24 + 1;
  char v26 = 8 * (v24 + 1);
  if ((v24 + 1) <= 3)
  {
    unsigned int v29 = ((a2 + ~(-1 << v26) - 252) >> v26) + 1;
    if (HIWORD(v29))
    {
      int v27 = *(_DWORD *)((char *)a1 + v25);
      if (!v27) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v29 > 0xFF)
    {
      int v27 = *(unsigned __int16 *)((char *)a1 + v25);
      if (!*(unsigned __int16 *)((char *)a1 + v25)) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v29 < 2)
    {
LABEL_37:
      unsigned int v31 = *((unsigned __int8 *)a1 + v24);
      if (v31 >= 4) {
        return (v31 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v27 = *((unsigned __int8 *)a1 + v25);
  if (!*((unsigned char *)a1 + v25)) {
    goto LABEL_37;
  }
LABEL_29:
  int v30 = (v27 - 1) << v26;
  if (v25 > 3) {
    int v30 = 0;
  }
  if (v25)
  {
    if (v25 > 3) {
      LODWORD(v25) = 4;
    }
    switch((int)v25)
    {
      case 2:
        LODWORD(v25) = *a1;
        break;
      case 3:
        LODWORD(v25) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v25) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v25) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v25 | v30) + 253;
}

void sub_24E5B7668(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v4 = *(void *)(a4[4] - 8);
  unint64_t v35 = (((*(void *)(*(void *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80))
       + *(void *)(*(void *)(a4[3] - 8) + 64)
       + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  int v32 = *(_DWORD *)(v4 + 84);
  uint64_t v34 = *(void *)(v4 + 64);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v31 = *(_DWORD *)(v5 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  int v8 = 0;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  unsigned int v11 = *(_DWORD *)(v5 + 84);
  if (*(_DWORD *)(v6 + 84) > v11) {
    unsigned int v11 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v14 = v9 + 80;
  int v12 = *(_DWORD *)(v9 + 80);
  int v13 = *(_DWORD *)(v14 + 4);
  int v15 = v13 - 1;
  if (!v13) {
    int v15 = 0;
  }
  BOOL v16 = v13 == 0;
  uint64_t v17 = *(void *)(v10 + 64);
  if (v16) {
    ++v17;
  }
  uint64_t v18 = v12;
  uint64_t v19 = ((v7 | v31) | v12) & 0xF8 | 7u;
  uint64_t v20 = (v19 + 8) & ~v19;
  int v21 = v15 | v11;
  uint64_t v22 = v34;
  if (!v32) {
    uint64_t v22 = v34 + 1;
  }
  BOOL v16 = v21 == 0;
  unint64_t v23 = v22 + v35;
  if (v16) {
    ++v17;
  }
  unint64_t v24 = v17
      + ((*(void *)(v6 + 64)
        + v18
        + ((*(void *)(v5 + 64) + v7) & ~(unint64_t)v7)) & ~v18);
  if (v24 <= 8) {
    unint64_t v24 = 8;
  }
  unint64_t v25 = v24 + v20;
  if (v23 <= v25 + 1) {
    unint64_t v23 = v25 + 1;
  }
  if (v23 <= 8) {
    unint64_t v23 = 8;
  }
  size_t v26 = v23 + 1;
  if (a3 >= 0xFD)
  {
    if (v26 <= 3)
    {
      unsigned int v27 = ((a3 + ~(-1 << (8 * v26)) - 252) >> (8 * v26)) + 1;
      if (HIWORD(v27))
      {
        int v8 = 4;
      }
      else if (v27 >= 0x100)
      {
        int v8 = 2;
      }
      else
      {
        int v8 = v27 > 1;
      }
    }
    else
    {
      int v8 = 1;
    }
  }
  if (a2 > 0xFC)
  {
    unsigned int v28 = a2 - 253;
    if (v26 < 4)
    {
      int v29 = (v28 >> (8 * v26)) + 1;
      if (v23 != -1)
      {
        int v30 = v28 & ~(-1 << (8 * v26));
        bzero(a1, v26);
        if (v26 == 3)
        {
          *(_WORD *)a1 = v30;
          a1[2] = BYTE2(v30);
        }
        else if (v26 == 2)
        {
          *(_WORD *)a1 = v30;
        }
        else
        {
          *a1 = v30;
        }
      }
    }
    else
    {
      bzero(a1, v23 + 1);
      *(_DWORD *)a1 = v28;
      int v29 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v26] = v29;
        break;
      case 2:
        *(_WORD *)&a1[v26] = v29;
        break;
      case 3:
LABEL_47:
        __break(1u);
        JUMPOUT(0x24E5B7AD8);
      case 4:
        *(_DWORD *)&a1[v26] = v29;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v26] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_37;
      case 2:
        *(_WORD *)&a1[v26] = 0;
        goto LABEL_36;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)&a1[v26] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_37;
      default:
LABEL_36:
        if (a2) {
LABEL_37:
        }
          a1[v23] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24E5B7B00(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = *(void *)(a2[4] - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  if (!*(_DWORD *)(v2 + 84)) {
    ++v3;
  }
  unint64_t v23 = v3
      + ((((*(void *)(*(void *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80))
        + *(void *)(*(void *)(a2[3] - 8) + 64)
        + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  int v8 = *(_DWORD *)(v6 + 80) | v5;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(_DWORD *)(v9 + 80);
  uint64_t v12 = (v8 | *(_DWORD *)(v9 + 80)) & 0xF8 | 7u;
  uint64_t v13 = (v12 + 8) & ~v12;
  unsigned int v14 = *(_DWORD *)(v4 + 84);
  if (*(_DWORD *)(v6 + 84) > v14) {
    unsigned int v14 = *(_DWORD *)(v6 + 84);
  }
  int v15 = v10 - 1;
  if (!v10) {
    int v15 = 0;
  }
  uint64_t v16 = *(void *)(v9 + 64);
  if (!v10) {
    ++v16;
  }
  if (!(v15 | v14)) {
    ++v16;
  }
  unint64_t v17 = v16 + ((*(void *)(v6 + 64) + v11 + ((*(void *)(v4 + 64) + v7) & ~v7)) & ~v11);
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  unint64_t v18 = v17 + v13;
  if (v23 <= v18 + 1) {
    unint64_t v19 = v18 + 1;
  }
  else {
    unint64_t v19 = v23;
  }
  if (v19 <= 8) {
    unint64_t v19 = 8;
  }
  uint64_t result = a1[v19];
  if (result >= 4)
  {
    if (v19 <= 3) {
      uint64_t v21 = v19;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *a1;
        if (v19 < 4) {
          goto LABEL_28;
        }
        goto LABEL_30;
      case 2:
        int v22 = *(unsigned __int16 *)a1;
        if (v19 >= 4) {
          goto LABEL_30;
        }
        goto LABEL_28;
      case 3:
        int v22 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v19 < 4) {
          goto LABEL_28;
        }
        goto LABEL_30;
      case 4:
        int v22 = *(_DWORD *)a1;
        if (v19 < 4) {
LABEL_28:
        }
          uint64_t result = (v22 | ((result - 4) << (8 * v19))) + 4;
        else {
LABEL_30:
        }
          uint64_t result = (v22 + 4);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24E5B7E7C(unsigned char *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v4;
  }
  unint64_t v25 = v4
      + ((((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
        + *(void *)(*(void *)(a3[3] - 8) + 64)
        + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(_DWORD *)(v7 + 80);
  int v9 = *(_DWORD *)(v7 + 80) | v6;
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  uint64_t v13 = (v9 | *(_DWORD *)(v10 + 80)) & 0xF8 | 7u;
  uint64_t v14 = (v13 + 8) & ~v13;
  unsigned int v15 = *(_DWORD *)(v5 + 84);
  if (*(_DWORD *)(v7 + 84) > v15) {
    unsigned int v15 = *(_DWORD *)(v7 + 84);
  }
  int v16 = v11 - 1;
  if (!v11) {
    int v16 = 0;
  }
  uint64_t v17 = *(void *)(v10 + 64);
  if (!v11) {
    ++v17;
  }
  if (!(v16 | v15)) {
    ++v17;
  }
  unint64_t v18 = v17 + ((*(void *)(v7 + 64) + v12 + ((*(void *)(v5 + 64) + v8) & ~v8)) & ~v12);
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  unint64_t v19 = v18 + v14;
  if (v25 <= v19 + 1) {
    unint64_t v20 = v19 + 1;
  }
  else {
    unint64_t v20 = v25;
  }
  if (v20 <= 8) {
    size_t v21 = 8;
  }
  else {
    size_t v21 = v20;
  }
  if (a2 > 3)
  {
    unsigned int v22 = ((a2 - 4) >> (8 * v21)) + 4;
    if (v21 <= 3)
    {
      int v23 = (a2 - 4) & ~(-1 << (8 * v21));
    }
    else
    {
      LOBYTE(v22) = 4;
      int v23 = a2 - 4;
    }
    a1[v21] = v22;
    if (v21 >= 4) {
      int v24 = 4;
    }
    else {
      int v24 = v21;
    }
    bzero(a1, v21);
    switch(v24)
    {
      case 2:
        *(_WORD *)a1 = v23;
        break;
      case 3:
        *(_WORD *)a1 = v23;
        a1[2] = BYTE2(v23);
        break;
      case 4:
        *(_DWORD *)a1 = v23;
        break;
      default:
        *a1 = v23;
        break;
    }
  }
  else
  {
    a1[v21] = a2;
  }
}

uint64_t sub_24E5B8214()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_24E5B8250(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_24E5B8288(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_24E5B82E8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlatterWithIcon.Style.Border(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlatterWithIcon.Style.Border(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unint64_t sub_24E5B83B0(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24E5B8404(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *sub_24E5B8458(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_retain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_24E5B8514(void *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(void *)a2;
  swift_release();
  a1[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5StateOwet_0(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t _s5StateOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_24E5B8630(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_24E5B8648(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *unint64_t result = v2;
  return result;
}

uint64_t *sub_24E5B8668(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_24E5B86A8(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

id sub_24E5B86A8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 == 1) {
    return (id)(a2 & 0x3FFFFFFFFFFFFFFFLL);
  }
  return result;
}

void sub_24E5B86C0(uint64_t a1)
{
}

void sub_24E5B86CC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 == 1) {
}
  }

uint64_t *sub_24E5B86E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_24E5B86A8(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_24E5B86CC(v5, v6);
  return a1;
}

uint64_t *sub_24E5B872C(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_24E5B86CC(v3, v4);
  return a1;
}

uint64_t sub_24E5B8768(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 32766);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 49) >> 13) | (4
                                                           * ((*(void *)(a1 + 8) >> 49) & 0x1800 | ((*(void *)(a1 + 8) & 7) << 8) | HIBYTE(*(void *)a1) & 0xF0 | *(void *)a1 & 0xF))) ^ 0x7FFF;
  if (v3 >= 0x7FFD) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_24E5B87E0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFD)
  {
    *(void *)id result = a2 - 32766;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 2) & 0x1FFF | ((-a2 & 0x7FFF) << 13);
      *(void *)id result = (v3 | (v3 << 56)) & 0xF00000000000000FLL;
      *(void *)(result + 8) = ((v3 >> 8) | (v3 << 49)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_24E5B884C(void *a1)
{
  uint64_t v1 = a1[1] >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 4) + 2;
  }
}

uint64_t sub_24E5B8868(uint64_t result)
{
  *(void *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_24E5B8878(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *result &= 0xFFFFFFFFFFFFFF0uLL;
    result[1] = v2;
  }
  else
  {
    *id result = 16 * (a2 - 2);
    result[1] = 0x8000000000000000;
  }
  return result;
}

void *sub_24E5B88A8(void *a1, void *a2, uint64_t a3)
{
  return sub_24E5BD488(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_24E5B88C0);
}

unint64_t sub_24E5B88C0(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_24E5B8920(unint64_t *a1)
{
  return sub_24E5B8944(*a1);
}

unint64_t sub_24E5B8944(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *sub_24E5B89A4(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_24E5B88C0(*a2);
  unint64_t v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_24E5B8944(v6);
  return a1;
}

unint64_t *sub_24E5B89FC(unint64_t *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_24E5B8944(v4);
  return a1;
}

uint64_t sub_24E5B8A4C()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_24E5B8AF8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  size_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  if (v6 <= 7 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0 && v7 <= 0x18)
  {
    uint64_t v11 = AssociatedTypeWitness;
    uint64_t v12 = ~v6;
    if ((*(_DWORD *)(v5 + 84) & 0x80000000) != 0)
    {
      if ((*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)a2 + v6 + 8) & v12))
      {
LABEL_14:
        memcpy(a1, a2, v7);
        return a1;
      }
    }
    else
    {
      uint64_t v13 = *a2;
      if ((unint64_t)*a2 >= 0xFFFFFFFF) {
        LODWORD(v13) = -1;
      }
      if (v13 != -1) {
        goto LABEL_14;
      }
    }
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & v12, ((unint64_t)a2 + v6 + 8) & v12, v11);
    return a1;
  }
  uint64_t v10 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  swift_retain();
  return a1;
}

uint64_t sub_24E5B8C7C(uint64_t *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = ~v4;
  uint64_t v9 = v3;
  if ((*(_DWORD *)(v3 + 84) & 0x80000000) != 0)
  {
    uint64_t result = (*(uint64_t (**)(unint64_t))(v3 + 48))(((unint64_t)a1 + v4 + 8) & v5);
    if (result) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v6 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v6) = -1;
  }
  uint64_t result = (v6 + 1);
  if (v6 == -1)
  {
LABEL_7:
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(((unint64_t)a1 + v4 + 8) & v5, AssociatedTypeWitness);
  }
  return result;
}

uint64_t *sub_24E5B8D94(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  if ((*(_DWORD *)(v5 + 84) & 0x80000000) == 0)
  {
    uint64_t v9 = *a2;
    if ((unint64_t)*a2 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    if (v9 != -1) {
      goto LABEL_5;
    }
LABEL_7:
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & v7, ((unint64_t)a2 + v6 + 8) & v7, AssociatedTypeWitness);
    return a1;
  }
  if (!(*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)a2 + v6 + 8) & v7)) {
    goto LABEL_7;
  }
LABEL_5:
  memcpy(a1, a2, ((v6 + 8) & ~v6) + v8);
  return a1;
}

void *sub_24E5B8EDC(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ~v7;
  size_t v9 = ((v7 + 8) & ~v7) + *(void *)(v5 + 64);
  if ((v6 & 0x80000000) != 0)
  {
    uint64_t v15 = ((v7 + 8) & ~v7) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    uint64_t v12 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
    int v13 = v12(((unint64_t)a1 + v7 + 8) & v8, v6, AssociatedTypeWitness);
    int v11 = v12(((unint64_t)a2 + v7 + 8) & v8, v6, AssociatedTypeWitness);
    size_t v9 = v15;
    if (!v13)
    {
LABEL_5:
      if (!v11)
      {
        *a1 = *a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
        return a1;
      }
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)a1 + v7 + 8) & v8, AssociatedTypeWitness);
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v10 = *a2;
    if (*a2 >= 0xFFFFFFFFuLL) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 + 1;
    if (*a1 > 0xFFFFFFFEuLL) {
      goto LABEL_5;
    }
  }
  if (!v11)
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
    return a1;
  }
LABEL_9:
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t *sub_24E5B90D8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  if ((*(_DWORD *)(v5 + 84) & 0x80000000) == 0)
  {
    uint64_t v9 = *a2;
    if ((unint64_t)*a2 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    if (v9 != -1) {
      goto LABEL_5;
    }
LABEL_7:
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v7, ((unint64_t)a2 + v6 + 8) & v7, AssociatedTypeWitness);
    return a1;
  }
  if (!(*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)a2 + v6 + 8) & v7)) {
    goto LABEL_7;
  }
LABEL_5:
  memcpy(a1, a2, ((v6 + 8) & ~v6) + v8);
  return a1;
}

void *sub_24E5B9220(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ~v7;
  size_t v9 = ((v7 + 8) & ~v7) + *(void *)(v5 + 64);
  if ((v6 & 0x80000000) != 0)
  {
    uint64_t v15 = ((v7 + 8) & ~v7) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    uint64_t v12 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
    int v13 = v12(((unint64_t)a1 + v7 + 8) & v8, v6, AssociatedTypeWitness);
    int v11 = v12(((unint64_t)a2 + v7 + 8) & v8, v6, AssociatedTypeWitness);
    size_t v9 = v15;
    if (!v13)
    {
LABEL_5:
      if (!v11)
      {
        *a1 = *a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
        return a1;
      }
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)a1 + v7 + 8) & v8, AssociatedTypeWitness);
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v10 = *a2;
    if (*a2 >= 0xFFFFFFFFuLL) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 + 1;
    if (*a1 > 0xFFFFFFFEuLL) {
      goto LABEL_5;
    }
  }
  if (!v11)
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
    return a1;
  }
LABEL_9:
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_24E5B941C(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v4;
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  if (v6 <= 0x7FFFFFFF) {
    int v7 = 0x7FFFFFFF;
  }
  else {
    int v7 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (v7 - 1 >= a2) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v8 + 8) & ~v8) + v9;
  char v11 = 8 * v10;
  if (v10 > 3) {
    goto LABEL_7;
  }
  unsigned int v14 = (((1 << v11) + a2 - v7) >> v11) + 1;
  if (HIWORD(v14))
  {
    int v12 = *(_DWORD *)((char *)a1 + v10);
    if (v12) {
      goto LABEL_15;
    }
LABEL_23:
    if ((v6 & 0x80000000) != 0)
    {
      unsigned int v17 = (*(uint64_t (**)(unint64_t))(v5 + 48))(((unint64_t)a1 + v8 + 8) & ~v8);
    }
    else
    {
      uint64_t v16 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v16) = -1;
      }
      unsigned int v17 = v16 + 1;
    }
    if (v17 >= 2) {
      return v17 - 1;
    }
    else {
      return 0;
    }
  }
  if (v14 > 0xFF)
  {
    int v12 = *(unsigned __int16 *)((char *)a1 + v10);
    if (*(unsigned __int16 *)((char *)a1 + v10)) {
      goto LABEL_15;
    }
    goto LABEL_23;
  }
  if (v14 < 2) {
    goto LABEL_23;
  }
LABEL_7:
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v10 | v15) + v7;
}

void sub_24E5B9608(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v10 = v9 - 1;
  size_t v11 = ((v8 + 8) & ~v8) + *(void *)(v6 + 64);
  if (v9 - 1 >= a3)
  {
    int v12 = 0;
LABEL_13:
    if (v10 >= a2) {
      goto LABEL_21;
    }
    goto LABEL_14;
  }
  int v12 = 1;
  if (v11 > 3) {
    goto LABEL_13;
  }
  unsigned int v13 = (((1 << (8 * v11)) + a3 - v9) >> (8 * v11)) + 1;
  if (HIWORD(v13))
  {
    int v12 = 4;
    if (v10 >= a2) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v13 >= 0x100) {
      int v12 = 2;
    }
    else {
      int v12 = v13 > 1;
    }
    if (v10 >= a2)
    {
LABEL_21:
      switch(v12)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 3:
          goto LABEL_57;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_25;
        default:
LABEL_25:
          if (a2)
          {
LABEL_26:
            if (a2 + 1 <= v9)
            {
              if (a2 != -1)
              {
                if ((v7 & 0x80000000) != 0)
                {
                  size_t v21 = *(void (**)(unint64_t))(v6 + 56);
                  v21((unint64_t)&a1[v8 + 8] & ~v8);
                }
                else
                {
                  if (((a2 + 1) & 0x80000000) != 0) {
                    uint64_t v20 = a2 - 0x7FFFFFFF;
                  }
                  else {
                    uint64_t v20 = a2;
                  }
                  *(void *)a1 = v20;
                }
              }
            }
            else
            {
              if (v11 <= 3) {
                int v17 = ~(-1 << (8 * v11));
              }
              else {
                int v17 = -1;
              }
              if (v11)
              {
                int v18 = v17 & (a2 - v9);
                if (v11 <= 3) {
                  int v19 = v11;
                }
                else {
                  int v19 = 4;
                }
                bzero(a1, v11);
                switch(v19)
                {
                  case 2:
                    *(_WORD *)a1 = v18;
                    break;
                  case 3:
                    *(_WORD *)a1 = v18;
                    a1[2] = BYTE2(v18);
                    break;
                  case 4:
                    *(_DWORD *)a1 = v18;
                    break;
                  default:
                    *a1 = v18;
                    break;
                }
              }
            }
          }
          break;
      }
      return;
    }
  }
LABEL_14:
  unsigned int v14 = a2 - v9;
  if (v11 < 4)
  {
    int v15 = (v14 >> (8 * v11)) + 1;
    if (v11)
    {
      int v16 = v14 & ~(-1 << (8 * v11));
      bzero(a1, v11);
      if (v11 == 3)
      {
        *(_WORD *)a1 = v16;
        a1[2] = BYTE2(v16);
      }
      else if (v11 == 2)
      {
        *(_WORD *)a1 = v16;
      }
      else
      {
        *a1 = v16;
      }
    }
  }
  else
  {
    bzero(a1, v11);
    *(_DWORD *)a1 = v14;
    int v15 = 1;
  }
  switch(v12)
  {
    case 1:
      a1[v11] = v15;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v15;
      break;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x24E5B9924);
    case 4:
      *(_DWORD *)&a1[v11] = v15;
      break;
    default:
      return;
  }
}

uint64_t sub_24E5B995C(uint64_t *a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if ((*(_DWORD *)(v2 + 84) & 0x80000000) != 0)
  {
    uint64_t v5 = *(uint64_t (**)(unint64_t))(v2 + 48);
    unint64_t v6 = ((unint64_t)a1 + *(unsigned __int8 *)(v2 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    return v5(v6);
  }
  else
  {
    uint64_t v3 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v3) = -1;
    }
    return (v3 + 1);
  }
}

void sub_24E5B9A24(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v6 = 0x7FFFFFFF;
  }
  else {
    unsigned int v6 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v7 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = ~v7;
  if (v6 >= a2)
  {
    if (a2)
    {
      if ((v5 & 0x80000000) != 0)
      {
        int v15 = *(void (**)(unint64_t, uint64_t))(v4 + 56);
        v15((unint64_t)&a1[v7 + 8] & v8, a2);
      }
      else
      {
        if ((a2 & 0x80000000) != 0) {
          uint64_t v14 = a2 ^ 0x80000000;
        }
        else {
          uint64_t v14 = (a2 - 1);
        }
        *(void *)a1 = v14;
      }
    }
  }
  else
  {
    size_t v9 = ((v7 + 8) & v8) + *(_DWORD *)(v4 + 64);
    int v10 = -1 << (8 * (((v7 + 8) & v8) + *(unsigned char *)(v4 + 64)));
    if (v9 <= 3) {
      int v11 = ~v10;
    }
    else {
      int v11 = -1;
    }
    if (v9)
    {
      int v12 = v11 & (~v6 + a2);
      if (v9 <= 3) {
        int v13 = v9;
      }
      else {
        int v13 = 4;
      }
      bzero(a1, v9);
      switch(v13)
      {
        case 2:
          *(_WORD *)a1 = v12;
          break;
        case 3:
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
          break;
        case 4:
          *(_DWORD *)a1 = v12;
          break;
        default:
          *a1 = v12;
          break;
      }
    }
  }
}

uint64_t sub_24E5B9BBC(int a1, id a2, unint64_t a3)
{
  if (a3 >> 62)
  {
    if (a3 >> 62 != 1) {
      return result;
    }
    id v3 = a2;
  }
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_24E5B9C2C(uint64_t a1)
{
  return sub_24E5ABAF4(*(void *)a1, *(id *)(a1 + 8), *(void *)(a1 + 16));
}

void *sub_24E5B9C3C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = (void *)a2[1];
  unint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_24E5B9BBC(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *sub_24E5B9C94(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = (void *)a2[1];
  unint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_24E5B9BBC(*a2, v4, v5);
  uint64_t v7 = *a1;
  uint64_t v8 = (void *)a1[1];
  unint64_t v9 = a1[2];
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_24E5ABAF4(v7, v8, v9);
  return a1;
}

void *sub_24E5B9CF8(void *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v5 = (void *)a1[1];
  unint64_t v4 = a1[2];
  long long v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v6;
  sub_24E5ABAF4(v3, v5, v4);
  return a1;
}

uint64_t sub_24E5B9D38(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFE && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 16382);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 50) >> 12) | (4
                                                            * ((*(void *)(a1 + 16) >> 50) & 0xC00 | ((*(void *)(a1 + 16) & 7) << 7) | (*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFD) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_24E5B9DB4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 16382;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
      *(void *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_24E5B9E28(void *a1)
{
  uint64_t v1 = a1[2] >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

uint64_t sub_24E5B9E48(uint64_t result)
{
  *(void *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_24E5B9E58(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *(void *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *(void *)result &= 0xFFFFFFFFFFFFFF8uLL;
    *(void *)(result + 16) = v2;
  }
  else
  {
    *(void *)uint64_t result = 8 * (a2 - 2);
    *(_OWORD *)(result + 8) = xmmword_24E8673F0;
    *(void *)(result + 24) = 0;
  }
  return result;
}

uint64_t sub_24E5B9E9C()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = swift_checkMetadataState();
    if (v3 > 0x3F) {
      return v2;
    }
    uint64_t v2 = sub_24E864388();
    if (v4 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout3();
      unint64_t v9 = &v8;
      swift_getAssociatedTypeWitness();
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2698F30B0);
      uint64_t v5 = sub_24E864AA8();
      uint64_t v0 = v5;
      if (v6 <= 0x3F)
      {
        uint64_t v10 = *(void *)(v5 - 8) + 64;
        int v11 = &unk_24E867728;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v0;
}

char *sub_24E5BA05C(char *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v54 = a3[3];
  uint64_t v53 = *(void *)(v54 - 8);
  int v6 = *(_DWORD *)(v53 + 80);
  uint64_t v51 = *(void *)(v5 + 64) + v6;
  uint64_t v55 = a3[4];
  uint64_t v7 = *(void *)(v55 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v52 = *(void *)(v53 + 64);
  size_t v10 = *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v10;
  }
  size_t __n = v10;
  unint64_t v11 = v10
      + ((v52 + v8 + (v51 & ~(unint64_t)v6)) & ~(unint64_t)v8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v13 + 64) <= 8uLL) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v14 + 1 > v11) {
    unint64_t v15 = v14 + 1;
  }
  else {
    unint64_t v15 = v11;
  }
  if (v15 <= 8) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = v15;
  }
  if (v16 > 3) {
    goto LABEL_16;
  }
  unsigned int v17 = ((1 << (8 * v16)) + 1) >> (8 * v16);
  uint64_t v18 = 2;
  if (v17 > 0xFFFC) {
    uint64_t v18 = 4;
  }
  if (v17 <= 0xFC) {
LABEL_16:
  }
    uint64_t v18 = 1;
  unint64_t v19 = v18 + v16;
  int v20 = *(_DWORD *)(v5 + 80) | v6 | v8 | *(_DWORD *)(v13 + 80);
  if (v19 > 0x18 || (v20 & 0x1000F8) != 0)
  {
    unsigned int v22 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    int v23 = &v22[((v20 & 0xF8 | 7u) + 16) & ~(unint64_t)(v20 & 0xF8 | 7u)];
    swift_retain();
    return v23;
  }
  if (v16 <= 3)
  {
    unsigned int v24 = ((1 << (8 * v16)) + 1) >> (8 * v16);
    if (v24 > 0xFFFC)
    {
      unsigned int v25 = *(_DWORD *)&a2[v16];
      unsigned int v26 = v25 - 3;
      if (v25 < 3) {
        goto LABEL_33;
      }
    }
    else
    {
      if (v24 <= 0xFC) {
        goto LABEL_25;
      }
      unsigned int v25 = *(unsigned __int16 *)&a2[v16];
      unsigned int v26 = v25 - 3;
      if (v25 < 3) {
        goto LABEL_33;
      }
    }
LABEL_26:
    if (v16 <= 3) {
      uint64_t v27 = v16;
    }
    else {
      uint64_t v27 = 4;
    }
    int v23 = a1;
    switch(v27)
    {
      case 1:
        int v28 = *a2;
        if (v16 >= 4) {
          goto LABEL_56;
        }
        goto LABEL_55;
      case 2:
        int v28 = *(unsigned __int16 *)a2;
        if (v16 < 4) {
          goto LABEL_55;
        }
        goto LABEL_56;
      case 3:
        int v28 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v16 >= 4) {
          goto LABEL_56;
        }
        goto LABEL_55;
      case 4:
        int v28 = *(_DWORD *)a2;
        if (v16 < 4) {
LABEL_55:
        }
          v28 |= v26 << (8 * v16);
LABEL_56:
        unsigned int v25 = v28 + 3;
        if (v25 == 2) {
          goto LABEL_57;
        }
        goto LABEL_35;
      default:
        goto LABEL_34;
    }
  }
LABEL_25:
  unsigned int v25 = a2[v16];
  unsigned int v26 = v25 - 3;
  if (v25 >= 3) {
    goto LABEL_26;
  }
LABEL_33:
  int v23 = a1;
LABEL_34:
  if (v25 == 2)
  {
LABEL_57:
    uint64_t v40 = *(void *)a2;
    id v41 = *(id *)a2;
    *(void *)int v23 = v40;
    if (v16 <= 3)
    {
      unsigned int v42 = ((1 << (8 * v16)) + 1) >> (8 * v16);
      if (v42 > 0xFFFC)
      {
        int v44 = 2;
        goto LABEL_87;
      }
      if (v42 > 0xFC)
      {
        *(_WORD *)&v23[v16] = 2;
        return v23;
      }
    }
    v23[v16] = 2;
    return v23;
  }
LABEL_35:
  if (v25 == 1)
  {
    unsigned int v34 = a2[v14];
    unsigned int v35 = v34 - 2;
    if (v34 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v36 = v14;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *a2;
          break;
        case 2:
          int v37 = *(unsigned __int16 *)a2;
          break;
        case 3:
          int v37 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          break;
        case 4:
          int v37 = *(_DWORD *)a2;
          break;
        default:
          goto LABEL_78;
      }
      if (v14 < 4)
      {
        if ((v37 | (v35 << (8 * v14))) == 0xFFFFFFFF) {
          goto LABEL_79;
        }
        goto LABEL_81;
      }
      unsigned int v34 = v37 + 2;
    }
LABEL_78:
    if (v34 == 1)
    {
LABEL_79:
      id v45 = *(id *)a2;
      id v46 = *(id *)a2;
      *(void *)int v23 = v45;
      char v47 = 1;
LABEL_82:
      v23[v14] = v47;
      if (v16 > 3)
      {
LABEL_83:
        v23[v16] = 1;
        return v23;
      }
      int v44 = 1;
      unsigned int v48 = ((1 << (8 * v16)) + 1) >> (8 * v16);
      if (v48 <= 0xFFFC)
      {
        if (v48 > 0xFC)
        {
          *(_WORD *)&v23[v16] = 1;
          return v23;
        }
        goto LABEL_83;
      }
LABEL_87:
      *(_DWORD *)&v23[v16] = v44;
      return v23;
    }
LABEL_81:
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(v13 + 16))(v23, a2, AssociatedTypeWitness);
    char v47 = 0;
    goto LABEL_82;
  }
  if (!v25)
  {
    unint64_t v29 = ~(unint64_t)v6;
    uint64_t v30 = ~v9;
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16))(v23, a2, v4);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v53 + 16))((unint64_t)&v23[v51] & v29, (unint64_t)&a2[v51] & v29, v54);
    uint64_t v31 = v52 + v9;
    int v32 = (void *)((((unint64_t)&v23[v51] & v29) + v52 + v9) & ~v9);
    int v33 = (const void *)((((unint64_t)&a2[v51] & v29) + v31) & v30);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v33, 1, v55))
    {
      memcpy(v32, v33, __n);
      if (v16 > 3) {
        goto LABEL_68;
      }
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v32, v33, v55);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v32, 0, 1, v55);
      if (v16 > 3)
      {
LABEL_68:
        v23[v16] = 0;
        return v23;
      }
    }
    unsigned int v43 = ((1 << (8 * v16)) + 1) >> (8 * v16);
    if (v43 > 0xFFFC)
    {
      *(_DWORD *)&v23[v16] = 0;
      return v23;
    }
    if (v43 > 0xFC)
    {
      *(_WORD *)&v23[v16] = 0;
      return v23;
    }
    goto LABEL_68;
  }
  if (v16 > 3) {
    goto LABEL_50;
  }
  unsigned int v38 = ((1 << (8 * v16)) + 1) >> (8 * v16);
  uint64_t v39 = 2;
  if (v38 > 0xFFFC) {
    uint64_t v39 = 4;
  }
  if (v38 <= 0xFC) {
LABEL_50:
  }
    uint64_t v39 = 1;
  memcpy(v23, a2, v39 + v16);
  return v23;
}

void sub_24E5BA6E8(unsigned __int8 *a1, void *a2)
{
  uint64_t v4 = a2[2];
  uint64_t v3 = a2[3];
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v36 + 64);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 + v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = a2[4];
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v9 + v12 + ((v5 + v7) & ~v7)) & ~v12;
  uint64_t v37 = v11;
  uint64_t v14 = *(void *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84)) {
    ++v14;
  }
  unint64_t v15 = v14 + v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = 8;
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  if (v18 + 1 > v15) {
    unint64_t v20 = v18 + 1;
  }
  else {
    unint64_t v20 = v15;
  }
  if (v20 > 8) {
    uint64_t v19 = v20;
  }
  if (v19 > 3) {
    goto LABEL_13;
  }
  unsigned int v21 = ((1 << (8 * v19)) + 1) >> (8 * v19);
  if (v21 <= 0xFFFC)
  {
    if (v21 > 0xFC)
    {
      unsigned int v22 = *(unsigned __int16 *)&a1[v19];
      unsigned int v23 = v22 - 3;
      if (v22 < 3) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
LABEL_13:
    unsigned int v22 = a1[v19];
    unsigned int v23 = v22 - 3;
    if (v22 < 3) {
      goto LABEL_28;
    }
LABEL_18:
    if (v19 <= 3) {
      uint64_t v24 = v19;
    }
    else {
      uint64_t v24 = 4;
    }
    switch(v24)
    {
      case 1:
        int v25 = *a1;
        if (v19 < 4) {
          goto LABEL_41;
        }
        goto LABEL_27;
      case 2:
        int v25 = *(unsigned __int16 *)a1;
        if (v19 < 4) {
          goto LABEL_41;
        }
        goto LABEL_27;
      case 3:
        int v25 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v19 < 4) {
          goto LABEL_41;
        }
        goto LABEL_27;
      case 4:
        int v25 = *(_DWORD *)a1;
        if (v19 >= 4)
        {
LABEL_27:
          unsigned int v22 = v25 + 3;
          goto LABEL_28;
        }
LABEL_41:
        int v32 = v25 | (v23 << (8 * v19));
        unsigned int v22 = v32 + 3;
        if (v32 == -1) {
          goto LABEL_51;
        }
        goto LABEL_29;
      default:
        goto LABEL_28;
    }
  }
  unsigned int v22 = *(_DWORD *)&a1[v19];
  unsigned int v23 = v22 - 3;
  if (v22 >= 3) {
    goto LABEL_18;
  }
LABEL_28:
  if (v22 != 2)
  {
LABEL_29:
    if (v22 != 1)
    {
      if (!v22)
      {
        (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v36 + 8))(a1, v4, v17);
        unint64_t v26 = (unint64_t)&a1[v8] & ~v7;
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v26, v3);
        unint64_t v27 = (v26 + v9 + v12) & ~v12;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v37 + 48))(v27, 1, v10))
        {
          int v33 = *(void (**)(unint64_t, uint64_t))(v37 + 8);
          v33(v27, v10);
        }
      }
      return;
    }
    unsigned int v28 = a1[v18];
    unsigned int v29 = v28 - 2;
    if (v28 >= 2)
    {
      if (v18 <= 3) {
        uint64_t v30 = v18;
      }
      else {
        uint64_t v30 = 4;
      }
      switch(v30)
      {
        case 1:
          int v31 = *a1;
          if (v18 >= 4) {
            goto LABEL_55;
          }
          goto LABEL_49;
        case 2:
          int v31 = *(unsigned __int16 *)a1;
          if (v18 >= 4) {
            goto LABEL_55;
          }
          goto LABEL_49;
        case 3:
          int v31 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v18 < 4) {
            goto LABEL_49;
          }
          goto LABEL_55;
        case 4:
          int v31 = *(_DWORD *)a1;
          if (v18 < 4)
          {
LABEL_49:
            unsigned int v28 = (v31 | (v29 << (8 * v18))) + 2;
            break;
          }
LABEL_55:
          if (v31 != -1) {
            goto LABEL_56;
          }
          goto LABEL_51;
        default:
          break;
      }
    }
    if (v28 != 1)
    {
LABEL_56:
      unsigned int v35 = *(void (**)(unsigned __int8 *, uint64_t))(v17 + 8);
      v35(a1, AssociatedTypeWitness);
      return;
    }
  }
LABEL_51:
  unsigned int v34 = *(void **)a1;
}

void *sub_24E5BABA4(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v5 = a3[2];
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v46 + 64);
  uint64_t v48 = a3[3];
  uint64_t v7 = *(void *)(v48 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 + v8;
  uint64_t v49 = a3[4];
  uint64_t v10 = *(void *)(v49 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v47 = *(void *)(v7 + 64);
  uint64_t v12 = (v47 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  size_t v13 = *(void *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84)) {
    ++v13;
  }
  size_t __n = v13;
  unint64_t v14 = v13 + v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 8uLL) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v16 + 1 > v14) {
    unint64_t v17 = v16 + 1;
  }
  else {
    unint64_t v17 = v14;
  }
  if (v17 <= 8) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = v17;
  }
  if (v18 > 3) {
    goto LABEL_15;
  }
  unsigned int v19 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v19 > 0xFFFC)
  {
    unsigned int v20 = *(_DWORD *)&a2[v18];
    unsigned int v21 = v20 - 3;
    if (v20 < 3) {
      goto LABEL_29;
    }
    goto LABEL_20;
  }
  if (v19 > 0xFC)
  {
    unsigned int v20 = *(unsigned __int16 *)&a2[v18];
    unsigned int v21 = v20 - 3;
    if (v20 < 3) {
      goto LABEL_29;
    }
  }
  else
  {
LABEL_15:
    unsigned int v20 = a2[v18];
    unsigned int v21 = v20 - 3;
    if (v20 < 3) {
      goto LABEL_29;
    }
  }
LABEL_20:
  if (v18 <= 3) {
    uint64_t v22 = v18;
  }
  else {
    uint64_t v22 = 4;
  }
  switch(v22)
  {
    case 1:
      int v23 = *a2;
      if (v18 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v23 = *(unsigned __int16 *)a2;
      if (v18 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 3:
      int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v18 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 4:
      int v23 = *(_DWORD *)a2;
      if (v18 < 4) {
LABEL_27:
      }
        v23 |= v21 << (8 * v18);
LABEL_28:
      unsigned int v20 = v23 + 3;
      break;
    default:
      break;
  }
LABEL_29:
  if (v20 == 2)
  {
    int v33 = *(void **)a2;
    id v34 = v33;
    *a1 = v33;
    if (v18 <= 3)
    {
      unsigned int v35 = ((1 << (8 * v18)) + 1) >> (8 * v18);
      if (v35 > 0xFFFC)
      {
        int v39 = 2;
        goto LABEL_78;
      }
      if (v35 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 2;
        return a1;
      }
    }
    *((unsigned char *)a1 + v18) = 2;
    return a1;
  }
  if (v20 == 1)
  {
    unsigned int v29 = a2[v16];
    unsigned int v30 = v29 - 2;
    if (v29 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v31 = v16;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *a2;
          if (v16 >= 4) {
            goto LABEL_71;
          }
          goto LABEL_65;
        case 2:
          int v32 = *(unsigned __int16 *)a2;
          if (v16 < 4) {
            goto LABEL_65;
          }
          goto LABEL_71;
        case 3:
          int v32 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v16 < 4) {
            goto LABEL_65;
          }
          goto LABEL_71;
        case 4:
          int v32 = *(_DWORD *)a2;
          if (v16 < 4)
          {
LABEL_65:
            unsigned int v29 = (v32 | (v30 << (8 * v16))) + 2;
            break;
          }
LABEL_71:
          if (v32 != -1) {
            goto LABEL_72;
          }
          goto LABEL_67;
        default:
          break;
      }
    }
    if (v29 == 1)
    {
LABEL_67:
      uint64_t v40 = *(void **)a2;
      id v41 = v40;
      *a1 = v40;
      char v42 = 1;
    }
    else
    {
LABEL_72:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
      char v42 = 0;
    }
    *((unsigned char *)a1 + v16) = v42;
    if (v18 > 3)
    {
LABEL_74:
      *((unsigned char *)a1 + v18) = 1;
      return a1;
    }
    int v39 = 1;
    unsigned int v43 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    if (v43 <= 0xFFFC)
    {
      if (v43 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 1;
        return a1;
      }
      goto LABEL_74;
    }
LABEL_78:
    *(_DWORD *)((char *)a1 + v18) = v39;
    return a1;
  }
  if (v20)
  {
    if (v18 > 3) {
      goto LABEL_49;
    }
    unsigned int v36 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    uint64_t v37 = 2;
    if (v36 > 0xFFFC) {
      uint64_t v37 = 4;
    }
    if (v36 <= 0xFC) {
LABEL_49:
    }
      uint64_t v37 = 1;
    memcpy(a1, a2, v37 + v18);
  }
  else
  {
    uint64_t v24 = ~v8;
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v46 + 16))(a1, a2, v5);
    unint64_t v25 = ((unint64_t)a1 + v9) & v24;
    unint64_t v26 = (unint64_t)&a2[v9] & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v25, v26, v48);
    unint64_t v27 = (void *)((v25 + v47 + v11) & ~v11);
    unsigned int v28 = (const void *)((v26 + v47 + v11) & ~v11);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v28, 1, v49))
    {
      memcpy(v27, v28, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v27, v28, v49);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v49);
    }
    if (v18 <= 3)
    {
      unsigned int v38 = ((1 << (8 * v18)) + 1) >> (8 * v18);
      if (v38 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v18) = 0;
        return a1;
      }
      if (v38 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 0;
        return a1;
      }
    }
    *((unsigned char *)a1 + v18) = 0;
  }
  return a1;
}

unsigned __int8 *sub_24E5BB1A0(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = a3[2];
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v60 + 64);
  uint64_t v62 = a3[3];
  uint64_t v7 = *(void *)(v62 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v59 = v6 + v8;
  uint64_t v63 = a3[4];
  uint64_t v9 = *(void *)(v63 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v61 = *(void *)(v7 + 64);
  uint64_t v11 = (v61 + v10 + ((v6 + v8) & ~v8)) & ~v10;
  size_t v12 = *(void *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v12;
  }
  size_t __n = v12;
  unint64_t v13 = v12 + v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v56 = AssociatedTypeWitness;
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v57 + 64) <= 8uLL) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v15 + 1 > v13) {
    unint64_t v16 = v15 + 1;
  }
  else {
    unint64_t v16 = v13;
  }
  if (v16 <= 8) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = v16;
  }
  if (v17 > 3) {
    goto LABEL_16;
  }
  unsigned int v18 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  if (v18 > 0xFFFC)
  {
    unsigned int v19 = *(_DWORD *)&a1[v17];
    unsigned int v20 = v19 - 3;
    if (v19 < 3) {
      goto LABEL_30;
    }
    goto LABEL_21;
  }
  if (v18 > 0xFC)
  {
    unsigned int v19 = *(unsigned __int16 *)&a1[v17];
    unsigned int v20 = v19 - 3;
    if (v19 < 3) {
      goto LABEL_30;
    }
  }
  else
  {
LABEL_16:
    unsigned int v19 = a1[v17];
    unsigned int v20 = v19 - 3;
    if (v19 < 3) {
      goto LABEL_30;
    }
  }
LABEL_21:
  if (v17 <= 3) {
    uint64_t v21 = v17;
  }
  else {
    uint64_t v21 = 4;
  }
  switch(v21)
  {
    case 1:
      int v22 = *a1;
      if (v17 < 4) {
        goto LABEL_28;
      }
      goto LABEL_29;
    case 2:
      int v22 = *(unsigned __int16 *)a1;
      if (v17 < 4) {
        goto LABEL_28;
      }
      goto LABEL_29;
    case 3:
      int v22 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      if (v17 >= 4) {
        goto LABEL_29;
      }
      goto LABEL_28;
    case 4:
      int v22 = *(_DWORD *)a1;
      if (v17 < 4) {
LABEL_28:
      }
        v22 |= v20 << (8 * v17);
LABEL_29:
      unsigned int v19 = v22 + 3;
      break;
    default:
      break;
  }
LABEL_30:
  uint64_t v23 = ~v8;
  uint64_t v58 = ~v10;
  switch(v19)
  {
    case 2u:
      goto LABEL_53;
    case 1u:
      unsigned int v25 = a1[v15];
      unsigned int v26 = v25 - 2;
      if (v25 >= 2)
      {
        if (v15 <= 3) {
          uint64_t v27 = v15;
        }
        else {
          uint64_t v27 = 4;
        }
        switch(v27)
        {
          case 1:
            int v28 = *a1;
            break;
          case 2:
            int v28 = *(unsigned __int16 *)a1;
            break;
          case 3:
            int v28 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            break;
          case 4:
            int v28 = *(_DWORD *)a1;
            break;
          default:
            goto LABEL_52;
        }
        if (v15 < 4)
        {
          if ((v28 | (v26 << (8 * v15))) == 0xFFFFFFFF)
          {
LABEL_53:

            if (v17 > 3) {
              goto LABEL_60;
            }
            goto LABEL_58;
          }
LABEL_56:
          (*(void (**)(unsigned __int8 *, uint64_t))(v57 + 8))(a1, AssociatedTypeWitness);
LABEL_57:
          if (v17 > 3) {
            goto LABEL_60;
          }
          goto LABEL_58;
        }
        unsigned int v25 = v28 + 2;
      }
LABEL_52:
      if (v25 == 1) {
        goto LABEL_53;
      }
      goto LABEL_56;
    case 0u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v60 + 8))(a1, v5);
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))((unint64_t)&a1[v59] & v23, v62);
      unint64_t v24 = (((unint64_t)&a1[v59] & v23) + v61 + v10) & v58;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v24, 1, v63))
      {
        (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v24, v63);
        goto LABEL_57;
      }
      break;
  }
  if (v17 > 3) {
    goto LABEL_60;
  }
LABEL_58:
  unsigned int v29 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  if (v29 > 0xFFFC)
  {
    unsigned int v30 = *(_DWORD *)&a2[v17];
    unsigned int v31 = v30 - 3;
    if (v30 < 3) {
      goto LABEL_74;
    }
    goto LABEL_65;
  }
  if (v29 > 0xFC)
  {
    unsigned int v30 = *(unsigned __int16 *)&a2[v17];
    unsigned int v31 = v30 - 3;
    if (v30 < 3) {
      goto LABEL_74;
    }
    goto LABEL_65;
  }
LABEL_60:
  unsigned int v30 = a2[v17];
  unsigned int v31 = v30 - 3;
  if (v30 < 3) {
    goto LABEL_74;
  }
LABEL_65:
  if (v17 <= 3) {
    uint64_t v32 = v17;
  }
  else {
    uint64_t v32 = 4;
  }
  switch(v32)
  {
    case 1:
      int v33 = *a2;
      if (v17 < 4) {
        goto LABEL_72;
      }
      goto LABEL_73;
    case 2:
      int v33 = *(unsigned __int16 *)a2;
      if (v17 < 4) {
        goto LABEL_72;
      }
      goto LABEL_73;
    case 3:
      int v33 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v17 >= 4) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 4:
      int v33 = *(_DWORD *)a2;
      if (v17 < 4) {
LABEL_72:
      }
        v33 |= v31 << (8 * v17);
LABEL_73:
      unsigned int v30 = v33 + 3;
      break;
    default:
      break;
  }
LABEL_74:
  switch(v30)
  {
    case 2u:
      unsigned int v43 = *(void **)a2;
      id v44 = v43;
      *(void *)a1 = v43;
      if (v17 <= 3)
      {
        unsigned int v45 = ((1 << (8 * v17)) + 1) >> (8 * v17);
        if (v45 > 0xFFFC)
        {
          int v49 = 2;
          goto LABEL_122;
        }
        if (v45 > 0xFC)
        {
          *(_WORD *)&a1[v17] = 2;
          return a1;
        }
      }
      a1[v17] = 2;
      return a1;
    case 1u:
      unsigned int v39 = a2[v15];
      unsigned int v40 = v39 - 2;
      if (v39 >= 2)
      {
        if (v15 <= 3) {
          uint64_t v41 = v15;
        }
        else {
          uint64_t v41 = 4;
        }
        switch(v41)
        {
          case 1:
            int v42 = *a2;
            break;
          case 2:
            int v42 = *(unsigned __int16 *)a2;
            break;
          case 3:
            int v42 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            break;
          case 4:
            int v42 = *(_DWORD *)a2;
            break;
          default:
            goto LABEL_113;
        }
        if (v15 < 4)
        {
          if ((v42 | (v40 << (8 * v15))) == 0xFFFFFFFF) {
            goto LABEL_114;
          }
          goto LABEL_116;
        }
        unsigned int v39 = v42 + 2;
      }
LABEL_113:
      if (v39 == 1)
      {
LABEL_114:
        unsigned int v50 = *(void **)a2;
        id v51 = v50;
        *(void *)a1 = v50;
        char v52 = 1;
LABEL_117:
        a1[v15] = v52;
        if (v17 > 3)
        {
LABEL_118:
          a1[v17] = 1;
          return a1;
        }
        int v49 = 1;
        unsigned int v53 = ((1 << (8 * v17)) + 1) >> (8 * v17);
        if (v53 <= 0xFFFC)
        {
          if (v53 > 0xFC)
          {
            *(_WORD *)&a1[v17] = 1;
            return a1;
          }
          goto LABEL_118;
        }
LABEL_122:
        *(_DWORD *)&a1[v17] = v49;
        return a1;
      }
LABEL_116:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v57 + 16))(a1, a2, v56);
      char v52 = 0;
      goto LABEL_117;
    case 0u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v60 + 16))(a1, a2, v5);
      uint64_t v34 = v23;
      unint64_t v35 = (unint64_t)&a1[v59] & v23;
      unint64_t v36 = (unint64_t)&a2[v59] & v34;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v35, v36, v62);
      uint64_t v37 = (void *)((v35 + v61 + v10) & v58);
      unsigned int v38 = (const void *)((v36 + v61 + v10) & v58);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v38, 1, v63))
      {
        memcpy(v37, v38, __n);
        if (v17 > 3) {
          goto LABEL_103;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v37, v38, v63);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v37, 0, 1, v63);
        if (v17 > 3)
        {
LABEL_103:
          a1[v17] = 0;
          return a1;
        }
      }
      unsigned int v48 = ((1 << (8 * v17)) + 1) >> (8 * v17);
      if (v48 > 0xFFFC)
      {
        *(_DWORD *)&a1[v17] = 0;
        return a1;
      }
      if (v48 > 0xFC)
      {
        *(_WORD *)&a1[v17] = 0;
        return a1;
      }
      goto LABEL_103;
  }
  if (v17 > 3) {
    goto LABEL_94;
  }
  unsigned int v46 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  uint64_t v47 = 2;
  if (v46 > 0xFFFC) {
    uint64_t v47 = 4;
  }
  if (v46 <= 0xFC) {
LABEL_94:
  }
    uint64_t v47 = 1;
  memcpy(a1, a2, v47 + v17);
  return a1;
}

void *sub_24E5BBA08(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v5 = a3[2];
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v42 + 64);
  uint64_t v44 = a3[3];
  uint64_t v7 = *(void *)(v44 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 + v8;
  uint64_t v45 = a3[4];
  uint64_t v10 = *(void *)(v45 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v43 = *(void *)(v7 + 64);
  uint64_t v12 = (v43 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  size_t v13 = *(void *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84)) {
    ++v13;
  }
  size_t __n = v13;
  unint64_t v14 = v13 + v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 8uLL) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v16 + 1 > v14) {
    unint64_t v17 = v16 + 1;
  }
  else {
    unint64_t v17 = v14;
  }
  if (v17 <= 8) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = v17;
  }
  if (v18 > 3) {
    goto LABEL_15;
  }
  unsigned int v19 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v19 > 0xFFFC)
  {
    unsigned int v20 = *(_DWORD *)&a2[v18];
    unsigned int v21 = v20 - 3;
    if (v20 < 3) {
      goto LABEL_29;
    }
    goto LABEL_20;
  }
  if (v19 > 0xFC)
  {
    unsigned int v20 = *(unsigned __int16 *)&a2[v18];
    unsigned int v21 = v20 - 3;
    if (v20 < 3) {
      goto LABEL_29;
    }
  }
  else
  {
LABEL_15:
    unsigned int v20 = a2[v18];
    unsigned int v21 = v20 - 3;
    if (v20 < 3) {
      goto LABEL_29;
    }
  }
LABEL_20:
  if (v18 <= 3) {
    uint64_t v22 = v18;
  }
  else {
    uint64_t v22 = 4;
  }
  switch(v22)
  {
    case 1:
      int v23 = *a2;
      if (v18 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v23 = *(unsigned __int16 *)a2;
      if (v18 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 3:
      int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v18 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 4:
      int v23 = *(_DWORD *)a2;
      if (v18 < 4) {
LABEL_27:
      }
        v23 |= v21 << (8 * v18);
LABEL_28:
      unsigned int v20 = v23 + 3;
      break;
    default:
      break;
  }
LABEL_29:
  if (v20 == 2)
  {
    *a1 = *(void *)a2;
    if (v18 <= 3)
    {
      unsigned int v33 = ((1 << (8 * v18)) + 1) >> (8 * v18);
      if (v33 > 0xFFFC)
      {
        int v37 = 2;
        goto LABEL_78;
      }
      if (v33 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 2;
        return a1;
      }
    }
    *((unsigned char *)a1 + v18) = 2;
    return a1;
  }
  if (v20 == 1)
  {
    unsigned int v29 = a2[v16];
    unsigned int v30 = v29 - 2;
    if (v29 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v31 = v16;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *a2;
          if (v16 >= 4) {
            goto LABEL_71;
          }
          goto LABEL_65;
        case 2:
          int v32 = *(unsigned __int16 *)a2;
          if (v16 < 4) {
            goto LABEL_65;
          }
          goto LABEL_71;
        case 3:
          int v32 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v16 < 4) {
            goto LABEL_65;
          }
          goto LABEL_71;
        case 4:
          int v32 = *(_DWORD *)a2;
          if (v16 < 4)
          {
LABEL_65:
            unsigned int v29 = (v32 | (v30 << (8 * v16))) + 2;
            break;
          }
LABEL_71:
          if (v32 != -1) {
            goto LABEL_72;
          }
          goto LABEL_67;
        default:
          break;
      }
    }
    if (v29 == 1)
    {
LABEL_67:
      *a1 = *(void *)a2;
      char v38 = 1;
    }
    else
    {
LABEL_72:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
      char v38 = 0;
    }
    *((unsigned char *)a1 + v16) = v38;
    if (v18 > 3)
    {
LABEL_74:
      *((unsigned char *)a1 + v18) = 1;
      return a1;
    }
    int v37 = 1;
    unsigned int v39 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    if (v39 <= 0xFFFC)
    {
      if (v39 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 1;
        return a1;
      }
      goto LABEL_74;
    }
LABEL_78:
    *(_DWORD *)((char *)a1 + v18) = v37;
    return a1;
  }
  if (v20)
  {
    if (v18 > 3) {
      goto LABEL_49;
    }
    unsigned int v34 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    uint64_t v35 = 2;
    if (v34 > 0xFFFC) {
      uint64_t v35 = 4;
    }
    if (v34 <= 0xFC) {
LABEL_49:
    }
      uint64_t v35 = 1;
    memcpy(a1, a2, v35 + v18);
  }
  else
  {
    uint64_t v24 = ~v8;
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v42 + 32))(a1, a2, v5);
    unint64_t v25 = ((unint64_t)a1 + v9) & v24;
    unint64_t v26 = (unint64_t)&a2[v9] & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v25, v26, v44);
    uint64_t v27 = (void *)((v25 + v43 + v11) & ~v11);
    int v28 = (const void *)((v26 + v43 + v11) & ~v11);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v28, 1, v45))
    {
      memcpy(v27, v28, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v27, v28, v45);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v45);
    }
    if (v18 <= 3)
    {
      unsigned int v36 = ((1 << (8 * v18)) + 1) >> (8 * v18);
      if (v36 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v18) = 0;
        return a1;
      }
      if (v36 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 0;
        return a1;
      }
    }
    *((unsigned char *)a1 + v18) = 0;
  }
  return a1;
}

unsigned __int8 *sub_24E5BBFF4(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = a3[2];
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v56 + 64);
  uint64_t v58 = a3[3];
  uint64_t v7 = *(void *)(v58 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v55 = v6 + v8;
  uint64_t v59 = a3[4];
  uint64_t v9 = *(void *)(v59 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v57 = *(void *)(v7 + 64);
  uint64_t v11 = (v57 + v10 + ((v6 + v8) & ~v8)) & ~v10;
  size_t v12 = *(void *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v12;
  }
  size_t __n = v12;
  unint64_t v13 = v12 + v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = AssociatedTypeWitness;
  uint64_t v53 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v53 + 64) <= 8uLL) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v15 + 1 > v13) {
    unint64_t v16 = v15 + 1;
  }
  else {
    unint64_t v16 = v13;
  }
  if (v16 <= 8) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = v16;
  }
  if (v17 > 3) {
    goto LABEL_16;
  }
  unsigned int v18 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  if (v18 > 0xFFFC)
  {
    unsigned int v19 = *(_DWORD *)&a1[v17];
    unsigned int v20 = v19 - 3;
    if (v19 < 3) {
      goto LABEL_30;
    }
    goto LABEL_21;
  }
  if (v18 > 0xFC)
  {
    unsigned int v19 = *(unsigned __int16 *)&a1[v17];
    unsigned int v20 = v19 - 3;
    if (v19 < 3) {
      goto LABEL_30;
    }
  }
  else
  {
LABEL_16:
    unsigned int v19 = a1[v17];
    unsigned int v20 = v19 - 3;
    if (v19 < 3) {
      goto LABEL_30;
    }
  }
LABEL_21:
  if (v17 <= 3) {
    uint64_t v21 = v17;
  }
  else {
    uint64_t v21 = 4;
  }
  switch(v21)
  {
    case 1:
      int v22 = *a1;
      if (v17 < 4) {
        goto LABEL_28;
      }
      goto LABEL_29;
    case 2:
      int v22 = *(unsigned __int16 *)a1;
      if (v17 < 4) {
        goto LABEL_28;
      }
      goto LABEL_29;
    case 3:
      int v22 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      if (v17 >= 4) {
        goto LABEL_29;
      }
      goto LABEL_28;
    case 4:
      int v22 = *(_DWORD *)a1;
      if (v17 < 4) {
LABEL_28:
      }
        v22 |= v20 << (8 * v17);
LABEL_29:
      unsigned int v19 = v22 + 3;
      break;
    default:
      break;
  }
LABEL_30:
  uint64_t v23 = ~v8;
  uint64_t v54 = ~v10;
  switch(v19)
  {
    case 2u:
      goto LABEL_53;
    case 1u:
      unsigned int v25 = a1[v15];
      unsigned int v26 = v25 - 2;
      if (v25 >= 2)
      {
        if (v15 <= 3) {
          uint64_t v27 = v15;
        }
        else {
          uint64_t v27 = 4;
        }
        switch(v27)
        {
          case 1:
            int v28 = *a1;
            break;
          case 2:
            int v28 = *(unsigned __int16 *)a1;
            break;
          case 3:
            int v28 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            break;
          case 4:
            int v28 = *(_DWORD *)a1;
            break;
          default:
            goto LABEL_52;
        }
        if (v15 < 4)
        {
          if ((v28 | (v26 << (8 * v15))) == 0xFFFFFFFF)
          {
LABEL_53:

            if (v17 > 3) {
              goto LABEL_60;
            }
            goto LABEL_58;
          }
LABEL_56:
          (*(void (**)(unsigned __int8 *, uint64_t))(v53 + 8))(a1, AssociatedTypeWitness);
LABEL_57:
          if (v17 > 3) {
            goto LABEL_60;
          }
          goto LABEL_58;
        }
        unsigned int v25 = v28 + 2;
      }
LABEL_52:
      if (v25 == 1) {
        goto LABEL_53;
      }
      goto LABEL_56;
    case 0u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v56 + 8))(a1, v5);
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))((unint64_t)&a1[v55] & v23, v58);
      unint64_t v24 = (((unint64_t)&a1[v55] & v23) + v57 + v10) & v54;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v24, 1, v59))
      {
        (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v24, v59);
        goto LABEL_57;
      }
      break;
  }
  if (v17 > 3) {
    goto LABEL_60;
  }
LABEL_58:
  unsigned int v29 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  if (v29 > 0xFFFC)
  {
    unsigned int v30 = *(_DWORD *)&a2[v17];
    unsigned int v31 = v30 - 3;
    if (v30 < 3) {
      goto LABEL_74;
    }
    goto LABEL_65;
  }
  if (v29 > 0xFC)
  {
    unsigned int v30 = *(unsigned __int16 *)&a2[v17];
    unsigned int v31 = v30 - 3;
    if (v30 < 3) {
      goto LABEL_74;
    }
    goto LABEL_65;
  }
LABEL_60:
  unsigned int v30 = a2[v17];
  unsigned int v31 = v30 - 3;
  if (v30 < 3) {
    goto LABEL_74;
  }
LABEL_65:
  if (v17 <= 3) {
    uint64_t v32 = v17;
  }
  else {
    uint64_t v32 = 4;
  }
  switch(v32)
  {
    case 1:
      int v33 = *a2;
      if (v17 < 4) {
        goto LABEL_72;
      }
      goto LABEL_73;
    case 2:
      int v33 = *(unsigned __int16 *)a2;
      if (v17 < 4) {
        goto LABEL_72;
      }
      goto LABEL_73;
    case 3:
      int v33 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v17 >= 4) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 4:
      int v33 = *(_DWORD *)a2;
      if (v17 < 4) {
LABEL_72:
      }
        v33 |= v31 << (8 * v17);
LABEL_73:
      unsigned int v30 = v33 + 3;
      break;
    default:
      break;
  }
LABEL_74:
  switch(v30)
  {
    case 2u:
      *(void *)a1 = *(void *)a2;
      if (v17 <= 3)
      {
        unsigned int v43 = ((1 << (8 * v17)) + 1) >> (8 * v17);
        if (v43 > 0xFFFC)
        {
          int v47 = 2;
          goto LABEL_122;
        }
        if (v43 > 0xFC)
        {
          *(_WORD *)&a1[v17] = 2;
          return a1;
        }
      }
      a1[v17] = 2;
      return a1;
    case 1u:
      unsigned int v39 = a2[v15];
      unsigned int v40 = v39 - 2;
      if (v39 >= 2)
      {
        if (v15 <= 3) {
          uint64_t v41 = v15;
        }
        else {
          uint64_t v41 = 4;
        }
        switch(v41)
        {
          case 1:
            int v42 = *a2;
            break;
          case 2:
            int v42 = *(unsigned __int16 *)a2;
            break;
          case 3:
            int v42 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            break;
          case 4:
            int v42 = *(_DWORD *)a2;
            break;
          default:
            goto LABEL_113;
        }
        if (v15 < 4)
        {
          if ((v42 | (v40 << (8 * v15))) == 0xFFFFFFFF) {
            goto LABEL_114;
          }
          goto LABEL_116;
        }
        unsigned int v39 = v42 + 2;
      }
LABEL_113:
      if (v39 == 1)
      {
LABEL_114:
        *(void *)a1 = *(void *)a2;
        char v48 = 1;
LABEL_117:
        a1[v15] = v48;
        if (v17 > 3)
        {
LABEL_118:
          a1[v17] = 1;
          return a1;
        }
        int v47 = 1;
        unsigned int v49 = ((1 << (8 * v17)) + 1) >> (8 * v17);
        if (v49 <= 0xFFFC)
        {
          if (v49 > 0xFC)
          {
            *(_WORD *)&a1[v17] = 1;
            return a1;
          }
          goto LABEL_118;
        }
LABEL_122:
        *(_DWORD *)&a1[v17] = v47;
        return a1;
      }
LABEL_116:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v53 + 32))(a1, a2, v52);
      char v48 = 0;
      goto LABEL_117;
    case 0u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v56 + 32))(a1, a2, v5);
      uint64_t v34 = v23;
      unint64_t v35 = (unint64_t)&a1[v55] & v23;
      unint64_t v36 = (unint64_t)&a2[v55] & v34;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v35, v36, v58);
      int v37 = (void *)((v35 + v57 + v10) & v54);
      char v38 = (const void *)((v36 + v57 + v10) & v54);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v38, 1, v59))
      {
        memcpy(v37, v38, __n);
        if (v17 > 3) {
          goto LABEL_103;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v37, v38, v59);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v37, 0, 1, v59);
        if (v17 > 3)
        {
LABEL_103:
          a1[v17] = 0;
          return a1;
        }
      }
      unsigned int v46 = ((1 << (8 * v17)) + 1) >> (8 * v17);
      if (v46 > 0xFFFC)
      {
        *(_DWORD *)&a1[v17] = 0;
        return a1;
      }
      if (v46 > 0xFC)
      {
        *(_WORD *)&a1[v17] = 0;
        return a1;
      }
      goto LABEL_103;
  }
  if (v17 > 3) {
    goto LABEL_94;
  }
  unsigned int v44 = ((1 << (8 * v17)) + 1) >> (8 * v17);
  uint64_t v45 = 2;
  if (v44 > 0xFFFC) {
    uint64_t v45 = 4;
  }
  if (v44 <= 0xFC) {
LABEL_94:
  }
    uint64_t v45 = 1;
  memcpy(a1, a2, v45 + v17);
  return a1;
}

uint64_t sub_24E5BC84C(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[4] - 8);
  unint64_t v6 = (((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
      + *(void *)(*(void *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v7;
  }
  unint64_t v8 = v7 + v6;
  unint64_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  if (v9 + 1 > v8) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = v8;
  }
  if (v10 <= 8) {
    unint64_t v10 = 8;
  }
  if (v10 > 3)
  {
    int v11 = 4;
LABEL_14:
    char v13 = 8;
    goto LABEL_15;
  }
  unsigned int v12 = ((1 << (8 * v10)) + 1) >> (8 * v10);
  if (v12 > 0xFFFC) {
    goto LABEL_18;
  }
  int v11 = v12 + 3;
  if (v12 <= 0xFC) {
    goto LABEL_14;
  }
  char v13 = 16;
LABEL_15:
  unsigned int v14 = (1 << v13) - v11;
  if ((v14 & 0x80000000) == 0)
  {
    if (v10 > 3) {
      goto LABEL_22;
    }
LABEL_19:
    unsigned int v15 = ((1 << (8 * v10)) + 1) >> (8 * v10);
    uint64_t v16 = 2;
    if (v15 > 0xFFFC) {
      uint64_t v16 = 4;
    }
    if (v15 > 0xFC) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_18:
  unsigned int v14 = 0x7FFFFFFF;
  if (v10 <= 3) {
    goto LABEL_19;
  }
LABEL_22:
  uint64_t v16 = 1;
LABEL_23:
  if (!a2) {
    return 0;
  }
  if (a2 <= v14) {
    goto LABEL_42;
  }
  unint64_t v17 = v16 + v10;
  char v18 = 8 * v17;
  if (v17 <= 3)
  {
    unsigned int v20 = ((a2 - v14 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v20))
    {
      int v19 = *(_DWORD *)((char *)a1 + v17);
      if (!v19) {
        goto LABEL_42;
      }
      goto LABEL_34;
    }
    if (v20 > 0xFF)
    {
      int v19 = *(unsigned __int16 *)((char *)a1 + v17);
      if (!*(unsigned __int16 *)((char *)a1 + v17)) {
        goto LABEL_42;
      }
      goto LABEL_34;
    }
    if (v20 < 2)
    {
LABEL_42:
      if (v14)
      {
        if (v10 <= 3)
        {
          unsigned int v28 = ((1 << (8 * v10)) + 1) >> (8 * v10);
          if (v28 > 0xFFFC)
          {
            unsigned int v23 = *(_DWORD *)((char *)a1 + v10);
            unsigned int v24 = ~v23;
LABEL_52:
            unsigned int v31 = 0x7FFFFFFF;
LABEL_53:
            if (v31 > v24) {
              return -v23;
            }
            else {
              return 0;
            }
          }
          int v26 = v28 + 3;
          if (v28 > 0xFC)
          {
            int v30 = *(unsigned __int16 *)((char *)a1 + v10);
            unsigned int v23 = v30 | 0xFFFF0000;
            unsigned int v24 = v30 ^ 0xFFFF;
            char v25 = 16;
          }
          else
          {
            int v29 = *((unsigned __int8 *)a1 + v10);
            unsigned int v23 = v29 | 0xFFFFFF00;
            unsigned int v24 = v29 ^ 0xFF;
            char v25 = 8;
          }
        }
        else
        {
          int v22 = *((unsigned __int8 *)a1 + v10);
          unsigned int v23 = v22 | 0xFFFFFF00;
          unsigned int v24 = v22 ^ 0xFF;
          char v25 = 8;
          int v26 = 4;
        }
        unsigned int v31 = (1 << v25) - v26;
        if ((v31 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        goto LABEL_52;
      }
      return 0;
    }
  }
  int v19 = *((unsigned __int8 *)a1 + v17);
  if (!*((unsigned char *)a1 + v17)) {
    goto LABEL_42;
  }
LABEL_34:
  int v21 = (v19 - 1) << v18;
  if (v17 > 3) {
    int v21 = 0;
  }
  if (v17)
  {
    if (v17 > 3) {
      LODWORD(v17) = 4;
    }
    switch((int)v17)
    {
      case 2:
        LODWORD(v17) = *a1;
        break;
      case 3:
        LODWORD(v17) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v17) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v17) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v14 + (v17 | v21) + 1;
}

void sub_24E5BCBCC(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v7 = *(void *)(a4[4] - 8);
  unint64_t v8 = (((*(void *)(*(void *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80))
      + *(void *)(*(void *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v9;
  }
  unint64_t v10 = v9 + v8;
  unint64_t v11 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  if (v11 + 1 > v10) {
    unint64_t v12 = v11 + 1;
  }
  else {
    unint64_t v12 = v10;
  }
  if (v12 <= 8) {
    unint64_t v12 = 8;
  }
  char v13 = 8 * v12;
  if (v12 > 3)
  {
    int v14 = 4;
LABEL_12:
    char v15 = 8;
    goto LABEL_13;
  }
  unsigned int v17 = ((1 << v13) + 1) >> v13;
  if (v17 > 0xFFFC) {
    goto LABEL_19;
  }
  int v14 = v17 + 3;
  if (v17 <= 0xFC) {
    goto LABEL_12;
  }
  char v15 = 16;
LABEL_13:
  unsigned int v16 = (1 << v15) - v14;
  if ((v16 & 0x80000000) == 0)
  {
    if (v12 > 3) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
LABEL_19:
  unsigned int v16 = 0x7FFFFFFF;
  if (v12 > 3)
  {
LABEL_23:
    uint64_t v19 = 1;
    goto LABEL_24;
  }
LABEL_20:
  unsigned int v18 = ((1 << v13) + 1) >> v13;
  uint64_t v19 = 2;
  if (v18 > 0xFFFC) {
    uint64_t v19 = 4;
  }
  if (v18 <= 0xFC) {
    goto LABEL_23;
  }
LABEL_24:
  size_t v20 = v19 + v12;
  if (a3 <= v16)
  {
    int v21 = 0;
  }
  else if (v20 <= 3)
  {
    unsigned int v24 = ((a3 - v16 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
    if (HIWORD(v24))
    {
      int v21 = 4;
    }
    else if (v24 >= 0x100)
    {
      int v21 = 2;
    }
    else
    {
      int v21 = v24 > 1;
    }
  }
  else
  {
    int v21 = 1;
  }
  if (v16 < a2)
  {
    unsigned int v22 = ~v16 + a2;
    if (v20 < 4)
    {
      int v23 = (v22 >> (8 * v20)) + 1;
      if (v20)
      {
        int v25 = v22 & ~(-1 << (8 * v20));
        bzero(a1, v20);
        if (v20 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if (v20 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v20);
      *(_DWORD *)a1 = v22;
      int v23 = 1;
    }
    switch(v21)
    {
      case 1:
        a1[v20] = v23;
        return;
      case 2:
        *(_WORD *)&a1[v20] = v23;
        return;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&a1[v20] = v23;
        return;
      default:
        return;
    }
  }
  switch(v21)
  {
    case 1:
      a1[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 2:
      *(_WORD *)&a1[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x24E5BCF64);
    case 4:
      *(_DWORD *)&a1[v20] = 0;
      goto LABEL_43;
    default:
LABEL_43:
      if (!a2) {
        return;
      }
LABEL_44:
      int v26 = -a2;
      if (v12 > 3) {
        goto LABEL_45;
      }
      unsigned int v27 = ((1 << v13) + 1) >> v13;
      if (v27 > 0xFFFC)
      {
        *(_DWORD *)&a1[v12] = v26;
      }
      else if (v27 <= 0xFC)
      {
LABEL_45:
        a1[v12] = v26;
      }
      else
      {
        *(_WORD *)&a1[v12] = v26;
      }
      return;
  }
}

uint64_t sub_24E5BCF8C(unsigned __int8 *a1, void *a2)
{
  uint64_t v3 = *(void *)(a2[4] - 8);
  unint64_t v4 = (((*(void *)(*(void *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80))
      + *(void *)(*(void *)(a2[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v5;
  }
  unint64_t v6 = v5 + v4;
  unint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  if (v7 + 1 > v6) {
    unint64_t v8 = v7 + 1;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v8 <= 8) {
    unint64_t v8 = 8;
  }
  if (v8 > 3) {
    goto LABEL_11;
  }
  unsigned int v10 = ((1 << (8 * v8)) + 1) >> (8 * v8);
  if (v10 > 0xFFFC)
  {
    uint64_t result = *(unsigned int *)&a1[v8];
  }
  else
  {
    if (v10 <= 0xFC)
    {
LABEL_11:
      uint64_t result = a1[v8];
      goto LABEL_16;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v8];
  }
LABEL_16:
  if (result >= 3)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a1;
        goto LABEL_25;
      case 2:
        int v12 = *(unsigned __int16 *)a1;
        goto LABEL_25;
      case 3:
        int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_25;
      case 4:
        int v12 = *(_DWORD *)a1;
LABEL_25:
        unsigned int v13 = (v12 | ((result - 3) << (8 * v8))) + 3;
        unsigned int v14 = v12 + 3;
        if (v8 >= 4) {
          uint64_t result = v14;
        }
        else {
          uint64_t result = v13;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24E5BD18C(unsigned char *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[4] - 8);
  unint64_t v6 = (((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
      + *(void *)(*(void *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v7;
  }
  unint64_t v8 = v7 + v6;
  unint64_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  if (v9 + 1 > v8) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = v8;
  }
  if (v10 <= 8) {
    size_t v11 = 8;
  }
  else {
    size_t v11 = v10;
  }
  if (a2 > 2)
  {
    unsigned int v12 = a2 - 3;
    if (v11 < 4)
    {
      int v14 = (v12 >> (8 * v11)) + 3;
      v12 &= ~(-1 << (8 * v11));
      char v15 = (int *)&a1[v11];
      unsigned int v16 = ((1 << (8 * v11)) + 1) >> (8 * v11);
      if (v16 > 0xFFFC)
      {
        *char v15 = v14;
      }
      else if (v16 > 0xFC)
      {
        *(_WORD *)char v15 = v14;
      }
      else
      {
        *(unsigned char *)char v15 = v14;
      }
    }
    else
    {
      a1[v11] = 3;
    }
    if (v11 >= 4) {
      int v17 = 4;
    }
    else {
      int v17 = v11;
    }
    bzero(a1, v11);
    switch(v17)
    {
      case 2:
        *(_WORD *)a1 = v12;
        break;
      case 3:
        *(_WORD *)a1 = v12;
        a1[2] = BYTE2(v12);
        break;
      case 4:
        *(_DWORD *)a1 = v12;
        break;
      default:
        *a1 = v12;
        break;
    }
  }
  else
  {
    if (v11 > 3)
    {
LABEL_13:
      a1[v11] = a2;
      return;
    }
    unsigned int v13 = ((1 << (8 * v11)) + 1) >> (8 * v11);
    if (v13 > 0xFFFC)
    {
      *(_DWORD *)&a1[v11] = a2;
    }
    else
    {
      if (v13 <= 0xFC) {
        goto LABEL_13;
      }
      *(_WORD *)&a1[v11] = a2;
    }
  }
}

void *sub_24E5BD3FC(void *a1, void *a2, uint64_t a3)
{
  return sub_24E5BD488(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_24E5BD414);
}

unint64_t sub_24E5BD414(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_24E5BD478(unint64_t *a1)
{
  return sub_24E5AB584(*a1);
}

void *sub_24E5BD488(void *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  a4(*a2, v6, v7);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  return a1;
}

uint64_t *sub_24E5BD4D8(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_24E5BD504(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_24E5BD414, (void (*)(uint64_t, uint64_t, uint64_t))sub_24E5AB584);
}

uint64_t *sub_24E5BD504(uint64_t *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *sub_24E5BD570(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_24E5BD588(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_24E5AB584);
}

uint64_t *sub_24E5BD588(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v7 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v5;
  a4(v6, v8, v7);
  return a1;
}

uint64_t sub_24E5BD5D0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_24E5BD62C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_24E5BD684(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_24E5BD6A0(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_24E5BD6B0(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    result[1] = 0;
    result[2] = 0;
    *uint64_t result = (8 * (a2 - 2)) | 0x8000000000000000;
  }
  return result;
}

uint64_t sub_24E5BD6E0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_24E5BD814(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v8 + v11) & ~v11;
  uint64_t v14 = *(void *)(v10 + 64);
  uint64_t v15 = *(void *)(v5 - 8);
  uint64_t v16 = *(_DWORD *)(v15 + 80);
  uint64_t v17 = v14 + v16;
  uint64_t v18 = *(void *)(v15 + 64) + 7;
  unint64_t v19 = ((v18 + ((v14 + v16 + v13) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 16;
  unsigned int v20 = v16 | *(_DWORD *)(v7 + 80) & 0xF8 | v11;
  if (v20 > 7 || ((*(_DWORD *)(v15 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0 || v19 > 0x18)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    int v30 = (uint64_t *)(v23 + (((v20 | 7) + 16) & ~(unint64_t)(v20 | 7)));
  }
  else
  {
    uint64_t v36 = v5;
    int v37 = a1;
    uint64_t v24 = ~v11;
    uint64_t v25 = ~v16;
    uint64_t v35 = AssociatedTypeWitness;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v37, a2, v6);
    unint64_t v26 = ((unint64_t)v37 + v12) & v24;
    unint64_t v27 = ((unint64_t)a2 + v12) & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v26, v27, v35);
    unint64_t v28 = (v26 + v17) & v25;
    unint64_t v29 = (v27 + v17) & v25;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 16))(v28, v29, v36);
    int v30 = v37;
    unsigned int v31 = (void *)((v18 + v29) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = v31[1];
    int v33 = (void *)((v18 + v28) & 0xFFFFFFFFFFFFFFF8);
    void *v33 = *v31;
    v33[1] = v32;
  }
  swift_retain();
  return v30;
}

uint64_t sub_24E5BDA78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 8;
  unint64_t v10 = (v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))((v10 + *(void *)(v9 + 56) + *(unsigned __int8 *)(*(void *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80), v6);

  return swift_release();
}

uint64_t sub_24E5BDBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 16;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v7 + v12;
  uint64_t v14 = (v7 + v12 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v11 + 48);
  uint64_t v17 = *(void *)(v8 - 8);
  uint64_t v18 = v17 + 16;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v21, v22, v8);
  uint64_t v23 = *(void *)(v18 + 48) + 7;
  uint64_t v24 = (void *)((v23 + v21) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)((v23 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_retain();
  return a1;
}

uint64_t sub_24E5BDCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v7 + v12;
  uint64_t v14 = (v7 + v12 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v11 + 40);
  uint64_t v17 = *(void *)(v8 - 8);
  uint64_t v18 = v17 + 24;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 24))(v21, v22, v8);
  uint64_t v23 = *(void *)(v18 + 40) + 7;
  uint64_t v24 = (void *)((v23 + v21) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)((v23 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24E5BDE4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 32;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v7 + v12;
  uint64_t v14 = (v7 + v12 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v11 + 32);
  uint64_t v17 = *(void *)(v8 - 8);
  uint64_t v18 = v17 + 32;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v21, v22, v8);
  *(_OWORD *)((*(void *)(v18 + 32) + 7 + v21) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v18 + 32)
                                                                                       + 7
                                                                                       + v22) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24E5BDF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v7 + v12;
  uint64_t v14 = (v7 + v12 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v11 + 24);
  uint64_t v17 = *(void *)(v8 - 8);
  uint64_t v18 = v17 + 40;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 40))(v21, v22, v8);
  *(_OWORD *)((*(void *)(v18 + 24) + 7 + v21) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v18 + 24)
                                                                                       + 7
                                                                                       + v22) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_24E5BE0EC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  unsigned int v11 = *(_DWORD *)(v9 + 84);
  uint64_t v12 = *(void *)(v5 - 8);
  if (v11 <= v8) {
    unsigned int v13 = v8;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v14 = *(unsigned int *)(v12 + 84);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = *(void *)(v9 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v18 = *(void *)(v12 + 64);
  if (v14 <= v13) {
    unsigned int v19 = v13;
  }
  else {
    unsigned int v19 = v14;
  }
  if (v19 <= 0x7FFFFFFF) {
    unsigned int v19 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v20 = *(void *)(v7 + 64) + v15;
  uint64_t v21 = v18 + 7;
  if (v19 < a2)
  {
    unint64_t v22 = ((v21 + ((v16 + v17 + (v20 & ~v15)) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 16;
    if ((v22 & 0xFFFFFFF8) != 0) {
      unsigned int v23 = 2;
    }
    else {
      unsigned int v23 = a2 - v19 + 1;
    }
    if (v23 >= 0x10000) {
      unsigned int v24 = 4;
    }
    else {
      unsigned int v24 = 2;
    }
    if (v23 < 0x100) {
      unsigned int v24 = 1;
    }
    if (v23 >= 2) {
      uint64_t v25 = v24;
    }
    else {
      uint64_t v25 = 0;
    }
    switch(v25)
    {
      case 1:
        int v26 = *((unsigned __int8 *)a1 + v22);
        if (!*((unsigned char *)a1 + v22)) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v26 = *(unsigned __int16 *)((char *)a1 + v22);
        if (*(_WORD *)((char *)a1 + v22)) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24E5BE404);
      case 4:
        int v26 = *(_DWORD *)((char *)a1 + v22);
        if (!v26) {
          break;
        }
LABEL_27:
        int v28 = v26 - 1;
        if ((v22 & 0xFFFFFFF8) != 0)
        {
          int v28 = 0;
          int v29 = *a1;
        }
        else
        {
          int v29 = 0;
        }
        return v19 + (v29 | v28) + 1;
      default:
        break;
    }
  }
  if (v8 == v19)
  {
    int v30 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48);
    unsigned int v31 = a1;
    uint64_t v32 = v8;
    uint64_t v33 = v6;
LABEL_32:
    return v30(v31, v32, v33);
  }
  unint64_t v34 = ((unint64_t)a1 + v20) & ~v15;
  if (v11 == v19)
  {
    uint64_t v35 = *(uint64_t (**)(unint64_t))(v10 + 48);
    return v35(v34);
  }
  else
  {
    unsigned int v31 = (_DWORD *)((v34 + v16 + v17) & ~v17);
    if (v14 == v19)
    {
      int v30 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
      uint64_t v32 = v14;
      uint64_t v33 = v5;
      goto LABEL_32;
    }
    unint64_t v36 = *(void *)(((unint64_t)v31 + v21) & 0xFFFFFFFFFFFFFFF8);
    if (v36 >= 0xFFFFFFFF) {
      LODWORD(v36) = -1;
    }
    return (v36 + 1);
  }
}

void sub_24E5BE418(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v39 = v9;
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = v11;
  unsigned int v13 = *(_DWORD *)(v11 + 84);
  if (v13 <= v10) {
    unsigned int v14 = v10;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v15 = *(void *)(v7 - 8);
  uint64_t v16 = *(unsigned int *)(v15 + 84);
  uint64_t v17 = *(void *)(v9 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = *(void *)(v11 + 64);
  uint64_t v20 = *(unsigned __int8 *)(v15 + 80);
  if (v16 <= v14) {
    unsigned int v21 = v14;
  }
  else {
    unsigned int v21 = *(_DWORD *)(v15 + 84);
  }
  if (v21 <= 0x7FFFFFFF) {
    unsigned int v21 = 0x7FFFFFFF;
  }
  uint64_t v22 = *(void *)(*(void *)(v7 - 8) + 64) + 7;
  size_t v23 = ((v22 + ((v19 + v20 + ((v17 + v18) & ~v18)) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v21 >= a3)
  {
    int v26 = 0;
    int v27 = a2 - v21;
    if (a2 <= v21) {
      goto LABEL_22;
    }
LABEL_26:
    if (((v22 + ((v19 + v20 + ((v17 + v18) & ~v18)) & ~v20)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v28 = v27;
    }
    else {
      int v28 = 1;
    }
    if (((v22 + ((v19 + v20 + ((v17 + v18) & ~v18)) & ~v20)) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v29 = ~v21 + a2;
      bzero(a1, v23);
      *a1 = v29;
    }
    switch(v26)
    {
      case 1:
        *((unsigned char *)a1 + v23) = v28;
        break;
      case 2:
        *(_WORD *)((char *)a1 + v23) = v28;
        break;
      case 3:
LABEL_55:
        __break(1u);
        JUMPOUT(0x24E5BE788);
      case 4:
        *(_DWORD *)((char *)a1 + v23) = v28;
        break;
      default:
        return;
    }
    return;
  }
  if (((v22 + ((v19 + v20 + ((v17 + v18) & ~v18)) & ~v20)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v24 = a3 - v21 + 1;
  }
  else {
    unsigned int v24 = 2;
  }
  if (v24 >= 0x10000) {
    int v25 = 4;
  }
  else {
    int v25 = 2;
  }
  if (v24 < 0x100) {
    int v25 = 1;
  }
  if (v24 >= 2) {
    int v26 = v25;
  }
  else {
    int v26 = 0;
  }
  int v27 = a2 - v21;
  if (a2 > v21) {
    goto LABEL_26;
  }
LABEL_22:
  switch(v26)
  {
    case 1:
      *((unsigned char *)a1 + v23) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)((char *)a1 + v23) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
      goto LABEL_55;
    case 4:
      *(_DWORD *)((char *)a1 + v23) = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (!a2) {
        return;
      }
LABEL_35:
      if (v10 == v21)
      {
        int v30 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v39 + 56);
        unsigned int v31 = a1;
        uint64_t v32 = a2;
        uint64_t v33 = v10;
        uint64_t v34 = v8;
LABEL_37:
        v30(v31, v32, v33, v34);
        return;
      }
      unint64_t v35 = ((unint64_t)a1 + v17 + v18) & ~v18;
      if (v13 == v21)
      {
        unint64_t v36 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
        v36(v35, a2);
      }
      else
      {
        unsigned int v31 = (_DWORD *)((v35 + v19 + v20) & ~v20);
        if (v16 == v21)
        {
          int v30 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v15 + 56);
          uint64_t v32 = a2;
          uint64_t v33 = v16;
          uint64_t v34 = v7;
          goto LABEL_37;
        }
        int v37 = (void *)(((unint64_t)v31 + v22) & 0xFFFFFFFFFFFFFFF8);
        if ((a2 & 0x80000000) != 0)
        {
          uint64_t v38 = a2 ^ 0x80000000;
          v37[1] = 0;
        }
        else
        {
          uint64_t v38 = (a2 - 1);
        }
        *int v37 = v38;
      }
      break;
  }
}

uint64_t type metadata accessor for AsyncThrottleSequence()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5BE7C8()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_24E864388();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_24E5BE97C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v42 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v42 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = v5 + v8;
  uint64_t v11 = (v5 + v9) & ~v9;
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v12 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  size_t __n = v12;
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v11) & ~v15;
  uint64_t v43 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = *(_DWORD *)(v18 + 80);
  unsigned int v20 = v8 | *(_DWORD *)(v4 + 80) & 0xF8 | v15 | v19;
  if (v20 > 7
    || ((*(_DWORD *)(v14 + 80) | v8 | *(_DWORD *)(v18 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) != 0
    || ((*(void *)(v18 + 64) + 7 + ((*(void *)(v14 + 64) + v19 + v17) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    unsigned int v24 = (uint64_t *)(v23 + (((v20 | 7) + 16) & ~(unint64_t)(v20 | 7)));
  }
  else
  {
    uint64_t v37 = *(void *)(v18 + 64) + 7;
    uint64_t v38 = *(void *)(*(void *)(v13 - 8) + 64);
    uint64_t v39 = v13;
    unint64_t v25 = ~(unint64_t)v8;
    uint64_t v35 = ~v15;
    uint64_t v36 = ~v19;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
    int v26 = (void *)(((unint64_t)a1 + v10) & ~v9);
    int v27 = (const void *)(((unint64_t)a2 + v10) & v25);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a2 + v10) & v25, 1, v42))
    {
      memcpy(v26, v27, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v26, v27, v42);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v42);
    }
    unint64_t v28 = ((unint64_t)v27 + v16) & v35;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16))(((unint64_t)v26 + v16) & v35, v28, v39);
    unint64_t v29 = ((((unint64_t)v26 + v16) & v35) + v38 + v19) & v36;
    unint64_t v30 = (v28 + v38 + v19) & v36;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 16))(v29, v30, v43);
    unsigned int v31 = (void *)((v37 + v30) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = v31[1];
    uint64_t v33 = (void *)((v37 + v29) & 0xFFFFFFFFFFFFFFF8);
    void *v33 = *v31;
    v33[1] = v32;
    unsigned int v24 = a1;
  }
  swift_retain();
  return v24;
}

uint64_t sub_24E5BED50(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 56);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (v6 + a1 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8)) {
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v10, v8);
  }
  int v11 = *(_DWORD *)(v9 + 84);
  uint64_t v12 = *(void *)(v9 + 64);
  uint64_t v13 = swift_getAssociatedTypeWitness();
  BOOL v14 = v11 == 0;
  uint64_t v15 = *(void *)(v13 - 8);
  uint64_t v16 = v15 + 8;
  uint64_t v17 = v12 + v10;
  if (v14) {
    ++v17;
  }
  unint64_t v18 = (v17 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v18, v13);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))((v18 + *(void *)(v16 + 56) + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80), v7);

  return swift_release();
}

uint64_t sub_24E5BEF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v8 + v12;
  BOOL v14 = (void *)((v8 + v12 + a1) & ~v12);
  uint64_t v15 = (const void *)((v13 + a2) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    int v16 = *(_DWORD *)(v11 + 84);
    size_t v17 = *(void *)(v11 + 64);
    if (v16) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v17 + 1;
    }
    memcpy(v14, v15, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
    unsigned int v20 = *(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56);
    uint64_t v19 = v11 + 56;
    v20(v14, 0, 1, v10);
    int v16 = *(_DWORD *)(v19 + 28);
    size_t v17 = *(void *)(v19 + 8);
  }
  if (v16) {
    size_t v21 = v17;
  }
  else {
    size_t v21 = v17 + 1;
  }
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = v23 + 16;
  uint64_t v25 = *(unsigned __int8 *)(v23 + 80);
  unint64_t v26 = ((unint64_t)v14 + v21 + v25) & ~v25;
  unint64_t v27 = ((unint64_t)v15 + v21 + v25) & ~v25;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 16))(v26, v27, v22);
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v29 = v28 + 16;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = *(void *)(v24 + 48) + v30;
  unint64_t v32 = (v31 + v26) & ~v30;
  unint64_t v33 = (v31 + v27) & ~v30;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v28 + 16))(v32, v33, v9);
  uint64_t v34 = *(void *)(v29 + 48) + 7;
  uint64_t v35 = (void *)((v34 + v32) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v36 = (void *)((v34 + v33) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v37 = v36[1];
  void *v35 = *v36;
  v35[1] = v37;
  swift_retain();
  return a1;
}

uint64_t sub_24E5BF1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v8 + v12;
  BOOL v14 = (void *)((v8 + v12 + a1) & ~v12);
  uint64_t v15 = (void *)((v13 + a2) & ~v12);
  int v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v17 = v16(v14, 1, v10);
  int v18 = v16(v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v14, v15, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_12;
    }
    int v19 = *(_DWORD *)(v11 + 84);
    size_t v20 = *(void *)(v11 + 64);
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v14, v15, v10);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    int v19 = *(_DWORD *)(v11 + 84);
    size_t v20 = *(void *)(v11 + 64);
  }
  if (v19) {
    size_t v21 = v20;
  }
  else {
    size_t v21 = v20 + 1;
  }
  memcpy(v14, v15, v21);
LABEL_12:
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v22 = *(void *)(v11 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v11 + 64) + 1;
  }
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = v24 + 24;
  uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
  unint64_t v27 = ((unint64_t)v14 + v22 + v26) & ~v26;
  unint64_t v28 = ((unint64_t)v15 + v22 + v26) & ~v26;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 24))(v27, v28, v23);
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v29 + 24;
  uint64_t v31 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = *(void *)(v25 + 40) + v31;
  unint64_t v33 = (v32 + v27) & ~v31;
  unint64_t v34 = (v32 + v28) & ~v31;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v29 + 24))(v33, v34, v9);
  uint64_t v35 = *(void *)(v30 + 40) + 7;
  uint64_t v36 = (void *)((v35 + v33) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v37 = (void *)((v35 + v34) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24E5BF4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v8 + v12;
  BOOL v14 = (void *)((v8 + v12 + a1) & ~v12);
  uint64_t v15 = (const void *)((v13 + a2) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    int v16 = *(_DWORD *)(v11 + 84);
    size_t v17 = *(void *)(v11 + 64);
    if (v16) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v17 + 1;
    }
    memcpy(v14, v15, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
    size_t v20 = *(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56);
    uint64_t v19 = v11 + 56;
    v20(v14, 0, 1, v10);
    int v16 = *(_DWORD *)(v19 + 28);
    size_t v17 = *(void *)(v19 + 8);
  }
  if (v16) {
    size_t v21 = v17;
  }
  else {
    size_t v21 = v17 + 1;
  }
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = v23 + 32;
  uint64_t v25 = *(unsigned __int8 *)(v23 + 80);
  unint64_t v26 = ((unint64_t)v14 + v21 + v25) & ~v25;
  unint64_t v27 = ((unint64_t)v15 + v21 + v25) & ~v25;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 32))(v26, v27, v22);
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v29 = v28 + 32;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = *(void *)(v24 + 32) + v30;
  unint64_t v32 = (v31 + v26) & ~v30;
  unint64_t v33 = (v31 + v27) & ~v30;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v28 + 32))(v32, v33, v9);
  *(_OWORD *)((*(void *)(v29 + 32) + 7 + v32) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v29 + 32)
                                                                                       + 7
                                                                                       + v33) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24E5BF75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v8 + v12;
  BOOL v14 = (void *)((v8 + v12 + a1) & ~v12);
  uint64_t v15 = (void *)((v13 + a2) & ~v12);
  int v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v17 = v16(v14, 1, v10);
  int v18 = v16(v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v14, v15, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_12;
    }
    int v19 = *(_DWORD *)(v11 + 84);
    size_t v20 = *(void *)(v11 + 64);
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v14, v15, v10);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    int v19 = *(_DWORD *)(v11 + 84);
    size_t v20 = *(void *)(v11 + 64);
  }
  if (v19) {
    size_t v21 = v20;
  }
  else {
    size_t v21 = v20 + 1;
  }
  memcpy(v14, v15, v21);
LABEL_12:
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v22 = *(void *)(v11 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v11 + 64) + 1;
  }
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = v24 + 40;
  uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
  unint64_t v27 = ((unint64_t)v14 + v22 + v26) & ~v26;
  unint64_t v28 = ((unint64_t)v15 + v22 + v26) & ~v26;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 40))(v27, v28, v23);
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v29 + 40;
  uint64_t v31 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = *(void *)(v25 + 24) + v31;
  unint64_t v33 = (v32 + v27) & ~v31;
  unint64_t v34 = (v32 + v28) & ~v31;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v29 + 40))(v33, v34, v9);
  *(_OWORD *)((*(void *)(v30 + 24) + 7 + v33) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v30 + 24)
                                                                                       + 7
                                                                                       + v34) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_24E5BFA5C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v45 = AssociatedTypeWitness;
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v43 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v43 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned int *)(v8 + 84);
  unsigned int v11 = v10 - 1;
  if (!v10) {
    unsigned int v11 = 0;
  }
  unsigned int v46 = v6;
  unsigned int v44 = v11;
  if (v11 > v6) {
    unsigned int v6 = v11;
  }
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  unsigned int v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v6) {
    unsigned int v15 = v6;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v16 = *(void *)(v7 - 8);
  unsigned int v17 = *(_DWORD *)(v16 + 84);
  uint64_t v18 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v20 = *(void *)(*(void *)(v12 - 8) + 64);
  uint64_t v21 = *(unsigned __int8 *)(v16 + 80);
  if (v17 <= v15) {
    unsigned int v22 = v15;
  }
  else {
    unsigned int v22 = *(_DWORD *)(v16 + 84);
  }
  if (v22 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  if (v10) {
    uint64_t v23 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v23 = *(void *)(v8 + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v24 = *(void *)(v5 + 64) + v18;
  uint64_t v25 = *(void *)(*(void *)(v7 - 8) + 64) + 7;
  uint64_t v26 = a1;
  if (v22 < a2)
  {
    unint64_t v27 = ((v25 + ((v20 + v21 + ((v23 + v19 + (v24 & ~v18)) & ~v19)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 16;
    if ((v27 & 0xFFFFFFF8) != 0) {
      unsigned int v28 = 2;
    }
    else {
      unsigned int v28 = a2 - v22 + 1;
    }
    if (v28 >= 0x10000) {
      unsigned int v29 = 4;
    }
    else {
      unsigned int v29 = 2;
    }
    if (v28 < 0x100) {
      unsigned int v29 = 1;
    }
    if (v28 >= 2) {
      uint64_t v30 = v29;
    }
    else {
      uint64_t v30 = 0;
    }
    switch(v30)
    {
      case 1:
        int v31 = *((unsigned __int8 *)a1 + v27);
        if (!*((unsigned char *)a1 + v27)) {
          break;
        }
        goto LABEL_33;
      case 2:
        int v31 = *(unsigned __int16 *)((char *)a1 + v27);
        if (*(_WORD *)((char *)a1 + v27)) {
          goto LABEL_33;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24E5BFE9CLL);
      case 4:
        int v31 = *(_DWORD *)((char *)a1 + v27);
        if (!v31) {
          break;
        }
LABEL_33:
        int v32 = v31 - 1;
        if ((v27 & 0xFFFFFFF8) != 0)
        {
          int v32 = 0;
          int v33 = *a1;
        }
        else
        {
          int v33 = 0;
        }
        return v22 + (v33 | v32) + 1;
      default:
        break;
    }
  }
  if (v46 == v22)
  {
    uint64_t v34 = v45;
    uint64_t v35 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v36 = v46;
LABEL_38:
    return v35(v26, v36, v34);
  }
  unint64_t v38 = ((unint64_t)a1 + v24) & ~v18;
  if (v44 == v22)
  {
    if (v10 >= 2)
    {
      unsigned int v41 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v38, v10, v43);
      if (v41 >= 2) {
        return v41 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  uint64_t v39 = (v38 + v23 + v19) & ~v19;
  if (v14 == v22)
  {
    unsigned int v40 = *(uint64_t (**)(uint64_t))(v13 + 48);
    return v40(v39);
  }
  else
  {
    uint64_t v26 = (_DWORD *)((v39 + v20 + v21) & ~v21);
    if (v17 == v22)
    {
      uint64_t v35 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v36 = *(unsigned int *)(v16 + 84);
      uint64_t v34 = v7;
      goto LABEL_38;
    }
    unint64_t v42 = *(void *)(((unint64_t)v26 + v25) & 0xFFFFFFFFFFFFFFF8);
    if (v42 >= 0xFFFFFFFF) {
      LODWORD(v42) = -1;
    }
    return (v42 + 1);
  }
}

void sub_24E5BFEB0(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v47 = v7;
  uint64_t v48 = AssociatedTypeWitness;
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v46 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v46 - 8);
  int v11 = *(_DWORD *)(v10 + 84);
  if (v11) {
    unsigned int v12 = v11 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  unsigned int v49 = v8;
  if (v12 > v8) {
    unsigned int v8 = v12;
  }
  uint64_t v13 = *(unsigned int *)(v10 + 84);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = a2;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v17 = v16;
  unsigned int v18 = *(_DWORD *)(v16 + 84);
  if (v18 <= v8) {
    unsigned int v19 = v8;
  }
  else {
    unsigned int v19 = *(_DWORD *)(v16 + 84);
  }
  uint64_t v20 = *(void *)(v9 - 8);
  uint64_t v21 = *(unsigned int *)(v20 + 84);
  uint64_t v22 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v24 = *(void *)(v16 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v26 = *(void *)(v20 + 64);
  if (v21 <= v19) {
    unsigned int v27 = v19;
  }
  else {
    unsigned int v27 = *(_DWORD *)(v20 + 84);
  }
  if (v27 <= 0x7FFFFFFF) {
    unsigned int v27 = 0x7FFFFFFF;
  }
  uint64_t v28 = *(void *)(v7 + 64) + v22;
  if (v13) {
    uint64_t v29 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v29 = *(void *)(v10 + 64) + 1;
  }
  size_t v30 = ((v26 + 7 + ((v24 + v25 + ((v29 + v23 + (v28 & ~v22)) & ~v23)) & ~v25)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v26
       + 7
       + ((v24 + v25 + ((v29 + v23 + (v28 & ~v22)) & ~v23)) & ~v25)) & 0xFFFFFFF8) == 0xFFFFFFF0)
    unsigned int v31 = a3 - v27 + 1;
  else {
    unsigned int v31 = 2;
  }
  if (v31 >= 0x10000) {
    int v32 = 4;
  }
  else {
    int v32 = 2;
  }
  if (v31 < 0x100) {
    int v32 = 1;
  }
  if (v31 >= 2) {
    unsigned int v33 = v32;
  }
  else {
    unsigned int v33 = 0;
  }
  if (v27 < a3) {
    uint64_t v34 = v33;
  }
  else {
    uint64_t v34 = 0;
  }
  if (v15 > v27)
  {
    if (((v26
         + 7
         + ((v24
           + v25
           + ((v29 + v23 + (v28 & ~v22)) & ~v23)) & ~v25)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      int v35 = v15 - v27;
    else {
      int v35 = 1;
    }
    if (((v26
         + 7
         + ((v24
           + v25
           + ((v29 + v23 + (v28 & ~v22)) & ~v23)) & ~v25)) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v36 = ~v27 + v15;
      bzero(a1, v30);
      *a1 = v36;
    }
    switch(v34)
    {
      case 1:
        *((unsigned char *)a1 + v30) = v35;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v30) = v35;
        return;
      case 3:
        goto LABEL_66;
      case 4:
        *(_DWORD *)((char *)a1 + v30) = v35;
        return;
      default:
        return;
    }
  }
  uint64_t v37 = ~v22;
  unint64_t v38 = a1;
  switch(v34)
  {
    case 1:
      *((unsigned char *)a1 + v30) = 0;
      if (!v15) {
        return;
      }
      goto LABEL_46;
    case 2:
      *(_WORD *)((char *)a1 + v30) = 0;
      if (!v15) {
        return;
      }
      goto LABEL_46;
    case 3:
LABEL_66:
      __break(1u);
      JUMPOUT(0x24E5C031CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v30) = 0;
      goto LABEL_45;
    default:
LABEL_45:
      if (!v15) {
        return;
      }
LABEL_46:
      if (v49 == v27)
      {
        uint64_t v39 = v48;
        unsigned int v40 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v47 + 56);
        uint64_t v41 = v49;
LABEL_50:
        v40(v38, v15, v41, v39);
        return;
      }
      unint64_t v38 = (_DWORD *)(((unint64_t)a1 + v28) & v37);
      if (v12 == v27)
      {
        uint64_t v15 = (v15 + 1);
        unsigned int v40 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v10 + 56);
        uint64_t v41 = v13;
        uint64_t v39 = v46;
        goto LABEL_50;
      }
      uint64_t v42 = ((unint64_t)v38 + v29 + v23) & ~v23;
      if (v18 != v27)
      {
        unint64_t v38 = (_DWORD *)((v42 + v24 + v25) & ~v25);
        if (v21 != v27)
        {
          unsigned int v44 = (void *)(((unint64_t)v38 + v26 + 7) & 0xFFFFFFFFFFFFFFF8);
          if ((v15 & 0x80000000) != 0)
          {
            uint64_t v45 = v15 ^ 0x80000000;
            v44[1] = 0;
          }
          else
          {
            uint64_t v45 = (v15 - 1);
          }
          void *v44 = v45;
          return;
        }
        unsigned int v40 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v20 + 56);
        uint64_t v41 = v21;
        uint64_t v39 = v9;
        goto LABEL_50;
      }
      uint64_t v43 = *(void (**)(uint64_t))(v17 + 56);
      v43(v42);
      return;
  }
}

uint64_t sub_24E5C0344()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_24E864388();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_24E864388();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24E5C0454(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v6 = *(void *)(v5 + 64);
  }
  else {
    size_t v6 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  size_t v10 = v6 + v9;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v11 = *(void *)(v8 + 64);
  }
  else {
    size_t v11 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || ((v6 + v9) & ~v9) + v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = v7;
    uint64_t v17 = ~v9;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v6);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    }
    unsigned int v18 = (const void *)(((unint64_t)a2 + v10) & v17);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v18, 1, v16))
    {
      memcpy((void *)(((unint64_t)a1 + v10) & v17), v18, v11);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v17, v18, v16);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v8 + 56))(((unint64_t)a1 + v10) & v17, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t sub_24E5C06D8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  }
  int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v5 + a1;
  if (!v4) {
    ++v8;
  }
  unint64_t v9 = (v8 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6);
  if (!result)
  {
    size_t v11 = *(uint64_t (**)(unint64_t, uint64_t))(v12 + 8);
    return v11(v9, v6);
  }
  return result;
}

void *sub_24E5C0870(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    int v6 = *(_DWORD *)(v5 + 84);
    size_t v7 = *(void *)(v5 + 64);
    if (v6) {
      size_t v8 = v7;
    }
    else {
      size_t v8 = v7 + 1;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    size_t v10 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v9 = v5 + 56;
    v10(a1, 0, 1, AssociatedTypeWitness);
    int v6 = *(_DWORD *)(v9 + 28);
    size_t v7 = *(void *)(v9 + 8);
  }
  if (v6) {
    size_t v11 = v7;
  }
  else {
    size_t v11 = v7 + 1;
  }
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v11 + v14;
  uint64_t v16 = (void *)(((unint64_t)a1 + v11 + v14) & ~v14);
  uint64_t v17 = (const void *)(((unint64_t)a2 + v15) & ~v14);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
  {
    if (*(_DWORD *)(v13 + 84)) {
      size_t v18 = *(void *)(v13 + 64);
    }
    else {
      size_t v18 = *(void *)(v13 + 64) + 1;
    }
    memcpy(v16, v17, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v16, v17, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  }
  return a1;
}

void *sub_24E5C0A7C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  if (v9) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v10 + 1;
  }
  memcpy(a1, a2, v11);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v12 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (void *)(((unint64_t)a1 + v12 + v15) & ~v15);
  size_t v18 = (void *)(((unint64_t)a2 + v16) & ~v15);
  unsigned int v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v20 = v19(v17, 1, v13);
  int v21 = v19(v18, 1, v13);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v17, v18, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      return a1;
    }
    int v22 = *(_DWORD *)(v14 + 84);
    size_t v23 = *(void *)(v14 + 64);
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v17, v18, v13);
      return a1;
    }
    uint64_t v25 = *(void (**)(void *, uint64_t))(v14 + 8);
    uint64_t v24 = v14 + 8;
    v25(v17, v13);
    int v22 = *(_DWORD *)(v24 + 76);
    size_t v23 = *(void *)(v24 + 56);
  }
  if (v22) {
    size_t v26 = v23;
  }
  else {
    size_t v26 = v23 + 1;
  }
  memcpy(v17, v18, v26);
  return a1;
}

void *sub_24E5C0D6C(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    int v6 = *(_DWORD *)(v5 + 84);
    size_t v7 = *(void *)(v5 + 64);
    if (v6) {
      size_t v8 = v7;
    }
    else {
      size_t v8 = v7 + 1;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    size_t v10 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v9 = v5 + 56;
    v10(a1, 0, 1, AssociatedTypeWitness);
    int v6 = *(_DWORD *)(v9 + 28);
    size_t v7 = *(void *)(v9 + 8);
  }
  if (v6) {
    size_t v11 = v7;
  }
  else {
    size_t v11 = v7 + 1;
  }
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v11 + v14;
  uint64_t v16 = (void *)(((unint64_t)a1 + v11 + v14) & ~v14);
  uint64_t v17 = (const void *)(((unint64_t)a2 + v15) & ~v14);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
  {
    if (*(_DWORD *)(v13 + 84)) {
      size_t v18 = *(void *)(v13 + 64);
    }
    else {
      size_t v18 = *(void *)(v13 + 64) + 1;
    }
    memcpy(v16, v17, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v16, v17, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  }
  return a1;
}

void *sub_24E5C0F78(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  if (v9) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v10 + 1;
  }
  memcpy(a1, a2, v11);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v12 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (void *)(((unint64_t)a1 + v12 + v15) & ~v15);
  size_t v18 = (void *)(((unint64_t)a2 + v16) & ~v15);
  unsigned int v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v20 = v19(v17, 1, v13);
  int v21 = v19(v18, 1, v13);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v17, v18, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      return a1;
    }
    int v22 = *(_DWORD *)(v14 + 84);
    size_t v23 = *(void *)(v14 + 64);
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v17, v18, v13);
      return a1;
    }
    uint64_t v25 = *(void (**)(void *, uint64_t))(v14 + 8);
    uint64_t v24 = v14 + 8;
    v25(v17, v13);
    int v22 = *(_DWORD *)(v24 + 76);
    size_t v23 = *(void *)(v24 + 56);
  }
  if (v22) {
    size_t v26 = v23;
  }
  else {
    size_t v26 = v23 + 1;
  }
  memcpy(v17, v18, v26);
  return a1;
}

uint64_t sub_24E5C1268(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = v7;
  int v9 = *(_DWORD *)(v7 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= v6) {
    unsigned int v11 = v6;
  }
  else {
    unsigned int v11 = v10;
  }
  if (v5) {
    uint64_t v12 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v4 + 64) + 1;
  }
  uint64_t v13 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = *(void *)(v7 + 64);
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = v14 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v16 = v12 + v13;
  if (a2 <= v11) {
    goto LABEL_36;
  }
  uint64_t v17 = v15 + (v16 & ~v13);
  char v18 = 8 * v17;
  if (v17 <= 3)
  {
    unsigned int v20 = ((a2 - v11 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v20))
    {
      int v19 = *(_DWORD *)((char *)a1 + v17);
      if (!v19) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v20 > 0xFF)
    {
      int v19 = *(unsigned __int16 *)((char *)a1 + v17);
      if (!*(unsigned __int16 *)((char *)a1 + v17)) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v20 < 2)
    {
LABEL_36:
      if (v11)
      {
        if (v6 >= v10) {
          unsigned int v24 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v4 + 48))(a1, v5, AssociatedTypeWitness);
        }
        else {
          unsigned int v24 = (*(uint64_t (**)(unint64_t))(v8 + 48))(((unint64_t)a1 + v16) & ~v13);
        }
        if (v24 >= 2) {
          return v24 - 1;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v19 = *((unsigned __int8 *)a1 + v17);
  if (!*((unsigned char *)a1 + v17)) {
    goto LABEL_36;
  }
LABEL_26:
  int v21 = (v19 - 1) << v18;
  if (v17 > 3) {
    int v21 = 0;
  }
  if (v17)
  {
    if (v17 <= 3) {
      int v22 = v17;
    }
    else {
      int v22 = 4;
    }
    switch(v22)
    {
      case 2:
        int v23 = *a1;
        break;
      case 3:
        int v23 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v23 = *(_DWORD *)a1;
        break;
      default:
        int v23 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v23 = 0;
  }
  return v11 + (v23 | v21) + 1;
}

void sub_24E5C151C(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v36 = AssociatedTypeWitness;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  int v10 = 0;
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = v11;
  int v13 = *(_DWORD *)(v11 + 84);
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v14 <= v9) {
    unsigned int v15 = v9;
  }
  else {
    unsigned int v15 = v14;
  }
  if (v8) {
    size_t v16 = *(void *)(v7 + 64);
  }
  else {
    size_t v16 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  size_t v18 = v16 + v17;
  size_t v19 = *(void *)(v11 + 64);
  if (!v13) {
    ++v19;
  }
  size_t v20 = ((v16 + v17) & ~v17) + v19;
  if (a3 <= v15) {
    goto LABEL_22;
  }
  if (v20 <= 3)
  {
    unsigned int v21 = ((a3 - v15 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
    if (HIWORD(v21))
    {
      int v10 = 4;
      if (v15 >= a2) {
        goto LABEL_30;
      }
      goto LABEL_23;
    }
    if (v21 >= 0x100) {
      int v10 = 2;
    }
    else {
      int v10 = v21 > 1;
    }
LABEL_22:
    if (v15 >= a2) {
      goto LABEL_30;
    }
    goto LABEL_23;
  }
  int v10 = 1;
  if (v15 >= a2)
  {
LABEL_30:
    uint64_t v25 = ~v17;
    size_t v26 = a1;
    switch(v10)
    {
      case 1:
        a1[v20] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_35;
      case 2:
        *(_WORD *)&a1[v20] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_35;
      case 3:
        goto LABEL_77;
      case 4:
        *(_DWORD *)&a1[v20] = 0;
        goto LABEL_34;
      default:
LABEL_34:
        if (a2)
        {
LABEL_35:
          if (v9 >= v14)
          {
            if (v9 >= a2)
            {
              int v35 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56);
              v35(a1, a2 + 1, v8, v36);
            }
            else
            {
              if (v16 <= 3) {
                int v31 = ~(-1 << (8 * v16));
              }
              else {
                int v31 = -1;
              }
              if (v16)
              {
                int v32 = v31 & (~v9 + a2);
                if (v16 <= 3) {
                  int v33 = v16;
                }
                else {
                  int v33 = 4;
                }
                bzero(v26, v16);
                switch(v33)
                {
                  case 2:
                    *(_WORD *)size_t v26 = v32;
                    break;
                  case 3:
                    *(_WORD *)size_t v26 = v32;
                    void v26[2] = BYTE2(v32);
                    break;
                  case 4:
                    *(_DWORD *)size_t v26 = v32;
                    break;
                  default:
                    unsigned char *v26 = v32;
                    break;
                }
              }
            }
          }
          else
          {
            unsigned int v27 = (unsigned char *)((unint64_t)&a1[v18] & v25);
            if (v14 >= a2)
            {
              uint64_t v34 = *(void (**)(unint64_t, void))(v12 + 56);
              v34((unint64_t)&v26[v18] & v25, a2 + 1);
            }
            else
            {
              if (v19 <= 3) {
                int v28 = ~(-1 << (8 * v19));
              }
              else {
                int v28 = -1;
              }
              if (v19)
              {
                int v29 = v28 & (~v14 + a2);
                if (v19 <= 3) {
                  int v30 = v19;
                }
                else {
                  int v30 = 4;
                }
                bzero(v27, v19);
                switch(v30)
                {
                  case 2:
                    *(_WORD *)unsigned int v27 = v29;
                    break;
                  case 3:
                    *(_WORD *)unsigned int v27 = v29;
                    v27[2] = BYTE2(v29);
                    break;
                  case 4:
                    *(_DWORD *)unsigned int v27 = v29;
                    break;
                  default:
                    *unsigned int v27 = v29;
                    break;
                }
              }
            }
          }
        }
        break;
    }
    return;
  }
LABEL_23:
  unsigned int v22 = ~v15 + a2;
  if (v20 < 4)
  {
    int v23 = (v22 >> (8 * v20)) + 1;
    if (v20)
    {
      int v24 = v22 & ~(-1 << (8 * v20));
      bzero(a1, v20);
      if (v20 == 3)
      {
        *(_WORD *)a1 = v24;
        a1[2] = BYTE2(v24);
      }
      else if (v20 == 2)
      {
        *(_WORD *)a1 = v24;
      }
      else
      {
        *a1 = v24;
      }
    }
  }
  else
  {
    bzero(a1, v20);
    *(_DWORD *)a1 = v22;
    int v23 = 1;
  }
  switch(v10)
  {
    case 1:
      a1[v20] = v23;
      break;
    case 2:
      *(_WORD *)&a1[v20] = v23;
      break;
    case 3:
LABEL_77:
      __break(1u);
      JUMPOUT(0x24E5C19ACLL);
    case 4:
      *(_DWORD *)&a1[v20] = v23;
      break;
    default:
      return;
  }
}

uint64_t sub_24E5C19F4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24E5C1AC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_24E5C1C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_24E5C1CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_24E5C1D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_24E5C1E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_24E5C1EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_24E5C1F64(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_24E5C215C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x24E5C2428);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          int v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          int v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for AsyncMerge2Sequence.Iterator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5C2468()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E5C2484()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();

  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_24E5C2528()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E5C2544()
{
  return MEMORY[0x263F8E658];
}

uint64_t sub_24E5C2550()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for AsyncTimerSequence.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E5C2584()
{
  uint64_t AssociatedTypeWitness = sub_24E864388();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t AssociatedTypeWitness = sub_24E864388();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        uint64_t AssociatedTypeWitness = sub_24E864388();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_24E5C2730(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  if (*(_DWORD *)(v4 + 84)) {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64) + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  size_t __n = v5;
  uint64_t v8 = v5 + v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v40 = v9 + v7;
  if (*(_DWORD *)(v6 + 84)) {
    size_t v10 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    size_t v10 = v9 + 1;
  }
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v13;
  if (*(_DWORD *)(v12 + 84)) {
    uint64_t v15 = *(void *)(v12 + 64);
  }
  else {
    uint64_t v15 = *(void *)(v12 + 64) + 1;
  }
  int v16 = v7 | *(_DWORD *)(v4 + 80) | v13;
  uint64_t v17 = (v7 | *(unsigned char *)(v4 + 80) | v13);
  int v18 = v16 & 0x100000;
  if (v17 <= 7
    && v15
     + ((v10 + v14 + ((v40 + (v8 & ~(unint64_t)v7)) & ~(unint64_t)v7)) & ~v14) <= 0x18
    && v18 == 0)
  {
    size_t v35 = v15;
    size_t v36 = v10;
    uint64_t v37 = *(void *)(v11 - 8);
    uint64_t v38 = v11;
    unint64_t v22 = a1;
    unint64_t v23 = ~(unint64_t)v7;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v4 + 48))(a2, 1, v3))
    {
      memcpy(a1, a2, __n);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v3);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
    uint64_t v43 = ~v14;
    unint64_t v24 = ((unint64_t)a2 + v8) & v23;
    uint64_t v25 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    v25(((unint64_t)v22 + v8) & v23, v24, AssociatedTypeWitness);
    size_t v26 = (void *)((v40 + (((unint64_t)v22 + v8) & v23)) & v23);
    unsigned int v27 = (char *)((v40 + v24) & v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v27, 1, AssociatedTypeWitness))
    {
      size_t v28 = v36;
      memcpy(v26, v27, v36);
      uint64_t v30 = v37;
      uint64_t v29 = v38;
    }
    else
    {
      v25((unint64_t)v26, (unint64_t)v27, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v26, 0, 1, AssociatedTypeWitness);
      uint64_t v30 = v37;
      uint64_t v29 = v38;
      size_t v28 = v36;
    }
    int v31 = &v27[v28];
    int v32 = (void *)(((unint64_t)v26 + v28 + v14) & v43);
    int v33 = (const void *)((unint64_t)&v31[v14] & v43);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v33, 1, v29))
    {
      memcpy(v32, v33, v35);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v32, v33, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v29);
    }
  }
  else
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    unint64_t v22 = (uint64_t *)(v21 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  return v22;
}

uint64_t sub_24E5C2B20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + a1;
  if (!v5) {
    ++v11;
  }
  uint64_t v12 = (v11 + v10) & ~v10;
  int v13 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v13(v12, AssociatedTypeWitness);
  uint64_t v14 = *(void *)(v8 + 64);
  uint64_t v15 = (v14 + v10 + v12) & ~v10;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v15, 1, AssociatedTypeWitness)) {
    v13(v15, AssociatedTypeWitness);
  }
  int v16 = *(_DWORD *)(v9 + 84);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v15 + v14;
  if (!v16) {
    ++v19;
  }
  unint64_t v20 = (v19 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v23 = *(void *)(v17 - 8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v17);
  if (!result)
  {
    unint64_t v22 = *(uint64_t (**)(unint64_t, uint64_t))(v23 + 8);
    return v22(v20, v17);
  }
  return result;
}

void *sub_24E5C2DB4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = v14;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  int v33 = a1;
  unint64_t v17 = ((unint64_t)a1 + v12 + v16) & ~v16;
  unint64_t v18 = ((unint64_t)a2 + v12 + v16) & ~v16;
  uint64_t v19 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16);
  v19(v17, v18, AssociatedTypeWitness);
  size_t v20 = *(void *)(v14 + 64);
  size_t v21 = (v20 + v16 + v17) & ~v16;
  size_t v22 = (v20 + v16 + v18) & ~v16;
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v15 + 48))(v22, 1, AssociatedTypeWitness))
  {
    int v23 = *(_DWORD *)(v15 + 84);
    if (v23) {
      size_t v24 = v20;
    }
    else {
      size_t v24 = v20 + 1;
    }
    memcpy((void *)((v20 + v16 + v17) & ~v16), (const void *)((v20 + v16 + v18) & ~v16), v24);
  }
  else
  {
    v19((v20 + v16 + v17) & ~v16, (v20 + v16 + v18) & ~v16, AssociatedTypeWitness);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v15 + 56))((v20 + v16 + v17) & ~v16, 0, 1, AssociatedTypeWitness);
    int v23 = *(_DWORD *)(v15 + 84);
  }
  if (v23) {
    size_t v25 = v20;
  }
  else {
    size_t v25 = v20 + 1;
  }
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = (void *)((v25 + v28 + v21) & ~v28);
  uint64_t v30 = (const void *)((v25 + v28 + v22) & ~v28);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v30, 1, v26))
  {
    if (*(_DWORD *)(v27 + 84)) {
      size_t v31 = *(void *)(v27 + 64);
    }
    else {
      size_t v31 = *(void *)(v27 + 64) + 1;
    }
    memcpy(v29, v30, v31);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v29, v30, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
  }
  return v33;
}

void *sub_24E5C310C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = v15;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v43 = a1;
  unint64_t v18 = ((unint64_t)a1 + v13 + v17) & ~v17;
  unint64_t v19 = ((unint64_t)a2 + v13 + v17) & ~v17;
  size_t v20 = *(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 24);
  v20(v18, v19, AssociatedTypeWitness);
  size_t v21 = *(void *)(v15 + 64);
  size_t v22 = (void *)((v21 + v17 + v18) & ~v17);
  int v23 = (void *)((v21 + v17 + v19) & ~v17);
  size_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v18) = v24(v22, 1, AssociatedTypeWitness);
  int v25 = v24(v23, 1, AssociatedTypeWitness);
  if (v18)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v22, v23, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, AssociatedTypeWitness);
      goto LABEL_26;
    }
    int v26 = *(_DWORD *)(v16 + 84);
  }
  else
  {
    if (!v25)
    {
      v20((unint64_t)v22, (unint64_t)v23, AssociatedTypeWitness);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v22, AssociatedTypeWitness);
    int v26 = *(_DWORD *)(v16 + 84);
  }
  if (v26) {
    size_t v27 = v21;
  }
  else {
    size_t v27 = v21 + 1;
  }
  memcpy(v22, v23, v27);
LABEL_26:
  if (*(_DWORD *)(v16 + 84)) {
    size_t v28 = v21;
  }
  else {
    size_t v28 = v21 + 1;
  }
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  int v32 = (void *)(((unint64_t)v22 + v28 + v31) & ~v31);
  int v33 = (void *)(((unint64_t)v23 + v28 + v31) & ~v31);
  uint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v35 = v34(v32, 1, v29);
  int v36 = v34(v33, 1, v29);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 16))(v32, v33, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v29);
      return v43;
    }
    int v37 = *(_DWORD *)(v30 + 84);
    size_t v38 = *(void *)(v30 + 64);
  }
  else
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 24))(v32, v33, v29);
      return v43;
    }
    uint64_t v40 = *(void (**)(void *, uint64_t))(v30 + 8);
    uint64_t v39 = v30 + 8;
    v40(v32, v29);
    int v37 = *(_DWORD *)(v39 + 76);
    size_t v38 = *(void *)(v39 + 56);
  }
  if (v37) {
    size_t v41 = v38;
  }
  else {
    size_t v41 = v38 + 1;
  }
  memcpy(v32, v33, v41);
  return v43;
}

void *sub_24E5C35AC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    size_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = v14;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  int v33 = a1;
  unint64_t v17 = ((unint64_t)a1 + v12 + v16) & ~v16;
  unint64_t v18 = ((unint64_t)a2 + v12 + v16) & ~v16;
  unint64_t v19 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 32);
  v19(v17, v18, AssociatedTypeWitness);
  size_t v20 = *(void *)(v14 + 64);
  size_t v21 = (v20 + v16 + v17) & ~v16;
  size_t v22 = (v20 + v16 + v18) & ~v16;
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v15 + 48))(v22, 1, AssociatedTypeWitness))
  {
    int v23 = *(_DWORD *)(v15 + 84);
    if (v23) {
      size_t v24 = v20;
    }
    else {
      size_t v24 = v20 + 1;
    }
    memcpy((void *)((v20 + v16 + v17) & ~v16), (const void *)((v20 + v16 + v18) & ~v16), v24);
  }
  else
  {
    v19((v20 + v16 + v17) & ~v16, (v20 + v16 + v18) & ~v16, AssociatedTypeWitness);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v15 + 56))((v20 + v16 + v17) & ~v16, 0, 1, AssociatedTypeWitness);
    int v23 = *(_DWORD *)(v15 + 84);
  }
  if (v23) {
    size_t v25 = v20;
  }
  else {
    size_t v25 = v20 + 1;
  }
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = (void *)((v25 + v28 + v21) & ~v28);
  uint64_t v30 = (const void *)((v25 + v28 + v22) & ~v28);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v30, 1, v26))
  {
    if (*(_DWORD *)(v27 + 84)) {
      size_t v31 = *(void *)(v27 + 64);
    }
    else {
      size_t v31 = *(void *)(v27 + 64) + 1;
    }
    memcpy(v29, v30, v31);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 32))(v29, v30, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
  }
  return v33;
}

void *sub_24E5C3904(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = v15;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v43 = a1;
  unint64_t v18 = ((unint64_t)a1 + v13 + v17) & ~v17;
  unint64_t v19 = ((unint64_t)a2 + v13 + v17) & ~v17;
  size_t v20 = *(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 40);
  v20(v18, v19, AssociatedTypeWitness);
  size_t v21 = *(void *)(v15 + 64);
  size_t v22 = (void *)((v21 + v17 + v18) & ~v17);
  int v23 = (void *)((v21 + v17 + v19) & ~v17);
  size_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v18) = v24(v22, 1, AssociatedTypeWitness);
  int v25 = v24(v23, 1, AssociatedTypeWitness);
  if (v18)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v22, v23, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, AssociatedTypeWitness);
      goto LABEL_26;
    }
    int v26 = *(_DWORD *)(v16 + 84);
  }
  else
  {
    if (!v25)
    {
      v20((unint64_t)v22, (unint64_t)v23, AssociatedTypeWitness);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v22, AssociatedTypeWitness);
    int v26 = *(_DWORD *)(v16 + 84);
  }
  if (v26) {
    size_t v27 = v21;
  }
  else {
    size_t v27 = v21 + 1;
  }
  memcpy(v22, v23, v27);
LABEL_26:
  if (*(_DWORD *)(v16 + 84)) {
    size_t v28 = v21;
  }
  else {
    size_t v28 = v21 + 1;
  }
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  int v32 = (void *)(((unint64_t)v22 + v28 + v31) & ~v31);
  int v33 = (void *)(((unint64_t)v23 + v28 + v31) & ~v31);
  uint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v35 = v34(v32, 1, v29);
  int v36 = v34(v33, 1, v29);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 32))(v32, v33, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v29);
      return v43;
    }
    int v37 = *(_DWORD *)(v30 + 84);
    size_t v38 = *(void *)(v30 + 64);
  }
  else
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 40))(v32, v33, v29);
      return v43;
    }
    uint64_t v40 = *(void (**)(void *, uint64_t))(v30 + 8);
    uint64_t v39 = v30 + 8;
    v40(v32, v29);
    int v37 = *(_DWORD *)(v39 + 76);
    size_t v38 = *(void *)(v39 + 56);
  }
  if (v37) {
    size_t v41 = v38;
  }
  else {
    size_t v41 = v38 + 1;
  }
  memcpy(v32, v33, v41);
  return v43;
}

uint64_t sub_24E5C3DA4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  unsigned int v40 = v6;
  if (v8 <= v6) {
    unsigned int v9 = v6;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  unsigned int v10 = v8 - 1;
  if (!v8) {
    unsigned int v10 = 0;
  }
  unsigned int v38 = v10;
  if (v10 <= v9) {
    unsigned int v11 = v9;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v13 = v12;
  int v14 = *(_DWORD *)(v12 + 84);
  unsigned int v15 = v14 - 1;
  if (!v14) {
    unsigned int v15 = 0;
  }
  if (v15 <= v11) {
    unsigned int v15 = v11;
  }
  if (v5) {
    uint64_t v16 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v16 = *(void *)(v4 + 64) + 1;
  }
  uint64_t v17 = *(void *)(v7 + 64);
  if (v8) {
    uint64_t v18 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v18 = v17 + 1;
  }
  uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = *(void *)(v12 + 64);
  if (v14) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = v21 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = v16 + v19;
  uint64_t v24 = v17 + v19;
  if (a2 <= v15) {
    goto LABEL_45;
  }
  uint64_t v25 = v22 + ((v18 + v20 + ((v24 + (v23 & ~v19)) & ~v19)) & ~v20);
  char v26 = 8 * v25;
  if (v25 > 3) {
    goto LABEL_28;
  }
  unsigned int v28 = ((a2 - v15 + ~(-1 << v26)) >> v26) + 1;
  if (HIWORD(v28))
  {
    int v27 = *(_DWORD *)((char *)a1 + v25);
    if (!v27) {
      goto LABEL_45;
    }
    goto LABEL_35;
  }
  if (v28 > 0xFF)
  {
    int v27 = *(unsigned __int16 *)((char *)a1 + v25);
    if (!*(unsigned __int16 *)((char *)a1 + v25)) {
      goto LABEL_45;
    }
    goto LABEL_35;
  }
  if (v28 >= 2)
  {
LABEL_28:
    int v27 = *((unsigned __int8 *)a1 + v25);
    if (!*((unsigned char *)a1 + v25)) {
      goto LABEL_45;
    }
LABEL_35:
    int v29 = (v27 - 1) << v26;
    if (v25 > 3) {
      int v29 = 0;
    }
    if (v25)
    {
      if (v25 <= 3) {
        int v30 = v25;
      }
      else {
        int v30 = 4;
      }
      switch(v30)
      {
        case 2:
          int v31 = *a1;
          break;
        case 3:
          int v31 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v31 = *(_DWORD *)a1;
          break;
        default:
          int v31 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v31 = 0;
    }
    return v15 + (v31 | v29) + 1;
  }
LABEL_45:
  if (!v15) {
    return 0;
  }
  if (v40 == v15)
  {
    unsigned int v32 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v4 + 48))(a1, v5, v3);
LABEL_56:
    if (v32 >= 2) {
      return v32 - 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v34 = ~v19;
  unint64_t v35 = ((unint64_t)a1 + v23) & v34;
  if (v8 != v15)
  {
    unint64_t v37 = (v24 + v35) & v34;
    if (v38 == v15) {
      unsigned int v32 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v37, v8, AssociatedTypeWitness);
    }
    else {
      unsigned int v32 = (*(uint64_t (**)(unint64_t))(v13 + 48))((v37 + v20 + v18) & ~v20);
    }
    goto LABEL_56;
  }
  int v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);

  return v36(v35, v8, AssociatedTypeWitness);
}

void sub_24E5C4180(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v49 = v5;
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  unsigned int v50 = v7;
  if (v9 <= v7) {
    unsigned int v10 = v7;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  unsigned int v11 = v9 - 1;
  if (!v9) {
    unsigned int v11 = 0;
  }
  unsigned int v47 = v11;
  if (v11 <= v10) {
    unsigned int v12 = v10;
  }
  else {
    unsigned int v12 = v11;
  }
  int v13 = 0;
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v15 = v14;
  int v16 = *(_DWORD *)(v14 + 84);
  unsigned int v17 = v16 - 1;
  if (!v16) {
    unsigned int v17 = 0;
  }
  if (v17 <= v12) {
    unsigned int v18 = v12;
  }
  else {
    unsigned int v18 = v17;
  }
  if (v6) {
    uint64_t v19 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v20 = *(void *)(v8 + 64);
  if (v9) {
    uint64_t v21 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v21 = v20 + 1;
  }
  uint64_t v22 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v23 = v19 + v22;
  uint64_t v24 = v20 + v22;
  uint64_t v25 = (v24 + ((v19 + v22) & ~v22)) & ~v22;
  uint64_t v26 = *(unsigned __int8 *)(v14 + 80);
  size_t v27 = *(void *)(v14 + 64);
  if (v16) {
    size_t v28 = v27;
  }
  else {
    size_t v28 = v27 + 1;
  }
  size_t v29 = ((v21 + v26 + v25) & ~v26) + v28;
  if (a3 > v18)
  {
    if (v29 <= 3)
    {
      unsigned int v30 = ((a3 - v18 + ~(-1 << (8 * v29))) >> (8 * v29)) + 1;
      if (HIWORD(v30))
      {
        int v13 = 4;
      }
      else if (v30 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v30 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  if (v18 < a2)
  {
    unsigned int v31 = ~v18 + a2;
    if (v29 < 4)
    {
      int v32 = (v31 >> (8 * v29)) + 1;
      if (v29)
      {
        int v36 = v31 & ~(-1 << (8 * v29));
        bzero(a1, v29);
        if (v29 == 3)
        {
          *(_WORD *)a1 = v36;
          a1[2] = BYTE2(v36);
        }
        else if (v29 == 2)
        {
          *(_WORD *)a1 = v36;
        }
        else
        {
          *a1 = v36;
        }
      }
    }
    else
    {
      bzero(a1, v29);
      *(_DWORD *)a1 = v31;
      int v32 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v29] = v32;
        return;
      case 2:
        *(_WORD *)&a1[v29] = v32;
        return;
      case 3:
        goto LABEL_82;
      case 4:
        *(_DWORD *)&a1[v29] = v32;
        return;
      default:
        return;
    }
  }
  uint64_t v33 = ~v22;
  uint64_t v34 = ~v26;
  unint64_t v35 = a1;
  switch(v13)
  {
    case 1:
      a1[v29] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_46;
    case 2:
      *(_WORD *)&a1[v29] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_46;
    case 3:
LABEL_82:
      __break(1u);
      JUMPOUT(0x24E5C4690);
    case 4:
      *(_DWORD *)&a1[v29] = 0;
      goto LABEL_45;
    default:
LABEL_45:
      if (!a2) {
        return;
      }
LABEL_46:
      if (v50 == v18)
      {
        uint64_t v37 = a2 + 1;
        unsigned int v38 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
        uint64_t v39 = v6;
        uint64_t v40 = v4;
LABEL_49:
        v38(v35, v37, v39, v40);
        return;
      }
      unint64_t v35 = (unsigned char *)((unint64_t)&a1[v23] & v33);
      if (v9 == v18)
      {
        unsigned int v38 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        uint64_t v37 = a2;
        goto LABEL_56;
      }
      unint64_t v35 = (unsigned char *)((unint64_t)&v35[v24] & v33);
      if (v47 == v18)
      {
        uint64_t v37 = a2 + 1;
        unsigned int v38 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
LABEL_56:
        uint64_t v39 = v9;
        uint64_t v40 = AssociatedTypeWitness;
        goto LABEL_49;
      }
      size_t v41 = (unsigned char *)((unint64_t)&v35[v26 + v21] & v34);
      if (v17 >= a2)
      {
        uint64_t v45 = *(void (**)(unint64_t, void))(v15 + 56);
        unint64_t v46 = (unint64_t)&v35[v26 + v21] & v34;
        v45(v46, a2 + 1);
      }
      else
      {
        if (v28 <= 3) {
          int v42 = ~(-1 << (8 * v28));
        }
        else {
          int v42 = -1;
        }
        if (v28)
        {
          int v43 = v42 & (~v17 + a2);
          if (v28 <= 3) {
            int v44 = v28;
          }
          else {
            int v44 = 4;
          }
          bzero(v41, v28);
          switch(v44)
          {
            case 2:
              *(_WORD *)size_t v41 = v43;
              break;
            case 3:
              *(_WORD *)size_t v41 = v43;
              v41[2] = BYTE2(v43);
              break;
            case 4:
              *(_DWORD *)size_t v41 = v43;
              break;
            default:
              *size_t v41 = v43;
              break;
          }
        }
      }
      return;
  }
}

uint64_t sub_24E5C46C8()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_24E864388();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24E5C4774(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v6 = *(void *)(v5 + 64);
  }
  else {
    size_t v6 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v6 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  else
  {
    uint64_t v11 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v6);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_24E5C48CC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, AssociatedTypeWitness);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, AssociatedTypeWitness);
  }
  return result;
}

void *sub_24E5C49A0(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v6 = *(void *)(v5 + 64);
    }
    else {
      size_t v6 = *(void *)(v5 + 64) + 1;
    }
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_24E5C4AA0(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    unsigned int v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

void *sub_24E5C4C18(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v6 = *(void *)(v5 + 64);
    }
    else {
      size_t v6 = *(void *)(v5 + 64) + 1;
    }
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_24E5C4D18(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    unsigned int v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

uint64_t sub_24E5C4E90(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  unsigned int v7 = v6 - 1;
  if (!v6) {
    unsigned int v7 = 0;
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!v6) {
    ++v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 > v7)
  {
    char v9 = 8 * v8;
    if (v8 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((a2 - v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v8);
        if (!*((unsigned char *)a1 + v8)) {
          goto LABEL_23;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v8 > 3) {
          int v12 = 0;
        }
        if (v8)
        {
          if (v8 > 3) {
            LODWORD(v8) = 4;
          }
          switch((int)v8)
          {
            case 2:
              LODWORD(v8) = *a1;
              break;
            case 3:
              LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v8) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v8) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v7 + (v8 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v6 < 2) {
    return 0;
  }
  unsigned int v14 = (*(uint64_t (**)(unsigned __int16 *))(v5 + 48))(a1);
  if (v14 >= 2) {
    return v14 - 1;
  }
  else {
    return 0;
  }
}

void sub_24E5C504C(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  if (a3 <= v9) {
    goto LABEL_12;
  }
  if (v10 <= 3)
  {
    unsigned int v11 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v11))
    {
      int v6 = 4;
      if (v9 >= a2) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
    if (v11 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v11 > 1;
    }
LABEL_12:
    if (v9 >= a2) {
      goto LABEL_20;
    }
    goto LABEL_13;
  }
  int v6 = 1;
  if (v9 >= a2)
  {
LABEL_20:
    switch(v6)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        goto LABEL_24;
      default:
LABEL_24:
        if (a2)
        {
LABEL_25:
          if (v8 >= 2)
          {
            uint64_t v15 = *(void (**)(unsigned char *, void))(v7 + 56);
            v15(a1, a2 + 1);
          }
        }
        break;
    }
    return;
  }
LABEL_13:
  unsigned int v12 = ~v9 + a2;
  if (v10 < 4)
  {
    int v13 = (v12 >> (8 * v10)) + 1;
    if (v10)
    {
      int v14 = v12 & ~(-1 << (8 * v10));
      bzero(a1, v10);
      if (v10 == 3)
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
      else if (v10 == 2)
      {
        *(_WORD *)a1 = v14;
      }
      else
      {
        *a1 = v14;
      }
    }
  }
  else
  {
    bzero(a1, v10);
    *(_DWORD *)a1 = v12;
    int v13 = 1;
  }
  switch(v6)
  {
    case 1:
      a1[v10] = v13;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v13;
      break;
    case 3:
LABEL_38:
      __break(1u);
      JUMPOUT(0x24E5C52A8);
    case 4:
      *(_DWORD *)&a1[v10] = v13;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for AsyncSyncSequence.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E5C52E8()
{
  return swift_release();
}

uint64_t sub_24E5C52F0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t sub_24E5C5338(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_24E5C53AC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionLocation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncChunksOfCountOrSignalSequence.Iterator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E5C54D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E5C5524(a1, a2, a3);
}

uint64_t sub_24E5C54FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E5C5524(a1, a2, a3);
}

uint64_t sub_24E5C5524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E863FE8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_24E863FD8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24E569A98(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24E863F18();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

Swift::Double __swiftcall unsafeMainUIScreenScale()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E860EA8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2C80);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 1;
  uint64_t v4 = dispatch_group_create();
  dispatch_group_enter(v4);
  uint64_t v5 = sub_24E863FE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v3;
  _OWORD v6[5] = &unk_2698F2C78;
  v6[6] = 0;
  v6[7] = v4;
  swift_retain();
  uint64_t v7 = v4;
  sub_24E5C5524((uint64_t)v2, (uint64_t)&unk_2698F2C90, (uint64_t)v6);
  swift_release();
  sub_24E8642A8();
  if (*(unsigned char *)(v3 + 24))
  {
    __break(1u);
  }
  else
  {
    double v9 = *(double *)(v3 + 16);
    swift_release();

    return v9;
  }
  return result;
}

uint64_t sub_24E5C587C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_24E5C589C, 0, 0);
}

uint64_t sub_24E5C589C()
{
  v0[3] = self;
  v0[4] = sub_24E863FB8();
  v0[5] = sub_24E863FA8();
  uint64_t v2 = sub_24E863F18();
  return MEMORY[0x270FA2498](sub_24E5C5944, v2, v1);
}

uint64_t sub_24E5C5944()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release();
  *(void *)(v0 + 48) = objc_msgSend(v1, sel_mainScreen);
  return MEMORY[0x270FA2498](sub_24E5C59CC, 0, 0);
}

uint64_t sub_24E5C59CC()
{
  *(void *)(v0 + 56) = sub_24E863FA8();
  uint64_t v2 = sub_24E863F18();
  return MEMORY[0x270FA2498](sub_24E5C5A58, v2, v1);
}

uint64_t sub_24E5C5A58()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_release();
  objc_msgSend(v1, sel_scale);
  *(void *)(v0 + 64) = v2;

  return MEMORY[0x270FA2498](sub_24E5C5AD8, 0, 0);
}

uint64_t sub_24E5C5AD8()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t unsafeCurrentDeviceInterfaceIdiom()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E860EA8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2CA0);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 1;
  uint64_t v4 = dispatch_group_create();
  dispatch_group_enter(v4);
  uint64_t v5 = sub_24E863FE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v3;
  _OWORD v6[5] = &unk_2698F2C98;
  v6[6] = 0;
  v6[7] = v4;
  swift_retain();
  uint64_t v7 = v4;
  sub_24E5C5524((uint64_t)v2, (uint64_t)&unk_2698F2CB0, (uint64_t)v6);
  swift_release();
  uint64_t result = sub_24E8642A8();
  if (*(unsigned char *)(v3 + 24))
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 16);
    swift_release();

    return v9;
  }
  return result;
}

uint64_t sub_24E5C5CAC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_24E5C5CCC, 0, 0);
}

uint64_t sub_24E5C5CCC()
{
  v0[3] = self;
  v0[4] = sub_24E863FB8();
  v0[5] = sub_24E863FA8();
  uint64_t v2 = sub_24E863F18();
  return MEMORY[0x270FA2498](sub_24E5C5D74, v2, v1);
}

uint64_t sub_24E5C5D74()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release();
  *(void *)(v0 + 48) = objc_msgSend(v1, sel_currentDevice);
  return MEMORY[0x270FA2498](sub_24E5C5DFC, 0, 0);
}

uint64_t sub_24E5C5DFC()
{
  *(void *)(v0 + 56) = sub_24E863FA8();
  uint64_t v2 = sub_24E863F18();
  return MEMORY[0x270FA2498](sub_24E5C5E88, v2, v1);
}

uint64_t sub_24E5C5E88()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_release();
  *(void *)(v0 + 64) = objc_msgSend(v1, sel_userInterfaceIdiom);

  return MEMORY[0x270FA2498](sub_24E5C5F08, 0, 0);
}

uint64_t sub_24E5C5F08()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24E5C5F28()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  uint64_t v2 = sub_24E864388();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_24E5C5FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[3] = a4;
  _OWORD v7[4] = a7;
  uint64_t v10 = (uint64_t (*)(void *))((char *)a5 + *a5);
  uint64_t v8 = (void *)swift_task_alloc();
  v7[5] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_24E5C60CC;
  return v10(v7 + 2);
}

uint64_t sub_24E5C60CC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  *(void *)(v1 + 48) = *(void *)(v1 + 16);
  return MEMORY[0x270FA2498](sub_24E5C61E8, 0, 0);
}

uint64_t sub_24E5C61E8()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  *(void *)(v2 + 16) = v0[6];
  *(unsigned char *)(v2 + 24) = 0;
  dispatch_group_leave(v1);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_24E5C6258()
{
  uint64_t v3 = v0[4];
  uint64_t v2 = (int *)v0[5];
  uint64_t v4 = v0[7];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24E5699A4;
  v5[3] = v3;
  v5[4] = v4;
  uint64_t v8 = (uint64_t (*)(void *))((char *)v2 + *v2);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[5] = v6;
  void *v6 = v5;
  v6[1] = sub_24E5C60CC;
  return v8(v5 + 2);
}

uint64_t sub_24E5C6390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[3] = a4;
  _OWORD v7[4] = a7;
  uint64_t v10 = (uint64_t (*)(void *))((char *)a5 + *a5);
  uint64_t v8 = (void *)swift_task_alloc();
  v7[5] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_24E5C6470;
  return v10(v7 + 2);
}

uint64_t sub_24E5C6470()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  *(void *)(v1 + 48) = *(void *)(v1 + 16);
  return MEMORY[0x270FA2498](sub_24E5C68B8, 0, 0);
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24E5C65E0()
{
  uint64_t v3 = v0[4];
  uint64_t v2 = (int *)v0[5];
  uint64_t v4 = v0[7];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24E56A260;
  v5[3] = v3;
  v5[4] = v4;
  uint64_t v8 = (uint64_t (*)(void *))((char *)v2 + *v2);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[5] = v6;
  void *v6 = v5;
  v6[1] = sub_24E5C6470;
  return v8(v5 + 2);
}

uint64_t sub_24E5C6718()
{
  uint64_t result = sub_24E864388();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for UnsafeSendableBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24E5C67C4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E5699A4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2698F30C8 + dword_2698F30C8);
  return v6(a1, v4);
}

uint64_t sub_24E5C687C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t destroy for Actions()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Actions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v3 = *(void *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for Actions(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

_OWORD *assignWithTake for Actions(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Actions(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Actions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions()
{
  return &type metadata for Actions;
}

void *sub_24E5C6CD4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  long long v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *long long v3 = *a2;
    long long v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_24E8616F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_24E5C6DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_24E8616F8();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_24E5C6E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24E8616F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_24E5C6EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v4 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_24E8616F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t sub_24E5C6F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24E8616F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_24E5C6FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24E8616F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_24E5C7048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E5C705C);
}

uint64_t sub_24E5C705C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    if (*a1 <= 2u) {
      int v4 = 2;
    }
    else {
      int v4 = *a1;
    }
    unsigned int v5 = v4 - 2;
    if (*a1 >= 2u) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v9 = sub_24E8616F8();
    uint64_t v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = &a1[*(int *)(a3 + 24)];
    return v10(v12, a2, v11);
  }
}

uint64_t sub_24E5C7110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E5C7124);
}

unsigned char *sub_24E5C7124(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v5 = result;
  if (a3 == 253)
  {
    *__n128 result = a2 + 2;
  }
  else
  {
    uint64_t v7 = sub_24E8616F8();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DirectionsState()
{
  uint64_t result = qword_2698F2D40;
  if (!qword_2698F2D40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24E5C7214()
{
  uint64_t result = sub_24E8616F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24E5C72B4()
{
  uint64_t v0 = sub_24E8616F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DirectionsState();
  __swift_allocate_value_buffer(v4, qword_269906DA0);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_269906DA0);
  sub_24E8616E8();
  *(unsigned char *)uint64_t v5 = 2;
  *(void *)(v5 + 8) = 0;
  *(void *)(v5 + 16) = 0;
  *(unsigned char *)(v5 + 24) = 1;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5 + *(int *)(v4 + 24), v3, v0);
}

uint64_t sub_24E5C73C4()
{
  uint64_t v1 = sub_24E864968();
  uint64_t v39 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24E864B18();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24E864AF8();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24E864BA8();
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v36 = v11;
  MEMORY[0x270FA5388](v11);
  int v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24E864BB8();
  uint64_t v34 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  int v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v0 + 24) & 1) != 0
    || (uint64_t v17 = *(void *)(v0 + 8), v18 = *(void *)(v0 + 16), v33 = v17, (sub_24E864BD8() & 1) == 0))
  {
    type metadata accessor for FindMyUICore();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v24 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v25 = (void *)sub_24E863C68();
    id v26 = objc_msgSend(v24, sel_localizedStringForKey_value_table_, v25, 0, 0);

    uint64_t v22 = sub_24E863CA8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2D58);
    uint64_t v32 = v18;
    sub_24E864B58();
    uint64_t v30 = v4;
    uint64_t v31 = v5;
    uint64_t v29 = v1;
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_24E866380;
    sub_24E864B38();
    sub_24E864B48();
    uint64_t v28 = sub_24E748B24(v19);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_24E864B88();
    sub_24E864AE8();
    uint64_t v20 = v39;
    uint64_t v21 = v29;
    (*(void (**)(char *, void, uint64_t))(v39 + 104))(v3, *MEMORY[0x263F8E218], v29);
    sub_24E864B08();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v21);
    sub_24E8612B8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v30);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v38);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v36);
    sub_24E5C7B38();
    sub_24E864BC8();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v14);
    return v40;
  }
  return v22;
}

uint64_t sub_24E5C792C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 2)
  {
    if (v3 != 2) {
      return 0;
    }
  }
  else
  {
    int v4 = (v3 ^ v2) & 1;
    if (v3 == 2 || v4 != 0) {
      return 0;
    }
  }
  if (a1[24])
  {
    if ((a2[24] & 1) == 0) {
      return 0;
    }
  }
  else if ((a2[24] & 1) != 0 || (sub_24E864BE8() & 1) == 0)
  {
    return 0;
  }
  type metadata accessor for DirectionsState();

  return sub_24E8616C8();
}

unsigned char *storeEnumTagSinglePayload for DirectionsState.TransportType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E5C7AA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DirectionsState.TransportType()
{
  return &type metadata for DirectionsState.TransportType;
}

unint64_t sub_24E5C7AE4()
{
  unint64_t result = qword_2698F2D50;
  if (!qword_2698F2D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F2D50);
  }
  return result;
}

unint64_t sub_24E5C7B38()
{
  unint64_t result = qword_2698F2D60;
  if (!qword_2698F2D60)
  {
    sub_24E864BB8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F2D60);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FollowerAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FollowerAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E5C7CECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowerAction()
{
  return &type metadata for FollowerAction;
}

unint64_t sub_24E5C7D28()
{
  unint64_t result = qword_2698F2D68;
  if (!qword_2698F2D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F2D68);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FollowingAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E5C7E48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingAction()
{
  return &type metadata for FollowingAction;
}

unint64_t sub_24E5C7E84()
{
  unint64_t result = qword_2698F2D70;
  if (!qword_2698F2D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F2D70);
  }
  return result;
}

uint64_t *sub_24E5C7ED8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for DirectionsState();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v10 = *(int *)(v7 + 24);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_24E8616F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_24E5C8064(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DirectionsState();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = a1 + *(int *)(v2 + 24);
    uint64_t v5 = sub_24E8616F8();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  return result;
}

unsigned char *sub_24E5C8120(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DirectionsState();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    a1[24] = a2[24];
    uint64_t v8 = *(int *)(v6 + 24);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_24E8616F8();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

uint64_t sub_24E5C8270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DirectionsState();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      long long v17 = *(_OWORD *)(a2 + 8);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = v17;
      uint64_t v18 = *(int *)(v6 + 24);
      uint64_t v19 = a1 + v18;
      uint64_t v20 = a2 + v18;
      uint64_t v21 = sub_24E8616F8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
      return a1;
    }
    sub_24E5C8DE8(a1, (uint64_t (*)(void))type metadata accessor for DirectionsState);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v11 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v11;
  uint64_t v12 = *(int *)(v6 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_24E8616F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

unsigned char *sub_24E5C846C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DirectionsState();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    a1[24] = a2[24];
    uint64_t v8 = *(int *)(v6 + 24);
    int v9 = &a1[v8];
    int v10 = &a2[v8];
    uint64_t v11 = sub_24E8616F8();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

uint64_t sub_24E5C85BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DirectionsState();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v16 = *(int *)(v6 + 24);
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      uint64_t v19 = sub_24E8616F8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
      return a1;
    }
    sub_24E5C8DE8(a1, (uint64_t (*)(void))type metadata accessor for DirectionsState);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v11 = *(int *)(v6 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_24E8616F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_24E5C87B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E5C87CC);
}

uint64_t sub_24E5C87CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DirectionsState();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_24E5C8838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E5C884C);
}

uint64_t sub_24E5C884C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for DirectionsState();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_24E5C88D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DirectionsState();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 2, v2);
}

uint64_t sub_24E5C8938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DirectionsState();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 2, v4);
}

uint64_t type metadata accessor for LocateAction()
{
  uint64_t result = qword_2698F2D78;
  if (!qword_2698F2D78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24E5C89F4()
{
  uint64_t result = type metadata accessor for DirectionsState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_24E5C8A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DirectionsState();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (unsigned __int8 *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Action = type metadata accessor for LocateAction();
  MEMORY[0x270FA5388](Action - 8);
  int v10 = (unsigned __int8 *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2D88);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_24E5C8D24(a1, (uint64_t)v14);
  sub_24E5C8D24(a2, v15);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v17 = v16(v14, 2, v4);
  if (!v17)
  {
    sub_24E5C8D24((uint64_t)v14, (uint64_t)v10);
    if (!v16((char *)v15, 2, v4))
    {
      sub_24E5C8E48(v15, (uint64_t)v7);
      char v18 = sub_24E5C792C(v10, v7);
      sub_24E5C8DE8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DirectionsState);
      sub_24E5C8DE8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DirectionsState);
      sub_24E5C8DE8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for LocateAction);
      return v18 & 1;
    }
    sub_24E5C8DE8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DirectionsState);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    if (v16((char *)v15, 2, v4) != 1) {
      goto LABEL_9;
    }
  }
  else if (v16((char *)v15, 2, v4) != 2)
  {
LABEL_9:
    sub_24E5C8D88((uint64_t)v14);
    char v18 = 0;
    return v18 & 1;
  }
  sub_24E5C8DE8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for LocateAction);
  char v18 = 1;
  return v18 & 1;
}

uint64_t sub_24E5C8D24(uint64_t a1, uint64_t a2)
{
  uint64_t Action = type metadata accessor for LocateAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Action - 8) + 16))(a2, a1, Action);
  return a2;
}

uint64_t sub_24E5C8D88(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2D88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24E5C8DE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24E5C8E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DirectionsState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for LocationState(uint64_t result)
{
  unint64_t v1 = *(void **)(result + 16);
  if ((unint64_t)v1 >= 0xFFFFFFFF)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for LocationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 16);
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v3;
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    swift_bridgeObjectRetain();
    id v5 = v3;
  }
  return a1;
}

uint64_t assignWithCopy for LocationState(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 2);
  if (*(void *)(a1 + 16) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      uint64_t v8 = (void *)*((void *)a2 + 2);
      *(void *)(a1 + 16) = v8;
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      swift_bridgeObjectRetain();
      id v9 = v8;
      return a1;
    }
LABEL_7:
    long long v10 = *a2;
    *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = v10;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();

    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v5 = (void *)*((void *)a2 + 2);
  uint64_t v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v5;
  id v7 = v5;

  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  return a1;
}

uint64_t assignWithTake for LocationState(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)(a1 + 16);
  if ((unint64_t)v4 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    return a1;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v5;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LocationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_24E5C9198(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_24E5C91B0(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationState()
{
  return &type metadata for LocationState;
}

void sub_24E5C91F0()
{
  qword_269906DB8 = (uint64_t)&unk_27005A580;
}

uint64_t sub_24E5C9204(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      type metadata accessor for FindMyUICore();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      unint64_t v3 = (void *)sub_24E863C68();
      id v4 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v3, 0, 0);

      uint64_t v5 = sub_24E863CA8();
      return v5;
    default:
      sub_24E8649B8();
      __break(1u);
      JUMPOUT(0x24E5C940CLL);
  }
}

uint64_t sub_24E5C941C(unint64_t a1)
{
  if (a1 - 2 < 2) {
    return 0;
  }
  if (a1 <= 1)
  {
    type metadata accessor for FindMyUICore();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    id v4 = (void *)sub_24E863C68();
    id v5 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, 0);

    uint64_t v1 = sub_24E863CA8();
    return v1;
  }
  uint64_t result = sub_24E8649B8();
  __break(1u);
  return result;
}

unint64_t ShareDuration.init(rawValue:)(unint64_t a1)
{
  return sub_24E5C968C(a1);
}

uint64_t sub_24E5C95A0()
{
  return sub_24E864A98();
}

uint64_t sub_24E5C95E8()
{
  return sub_24E864A68();
}

uint64_t sub_24E5C9614()
{
  return sub_24E864A98();
}

unint64_t sub_24E5C9658@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_24E5C968C(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_24E5C968C(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

unint64_t sub_24E5C96A0()
{
  unint64_t result = qword_2698F2D90;
  if (!qword_2698F2D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698F2D90);
  }
  return result;
}

uint64_t sub_24E5C96F4()
{
  return MEMORY[0x263F8D6D8];
}

ValueMetadata *type metadata accessor for ShareDuration()
{
  return &type metadata for ShareDuration;
}

uint64_t sub_24E5C9714(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_24E575F98(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = *(void *)(type metadata accessor for Friend() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = sub_24E861218();
      uint64_t v9 = v8;
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_24E575F98(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24E5C985C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v46 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F44A0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v38 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v38 - v14;
  MEMORY[0x270FA5388](v13);
  int v17 = (char *)v38 - v16;
  uint64_t v18 = sub_24E861468();
  uint64_t v47 = *(void *)(v18 - 8);
  uint64_t v48 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E861458();
  sub_24E861438();
  uint64_t v21 = sub_24E861558();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v17, 1, 1, v21);
  int v44 = a3;
  if ((_BYTE)a3)
  {
    if (a3 == 1)
    {
      uint64_t v49 = 0;
      unint64_t v50 = 0xE000000000000000;
      sub_24E8644E8();
      swift_bridgeObjectRelease();
      uint64_t v49 = 0xD00000000000001ALL;
      unint64_t v50 = 0x800000024E872F00;
      sub_24E863D38();
      sub_24E861538();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    MEMORY[0x25333F430](25965, 0xE200000000000000);
  }
  else
  {
    MEMORY[0x25333F430](29286, 0xE200000000000000);
    if (a1 && *(void *)(a1 + 16) == 1)
    {
      uint64_t v40 = v9;
      uint64_t v49 = sub_24E5C9714(a1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1348);
      sub_24E55DCE4();
      int v43 = sub_24E863BD8();
      swift_bridgeObjectRelease();
      uint64_t v49 = 47;
      unint64_t v50 = 0xE100000000000000;
      sub_24E863D38();
      uint64_t v9 = v40;
      swift_bridgeObjectRelease();
      sub_24E861428();
    }
  }
  sub_24E861408();
LABEL_10:
  sub_24E5CA064((uint64_t)v17);
  sub_24E5CA0C4((uint64_t)v15, (uint64_t)v17);
  sub_24E5CA12C((uint64_t)v17, (uint64_t)v12);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v23(v12, 1, v21) != 1)
  {
LABEL_18:
    sub_24E5CA064((uint64_t)v17);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v20, v48);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v46, v12, v21);
  }
  int v42 = v23;
  sub_24E5CA064((uint64_t)v12);
  if (qword_2698F0EB8 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_24E862168();
  __swift_project_value_buffer(v24, (uint64_t)qword_269906E90);
  uint64_t v25 = v45;
  unsigned __int8 v26 = v44;
  sub_24E5CA194(a1, v45, v44);
  sub_24E5CA194(a1, v25, v26);
  size_t v27 = sub_24E862148();
  os_log_type_t v28 = sub_24E864248();
  int v43 = v27;
  int v41 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v40 = v9;
    uint64_t v30 = v29;
    uint64_t v39 = swift_slowAlloc();
    uint64_t v52 = v39;
    *(_DWORD *)uint64_t v30 = 136315394;
    uint64_t v49 = sub_24E55B02C(7107189, 0xE300000000000000, &v52);
    sub_24E8643A8();
    *(_WORD *)(v30 + 12) = 2080;
    v38[1] = v30 + 14;
    uint64_t v49 = a1;
    unint64_t v50 = v25;
    unsigned __int8 v51 = v26;
    sub_24E5CA194(a1, v25, v26);
    uint64_t v31 = sub_24E863CC8();
    uint64_t v49 = sub_24E55B02C(v31, v32, &v52);
    sub_24E8643A8();
    swift_bridgeObjectRelease();
    sub_24E5CA1B0(a1, v25, v26);
    sub_24E5CA1B0(a1, v25, v26);
    uint64_t v33 = v43;
    _os_log_impl(&dword_24E553000, v43, (os_log_type_t)v41, "URLHandler: %s - No URL for %s", (uint8_t *)v30, 0x16u);
    uint64_t v34 = v39;
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v34, -1, -1);
    uint64_t v35 = v30;
    uint64_t v9 = v40;
    MEMORY[0x2533435F0](v35, -1, -1);
  }
  else
  {
    sub_24E5CA1B0(a1, v25, v26);
    sub_24E5CA1B0(a1, v25, v26);
  }
  uint64_t v36 = v42;
  sub_24E861538();
  if (v36(v9, 1, v21) != 1)
  {
    uint64_t v12 = v9;
    goto LABEL_18;
  }
  uint64_t result = sub_24E5CA064((uint64_t)v9);
  __break(1u);
  return result;
}

uint64_t sub_24E5C9E8C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_24E861558();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24E5C985C(a1, a2, a3, (uint64_t)v9);
  id v10 = objc_msgSend(self, sel_defaultWorkspace);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = (void *)sub_24E861518();
    uint64_t v13 = (void *)sub_24E863B38();
    objc_msgSend(v11, sel_openSensitiveURL_withOptions_, v12, v13);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_24E5CA064(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F44A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24E5CA0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F44A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E5CA12C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F44A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E5CA194(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24E5CA1B0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for FindMyDestination(uint64_t a1)
{
  return sub_24E5CA1B0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s12FindMyUICore17FindMyDestinationOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24E5CA194(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FindMyDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24E5CA194(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24E5CA1B0(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FindMyDestination(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24E5CA1B0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FindMyDestination(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FindMyDestination(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24E5CA36C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_24E5CA384(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FindMyDestination()
{
  return &type metadata for FindMyDestination;
}

uint64_t sub_24E5CA3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E861758();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_24E5CA418(uint64_t a1)
{
  uint64_t v2 = sub_24E861758();
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_24E5CA47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E861758();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_24E5CA4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E861758();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_24E5CA544(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E861758();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_24E5CA5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E861758();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_24E5CA60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E5CA620);
}

uint64_t sub_24E5CA620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E861758();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_24E5CA68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E5CA6A0);
}

uint64_t sub_24E5CA6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E861758();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RepositorySubscriber()
{
  uint64_t result = qword_2698F2D98;
  if (!qword_2698F2D98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24E5CA75C()
{
  uint64_t result = sub_24E861758();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24E5CA7E8()
{
  return sub_24E864A98();
}

uint64_t sub_24E5CA870()
{
  sub_24E861758();
  sub_24E5CA9C8((unint64_t *)&unk_2698F2DB0, MEMORY[0x263F07508]);

  return sub_24E863BB8();
}

uint64_t sub_24E5CA8F4()
{
  return sub_24E864A98();
}

uint64_t sub_24E5CA980()
{
  return sub_24E5CA9C8(&qword_2698F2DA8, (void (*)(uint64_t))type metadata accessor for RepositorySubscriber);
}

uint64_t sub_24E5CA9C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E5CAA10(uint64_t a1)
{
  uint64_t v2 = _s16SubscriptionDataO10FriendshipVMa(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v45 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1630);
  MEMORY[0x270FA5388](v4 - 8);
  unsigned __int8 v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24E861248();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  int v43 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int v41 = (char *)&v40 - v11;
  uint64_t v12 = _s16SubscriptionDataOMa(0);
  uint64_t v52 = *(void *)(v12 - 8);
  uint64_t v53 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v40 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v51 = (uint64_t)&v40 - v19;
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v47 = a1 + 56;
  uint64_t v21 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  unint64_t v50 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v46 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v42 = v8;
  int64_t v48 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v49 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v54 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v25 = 0;
  unint64_t v44 = MEMORY[0x263F8EE78];
  if (v23) {
    goto LABEL_9;
  }
LABEL_16:
  int64_t v36 = v25 + 1;
  if (!__OFADD__(v25, 1))
  {
    if (v36 < v48)
    {
      unint64_t v37 = *(void *)(v47 + 8 * v36);
      ++v25;
      if (v37) {
        goto LABEL_31;
      }
      int64_t v25 = v36 + 1;
      if (v36 + 1 >= v48) {
        goto LABEL_34;
      }
      unint64_t v37 = *(void *)(v47 + 8 * v25);
      if (v37) {
        goto LABEL_31;
      }
      int64_t v25 = v36 + 2;
      if (v36 + 2 >= v48) {
        goto LABEL_34;
      }
      unint64_t v37 = *(void *)(v47 + 8 * v25);
      if (v37) {
        goto LABEL_31;
      }
      int64_t v25 = v36 + 3;
      if (v36 + 3 >= v48) {
        goto LABEL_34;
      }
      unint64_t v37 = *(void *)(v47 + 8 * v25);
      if (v37)
      {
LABEL_31:
        unint64_t v23 = (v37 - 1) & v37;
        for (unint64_t i = __clz(__rbit64(v37)) + (v25 << 6); ; unint64_t i = v27 | (v25 << 6))
        {
          uint64_t v39 = v51;
          sub_24E6125B0(*(void *)(v54 + 48) + *(void *)(v52 + 72) * i, v51, _s16SubscriptionDataOMa);
          sub_24E612618(v39, (uint64_t)v18, _s16SubscriptionDataOMa);
          sub_24E863FB8();
          sub_24E863FA8();
          sub_24E863F18();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          sub_24E6125B0((uint64_t)v18, (uint64_t)v15, _s16SubscriptionDataOMa);
          if (swift_getEnumCaseMultiPayload())
          {
            sub_24E612680((uint64_t)v15, _s16SubscriptionDataOMa);
            uint64_t v26 = 1;
          }
          else
          {
            uint64_t v29 = v45;
            sub_24E612618((uint64_t)v15, v45, _s16SubscriptionDataO10FriendshipVMa);
            (*v46)(v6, v29, v7);
            uint64_t v26 = 0;
          }
          (*v50)(v6, v26, 1, v7);
          swift_release();
          sub_24E612680((uint64_t)v18, _s16SubscriptionDataOMa);
          if ((*v49)(v6, 1, v7) == 1)
          {
            uint64_t result = sub_24E563530((uint64_t)v6, &qword_2698F1630);
            if (!v23) {
              goto LABEL_16;
            }
          }
          else
          {
            uint64_t v30 = *v46;
            uint64_t v31 = v41;
            (*v46)(v41, (uint64_t)v6, v7);
            v30(v43, (uint64_t)v31, v7);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v44 = sub_24E575298(0, *(void *)(v44 + 16) + 1, 1, v44);
            }
            unint64_t v33 = *(void *)(v44 + 16);
            unint64_t v32 = *(void *)(v44 + 24);
            if (v33 >= v32 >> 1) {
              unint64_t v44 = sub_24E575298(v32 > 1, v33 + 1, 1, v44);
            }
            uint64_t v34 = v43;
            unint64_t v35 = v44;
            *(void *)(v44 + 16) = v33 + 1;
            uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(v35+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v33, v34, v7);
            if (!v23) {
              goto LABEL_16;
            }
          }
LABEL_9:
          unint64_t v27 = __clz(__rbit64(v23));
          v23 &= v23 - 1;
        }
      }
      int64_t v38 = v36 + 4;
      if (v38 < v48)
      {
        unint64_t v37 = *(void *)(v47 + 8 * v38);
        if (v37)
        {
          int64_t v25 = v38;
          goto LABEL_31;
        }
        while (1)
        {
          int64_t v25 = v38 + 1;
          if (__OFADD__(v38, 1)) {
            goto LABEL_36;
          }
          if (v25 >= v48) {
            break;
          }
          unint64_t v37 = *(void *)(v47 + 8 * v25);
          ++v38;
          if (v37) {
            goto LABEL_31;
          }
        }
      }
    }
LABEL_34:
    swift_release();
    return v44;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_24E5CB05C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 72) = a4;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = sub_24E861878();
  *(void *)(v4 + 40) = v5;
  *(void *)(v4 + 48) = *(void *)(v5 - 8);
  *(void *)(v4 + 56) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F8860);
  *(void *)(v4 + 64) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5CB154, 0, 0);
}

uint64_t sub_24E5CB154()
{
  if (*(unsigned char *)(v0 + 72) == 1)
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 48) + 16))(*(void *)(v0 + 16), *(void *)(v0 + 32), *(void *)(v0 + 40));
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 56);
    uint64_t v2 = *(void *)(v0 + 64);
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v5 = *(void *)(v0 + 32);
    sub_24E576EA0(*(void *)(v0 + 24), v2, (uint64_t *)&unk_2698F8860);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v5, v3);
    int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 48);
    uint64_t v10 = *(void *)(v0 + 16);
    if (v6 == 1)
    {
      (*(void (**)(void, void, void))(v9 + 32))(*(void *)(v0 + 16), *(void *)(v0 + 56), *(void *)(v0 + 40));
      sub_24E563530(v7, (uint64_t *)&unk_2698F8860);
    }
    else
    {
      (*(void (**)(void, void))(v9 + 8))(*(void *)(v0 + 56), *(void *)(v0 + 40));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v10, v7, v8);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_24E5CB2C8(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_24E861878();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F33C0);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  uint64_t v4 = sub_24E864618();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F8860);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5CB484, 0, 0);
}

uint64_t sub_24E5CB484()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  *(void *)(v0 + 144) = v8;
  *(void *)(v0 + 152) = (v6 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v8(v1, 1, 1, v5);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F33B0);
  *(void *)(v0 + 160) = v9;
  uint64_t v10 = *(int *)(v9 + 60);
  *(_DWORD *)(v0 + 224) = v10;
  sub_24E576EA0(v7 + v10, v4, &qword_2698F33C0);
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(void *)(v0 + 168) = v11;
  *(void *)(v0 + 176) = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v11(v4, 1, v2) == 1)
  {
    uint64_t v12 = *(void *)(v0 + 88);
    sub_24E864638();
    sub_24E609BE8(&qword_2698F3298, MEMORY[0x263F8F710]);
    sub_24E8649E8();
    sub_24E563530(v12, &qword_2698F33C0);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 104) + 32))(*(void *)(v0 + 120), *(void *)(v0 + 88), *(void *)(v0 + 96));
  }
  uint64_t v13 = sub_24E861848();
  uint64_t v14 = sub_24E609BE8(&qword_2698F3230, MEMORY[0x263F8EFA0]);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_24E5CB6A8;
  uint64_t v16 = *(void *)(v0 + 128);
  return MEMORY[0x270FA1E80](v16, v13, v14);
}

uint64_t sub_24E5CB6A8()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E5CB9FC;
  }
  else {
    uint64_t v2 = sub_24E5CB7BC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E5CB7BC()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 136);
    (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 96));
    sub_24E563530(v4, (uint64_t *)&unk_2698F8860);
    sub_24E563530(v1, (uint64_t *)&unk_2698F8860);
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 144))(*(void *)(v0 + 32), 1, 1, *(void *)(v0 + 48));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    *(void *)(v0 + 200) = v10;
    *(void *)(v0 + 208) = (v3 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v10(v8, v1, v2);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 + *(int *)(v7 + 72))
                                                            + **(int **)(v9 + *(int *)(v7 + 72)));
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_24E5CBAE8;
    uint64_t v12 = *(void *)(v0 + 136);
    uint64_t v13 = *(void *)(v0 + 64);
    uint64_t v14 = *(void *)(v0 + 72);
    return v15(v13, v12, v14);
  }
}

uint64_t sub_24E5CB9FC()
{
  uint64_t v1 = v0[17];
  (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[12]);
  sub_24E563530(v1, (uint64_t *)&unk_2698F8860);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_24E5CBAE8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E5CBBE4, 0, 0);
}

uint64_t sub_24E5CBBE4()
{
  uint64_t v29 = *(void *)(v0 + 72);
  uint64_t v30 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v28 = *(void *)(v0 + 48);
  sub_24E864638();
  sub_24E609BE8(&qword_2698F3298, MEMORY[0x263F8F710]);
  sub_24E8649E8();
  sub_24E609BE8(&qword_2698F32A0, MEMORY[0x263F8F6D8]);
  sub_24E864658();
  char v2 = sub_24E864BD8();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v29, v28);
  sub_24E563530(v30, (uint64_t *)&unk_2698F8860);
  if ((v2 & 1) == 0)
  {
LABEL_4:
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 200);
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v8 = *(void *)(v0 + 96);
    uint64_t v9 = *(void *)(v0 + 104);
    uint64_t v10 = *(void *)(v0 + 64);
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v12 = *(void *)(v0 + 32);
    uint64_t v13 = *(void *)(v0 + 40) + *(int *)(v0 + 224);
    (*(void (**)(void, uint64_t))(v9 + 8))(*(void *)(v0 + 120), v8);
    sub_24E563530(v13, &qword_2698F33C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v13, v7, v8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
    v6(v12, v10, v11);
    (*(void (**)(void, void, uint64_t, void))(v0 + 144))(*(void *)(v0 + 32), 0, 1, *(void *)(v0 + 48));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  uint64_t v3 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 80);
  sub_24E576EA0(*(void *)(v0 + 40) + *(int *)(v0 + 224), v5, &qword_2698F33C0);
  if (v3(v5, 1, v4) == 1)
  {
    sub_24E563530(*(void *)(v0 + 80), &qword_2698F33C0);
    goto LABEL_4;
  }
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 200);
  uint64_t v17 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 144);
  uint64_t v18 = *(void *)(v0 + 136);
  uint64_t v20 = *(void *)(v0 + 104);
  uint64_t v19 = *(void *)(v0 + 112);
  uint64_t v21 = *(void *)(v0 + 96);
  uint64_t v22 = *(void *)(v0 + 64);
  uint64_t v23 = *(void *)(v0 + 48);
  sub_24E563530(*(void *)(v0 + 80), &qword_2698F33C0);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  v16(v18, v22, v23);
  v17(v18, 0, 1, v23);
  uint64_t v24 = sub_24E861848();
  uint64_t v25 = sub_24E609BE8(&qword_2698F3230, MEMORY[0x263F8EFA0]);
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v26;
  void *v26 = v0;
  v26[1] = sub_24E5CB6A8;
  uint64_t v27 = *(void *)(v0 + 128);
  return MEMORY[0x270FA1E80](v27, v24, v25);
}

void sub_24E5CBFFC()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16)
                          + ((*(unsigned int *)(**(void **)(v0 + 16) + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v1);
  id v2 = sub_24E5CC1EC();
  uint64_t v4 = v3;
  os_unfair_lock_unlock(v1);
  if (v2)
  {
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      sub_24E863F68();
      sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v6 = 0;
      do
      {
        ++v6;
        uint64_t v7 = swift_allocError();
        sub_24E863B28();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
        swift_allocError();
        *uint64_t v8 = v7;
        swift_continuation_throwingResumeWithError();
      }
      while (v5 != v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    sub_24E864068();
    sub_24E5ABF14((uint64_t)v2);
    swift_release();
  }
}

id sub_24E5CC1EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3178);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v54 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v54 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v54 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3180);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (id *)((char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24E576EA0(v0, (uint64_t)v16, &qword_2698F3180);
  id v17 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      id v54 = *v16;
      uint64_t v22 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3188) + 48);
      swift_release();
      uint64_t v23 = *(int *)(v2 + 48);
      uint64_t v24 = (uint64_t)&v13[v23];
      uint64_t v25 = *(int *)(v2 + 64);
      uint64_t v26 = (uint64_t)&v13[v25];
      uint64_t v58 = &v13[v23];
      uint64_t v59 = &v13[v25];
      uint64_t v27 = (uint64_t)&v22[v23];
      uint64_t v28 = (uint64_t)&v22[v25];
      LOBYTE(v23) = v22[16];
      LOBYTE(v25) = v22[17];
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v22;
      v13[16] = v23;
      v13[17] = v25;
      sub_24E612440(v27, v24, &qword_2698F3190);
      sub_24E612440(v28, v26, &qword_2698F3190);
      sub_24E563530(v1, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = (uint64_t)&v11[*(int *)(v2 + 48)];
      uint64_t v60 = &v11[*(int *)(v2 + 64)];
      uint64_t v30 = (uint64_t)v60;
      uint64_t v61 = v29;
      uint64_t v31 = *(void *)v13;
      uint64_t v32 = *((void *)v13 + 1);
      int v33 = v13[16];
      unsigned __int8 v34 = v13[17];
      int v56 = v34;
      LODWORD(v57) = v33;
      *(void *)uint64_t v11 = v31;
      *((void *)v11 + 1) = v32;
      v11[16] = v33;
      v11[17] = v34;
      uint64_t v35 = (uint64_t)v58;
      sub_24E576EA0((uint64_t)v58, v29, &qword_2698F3190);
      uint64_t v36 = (uint64_t)v59;
      sub_24E576EA0((uint64_t)v59, v30, &qword_2698F3190);
      unint64_t v37 = &v8[*(int *)(v2 + 48)];
      uint64_t v55 = &v8[*(int *)(v2 + 64)];
      *(void *)uint64_t v8 = v31;
      *((void *)v8 + 1) = v32;
      unsigned char v8[16] = v57;
      v8[17] = v56;
      uint64_t v38 = v31;
      sub_24E576EA0(v35, (uint64_t)v37, &qword_2698F3190);
      uint64_t v39 = (uint64_t)v55;
      sub_24E576EA0(v36, (uint64_t)v55, &qword_2698F3190);
      uint64_t v57 = *(void *)v37;
      sub_24E563530((uint64_t)v37, &qword_2698F3190);
      uint64_t v40 = (uint64_t)&v5[*(int *)(v2 + 48)];
      int v41 = &v5[*(int *)(v2 + 64)];
      char v42 = v13[16];
      char v43 = v13[17];
      *(_OWORD *)uint64_t v5 = *(_OWORD *)v13;
      v5[16] = v42;
      v5[17] = v43;
      sub_24E576EA0(v35, v40, &qword_2698F3190);
      sub_24E576EA0(v36, (uint64_t)v41, &qword_2698F3190);
      uint64_t v44 = *(void *)v41;
      sub_24E563530((uint64_t)v41, &qword_2698F3190);
      sub_24E563530(v40, &qword_2698F3190);
      sub_24E563530(v39, &qword_2698F3190);
      sub_24E563530((uint64_t)v60, &qword_2698F3190);
      sub_24E563530(v61, &qword_2698F3190);
      if (!v31)
      {
        uint64_t v45 = (void *)MEMORY[0x263F8EE78];
        id v17 = v54;
        uint64_t v48 = v57;
        if (!v57) {
          goto LABEL_18;
        }
        goto LABEL_13;
      }
      uint64_t v45 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v47 = v45[2];
      unint64_t v46 = v45[3];
      if (v47 >= v46 >> 1) {
        uint64_t v45 = sub_24E575670((void *)(v46 > 1), v47 + 1, 1, v45);
      }
      id v17 = v54;
      uint64_t v48 = v57;
      v45[2] = v47 + 1;
      v45[v47 + 4] = v38;
      if (v48)
      {
LABEL_13:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v45 = sub_24E575670(0, v45[2] + 1, 1, v45);
        }
        unint64_t v50 = v45[2];
        unint64_t v49 = v45[3];
        if (v50 >= v49 >> 1) {
          uint64_t v45 = sub_24E575670((void *)(v49 > 1), v50 + 1, 1, v45);
        }
        v45[2] = v50 + 1;
        v45[v50 + 4] = v48;
      }
LABEL_18:
      if (v44)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v45 = sub_24E575670(0, v45[2] + 1, 1, v45);
        }
        unint64_t v52 = v45[2];
        unint64_t v51 = v45[3];
        if (v52 >= v51 >> 1) {
          uint64_t v45 = sub_24E575670((void *)(v51 > 1), v52 + 1, 1, v45);
        }
        v45[2] = v52 + 1;
        v45[v52 + 4] = v44;
      }
      sub_24E563530((uint64_t)v13, &qword_2698F3178);
      return v17;
    case 2u:
      __break(1u);
      goto LABEL_27;
    case 3u:
      swift_release();
      goto LABEL_10;
    case 4u:

LABEL_10:
      sub_24E563530(v1, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      return 0;
    case 5u:
      return v17;
    case 6u:
LABEL_27:
      __break(1u);
      JUMPOUT(0x24E5CC7BCLL);
    default:
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3198);
      uint64_t v19 = (char *)v16 + *(int *)(v18 + 48);
      sub_24E563530((uint64_t)v16 + *(int *)(v18 + 64), &qword_2698F3140);
      uint64_t v20 = sub_24E861858();
      (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3108);
      (*(void (**)(id *, uint64_t))(*(void *)(v21 - 8) + 8))(v16, v21);
      return 0;
  }
}

uint64_t sub_24E5CC7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v4 = &qword_2698F3180;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3180);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v34 = v2;
  sub_24E576EA0(v2, (uint64_t)&v27 - v9, &qword_2698F3180);
  uint64_t v33 = v5;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    switch(EnumCaseMultiPayload)
    {
      case 2:
        swift_release();
        uint64_t v26 = &v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A8) + 48)];
        goto LABEL_6;
      case 3:
      case 4:
        goto LABEL_7;
      case 5:
        goto LABEL_8;
      case 6:
        goto LABEL_9;
      default:
        swift_release();
        uint64_t v26 = &v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3188) + 48)];
LABEL_6:
        swift_release();
        uint64_t v4 = &qword_2698F3178;
        uint64_t v10 = v26;
LABEL_7:
        sub_24E563530((uint64_t)v10, v4);
LABEL_8:
        __break(1u);
LABEL_9:
        __break(1u);
        JUMPOUT(0x24E5CCB30);
    }
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3198);
  uint64_t v31 = &v10[*(int *)(v12 + 48)];
  uint64_t v30 = &v10[*(int *)(v12 + 64)];
  uint64_t v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A8);
  uint64_t v14 = (char *)v8 + v13[12];
  uint64_t v15 = v13[20];
  uint64_t v28 = v13[16];
  uint64_t v29 = v15;
  *uint64_t v8 = a1;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3178);
  id v17 = &v14[*(int *)(v16 + 48)];
  uint64_t v18 = &v14[*(int *)(v16 + 64)];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  *((_WORD *)v14 + 8) = 1;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190);
  uint64_t v20 = &v17[*(int *)(v19 + 76)];
  uint64_t v21 = sub_24E861878();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v20, 1, 1, v21);
  *(void *)id v17 = 0;
  v17[*(int *)(v19 + 80)] = 0;
  v22(&v18[*(int *)(v19 + 76)], 1, 1, v21);
  *(void *)uint64_t v18 = 0;
  v18[*(int *)(v19 + 80)] = 0;
  *(void *)((char *)v8 + v28) = v32;
  swift_retain();
  *(void *)((char *)v8 + v29) = *(void *)sub_24E8620B8();
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_24E611E74((uint64_t)v8, v34, &qword_2698F3180);
  sub_24E563530((uint64_t)v30, &qword_2698F3140);
  uint64_t v23 = sub_24E861858();
  (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v31, v23);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3108);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v10, v24);
}

uint64_t sub_24E5CCB48@<X0>(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X8>)
{
  uint64_t v233 = a4;
  v231 = a5;
  uint64_t v232 = a3;
  uint64_t v7 = sub_24E861878();
  uint64_t v228 = *(void *)(v7 - 8);
  uint64_t v229 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  v208 = (char *)&v208 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v210 = (char *)&v208 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v223 = (char *)&v208 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v221 = (char *)&v208 - v15;
  MEMORY[0x270FA5388](v14);
  v219 = (int *)((char *)&v208 - v16);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3138);
  uint64_t v224 = *(void *)(v17 - 8);
  uint64_t v225 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v217 = (uint64_t *)((char *)&v208 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v218 = (uint64_t *)((char *)&v208 - v21);
  MEMORY[0x270FA5388](v20);
  uint64_t v222 = (uint64_t)&v208 - v22;
  uint64_t v23 = (uint64_t)&unk_2698F8860;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F8860);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v212 = (uint64_t *)((char *)&v208 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v209 = (uint64_t)&v208 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v211 = (uint64_t)&v208 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v216 = (uint64_t)&v208 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  v213 = (char *)&v208 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v214 = (char *)&v208 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v215 = (char *)&v208 - v38;
  MEMORY[0x270FA5388](v37);
  v220 = (uint64_t *)((char *)&v208 - v39);
  uint64_t v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3178);
  uint64_t v40 = MEMORY[0x270FA5388](v230);
  v227 = (char *)&v208 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  v226 = (uint64_t *)((char *)&v208 - v42);
  char v43 = &qword_2698F3180;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3180);
  MEMORY[0x270FA5388](v44);
  unint64_t v46 = (uint64_t *)((char *)&v208 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3240);
  uint64_t v48 = MEMORY[0x270FA5388](v47);
  unint64_t v50 = (uint64_t *)((char *)&v208 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v51 = MEMORY[0x270FA5388](v48);
  uint64_t v53 = (uint64_t *)((char *)&v208 - v52);
  uint64_t v54 = MEMORY[0x270FA5388](v51);
  int v56 = (char *)&v208 - v55;
  *(void *)int v56 = a1;
  v56[8] = a2 & 1;
  uint64_t v57 = (char *)&v208 + *(int *)(v54 + 48) - v55;
  sub_24E576EA0((uint64_t)v232, (uint64_t)v57, (uint64_t *)&unk_2698F8860);
  uint64_t v58 = (uint64_t)&v56[*(int *)(v47 + 64)];
  sub_24E576EA0(v233, v58, (uint64_t *)&unk_2698F8860);
  sub_24E576EA0((uint64_t)v234, (uint64_t)v46, &qword_2698F3180);
  uint64_t v233 = v44;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v223 = (char *)*v46;
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3188);
      uint64_t v60 = (char *)v46 + *(int *)(v59 + 48);
      uint64_t v216 = v59;
      uint64_t v61 = *(char **)((char *)v46 + *(int *)(v59 + 64));
      uint64_t v62 = *(int *)(v230 + 48);
      uint64_t v63 = (uint64_t)v226;
      int v64 = (char *)v226 + v62;
      uint64_t v65 = *(int *)(v230 + 64);
      uint64_t v66 = (uint64_t)v226 + v65;
      uint64_t v67 = (uint64_t)&v60[v62];
      uint64_t v68 = (uint64_t)&v60[v65];
      LOBYTE(v62) = v60[16];
      LOBYTE(v65) = v60[17];
      *(_OWORD *)v226 = *(_OWORD *)v60;
      *(unsigned char *)(v63 + 16) = v62;
      *(unsigned char *)(v63 + 17) = v65;
      uint64_t v232 = v64;
      sub_24E612440(v67, (uint64_t)v64, &qword_2698F3190);
      v227 = (char *)v66;
      sub_24E612440(v68, v66, &qword_2698F3190);
      v235 = v61;
      sub_24E563530((uint64_t)v234, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      char v43 = (uint64_t *)((char *)v53 + *(int *)(v47 + 48));
      uint64_t v69 = (uint64_t)v53 + *(int *)(v47 + 64);
      uint64_t v23 = *(void *)v56;
      unint64_t v50 = (uint64_t *)v56[8];
      *uint64_t v53 = *(void *)v56;
      *((unsigned char *)v53 + 8) = (_BYTE)v50;
      sub_24E576EA0((uint64_t)v57, (uint64_t)v43, (uint64_t *)&unk_2698F8860);
      sub_24E576EA0(v58, v69, (uint64_t *)&unk_2698F8860);
      uint64_t v53 = (uint64_t *)v228;
      unsigned int v70 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v228 + 48);
      int v71 = v70(v43, 1, v229);
      uint64_t v212 = v43;
      if ((v50 & 1) == 0)
      {
        if (v71 != 1)
        {
LABEL_66:
          swift_release();
          __break(1u);
          goto LABEL_67;
        }
        unint64_t v50 = (uint64_t *)v229;
        int v110 = v70((uint64_t *)v69, 1, v229);
        uint64_t v111 = v232;
        if (v110 != 1)
        {
LABEL_67:
          swift_release();
          __break(1u);
          goto LABEL_68;
        }
        uint64_t v57 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190);
        char v43 = v220;
        sub_24E576EA0((uint64_t)&v111[*((int *)v57 + 19)], (uint64_t)v220, (uint64_t *)&unk_2698F8860);
        if (v70(v43, 1, (uint64_t)v50) == 1)
        {
LABEL_68:
          swift_release();
          __break(1u);
          goto LABEL_69;
        }
        uint64_t v89 = (uint64_t)v227;
        uint64_t v112 = (uint64_t)&v227[*((int *)v57 + 19)];
        uint64_t v113 = v222 + *(int *)(v225 + 48);
        uint64_t v114 = v222 + *(int *)(v225 + 64);
        *(void *)uint64_t v222 = v23;
        uint64_t v115 = (void (*)(uint64_t, uint64_t *, uint64_t *))v53[4];
        v53 += 4;
        v115(v113, v43, v50);
        sub_24E576EA0(v112, v114, (uint64_t *)&unk_2698F8860);
        uint64_t v57 = v235;
        uint64_t v116 = *((void *)v235 + 3);
        uint64_t v117 = v116 + 1;
        if (!__OFADD__(v116, 1))
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          char v43 = (uint64_t *)v232;
          if (*((void *)v57 + 2) < v117 || (isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_24E60919C(v117, 0, &qword_2698F3138, &qword_2698F3250);
            uint64_t v57 = v235;
          }
          uint64_t v119 = v57 + 16;
          uint64_t v120 = (uint64_t)&v57[(*(unsigned __int8 *)(v224 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v224 + 80)];
          uint64_t v121 = v222;
          sub_24E609484(v119, v120, v222);
          sub_24E563530(v121, &qword_2698F3138);
          sub_24E563530((uint64_t)v56, &qword_2698F3240);
          *(void *)(v63 + 8) = v23;
          *(unsigned char *)(v63 + 16) = 0;
          goto LABEL_41;
        }
        goto LABEL_60;
      }
      if (v71 == 1)
      {
        uint64_t v23 = v229;
        if (v70((uint64_t *)v69, 1, v229) == 1)
        {
LABEL_71:
          swift_release();
          __break(1u);
          goto LABEL_72;
        }
        unint64_t v50 = v53 + 4;
        uint64_t v72 = (void (*)(char *, uint64_t, uint64_t))v53[4];
        v72(v221, v69, v23);
        char v43 = (uint64_t *)v232;
        if (v226[2])
        {
LABEL_72:
          swift_release();
          __break(1u);
          goto LABEL_73;
        }
        uint64_t v73 = v226[1];
        uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190);
        uint64_t v57 = v214;
        sub_24E576EA0((uint64_t)v43 + *(int *)(v222 + 76), (uint64_t)v214, (uint64_t *)&unk_2698F8860);
        if (v70((uint64_t *)v57, 1, v23) == 1)
        {
LABEL_73:
          swift_release();
          __break(1u);
          goto LABEL_74;
        }
        uint64_t v74 = (uint64_t)v213;
        ((void (*)(char *, char *, uint64_t))v53[2])(v213, v221, v23);
        int v76 = (void (*)(uint64_t, void, uint64_t, uint64_t))v53[7];
        v53 += 7;
        char v75 = v76;
        v76(v74, 0, 1, v23);
        int v77 = (char *)v217 + *(int *)(v225 + 48);
        uint64_t v78 = (uint64_t)v217 + *(int *)(v225 + 64);
        *uint64_t v217 = v73;
        v72(v77, (uint64_t)v57, v23);
        sub_24E612440(v74, v78, (uint64_t *)&unk_2698F8860);
        int v79 = v235;
        uint64_t v80 = *((void *)v235 + 3);
        uint64_t v81 = v80 + 1;
        if (!__OFADD__(v80, 1))
        {
          char v82 = swift_isUniquelyReferenced_nonNull_native();
          if (*((void *)v79 + 2) < v81 || (v82 & 1) == 0)
          {
            sub_24E60919C(v81, 0, &qword_2698F3138, &qword_2698F3250);
            int v79 = v235;
          }
          uint64_t v83 = v79 + 16;
          uint64_t v84 = (uint64_t)&v79[(*(unsigned __int8 *)(v224 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v224 + 80)];
          size_t v85 = v217;
          sub_24E609484(v83, v84, (uint64_t)v217);
          sub_24E563530((uint64_t)v85, &qword_2698F3138);
          sub_24E563530((uint64_t)v56, &qword_2698F3240);
          unsigned int v86 = v227;
          uint64_t v87 = (uint64_t)&v227[*(int *)(v222 + 76)];
          sub_24E563530(v87, (uint64_t *)&unk_2698F8860);
          uint64_t v88 = v229;
          v72((char *)v87, (uint64_t)v221, v229);
          v75(v87, 0, 1, v88);
          uint64_t v89 = (uint64_t)v86;
          goto LABEL_40;
        }
        goto LABEL_61;
      }
      uint64_t v57 = v215;
      sub_24E576EA0((uint64_t)v43, (uint64_t)v215, (uint64_t *)&unk_2698F8860);
      uint64_t v23 = v229;
      int v123 = v70((uint64_t *)v69, 1, v229);
      if (v123 != 1) {
        goto LABEL_75;
      }
      unint64_t v50 = v53 + 4;
      uint64_t v124 = v219;
      uint64_t v222 = v53[4];
      ((void (*)(int *, char *, uint64_t))v222)(v219, v57, v23);
      uint64_t v89 = (uint64_t)v227;
      char v43 = (uint64_t *)v232;
      if (v226[2])
      {
LABEL_76:
        swift_release();
        __break(1u);
        goto LABEL_77;
      }
      uint64_t v125 = v226[1];
      uint64_t v57 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190);
      uint64_t v126 = v89 + *((int *)v57 + 19);
      uint64_t v127 = (char *)v218 + *(int *)(v225 + 48);
      uint64_t v128 = (uint64_t)v218 + *(int *)(v225 + 64);
      *uint64_t v218 = v125;
      ((void (*)(char *, int *, uint64_t))v53[2])(v127, v124, v23);
      sub_24E576EA0(v126, v128, (uint64_t *)&unk_2698F8860);
      uint64_t v129 = v235;
      uint64_t v130 = *((void *)v235 + 3);
      uint64_t v131 = v130 + 1;
      if (__OFADD__(v130, 1)) {
        goto LABEL_62;
      }
      char v132 = swift_isUniquelyReferenced_nonNull_native();
      if (*((void *)v129 + 2) < v131 || (v132 & 1) == 0)
      {
        sub_24E60919C(v131, 0, &qword_2698F3138, &qword_2698F3250);
        uint64_t v129 = v235;
      }
      uint64_t v133 = v129 + 16;
      uint64_t v134 = (uint64_t)&v129[(*(unsigned __int8 *)(v224 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v224 + 80)];
      uint64_t v135 = v218;
      sub_24E609484(v133, v134, (uint64_t)v218);
      sub_24E563530((uint64_t)v135, &qword_2698F3138);
      sub_24E563530((uint64_t)v56, &qword_2698F3240);
      uint64_t v136 = (uint64_t)v43 + *((int *)v57 + 19);
      sub_24E563530(v136, (uint64_t *)&unk_2698F8860);
      uint64_t v137 = v229;
      ((void (*)(uint64_t, int *, uint64_t))v222)(v136, v219, v229);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v53[7])(v136, 0, 1, v137);
LABEL_40:
      uint64_t v63 = (uint64_t)v226;
LABEL_41:
      sub_24E563530((uint64_t)v212, (uint64_t *)&unk_2698F8860);
      unint64_t v138 = v234;
      sub_24E563530((uint64_t)v234, &qword_2698F3180);
      uint64_t v139 = (char *)v138 + *(int *)(v216 + 48);
      uint64_t v140 = *(int *)(v216 + 64);
      *unint64_t v138 = v223;
      uint64_t v141 = (uint64_t)&v139[*(int *)(v230 + 48)];
      uint64_t v142 = (uint64_t)&v139[*(int *)(v230 + 64)];
      char v143 = *(unsigned char *)(v63 + 16);
      char v144 = *(unsigned char *)(v63 + 17);
      *(_OWORD *)uint64_t v139 = *(_OWORD *)v63;
      v139[16] = v143;
      v139[17] = v144;
      sub_24E576EA0((uint64_t)v43, v141, &qword_2698F3190);
      sub_24E576EA0(v89, v142, &qword_2698F3190);
      *(void *)((char *)v138 + v140) = v235;
      swift_storeEnumTagMultiPayload();
      uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3238);
      (*(void (**)(uint64_t **, uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v231, 1, 1, v145);
      uint64_t v146 = v63;
      return sub_24E563530(v146, &qword_2698F3178);
    case 2u:
      uint64_t v222 = *v46;
      uint64_t v90 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A8);
      uint64_t v91 = (char *)v46 + v90[12];
      uint64_t v23 = *(uint64_t *)((char *)v46 + v90[16]);
      v219 = v90;
      uint64_t v92 = *(char **)((char *)v46 + v90[20]);
      uint64_t v93 = *(int *)(v230 + 48);
      uint64_t v94 = v227;
      uint64_t v95 = &v227[v93];
      uint64_t v96 = *(int *)(v230 + 64);
      char v43 = (uint64_t *)&v227[v96];
      uint64_t v97 = (uint64_t)&v91[v93];
      uint64_t v98 = (uint64_t)&v91[v96];
      LOBYTE(v93) = v91[16];
      LOBYTE(v96) = v91[17];
      *(_OWORD *)v227 = *(_OWORD *)v91;
      v94[16] = v93;
      v94[17] = v96;
      uint64_t v53 = &qword_2698F3190;
      uint64_t v232 = v95;
      sub_24E612440(v97, (uint64_t)v95, &qword_2698F3190);
      v226 = v43;
      sub_24E612440(v98, (uint64_t)v43, &qword_2698F3190);
      if (*((void *)v92 + 3))
      {
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      v220 = (uint64_t *)v23;
      uint64_t v221 = v92;
      sub_24E563530((uint64_t)v234, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      uint64_t v99 = (uint64_t)v50 + *(int *)(v47 + 48);
      uint64_t v100 = (uint64_t)v50 + *(int *)(v47 + 64);
      uint64_t v101 = *(void *)v56;
      uint64_t v23 = v56[8];
      uint64_t *v50 = *(void *)v56;
      *((unsigned char *)v50 + 8) = v23;
      sub_24E576EA0((uint64_t)v57, v99, (uint64_t *)&unk_2698F8860);
      sub_24E576EA0(v58, v100, (uint64_t *)&unk_2698F8860);
      unint64_t v50 = (uint64_t *)v229;
      uint64_t v53 = *(uint64_t **)(v228 + 48);
      int v102 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v53)(v99, 1, v229);
      if (v23)
      {
        if (v102 == 1)
        {
          int v103 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t *))v53)(v100, 1, v50);
          uint64_t v57 = (char *)v226;
          if (v103 == 1)
          {
LABEL_74:
            swift_release();
            swift_release();
            __break(1u);
LABEL_75:
            swift_release();
            ((void (*)(char *, uint64_t))v53[1])(v57, v23);
            __break(1u);
            goto LABEL_76;
          }
          sub_24E563530((uint64_t)v56, &qword_2698F3240);
          uint64_t v104 = (uint64_t)&v57[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190) + 76)];
          sub_24E563530(v104, (uint64_t *)&unk_2698F8860);
          uint64_t v105 = v228;
          (*(void (**)(uint64_t, uint64_t, uint64_t *))(v228 + 32))(v104, v100, v50);
        }
        else
        {
          char v43 = v212;
          sub_24E576EA0(v99, (uint64_t)v212, (uint64_t *)&unk_2698F8860);
          int v147 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t *))v53)(v100, 1, v50);
          if (v147 != 1)
          {
LABEL_77:
            swift_release();
            swift_release();
            (*(void (**)(uint64_t *, uint64_t *))(v228 + 8))(v43, v50);
            __break(1u);
            JUMPOUT(0x24E5CE304);
          }
          sub_24E563530((uint64_t)v56, &qword_2698F3240);
          uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190);
          uint64_t v104 = (uint64_t)&v232[*(int *)(v148 + 76)];
          sub_24E563530(v104, (uint64_t *)&unk_2698F8860);
          uint64_t v105 = v228;
          (*(void (**)(uint64_t, uint64_t *, uint64_t *))(v228 + 32))(v104, v43, v50);
        }
        (*(void (**)(uint64_t, void, uint64_t, uint64_t *))(v105 + 56))(v104, 0, 1, v50);
        size_t v122 = v227;
      }
      else
      {
        if (v102 != 1)
        {
LABEL_69:
          swift_release();
          swift_release();
          __break(1u);
          goto LABEL_70;
        }
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t *))v53)(v100, 1, v50) != 1)
        {
LABEL_70:
          swift_release();
          swift_release();
          __break(1u);
          goto LABEL_71;
        }
        sub_24E563530((uint64_t)v56, &qword_2698F3240);
        size_t v122 = v227;
        *((void *)v227 + 1) = v101;
        v122[16] = 0;
      }
      sub_24E563530(v99, (uint64_t *)&unk_2698F8860);
      uint64_t v149 = v234;
      uint64_t v150 = v223;
      if (v122[16]) {
        goto LABEL_56;
      }
      uint64_t v151 = *((void *)v122 + 1);
      uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190);
      uint64_t v153 = v216;
      sub_24E576EA0((uint64_t)&v232[*(int *)(v152 + 76)], v216, (uint64_t *)&unk_2698F8860);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t *))v53)(v153, 1, v50) != 1)
      {
        uint64_t v154 = v228;
        uint64_t v155 = *(void (**)(char *, uint64_t, uint64_t *))(v228 + 32);
        v155(v150, v153, v50);
        uint64_t v156 = *(int *)(v152 + 76);
        uint64_t v157 = (uint64_t)v226;
        uint64_t v153 = v211;
        sub_24E576EA0((uint64_t)v226 + v156, v211, (uint64_t *)&unk_2698F8860);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t *))v53)(v153, 1, v50) != 1)
        {
          v155(v210, v153, v50);
          sub_24E563530((uint64_t)v149, &qword_2698F3180);
          uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3188);
          char v162 = (char *)v149 + *(int *)(v161 + 48);
          uint64_t v163 = *(int *)(v161 + 64);
          void *v149 = v222;
          uint64_t v164 = (uint64_t)&v162[*(int *)(v230 + 48)];
          uint64_t v165 = (uint64_t)&v162[*(int *)(v230 + 64)];
          uint64_t v166 = v227;
          char v167 = v227[16];
          char v168 = v227[17];
          *(_OWORD *)char v162 = *(_OWORD *)v227;
          v162[16] = v167;
          v162[17] = v168;
          sub_24E576EA0((uint64_t)v232, v164, &qword_2698F3190);
          sub_24E576EA0(v157, v165, &qword_2698F3190);
          *(void *)((char *)v149 + v163) = v221;
          swift_storeEnumTagMultiPayload();
          uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B8);
          uint64_t v170 = v231;
          v171 = (uint64_t **)((char *)v231 + *(int *)(v169 + 48));
          void *v231 = v220;
          uint64_t v172 = v225;
          uint64_t v173 = (char *)v171 + *(int *)(v225 + 48);
          uint64_t v174 = (char *)v171 + *(int *)(v225 + 64);
          void *v171 = v151;
          v155(v173, (uint64_t)v223, v50);
          v155(v174, (uint64_t)v210, v50);
          (*(void (**)(char *, void, uint64_t, uint64_t *))(v154 + 56))(v174, 0, 1, v50);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v224 + 56))(v171, 0, 1, v172);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A0);
          swift_storeEnumTagMultiPayload();
          uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3238);
          (*(void (**)(uint64_t **, void, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56))(v170, 0, 1, v175);
          uint64_t v146 = (uint64_t)v166;
          return sub_24E563530(v146, &qword_2698F3178);
        }
        (*(void (**)(char *, uint64_t *))(v154 + 8))(v150, v50);
        size_t v122 = v227;
      }
      sub_24E563530(v153, (uint64_t *)&unk_2698F8860);
      if (v122[16]) {
        goto LABEL_56;
      }
      uint64_t v158 = *((void *)v122 + 1);
      uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190);
      uint64_t v160 = v209;
      sub_24E576EA0((uint64_t)&v232[*(int *)(v159 + 76)], v209, (uint64_t *)&unk_2698F8860);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t *))v53)(v160, 1, v50) == 1)
      {
        sub_24E563530(v160, (uint64_t *)&unk_2698F8860);
      }
      else
      {
        uint64_t v176 = v228;
        uint64_t v177 = *(void (**)(char *, uint64_t, uint64_t *))(v228 + 32);
        v178 = v208;
        v177(v208, v160, v50);
        if (*(void *)((char *)v149 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3248) + 68)) == 2)
        {
          sub_24E563530((uint64_t)v149, &qword_2698F3180);
          uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3188);
          int v180 = (char *)v149 + *(int *)(v179 + 48);
          uint64_t v181 = *(int *)(v179 + 64);
          void *v149 = v222;
          uint64_t v182 = (uint64_t)&v180[*(int *)(v230 + 48)];
          uint64_t v183 = (uint64_t)&v180[*(int *)(v230 + 64)];
          char v184 = v122[16];
          char v185 = v122[17];
          *(_OWORD *)int v180 = *(_OWORD *)v122;
          v180[16] = v184;
          v180[17] = v185;
          sub_24E576EA0((uint64_t)v232, v182, &qword_2698F3190);
          sub_24E576EA0((uint64_t)v226, v183, &qword_2698F3190);
          *(void *)((char *)v149 + v181) = v221;
          swift_storeEnumTagMultiPayload();
          uint64_t v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B8);
          uint64_t v187 = v231;
          v188 = (uint64_t **)((char *)v231 + *(int *)(v186 + 48));
          void *v231 = v220;
          uint64_t v189 = v225;
          v190 = (char *)v188 + *(int *)(v225 + 48);
          v191 = (char *)v188 + *(int *)(v225 + 64);
          void *v188 = v158;
          v177(v190, (uint64_t)v208, v50);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t *))(v176 + 56))(v191, 1, 1, v50);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v224 + 56))(v188, 0, 1, v189);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A0);
          swift_storeEnumTagMultiPayload();
          uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3238);
          (*(void (**)(uint64_t **, void, uint64_t, uint64_t))(*(void *)(v192 - 8) + 56))(v187, 0, 1, v192);
LABEL_57:
          uint64_t v146 = (uint64_t)v122;
          return sub_24E563530(v146, &qword_2698F3178);
        }
        (*(void (**)(char *, uint64_t *))(v176 + 8))(v178, v50);
      }
LABEL_56:
      sub_24E563530((uint64_t)v149, &qword_2698F3180);
      v193 = (char *)v149 + v219[12];
      uint64_t v194 = v219[16];
      uint64_t v195 = v219[20];
      void *v149 = v222;
      v196 = &v193[*(int *)(v230 + 48)];
      uint64_t v197 = &v193[*(int *)(v230 + 64)];
      char v198 = v122[16];
      char v199 = v122[17];
      *(_OWORD *)v193 = *(_OWORD *)v122;
      v193[16] = v198;
      v193[17] = v199;
      v200 = v232;
      uint64_t v201 = *(void *)v232;
      uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190);
      sub_24E576EA0((uint64_t)&v200[*(int *)(v202 + 76)], (uint64_t)&v196[*(int *)(v202 + 76)], (uint64_t *)&unk_2698F8860);
      char v203 = v200[*(int *)(v202 + 80)];
      *(void *)v196 = v201;
      v196[*(int *)(v202 + 80)] = v203;
      uint64_t v204 = (uint64_t)v226;
      uint64_t v205 = *v226;
      sub_24E576EA0((uint64_t)v226 + *(int *)(v202 + 76), (uint64_t)&v197[*(int *)(v202 + 76)], (uint64_t *)&unk_2698F8860);
      char v206 = *(unsigned char *)(v204 + *(int *)(v202 + 80));
      *(void *)uint64_t v197 = v205;
      v197[*(int *)(v202 + 80)] = v206;
      *(void *)((char *)v149 + v194) = v220;
      *(void *)((char *)v149 + v195) = v221;
      swift_storeEnumTagMultiPayload();
      uint64_t v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3238);
      (*(void (**)(uint64_t **, uint64_t, uint64_t, uint64_t))(*(void *)(v207 - 8) + 56))(v231, 1, 1, v207);
      goto LABEL_57;
    case 3u:
      goto LABEL_64;
    case 4u:
      sub_24E563530((uint64_t)v56, &qword_2698F3240);
      uint64_t v106 = &qword_2698F3180;
      uint64_t v107 = (uint64_t)v46;
      goto LABEL_21;
    case 5u:
      uint64_t v106 = &qword_2698F3240;
      uint64_t v107 = (uint64_t)v56;
LABEL_21:
      sub_24E563530(v107, v106);
      uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3238);
      return (*(uint64_t (**)(uint64_t **, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v231, 1, 1, v108);
    case 6u:
      goto LABEL_65;
    default:
      goto LABEL_63;
  }
}

unint64_t sub_24E5CE320(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F8860);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v108 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3178);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v113 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v108 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3180);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (id *)((char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24E576EA0((uint64_t)v2, (uint64_t)v17, &qword_2698F3180);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v19 = 0xF000000000000007;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v113 = (char *)*v17;
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3188);
      uint64_t v21 = (char *)v17 + *(int *)(v20 + 48);
      uint64_t v112 = *(id *)((char *)v17 + *(int *)(v20 + 64));
      uint64_t v22 = *(int *)(v10 + 48);
      uint64_t v23 = *(int *)(v10 + 64);
      uint64_t v24 = (uint64_t)&v21[v23];
      char v25 = v21[16];
      char v26 = v21[17];
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v21;
      v14[16] = v25;
      int v110 = &v14[v22];
      uint64_t v111 = v14;
      v14[17] = v26;
      sub_24E612440((uint64_t)&v21[v22], (uint64_t)&v14[v22], &qword_2698F3190);
      uint64_t v27 = v24;
      uint64_t v28 = &v14[v23];
      sub_24E612440(v27, (uint64_t)&v14[v23], &qword_2698F3190);
      sub_24E563530((uint64_t)v2, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      if (!a1)
      {
        uint64_t v31 = v110;
        uint64_t v29 = (uint64_t)v111;
        v111[17] = 1;
        uint64_t v30 = v28;
        goto LABEL_14;
      }
      if (a1 == 1 || (uint64_t v22 = v23, a1 == 2))
      {
        uint64_t v29 = (uint64_t)v111;
        *(unsigned char *)(v29 + v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190) + 80)) = 1;
        uint64_t v30 = v28;
        uint64_t v31 = v110;
        if (*(unsigned char *)(v29 + 17) != 1) {
          goto LABEL_37;
        }
LABEL_14:
        uint64_t v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190) + 80);
        if (v31[v49] == 1)
        {
          if (v30[v49] == 1)
          {
            unint64_t v50 = v112;
            uint64_t v51 = v112[3];
            sub_24E563530((uint64_t)v2, &qword_2698F3180);
            if (v51)
            {
              *uint64_t v2 = v50;
              swift_storeEnumTagMultiPayload();
              swift_retain();
            }
            else
            {
              swift_storeEnumTagMultiPayload();
            }
            uint64_t v83 = *(void *)v29;
            uint64_t v84 = *(void *)v31;
            uint64_t v85 = *(void *)v30;
            unsigned int v86 = (void *)MEMORY[0x263F8EE78];
            if (*(void *)v29)
            {
              unsigned int v86 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
              unint64_t v88 = v86[2];
              unint64_t v87 = v86[3];
              if (v88 >= v87 >> 1) {
                unsigned int v86 = sub_24E575670((void *)(v87 > 1), v88 + 1, 1, v86);
              }
              v86[2] = v88 + 1;
              v86[v88 + 4] = v83;
            }
            if (v84)
            {
              uint64_t v89 = v86;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v89 = sub_24E575670(0, v89[2] + 1, 1, v89);
              }
              unsigned int v86 = v89;
              unint64_t v91 = v89[2];
              unint64_t v90 = v89[3];
              if (v91 >= v90 >> 1) {
                unsigned int v86 = sub_24E575670((void *)(v90 > 1), v91 + 1, 1, v89);
              }
              v86[2] = v91 + 1;
              v86[v91 + 4] = v84;
            }
            if (!v85) {
              goto LABEL_89;
            }
            goto LABEL_58;
          }
          if (*(void *)((char *)v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3248) + 68)) == 2)
          {
            uint64_t v68 = v112;
            uint64_t v69 = v112[3];
            sub_24E563530((uint64_t)v2, &qword_2698F3180);
            if (v69)
            {
              *uint64_t v2 = v68;
              swift_storeEnumTagMultiPayload();
              swift_retain();
            }
            else
            {
              swift_storeEnumTagMultiPayload();
            }
            uint64_t v100 = *(void *)v29;
            uint64_t v101 = *(void *)v31;
            uint64_t v85 = *(void *)v30;
            unsigned int v86 = (void *)MEMORY[0x263F8EE78];
            if (*(void *)v29)
            {
              unsigned int v86 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
              unint64_t v103 = v86[2];
              unint64_t v102 = v86[3];
              if (v103 >= v102 >> 1) {
                unsigned int v86 = sub_24E575670((void *)(v102 > 1), v103 + 1, 1, v86);
              }
              v86[2] = v103 + 1;
              v86[v103 + 4] = v100;
            }
            if (v101)
            {
              uint64_t v104 = v86;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v104 = sub_24E575670(0, v104[2] + 1, 1, v104);
              }
              unsigned int v86 = v104;
              unint64_t v106 = v104[2];
              unint64_t v105 = v104[3];
              if (v106 >= v105 >> 1) {
                unsigned int v86 = sub_24E575670((void *)(v105 > 1), v106 + 1, 1, v104);
              }
              v86[2] = v106 + 1;
              v86[v106 + 4] = v101;
            }
            if (!v85) {
              goto LABEL_89;
            }
LABEL_58:
            uint64_t v92 = v86;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v92 = sub_24E575670(0, v92[2] + 1, 1, v92);
            }
            uint64_t v93 = v92;
            unint64_t v95 = v92[2];
            unint64_t v94 = v92[3];
            if (v95 >= v94 >> 1) {
              uint64_t v93 = sub_24E575670((void *)(v94 > 1), v95 + 1, 1, v92);
            }
            v93[2] = v95 + 1;
            v93[v95 + 4] = v85;
LABEL_89:
            swift_release();
            sub_24E563530(v29, &qword_2698F3178);
            return (unint64_t)v113;
          }
        }
LABEL_37:
        sub_24E563530((uint64_t)v2, &qword_2698F3180);
        unsigned int v70 = (char *)v2 + *(int *)(v20 + 48);
        uint64_t v71 = *(int *)(v20 + 64);
        *uint64_t v2 = v113;
        uint64_t v72 = (uint64_t)&v70[*(int *)(v10 + 48)];
        uint64_t v73 = (uint64_t)&v70[*(int *)(v10 + 64)];
        char v74 = *(unsigned char *)(v29 + 16);
        char v75 = *(unsigned char *)(v29 + 17);
        *(_OWORD *)unsigned int v70 = *(_OWORD *)v29;
        v70[16] = v74;
        v70[17] = v75;
        sub_24E612440((uint64_t)v31, v72, &qword_2698F3190);
        sub_24E612440((uint64_t)v30, v73, &qword_2698F3190);
        *(void *)((char *)v2 + v71) = v112;
        goto LABEL_44;
      }
LABEL_94:
      swift_release();
      swift_release();
      __break(1u);
      goto LABEL_95;
    case 2:
      uint64_t v112 = *v17;
      uint64_t v32 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A8);
      uint64_t v33 = (char *)v17 + v32[12];
      uint64_t v34 = *(uint64_t *)((char *)v17 + v32[16]);
      uint64_t v108 = v32;
      uint64_t v109 = v34;
      uint64_t v111 = *(char **)((char *)v17 + v32[20]);
      uint64_t v35 = *(int *)(v10 + 48);
      uint64_t v36 = v113;
      uint64_t v37 = (uint64_t)&v113[v35];
      uint64_t v38 = *(int *)(v10 + 64);
      uint64_t v39 = (uint64_t)&v113[v38];
      uint64_t v40 = (uint64_t)&v33[v35];
      uint64_t v41 = (uint64_t)&v33[v38];
      LOBYTE(v35) = v33[16];
      LOBYTE(v38) = v33[17];
      *(_OWORD *)uint64_t v113 = *(_OWORD *)v33;
      v36[16] = v35;
      v36[17] = v38;
      uint64_t v42 = (void *)v37;
      sub_24E612440(v40, v37, &qword_2698F3190);
      int v110 = (char *)v39;
      sub_24E612440(v41, v39, &qword_2698F3190);
      sub_24E563530((uint64_t)v2, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      if (a1)
      {
        if (a1 == 1)
        {
          uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190);
          char v43 = v42;
          *((unsigned char *)v42 + *(int *)(v53 + 80)) = 1;
          sub_24E576EA0((uint64_t)v42 + *(int *)(v53 + 76), (uint64_t)v9, (uint64_t *)&unk_2698F8860);
          uint64_t v54 = sub_24E861878();
          int v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v9, 1, v54);
          sub_24E563530((uint64_t)v9, (uint64_t *)&unk_2698F8860);
          uint64_t v48 = (uint64_t)v113;
          uint64_t v45 = v110;
          if (v55 != 1) {
            goto LABEL_26;
          }
        }
        else
        {
          if (a1 != 2)
          {
LABEL_95:
            swift_release();
            swift_release();
            __break(1u);
            JUMPOUT(0x24E5CEFD8);
          }
          char v43 = v42;
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190);
          uint64_t v45 = v110;
          v110[*(int *)(v44 + 80)] = 1;
          sub_24E576EA0((uint64_t)&v45[*(int *)(v44 + 76)], (uint64_t)v7, (uint64_t *)&unk_2698F8860);
          uint64_t v46 = sub_24E861878();
          int v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v7, 1, v46);
          sub_24E563530((uint64_t)v7, (uint64_t *)&unk_2698F8860);
          uint64_t v48 = (uint64_t)v113;
          if (v47 != 1)
          {
LABEL_26:
            if ((*(unsigned char *)(v48 + 17) & 1) == 0) {
              goto LABEL_43;
            }
            goto LABEL_27;
          }
        }
LABEL_21:
        sub_24E563530((uint64_t)v2, &qword_2698F3180);
        swift_storeEnumTagMultiPayload();
        uint64_t v56 = *(void *)v48;
        uint64_t v57 = *v43;
        uint64_t v58 = *(void *)v45;
        if (*(void *)v48)
        {
          uint64_t v59 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
          unint64_t v61 = v59[2];
          unint64_t v60 = v59[3];
          if (v61 >= v60 >> 1) {
            uint64_t v59 = sub_24E575670((void *)(v60 > 1), v61 + 1, 1, v59);
          }
          uint64_t v62 = v109;
          v59[2] = v61 + 1;
          v59[v61 + 4] = v56;
          if (!v57) {
            goto LABEL_70;
          }
          goto LABEL_65;
        }
        uint64_t v59 = (void *)MEMORY[0x263F8EE78];
        uint64_t v62 = v109;
        if (v57)
        {
LABEL_65:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v59 = sub_24E575670(0, v59[2] + 1, 1, v59);
          }
          unint64_t v97 = v59[2];
          unint64_t v96 = v59[3];
          if (v97 >= v96 >> 1) {
            uint64_t v59 = sub_24E575670((void *)(v96 > 1), v97 + 1, 1, v59);
          }
          v59[2] = v97 + 1;
          v59[v97 + 4] = v57;
        }
LABEL_70:
        if (v58)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v59 = sub_24E575670(0, v59[2] + 1, 1, v59);
          }
          unint64_t v99 = v59[2];
          unint64_t v98 = v59[3];
          if (v99 >= v98 >> 1) {
            uint64_t v59 = sub_24E575670((void *)(v98 > 1), v99 + 1, 1, v59);
          }
          v59[2] = v99 + 1;
          v59[v99 + 4] = v58;
        }
        swift_release();
        sub_24E563530(v48, &qword_2698F3178);
        return v62 | 0x8000000000000000;
      }
      uint64_t v52 = v113;
      v113[17] = 1;
      uint64_t v45 = v110;
      char v43 = v42;
      uint64_t v48 = (uint64_t)v52;
      if (v52[16] == 1) {
        goto LABEL_21;
      }
LABEL_27:
      uint64_t v63 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3190) + 80);
      if (*((unsigned char *)v43 + v63) == 1)
      {
        if (v45[v63] == 1)
        {
          sub_24E563530((uint64_t)v2, &qword_2698F3180);
          swift_storeEnumTagMultiPayload();
          uint64_t v64 = *(void *)v48;
          uint64_t v57 = *v43;
          uint64_t v58 = *(void *)v45;
          if (*(void *)v48)
          {
            uint64_t v59 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
            unint64_t v66 = v59[2];
            unint64_t v65 = v59[3];
            unint64_t v67 = v66 + 1;
            if (v66 >= v65 >> 1) {
              goto LABEL_41;
            }
            goto LABEL_42;
          }
          goto LABEL_63;
        }
        if (*(void *)((char *)v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3248) + 68)) == 2)
        {
          sub_24E563530((uint64_t)v2, &qword_2698F3180);
          swift_storeEnumTagMultiPayload();
          uint64_t v64 = *(void *)v48;
          uint64_t v57 = *v43;
          uint64_t v58 = *(void *)v45;
          if (*(void *)v48)
          {
            uint64_t v59 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
            unint64_t v66 = v59[2];
            unint64_t v65 = v59[3];
            unint64_t v67 = v66 + 1;
            if (v66 >= v65 >> 1) {
LABEL_41:
            }
              uint64_t v59 = sub_24E575670((void *)(v65 > 1), v66 + 1, 1, v59);
LABEL_42:
            uint64_t v62 = v109;
            v59[2] = v67;
            v59[v66 + 4] = v64;
            goto LABEL_64;
          }
LABEL_63:
          uint64_t v59 = (void *)MEMORY[0x263F8EE78];
          uint64_t v62 = v109;
LABEL_64:
          if (v57) {
            goto LABEL_65;
          }
          goto LABEL_70;
        }
      }
LABEL_43:
      sub_24E563530((uint64_t)v2, &qword_2698F3180);
      int v76 = (char *)v2 + v108[12];
      uint64_t v77 = v108[16];
      uint64_t v78 = v108[20];
      *uint64_t v2 = v112;
      uint64_t v79 = (uint64_t)&v76[*(int *)(v10 + 48)];
      uint64_t v80 = (uint64_t)&v76[*(int *)(v10 + 64)];
      char v81 = *(unsigned char *)(v48 + 16);
      char v82 = *(unsigned char *)(v48 + 17);
      *(_OWORD *)int v76 = *(_OWORD *)v48;
      v76[16] = v81;
      v76[17] = v82;
      sub_24E612440((uint64_t)v43, v79, &qword_2698F3190);
      sub_24E612440((uint64_t)v45, v80, &qword_2698F3190);
      *(void *)((char *)v2 + v77) = v109;
      *(void *)((char *)v2 + v78) = v111;
LABEL_44:
      swift_storeEnumTagMultiPayload();
      return 0xF000000000000007;
    case 3:
      __break(1u);
      goto LABEL_92;
    case 4:

      return 0xF000000000000007;
    case 5:
      return v19;
    case 6:
      goto LABEL_93;
    default:
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
      goto LABEL_94;
  }
}

unint64_t sub_24E5CEFF4(void *a1)
{
  uint64_t v2 = (void *)v1;
  id v101 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3178);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v100 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v98 = (_OWORD *)((char *)&v92 - v7);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v92 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v92 - v12;
  MEMORY[0x270FA5388](v11);
  unint64_t v99 = (_OWORD *)((char *)&v92 - v14);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3180);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (id *)((char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24E576EA0(v1, (uint64_t)v17, &qword_2698F3180);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v19 = 0xF000000000000007;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      unint64_t v97 = *v17;
      uint64_t v20 = (char *)v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3188) + 48);
      swift_release();
      uint64_t v21 = *(int *)(v3 + 48);
      uint64_t v22 = v99;
      uint64_t v23 = (uint64_t)v99 + v21;
      uint64_t v24 = *(int *)(v3 + 64);
      uint64_t v25 = (uint64_t)v99 + v24;
      unint64_t v94 = (char *)v99 + v24;
      uint64_t v26 = (uint64_t)&v20[v21];
      uint64_t v27 = (uint64_t)&v20[v24];
      LOBYTE(v21) = v20[16];
      LOBYTE(v24) = v20[17];
      _OWORD *v99 = *(_OWORD *)v20;
      *((unsigned char *)v22 + 16) = v21;
      *((unsigned char *)v22 + 17) = v24;
      uint64_t v28 = v23;
      sub_24E612440(v26, v23, &qword_2698F3190);
      sub_24E612440(v27, v25, &qword_2698F3190);
      sub_24E563530((uint64_t)v2, &qword_2698F3180);
      *uint64_t v2 = v101;
      swift_storeEnumTagMultiPayload();
      uint64_t v100 = &v13[*(int *)(v3 + 48)];
      uint64_t v29 = v100;
      uint64_t v30 = (uint64_t)&v13[*(int *)(v3 + 64)];
      uint64_t v31 = *(void *)v22;
      uint64_t v32 = *((void *)v22 + 1);
      unsigned __int8 v33 = *((unsigned char *)v22 + 16);
      LODWORD(v93) = v33;
      LOBYTE(v25) = *((unsigned char *)v22 + 17);
      *(void *)uint64_t v13 = v31;
      *((void *)v13 + 1) = v32;
      unint64_t v95 = (char *)v31;
      uint64_t v96 = v30;
      v13[16] = v33;
      v13[17] = v25;
      sub_24E576EA0(v28, (uint64_t)v29, &qword_2698F3190);
      uint64_t v34 = (uint64_t)v94;
      sub_24E576EA0((uint64_t)v94, v30, &qword_2698F3190);
      uint64_t v35 = &v10[*(int *)(v3 + 48)];
      uint64_t v36 = (uint64_t)&v10[*(int *)(v3 + 64)];
      *(void *)uint64_t v10 = v31;
      *((void *)v10 + 1) = v32;
      v10[16] = (char)v93;
      v10[17] = v25;
      sub_24E576EA0(v28, (uint64_t)v35, &qword_2698F3190);
      sub_24E576EA0(v34, v36, &qword_2698F3190);
      uint64_t v37 = *(void *)v35;
      id v38 = v101;
      sub_24E563530((uint64_t)v35, &qword_2698F3190);
      uint64_t v39 = v98;
      uint64_t v40 = (uint64_t)v98 + *(int *)(v3 + 48);
      uint64_t v41 = (uint64_t *)((char *)v98 + *(int *)(v3 + 64));
      char v42 = *((unsigned char *)v22 + 16);
      char v43 = *((unsigned char *)v22 + 17);
      _OWORD *v98 = *v22;
      *((unsigned char *)v39 + 16) = v42;
      *((unsigned char *)v39 + 17) = v43;
      sub_24E576EA0(v28, v40, &qword_2698F3190);
      sub_24E576EA0(v34, (uint64_t)v41, &qword_2698F3190);
      uint64_t v44 = *v41;
      sub_24E563530((uint64_t)v41, &qword_2698F3190);
      sub_24E563530(v40, &qword_2698F3190);
      uint64_t v45 = v36;
      uint64_t v46 = (uint64_t)v95;
      sub_24E563530(v45, &qword_2698F3190);
      sub_24E563530(v96, &qword_2698F3190);
      sub_24E563530((uint64_t)v100, &qword_2698F3190);
      if (!v46)
      {
        int v47 = (void *)MEMORY[0x263F8EE78];
        if (!v37) {
          goto LABEL_21;
        }
        goto LABEL_16;
      }
      int v47 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v49 = v47[2];
      unint64_t v48 = v47[3];
      if (v49 >= v48 >> 1) {
        int v47 = sub_24E575670((void *)(v48 > 1), v49 + 1, 1, v47);
      }
      v47[2] = v49 + 1;
      v47[v49 + 4] = v46;
      if (v37)
      {
LABEL_16:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v47 = sub_24E575670(0, v47[2] + 1, 1, v47);
        }
        unint64_t v83 = v47[2];
        unint64_t v82 = v47[3];
        if (v83 >= v82 >> 1) {
          int v47 = sub_24E575670((void *)(v82 > 1), v83 + 1, 1, v47);
        }
        v47[2] = v83 + 1;
        v47[v83 + 4] = v37;
      }
LABEL_21:
      if (v44)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v47 = sub_24E575670(0, v47[2] + 1, 1, v47);
        }
        unint64_t v85 = v47[2];
        unint64_t v84 = v47[3];
        if (v85 >= v84 >> 1) {
          int v47 = sub_24E575670((void *)(v84 > 1), v85 + 1, 1, v47);
        }
        v47[2] = v85 + 1;
        v47[v85 + 4] = v44;
      }
      sub_24E563530((uint64_t)v99, &qword_2698F3178);
      return (unint64_t)v97;
    case 2:
      unint64_t v99 = *v17;
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A8);
      uint64_t v51 = (char *)v17 + *(int *)(v50 + 48);
      unint64_t v97 = *(id *)((char *)v17 + *(int *)(v50 + 64));
      swift_release();
      uint64_t v52 = *(int *)(v3 + 48);
      uint64_t v53 = v100;
      uint64_t v54 = (uint64_t)&v100[v52];
      uint64_t v55 = *(int *)(v3 + 64);
      uint64_t v56 = (uint64_t)&v100[v55];
      uint64_t v93 = &v100[v52];
      unint64_t v94 = &v100[v55];
      uint64_t v57 = (uint64_t)&v51[v52];
      uint64_t v58 = (uint64_t)&v51[v55];
      LOBYTE(v52) = v51[16];
      LOBYTE(v55) = v51[17];
      *(_OWORD *)uint64_t v100 = *(_OWORD *)v51;
      v53[16] = v52;
      v53[17] = v55;
      sub_24E612440(v57, v54, &qword_2698F3190);
      sub_24E612440(v58, v56, &qword_2698F3190);
      sub_24E563530((uint64_t)v2, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      uint64_t v59 = (uint64_t)&v13[*(int *)(v3 + 48)];
      unint64_t v95 = &v13[*(int *)(v3 + 64)];
      uint64_t v60 = (uint64_t)v95;
      uint64_t v96 = v59;
      uint64_t v62 = *(void *)v53;
      uint64_t v92 = *((void *)v53 + 1);
      uint64_t v61 = v92;
      LOBYTE(v56) = v53[16];
      char v63 = v53[17];
      *(void *)uint64_t v13 = v62;
      *((void *)v13 + 1) = v61;
      v13[16] = v56;
      v13[17] = v63;
      uint64_t v64 = (uint64_t)v93;
      sub_24E576EA0((uint64_t)v93, v59, &qword_2698F3190);
      uint64_t v65 = (uint64_t)v94;
      sub_24E576EA0((uint64_t)v94, v60, &qword_2698F3190);
      unint64_t v66 = &v10[*(int *)(v3 + 48)];
      uint64_t v67 = (uint64_t)&v10[*(int *)(v3 + 64)];
      uint64_t v68 = v92;
      *(void *)uint64_t v10 = v62;
      *((void *)v10 + 1) = v68;
      v10[16] = v56;
      v10[17] = v63;
      sub_24E576EA0(v64, (uint64_t)v66, &qword_2698F3190);
      sub_24E576EA0(v65, v67, &qword_2698F3190);
      uint64_t v69 = *(void *)v66;
      sub_24E563530((uint64_t)v66, &qword_2698F3190);
      unsigned int v70 = v98;
      uint64_t v71 = (uint64_t)v98 + *(int *)(v3 + 48);
      uint64_t v72 = (uint64_t *)((char *)v98 + *(int *)(v3 + 64));
      char v73 = v53[16];
      char v74 = v53[17];
      _OWORD *v98 = *(_OWORD *)v53;
      *((unsigned char *)v70 + 16) = v73;
      *((unsigned char *)v70 + 17) = v74;
      sub_24E576EA0(v64, v71, &qword_2698F3190);
      sub_24E576EA0(v65, (uint64_t)v72, &qword_2698F3190);
      uint64_t v75 = *v72;
      uint64_t v76 = (uint64_t)v72;
      uint64_t v77 = v62;
      sub_24E563530(v76, &qword_2698F3190);
      sub_24E563530(v71, &qword_2698F3190);
      sub_24E563530(v67, &qword_2698F3190);
      sub_24E563530((uint64_t)v95, &qword_2698F3190);
      sub_24E563530(v96, &qword_2698F3190);
      if (v62)
      {
        uint64_t v78 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v80 = v78[2];
        unint64_t v79 = v78[3];
        id v81 = v101;
        if (v80 >= v79 >> 1) {
          uint64_t v78 = sub_24E575670((void *)(v79 > 1), v80 + 1, 1, v78);
        }
        v78[2] = v80 + 1;
        v78[v80 + 4] = v77;
        if (!v69)
        {
LABEL_34:
          if (v75)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v78 = sub_24E575670(0, v78[2] + 1, 1, v78);
            }
            unint64_t v89 = v78[2];
            unint64_t v88 = v78[3];
            if (v89 >= v88 >> 1) {
              uint64_t v78 = sub_24E575670((void *)(v88 > 1), v89 + 1, 1, v78);
            }
            v78[2] = v89 + 1;
            v78[v89 + 4] = v75;
          }
          sub_24E563530((uint64_t)v100, &qword_2698F3178);
          id v90 = v81;
          return (unint64_t)v97;
        }
      }
      else
      {
        uint64_t v78 = (void *)MEMORY[0x263F8EE78];
        id v81 = v101;
        if (!v69) {
          goto LABEL_34;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v78 = sub_24E575670(0, v78[2] + 1, 1, v78);
      }
      unint64_t v87 = v78[2];
      unint64_t v86 = v78[3];
      if (v87 >= v86 >> 1) {
        uint64_t v78 = sub_24E575670((void *)(v86 > 1), v87 + 1, 1, v78);
      }
      v78[2] = v87 + 1;
      v78[v87 + 4] = v69;
      goto LABEL_34;
    case 3:
      swift_release();
      return 0xF000000000000007;
    case 4:

      return 0xF000000000000007;
    case 5:
      return v19;
    case 6:
      goto LABEL_44;
    default:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x24E5CF8BCLL);
  }
}

unint64_t sub_24E5CF8D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3178);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  id v101 = (char *)v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v93 - v6;
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v93 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v93 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v93 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3180);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (id *)((char *)v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24E576EA0(v1, (uint64_t)v18, &qword_2698F3180);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v20 = 0xF000000000000007;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      id v95 = *v18;
      uint64_t v26 = (char *)v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3188) + 48);
      swift_release();
      uint64_t v27 = *(int *)(v2 + 48);
      uint64_t v28 = (uint64_t)&v15[v27];
      uint64_t v29 = *(int *)(v2 + 64);
      uint64_t v30 = (uint64_t)&v15[v29];
      unint64_t v99 = &v15[v29];
      uint64_t v31 = (uint64_t)&v26[v27];
      uint64_t v32 = (uint64_t)&v26[v29];
      LOBYTE(v27) = v26[16];
      LOBYTE(v29) = v26[17];
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v26;
      v15[16] = v27;
      v15[17] = v29;
      uint64_t v33 = v28;
      unint64_t v97 = (char *)v28;
      sub_24E612440(v31, v28, &qword_2698F3190);
      sub_24E612440(v32, v30, &qword_2698F3190);
      sub_24E563530(v1, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = &v13[*(int *)(v2 + 48)];
      uint64_t v100 = &v13[*(int *)(v2 + 64)];
      uint64_t v35 = (uint64_t)v100;
      id v101 = v34;
      uint64_t v37 = *(void *)v15;
      unint64_t v98 = (char *)*((void *)v15 + 1);
      uint64_t v36 = (uint64_t)v98;
      char v38 = v15[16];
      LOBYTE(v30) = v15[17];
      *(void *)uint64_t v13 = v37;
      *((void *)v13 + 1) = v36;
      v13[16] = v38;
      v13[17] = v30;
      sub_24E576EA0(v33, (uint64_t)v34, &qword_2698F3190);
      uint64_t v39 = (uint64_t)v99;
      sub_24E576EA0((uint64_t)v99, v35, &qword_2698F3190);
      uint64_t v40 = &v10[*(int *)(v2 + 48)];
      uint64_t v96 = &v10[*(int *)(v2 + 64)];
      uint64_t v41 = (uint64_t)v98;
      *(void *)uint64_t v10 = v37;
      *((void *)v10 + 1) = v41;
      v10[16] = v38;
      v10[17] = v30;
      uint64_t v42 = (uint64_t)v97;
      sub_24E576EA0((uint64_t)v97, (uint64_t)v40, &qword_2698F3190);
      uint64_t v43 = (uint64_t)v96;
      sub_24E576EA0(v39, (uint64_t)v96, &qword_2698F3190);
      uint64_t v44 = *(void *)v40;
      sub_24E563530((uint64_t)v40, &qword_2698F3190);
      uint64_t v45 = (uint64_t)&v7[*(int *)(v2 + 48)];
      uint64_t v46 = &v7[*(int *)(v2 + 64)];
      char v47 = v15[16];
      char v48 = v15[17];
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v15;
      v7[16] = v47;
      v7[17] = v48;
      sub_24E576EA0(v42, v45, &qword_2698F3190);
      sub_24E576EA0(v39, (uint64_t)v46, &qword_2698F3190);
      uint64_t v49 = *(void *)v46;
      sub_24E563530((uint64_t)v46, &qword_2698F3190);
      sub_24E563530(v45, &qword_2698F3190);
      sub_24E563530(v43, &qword_2698F3190);
      sub_24E563530((uint64_t)v100, &qword_2698F3190);
      sub_24E563530((uint64_t)v101, &qword_2698F3190);
      if (v37)
      {
        uint64_t v50 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v52 = v50[2];
        unint64_t v51 = v50[3];
        if (v52 >= v51 >> 1) {
          uint64_t v50 = sub_24E575670((void *)(v51 > 1), v52 + 1, 1, v50);
        }
        unint64_t v53 = (unint64_t)v95;
        v50[2] = v52 + 1;
        v50[v52 + 4] = v37;
        if (!v44)
        {
LABEL_22:
          if (v49)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v50 = sub_24E575670(0, v50[2] + 1, 1, v50);
            }
            unint64_t v87 = v50[2];
            unint64_t v86 = v50[3];
            if (v87 >= v86 >> 1) {
              uint64_t v50 = sub_24E575670((void *)(v86 > 1), v87 + 1, 1, v50);
            }
            v50[2] = v87 + 1;
            v50[v87 + 4] = v49;
          }
          sub_24E563530((uint64_t)v15, &qword_2698F3178);
          return v53 | 0x8000000000000000;
        }
      }
      else
      {
        uint64_t v50 = (void *)MEMORY[0x263F8EE78];
        unint64_t v53 = (unint64_t)v95;
        if (!v44) {
          goto LABEL_22;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v50 = sub_24E575670(0, v50[2] + 1, 1, v50);
      }
      unint64_t v85 = v50[2];
      unint64_t v84 = v50[3];
      if (v85 >= v84 >> 1) {
        uint64_t v50 = sub_24E575670((void *)(v84 > 1), v85 + 1, 1, v50);
      }
      v50[2] = v85 + 1;
      v50[v85 + 4] = v44;
      goto LABEL_22;
    case 2:
      v93[1] = *v18;
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A8);
      uint64_t v55 = (char *)v18 + *(int *)(v54 + 48);
      uint64_t v100 = *(char **)((char *)v18 + *(int *)(v54 + 64));
      swift_release();
      uint64_t v56 = *(int *)(v2 + 48);
      uint64_t v57 = v101;
      uint64_t v58 = (uint64_t)&v101[v56];
      unint64_t v97 = &v101[v56];
      uint64_t v59 = *(int *)(v2 + 64);
      uint64_t v60 = (uint64_t)&v101[v59];
      uint64_t v61 = (uint64_t)&v55[v56];
      uint64_t v62 = (uint64_t)&v55[v59];
      LOBYTE(v56) = v55[16];
      LOBYTE(v59) = v55[17];
      *(_OWORD *)id v101 = *(_OWORD *)v55;
      v57[16] = v56;
      v57[17] = v59;
      sub_24E612440(v61, v58, &qword_2698F3190);
      uint64_t v63 = v62;
      uint64_t v64 = v60;
      sub_24E612440(v63, v60, &qword_2698F3190);
      sub_24E563530(v1, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      uint64_t v65 = (uint64_t)&v13[*(int *)(v2 + 48)];
      unint64_t v98 = &v13[*(int *)(v2 + 64)];
      uint64_t v66 = (uint64_t)v98;
      unint64_t v99 = (char *)v65;
      uint64_t v68 = *(void *)v57;
      uint64_t v96 = (char *)*((void *)v57 + 1);
      uint64_t v67 = (uint64_t)v96;
      char v69 = v57[16];
      unsigned __int8 v70 = v57[17];
      LODWORD(v95) = v70;
      *(void *)uint64_t v13 = v68;
      *((void *)v13 + 1) = v67;
      v13[16] = v69;
      v13[17] = v70;
      uint64_t v71 = (uint64_t)v97;
      sub_24E576EA0((uint64_t)v97, v65, &qword_2698F3190);
      sub_24E576EA0(v64, v66, &qword_2698F3190);
      uint64_t v72 = &v10[*(int *)(v2 + 48)];
      unint64_t v94 = &v10[*(int *)(v2 + 64)];
      uint64_t v73 = (uint64_t)v96;
      *(void *)uint64_t v10 = v68;
      *((void *)v10 + 1) = v73;
      v10[16] = v69;
      v10[17] = (char)v95;
      sub_24E576EA0(v71, (uint64_t)v72, &qword_2698F3190);
      uint64_t v74 = (uint64_t)v94;
      sub_24E576EA0(v64, (uint64_t)v94, &qword_2698F3190);
      uint64_t v75 = *(void *)v72;
      sub_24E563530((uint64_t)v72, &qword_2698F3190);
      uint64_t v76 = (uint64_t)&v7[*(int *)(v2 + 48)];
      uint64_t v77 = &v7[*(int *)(v2 + 64)];
      char v78 = v57[16];
      char v79 = v57[17];
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v57;
      v7[16] = v78;
      v7[17] = v79;
      sub_24E576EA0(v71, v76, &qword_2698F3190);
      sub_24E576EA0(v64, (uint64_t)v77, &qword_2698F3190);
      uint64_t v80 = *(void *)v77;
      sub_24E563530((uint64_t)v77, &qword_2698F3190);
      sub_24E563530(v76, &qword_2698F3190);
      sub_24E563530(v74, &qword_2698F3190);
      sub_24E563530((uint64_t)v98, &qword_2698F3190);
      sub_24E563530((uint64_t)v99, &qword_2698F3190);
      if (!v68)
      {
        id v81 = (void *)MEMORY[0x263F8EE78];
        if (!v75) {
          goto LABEL_35;
        }
        goto LABEL_30;
      }
      id v81 = sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v83 = v81[2];
      unint64_t v82 = v81[3];
      if (v83 >= v82 >> 1) {
        id v81 = sub_24E575670((void *)(v82 > 1), v83 + 1, 1, v81);
      }
      v81[2] = v83 + 1;
      v81[v83 + 4] = v68;
      if (v75)
      {
LABEL_30:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v81 = sub_24E575670(0, v81[2] + 1, 1, v81);
        }
        unint64_t v89 = v81[2];
        unint64_t v88 = v81[3];
        if (v89 >= v88 >> 1) {
          id v81 = sub_24E575670((void *)(v88 > 1), v89 + 1, 1, v81);
        }
        v81[2] = v89 + 1;
        v81[v89 + 4] = v75;
      }
LABEL_35:
      if (v80)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v81 = sub_24E575670(0, v81[2] + 1, 1, v81);
        }
        unint64_t v91 = v81[2];
        unint64_t v90 = v81[3];
        if (v91 >= v90 >> 1) {
          id v81 = sub_24E575670((void *)(v90 > 1), v91 + 1, 1, v81);
        }
        v81[2] = v91 + 1;
        v81[v91 + 4] = v80;
      }
      sub_24E563530((uint64_t)v101, &qword_2698F3178);
      return (unint64_t)v100;
    case 3:
      swift_release();
      sub_24E563530(v1, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      return 0xF000000000000007;
    case 4:

      return 0xF000000000000007;
    case 5:
      return v20;
    case 6:
      __break(1u);
      JUMPOUT(0x24E5D0250);
    default:
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3198);
      uint64_t v22 = (char *)v18 + *(int *)(v21 + 48);
      uint64_t v23 = (uint64_t)v18 + *(int *)(v21 + 64);
      sub_24E563530(v1, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      sub_24E563530(v23, &qword_2698F3140);
      uint64_t v24 = sub_24E861858();
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v22, v24);
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3108);
      (*(void (**)(id *, uint64_t))(*(void *)(v25 - 8) + 8))(v18, v25);
      return 0xF000000000000007;
  }
}

uint64_t sub_24E5D026C@<X0>(char *a1@<X0>, char **a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v109 = a1;
  uint64_t v112 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3130);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (uint64_t *)((char *)&v96 - v8);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3138);
  uint64_t v110 = *(void *)(v108 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v108);
  unint64_t v12 = (unint64_t)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v107 = (char *)&v96 - v13;
  uint64_t v14 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3178);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3180);
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v20 = (void *)v3;
  sub_24E576EA0(v3, (uint64_t)v19, &qword_2698F3180);
  uint64_t v111 = (char *)v17;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v105 = *(void **)v19;
      uint64_t v7 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3188);
      uint64_t v29 = &v19[*((int *)v7 + 12)];
      uint64_t v30 = *(void **)&v19[*((int *)v7 + 16)];
      uint64_t v17 = (uint64_t)v14;
      uint64_t v31 = *((int *)v14 + 12);
      uint64_t v32 = &v16[v31];
      uint64_t v33 = *((int *)v14 + 16);
      uint64_t v14 = &v16[v33];
      uint64_t v34 = (uint64_t)&v29[v31];
      unint64_t v19 = &v29[v33];
      LOBYTE(v31) = v29[16];
      LOBYTE(v33) = v29[17];
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v29;
      v16[16] = v31;
      v16[17] = v33;
      unint64_t v12 = (unint64_t)&qword_2698F3190;
      sub_24E612440(v34, (uint64_t)v32, &qword_2698F3190);
      sub_24E612440((uint64_t)v19, (uint64_t)v14, &qword_2698F3190);
      uint64_t v113 = v30;
      sub_24E563530((uint64_t)v20, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      uint64_t v35 = v30[3];
      unint64_t v106 = v14;
      if (v35 >= 1)
      {
        uint64_t v104 = v32;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v37 = v108;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v19 = (char *)&v113;
          sub_24E609AEC(&qword_2698F3138, &qword_2698F3250);
          uint64_t v30 = v113;
        }
        sub_24E612440((uint64_t)v30+ ((*(unsigned __int8 *)(v110 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ *(void *)(v110 + 72) * v30[4], (uint64_t)v9, &qword_2698F3138);
        uint64_t v38 = v30[4];
        BOOL v39 = __OFADD__(v38, 1);
        unint64_t v40 = v38 + 1;
        if (v39)
        {
          __break(1u);
          goto LABEL_44;
        }
        id v101 = v7;
        unint64_t v102 = v20;
        uint64_t v103 = v17;
        uint64_t v41 = v30[3];
        if ((int64_t)v40 >= v30[2]) {
          unint64_t v42 = 0;
        }
        else {
          unint64_t v42 = v40;
        }
        unint64_t v40 = *(int *)(v37 + 48);
        uint64_t v43 = *(int *)(v37 + 64);
        v30[4] = v42;
        if (!__OFSUB__(v41, 1))
        {
          uint64_t v44 = v107;
          uint64_t v45 = (uint64_t)&v107[v43];
          uint64_t v46 = &v107[v40];
          v30[3] = v41 - 1;
          char v47 = *(void (**)(void *, void, uint64_t, uint64_t))(v110 + 56);
          v110 += 56;
          unint64_t v99 = v46;
          uint64_t v100 = v47;
          v47(v9, 0, 1, v37);
          char v48 = (char *)v9 + *(int *)(v37 + 48);
          uint64_t v49 = (uint64_t)v9 + *(int *)(v37 + 64);
          void *v44 = *v9;
          uint64_t v50 = sub_24E861878();
          uint64_t v51 = *(void *)(v50 - 8);
          unint64_t v97 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
          uint64_t v98 = v51 + 32;
          v97(v46, v48, v50);
          sub_24E612440(v49, v45, (uint64_t *)&unk_2698F8860);
          unint64_t v52 = v102;
          sub_24E563530((uint64_t)v102, &qword_2698F3180);
          unint64_t v53 = (char *)v52 + *((int *)v101 + 12);
          uint64_t v54 = *((int *)v101 + 16);
          uint64_t v55 = (uint64_t)v104;
          *unint64_t v52 = v105;
          uint64_t v56 = (uint64_t)&v53[*(int *)(v103 + 48)];
          uint64_t v57 = (uint64_t)&v53[*(int *)(v103 + 64)];
          char v58 = v16[16];
          char v59 = v16[17];
          *(_OWORD *)unint64_t v53 = *(_OWORD *)v16;
          v53[16] = v58;
          v53[17] = v59;
          sub_24E612440(v55, v56, &qword_2698F3190);
          sub_24E612440((uint64_t)v106, v57, &qword_2698F3190);
          *(void *)((char *)v52 + v54) = v113;
          swift_storeEnumTagMultiPayload();
          uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B8);
          uint64_t v61 = (char **)((char *)v112 + *(int *)(v60 + 48));
          void *v112 = v109;
          uint64_t v62 = (char *)v61 + *(int *)(v37 + 48);
          uint64_t v63 = (uint64_t)v61 + *(int *)(v37 + 64);
          *uint64_t v61 = *v44;
          v97(v62, v99, v50);
          sub_24E612440(v45, v63, (uint64_t *)&unk_2698F8860);
          v100(v61, 0, 1, v37);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A0);
          goto LABEL_21;
        }
        goto LABEL_45;
      }
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v110 + 56))(v9, 1, 1, v108);
      sub_24E563530((uint64_t)v9, &qword_2698F3130);
      uint64_t v7 = *(char **)v16;
      uint64_t v9 = v32;
      uint64_t v37 = *(void *)v32;
      uint64_t v14 = *(char **)v14;
      if (*(void *)v16)
      {
        unint64_t v19 = (char *)sub_24E575670(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v12 = *((void *)v19 + 2);
        unint64_t v40 = *((void *)v19 + 3);
        uint64_t v30 = (void *)(v12 + 1);
        if (v12 >= v40 >> 1) {
          goto LABEL_47;
        }
        goto LABEL_25;
      }
      unint64_t v19 = (char *)MEMORY[0x263F8EE78];
      if (!v37) {
        goto LABEL_35;
      }
      goto LABEL_30;
    case 2u:
      __break(1u);
      goto LABEL_49;
    case 3u:
      uint64_t v113 = *(void **)v19;
      uint64_t v30 = v113;
      sub_24E563530(v3, &qword_2698F3180);
      uint64_t v16 = v111;
      swift_storeEnumTagMultiPayload();
      if ((uint64_t)v30[3] < 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v110 + 56))(v7, 1, 1, v108);
        swift_release();
        sub_24E563530((uint64_t)v7, &qword_2698F3130);
        sub_24E563530(v3, &qword_2698F3180);
        swift_storeEnumTagMultiPayload();
LABEL_28:
        void *v112 = v109;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B0);
        return swift_storeEnumTagMultiPayload();
      }
      char v64 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v37 = v108;
      if ((v64 & 1) == 0)
      {
        unint64_t v19 = (char *)&v113;
        sub_24E609AEC(&qword_2698F3138, &qword_2698F3250);
        uint64_t v30 = v113;
      }
      sub_24E612440((uint64_t)v30+ ((*(unsigned __int8 *)(v110 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ *(void *)(v110 + 72) * v30[4], (uint64_t)v7, &qword_2698F3138);
      uint64_t v65 = v30[4];
      BOOL v39 = __OFADD__(v65, 1);
      unint64_t v40 = v65 + 1;
      if (v39)
      {
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
      }
      else
      {
        uint64_t v66 = v30[3];
        if ((int64_t)v40 >= v30[2]) {
          unint64_t v67 = 0;
        }
        else {
          unint64_t v67 = v40;
        }
        unint64_t v40 = *(int *)(v37 + 48);
        uint64_t v68 = *(int *)(v37 + 64);
        v30[4] = v67;
        if (!__OFSUB__(v66, 1))
        {
          char v69 = (char *)(v12 + v40);
          unint64_t v106 = (char *)(v12 + v68);
          uint64_t v107 = (char *)(v12 + v40);
          v30[3] = v66 - 1;
          uint64_t v110 = *(void *)(v110 + 56);
          ((void (*)(char *, void, uint64_t, uint64_t))v110)(v7, 0, 1, v37);
          unsigned __int8 v70 = &v7[*(int *)(v37 + 48)];
          uint64_t v71 = (uint64_t)&v7[*(int *)(v37 + 64)];
          *(void *)unint64_t v12 = *(void *)v7;
          uint64_t v72 = sub_24E861878();
          uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32);
          v73(v69, v70, v72);
          uint64_t v74 = v106;
          sub_24E612440(v71, (uint64_t)v106, (uint64_t *)&unk_2698F8860);
          sub_24E563530((uint64_t)v20, &qword_2698F3180);
          *unint64_t v20 = v113;
          swift_storeEnumTagMultiPayload();
          uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B8);
          uint64_t v76 = (char **)((char *)v112 + *(int *)(v75 + 48));
          void *v112 = v109;
          uint64_t v77 = (char *)v76 + *(int *)(v37 + 48);
          uint64_t v78 = (uint64_t)v76 + *(int *)(v37 + 64);
          *uint64_t v76 = *(void *)v12;
          v73(v77, v107, v72);
          sub_24E612440((uint64_t)v74, v78, (uint64_t *)&unk_2698F8860);
          ((void (*)(void *, void, uint64_t, uint64_t))v110)(v76, 0, 1, v37);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A0);
LABEL_21:
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B0);
          return swift_storeEnumTagMultiPayload();
        }
      }
      __break(1u);
LABEL_47:
      unint64_t v19 = (char *)sub_24E575670((void *)(v40 > 1), (int64_t)v30, 1, v19);
LABEL_25:
      *((void *)v19 + 2) = v30;
      *(void *)&v19[8 * v12 + 32] = v7;
      if (v37)
      {
LABEL_30:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v19 = (char *)sub_24E575670(0, *((void *)v19 + 2) + 1, 1, v19);
        }
        unint64_t v83 = *((void *)v19 + 2);
        unint64_t v82 = *((void *)v19 + 3);
        if (v83 >= v82 >> 1) {
          unint64_t v19 = (char *)sub_24E575670((void *)(v82 > 1), v83 + 1, 1, v19);
        }
        *((void *)v19 + 2) = v83 + 1;
        *(void *)&v19[8 * v83 + 32] = v37;
      }
LABEL_35:
      if (v14)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v19 = (char *)sub_24E575670(0, *((void *)v19 + 2) + 1, 1, v19);
        }
        unint64_t v85 = *((void *)v19 + 2);
        unint64_t v84 = *((void *)v19 + 3);
        if (v85 >= v84 >> 1) {
          unint64_t v19 = (char *)sub_24E575670((void *)(v84 > 1), v85 + 1, 1, v19);
        }
        *((void *)v19 + 2) = v85 + 1;
        *(void *)&v19[8 * v85 + 32] = v14;
      }
      *(void *)uint64_t v16 = 0;
      *uint64_t v9 = 0;
      unint64_t v86 = v106;
      *(void *)unint64_t v106 = 0;
      sub_24E563530((uint64_t)v20, &qword_2698F3180);
      unint64_t v87 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A8);
      unint64_t v88 = (char *)v20 + v87[12];
      uint64_t v89 = v87[16];
      uint64_t v90 = v87[20];
      *unint64_t v20 = v105;
      uint64_t v91 = (uint64_t)&v88[*(int *)(v17 + 48)];
      uint64_t v92 = (uint64_t)&v88[*(int *)(v17 + 64)];
      char v93 = v16[16];
      char v94 = v16[17];
      *(_OWORD *)unint64_t v88 = *(_OWORD *)v16;
      v88[16] = v93;
      v88[17] = v94;
      sub_24E612440((uint64_t)v9, v91, &qword_2698F3190);
      sub_24E612440((uint64_t)v86, v92, &qword_2698F3190);
      *(void *)((char *)v20 + v89) = v109;
      *(void *)((char *)v20 + v90) = v113;
      swift_storeEnumTagMultiPayload();
      void *v112 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B0);
      return swift_storeEnumTagMultiPayload();
    case 4u:
      char v79 = *(void **)v19;
      sub_24E563530(v3, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B8);
      id v81 = (char **)((char *)v112 + *(int *)(v80 + 48));
      void *v112 = v109;
      *id v81 = v79;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A0);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B0);
      return swift_storeEnumTagMultiPayload();
    case 5u:
      goto LABEL_28;
    case 6u:
LABEL_49:
      __break(1u);
      JUMPOUT(0x24E5D0E84);
    default:
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3198);
      uint64_t v22 = &v19[*(int *)(v21 + 48)];
      uint64_t v23 = (uint64_t)&v19[*(int *)(v21 + 64)];
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3108);
      uint64_t v25 = v112;
      (*(void (**)(char **, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v112, v19, v24);
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31C0);
      uint64_t v27 = (char *)v25 + *(int *)(v26 + 48);
      uint64_t v28 = sub_24E861858();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v27, v22, v28);
      sub_24E612440(v23, (uint64_t)v25 + *(int *)(v26 + 64), &qword_2698F3140);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B0);
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_24E5D0EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v35 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3140);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v6;
  uint64_t v32 = sub_24E861858();
  uint64_t v7 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3108);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3248);
  uint64_t v15 = v14 - 8;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v33 = (uint64_t)&v31 - v19;
  uint64_t v34 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  uint64_t v20 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v37, v32);
  sub_24E576EA0(v38, (uint64_t)v6, &qword_2698F3140);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3198);
  uint64_t v22 = &v18[*(int *)(v21 + 48)];
  uint64_t v23 = (uint64_t)&v18[*(int *)(v21 + 64)];
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v13, v10);
  uint64_t v24 = v22;
  uint64_t v25 = v20;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v24, v9, v20);
  uint64_t v26 = (uint64_t)v31;
  sub_24E576EA0((uint64_t)v31, v23, &qword_2698F3140);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3180);
  swift_storeEnumTagMultiPayload();
  LODWORD(v11) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v26, 1, v25);
  sub_24E563530(v26, &qword_2698F3140);
  uint64_t v27 = 2;
  if (v11 != 1) {
    uint64_t v27 = 3;
  }
  *(void *)&v18[*(int *)(v15 + 76)] = v27;
  uint64_t v28 = v33;
  sub_24E612440((uint64_t)v18, v33, &qword_2698F3248);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3270);
  uint64_t v29 = swift_allocObject();
  *(_DWORD *)(v29 + ((*(unsigned int *)(*(void *)v29 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_24E576EA0(v28, v29 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v29 + 16), &qword_2698F3248);
  sub_24E563530(v28, &qword_2698F3248);
  sub_24E563530(v38, &qword_2698F3140);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v37, v25);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v10);
  uint64_t result = v36;
  *(void *)(v36 + 16) = v29;
  return result;
}

uint64_t sub_24E5D12EC(uint64_t a1, uint64_t a2)
{
  v2[10] = a1;
  v2[11] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A0);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5D1390, 0, 0);
}

uint64_t sub_24E5D1390()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  v0[2] = v0;
  v0[7] = v1;
  v0[3] = sub_24E5D14CC;
  uint64_t v3 = (char *)swift_continuation_init();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = v4 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v4 + 16);
  uint64_t v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(void *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_24E5D169C(v5, v3, v2);
  v0[14] = 0;
  os_unfair_lock_unlock(v6);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24E5D14CC()
{
  sub_24E612440(*(void *)(*(void *)v0 + 96), *(void *)(*(void *)v0 + 104), &qword_2698F31A0);
  return MEMORY[0x270FA2498](sub_24E5D15E4, 0, 0);
}

uint64_t sub_24E5D15E4()
{
  sub_24E5D1E54(&qword_2698F31A0, &qword_2698F3130, v0[10]);
  sub_24E563530(v0[13], &qword_2698F31A0);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E5D169C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v62 = a3;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A0);
  uint64_t v5 = MEMORY[0x270FA5388](v59);
  uint64_t v58 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v68 = (uint64_t *)((char *)&v56 - v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v73 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3140);
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v60 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v70 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v72 = (uint64_t)&v56 - v13;
  uint64_t v75 = sub_24E861858();
  uint64_t v71 = *(void *)(v75 - 8);
  uint64_t v14 = *(void *)(v71 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v75);
  uint64_t v66 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  char v69 = (char *)&v56 - v16;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3108);
  uint64_t v67 = *(void *)(v61 - 8);
  uint64_t v17 = *(void *)(v67 + 64);
  uint64_t v18 = MEMORY[0x270FA5388](v61);
  uint64_t v65 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v74 = (char *)&v56 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B0);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v56 - v24;
  uint64_t v63 = a2;
  uint64_t v64 = a1;
  sub_24E5D026C(a2, (char **)((char *)&v56 - v24));
  sub_24E576EA0((uint64_t)v25, (uint64_t)v23, &qword_2698F31B0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v46 = *(void *)(*(void *)v23 + 16);
      if (v46)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v46; ++i)
          swift_continuation_throwingResume();
        swift_bridgeObjectRelease();
      }
      sub_24E563530((uint64_t)v25, &qword_2698F31B0);
      return swift_bridgeObjectRelease();
    case 2u:
      uint64_t v49 = *(void *)v23;
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B8);
      uint64_t v51 = (void (*)(void, void, void))v68;
      sub_24E612440((uint64_t)&v23[*(int *)(v50 + 48)], (uint64_t)v68, &qword_2698F31A0);
      uint64_t v52 = v58;
      sub_24E576EA0((uint64_t)v51, v58, &qword_2698F31A0);
      sub_24E612440(v52, *(void *)(*(void *)(v49 + 64) + 40), &qword_2698F31A0);
      swift_continuation_resume();
      sub_24E563530((uint64_t)v51, &qword_2698F31A0);
      return sub_24E563530((uint64_t)v25, &qword_2698F31B0);
    case 3u:
      uint64_t v53 = *(void *)v23;
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3138);
      uint64_t v55 = (void (*)(void, void, void))v68;
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v68, 1, 1, v54);
      swift_storeEnumTagMultiPayload();
      sub_24E612440((uint64_t)v55, *(void *)(*(void *)(v53 + 64) + 40), &qword_2698F31A0);
      swift_continuation_resume();
      return sub_24E563530((uint64_t)v25, &qword_2698F31B0);
    default:
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31C0);
      uint64_t v27 = &v23[*(int *)(v26 + 48)];
      uint64_t v28 = &v23[*(int *)(v26 + 64)];
      uint64_t v29 = v67;
      uint64_t v30 = *(void **)(v67 + 32);
      uint64_t v58 = v67 + 32;
      uint64_t v68 = v30;
      uint64_t v31 = v61;
      ((void (*)(char *, char *, uint64_t))v30)(v74, v23, v61);
      uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
      uint64_t v59 = v71 + 32;
      uint64_t v32 = v69;
      v57(v69, v27, v75);
      uint64_t v33 = (uint64_t)v28;
      uint64_t v34 = v72;
      sub_24E612440(v33, v72, &qword_2698F3140);
      uint64_t v35 = sub_24E863FE8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v73, 1, 1, v35);
      uint64_t v36 = v29;
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v65, v74, v31);
      uint64_t v37 = v71;
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v66, v32, v75);
      sub_24E576EA0(v34, v70, &qword_2698F3140);
      unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      unint64_t v39 = (v17 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v40 = (*(unsigned __int8 *)(v37 + 80) + v39 + 8) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      unint64_t v41 = (v14 + *(unsigned __int8 *)(v60 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = 0;
      *(void *)(v42 + 24) = 0;
      ((void (*)(unint64_t, char *, uint64_t))v68)(v42 + v38, v65, v31);
      *(void *)(v42 + v39) = v62;
      unint64_t v43 = v42 + v40;
      uint64_t v44 = v75;
      v57((char *)v43, v66, v75);
      sub_24E612440(v70, v42 + v41, &qword_2698F3140);
      swift_retain();
      uint64_t v45 = sub_24E5C54D0(v73, (uint64_t)&unk_2698F31D0, v42);
      sub_24E5CC7D8(v45, (uint64_t)v63);
      swift_release();
      sub_24E563530(v72, &qword_2698F3140);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v69, v44);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v74, v31);
      return sub_24E563530((uint64_t)v25, &qword_2698F31B0);
  }
}

void sub_24E5D1E54(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (void **)((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24E576EA0(v6, (uint64_t)v10, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = *v10;
    uint64_t v11 = v14;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
    swift_willThrowTypedImpl();
    uint64_t v14 = v11;
    if (sub_24E864958())
    {
    }
    else
    {
      swift_allocError();
      *uint64_t v12 = v14;
    }
  }
  else
  {
    sub_24E612440((uint64_t)v10, a3, a2);
  }
}

void sub_24E5D1FA0(uint64_t a1)
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(a1 + 16)
                          + ((*(unsigned int *)(**(void **)(a1 + 16) + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v1);
  sub_24E5D2044();

  os_unfair_lock_unlock(v1);
}

unint64_t sub_24E5D2044()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = sub_24E5CF8D8();
  if ((~result & 0xF000000000000007) != 0)
  {
    uint64_t v7 = result;
    uint64_t v22 = v5;
    if ((result & 0x8000000000000000) != 0)
    {
      uint64_t v12 = result & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v13 = *(void *)(v5 + 16);
      if (v13)
      {
        unint64_t v20 = result;
        uint64_t v21 = v0;
        sub_24E863F68();
        sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
        uint64_t v19 = v12;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v14 = 0;
        do
        {
          ++v14;
          uint64_t v15 = swift_allocError();
          sub_24E863B28();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
          swift_allocError();
          *uint64_t v16 = v15;
          swift_continuation_throwingResumeWithError();
        }
        while (v13 != v14);
        swift_bridgeObjectRelease();
        uint64_t v7 = v20;
      }
      else
      {
        swift_retain();
      }
      sub_24E864068();
      sub_24E5AC01C(v7);
      return swift_release();
    }
    else
    {
      uint64_t v8 = *(void *)(v6 + 16);
      if (v8)
      {
        uint64_t v18 = v3;
        uint64_t v19 = v1;
        unint64_t v20 = result;
        uint64_t v21 = v0;
        sub_24E863F68();
        sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v9 = 0;
        do
        {
          ++v9;
          uint64_t v10 = swift_allocError();
          sub_24E863B28();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
          swift_allocError();
          *uint64_t v11 = v10;
          swift_continuation_throwingResumeWithError();
        }
        while (v8 != v9);
        swift_bridgeObjectRelease();
        uint64_t v7 = v20;
        uint64_t v3 = v18;
      }
      else
      {
        swift_retain();
      }
      sub_24E864068();
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3138);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v3, 1, 1, v17);
      swift_storeEnumTagMultiPayload();
      sub_24E612440((uint64_t)v3, *(void *)(*(void *)(v7 + 64) + 40), &qword_2698F31A0);
      swift_continuation_resume();
      swift_release();
      return sub_24E5AC01C(v7);
    }
  }
  return result;
}

uint64_t sub_24E5D23FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  _OWORD v7[3] = a4;
  _OWORD v7[4] = a5;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_24E5D2424, 0, 0);
}

uint64_t sub_24E5D2424()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24E5C54C4;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  uint64_t v6 = MEMORY[0x263F8EE60] + 8;
  uint64_t v7 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA22B8](v4, v5, v6, 0, 0, &unk_2698F31E0, v1, v7);
}

uint64_t sub_24E5D2514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[5] = a5;
  v6[6] = a6;
  v6[3] = a3;
  v6[4] = a4;
  v6[2] = a2;
  v6[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A0);
  v6[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3140);
  v6[9] = swift_task_alloc();
  uint64_t v7 = sub_24E861858();
  v6[10] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[11] = v8;
  v6[12] = *(void *)(v8 + 64);
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3108);
  v6[15] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[16] = v10;
  v6[17] = *(void *)(v10 + 64);
  v6[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  v6[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5D26F0, 0, 0);
}

uint64_t sub_24E5D26F0()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[16];
  uint64_t v29 = v2;
  uint64_t v31 = v0[17];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[11];
  uint64_t v36 = v0[14];
  uint64_t v37 = v0[12];
  uint64_t v35 = v0[10];
  uint64_t v40 = v0[9];
  uint64_t v39 = v0[6];
  uint64_t v6 = v0[3];
  uint64_t v33 = v0[4];
  uint64_t v34 = v0[5];
  uint64_t v7 = sub_24E863FE8();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v1, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v10 + v9, v29, v4);
  *(void *)(v10 + ((v31 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = v33;
  swift_retain();
  sub_24E588030(v1, (uint64_t)&unk_2698F31F0, v10);
  sub_24E563530(v1, (uint64_t *)&unk_2698F7FE0);
  uint64_t v30 = v8;
  uint64_t v32 = v7;
  v8(v1, 1, 1, v7);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v28(v36, v34, v35);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v12 = (v37 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  unint64_t v27 = v11;
  unint64_t v14 = v13 + v11;
  uint64_t v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  v15(v14, v36, v35);
  unint64_t v38 = v12;
  *(void *)(v13 + v12) = v33;
  swift_retain();
  sub_24E588030(v1, (uint64_t)&unk_2698F3200, v13);
  sub_24E563530(v1, (uint64_t *)&unk_2698F7FE0);
  sub_24E576EA0(v39, v40, &qword_2698F3140);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v40, 1, v35) == 1)
  {
    sub_24E563530(v0[9], &qword_2698F3140);
  }
  else
  {
    uint64_t v16 = v0[19];
    unint64_t v18 = v0[13];
    uint64_t v17 = v0[14];
    uint64_t v20 = v0[10];
    uint64_t v19 = v0[11];
    uint64_t v21 = v0[4];
    v15(v18, v0[9], v20);
    v30(v16, 1, 1, v32);
    v28(v17, v18, v20);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = 0;
    *(void *)(v22 + 24) = 0;
    v15(v22 + v27, v17, v20);
    *(void *)(v22 + v38) = v21;
    swift_retain();
    sub_24E588030(v16, (uint64_t)&unk_2698F3218, v22);
    sub_24E563530(v16, (uint64_t *)&unk_2698F7FE0);
    (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  v0[20] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
  if (sub_24E8640C8())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  else
  {
    uint64_t v25 = (void *)swift_task_alloc();
    v0[21] = v25;
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1F78);
    void *v25 = v0;
    v25[1] = sub_24E5D2C0C;
    return MEMORY[0x270FA2048](v0 + 23, 0, 0, v26);
  }
}

uint64_t sub_24E5D2C0C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E5D2E84;
  }
  else {
    uint64_t v2 = sub_24E5D2D20;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E5D2D20()
{
  if (sub_24E8640C8())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v3;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1F78);
    *uint64_t v3 = v0;
    v3[1] = sub_24E5D2C0C;
    return MEMORY[0x270FA2048](v0 + 184, 0, 0, v4);
  }
}

uint64_t sub_24E5D2E84()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v0[4] + 16)
                          + ((*(unsigned int *)(**(void **)(v0[4] + 16) + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v2);
  unint64_t v3 = sub_24E5CEFF4(v1);
  if ((~(v5 & v3) & 0xF000000000000007) != 0)
  {
    uint64_t v7 = v3;
    uint64_t v8 = v4;
    uint64_t v9 = v5;
    if (v5 < 0)
    {
      uint64_t v14 = *(void *)(v6 + 16);
      if (v14)
      {
        uint64_t v27 = v5;
        unint64_t v29 = v3;
        uint64_t v30 = v2;
        uint64_t v15 = v4;
        sub_24E863F68();
        sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v16 = 0;
        do
        {
          ++v16;
          uint64_t v17 = swift_allocError();
          sub_24E863B28();
          swift_allocError();
          uint64_t *v18 = v17;
          swift_continuation_throwingResumeWithError();
        }
        while (v14 != v16);
        swift_bridgeObjectRelease();
        uint64_t v7 = v29;
        uint64_t v2 = v30;
        uint64_t v9 = v27;
      }
      else
      {
        uint64_t v19 = v4;
        swift_retain();
      }
      uint64_t v20 = (void *)v0[8];
      sub_24E864068();
      *uint64_t v20 = v8;
      swift_storeEnumTagMultiPayload();
      sub_24E612440((uint64_t)v20, *(void *)(*(void *)(v7 + 64) + 40), &qword_2698F31A0);
      swift_continuation_resume();
      swift_release();
      sub_24E5ACCE4(v7, v8, v9);
    }
    else
    {
      uint64_t v10 = v4[2];
      if (v10)
      {
        uint64_t v26 = v5;
        sub_24E863F68();
        sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
        uint64_t v28 = v7;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v11 = 0;
        do
        {
          ++v11;
          uint64_t v12 = swift_allocError();
          sub_24E863B28();
          swift_allocError();
          uint64_t *v13 = v12;
          swift_continuation_throwingResumeWithError();
        }
        while (v10 != v11);
        swift_bridgeObjectRelease();
        uint64_t v7 = v28;
        uint64_t v9 = v26;
      }
      else
      {
        swift_retain();
      }
      sub_24E864068();
      sub_24E5ACCE4(v7, v8, v9);
      swift_release();
    }
  }
  uint64_t v21 = (void *)v0[22];
  os_unfair_lock_unlock(v2);
  sub_24E8640D8();

  if (sub_24E8640C8())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
  else
  {
    uint64_t v24 = (void *)swift_task_alloc();
    v0[21] = v24;
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1F78);
    *uint64_t v24 = v0;
    v24[1] = sub_24E5D2C0C;
    return MEMORY[0x270FA2048](v0 + 23, 0, 0, v25);
  }
}

uint64_t sub_24E5D3384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[14] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A0);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F8860);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3220);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  v5[21] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3178);
  v5[22] = swift_task_alloc();
  v5[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3180);
  v5[24] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3108);
  v5[25] = v6;
  v5[26] = *(void *)(v6 - 8);
  v5[27] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3258);
  v5[28] = v7;
  v5[29] = *(void *)(v7 - 8);
  v5[30] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5D35D4, 0, 0);
}

uint64_t sub_24E5D35D4()
{
  uint64_t v1 = *(void *)(v0 + 104);
  (*(void (**)(void, void, void))(*(void *)(v0 + 208) + 16))(*(void *)(v0 + 216), *(void *)(v0 + 96), *(void *)(v0 + 200));
  sub_24E6123FC(&qword_2698F3260, &qword_2698F3108);
  sub_24E8640E8();
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  *(void *)(v0 + 248) = v2;
  uint64_t v3 = *v2;
  *(_DWORD *)(v0 + 92) = *(_DWORD *)(*v2 + 48);
  *(void *)(v0 + 256) = *(void *)(*MEMORY[0x263F8DD00] + v3 + 16);
  return MEMORY[0x270FA2498](sub_24E5D36EC, 0, 0);
}

uint64_t sub_24E5D36EC()
{
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = v1 + *(void *)(v0 + 256);
  uint64_t v4 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(v0 + 92) + 3) & 0x1FFFFFFFCLL));
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_24E5D3A6C;
  uint64_t v5 = swift_continuation_init();
  os_unfair_lock_lock(v4);
  sub_24E576EA0(v3, v2, &qword_2698F3180);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = *(uint64_t **)(v0 + 192);
      uint64_t v8 = *(void *)(v0 + 168);
      uint64_t v7 = *(void *)(v0 + 176);
      uint64_t v9 = (void *)(*(void *)(v0 + 248) + *(void *)(v0 + 256));
      uint64_t v31 = *v6;
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3188);
      uint64_t v11 = (char *)v6 + *(int *)(v10 + 48);
      uint64_t v32 = *(uint64_t *)((char *)v6 + *(int *)(v10 + 64));
      uint64_t v12 = *(int *)(v8 + 48);
      uint64_t v13 = v7 + v12;
      uint64_t v14 = *(int *)(v8 + 64);
      uint64_t v15 = v7 + v14;
      uint64_t v29 = v7 + v12;
      uint64_t v30 = v7 + v14;
      uint64_t v16 = (uint64_t)&v11[v12];
      uint64_t v17 = (uint64_t)&v11[v14];
      LOBYTE(v12) = v11[16];
      LOBYTE(v14) = v11[17];
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v11;
      *(unsigned char *)(v7 + 16) = v12;
      *(unsigned char *)(v7 + 17) = v14;
      sub_24E612440(v16, v13, &qword_2698F3190);
      sub_24E612440(v17, v15, &qword_2698F3190);
      sub_24E563530((uint64_t)v9, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      *(void *)uint64_t v7 = v5;
      sub_24E563530((uint64_t)v9, &qword_2698F3180);
      unint64_t v18 = (char *)v9 + *(int *)(v10 + 48);
      uint64_t v19 = *(int *)(v10 + 64);
      *uint64_t v9 = v31;
      uint64_t v20 = (uint64_t)&v18[*(int *)(v8 + 48)];
      uint64_t v21 = (uint64_t)&v18[*(int *)(v8 + 64)];
      char v22 = *(unsigned char *)(v7 + 16);
      char v23 = *(unsigned char *)(v7 + 17);
      *(_OWORD *)unint64_t v18 = *(_OWORD *)v7;
      v18[16] = v22;
      v18[17] = v23;
      sub_24E612440(v29, v20, &qword_2698F3190);
      sub_24E612440(v30, v21, &qword_2698F3190);
      *(void *)((char *)v9 + v19) = v32;
      swift_storeEnumTagMultiPayload();
      goto LABEL_6;
    case 2u:
      uint64_t v26 = *(void *)(v0 + 192);
      swift_release();
      uint64_t v27 = v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A8) + 48);
      swift_release();
      sub_24E563530(v27, &qword_2698F3178);
      swift_continuation_throwingResume();
      goto LABEL_6;
    case 3u:
      goto LABEL_10;
    case 4u:
      sub_24E563530(*(void *)(v0 + 192), &qword_2698F3180);
      goto LABEL_4;
    case 5u:
LABEL_4:
      sub_24E863F68();
      sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
      uint64_t v24 = swift_allocError();
      sub_24E863B28();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
      swift_allocError();
      uint64_t *v25 = v24;
      swift_continuation_throwingResumeWithError();
LABEL_6:
      os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(v0 + 248)
                                             + ((*(unsigned int *)(v0 + 92) + 3) & 0x1FFFFFFFCLL)));
      return MEMORY[0x270FA23F0](v0 + 16);
    case 6u:
      break;
    default:
      __break(1u);
LABEL_10:
      __break(1u);
      break;
  }
  __break(1u);
  JUMPOUT(0x24E5D3A50);
}

uint64_t sub_24E5D3A6C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 264) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x270FA2498](sub_24E5D3D48, 0, 0);
  }
  else
  {
    uint64_t v4 = sub_24E6123FC(&qword_2698F3268, &qword_2698F3258);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v1 + 272) = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_24E5D3C34;
    uint64_t v6 = *(void *)(v1 + 224);
    return MEMORY[0x270FA1E80](v1 + 80, v6, v4);
  }
}

uint64_t sub_24E5D3C34()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E5D4474;
  }
  else {
    uint64_t v2 = sub_24E5D3E4C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E5D3D48()
{
  (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E5D3E4C()
{
  uint64_t v1 = *(unsigned int *)(v0 + 92);
  uint64_t v2 = *(void *)(v0 + 248);
  if (*(unsigned char *)(v0 + 88))
  {
    uint64_t v3 = (os_unfair_lock_s *)(v2 + ((v1 + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v3);
    unint64_t v4 = sub_24E5CE320(0);
    uint64_t v6 = v5;
    uint64_t v8 = v7;
    os_unfair_lock_unlock(v3);
    if ((~v4 & 0xF000000000000007) != 0)
    {
      if ((v4 & 0x8000000000000000) != 0)
      {
        uint64_t v27 = v4 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v28 = *(void *)(v8 + 16);
        if (v28)
        {
          uint64_t v36 = v4 & 0x7FFFFFFFFFFFFFFFLL;
          unint64_t v38 = v4;
          sub_24E863F68();
          sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v29 = 0;
          do
          {
            ++v29;
            uint64_t v30 = swift_allocError();
            sub_24E863B28();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
            swift_allocError();
            *uint64_t v31 = v30;
            swift_continuation_throwingResumeWithError();
          }
          while (v28 != v29);
          swift_bridgeObjectRelease();
          uint64_t v27 = v36;
          unint64_t v4 = v38;
        }
        else
        {
          swift_retain();
        }
        uint64_t v32 = *(void *)(v0 + 128);
        sub_24E864068();
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3138);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
        swift_storeEnumTagMultiPayload();
        sub_24E612440(v32, *(void *)(*(void *)(v27 + 64) + 40), &qword_2698F31A0);
        swift_continuation_resume();
      }
      else
      {
        uint64_t v9 = *(void *)(v6 + 16);
        if (v9)
        {
          sub_24E863F68();
          sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
          unint64_t v37 = v4;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v10 = 0;
          do
          {
            ++v10;
            uint64_t v11 = swift_allocError();
            sub_24E863B28();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
            swift_allocError();
            *uint64_t v12 = v11;
            swift_continuation_throwingResumeWithError();
          }
          while (v9 != v10);
          swift_bridgeObjectRelease();
          unint64_t v4 = v37;
        }
        else
        {
          swift_retain();
        }
        sub_24E864068();
      }
      swift_release();
      sub_24E5ACBC4(v4);
    }
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
    return v34();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v14 = *(uint64_t ***)(v0 + 160);
    uint64_t v16 = *(void *)(v0 + 136);
    uint64_t v15 = *(char **)(v0 + 144);
    uint64_t v17 = *(void *)(v0 + 80);
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + ((v1 + 3) & 0x1FFFFFFFCLL)));
    uint64_t v18 = sub_24E861878();
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    v19(v15, 1, 1, v18);
    v19((char *)v16, 1, 1, v18);
    sub_24E5CCB48(v17, 0, v15, v16, v14);
    sub_24E563530(v16, (uint64_t *)&unk_2698F8860);
    sub_24E563530((uint64_t)v15, (uint64_t *)&unk_2698F8860);
    sub_24E576EA0((uint64_t)v14, v13, &qword_2698F3220);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3238);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v13, 1, v20) != 1)
    {
      uint64_t v21 = *(uint64_t **)(v0 + 152);
      uint64_t v22 = *(void *)(v0 + 120);
      uint64_t v23 = *(void *)(v0 + 128);
      uint64_t v24 = *v21;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B8);
      sub_24E612440((uint64_t)v21 + *(int *)(v25 + 48), v23, &qword_2698F31A0);
      sub_24E576EA0(v23, v22, &qword_2698F31A0);
      sub_24E612440(v22, *(void *)(*(void *)(v24 + 64) + 40), &qword_2698F31A0);
      swift_continuation_resume();
      sub_24E563530(v23, &qword_2698F31A0);
    }
    uint64_t v26 = (os_unfair_lock_s *)(*(void *)(v0 + 248) + ((*(unsigned int *)(v0 + 92) + 3) & 0x1FFFFFFFCLL));
    sub_24E563530(*(void *)(v0 + 160), &qword_2698F3220);
    os_unfair_lock_unlock(v26);
    return MEMORY[0x270FA2498](sub_24E5D36EC, 0, 0);
  }
}

uint64_t sub_24E5D4474()
{
  (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E5D4578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  v5[12] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3220);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F8860);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  uint64_t v6 = sub_24E861878();
  v5[20] = v6;
  v5[21] = *(void *)(v6 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3178);
  v5[24] = swift_task_alloc();
  v5[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3180);
  v5[26] = swift_task_alloc();
  uint64_t v7 = sub_24E861858();
  v5[27] = v7;
  v5[28] = *(void *)(v7 - 8);
  v5[29] = swift_task_alloc();
  uint64_t v8 = sub_24E861848();
  v5[30] = v8;
  v5[31] = *(void *)(v8 - 8);
  v5[32] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5D4828, 0, 0);
}

uint64_t sub_24E5D4828()
{
  uint64_t v1 = *(void *)(v0 + 88);
  (*(void (**)(void, void, void))(*(void *)(v0 + 224) + 16))(*(void *)(v0 + 232), *(void *)(v0 + 80), *(void *)(v0 + 216));
  sub_24E609BE8(&qword_2698F3228, MEMORY[0x263F8EFB0]);
  sub_24E8640E8();
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  *(void *)(v0 + 264) = v2;
  uint64_t v3 = *v2;
  *(_DWORD *)(v0 + 304) = *(_DWORD *)(*v2 + 48);
  *(void *)(v0 + 272) = *(void *)(*MEMORY[0x263F8DD00] + v3 + 16);
  return MEMORY[0x270FA2498](sub_24E5D494C, 0, 0);
}

uint64_t sub_24E5D494C()
{
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = v1 + *(void *)(v0 + 272);
  unint64_t v4 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(v0 + 304) + 3) & 0x1FFFFFFFCLL));
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_24E5D4CDC;
  uint64_t v5 = swift_continuation_init();
  os_unfair_lock_lock(v4);
  sub_24E576EA0(v3, v2, &qword_2698F3180);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = *(uint64_t **)(v0 + 208);
      uint64_t v8 = *(void *)(v0 + 184);
      uint64_t v7 = *(void *)(v0 + 192);
      uint64_t v9 = (void *)(*(void *)(v0 + 264) + *(void *)(v0 + 272));
      uint64_t v30 = *v6;
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3188);
      uint64_t v11 = (char *)v6 + *(int *)(v10 + 48);
      uint64_t v31 = *(uint64_t *)((char *)v6 + *(int *)(v10 + 64));
      uint64_t v12 = *(int *)(v8 + 48);
      uint64_t v13 = (uint64_t *)(v7 + v12);
      uint64_t v14 = *(int *)(v8 + 64);
      uint64_t v15 = v7 + v14;
      uint64_t v29 = v7 + v14;
      uint64_t v16 = (uint64_t)&v11[v12];
      uint64_t v17 = (uint64_t)&v11[v14];
      LOBYTE(v12) = v11[16];
      LOBYTE(v14) = v11[17];
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v11;
      *(unsigned char *)(v7 + 16) = v12;
      *(unsigned char *)(v7 + 17) = v14;
      sub_24E612440(v16, (uint64_t)v13, &qword_2698F3190);
      sub_24E612440(v17, v15, &qword_2698F3190);
      sub_24E563530((uint64_t)v9, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      uint64_t *v13 = v5;
      sub_24E563530((uint64_t)v9, &qword_2698F3180);
      uint64_t v18 = (char *)v9 + *(int *)(v10 + 48);
      uint64_t v19 = *(int *)(v10 + 64);
      *uint64_t v9 = v30;
      uint64_t v20 = (uint64_t)&v18[*(int *)(v8 + 48)];
      uint64_t v21 = (uint64_t)&v18[*(int *)(v8 + 64)];
      char v22 = *(unsigned char *)(v7 + 16);
      char v23 = *(unsigned char *)(v7 + 17);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v7;
      v18[16] = v22;
      v18[17] = v23;
      sub_24E612440((uint64_t)v13, v20, &qword_2698F3190);
      sub_24E612440(v29, v21, &qword_2698F3190);
      *(void *)((char *)v9 + v19) = v31;
      swift_storeEnumTagMultiPayload();
      goto LABEL_6;
    case 2u:
      uint64_t v26 = *(void *)(v0 + 208);
      swift_release();
      uint64_t v27 = v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A8) + 48);
      swift_release();
      sub_24E563530(v27, &qword_2698F3178);
      swift_continuation_throwingResume();
      goto LABEL_6;
    case 3u:
      goto LABEL_10;
    case 4u:
      sub_24E563530(*(void *)(v0 + 208), &qword_2698F3180);
      goto LABEL_4;
    case 5u:
LABEL_4:
      sub_24E863F68();
      sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
      uint64_t v24 = swift_allocError();
      sub_24E863B28();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
      swift_allocError();
      uint64_t *v25 = v24;
      swift_continuation_throwingResumeWithError();
LABEL_6:
      os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(v0 + 264)
                                             + ((*(unsigned int *)(v0 + 304) + 3) & 0x1FFFFFFFCLL)));
      return MEMORY[0x270FA23F0](v0 + 16);
    case 6u:
      break;
    default:
      __break(1u);
LABEL_10:
      __break(1u);
      break;
  }
  __break(1u);
  JUMPOUT(0x24E5D4CC0);
}

uint64_t sub_24E5D4CDC()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 280) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x270FA2498](sub_24E5D4FBC, 0, 0);
  }
  else
  {
    uint64_t v4 = sub_24E609BE8(&qword_2698F3230, MEMORY[0x263F8EFA0]);
    uint64_t v5 = (void *)swift_task_alloc();
    v1[36] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_24E5D4EA8;
    uint64_t v6 = v1[30];
    uint64_t v7 = v1[19];
    return MEMORY[0x270FA1E80](v7, v6, v4);
  }
}

uint64_t sub_24E5D4EA8()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E5D57A8;
  }
  else {
    uint64_t v2 = sub_24E5D50E0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E5D4FBC()
{
  (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E5D50E0()
{
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2);
  uint64_t v5 = *(unsigned int *)(v0 + 304);
  uint64_t v6 = *(void *)(v0 + 264);
  if (v4 == 1)
  {
    uint64_t v7 = (os_unfair_lock_s *)(v6 + ((v5 + 3) & 0x1FFFFFFFCLL));
    sub_24E563530(v3, (uint64_t *)&unk_2698F8860);
    os_unfair_lock_lock(v7);
    unint64_t v8 = sub_24E5CE320(1);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    os_unfair_lock_unlock(v7);
    if ((~v8 & 0xF000000000000007) != 0)
    {
      if ((v8 & 0x8000000000000000) != 0)
      {
        uint64_t v33 = v8 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v34 = *(void *)(v12 + 16);
        if (v34)
        {
          uint64_t v42 = v8 & 0x7FFFFFFFFFFFFFFFLL;
          unint64_t v45 = v8;
          sub_24E863F68();
          sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v35 = 0;
          do
          {
            ++v35;
            uint64_t v36 = swift_allocError();
            sub_24E863B28();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
            swift_allocError();
            *unint64_t v37 = v36;
            swift_continuation_throwingResumeWithError();
          }
          while (v34 != v35);
          swift_bridgeObjectRelease();
          uint64_t v33 = v42;
          unint64_t v8 = v45;
        }
        else
        {
          swift_retain();
        }
        uint64_t v38 = *(void *)(v0 + 112);
        sub_24E864068();
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3138);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
        swift_storeEnumTagMultiPayload();
        sub_24E612440(v38, *(void *)(*(void *)(v33 + 64) + 40), &qword_2698F31A0);
        swift_continuation_resume();
      }
      else
      {
        uint64_t v13 = *(void *)(v10 + 16);
        if (v13)
        {
          sub_24E863F68();
          sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
          unint64_t v43 = v8;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v14 = 0;
          do
          {
            ++v14;
            uint64_t v15 = swift_allocError();
            sub_24E863B28();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
            swift_allocError();
            *uint64_t v16 = v15;
            swift_continuation_throwingResumeWithError();
          }
          while (v13 != v14);
          swift_bridgeObjectRelease();
          unint64_t v8 = v43;
        }
        else
        {
          swift_retain();
        }
        sub_24E864068();
      }
      swift_release();
      sub_24E5ACBC4(v8);
    }
    (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 240));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
    return v40();
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 176);
    uint64_t v19 = *(void *)(v0 + 136);
    uint64_t v18 = *(char **)(v0 + 144);
    uint64_t v20 = *(uint64_t ***)(v0 + 128);
    uint64_t v44 = *(void *)(v0 + 120);
    uint64_t v21 = (os_unfair_lock_s *)(v6 + ((v5 + 3) & 0x1FFFFFFFCLL));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v17, v3, v2);
    os_unfair_lock_lock(v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v18, v17, v2);
    char v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v22(v18, 0, 1, v2);
    v22((char *)v19, 1, 1, v2);
    sub_24E5CCB48(0, 1, v18, v19, v20);
    sub_24E563530(v19, (uint64_t *)&unk_2698F8860);
    sub_24E563530((uint64_t)v18, (uint64_t *)&unk_2698F8860);
    sub_24E576EA0((uint64_t)v20, v44, &qword_2698F3220);
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3238);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v44, 1, v23) != 1)
    {
      uint64_t v24 = *(void *)(v0 + 112);
      uint64_t v25 = *(uint64_t **)(v0 + 120);
      uint64_t v26 = *(void *)(v0 + 104);
      uint64_t v27 = *v25;
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B8);
      sub_24E612440((uint64_t)v25 + *(int *)(v28 + 48), v24, &qword_2698F31A0);
      sub_24E576EA0(v24, v26, &qword_2698F31A0);
      sub_24E612440(v26, *(void *)(*(void *)(v27 + 64) + 40), &qword_2698F31A0);
      swift_continuation_resume();
      sub_24E563530(v24, &qword_2698F31A0);
    }
    uint64_t v30 = *(void *)(v0 + 168);
    uint64_t v29 = *(void *)(v0 + 176);
    uint64_t v31 = *(void *)(v0 + 160);
    uint64_t v32 = (os_unfair_lock_s *)(*(void *)(v0 + 264) + ((*(unsigned int *)(v0 + 304) + 3) & 0x1FFFFFFFCLL));
    sub_24E563530(*(void *)(v0 + 128), &qword_2698F3220);
    os_unfair_lock_unlock(v32);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    return MEMORY[0x270FA2498](sub_24E5D494C, 0, 0);
  }
}

uint64_t sub_24E5D57A8()
{
  (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E5D58CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  v5[12] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3220);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F8860);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  uint64_t v6 = sub_24E861878();
  v5[20] = v6;
  v5[21] = *(void *)(v6 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3178);
  v5[24] = swift_task_alloc();
  v5[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3180);
  v5[26] = swift_task_alloc();
  uint64_t v7 = sub_24E861858();
  v5[27] = v7;
  v5[28] = *(void *)(v7 - 8);
  v5[29] = swift_task_alloc();
  uint64_t v8 = sub_24E861848();
  v5[30] = v8;
  v5[31] = *(void *)(v8 - 8);
  v5[32] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5D5B7C, 0, 0);
}

uint64_t sub_24E5D5B7C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  (*(void (**)(void, void, void))(*(void *)(v0 + 224) + 16))(*(void *)(v0 + 232), *(void *)(v0 + 80), *(void *)(v0 + 216));
  sub_24E609BE8(&qword_2698F3228, MEMORY[0x263F8EFB0]);
  sub_24E8640E8();
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  *(void *)(v0 + 264) = v2;
  uint64_t v3 = *v2;
  *(_DWORD *)(v0 + 304) = *(_DWORD *)(*v2 + 48);
  *(void *)(v0 + 272) = *(void *)(*MEMORY[0x263F8DD00] + v3 + 16);
  return MEMORY[0x270FA2498](sub_24E5D5CA0, 0, 0);
}

uint64_t sub_24E5D5CA0()
{
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = v1 + *(void *)(v0 + 272);
  int v4 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(v0 + 304) + 3) & 0x1FFFFFFFCLL));
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_24E5D6024;
  uint64_t v5 = swift_continuation_init();
  os_unfair_lock_lock(v4);
  sub_24E576EA0(v3, v2, &qword_2698F3180);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = *(uint64_t **)(v0 + 208);
      uint64_t v8 = *(void *)(v0 + 184);
      uint64_t v7 = *(void *)(v0 + 192);
      uint64_t v9 = (void *)(*(void *)(v0 + 264) + *(void *)(v0 + 272));
      uint64_t v30 = *v6;
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3188);
      uint64_t v11 = (char *)v6 + *(int *)(v10 + 48);
      uint64_t v31 = *(uint64_t *)((char *)v6 + *(int *)(v10 + 64));
      uint64_t v12 = *(int *)(v8 + 48);
      uint64_t v13 = v7 + v12;
      uint64_t v29 = v7 + v12;
      uint64_t v14 = *(int *)(v8 + 64);
      uint64_t v15 = (uint64_t *)(v7 + v14);
      uint64_t v16 = (uint64_t)&v11[v12];
      uint64_t v17 = (uint64_t)&v11[v14];
      LOBYTE(v12) = v11[16];
      LOBYTE(v14) = v11[17];
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v11;
      *(unsigned char *)(v7 + 16) = v12;
      *(unsigned char *)(v7 + 17) = v14;
      sub_24E612440(v16, v13, &qword_2698F3190);
      sub_24E612440(v17, (uint64_t)v15, &qword_2698F3190);
      sub_24E563530((uint64_t)v9, &qword_2698F3180);
      swift_storeEnumTagMultiPayload();
      *uint64_t v15 = v5;
      sub_24E563530((uint64_t)v9, &qword_2698F3180);
      uint64_t v18 = (char *)v9 + *(int *)(v10 + 48);
      uint64_t v19 = *(int *)(v10 + 64);
      *uint64_t v9 = v30;
      uint64_t v20 = (uint64_t)&v18[*(int *)(v8 + 48)];
      uint64_t v21 = (uint64_t)&v18[*(int *)(v8 + 64)];
      char v22 = *(unsigned char *)(v7 + 16);
      char v23 = *(unsigned char *)(v7 + 17);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v7;
      v18[16] = v22;
      v18[17] = v23;
      sub_24E612440(v29, v20, &qword_2698F3190);
      sub_24E612440((uint64_t)v15, v21, &qword_2698F3190);
      *(void *)((char *)v9 + v19) = v31;
      swift_storeEnumTagMultiPayload();
      goto LABEL_6;
    case 2u:
      uint64_t v26 = *(void *)(v0 + 208);
      swift_release();
      uint64_t v27 = v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F31A8) + 48);
      swift_release();
      sub_24E563530(v27, &qword_2698F3178);
      swift_continuation_throwingResume();
      goto LABEL_6;
    case 3u:
      goto LABEL_10;
    case 4u:
      sub_24E563530(*(void *)(v0 + 208), &qword_2698F3180);
      goto LABEL_4;
    case 5u:
LABEL_4:
      sub_24E863F68();
      sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
      uint64_t v24 = swift_allocError();
      sub_24E863B28();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
      swift_allocError();
      uint64_t *v25 = v24;
      swift_continuation_throwingResumeWithError();
LABEL_6:
      os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(v0 + 264)
                                             + ((*(unsigned int *)(v0 + 304) + 3) & 0x1FFFFFFFCLL)));
      return MEMORY[0x270FA23F0](v0 + 16);
    case 6u:
      break;
    default:
      __break(1u);
LABEL_10:
      __break(1u);
      break;
  }
  __break(1u);
  JUMPOUT(0x24E5D6008);
}

uint64_t sub_24E5D6024()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 280) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x270FA2498](sub_24E612A58, 0, 0);
  }
  else
  {
    uint64_t v4 = sub_24E609BE8(&qword_2698F3230, MEMORY[0x263F8EFA0]);
    uint64_t v5 = (void *)swift_task_alloc();
    v1[36] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_24E5D61F0;
    uint64_t v6 = v1[30];
    uint64_t v7 = v1[19];
    return MEMORY[0x270FA1E80](v7, v6, v4);
  }
}

uint64_t sub_24E5D61F0()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E612A5C;
  }
  else {
    uint64_t v2 = sub_24E5D6304;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E5D6304()
{
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2);
  uint64_t v5 = *(unsigned int *)(v0 + 304);
  uint64_t v6 = *(void *)(v0 + 264);
  if (v4 == 1)
  {
    uint64_t v7 = (os_unfair_lock_s *)(v6 + ((v5 + 3) & 0x1FFFFFFFCLL));
    sub_24E563530(v3, (uint64_t *)&unk_2698F8860);
    os_unfair_lock_lock(v7);
    unint64_t v8 = sub_24E5CE320(2);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    os_unfair_lock_unlock(v7);
    if ((~v8 & 0xF000000000000007) != 0)
    {
      if ((v8 & 0x8000000000000000) != 0)
      {
        uint64_t v33 = v8 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v34 = *(void *)(v12 + 16);
        if (v34)
        {
          uint64_t v42 = v8 & 0x7FFFFFFFFFFFFFFFLL;
          unint64_t v45 = v8;
          sub_24E863F68();
          sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v35 = 0;
          do
          {
            ++v35;
            uint64_t v36 = swift_allocError();
            sub_24E863B28();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
            swift_allocError();
            *unint64_t v37 = v36;
            swift_continuation_throwingResumeWithError();
          }
          while (v34 != v35);
          swift_bridgeObjectRelease();
          uint64_t v33 = v42;
          unint64_t v8 = v45;
        }
        else
        {
          swift_retain();
        }
        uint64_t v38 = *(void *)(v0 + 112);
        sub_24E864068();
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3138);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
        swift_storeEnumTagMultiPayload();
        sub_24E612440(v38, *(void *)(*(void *)(v33 + 64) + 40), &qword_2698F31A0);
        swift_continuation_resume();
      }
      else
      {
        uint64_t v13 = *(void *)(v10 + 16);
        if (v13)
        {
          sub_24E863F68();
          sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
          unint64_t v43 = v8;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v14 = 0;
          do
          {
            ++v14;
            uint64_t v15 = swift_allocError();
            sub_24E863B28();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
            swift_allocError();
            *uint64_t v16 = v15;
            swift_continuation_throwingResumeWithError();
          }
          while (v13 != v14);
          swift_bridgeObjectRelease();
          unint64_t v8 = v43;
        }
        else
        {
          swift_retain();
        }
        sub_24E864068();
      }
      swift_release();
      sub_24E5ACBC4(v8);
    }
    (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 240));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
    return v40();
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 176);
    uint64_t v19 = *(void *)(v0 + 136);
    uint64_t v18 = *(char **)(v0 + 144);
    uint64_t v20 = *(uint64_t ***)(v0 + 128);
    uint64_t v44 = *(void *)(v0 + 120);
    uint64_t v21 = (os_unfair_lock_s *)(v6 + ((v5 + 3) & 0x1FFFFFFFCLL));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v17, v3, v2);
    os_unfair_lock_lock(v21);
    char v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v22(v18, 1, 1, v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v19, v17, v2);
    v22((char *)v19, 0, 1, v2);
    sub_24E5CCB48(0, 1, v18, v19, v20);
    sub_24E563530(v19, (uint64_t *)&unk_2698F8860);
    sub_24E563530((uint64_t)v18, (uint64_t *)&unk_2698F8860);
    sub_24E576EA0((uint64_t)v20, v44, &qword_2698F3220);
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3238);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v44, 1, v23) != 1)
    {
      uint64_t v24 = *(void *)(v0 + 112);
      uint64_t v25 = *(uint64_t **)(v0 + 120);
      uint64_t v26 = *(void *)(v0 + 104);
      uint64_t v27 = *v25;
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F31B8);
      sub_24E612440((uint64_t)v25 + *(int *)(v28 + 48), v24, &qword_2698F31A0);
      sub_24E576EA0(v24, v26, &qword_2698F31A0);
      sub_24E612440(v26, *(void *)(*(void *)(v27 + 64) + 40), &qword_2698F31A0);
      swift_continuation_resume();
      sub_24E563530(v24, &qword_2698F31A0);
    }
    uint64_t v30 = *(void *)(v0 + 168);
    uint64_t v29 = *(void *)(v0 + 176);
    uint64_t v31 = *(void *)(v0 + 160);
    uint64_t v32 = (os_unfair_lock_s *)(*(void *)(v0 + 264) + ((*(unsigned int *)(v0 + 304) + 3) & 0x1FFFFFFFCLL));
    sub_24E563530(*(void *)(v0 + 128), &qword_2698F3220);
    os_unfair_lock_unlock(v32);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    return MEMORY[0x270FA2498](sub_24E5D5CA0, 0, 0);
  }
}

uint64_t sub_24E5D69CC(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v17 - v7;
  sub_24E576EA0(v1, (uint64_t)&v17 - v7, &qword_2698F34A0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    switch(EnumCaseMultiPayload)
    {
      case 2:
        goto LABEL_6;
      case 3:
        goto LABEL_5;
      case 4:
        goto LABEL_7;
      default:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
LABEL_5:
        __break(1u);
LABEL_6:
        uint64_t v16 = (void *)*((void *)v8 + 1);
        swift_release();

        __break(1u);
LABEL_7:
        __break(1u);
        JUMPOUT(0x24E5D6BC0);
    }
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A8);
  uint64_t v11 = &v8[*(int *)(v10 + 48)];
  uint64_t v12 = (uint64_t)&v8[*(int *)(v10 + 64)];
  swift_retain();
  uint64_t v13 = *(void *)sub_24E8620B8();
  void *v6 = a1;
  v6[1] = v13;
  v6[2] = MEMORY[0x263F8EE78];
  v6[3] = 0;
  v6[4] = 0;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_24E611E74((uint64_t)v6, v1, &qword_2698F34A0);
  sub_24E563530(v12, &qword_2698F34B0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34B8);
  (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v11, v14);
  return sub_24E563530((uint64_t)v8, &qword_2698F34C0);
}

uint64_t sub_24E5D6BD0(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24E576EA0((uint64_t)v1, (uint64_t)v5, &qword_2698F34A0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = *v5;
      uint64_t v6 = v5[1];
      unint64_t v8 = (void *)v5[2];
      if (v5[4])
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v11 = v5[3];
        sub_24E563530((uint64_t)v1, &qword_2698F34A0);
        swift_storeEnumTagMultiPayload();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v8 = sub_24E575670(0, v8[2] + 1, 1, v8);
        }
        unint64_t v12 = v8[2];
        unint64_t v13 = v8[3];
        unint64_t v14 = v12 + 1;
        if (v12 >= v13 >> 1)
        {
          uint64_t v15 = v8;
          unint64_t v16 = v8[2];
          uint64_t v17 = sub_24E575670((void *)(v13 > 1), v12 + 1, 1, v15);
          unint64_t v12 = v16;
          unint64_t v8 = v17;
        }
        v8[2] = v14;
        v8[v12 + 4] = a1;
        sub_24E563530((uint64_t)v1, &qword_2698F34A0);
        *uint64_t v1 = v7;
        v1[1] = v6;
        v1[2] = v8;
        v1[3] = v11;
        v1[4] = 0;
        swift_storeEnumTagMultiPayload();
        return 0;
      }
      return a1;
    case 2u:
      uint64_t v9 = (void *)v5[1];
      swift_release();

      goto LABEL_5;
    case 3u:
LABEL_5:
      sub_24E863F68();
      sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
      swift_allocError();
      sub_24E863B28();
      return a1;
    case 4u:
      break;
    default:
      __break(1u);
      break;
  }
  __break(1u);
  JUMPOUT(0x24E5D6E1CLL);
}

uint64_t sub_24E5D6E30@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)v1;
  unint64_t v45 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3478);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v43 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3480);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v43 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (uint64_t *)((char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24E576EA0(v1, (uint64_t)v18, &qword_2698F34A0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (v18[4]) {
        goto LABEL_30;
      }
      uint64_t v33 = v18[2];
      uint64_t v44 = v18[3];
      uint64_t v35 = (void *)*v18;
      uint64_t v46 = (void *)v18[1];
      uint64_t v34 = v46;
      sub_24E563530((uint64_t)v2, &qword_2698F34A0);
      swift_storeEnumTagMultiPayload();
      if ((uint64_t)v34[3] < 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, 1, 1, v9);
        sub_24E563530((uint64_t)v6, &qword_2698F3478);
        sub_24E563530((uint64_t)v2, &qword_2698F34A0);
        *uint64_t v2 = v35;
        v2[1] = v34;
        uint64_t v41 = v44;
        v2[2] = v33;
        v2[3] = v41;
        v2[4] = 0;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34D0);
        return swift_storeEnumTagMultiPayload();
      }
      uint64_t v36 = v35;
      uint64_t v37 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24E609AEC(&qword_2698F3480, &qword_2698F3560);
        uint64_t v34 = v46;
      }
      sub_24E612440((uint64_t)v34+ ((*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v34[4], (uint64_t)v6, &qword_2698F3480);
      uint64_t v38 = v34[4];
      BOOL v29 = __OFADD__(v38, 1);
      uint64_t v39 = v38 + 1;
      if (v29) {
        goto LABEL_26;
      }
      uint64_t v40 = v34[3];
      if (v39 >= v34[2]) {
        uint64_t v39 = 0;
      }
      v34[4] = v39;
      if (__OFSUB__(v40, 1)) {
        goto LABEL_28;
      }
      v34[3] = v40 - 1;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
      sub_24E612440((uint64_t)v6, (uint64_t)v13, &qword_2698F3480);
      sub_24E563530((uint64_t)v2, &qword_2698F34A0);
      *uint64_t v2 = v36;
      v2[1] = v34;
      v2[2] = v33;
      v2[3] = v37;
      v2[4] = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = (uint64_t)v13;
      goto LABEL_21;
    case 2u:
      uint64_t v27 = v18[1];
      uint64_t v46 = (void *)*v18;
      uint64_t v26 = v46;
      sub_24E563530((uint64_t)v2, &qword_2698F34A0);
      swift_storeEnumTagMultiPayload();
      if ((uint64_t)v26[3] < 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
        swift_release();
        sub_24E563530((uint64_t)v8, &qword_2698F3478);
        sub_24E563530((uint64_t)v2, &qword_2698F34A0);
        swift_storeEnumTagMultiPayload();
        void *v45 = v27;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34D0);
        return swift_storeEnumTagMultiPayload();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24E609AEC(&qword_2698F3480, &qword_2698F3560);
        uint64_t v26 = v46;
      }
      sub_24E612440((uint64_t)v26+ ((*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v26[4], (uint64_t)v8, &qword_2698F3480);
      uint64_t v28 = v26[4];
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      uint64_t v31 = v26[3];
      if (v30 >= v26[2]) {
        uint64_t v30 = 0;
      }
      v26[4] = v30;
      if (__OFSUB__(v31, 1))
      {
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        JUMPOUT(0x24E5D748CLL);
      }
      v26[3] = v31 - 1;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
      sub_24E612440((uint64_t)v8, (uint64_t)v15, &qword_2698F3480);
      sub_24E563530((uint64_t)v2, &qword_2698F34A0);
      *uint64_t v2 = v26;
      v2[1] = v27;
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = (uint64_t)v15;
LABEL_21:
      sub_24E612440(v32, (uint64_t)v45, &qword_2698F3480);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34C8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34D0);
      return swift_storeEnumTagMultiPayload();
    case 3u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34D0);
      return swift_storeEnumTagMultiPayload();
    case 4u:
      goto LABEL_29;
    default:
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A8);
      uint64_t v20 = (char *)v18 + *(int *)(v19 + 48);
      uint64_t v21 = (uint64_t)v18 + *(int *)(v19 + 64);
      char v22 = v45;
      sub_24E612440((uint64_t)v18, (uint64_t)v45, &qword_2698F34C0);
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34D8);
      uint64_t v24 = (char *)v22 + *(int *)(v23 + 48);
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34B8);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v24, v20, v25);
      sub_24E612440(v21, (uint64_t)v22 + *(int *)(v23 + 64), &qword_2698F34B0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34D0);
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_24E5D74A0(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24E576EA0((uint64_t)v1, (uint64_t)v5, &qword_2698F34A0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
  {
    switch(EnumCaseMultiPayload)
    {
      case 1:
        goto LABEL_10;
      case 2:
        goto LABEL_8;
      case 3:
        goto LABEL_6;
      case 4:
        goto LABEL_7;
      default:
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A8);
        unint64_t v13 = (char *)v5 + *(int *)(v12 + 48);
        sub_24E563530((uint64_t)v5 + *(int *)(v12 + 64), &qword_2698F34B0);
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34B8);
        (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
        sub_24E563530((uint64_t)v5, &qword_2698F34C0);
LABEL_6:
        __break(1u);
LABEL_7:
        __break(1u);
LABEL_8:
        uint64_t v15 = (void *)v5[1];
        swift_release();

        __break(1u);
        break;
    }
LABEL_9:
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_10:
    __break(1u);
    JUMPOUT(0x24E5D7670);
  }
  uint64_t v8 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v9 = v5[2];
  if (v5[4]) {
    goto LABEL_9;
  }
  uint64_t v10 = v5[3];
  sub_24E563530((uint64_t)v1, &qword_2698F34A0);
  *uint64_t v1 = v8;
  v1[1] = v7;
  v1[2] = MEMORY[0x263F8EE78];
  v1[3] = v10;
  v1[4] = a1;
  swift_storeEnumTagMultiPayload();
  return v9;
}

uint64_t sub_24E5D7684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a1;
  uint64_t v36 = a3;
  uint64_t v31 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34B0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34B8);
  uint64_t v9 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34C0);
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  unint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3550);
  uint64_t v15 = v14 - 8;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v32 = (uint64_t)&v30 - v19;
  uint64_t v20 = (_DWORD *)swift_slowAlloc();
  *uint64_t v20 = 0;
  *(void *)(v3 + 16) = v20;
  sub_24E576EA0(a1, (uint64_t)v13, &qword_2698F34C0);
  uint64_t v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v30);
  uint64_t v22 = v36;
  sub_24E576EA0(v36, (uint64_t)v8, &qword_2698F34B0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A8);
  uint64_t v24 = &v18[*(int *)(v23 + 48)];
  uint64_t v25 = (uint64_t)&v18[*(int *)(v23 + 64)];
  sub_24E612440((uint64_t)v13, (uint64_t)v18, &qword_2698F34C0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v24, v11, v21);
  sub_24E576EA0((uint64_t)v8, v25, &qword_2698F34B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A0);
  swift_storeEnumTagMultiPayload();
  LODWORD(v13) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v8, 1, v37);
  sub_24E563530((uint64_t)v8, &qword_2698F34B0);
  uint64_t v26 = 2;
  if (v13 != 1) {
    uint64_t v26 = 3;
  }
  *(void *)&v18[*(int *)(v15 + 76)] = v26;
  uint64_t v27 = v32;
  sub_24E612440((uint64_t)v18, v32, &qword_2698F3550);
  sub_24E563530(v22, &qword_2698F34B0);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v31, v21);
  sub_24E563530(v33, &qword_2698F34C0);
  uint64_t v28 = v34;
  sub_24E612440(v27, v34 + *(void *)(*(void *)v34 + 136), &qword_2698F3550);
  return v28;
}

uint64_t sub_24E5D7A34(uint64_t a1, uint64_t a2)
{
  v2[24] = a1;
  v2[25] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34C8);
  v2[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3478);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  v2[29] = swift_task_alloc();
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F34B0) - 8);
  v2[30] = v3;
  v2[31] = *(void *)(v3 + 64);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34B8);
  v2[34] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[35] = v5;
  v2[36] = *(void *)(v5 + 64);
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F34C0) - 8);
  v2[39] = v6;
  v2[40] = *(void *)(v6 + 64);
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  v2[43] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34D0);
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5D7CDC, 0, 0);
}

uint64_t sub_24E5D7CDC()
{
  uint64_t v2 = v0[44];
  uint64_t v1 = (void *)v0[45];
  uint64_t v3 = *(os_unfair_lock_s **)(v0[25] + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_24E5D6E30(v1);
  swift_endAccess();
  sub_24E576EA0((uint64_t)v1, v2, &qword_2698F34D0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v19 = v0[24];
      sub_24E612440(v0[44], v0[26], &qword_2698F34C8);
      os_unfair_lock_unlock(v3);
      sub_24E5D1E54(&qword_2698F34C8, &qword_2698F3480, v19);
      uint64_t v24 = v0[45];
      uint64_t v25 = v0[24];
      sub_24E563530(v0[26], &qword_2698F34C8);
      sub_24E563530(v24, &qword_2698F34D0);
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3480);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
      goto LABEL_10;
    case 2u:
      os_unfair_lock_unlock(v3);
      swift_willThrow();
      sub_24E563530(v0[45], &qword_2698F34D0);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v20 = (uint64_t (*)(void))v0[1];
      goto LABEL_11;
    case 3u:
      uint64_t v21 = v0[45];
      uint64_t v22 = v0[24];
      os_unfair_lock_unlock(v3);
      sub_24E563530(v21, &qword_2698F34D0);
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3480);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
LABEL_10:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v20 = (uint64_t (*)(void))v0[1];
LABEL_11:
      return v20();
    case 4u:
      uint64_t v18 = sub_24E5D8788;
      goto LABEL_7;
    default:
      uint64_t v4 = v0[44];
      uint64_t v5 = v0[42];
      uint64_t v6 = v0[38];
      uint64_t v28 = v0[41];
      uint64_t v29 = v0[37];
      uint64_t v7 = v0[35];
      uint64_t v34 = v0[40];
      uint64_t v35 = v0[36];
      uint64_t v8 = v0[33];
      uint64_t v37 = v0[34];
      uint64_t v30 = v0[32];
      uint64_t v31 = v0[30];
      uint64_t v32 = v0[39];
      uint64_t v38 = v0[29];
      uint64_t v36 = v0[25];
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34D8);
      uint64_t v10 = v4 + *(int *)(v9 + 48);
      uint64_t v11 = v4 + *(int *)(v9 + 64);
      sub_24E612440(v4, v5, &qword_2698F34C0);
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
      v33(v6, v10, v37);
      sub_24E612440(v11, v8, &qword_2698F34B0);
      swift_beginAccess();
      uint64_t v12 = sub_24E863FE8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v38, 1, 1, v12);
      sub_24E576EA0(v5, v28, &qword_2698F34C0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v29, v6, v37);
      sub_24E576EA0(v8, v30, &qword_2698F34B0);
      unint64_t v13 = (*(unsigned __int8 *)(v32 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      unint64_t v14 = (v34 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      unint64_t v15 = (v35 + *(unsigned __int8 *)(v31 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      uint64_t v16 = (void *)swift_allocObject();
      v16[2] = 0;
      v16[3] = 0;
      void v16[4] = v36;
      sub_24E612440(v28, (uint64_t)v16 + v13, &qword_2698F34C0);
      v33((uint64_t)v16 + v14, v29, v37);
      sub_24E612440(v30, (uint64_t)v16 + v15, &qword_2698F34B0);
      swift_retain();
      uint64_t v17 = sub_24E5C54D0(v38, (uint64_t)&unk_2698F34F0, (uint64_t)v16);
      sub_24E5D69CC(v17);
      swift_endAccess();
      swift_release();
      uint64_t v18 = sub_24E5D8310;
LABEL_7:
      return MEMORY[0x270FA2498](v18, 0, 0);
  }
}

uint64_t sub_24E5D8310()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[25];
  v0[10] = v0;
  v0[15] = v1;
  v0[11] = sub_24E5D83B0;
  uint64_t v3 = swift_continuation_init();
  sub_24E5D8B74(v3, v2);
  return MEMORY[0x270FA23F0](v0 + 10);
}

uint64_t sub_24E5D83B0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 368) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_24E5D8630;
  }
  else
  {
    sub_24E612440(*(void *)(v1 + 224), *(void *)(v1 + 192), &qword_2698F3478);
    uint64_t v3 = sub_24E5D84E0;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24E5D84E0()
{
  uint64_t v1 = v0[45];
  uint64_t v2 = v0[42];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[34];
  uint64_t v5 = v0[35];
  sub_24E563530(v0[33], &qword_2698F34B0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_24E563530(v2, &qword_2698F34C0);
  sub_24E563530(v1, &qword_2698F34D0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_24E5D8630()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[35];
  sub_24E563530(v0[33], &qword_2698F34B0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_24E563530(v1, &qword_2698F34C0);
  sub_24E563530(v0[45], &qword_2698F34D0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_24E5D8788()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[25];
  v0[2] = v0;
  v0[7] = v1;
  v0[3] = sub_24E5D8828;
  uint64_t v3 = swift_continuation_init();
  sub_24E5D8B74(v3, v2);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24E5D8828()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 376) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_24E5D8A60;
  }
  else
  {
    sub_24E612440(*(void *)(v1 + 216), *(void *)(v1 + 192), &qword_2698F3478);
    uint64_t v3 = sub_24E5D8958;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24E5D8958()
{
  sub_24E563530(*(void *)(v0 + 360), &qword_2698F34D0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E5D8A60()
{
  sub_24E563530(*(void *)(v0 + 360), &qword_2698F34D0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E5D8B74(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = sub_24E5D74A0(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a2 + 16));
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v5; ++i)
      swift_continuation_throwingResume();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_24E5D8C24(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3478);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v5);
  unint64_t v6 = sub_24E5D8FE8(a1);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  os_unfair_lock_unlock(v5);
  if (v6 >> 62)
  {
    if (v6 >> 62 == 1)
    {
      uint64_t v11 = *(void *)(v8 + 16);
      if (v11)
      {
        unint64_t v22 = v6;
        sub_24E863F68();
        sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
        uint64_t v21 = v6 & 0x3FFFFFFFFFFFFFFFLL;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v12 = 0;
        do
        {
          ++v12;
          uint64_t v13 = swift_allocError();
          sub_24E863B28();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
          swift_allocError();
          uint64_t *v14 = v13;
          swift_continuation_throwingResumeWithError();
        }
        while (v11 != v12);
        swift_bridgeObjectRelease();
        unint64_t v6 = v22;
      }
      else
      {
        swift_retain();
      }
      sub_24E864068();
      sub_24E5AB584(v6);
      swift_release();
    }
  }
  else
  {
    uint64_t v15 = *(void *)(v10 + 16);
    if (v15)
    {
      uint64_t v21 = (uint64_t)v4;
      unint64_t v22 = v6;
      sub_24E863F68();
      sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v16 = 0;
      do
      {
        ++v16;
        uint64_t v17 = swift_allocError();
        sub_24E863B28();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
        swift_allocError();
        uint64_t *v18 = v17;
        swift_continuation_throwingResumeWithError();
      }
      while (v15 != v16);
      swift_bridgeObjectRelease();
      uint64_t v4 = (char *)v21;
      unint64_t v6 = v22;
    }
    else
    {
      swift_retain();
    }
    sub_24E864068();
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3480);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v4, 1, 1, v19);
    sub_24E612440((uint64_t)v4, *(void *)(*(void *)(v6 + 64) + 40), &qword_2698F3478);
    swift_continuation_throwingResume();
    swift_release();
    sub_24E5AB584(v6);
  }
}

uint64_t sub_24E5D8FE8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = a1 + *(void *)(*(void *)a1 + 136);
  swift_beginAccess();
  sub_24E576EA0(v5, (uint64_t)v4, &qword_2698F34A0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = *v4;
      uint64_t v11 = v4[4];
      swift_release();
      sub_24E563530(v5, &qword_2698F34A0);
      swift_storeEnumTagMultiPayload();
      if (!v11) {
        return v13 | 0x4000000000000000;
      }
      return v11;
    case 2u:
      sub_24E563530((uint64_t)v4, &qword_2698F34A0);
      uint64_t v10 = v5;
      goto LABEL_5;
    case 3u:
      uint64_t v10 = v5;
LABEL_5:
      sub_24E563530(v10, &qword_2698F34A0);
      swift_storeEnumTagMultiPayload();
      break;
    case 4u:
      __break(1u);
      JUMPOUT(0x24E5D921CLL);
    default:
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A8);
      uint64_t v7 = (char *)v4 + *(int *)(v6 + 48);
      uint64_t v8 = (uint64_t)v4 + *(int *)(v6 + 64);
      sub_24E563530(v5, &qword_2698F34A0);
      swift_storeEnumTagMultiPayload();
      sub_24E563530(v8, &qword_2698F34B0);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34B8);
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
      sub_24E563530((uint64_t)v4, &qword_2698F34C0);
      break;
  }
  return 0x8000000000000000;
}

uint64_t sub_24E5D9230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  _OWORD v7[3] = a4;
  _OWORD v7[4] = a5;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_24E5D9258, 0, 0);
}

uint64_t sub_24E5D9258()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24E5905A4;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  uint64_t v6 = MEMORY[0x263F8EE60] + 8;
  uint64_t v7 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA22B8](v4, v5, v6, 0, 0, &unk_2698F3500, v1, v7);
}

uint64_t sub_24E5D9348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  _OWORD v6[5] = a2;
  v6[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A0);
  v6[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34B0);
  v6[12] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34B8);
  v6[13] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[14] = v8;
  v6[15] = *(void *)(v8 + 64);
  v6[16] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34C0);
  v6[17] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[18] = v10;
  v6[19] = *(void *)(v10 + 64);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  v6[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5D9528, 0, 0);
}

uint64_t sub_24E5D9528()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v4 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v29 = v4;
  uint64_t v32 = v0[17];
  uint64_t v5 = v0[14];
  uint64_t v27 = v0[16];
  uint64_t v28 = v0[15];
  uint64_t v26 = v0[13];
  uint64_t v31 = v0[12];
  uint64_t v30 = v0[9];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[6];
  uint64_t v25 = v0[8];
  uint64_t v8 = sub_24E863FE8();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v33(v2, 1, 1, v8);
  sub_24E576EA0(v6, v1, &qword_2698F34C0);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  sub_24E612440(v1, v10 + v9, &qword_2698F34C0);
  unint64_t v24 = (v3 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v10 + v24) = v7;
  swift_retain();
  sub_24E588030(v2, (uint64_t)&unk_2698F3510, v10);
  sub_24E563530(v2, (uint64_t *)&unk_2698F7FE0);
  v33(v2, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v27, v25, v26);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12 + v11, v27, v26);
  *(void *)(v12 + ((v28 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  swift_retain();
  sub_24E588030(v2, (uint64_t)&unk_2698F3520, v12);
  sub_24E563530(v2, (uint64_t *)&unk_2698F7FE0);
  sub_24E576EA0(v30, v31, &qword_2698F34B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v32) == 1)
  {
    uint64_t v13 = v0[12];
    uint64_t v14 = &qword_2698F34B0;
  }
  else
  {
    uint64_t v16 = v0[21];
    uint64_t v15 = v0[22];
    uint64_t v17 = v0[20];
    uint64_t v18 = v0[6];
    sub_24E612440(v0[12], v17, &qword_2698F34C0);
    v33(v15, 1, 1, v8);
    sub_24E576EA0(v17, v16, &qword_2698F34C0);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = 0;
    *(void *)(v19 + 24) = 0;
    sub_24E612440(v16, v19 + v9, &qword_2698F34C0);
    *(void *)(v19 + v24) = v18;
    swift_retain();
    sub_24E588030(v15, (uint64_t)&unk_2698F3528, v19);
    sub_24E563530(v15, (uint64_t *)&unk_2698F7FE0);
    uint64_t v13 = v17;
    uint64_t v14 = &qword_2698F34C0;
  }
  sub_24E563530(v13, v14);
  v0[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
  if (sub_24E8640C8())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
  else
  {
    v0[24] = *(void *)(*(void *)v0[6] + 136);
    unint64_t v22 = (void *)swift_task_alloc();
    v0[25] = v22;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1F78);
    *unint64_t v22 = v0;
    v22[1] = sub_24E5D9A08;
    return MEMORY[0x270FA2048](v0 + 27, 0, 0, v23);
  }
}

uint64_t sub_24E5D9A08()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E5D9C84;
  }
  else {
    uint64_t v2 = sub_24E5D9B1C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E5D9B1C()
{
  if (sub_24E8640C8())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v3;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1F78);
    *uint64_t v3 = v0;
    v3[1] = sub_24E5D9A08;
    return MEMORY[0x270FA2048](v0 + 216, 0, 0, v4);
  }
}

uint64_t sub_24E5D9C84()
{
  uint64_t v1 = v0 + 27;
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[6];
  uint64_t v4 = v3 + v0[24];
  uint64_t v5 = *(os_unfair_lock_s **)(v3 + 16);
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  sub_24E576EA0(v4, v2, &qword_2698F34A0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = (uint64_t *)v0[11];
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      unint64_t v9 = (void *)v6[2];
      uint64_t v10 = v6[4];
      if (v10)
      {
        int v38 = v10;
        uint64_t v11 = *(void *)(v7 + 24);
        swift_release();
        if (v11)
        {
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
          JUMPOUT(0x24E5DA25CLL);
        }
        uint64_t v12 = (void *)v0[26];
        sub_24E563530(v0[6] + v0[24], &qword_2698F34A0);
        swift_storeEnumTagMultiPayload();
        id v13 = v12;
        swift_endAccess();
        os_unfair_lock_unlock(v5);
        uint64_t v14 = v9[2];
        uint64_t v15 = (void *)v0[26];
        if (v14)
        {
          uint64_t v37 = v12;
          id v16 = v15;
          sub_24E863F68();
          sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v17 = 0;
          do
          {
            ++v17;
            uint64_t v18 = swift_allocError();
            sub_24E863B28();
            swift_allocError();
            uint64_t *v19 = v18;
            swift_continuation_throwingResumeWithError();
          }
          while (v14 != v17);
          swift_bridgeObjectRelease();
          uint64_t v1 = v0 + 27;
          uint64_t v12 = v37;
        }
        else
        {
          id v29 = v15;
          swift_retain();
          uint64_t v1 = v0 + 27;
        }
        uint64_t v30 = v0[26];
        sub_24E864068();
        swift_allocError();
        *uint64_t v31 = v30;
        int v20 = v38;
        swift_continuation_throwingResumeWithError();
        swift_release();
        unint64_t v21 = v8 | 0x4000000000000000;
      }
      else
      {
        int v39 = v8;
        unint64_t v22 = (void *)v0[26];
        uint64_t v23 = (void *)(v0[6] + v0[24]);
        sub_24E563530((uint64_t)v23, &qword_2698F34A0);
        void *v23 = v7;
        v23[1] = v22;
        swift_storeEnumTagMultiPayload();
        id v24 = v22;
        swift_endAccess();
        os_unfair_lock_unlock(v5);
        uint64_t v25 = v9[2];
        if (v25)
        {
          sub_24E863F68();
          sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v26 = 0;
          do
          {
            ++v26;
            uint64_t v27 = swift_allocError();
            sub_24E863B28();
            swift_allocError();
            uint64_t *v28 = v27;
            swift_continuation_throwingResumeWithError();
          }
          while (v25 != v26);
          swift_bridgeObjectRelease();
          int v20 = v39;
        }
        else
        {
          int v20 = v39;
          swift_retain();
        }
        uint64_t v12 = v9;
        sub_24E864068();
        swift_release();
        unint64_t v21 = 0;
        uint64_t v1 = v0 + 27;
      }
LABEL_18:
      uint64_t v32 = (void *)v0[26];
      sub_24E8640D8();
      sub_24E5ABAF4(v20, v12, v21);

      if (sub_24E8640C8())
      {
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v33 = (uint64_t (*)(void))v0[1];
        return v33();
      }
      else
      {
        uint64_t v35 = (void *)swift_task_alloc();
        v0[25] = v35;
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1F78);
        void *v35 = v0;
        v35[1] = sub_24E5D9A08;
        return MEMORY[0x270FA2048](v1, 0, 0, v36);
      }
    case 2u:
      sub_24E563530(v0[11], &qword_2698F34A0);
      goto LABEL_9;
    case 3u:
LABEL_9:
      swift_endAccess();
      os_unfair_lock_unlock(v5);
      uint64_t v12 = 0;
      int v20 = 0;
      unint64_t v21 = 0x8000000000000000;
      goto LABEL_18;
    case 4u:
      goto LABEL_27;
    default:
      goto LABEL_26;
  }
}

uint64_t sub_24E5DA270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[17] = a4;
  v5[18] = a5;
  v5[19] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A0);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3530);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3478);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3480);
  v5[26] = v6;
  v5[27] = *(void *)(v6 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34B8);
  v5[30] = v7;
  v5[31] = *(void *)(v7 - 8);
  v5[32] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3538);
  v5[33] = v8;
  v5[34] = *(void *)(v8 - 8);
  v5[35] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5DA4C8, 0, 0);
}

uint64_t sub_24E5DA4C8()
{
  uint64_t v1 = (void *)v0[18];
  (*(void (**)(void, void, void))(v0[31] + 16))(v0[32], v0[17], v0[30]);
  sub_24E6123FC(&qword_2698F3540, &qword_2698F34B8);
  sub_24E8640E8();
  v0[36] = v1[2];
  v0[37] = *(void *)(*v1 + 136);
  return MEMORY[0x270FA2498](sub_24E5DA5B4, 0, 0);
}

uint64_t sub_24E5DA5B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  uint64_t v4 = (os_unfair_lock_s *)v1[36];
  v1[2] = v2;
  v1[3] = sub_24E5DA6F0;
  uint64_t v5 = swift_continuation_init();
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  sub_24E5D6BD0(v5);
  unint64_t v7 = v6;
  swift_endAccess();
  os_unfair_lock_unlock(v4);
  if (v7 >> 62)
  {
    if (v7 >> 62 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
      swift_allocError();
      *uint64_t v8 = v7 & 0x3FFFFFFFFFFFFFFFLL;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
  return MEMORY[0x270FA23F0](v3);
}

uint64_t sub_24E5DA6F0()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 304) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x270FA2498](sub_24E5DA9C4, 0, 0);
  }
  else
  {
    uint64_t v4 = sub_24E6123FC(&qword_2698F3548, &qword_2698F3538);
    uint64_t v5 = (void *)swift_task_alloc();
    v1[39] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_24E5DA8B0;
    uint64_t v6 = v1[33];
    uint64_t v7 = v1[25];
    return MEMORY[0x270FA1E80](v7, v6, v4);
  }
}

uint64_t sub_24E5DA8B0()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E5DB514;
  }
  else {
    uint64_t v2 = sub_24E5DAAC4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E5DA9C4()
{
  (*(void (**)(void, void))(v0[34] + 8))(v0[35], v0[33]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E5DAAC4()
{
  uint64_t v1 = *(void *)(v0 + 200);
  int v2 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 216) + 48))(v1, 1, *(void *)(v0 + 208));
  uint64_t v4 = *(os_unfair_lock_s **)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 296);
  if (v2 == 1)
  {
    uint64_t v5 = *(void *)(v0 + 160);
    uint64_t v6 = *(void *)(v0 + 144) + v3;
    sub_24E563530(v1, &qword_2698F3478);
    os_unfair_lock_lock(v4);
    sub_24E576EA0(v6, v5, &qword_2698F34A0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = *(unint64_t **)(v0 + 160);
        unint64_t v8 = *v7;
        uint64_t v9 = (void *)v7[1];
        unint64_t v11 = v7[2];
        unint64_t v10 = v7[3];
        unint64_t v12 = v7[4];
        if (!v12)
        {
          unint64_t v27 = v10 + 1;
          if (!__OFADD__(v10, 1))
          {
            uint64_t v28 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 296));
            sub_24E563530((uint64_t)v28, &qword_2698F34A0);
            unint64_t *v28 = v8;
            v28[1] = (unint64_t)v9;
            v28[2] = v11;
            v28[3] = v27;
            v28[4] = 0;
            swift_storeEnumTagMultiPayload();
            if (v27 == *(unint64_t *)((char *)v28
                                            + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3550)
                                                     + 68)))
            {
              swift_retain();
              swift_bridgeObjectRetain();
              unint64_t v15 = v8;
              unint64_t v8 = v11;
              unint64_t v11 = 0;
              goto LABEL_18;
            }
LABEL_35:
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 288));
            goto LABEL_36;
          }
          goto LABEL_61;
        }
        if (!v9[3])
        {
          id v13 = (void *)(v10 + 1);
          if (!__OFADD__(v10, 1))
          {
            uint64_t v14 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 296));
            if (v13 == *(void **)((char *)v14
                                   + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3550) + 68)))
            {
              swift_release();
              sub_24E563530((uint64_t)v14, &qword_2698F34A0);
              swift_storeEnumTagMultiPayload();
              unint64_t v15 = v12 | 0x4000000000000000;
LABEL_18:
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 288));
              if (!(v15 >> 62))
              {
                uint64_t v45 = *(void *)(v8 + 16);
                if (v45)
                {
                  sub_24E863F68();
                  sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v46 = 0;
                  do
                  {
                    ++v46;
                    uint64_t v47 = swift_allocError();
                    sub_24E863B28();
                    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
                    swift_allocError();
                    *char v48 = v47;
                    swift_continuation_throwingResumeWithError();
                  }
                  while (v45 != v46);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  swift_retain();
                }
                sub_24E864068();
                goto LABEL_57;
              }
              if (v15 >> 62 == 1)
              {
                uint64_t v29 = v15 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v30 = *(void *)(v11 + 16);
                if (v30)
                {
                  sub_24E863F68();
                  sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v31 = 0;
                  do
                  {
                    ++v31;
                    uint64_t v32 = swift_allocError();
                    sub_24E863B28();
                    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
                    swift_allocError();
                    uint64_t *v33 = v32;
                    swift_continuation_throwingResumeWithError();
                  }
                  while (v30 != v31);
                  swift_bridgeObjectRelease();
                  uint64_t v29 = v15 & 0x3FFFFFFFFFFFFFFFLL;
                }
                else
                {
                  swift_retain();
                }
                uint64_t v66 = *(void *)(v0 + 208);
                uint64_t v65 = *(void *)(v0 + 216);
                uint64_t v67 = *(void *)(v0 + 192);
                sub_24E864068();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v67, 1, 1, v66);
                sub_24E612440(v67, *(void *)(*(void *)(v29 + 64) + 40), &qword_2698F3478);
                swift_continuation_throwingResume();
LABEL_57:
                swift_release();
                sub_24E5B8944(v15);
              }
LABEL_36:
              (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 264));
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              uint64_t v43 = *(uint64_t (**)(void))(v0 + 8);
              return v43();
            }
            goto LABEL_34;
          }
          goto LABEL_60;
        }
        __break(1u);
        break;
      case 2u:
        sub_24E563530(*(void *)(v0 + 160), &qword_2698F34A0);
        goto LABEL_35;
      case 3u:
        goto LABEL_35;
      case 4u:
        goto LABEL_67;
      default:
        goto LABEL_66;
    }
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  unint64_t v8 = v0 + 104;
  id v13 = (void *)(v0 + 128);
  uint64_t v16 = *(void *)(v0 + 168);
  uint64_t v17 = *(void *)(v0 + 144) + v3;
  sub_24E612440(v1, *(void *)(v0 + 232), &qword_2698F3480);
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  sub_24E576EA0(v17, v16, &qword_2698F34A0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v18 = *(unint64_t **)(v0 + 168);
      unint64_t v11 = *v18;
      uint64_t v9 = (void *)v18[1];
      unint64_t v19 = v18[2];
      unint64_t v12 = v18[3];
      unint64_t v20 = v18[4];
      if (v20)
      {
        if (v9[3]) {
          goto LABEL_59;
        }
        unint64_t v21 = v18[3];
        uint64_t v68 = *(void *)(v0 + 232);
        unint64_t v22 = *(unint64_t **)(v0 + 184);
        uint64_t v23 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 296));
        sub_24E563530((uint64_t)v23, &qword_2698F34A0);
        unint64_t *v23 = v11;
        v23[1] = (unint64_t)v9;
        v23[2] = v19;
        v23[3] = v21;
        v23[4] = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3558);
        uint64_t v25 = (uint64_t)v22 + *(int *)(v24 + 48);
        *unint64_t v22 = v20;
        sub_24E576EA0(v68, v25, &qword_2698F3480);
        (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v22, 0, 1, v24);
      }
      else
      {
        uint64_t v34 = *(void *)(v0 + 144) + *(void *)(v0 + 296);
        *(void *)(v0 + 128) = v9;
        sub_24E563530(v34, &qword_2698F34A0);
        swift_storeEnumTagMultiPayload();
        uint64_t v35 = v9[3];
        uint64_t v14 = (unint64_t *)(v35 + 1);
        if (__OFADD__(v35, 1))
        {
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (v9[2] < (uint64_t)v14 || (isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_24E60919C((uint64_t)v14, 0, &qword_2698F3480, &qword_2698F3560);
          uint64_t v9 = (void *)*v13;
        }
        uint64_t v38 = v9[3];
        uint64_t v37 = v9[4];
        BOOL v41 = __OFADD__(v37, v38);
        uint64_t v39 = v37 + v38;
        if (v41) {
          goto LABEL_63;
        }
        if (v38 < 0)
        {
          if (v39 < 0)
          {
            uint64_t v49 = v9[2];
            BOOL v41 = __OFADD__(v39, v49);
            v39 += v49;
            if (v41)
            {
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
              JUMPOUT(0x24E5DB4ECLL);
            }
          }
        }
        else
        {
          uint64_t v40 = v9[2];
          BOOL v41 = __OFSUB__(v39, v40);
          uint64_t v42 = v39 - v40;
          if (v42 < 0 == v41)
          {
            uint64_t v39 = v42;
            if (v41)
            {
              __break(1u);
LABEL_34:
              sub_24E563530((uint64_t)v14, &qword_2698F34A0);
              unint64_t *v14 = v8;
              v14[1] = (unint64_t)v9;
              v14[2] = v11;
              v14[3] = (unint64_t)v13;
              v14[4] = v12;
              swift_storeEnumTagMultiPayload();
              goto LABEL_35;
            }
          }
        }
        sub_24E576EA0(*(void *)(v0 + 232), (uint64_t)v9+ ((*(unsigned __int8 *)(*(void *)(v0 + 216) + 80) + 40) & -(*(unsigned __int8 *)(*(void *)(v0 + 216)+ 80)+ 1))+ *(void *)(*(void *)(v0 + 216) + 72) * v39, &qword_2698F3480);
        uint64_t v50 = v9[3];
        BOOL v41 = __OFADD__(v50, 1);
        uint64_t v51 = v50 + 1;
        if (v41)
        {
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        uint64_t v26 = *(void *)(v0 + 184);
        uint64_t v52 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 296));
        v9[3] = v51;
        sub_24E563530((uint64_t)v52, &qword_2698F34A0);
        *uint64_t v52 = v11;
        v52[1] = (unint64_t)v9;
        v52[2] = v19;
        v52[3] = v12;
        v52[4] = 0;
        swift_storeEnumTagMultiPayload();
LABEL_47:
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3558);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v26, 1, 1, v53);
      }
      uint64_t v54 = *(os_unfair_lock_s **)(v0 + 288);
      uint64_t v56 = *(void *)(v0 + 176);
      uint64_t v55 = *(void *)(v0 + 184);
      swift_endAccess();
      os_unfair_lock_unlock(v54);
      sub_24E576EA0(v55, v56, &qword_2698F3530);
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3558);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v56, 1, v57) != 1)
      {
        uint64_t v59 = *(void *)(v0 + 216);
        uint64_t v58 = *(void *)(v0 + 224);
        uint64_t v60 = *(void *)(v0 + 208);
        uint64_t v61 = *(void *)(v0 + 192);
        uint64_t v62 = *(uint64_t **)(v0 + 176);
        uint64_t v63 = *v62;
        sub_24E612440((uint64_t)v62 + *(int *)(v57 + 48), v58, &qword_2698F3480);
        sub_24E576EA0(v58, v61, &qword_2698F3480);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v61, 0, 1, v60);
        sub_24E612440(v61, *(void *)(*(void *)(v63 + 64) + 40), &qword_2698F3478);
        swift_continuation_throwingResume();
        sub_24E563530(v58, &qword_2698F3480);
      }
      uint64_t v64 = *(void *)(v0 + 232);
      sub_24E563530(*(void *)(v0 + 184), &qword_2698F3530);
      sub_24E563530(v64, &qword_2698F3480);
      return MEMORY[0x270FA2498](sub_24E5DA5B4, 0, 0);
    case 2u:
      uint64_t v26 = *(void *)(v0 + 184);
      sub_24E563530(*(void *)(v0 + 168), &qword_2698F34A0);
      goto LABEL_47;
    case 3u:
      uint64_t v26 = *(void *)(v0 + 184);
      goto LABEL_47;
    case 4u:
      goto LABEL_69;
    default:
      goto LABEL_68;
  }
}

uint64_t sub_24E5DB514()
{
  (*(void (**)(void, void))(v0[34] + 8))(v0[35], v0[33]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E5DB614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[17] = a4;
  v5[18] = a5;
  v5[19] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34A0);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3530);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3478);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3480);
  v5[27] = v6;
  v5[28] = *(void *)(v6 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34E8);
  v5[33] = v7;
  v5[34] = *(void *)(v7 - 8);
  v5[35] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3568);
  v5[36] = v8;
  v5[37] = *(void *)(v8 - 8);
  v5[38] = swift_task_alloc();
  v5[39] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34C0);
  v5[40] = swift_task_alloc();
  v5[41] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3570);
  v5[42] = swift_task_alloc();
  v5[43] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5DB908, 0, 0);
}

uint64_t sub_24E5DB908()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[40];
  uint64_t v3 = v0[38];
  uint64_t v13 = v0[39];
  uint64_t v14 = v0[41];
  uint64_t v5 = v0[36];
  uint64_t v4 = v0[37];
  uint64_t v7 = v0[34];
  uint64_t v6 = v0[35];
  uint64_t v8 = v0[33];
  unint64_t v15 = (void *)v0[18];
  uint64_t v16 = v0[43];
  sub_24E576EA0(v0[17], v2, &qword_2698F34C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v2, v8);
  sub_24E6123FC(&qword_2698F3578, &qword_2698F34E8);
  sub_24E8640E8();
  uint64_t v9 = *(void *)(v2 + *(int *)(v13 + 52));
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v0[44] = (uint64_t)v10;
  v0[45] = (v4 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v10(v1, 1, 1, v5);
  unint64_t v11 = (uint64_t *)(v1 + *(int *)(v14 + 52));
  *unint64_t v11 = 1;
  v11[1] = 0;
  swift_bridgeObjectRetain();
  sub_24E563530(v1, &qword_2698F3580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v3, v5);
  v10(v1, 0, 1, v5);
  sub_24E57707C(*v11);
  *unint64_t v11 = v9;
  v11[1] = 0;
  sub_24E612440(v1, v16, &qword_2698F3570);
  sub_24E563530(v2, &qword_2698F34C0);
  v0[46] = v15[2];
  v0[47] = *(void *)(*v15 + 136);
  return MEMORY[0x270FA2498](sub_24E5DBB04, 0, 0);
}

uint64_t sub_24E5DBB04()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  uint64_t v4 = (os_unfair_lock_s *)v1[46];
  v1[2] = v2;
  v1[3] = sub_24E5DBC40;
  uint64_t v5 = swift_continuation_init();
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  sub_24E5D6BD0(v5);
  unint64_t v7 = v6;
  swift_endAccess();
  os_unfair_lock_unlock(v4);
  if (v7 >> 62)
  {
    if (v7 >> 62 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
      swift_allocError();
      *uint64_t v8 = v7 & 0x3FFFFFFFFFFFFFFFLL;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
  return MEMORY[0x270FA23F0](v3);
}

uint64_t sub_24E5DBC40()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 384) = v1;
  if (v1)
  {
    swift_willThrow();
    uint64_t v2 = sub_24E5DDA14;
  }
  else
  {
    uint64_t v2 = sub_24E5DBD5C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E5DBD5C()
{
  if ((*(unsigned int (**)(void, uint64_t, void))(*(void *)(v0 + 296) + 48))(*(void *)(v0 + 344), 1, *(void *)(v0 + 288)))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 224) + 56))(*(void *)(v0 + 200), 1, 1, *(void *)(v0 + 216));
    uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 352);
    uint64_t v2 = *(void *)(v0 + 344);
    uint64_t v3 = *(void *)(v0 + 328);
    uint64_t v4 = *(void *)(v0 + 288);
    sub_24E563530(*(void *)(v0 + 200), &qword_2698F3478);
    sub_24E563530(v2, &qword_2698F3580);
    v1(v2, 1, 1, v4);
    uint64_t v5 = (uint64_t *)(v2 + *(int *)(v3 + 52));
    if (*v5 == 1)
    {
      unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 224) + 56);
      v6(*(void *)(v0 + 208), 1, 1, *(void *)(v0 + 216));
    }
    else
    {
      char v11 = sub_24E864088();
      uint64_t v12 = *v5;
      if ((v11 & 1) != 0 || !v12 || (unint64_t v13 = v5[1], v14 = *(void *)(v12 + 16), v13 == v14))
      {
        uint64_t v15 = *(void *)(v0 + 216);
        uint64_t v16 = *(void *)(v0 + 224);
        uint64_t v17 = *(void *)(v0 + 208);
        swift_bridgeObjectRelease();
        *uint64_t v5 = 0;
        v5[1] = 0;
        unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
        v6(v17, 1, 1, v15);
      }
      else
      {
        if (v13 >= v14)
        {
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
          goto LABEL_76;
        }
        uint64_t v45 = *(void *)(v0 + 240);
        uint64_t v46 = *(void *)(v0 + 216);
        uint64_t v47 = *(void *)(v0 + 224);
        uint64_t v48 = *(void *)(v0 + 208);
        sub_24E576EA0(v12+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v13, v45, &qword_2698F3480);
        v5[1] = v13 + 1;
        sub_24E612440(v45, v48, &qword_2698F3480);
        unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
        v6(v48, 0, 1, v46);
      }
    }
    uint64_t v18 = *(void *)(v0 + 208);
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 224) + 48))(v18, 1, *(void *)(v0 + 216));
    unint64_t v21 = *(os_unfair_lock_s **)(v0 + 368);
    uint64_t v20 = *(void *)(v0 + 376);
    if (v19 == 1)
    {
      uint64_t v22 = *(void *)(v0 + 160);
      uint64_t v23 = *(void *)(v0 + 144) + v20;
      sub_24E563530(v18, &qword_2698F3478);
      os_unfair_lock_lock(v21);
      sub_24E576EA0(v23, v22, &qword_2698F34A0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v24 = *(unint64_t **)(v0 + 160);
          unint64_t v25 = *v24;
          uint64_t v26 = (void *)v24[1];
          unint64_t v28 = v24[2];
          unint64_t v27 = v24[3];
          unint64_t v29 = v24[4];
          if (!v29)
          {
            unint64_t v49 = v27 + 1;
            if (!__OFADD__(v27, 1))
            {
              uint64_t v50 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 376));
              sub_24E563530((uint64_t)v50, &qword_2698F34A0);
              unint64_t *v50 = v25;
              v50[1] = (unint64_t)v26;
              v50[2] = v28;
              v50[3] = v49;
              v50[4] = 0;
              swift_storeEnumTagMultiPayload();
              if (v49 == *(unint64_t *)((char *)v50
                                              + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3550)
                                                       + 68)))
              {
                swift_retain();
                swift_bridgeObjectRetain();
                unint64_t v32 = v25;
                unint64_t v25 = v28;
                unint64_t v28 = 0;
                goto LABEL_31;
              }
LABEL_48:
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 368));
              goto LABEL_49;
            }
            goto LABEL_75;
          }
          if (!v26[3])
          {
            uint64_t v30 = (void *)(v27 + 1);
            if (!__OFADD__(v27, 1))
            {
              uint64_t v31 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 376));
              if (v30 == *(void **)((char *)v31
                                     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3550) + 68)))
              {
                swift_release();
                sub_24E563530((uint64_t)v31, &qword_2698F34A0);
                swift_storeEnumTagMultiPayload();
                unint64_t v32 = v29 | 0x4000000000000000;
LABEL_31:
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 368));
                if (!(v32 >> 62))
                {
                  uint64_t v66 = *(void *)(v25 + 16);
                  if (v66)
                  {
                    sub_24E863F68();
                    sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
                    swift_retain();
                    swift_bridgeObjectRetain();
                    uint64_t v67 = 0;
                    do
                    {
                      ++v67;
                      uint64_t v68 = swift_allocError();
                      sub_24E863B28();
                      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
                      swift_allocError();
                      uint64_t *v69 = v68;
                      swift_continuation_throwingResumeWithError();
                    }
                    while (v66 != v67);
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    swift_retain();
                  }
                  sub_24E864068();
                  goto LABEL_70;
                }
                if (v32 >> 62 == 1)
                {
                  uint64_t v51 = v32 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v52 = *(void *)(v28 + 16);
                  if (v52)
                  {
                    sub_24E863F68();
                    sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
                    swift_retain();
                    swift_bridgeObjectRetain();
                    uint64_t v53 = 0;
                    do
                    {
                      ++v53;
                      uint64_t v54 = swift_allocError();
                      sub_24E863B28();
                      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
                      swift_allocError();
                      uint64_t *v55 = v54;
                      swift_continuation_throwingResumeWithError();
                    }
                    while (v52 != v53);
                    swift_bridgeObjectRelease();
                    uint64_t v51 = v32 & 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else
                  {
                    swift_retain();
                  }
                  uint64_t v86 = *(void *)(v0 + 216);
                  uint64_t v87 = *(void *)(v0 + 192);
                  sub_24E864068();
                  v6(v87, 1, 1, v86);
                  sub_24E612440(v87, *(void *)(*(void *)(v51 + 64) + 40), &qword_2698F3478);
                  swift_continuation_throwingResume();
LABEL_70:
                  swift_release();
                  sub_24E5B8944(v32);
                }
LABEL_49:
                sub_24E563530(*(void *)(v0 + 344), &qword_2698F3570);
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                uint64_t v65 = *(uint64_t (**)(void))(v0 + 8);
                return v65();
              }
              goto LABEL_47;
            }
            goto LABEL_73;
          }
          __break(1u);
          break;
        case 2u:
          sub_24E563530(*(void *)(v0 + 160), &qword_2698F34A0);
          goto LABEL_48;
        case 3u:
          goto LABEL_48;
        case 4u:
          goto LABEL_81;
        default:
          goto LABEL_80;
      }
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    unint64_t v25 = v0 + 104;
    uint64_t v30 = (void *)(v0 + 128);
    uint64_t v33 = *(void *)(v0 + 168);
    uint64_t v34 = *(void *)(v0 + 144) + v20;
    sub_24E612440(v18, *(void *)(v0 + 256), &qword_2698F3480);
    os_unfair_lock_lock(v21);
    swift_beginAccess();
    sub_24E576EA0(v34, v33, &qword_2698F34A0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v90 = v6;
        uint64_t v35 = *(unint64_t **)(v0 + 168);
        unint64_t v28 = *v35;
        uint64_t v26 = (void *)v35[1];
        unint64_t v36 = v35[2];
        unint64_t v29 = v35[3];
        unint64_t v37 = v35[4];
        if (v37)
        {
          if (v26[3]) {
            goto LABEL_72;
          }
          unint64_t v38 = v35[3];
          uint64_t v89 = *(void *)(v0 + 256);
          uint64_t v39 = *(unint64_t **)(v0 + 184);
          uint64_t v40 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 376));
          sub_24E563530((uint64_t)v40, &qword_2698F34A0);
          *uint64_t v40 = v28;
          v40[1] = (unint64_t)v26;
          v40[2] = v36;
          v40[3] = v38;
          v40[4] = 0;
          swift_storeEnumTagMultiPayload();
          uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3558);
          uint64_t v42 = (uint64_t)v39 + *(int *)(v41 + 48);
          *uint64_t v39 = v37;
          sub_24E576EA0(v89, v42, &qword_2698F3480);
          (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v39, 0, 1, v41);
        }
        else
        {
          uint64_t v56 = *(void *)(v0 + 144) + *(void *)(v0 + 376);
          *(void *)(v0 + 128) = v26;
          sub_24E563530(v56, &qword_2698F34A0);
          swift_storeEnumTagMultiPayload();
          uint64_t v57 = v26[3];
          uint64_t v31 = (unint64_t *)(v57 + 1);
          if (__OFADD__(v57, 1))
          {
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
            goto LABEL_78;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if (v26[2] < (uint64_t)v31 || (isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_24E60919C((uint64_t)v31, 0, &qword_2698F3480, &qword_2698F3560);
            uint64_t v26 = (void *)*v30;
          }
          uint64_t v60 = v26[3];
          uint64_t v59 = v26[4];
          BOOL v63 = __OFADD__(v59, v60);
          uint64_t v61 = v59 + v60;
          if (v63) {
            goto LABEL_77;
          }
          if (v60 < 0)
          {
            if (v61 < 0)
            {
              uint64_t v70 = v26[2];
              BOOL v63 = __OFADD__(v61, v70);
              v61 += v70;
              if (v63)
              {
LABEL_79:
                __break(1u);
LABEL_80:
                __break(1u);
LABEL_81:
                __break(1u);
LABEL_82:
                __break(1u);
LABEL_83:
                __break(1u);
                JUMPOUT(0x24E5DCA68);
              }
            }
          }
          else
          {
            uint64_t v62 = v26[2];
            BOOL v63 = __OFSUB__(v61, v62);
            uint64_t v64 = v61 - v62;
            if (v64 < 0 == v63)
            {
              uint64_t v61 = v64;
              if (v63)
              {
                __break(1u);
LABEL_47:
                sub_24E563530((uint64_t)v31, &qword_2698F34A0);
                *uint64_t v31 = v25;
                v31[1] = (unint64_t)v26;
                void v31[2] = v28;
                v31[3] = (unint64_t)v30;
                v31[4] = v29;
                swift_storeEnumTagMultiPayload();
                goto LABEL_48;
              }
            }
          }
          sub_24E576EA0(*(void *)(v0 + 256), (uint64_t)v26+ ((*(unsigned __int8 *)(*(void *)(v0 + 224) + 80) + 40) & -(*(unsigned __int8 *)(*(void *)(v0 + 224)+ 80)+ 1))+ *(void *)(*(void *)(v0 + 224) + 72) * v61, &qword_2698F3480);
          uint64_t v71 = v26[3];
          BOOL v63 = __OFADD__(v71, 1);
          uint64_t v72 = v71 + 1;
          if (v63)
          {
LABEL_78:
            __break(1u);
            goto LABEL_79;
          }
          uint64_t v73 = *(void *)(v0 + 184);
          uint64_t v74 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 376));
          v26[3] = v72;
          sub_24E563530((uint64_t)v74, &qword_2698F34A0);
          *uint64_t v74 = v28;
          v74[1] = (unint64_t)v26;
          v74[2] = v36;
          v74[3] = v29;
          v74[4] = 0;
          swift_storeEnumTagMultiPayload();
          uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3558);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v73, 1, 1, v75);
        }
        unint64_t v6 = v90;
LABEL_61:
        uint64_t v76 = *(os_unfair_lock_s **)(v0 + 368);
        uint64_t v78 = *(void *)(v0 + 176);
        uint64_t v77 = *(void *)(v0 + 184);
        swift_endAccess();
        os_unfair_lock_unlock(v76);
        sub_24E576EA0(v77, v78, &qword_2698F3530);
        uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3558);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 48))(v78, 1, v79) != 1)
        {
          uint64_t v80 = *(void *)(v0 + 232);
          uint64_t v81 = *(void *)(v0 + 216);
          uint64_t v82 = *(void *)(v0 + 192);
          unint64_t v83 = *(uint64_t **)(v0 + 176);
          uint64_t v84 = *v83;
          sub_24E612440((uint64_t)v83 + *(int *)(v79 + 48), v80, &qword_2698F3480);
          sub_24E576EA0(v80, v82, &qword_2698F3480);
          v6(v82, 0, 1, v81);
          sub_24E612440(v82, *(void *)(*(void *)(v84 + 64) + 40), &qword_2698F3478);
          swift_continuation_throwingResume();
          sub_24E563530(v80, &qword_2698F3480);
        }
        uint64_t v85 = *(void *)(v0 + 256);
        sub_24E563530(*(void *)(v0 + 184), &qword_2698F3530);
        sub_24E563530(v85, &qword_2698F3480);
        uint64_t result = MEMORY[0x270FA2498](sub_24E5DBB04, 0, 0);
        break;
      case 2u:
        uint64_t v43 = *(void *)(v0 + 184);
        sub_24E563530(*(void *)(v0 + 168), &qword_2698F34A0);
        goto LABEL_25;
      case 3u:
        uint64_t v43 = *(void *)(v0 + 184);
LABEL_25:
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3558);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 1, 1, v44);
        goto LABEL_61;
      case 4u:
        goto LABEL_83;
      default:
        goto LABEL_82;
    }
  }
  else
  {
    uint64_t v7 = sub_24E6123FC(&qword_2698F3588, &qword_2698F3568);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_24E5DCA90;
    uint64_t v9 = *(void *)(v0 + 288);
    uint64_t v10 = *(void *)(v0 + 200);
    return MEMORY[0x270FA1E80](v10, v9, v7);
  }
  return result;
}

uint64_t sub_24E5DCA90()
{
  *(void *)(*(void *)v1 + 400) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E5DD864;
  }
  else {
    uint64_t v2 = sub_24E5DCBA4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E5DCBA4()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 200);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 352);
    uint64_t v5 = *(void *)(v0 + 344);
    uint64_t v6 = *(void *)(v0 + 328);
    uint64_t v7 = *(void *)(v0 + 288);
    sub_24E563530(v3, &qword_2698F3478);
    sub_24E563530(v5, &qword_2698F3580);
    v4(v5, 1, 1, v7);
    uint64_t v8 = (uint64_t *)(v5 + *(int *)(v6 + 52));
    if (*v8 == 1)
    {
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 224) + 56);
      v9(*(void *)(v0 + 208), 1, 1, *(void *)(v0 + 216));
    }
    else
    {
      char v12 = sub_24E864088();
      uint64_t v13 = *v8;
      if ((v12 & 1) != 0 || !v13 || (v14 = v8[1], unint64_t v15 = *(void *)(v13 + 16), v14 == v15))
      {
        uint64_t v16 = *(void *)(v0 + 216);
        uint64_t v17 = *(void *)(v0 + 224);
        uint64_t v18 = *(void *)(v0 + 208);
        swift_bridgeObjectRelease();
        *uint64_t v8 = 0;
        v8[1] = 0;
        uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
        v9(v18, 1, 1, v16);
      }
      else
      {
        if (v14 >= v15)
        {
LABEL_76:
          __break(1u);
          goto LABEL_77;
        }
        uint64_t v64 = *(void *)(v0 + 240);
        uint64_t v65 = *(void *)(v0 + 216);
        uint64_t v66 = *(void *)(v0 + 224);
        uint64_t v67 = *(void *)(v0 + 208);
        sub_24E576EA0(v13+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v14, v64, &qword_2698F3480);
        v8[1] = v14 + 1;
        sub_24E612440(v64, v67, &qword_2698F3480);
        uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56);
        v9(v67, 0, 1, v65);
      }
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 208);
    sub_24E612440(v3, v10, &qword_2698F3480);
    sub_24E612440(v10, v11, &qword_2698F3480);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v9(v11, 0, 1, v1);
  }
  uint64_t v19 = *(void *)(v0 + 208);
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 224) + 48))(v19, 1, *(void *)(v0 + 216));
  uint64_t v22 = *(os_unfair_lock_s **)(v0 + 368);
  uint64_t v21 = *(void *)(v0 + 376);
  if (v20 == 1)
  {
    uint64_t v23 = *(void *)(v0 + 160);
    uint64_t v24 = *(void *)(v0 + 144) + v21;
    sub_24E563530(v19, &qword_2698F3478);
    os_unfair_lock_lock(v22);
    sub_24E576EA0(v24, v23, &qword_2698F34A0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        unint64_t v25 = *(unint64_t **)(v0 + 160);
        unint64_t v26 = *v25;
        unint64_t v27 = (void *)v25[1];
        unint64_t v29 = v25[2];
        unint64_t v28 = v25[3];
        unint64_t v30 = v25[4];
        if (!v30)
        {
          unint64_t v46 = v28 + 1;
          if (!__OFADD__(v28, 1))
          {
            uint64_t v47 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 376));
            sub_24E563530((uint64_t)v47, &qword_2698F34A0);
            unint64_t *v47 = v26;
            v47[1] = (unint64_t)v27;
            v47[2] = v29;
            v47[3] = v46;
            v47[4] = 0;
            swift_storeEnumTagMultiPayload();
            if (v46 == *(unint64_t *)((char *)v47
                                            + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3550)
                                                     + 68)))
            {
              swift_retain();
              swift_bridgeObjectRetain();
              unint64_t v33 = v26;
              unint64_t v26 = v29;
              unint64_t v29 = 0;
              goto LABEL_27;
            }
LABEL_44:
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 368));
            goto LABEL_45;
          }
          goto LABEL_72;
        }
        if (!v27[3])
        {
          uint64_t v31 = (void *)(v28 + 1);
          if (!__OFADD__(v28, 1))
          {
            unint64_t v32 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 376));
            if (v31 == *(void **)((char *)v32
                                   + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F3550) + 68)))
            {
              swift_release();
              sub_24E563530((uint64_t)v32, &qword_2698F34A0);
              swift_storeEnumTagMultiPayload();
              unint64_t v33 = v30 | 0x4000000000000000;
LABEL_27:
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 368));
              if (!(v33 >> 62))
              {
                uint64_t v68 = *(void *)(v26 + 16);
                if (v68)
                {
                  sub_24E863F68();
                  sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v69 = 0;
                  do
                  {
                    ++v69;
                    uint64_t v70 = swift_allocError();
                    sub_24E863B28();
                    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
                    swift_allocError();
                    uint64_t *v71 = v70;
                    swift_continuation_throwingResumeWithError();
                  }
                  while (v68 != v69);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  swift_retain();
                }
                sub_24E864068();
                goto LABEL_68;
              }
              if (v33 >> 62 == 1)
              {
                uint64_t v48 = v33 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v49 = *(void *)(v29 + 16);
                if (v49)
                {
                  sub_24E863F68();
                  sub_24E609BE8((unint64_t *)&qword_2698F3170, MEMORY[0x263F8F488]);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v50 = 0;
                  do
                  {
                    ++v50;
                    uint64_t v51 = swift_allocError();
                    sub_24E863B28();
                    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
                    swift_allocError();
                    *uint64_t v52 = v51;
                    swift_continuation_throwingResumeWithError();
                  }
                  while (v49 != v50);
                  swift_bridgeObjectRelease();
                  uint64_t v48 = v33 & 0x3FFFFFFFFFFFFFFFLL;
                }
                else
                {
                  swift_retain();
                }
                uint64_t v88 = *(void *)(v0 + 216);
                uint64_t v89 = *(void *)(v0 + 192);
                sub_24E864068();
                v9(v89, 1, 1, v88);
                sub_24E612440(v89, *(void *)(*(void *)(v48 + 64) + 40), &qword_2698F3478);
                swift_continuation_throwingResume();
LABEL_68:
                swift_release();
                sub_24E5B8944(v33);
              }
LABEL_45:
              sub_24E563530(*(void *)(v0 + 344), &qword_2698F3570);
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              uint64_t v62 = *(uint64_t (**)(void))(v0 + 8);
              return v62();
            }
            goto LABEL_43;
          }
          goto LABEL_71;
        }
        __break(1u);
        break;
      case 2u:
        sub_24E563530(*(void *)(v0 + 160), &qword_2698F34A0);
        goto LABEL_44;
      case 3u:
        goto LABEL_44;
      case 4u:
        goto LABEL_79;
      default:
        goto LABEL_78;
    }
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  unint64_t v26 = v0 + 104;
  uint64_t v31 = (void *)(v0 + 128);
  uint64_t v34 = *(void *)(v0 + 168);
  uint64_t v35 = *(void *)(v0 + 144) + v21;
  sub_24E612440(v19, *(void *)(v0 + 256), &qword_2698F3480);
  os_unfair_lock_lock(v22);
  swift_beginAccess();
  sub_24E576EA0(v35, v34, &qword_2698F34A0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v91 = v9;
      unint64_t v36 = *(unint64_t **)(v0 + 168);
      unint64_t v29 = *v36;
      unint64_t v27 = (void *)v36[1];
      unint64_t v37 = v36[2];
      unint64_t v30 = v36[3];
      unint64_t v38 = v36[4];
      if (v38)
      {
        if (v27[3]) {
          goto LABEL_70;
        }
        unint64_t v39 = v36[3];
        uint64_t v90 = *(void *)(v0 + 256);
        uint64_t v40 = *(unint64_t **)(v0 + 184);
        uint64_t v41 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 376));
        sub_24E563530((uint64_t)v41, &qword_2698F34A0);
        *uint64_t v41 = v29;
        v41[1] = (unint64_t)v27;
        v41[2] = v37;
        v41[3] = v39;
        v41[4] = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3558);
        uint64_t v43 = (uint64_t)v40 + *(int *)(v42 + 48);
        *uint64_t v40 = v38;
        sub_24E576EA0(v90, v43, &qword_2698F3480);
        (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v40, 0, 1, v42);
      }
      else
      {
        uint64_t v53 = *(void *)(v0 + 144) + *(void *)(v0 + 376);
        *(void *)(v0 + 128) = v27;
        sub_24E563530(v53, &qword_2698F34A0);
        swift_storeEnumTagMultiPayload();
        uint64_t v54 = v27[3];
        unint64_t v32 = (unint64_t *)(v54 + 1);
        if (__OFADD__(v54, 1))
        {
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
          goto LABEL_76;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (v27[2] < (uint64_t)v32 || (isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_24E60919C((uint64_t)v32, 0, &qword_2698F3480, &qword_2698F3560);
          unint64_t v27 = (void *)*v31;
        }
        uint64_t v57 = v27[3];
        uint64_t v56 = v27[4];
        BOOL v60 = __OFADD__(v56, v57);
        uint64_t v58 = v56 + v57;
        if (v60) {
          goto LABEL_74;
        }
        if (v57 < 0)
        {
          if (v58 < 0)
          {
            uint64_t v72 = v27[2];
            BOOL v60 = __OFADD__(v58, v72);
            v58 += v72;
            if (v60)
            {
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
LABEL_79:
              __break(1u);
LABEL_80:
              __break(1u);
LABEL_81:
              __break(1u);
              JUMPOUT(0x24E5DD83CLL);
            }
          }
        }
        else
        {
          uint64_t v59 = v27[2];
          BOOL v60 = __OFSUB__(v58, v59);
          uint64_t v61 = v58 - v59;
          if (v61 < 0 == v60)
          {
            uint64_t v58 = v61;
            if (v60)
            {
              __break(1u);
LABEL_43:
              sub_24E563530((uint64_t)v32, &qword_2698F34A0);
              unint64_t *v32 = v26;
              v32[1] = (unint64_t)v27;
              void v32[2] = v29;
              v32[3] = (unint64_t)v31;
              v32[4] = v30;
              swift_storeEnumTagMultiPayload();
              goto LABEL_44;
            }
          }
        }
        sub_24E576EA0(*(void *)(v0 + 256), (uint64_t)v27+ ((*(unsigned __int8 *)(*(void *)(v0 + 224) + 80) + 40) & -(*(unsigned __int8 *)(*(void *)(v0 + 224)+ 80)+ 1))+ *(void *)(*(void *)(v0 + 224) + 72) * v58, &qword_2698F3480);
        uint64_t v73 = v27[3];
        BOOL v60 = __OFADD__(v73, 1);
        uint64_t v74 = v73 + 1;
        if (v60) {
          goto LABEL_75;
        }
        uint64_t v75 = *(void *)(v0 + 184);
        uint64_t v76 = (unint64_t *)(*(void *)(v0 + 144) + *(void *)(v0 + 376));
        v27[3] = v74;
        sub_24E563530((uint64_t)v76, &qword_2698F34A0);
        *uint64_t v76 = v29;
        v76[1] = (unint64_t)v27;
        uint64_t v76[2] = v37;
        v76[3] = v30;
        v76[4] = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3558);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v75, 1, 1, v77);
      }
      uint64_t v9 = v91;
LABEL_59:
      uint64_t v78 = *(os_unfair_lock_s **)(v0 + 368);
      uint64_t v80 = *(void *)(v0 + 176);
      uint64_t v79 = *(void *)(v0 + 184);
      swift_endAccess();
      os_unfair_lock_unlock(v78);
      sub_24E576EA0(v79, v80, &qword_2698F3530);
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3558);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 48))(v80, 1, v81) != 1)
      {
        uint64_t v82 = *(void *)(v0 + 232);
        uint64_t v83 = *(void *)(v0 + 216);
        uint64_t v84 = *(void *)(v0 + 192);
        uint64_t v85 = *(uint64_t **)(v0 + 176);
        uint64_t v86 = *v85;
        sub_24E612440((uint64_t)v85 + *(int *)(v81 + 48), v82, &qword_2698F3480);
        sub_24E576EA0(v82, v84, &qword_2698F3480);
        v9(v84, 0, 1, v83);
        sub_24E612440(v84, *(void *)(*(void *)(v86 + 64) + 40), &qword_2698F3478);
        swift_continuation_throwingResume();
        sub_24E563530(v82, &qword_2698F3480);
      }
      uint64_t v87 = *(void *)(v0 + 256);
      sub_24E563530(*(void *)(v0 + 184), &qword_2698F3530);
      sub_24E563530(v87, &qword_2698F3480);
      return MEMORY[0x270FA2498](sub_24E5DBB04, 0, 0);
    case 2u:
      uint64_t v44 = *(void *)(v0 + 184);
      sub_24E563530(*(void *)(v0 + 168), &qword_2698F34A0);
      goto LABEL_23;
    case 3u:
      uint64_t v44 = *(void *)(v0 + 184);
LABEL_23:
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3558);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
      goto LABEL_59;
    case 4u:
      goto LABEL_81;
    default:
      goto LABEL_80;
  }
}

uint64_t sub_24E5DD864()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[44];
  uint64_t v2 = v0[43];
  uint64_t v3 = v0[41];
  uint64_t v4 = v0[36];
  sub_24E563530(v2, &qword_2698F3580);
  v1(v2, 1, 1, v4);
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(v3 + 52));
  sub_24E57707C(*v5);
  *(_OWORD *)uint64_t v5 = xmmword_24E868320;
  swift_willThrow();
  sub_24E563530(v0[43], &qword_2698F3570);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_24E5DDA14()
{
  sub_24E563530(*(void *)(v0 + 344), &qword_2698F3570);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E5DDB6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34B0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v43 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34B8);
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3448);
  MEMORY[0x270FA5388](v39);
  uint64_t v38 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3450);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34E8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F34C0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v36 = v15;
  uint64_t v37 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3590);
  uint64_t v20 = v19 - 8;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v1, v7);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3480);
  sub_24E6123FC(&qword_2698F35A0, &qword_2698F3450);
  sub_24E8646D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F35A8);
  unint64_t v24 = (*(unsigned __int8 *)(*(void *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_24E865A70;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3470);
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25 + v24, 1, 2, v26);
  uint64_t v27 = v11;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v14, v11);
  uint64_t v28 = v36;
  *(void *)&v18[*(int *)(v36 + 52)] = v25;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v27);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3458);
  sub_24E576EA0(v1 + *(int *)(v29 + 68), v38, &qword_2698F3448);
  unint64_t v30 = &v22[*(int *)(v20 + 60)];
  sub_24E6123FC(&qword_2698F35B8, &qword_2698F3448);
  sub_24E8646D8();
  sub_24E612440((uint64_t)v18, (uint64_t)v22, &qword_2698F34C0);
  sub_24E576EA0((uint64_t)v22, (uint64_t)v18, &qword_2698F34C0);
  uint64_t v31 = (uint64_t)v40;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v40, v30, v42);
  uint64_t v32 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v43, 1, 1, v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F35C0);
  swift_allocObject();
  uint64_t v33 = sub_24E5D7684((uint64_t)v18, v31, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F35C8);
  *(void *)(swift_allocObject() + 16) = v33;
  sub_24E563530((uint64_t)v22, &qword_2698F3590);
  return *(void *)(v1 + *(int *)(v29 + 72));
}

uint64_t sub_24E5DE18C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24E5DE1AC, 0, 0);
}

uint64_t sub_24E5DE1AC()
{
  uint64_t v1 = v0[2];
  sub_24E576EA0(v0[3], v1, &qword_2698F3470);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3470);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 2, v2);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_24E5DE25C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_24E5DE27C, 0, 0);
}

uint64_t sub_24E5DE27C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3470);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 2, 2, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_24E5DE31C()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24E862168();
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864268();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    sub_24E861248();
    sub_24E609BE8((unint64_t *)&unk_2698F2F90, MEMORY[0x263F3CBB0]);
    uint64_t v5 = sub_24E863B48();
    unint64_t v7 = v6;
    swift_release();
    swift_bridgeObjectRelease();
    sub_24E55B02C(v5, v7, &v8);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E553000, v1, v2, "Repository: locationStateByHandle - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v4, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();

    swift_release_n();
  }
}

uint64_t sub_24E5DE694()
{
  return sub_24E5DF664();
}

void sub_24E5DE6AC()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24E862168();
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864268();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    sub_24E861248();
    type metadata accessor for DirectionsState();
    sub_24E609BE8((unint64_t *)&unk_2698F2F90, MEMORY[0x263F3CBB0]);
    uint64_t v5 = sub_24E863B48();
    unint64_t v7 = v6;
    swift_release();
    swift_bridgeObjectRelease();
    sub_24E55B02C(v5, v7, &v8);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E553000, v1, v2, "Repository: directionsStateByHandle - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v4, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();

    swift_release_n();
  }
}

uint64_t sub_24E5DEA2C()
{
  return sub_24E5DF664();
}

uint64_t sub_24E5DEA44()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24E862168();
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864268();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v9 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2EA8);
    uint64_t v5 = sub_24E863CC8();
    unint64_t v7 = v6;
    swift_release();
    sub_24E55B02C(v5, v7, &v9);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E553000, v1, v2, "Repository: thisDeviceLastLocation - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v4, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2F80);
  sub_24E6123FC(&qword_2698F2F88, &qword_2698F2F80);
  sub_24E8621D8();
  return swift_release();
}

uint64_t sub_24E5DEDC4()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24E8621F8();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24E5DEE9C()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24E862168();
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864268();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v9 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    sub_24E861248();
    type metadata accessor for SessionFollowerState(0);
    sub_24E609BE8((unint64_t *)&unk_2698F2F90, MEMORY[0x263F3CBB0]);
    uint64_t v5 = sub_24E863B48();
    unint64_t v7 = v6;
    swift_release();
    swift_bridgeObjectRelease();
    sub_24E55B02C(v5, v7, &v9);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E553000, v1, v2, "Repository: followerStateByHandle - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v4, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2F80);
  sub_24E6123FC(&qword_2698F2F88, &qword_2698F2F80);
  sub_24E8621D8();
  return swift_release();
}

uint64_t sub_24E5DF268()
{
  return sub_24E5DF664();
}

uint64_t sub_24E5DF280()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24E862168();
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864268();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v9 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    sub_24E861248();
    type metadata accessor for SessionFollowingState(0);
    sub_24E609BE8((unint64_t *)&unk_2698F2F90, MEMORY[0x263F3CBB0]);
    uint64_t v5 = sub_24E863B48();
    unint64_t v7 = v6;
    swift_release();
    swift_bridgeObjectRelease();
    sub_24E55B02C(v5, v7, &v9);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E553000, v1, v2, "Repository: followingStateByHandle - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v4, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2F80);
  sub_24E6123FC(&qword_2698F2F88, &qword_2698F2F80);
  sub_24E8621D8();
  return swift_release();
}

uint64_t sub_24E5DF64C()
{
  return sub_24E5DF664();
}

uint64_t sub_24E5DF664()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24E8621F8();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24E5DF750@<X0>(void *a1@<X8>)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24E8621F8();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24E5DF844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t))
{
  sub_24E863FB8();
  swift_bridgeObjectRetain();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v9 = sub_24E862208();
  a8(v9);
  return swift_release();
}

void sub_24E5DF954()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24E862168();
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864268();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2ED8);
    uint64_t v5 = sub_24E863CC8();
    unint64_t v7 = v6;
    swift_release();
    sub_24E55B02C(v5, v7, &v8);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E553000, v1, v2, "Repository: activeLocationSharingDevice - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v4, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();

    swift_release_n();
  }
}

uint64_t sub_24E5DFC90()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24E8621F8();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_24E5DFD74()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24E862168();
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864268();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    if (v7) {
      uint64_t v5 = 1702195828;
    }
    else {
      uint64_t v5 = 0x65736C6166;
    }
    if (v7) {
      unint64_t v6 = 0xE400000000000000;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
    sub_24E55B02C(v5, v6, &v8);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E553000, v1, v2, "Repository: friendRequestsAllowed - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v4, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();

    swift_release_n();
  }
}

uint64_t sub_24E5E009C()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24E8621F8();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24E5E0174@<X0>(unsigned char *a1@<X8>)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24E8621F8();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24E5E025C()
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_24E862208();
  sub_24E5DFD74();
  return swift_release();
}

void sub_24E5E0344()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24E862168();
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  swift_retain_n();
  unsigned __int8 v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864268();
  if (os_log_type_enabled(v1, v2))
  {
    char v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)char v3 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    sub_24E8616F8();
    uint64_t v5 = sub_24E863B48();
    unint64_t v7 = v6;
    swift_release();
    swift_bridgeObjectRelease();
    sub_24E55B02C(v5, v7, &v8);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E553000, v1, v2, "Repository: lastMessageTimestampByKey - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v4, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();

    swift_release_n();
  }
}

uint64_t sub_24E5E0688()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24E8621F8();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

void sub_24E5E0760()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24E862168();
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864268();
  if (os_log_type_enabled(v1, v2))
  {
    char v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)char v3 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_release();
    type metadata accessor for RepositorySubscriber();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3370);
    sub_24E609BE8(&qword_2698F3380, (void (*)(uint64_t))type metadata accessor for RepositorySubscriber);
    uint64_t v5 = sub_24E863B48();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    sub_24E55B02C(v5, v7, &v8);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E553000, v1, v2, "Repository: subscriptionsBySubscriber: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v4, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();

    swift_release_n();
  }
}

void sub_24E5E0A6C()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24E862168();
  __swift_project_value_buffer(v0, (uint64_t)qword_269906D88);
  swift_retain_n();
  uint64_t v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864268();
  if (os_log_type_enabled(v1, v2))
  {
    char v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)char v3 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3370);
    sub_24E610CD0();
    uint64_t v5 = sub_24E863B48();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    sub_24E55B02C(v5, v7, &v8);
    sub_24E8643A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E553000, v1, v2, "Repository: subscriptionsByKind: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v4, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();

    swift_release_n();
  }
}

uint64_t sub_24E5E0D40(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v110 = a4;
  uint64_t v109 = a3;
  unint64_t v108 = a2;
  uint64_t v131 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2FC8);
  uint64_t v123 = *(void *)(v6 - 8);
  uint64_t v124 = v6;
  MEMORY[0x270FA5388](v6);
  size_t v122 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_24E8642D8();
  uint64_t v118 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v117 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2FD0);
  uint64_t v115 = *(void *)(v9 - 8);
  uint64_t v116 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v114 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2FD8);
  MEMORY[0x270FA5388](v128);
  uint64_t v113 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2FE0);
  MEMORY[0x270FA5388](v127);
  uint64_t v126 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2FE8);
  uint64_t v120 = *(void *)(v13 - 8);
  uint64_t v121 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v112 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v111 = (char *)&v91 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v119 = (char *)&v91 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v130 = (char *)&v91 - v20;
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2FF0);
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  unint64_t v105 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2FF8);
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  unint64_t v102 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3000);
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  unint64_t v99 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3008);
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v96 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3010);
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  char v93 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3018);
  uint64_t v26 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v28 = (char *)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3020);
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v91 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3028);
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)&v91 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__locationStateByHandle;
  v133[0] = sub_24E7AE2E4(MEMORY[0x263F8EE78]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2E88);
  sub_24E8621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v37, v36, v33);
  uint64_t v38 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__directionsStateByHandle;
  uint64_t v39 = MEMORY[0x263F8EE78];
  v133[0] = sub_24E7AE4F4(MEMORY[0x263F8EE78]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2E98);
  sub_24E8621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v38, v32, v29);
  uint64_t v40 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__thisDeviceLastLocation;
  v133[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2EA8);
  sub_24E8621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v40, v28, v92);
  uint64_t v41 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__followerStateByHandle;
  v133[0] = sub_24E7AE088(v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2EB8);
  uint64_t v42 = v93;
  sub_24E8621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v41, v42, v95);
  uint64_t v43 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__followingStateByHandle;
  v133[0] = sub_24E7AE04C(v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2EC8);
  uint64_t v44 = v96;
  sub_24E8621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v97 + 32))(v43, v44, v98);
  uint64_t v45 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__activeLocationSharingDevice;
  v133[0] = 0;
  v133[1] = 0;
  __int16 v134 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2ED8);
  unint64_t v46 = v99;
  sub_24E8621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v100 + 32))(v45, v46, v101);
  uint64_t v47 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__friendRequestsAllowed;
  LOBYTE(v133[0]) = 1;
  uint64_t v48 = v102;
  sub_24E8621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v103 + 32))(v47, v48, v104);
  uint64_t v49 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__lastMessageTimestampByKey;
  v133[0] = sub_24E7AE530(v39);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F2EF0);
  uint64_t v50 = v105;
  sub_24E8621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v106 + 32))(v49, v50, v107);
  *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_locationManager) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_isValidatingMessage) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_thisDeviceCurrentLocationTask) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_preferenceChangesTask) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipStreamTask) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_locationsStreamTask) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipRefresherTask) = 0;
  uint64_t v51 = MEMORY[0x263F8EE88];
  *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_handlesToGetLocations) = MEMORY[0x263F8EE88];
  *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_handlesToGetFriendshipStatus) = v51;
  uint64_t v52 = OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsBySubscriber;
  *(void *)(v5 + v52) = sub_24E7AE730(v39);
  uint64_t v53 = OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsByKind;
  *(void *)(v5 + v53) = sub_24E7B8120(v39);
  *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_cancellables) = v39;
  *(void *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_effectiveBundleAssertion) = 0;
  uint64_t v54 = &unk_2698F2000;
  uint64_t v55 = OBJC_IVAR____TtC12FindMyUICore10Repository_didChangeThisDeviceLocation;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2F80);
  swift_allocObject();
  *(void *)(v5 + v55) = sub_24E8621A8();
  uint64_t v56 = OBJC_IVAR____TtC12FindMyUICore10Repository_didChangeFollowersLocations;
  swift_allocObject();
  *(void *)(v5 + v56) = sub_24E8621A8();
  uint64_t v57 = OBJC_IVAR____TtC12FindMyUICore10Repository_didChangeFollowingFollowerState;
  swift_allocObject();
  *(void *)(v5 + v57) = sub_24E8621A8();
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v58 = sub_24E862168();
  __swift_project_value_buffer(v58, (uint64_t)qword_269906D88);
  uint64_t v59 = sub_24E862148();
  os_log_type_t v60 = sub_24E864268();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    v133[0] = v62;
    *(_DWORD *)uint64_t v61 = 136315138;
    sub_24E863FB8();
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v132 = sub_24E55B02C(0xD00000000000001DLL, 0x800000024E8732E0, v133);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v59, v60, "Repository: %s", v61, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v62, -1, -1);
    MEMORY[0x2533435F0](v61, -1, -1);

    uint64_t v54 = (void *)&unk_2698F2000;
  }
  else
  {
  }
  BOOL v63 = (void *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_session);
  unint64_t v64 = v108;
  *BOOL v63 = v131;
  v63[1] = v64;
  uint64_t v65 = (uint64_t *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_sourceBundleId);
  uint64_t v125 = v5;
  uint64_t v66 = v110;
  uint64_t *v65 = v109;
  v65[1] = v66;
  uint64_t v67 = self;
  swift_unknownObjectRetain();
  id v68 = objc_msgSend(v67, sel_standardUserDefaults);
  sub_24E5E1FF8(v68);

  uint64_t v69 = *(void *)(v5 + v54[458]);
  v133[0] = v69;
  uint64_t v110 = sub_24E6123FC(&qword_2698F3030, &qword_2698F2F80);
  sub_24E862228();
  v133[0] = v69;
  uint64_t v70 = v114;
  sub_24E862248();
  uint64_t v71 = v117;
  sub_24E8642C8();
  uint64_t v107 = sub_24E60F6EC(0, (unint64_t *)&qword_2698F3038);
  uint64_t v72 = (void *)sub_24E8642E8();
  v133[0] = (uint64_t)v72;
  uint64_t v109 = sub_24E6123FC(&qword_2698F3040, &qword_2698F2FD0);
  unint64_t v108 = sub_24E60F2D8();
  uint64_t v73 = v116;
  sub_24E862238();

  uint64_t v118 = *(void *)(v118 + 8);
  ((void (*)(char *, uint64_t))v118)(v71, v129);
  uint64_t v115 = *(void *)(v115 + 8);
  ((void (*)(char *, uint64_t))v115)(v70, v73);
  uint64_t v106 = sub_24E6123FC(&qword_2698F3050, &qword_2698F2FE0);
  unint64_t v105 = (char *)sub_24E6123FC(&qword_2698F3058, &qword_2698F2FD8);
  sub_24E862178();
  v133[0] = *(void *)(v125 + OBJC_IVAR____TtC12FindMyUICore10Repository_didChangeFollowersLocations);
  uint64_t v74 = v133[0];
  sub_24E862228();
  v133[0] = v74;
  sub_24E862248();
  sub_24E8642B8();
  uint64_t v75 = (void *)sub_24E8642E8();
  v133[0] = (uint64_t)v75;
  sub_24E862238();

  ((void (*)(char *, uint64_t))v118)(v71, v129);
  ((void (*)(char *, uint64_t))v115)(v70, v73);
  uint64_t v76 = v119;
  sub_24E862178();
  uint64_t v78 = v120;
  uint64_t v77 = v121;
  uint64_t v79 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
  uint64_t v80 = v130;
  v79(v111, v130, v121);
  v79(v112, v76, v77);
  sub_24E6123FC(&qword_2698F3060, &qword_2698F2FE8);
  uint64_t v81 = v122;
  sub_24E862188();
  uint64_t v82 = swift_allocObject();
  uint64_t v83 = v125;
  swift_weakInit();
  uint64_t v84 = swift_allocObject();
  *(void *)(v84 + 16) = sub_24E60F378;
  *(void *)(v84 + 24) = v82;
  sub_24E6123FC(&qword_2698F3068, &qword_2698F2FC8);
  uint64_t v85 = v124;
  uint64_t v86 = sub_24E862258();
  swift_release();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v81, v85);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1650);
  uint64_t v87 = swift_allocObject();
  *(_OWORD *)(v87 + 16) = xmmword_24E867070;
  *(void *)(v87 + 32) = v86;
  v133[0] = v87;
  sub_24E863E58();
  uint64_t v88 = v133[0];
  swift_unknownObjectRelease();
  uint64_t v89 = *(void (**)(char *, uint64_t))(v78 + 8);
  v89(v76, v77);
  v89(v80, v77);
  *(void *)(v83 + OBJC_IVAR____TtC12FindMyUICore10Repository_cancellables) = v88;
  swift_bridgeObjectRelease();
  return v83;
}

uint64_t sub_24E5E1FF8(void *a1)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  os_log_type_t v2 = (void *)sub_24E863C68();
  id v3 = objc_msgSend(a1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_24E864418();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_24E612440((uint64_t)v6, (uint64_t)v7, &qword_2698F30C0);
  if (v7[3])
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F2EF0);
    if (swift_dynamicCast())
    {
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      v7[0] = v5;
      swift_retain();
      sub_24E862208();
      sub_24E5E0344();
      swift_release();
    }
  }
  else
  {
    sub_24E563530((uint64_t)v7, &qword_2698F30C0);
  }
  return swift_release();
}

uint64_t sub_24E5E220C()
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_24E5E22D8();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24E5E22D8()
{
  uint64_t v1 = v0;
  uint64_t v85 = *v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v96 = (uint64_t)v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_24E8616F8();
  uint64_t v93 = *(void *)(v95 - 8);
  int64_t v4 = *(void *)(v93 + 64);
  uint64_t v5 = MEMORY[0x270FA5388](v95);
  uint64_t v92 = (char *)v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v77 - v6;
  uint64_t v8 = sub_24E861248();
  unint64_t v99 = *(void (***)(char *, uint64_t))(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s16SubscriptionDataO10DirectionsVMa(0);
  uint64_t v83 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v91 = (uint64_t)v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v108 = (uint64_t)v77 - v14;
  uint64_t v107 = _s16SubscriptionDataOMa(0);
  uint64_t v15 = *(void *)(v107 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v107);
  unint64_t v102 = (char *)v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v106 = (uint64_t)v77 - v18;
  uint64_t v19 = sub_24E863FB8();
  v77[0] = sub_24E863FA8();
  uint64_t v103 = v19;
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v20 = (char *)v0 + OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsByKind;
  swift_beginAccess();
  uint64_t v21 = *(void *)v20;
  if (*(void *)(*(void *)v20 + 16) && (uint64_t v22 = sub_24E7C9D1C(3), (v23 & 1) != 0))
  {
    int64_t v24 = *(void *)(*(void *)(v21 + 56) + 8 * v22);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    int64_t v24 = MEMORY[0x263F8EE88];
  }
  if (qword_2698F0E60 != -1) {
LABEL_57:
  }
    swift_once();
  uint64_t v25 = sub_24E862168();
  __swift_project_value_buffer(v25, (uint64_t)qword_269906D88);
  swift_bridgeObjectRetain_n();
  uint64_t v26 = sub_24E862148();
  int v27 = sub_24E864268();
  BOOL v28 = os_log_type_enabled(v26, (os_log_type_t)v27);
  uint64_t v86 = v8;
  uint64_t v101 = v15;
  if (v28)
  {
    LODWORD(v100) = v27;
    os_log_t v97 = v26;
    uint64_t v104 = v1;
    int64_t v105 = v4;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v114 = v30;
    *(_DWORD *)uint64_t v29 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v109 = sub_24E55B02C(0xD000000000000012, 0x800000024E873300, &v114);
    sub_24E8643A8();
    *(_WORD *)(v29 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_bridgeObjectRetain();
    swift_release();
    sub_24E609BE8(&qword_2698F3090, (void (*)(uint64_t))_s16SubscriptionDataOMa);
    uint64_t v31 = sub_24E864118();
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    uint64_t v109 = sub_24E55B02C(v31, v33, &v114);
    sub_24E8643A8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v34 = v97;
    _os_log_impl(&dword_24E553000, v97, (os_log_type_t)v100, "Repository: %s - %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v30, -1, -1);
    MEMORY[0x2533435F0](v29, -1, -1);

    uint64_t v1 = v104;
    int64_t v4 = v105;
    uint64_t v8 = v86;
    uint64_t v15 = v101;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  int64_t v35 = 0;
  uint64_t v36 = *(void *)(v24 + 56);
  uint64_t v104 = (void *)(v24 + 56);
  uint64_t v37 = 1 << *(unsigned char *)(v24 + 32);
  uint64_t v38 = -1;
  if (v37 < 64) {
    uint64_t v38 = ~(-1 << v37);
  }
  unint64_t v39 = v38 & v36;
  int64_t v105 = (unint64_t)(v37 + 63) >> 6;
  uint64_t v40 = v99++;
  uint64_t v100 = (void (**)(char *, uint64_t, uint64_t))(v40 + 2);
  uint64_t v82 = v93 + 16;
  int64_t v81 = v4 + 7;
  uint64_t v80 = v98 + 7;
  uint64_t v79 = v93 + 32;
  uint64_t v78 = (void (**)(char *, uint64_t))(v93 + 8);
  v77[1] = MEMORY[0x263F8EE60] + 8;
  uint64_t v41 = (uint64_t)v102;
  uint64_t v84 = v7;
  uint64_t v90 = v10;
  while (v39)
  {
    unint64_t v42 = __clz(__rbit64(v39));
    v39 &= v39 - 1;
    unint64_t v43 = v42 | (v35 << 6);
LABEL_37:
    int64_t v4 = v24;
    uint64_t v47 = *(void *)(v24 + 48) + *(void *)(v15 + 72) * v43;
    uint64_t v48 = v106;
    sub_24E6125B0(v47, v106, _s16SubscriptionDataOMa);
    sub_24E612618(v48, v41, _s16SubscriptionDataOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v49 = v41;
      uint64_t v50 = v108;
      sub_24E612618(v49, v108, _s16SubscriptionDataO10DirectionsVMa);
      (*v100)(v10, v50, v8);
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_24E8621F8();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v51 = v114;
      if (*(void *)(v114 + 16) && (unint64_t v52 = sub_24E7C9D20((uint64_t)v10), (v53 & 1) != 0))
      {
        uint64_t v54 = *(void *)(v51 + 56) + 32 * v52;
        uint64_t v55 = *(void **)(v54 + 16);
        uint64_t v56 = v10;
        uint64_t v57 = *(void *)(v54 + 8);
        int v58 = *(unsigned __int8 *)(v54 + 24);
        uint64_t v98 = *(void *)v54;
        LODWORD(v97) = v58;
        sub_24E609DD0(v98, v57, v55);
        swift_bridgeObjectRelease();
        (*v99)(v56, v8);
        if ((unint64_t)v55 < 2)
        {
          sub_24E609D18(v98, v57, v55);
          uint64_t v10 = v90;
          goto LABEL_45;
        }
        sub_24E8616E8();
        uint64_t v88 = sub_24E863FE8();
        uint64_t v89 = *(void *)(v88 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v96, 1, 1, v88);
        uint64_t v59 = v93;
        (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v92, v7, v95);
        sub_24E6125B0(v108, v91, _s16SubscriptionDataO10DirectionsVMa);
        swift_bridgeObjectRetain();
        id v94 = v55;
        swift_retain();
        uint64_t v87 = sub_24E863FA8();
        unint64_t v60 = (*(unsigned __int8 *)(v59 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
        uint64_t v61 = v1;
        unint64_t v62 = (v81 + v60) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v63 = (*(unsigned __int8 *)(v83 + 80) + v62 + 8) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
        unint64_t v64 = (v80 + v63) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v65 = swift_allocObject();
        *(void *)(v65 + 16) = v87;
        uint64_t v66 = v98;
        *(void *)(v65 + 24) = MEMORY[0x263F8F500];
        *(void *)(v65 + 32) = v66;
        uint64_t v98 = v57;
        id v67 = v94;
        *(void *)(v65 + 40) = v57;
        *(void *)(v65 + 48) = v67;
        *(unsigned char *)(v65 + 56) = (_BYTE)v97;
        unint64_t v68 = v65 + v60;
        uint64_t v69 = v88;
        (*(void (**)(unint64_t, char *, uint64_t))(v93 + 32))(v68, v92, v95);
        *(void *)(v65 + v62) = v61;
        uint64_t v1 = v61;
        sub_24E612618(v91, v65 + v63, _s16SubscriptionDataO10DirectionsVMa);
        *(void *)(v65 + v64) = v85;
        uint64_t v70 = v89;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v96, 1, v69) == 1)
        {
          sub_24E563530(v96, (uint64_t *)&unk_2698F7FE0);
          if (*(void *)(v65 + 16)) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v74 = v96;
          sub_24E863FD8();
          (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v74, v69);
          if (*(void *)(v65 + 16))
          {
LABEL_48:
            swift_getObjectType();
            swift_unknownObjectRetain();
            uint64_t v71 = sub_24E863F18();
            uint64_t v73 = v72;
            swift_unknownObjectRelease();
            goto LABEL_51;
          }
        }
        uint64_t v71 = 0;
        uint64_t v73 = 0;
LABEL_51:
        uint64_t v10 = v90;
        uint64_t v15 = v101;
        uint64_t v75 = swift_allocObject();
        *(void *)(v75 + 16) = &unk_2698F3078;
        *(void *)(v75 + 24) = v65;
        if (v73 | v71)
        {
          uint64_t v110 = 0;
          uint64_t v111 = 0;
          uint64_t v112 = v71;
          uint64_t v113 = v73;
        }
        uint64_t v8 = v86;
        int64_t v24 = v4;
        swift_task_create();

        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v7 = v84;
        (*v78)(v84, v95);
        sub_24E612680(v108, _s16SubscriptionDataO10DirectionsVMa);
        uint64_t v41 = (uint64_t)v102;
      }
      else
      {
        swift_bridgeObjectRelease();
        (*v99)(v10, v8);
LABEL_45:
        sub_24E612680(v108, _s16SubscriptionDataO10DirectionsVMa);
        uint64_t v15 = v101;
        uint64_t v41 = (uint64_t)v102;
        int64_t v24 = v4;
      }
    }
    else
    {
      sub_24E612680(v41, _s16SubscriptionDataOMa);
      int64_t v24 = v4;
    }
  }
  int64_t v44 = v35 + 1;
  if (__OFADD__(v35, 1))
  {
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v44 >= v105) {
    goto LABEL_54;
  }
  unint64_t v45 = v104[v44];
  ++v35;
  if (v45) {
    goto LABEL_36;
  }
  int64_t v35 = v44 + 1;
  if (v44 + 1 >= v105) {
    goto LABEL_54;
  }
  unint64_t v45 = v104[v35];
  if (v45) {
    goto LABEL_36;
  }
  int64_t v35 = v44 + 2;
  if (v44 + 2 >= v105) {
    goto LABEL_54;
  }
  unint64_t v45 = v104[v35];
  if (v45)
  {
LABEL_36:
    unint64_t v39 = (v45 - 1) & v45;
    unint64_t v43 = __clz(__rbit64(v45)) + (v35 << 6);
    goto LABEL_37;
  }
  int64_t v46 = v44 + 3;
  if (v46 < v105)
  {
    unint64_t v45 = v104[v46];
    if (!v45)
    {
      while (1)
      {
        int64_t v35 = v46 + 1;
        if (__OFADD__(v46, 1)) {
          goto LABEL_56;
        }
        if (v35 >= v105) {
          goto LABEL_54;
        }
        unint64_t v45 = v104[v35];
        ++v46;
        if (v45) {
          goto LABEL_36;
        }
      }
    }
    int64_t v35 = v46;
    goto LABEL_36;
  }
LABEL_54:
  swift_release();
  return swift_release();
}

uint64_t sub_24E5E31C8()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC12FindMyUICore10Repository_locationManager);
  if (v1)
  {
    id v2 = v1;
    char v3 = sub_24E64781C((uint64_t)objc_msgSend(v2, sel_authorizationStatus), (uint64_t)&unk_27005A5B8);
    swift_release();

    return v3 & 1;
  }
  else
  {
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    return 0;
  }
}

uint64_t sub_24E5E32FC()
{
  uint64_t v1 = v0;
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E862168();
  __swift_project_value_buffer(v2, (uint64_t)qword_269906D88);
  char v3 = sub_24E862148();
  os_log_type_t v4 = sub_24E864268();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v24 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_24E55B02C(0x74696E696564, 0xE600000000000000, &v24);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v3, v4, "Repository: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v6, -1, -1);
    MEMORY[0x2533435F0](v5, -1, -1);
  }

  uint64_t v7 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__locationStateByHandle;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3028);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__directionsStateByHandle;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3020);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__thisDeviceLastLocation;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3018);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__followerStateByHandle;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3010);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__followingStateByHandle;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3008);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__activeLocationSharingDevice;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3000);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__friendRequestsAllowed;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2FF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__lastMessageTimestampByKey;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2FF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24E5E37CC()
{
  sub_24E5E32FC();

  return swift_deallocClassInstance();
}

uint64_t sub_24E5E3824()
{
  return type metadata accessor for Repository();
}

uint64_t type metadata accessor for Repository()
{
  uint64_t result = qword_2698F2E70;
  if (!qword_2698F2E70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24E5E3878()
{
  sub_24E5E3BCC(319, &qword_2698F2E80, &qword_2698F2E88);
  if (v0 <= 0x3F)
  {
    sub_24E5E3BCC(319, &qword_2698F2E90, &qword_2698F2E98);
    if (v1 <= 0x3F)
    {
      sub_24E5E3BCC(319, &qword_2698F2EA0, &qword_2698F2EA8);
      if (v2 <= 0x3F)
      {
        sub_24E5E3BCC(319, &qword_2698F2EB0, &qword_2698F2EB8);
        if (v3 <= 0x3F)
        {
          sub_24E5E3BCC(319, &qword_2698F2EC0, &qword_2698F2EC8);
          if (v4 <= 0x3F)
          {
            sub_24E5E3BCC(319, &qword_2698F2ED0, &qword_2698F2ED8);
            if (v5 <= 0x3F)
            {
              sub_24E5E3B74();
              if (v6 <= 0x3F)
              {
                sub_24E5E3BCC(319, &qword_2698F2EE8, (uint64_t *)&unk_2698F2EF0);
                if (v7 <= 0x3F) {
                  swift_updateClassMetadata2();
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_24E5E3B74()
{
  if (!qword_2698F2EE0)
  {
    unint64_t v0 = sub_24E862218();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2698F2EE0);
    }
  }
}

void sub_24E5E3BCC(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_24E862218();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24E5E3C1C(uint64_t a1)
{
  *(unsigned char *)(a1 + OBJC_IVAR____TtC12FindMyUICore10Repository_isValidatingMessage) = 0;
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E862168();
  __swift_project_value_buffer(v1, (uint64_t)qword_269906D88);
  oslog = sub_24E862148();
  os_log_type_t v2 = sub_24E864238();
  if (os_log_type_enabled(oslog, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v6 = v4;
    *(_DWORD *)unint64_t v3 = 136315138;
    sub_24E863FB8();
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24E55B02C(0xD00000000000002BLL, 0x800000024E873470, &v6);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, oslog, v2, "Repository: %s - isValidatingMessage: false", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v4, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_24E5E3E24(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  v2[11] = _s16SubscriptionDataOMa(0);
  v2[12] = swift_task_alloc();
  v2[13] = sub_24E863FB8();
  v2[14] = sub_24E863FA8();
  uint64_t v4 = sub_24E863F18();
  v2[15] = v4;
  v2[16] = v3;
  return MEMORY[0x270FA2498](sub_24E5E3EF0, v4, v3);
}

uint64_t sub_24E5E3EF0()
{
  uint64_t v40 = v0;
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + 80) + OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsByKind);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16) && (uint64_t v3 = sub_24E7C9D1C(4), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 8 * v3);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v5 = MEMORY[0x263F8EE88];
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_24E862168();
  *(void *)(v0 + 136) = __swift_project_value_buffer(v6, (uint64_t)qword_269906D88);
  swift_bridgeObjectRetain_n();
  unint64_t v7 = sub_24E862148();
  os_log_type_t v8 = sub_24E864268();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v39 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    *(void *)(v0 + 56) = sub_24E55B02C(0xD000000000000016, 0x800000024E873600, &v39);
    sub_24E8643A8();
    *(_WORD *)(v9 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_bridgeObjectRetain();
    swift_release();
    sub_24E609BE8(&qword_2698F3090, (void (*)(uint64_t))_s16SubscriptionDataOMa);
    uint64_t v11 = sub_24E864118();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 64) = sub_24E55B02C(v11, v13, &v39);
    sub_24E8643A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E553000, v7, v8, "Repository: %s - %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v10, -1, -1);
    MEMORY[0x2533435F0](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v14 = *(void *)(v0 + 96);
  uint64_t v15 = *(void *)(v0 + 72);
  uint64_t v16 = sub_24E861248();
  *(void *)(v0 + 144) = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)(v0 + 152) = v17;
  uint64_t v37 = v17;
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  *(void *)(v0 + 160) = v18;
  *(void *)(v0 + 168) = (v17 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v18(v14, v15, v16);
  uint64_t v19 = _s16SubscriptionDataO9LocationsVMa(0);
  *(unsigned char *)(v14 + *(int *)(v19 + 20)) = 1;
  swift_storeEnumTagMultiPayload();
  char v38 = sub_24E7E211C(v14, v5);
  sub_24E612680(v14, _s16SubscriptionDataOMa);
  v18(v14, v15, v16);
  *(unsigned char *)(v14 + *(int *)(v19 + 20)) = 0;
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v0 + 232) = sub_24E7E211C(v14, v5) & 1;
  swift_bridgeObjectRelease();
  sub_24E612680(v14, _s16SubscriptionDataOMa);
  if (v38)
  {
    uint64_t v20 = *(void *)(v0 + 72);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F10D8);
    int v21 = *(_DWORD *)(v37 + 80);
    *(_DWORD *)(v0 + 224) = v21;
    unint64_t v22 = (v21 + 32) & ~(unint64_t)v21;
    uint64_t v23 = swift_allocObject();
    *(void *)(v0 + 176) = v23;
    *(_OWORD *)(v23 + 16) = xmmword_24E865A70;
    v18(v23 + v22, v20, v16);
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_24E5E45E8;
    uint64_t v25 = v23;
    char v26 = 1;
LABEL_20:
    return sub_24E628198(v25, v26);
  }
  if (*(unsigned char *)(v0 + 232) == 1)
  {
    int v27 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 160);
    uint64_t v28 = *(void *)(v0 + 144);
    uint64_t v29 = *(void *)(v0 + 152);
    uint64_t v30 = *(void *)(v0 + 72);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F10D8);
    int v31 = *(_DWORD *)(v29 + 80);
    *(_DWORD *)(v0 + 228) = v31;
    unint64_t v32 = (v31 + 32) & ~(unint64_t)v31;
    uint64_t v33 = swift_allocObject();
    *(void *)(v0 + 200) = v33;
    *(_OWORD *)(v33 + 16) = xmmword_24E865A70;
    v27(v33 + v32, v30, v28);
    os_log_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v34;
    *os_log_t v34 = v0;
    v34[1] = sub_24E5E4BEC;
    uint64_t v25 = v33;
    char v26 = 0;
    goto LABEL_20;
  }
  swift_release();
  sub_24E5E50E8();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_24E5E45E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    uint64_t v5 = sub_24E5E48BC;
  }
  else
  {
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    uint64_t v5 = sub_24E5E4744;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_24E5E4744()
{
  if (*(unsigned char *)(v0 + 232) == 1)
  {
    uint64_t v1 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 160);
    uint64_t v2 = *(void *)(v0 + 144);
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 72);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F10D8);
    int v5 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 228) = v5;
    unint64_t v6 = (v5 + 32) & ~(unint64_t)v5;
    uint64_t v7 = swift_allocObject();
    *(void *)(v0 + 200) = v7;
    *(_OWORD *)(v7 + 16) = xmmword_24E865A70;
    v1(v7 + v6, v4, v2);
    os_log_type_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v8;
    *os_log_type_t v8 = v0;
    v8[1] = sub_24E5E4BEC;
    return sub_24E628198(v7, 0);
  }
  else
  {
    swift_release();
    sub_24E5E50E8();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_24E5E48BC()
{
  uint64_t v14 = v0;
  uint64_t v1 = (void *)v0[24];
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24E862148();
  os_log_type_t v5 = sub_24E864248();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[5] = sub_24E55B02C(0xD000000000000016, 0x800000024E873600, &v13);
    sub_24E8643A8();
    *(_WORD *)(v6 + 12) = 2112;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    id v9 = v1;
    swift_release();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[6] = v10;
    sub_24E8643A8();
    *uint64_t v7 = v10;

    _os_log_impl(&dword_24E553000, v4, v5, "Repository: %s - Error: %@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    MEMORY[0x2533435F0](v6, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_24E5E4BEC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    os_log_type_t v5 = sub_24E5E4DB8;
  }
  else
  {
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    os_log_type_t v5 = sub_24E5E4D48;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_24E5E4D48()
{
  swift_release();
  sub_24E5E50E8();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E5E4DB8()
{
  uint64_t v14 = v0;
  uint64_t v1 = (void *)v0[27];
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24E862148();
  os_log_type_t v5 = sub_24E864248();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[5] = sub_24E55B02C(0xD000000000000016, 0x800000024E873600, &v13);
    sub_24E8643A8();
    *(_WORD *)(v6 + 12) = 2112;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    id v9 = v1;
    swift_release();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[6] = v10;
    sub_24E8643A8();
    *uint64_t v7 = v10;

    _os_log_impl(&dword_24E553000, v4, v5, "Repository: %s - Error: %@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    MEMORY[0x2533435F0](v6, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_24E5E50E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24E861248();
  uint64_t v66 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24E863FB8();
  uint64_t v9 = sub_24E863FA8();
  uint64_t v67 = v8;
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v10 = OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipRefresherTask;
  if (*(void *)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipRefresherTask))
  {
    swift_retain();
    sub_24E864068();
    swift_release();
  }
  *(void *)(v1 + v10) = 0;
  swift_release();
  uint64_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsByKind);
  swift_beginAccess();
  uint64_t v12 = *v11;
  uint64_t v13 = *(void *)(*v11 + 16);
  int v58 = v4;
  uint64_t v59 = v1;
  uint64_t v57 = v9;
  if (v13 && (uint64_t v14 = sub_24E7C9D1C(2), (v15 & 1) != 0))
  {
    uint64_t v16 = *(void *)(*(void *)(v12 + 56) + 8 * v14);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v16 = MEMORY[0x263F8EE88];
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_24E862168();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_269906D88);
  swift_bridgeObjectRetain_n();
  uint64_t v69 = v18;
  uint64_t v19 = sub_24E862148();
  os_log_type_t v20 = sub_24E864268();
  BOOL v21 = os_log_type_enabled(v19, v20);
  unint64_t v22 = &loc_24E865000;
  unint64_t v64 = v7;
  uint64_t v65 = v5;
  if (v21)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v71[0] = v24;
    *(_DWORD *)uint64_t v23 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v70 = sub_24E55B02C(0xD000000000000021, 0x800000024E873550, v71);
    sub_24E8643A8();
    *(_WORD *)(v23 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_bridgeObjectRetain();
    swift_release();
    _s16SubscriptionDataOMa(0);
    sub_24E609BE8(&qword_2698F3090, (void (*)(uint64_t))_s16SubscriptionDataOMa);
    uint64_t v25 = sub_24E864118();
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t v70 = sub_24E55B02C(v25, v27, v71);
    sub_24E8643A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E553000, v19, v20, "Repository: %s - %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v24, -1, -1);
    MEMORY[0x2533435F0](v23, -1, -1);

    uint64_t v7 = v64;
    uint64_t v5 = v65;
    unint64_t v22 = (void *)&loc_24E865000;
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v28 = sub_24E5CAA10(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v29 = sub_24E862148();
  os_log_type_t v30 = sub_24E864268();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    v71[0] = v32;
    *(_DWORD *)uint64_t v31 = v22[332];
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v70 = sub_24E55B02C(0xD000000000000021, 0x800000024E873550, v71);
    sub_24E8643A8();
    *(_WORD *)(v31 + 12) = 2048;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v33 = *(void *)(v28 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v70 = v33;
    sub_24E8643A8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E553000, v29, v30, "Repository: %s - handlesToGetFriendshipStatus- count: %ld, handles:", (uint8_t *)v31, 0x16u);
    uint64_t v34 = MEMORY[0x263F8EE58];
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v32, -1, -1);
    MEMORY[0x2533435F0](v31, -1, -1);

    uint64_t v7 = v64;
    uint64_t v5 = v65;
  }
  else
  {
    uint64_t v34 = MEMORY[0x263F8EE58];
    swift_bridgeObjectRelease_n();
  }
  uint64_t v35 = *(void *)(v28 + 16);
  if (v35)
  {
    uint64_t v37 = v66 + 16;
    uint64_t v36 = *(void (**)(void, void, void))(v66 + 16);
    unint64_t v38 = v28 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
    unint64_t v68 = (void (**)(char *, uint64_t))(v66 + 8);
    uint64_t v39 = *(void *)(v66 + 72);
    uint64_t v56 = v28;
    swift_bridgeObjectRetain();
    *(void *)&long long v40 = 141558275;
    long long v61 = v40;
    uint64_t v60 = v34 + 8;
    uint64_t v66 = v37;
    uint64_t v62 = v39;
    unint64_t v63 = v36;
    do
    {
      v36(v7, v38, v5);
      uint64_t v41 = sub_24E862148();
      os_log_type_t v42 = sub_24E864268();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        v71[0] = v44;
        *(_DWORD *)uint64_t v43 = v61;
        *(void *)(v43 + 4) = 1752392040;
        *(_WORD *)(v43 + 12) = 2081;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        unint64_t v45 = v64;
        uint64_t v46 = sub_24E8611D8();
        unint64_t v48 = v47;
        uint64_t v7 = v45;
        swift_release();
        *(void *)(v43 + 14) = sub_24E55B02C(v46, v48, v71);
        swift_bridgeObjectRelease();
        uint64_t v5 = v65;
        (*v68)(v45, v65);
        _os_log_impl(&dword_24E553000, v41, v42, "Handle: %{private,mask.hash}s", (uint8_t *)v43, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533435F0](v44, -1, -1);
        MEMORY[0x2533435F0](v43, -1, -1);

        uint64_t v39 = v62;
        uint64_t v36 = v63;
      }
      else
      {

        (*v68)(v7, v5);
      }
      v38 += v39;
      --v35;
    }
    while (v35);
    uint64_t v28 = v56;
    swift_bridgeObjectRelease();
  }
  uint64_t v49 = sub_24E863FE8();
  uint64_t v50 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v58, 1, 1, v49);
  uint64_t v51 = v59;
  swift_retain();
  uint64_t v52 = sub_24E863FA8();
  char v53 = (void *)swift_allocObject();
  v53[2] = v52;
  v53[3] = MEMORY[0x263F8F500];
  v53[4] = v28;
  v53[5] = v51;
  sub_24E5C54D0(v50, (uint64_t)&unk_2698F32F0, (uint64_t)v53);
  swift_release();
  return swift_release();
}

uint64_t sub_24E5E5B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[204] = a5;
  v5[203] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  v5[205] = swift_task_alloc();
  uint64_t v6 = sub_24E8616F8();
  v5[206] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[207] = v7;
  v5[208] = *(void *)(v7 + 64);
  v5[209] = swift_task_alloc();
  v5[210] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2FA0);
  v5[211] = swift_task_alloc();
  v5[212] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SessionFollowingState(0);
  v5[213] = v8;
  v5[214] = *(void *)(v8 - 8);
  v5[215] = swift_task_alloc();
  v5[216] = swift_task_alloc();
  v5[217] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F32F8);
  v5[218] = swift_task_alloc();
  v5[219] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F2F60);
  v5[220] = swift_task_alloc();
  v5[221] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SessionFollowerState(0);
  v5[222] = v9;
  v5[223] = *(void *)(v9 - 8);
  v5[224] = swift_task_alloc();
  v5[225] = swift_task_alloc();
  v5[226] = swift_task_alloc();
  uint64_t v10 = sub_24E861248();
  v5[227] = v10;
  v5[228] = *(void *)(v10 - 8);
  v5[229] = swift_task_alloc();
  v5[230] = swift_task_alloc();
  v5[231] = swift_task_alloc();
  v5[232] = swift_task_alloc();
  v5[233] = swift_task_alloc();
  v5[234] = swift_task_alloc();
  v5[235] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3300);
  v5[236] = swift_task_alloc();
  v5[237] = swift_task_alloc();
  v5[238] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
  v5[239] = swift_task_alloc();
  v5[240] = swift_task_alloc();
  v5[241] = swift_task_alloc();
  v5[242] = swift_task_alloc();
  v5[243] = swift_task_alloc();
  v5[244] = swift_task_alloc();
  v5[245] = swift_task_alloc();
  v5[246] = sub_24E863FB8();
  v5[247] = sub_24E863FA8();
  uint64_t v12 = sub_24E863F18();
  v5[248] = v12;
  v5[249] = v11;
  return MEMORY[0x270FA2498](sub_24E5E5F98, v12, v11);
}

uint64_t sub_24E5E5F98()
{
  uint64_t v10 = v0[245];
  uint64_t v1 = v0[207];
  uint64_t v11 = v0[206];
  uint64_t v2 = v0[204];
  uint64_t v3 = v0[203];
  BOOL v4 = *(void *)(v3 + 16) > 1uLL;
  uint64_t v5 = swift_allocObject();
  v0[250] = v5;
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v3;
  *(unsigned char *)(v5 + 32) = v4;
  uint64_t v6 = swift_task_alloc();
  v0[251] = v6;
  *(void *)(v6 + 16) = &unk_2698F3310;
  *(void *)(v6 + 24) = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F2EB8);
  swift_asyncLet_begin();
  uint64_t v7 = swift_allocObject();
  v0[252] = v7;
  *(void *)(v7 + 16) = v2;
  *(void *)(v7 + 24) = v3;
  *(unsigned char *)(v7 + 32) = v4;
  uint64_t v8 = swift_task_alloc();
  v0[253] = v8;
  *(void *)(v8 + 16) = &unk_2698F3330;
  *(void *)(v8 + 24) = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698F2EC8);
  swift_asyncLet_begin();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56))(v10, 1, 1, v11);
  return MEMORY[0x270FA23E8](v0 + 82, v0 + 187, sub_24E5E6194, v0 + 176);
}

uint64_t sub_24E5E6194()
{
  v1[254] = v0;
  if (v0) {
    uint64_t v2 = sub_24E5E83BC;
  }
  else {
    uint64_t v2 = sub_24E5E61CC;
  }
  return MEMORY[0x270FA2498](v2, v1[248], v1[249]);
}

uint64_t sub_24E5E61CC()
{
  uint64_t v101 = v0;
  uint64_t v1 = v0[228];
  uint64_t v2 = v0[223];
  uint64_t v3 = v0[187];
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v85 = v3 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & v4;
  unint64_t v99 = (void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  uint64_t v90 = (void (**)(uint64_t))(v1 + 32);
  uint64_t v95 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56);
  uint64_t v91 = v0[223];
  uint64_t v89 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  uint64_t v92 = v0[228];
  uint64_t v8 = (void (**)(uint64_t, uint64_t))(v1 + 8);
  int64_t v87 = (unint64_t)(63 - v6) >> 6;
  uint64_t v88 = v0[187];
  uint64_t v9 = swift_bridgeObjectRetain();
  int64_t v94 = 0;
  uint64_t v93 = v8;
  while (1)
  {
    if (v7)
    {
      unint64_t v18 = __clz(__rbit64(v7));
      uint64_t v19 = (v7 - 1) & v7;
      unint64_t v20 = v18 | (v94 << 6);
LABEL_9:
      uint64_t v21 = v0[236];
      (*(void (**)(uint64_t, unint64_t, void))(v92 + 16))(v21, *(void *)(v88 + 48) + *(void *)(v92 + 72) * v20, v0[227]);
      uint64_t v22 = *(void *)(v88 + 56) + *(void *)(v91 + 72) * v20;
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3360);
      sub_24E6125B0(v22, v21 + *(int *)(v23 + 48), type metadata accessor for SessionFollowerState);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v21, 0, 1, v23);
      goto LABEL_40;
    }
    int64_t v24 = v94 + 1;
    if (__OFADD__(v94, 1))
    {
      __break(1u);
      goto LABEL_57;
    }
    if (v24 < v87)
    {
      unint64_t v25 = *(void *)(v85 + 8 * v24);
      if (v25) {
        goto LABEL_13;
      }
      int64_t v55 = v94 + 2;
      ++v94;
      if (v24 + 1 < v87)
      {
        unint64_t v25 = *(void *)(v85 + 8 * v55);
        if (v25) {
          goto LABEL_28;
        }
        int64_t v94 = v24 + 1;
        if (v24 + 2 < v87)
        {
          unint64_t v25 = *(void *)(v85 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
            goto LABEL_13;
          }
          int64_t v55 = v24 + 3;
          int64_t v94 = v24 + 2;
          if (v24 + 3 < v87)
          {
            unint64_t v25 = *(void *)(v85 + 8 * v55);
            if (v25)
            {
LABEL_28:
              int64_t v24 = v55;
LABEL_13:
              uint64_t v19 = (v25 - 1) & v25;
              unint64_t v20 = __clz(__rbit64(v25)) + (v24 << 6);
              int64_t v94 = v24;
              goto LABEL_9;
            }
            while (1)
            {
              int64_t v24 = v55 + 1;
              if (__OFADD__(v55, 1)) {
                break;
              }
              if (v24 >= v87)
              {
                int64_t v94 = v87 - 1;
                goto LABEL_39;
              }
              unint64_t v25 = *(void *)(v85 + 8 * v24);
              ++v55;
              if (v25) {
                goto LABEL_13;
              }
            }
LABEL_57:
            __break(1u);
            return MEMORY[0x270FA23E8](v9, v10, v11, v12);
          }
        }
      }
    }
LABEL_39:
    uint64_t v56 = v0[236];
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3360);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 1, 1, v57);
    uint64_t v19 = 0;
LABEL_40:
    uint64_t v58 = v0[237];
    sub_24E612440(v0[236], v58, &qword_2698F3300);
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3360);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v58, 1, v59) == 1) {
      break;
    }
    unint64_t v97 = v19;
    uint64_t v60 = v0[235];
    uint64_t v61 = v0[234];
    uint64_t v62 = v0[227];
    uint64_t v63 = v0[226];
    uint64_t v64 = v0[222];
    uint64_t v65 = v0[221];
    uint64_t v66 = v0[237] + *(int *)(v59 + 48);
    (*v90)(v60);
    sub_24E612618(v66, v63, type metadata accessor for SessionFollowerState);
    uint64_t v96 = *v99;
    (*v99)(v61, v60, v62);
    sub_24E6125B0(v63, v65, type metadata accessor for SessionFollowerState);
    uint64_t v67 = *v95;
    (*v95)(v65, 0, 1, v64);
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v68 = v0[222];
    uint64_t v69 = v0[221];
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v70 = v0[198];
    int v71 = (*v89)(v69, 1, v68);
    uint64_t v72 = v0[234];
    if (v71 == 1)
    {
      sub_24E563530(v0[221], (uint64_t *)&unk_2698F2F60);
      swift_bridgeObjectRetain();
      unint64_t v73 = sub_24E7C9D20(v72);
      char v75 = v74;
      swift_bridgeObjectRelease();
      if (v75)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v100[0] = v70;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_24E7D0700();
          uint64_t v70 = v100[0];
        }
        uint64_t v77 = v0[222];
        uint64_t v78 = v0[220];
        uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
        v79(*(void *)(v70 + 48) + *(void *)(v92 + 72) * v73, v0[227]);
        sub_24E612618(*(void *)(v70 + 56) + *(void *)(v91 + 72) * v73, v78, type metadata accessor for SessionFollowerState);
        sub_24E7EC5FC(v73, v70);
        swift_bridgeObjectRelease();
        v67(v78, 0, 1, v77);
      }
      else
      {
        v67(v0[220], 1, 1, v0[222]);
        uint64_t v79 = *v93;
      }
      uint64_t v83 = v0[220];
      v79(v0[234], v0[227]);
      sub_24E563530(v83, (uint64_t *)&unk_2698F2F60);
    }
    else
    {
      uint64_t v80 = v0[227];
      uint64_t v81 = v0[225];
      sub_24E612618(v0[221], v81, type metadata accessor for SessionFollowerState);
      char v82 = swift_isUniquelyReferenced_nonNull_native();
      v100[0] = v70;
      sub_24E61D9A8(v81, v72, v82);
      uint64_t v70 = v100[0];
      swift_bridgeObjectRelease();
      uint64_t v79 = *v93;
      (*v93)(v72, v80);
    }
    uint64_t v98 = v79;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v13 = v0[226];
    uint64_t v14 = v0[224];
    swift_getKeyPath();
    swift_getKeyPath();
    v0[199] = v70;
    swift_retain();
    sub_24E862208();
    sub_24E5DEE9C();
    swift_release();
    sub_24E6125B0(v13, v14, type metadata accessor for SessionFollowerState);
    if (swift_getEnumCaseMultiPayload())
    {
      uint64_t v15 = v0[235];
      uint64_t v16 = v0[227];
      uint64_t v17 = v0[224];
      sub_24E612680(v0[226], type metadata accessor for SessionFollowerState);
      v79(v15, v16);
      uint64_t v9 = sub_24E612680(v17, type metadata accessor for SessionFollowerState);
    }
    else
    {
      uint64_t v26 = v0[244];
      uint64_t v27 = v0[224];
      uint64_t v28 = v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F2F70) + 48);
      sub_24E612440(v27, v26, (uint64_t *)&unk_2698F0F90);
      sub_24E563530(v28, (uint64_t *)&unk_2698F0F90);
      if (qword_2698F0E60 != -1) {
        swift_once();
      }
      uint64_t v29 = v0[244];
      uint64_t v30 = v0[243];
      uint64_t v31 = v0[235];
      uint64_t v32 = v0[233];
      uint64_t v33 = v0[227];
      uint64_t v34 = sub_24E862168();
      __swift_project_value_buffer(v34, (uint64_t)qword_269906D88);
      v96(v32, v31, v33);
      sub_24E576EA0(v29, v30, (uint64_t *)&unk_2698F0F90);
      uint64_t v35 = sub_24E862148();
      os_log_type_t v36 = sub_24E864238();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v86 = swift_slowAlloc();
        v100[0] = v86;
        *(_DWORD *)uint64_t v37 = 136315650;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        v0[200] = sub_24E55B02C(0xD000000000000021, 0x800000024E873550, v100);
        sub_24E8643A8();
        *(_WORD *)(v37 + 12) = 2080;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v38 = v0[233];
        uint64_t v39 = v0[227];
        v96(v0[232], v38, v39);
        uint64_t v40 = sub_24E863CC8();
        unint64_t v42 = v41;
        swift_release();
        v0[201] = sub_24E55B02C(v40, v42, v100);
        sub_24E8643A8();
        swift_bridgeObjectRelease();
        v98(v38, v39);
        *(_WORD *)(v37 + 22) = 2080;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v43 = v0[243];
        sub_24E576EA0(v43, v0[242], (uint64_t *)&unk_2698F0F90);
        uint64_t v44 = sub_24E863CC8();
        unint64_t v46 = v45;
        swift_release();
        v0[202] = sub_24E55B02C(v44, v46, v100);
        sub_24E8643A8();
        swift_bridgeObjectRelease();
        sub_24E563530(v43, (uint64_t *)&unk_2698F0F90);
        _os_log_impl(&dword_24E553000, v35, v36, "Repository: %s - follower: %s - expiryDate %s", (uint8_t *)v37, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2533435F0](v86, -1, -1);
        MEMORY[0x2533435F0](v37, -1, -1);

        unint64_t v47 = v98;
      }
      else
      {
        uint64_t v48 = v0[243];
        unint64_t v47 = v79;
        v79(v0[233], v0[227]);
        sub_24E563530(v48, (uint64_t *)&unk_2698F0F90);
      }
      uint64_t v49 = v0[245];
      uint64_t v50 = v0[244];
      uint64_t v51 = v0[242];
      uint64_t v52 = v0[235];
      uint64_t v53 = v0[227];
      uint64_t v54 = v0[226];
      sub_24E5E9468(v49, v50, v51);
      sub_24E563530(v50, (uint64_t *)&unk_2698F0F90);
      sub_24E612680(v54, type metadata accessor for SessionFollowerState);
      v47(v52, v53);
      uint64_t v9 = sub_24E611E74(v51, v49, (uint64_t *)&unk_2698F0F90);
    }
    unint64_t v7 = v97;
  }
  swift_release();
  uint64_t v9 = (uint64_t)(v0 + 2);
  uint64_t v10 = v0 + 175;
  uint64_t v12 = v0 + 182;
  uint64_t v11 = sub_24E5E6EC4;
  return MEMORY[0x270FA23E8](v9, v10, v11, v12);
}

uint64_t sub_24E5E6EC4()
{
  v1[255] = v0;
  if (v0) {
    uint64_t v2 = sub_24E5E870C;
  }
  else {
    uint64_t v2 = sub_24E5E6EFC;
  }
  return MEMORY[0x270FA2498](v2, v1[248], v1[249]);
}

uint64_t sub_24E5E6EFC()
{
  uint64_t v136 = v0;
  uint64_t v1 = v0[228];
  uint64_t v2 = v0[214];
  uint64_t v3 = v0[175];
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v114 = v3 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & v4;
  uint64_t v133 = (void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  uint64_t v120 = (void (**)(uint64_t))(v1 + 32);
  uint64_t v128 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56);
  uint64_t v121 = v0[214];
  uint64_t v119 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  uint64_t v122 = v0[228];
  uint64_t v8 = (void (**)(uint64_t, uint64_t))(v1 + 8);
  int64_t v117 = (unint64_t)(63 - v6) >> 6;
  uint64_t v118 = v0[175];
  uint64_t v9 = swift_bridgeObjectRetain();
  int64_t v124 = 0;
  uint64_t v123 = v8;
  while (1)
  {
    if (v7)
    {
      unint64_t v18 = __clz(__rbit64(v7));
      uint64_t v19 = (v7 - 1) & v7;
      unint64_t v20 = v18 | (v124 << 6);
LABEL_9:
      uint64_t v21 = v0[218];
      (*(void (**)(uint64_t, unint64_t, void))(v122 + 16))(v21, *(void *)(v118 + 48) + *(void *)(v122 + 72) * v20, v0[227]);
      uint64_t v22 = *(void *)(v118 + 56) + *(void *)(v121 + 72) * v20;
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3358);
      sub_24E6125B0(v22, v21 + *(int *)(v23 + 48), type metadata accessor for SessionFollowingState);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v21, 0, 1, v23);
      goto LABEL_40;
    }
    int64_t v24 = v124 + 1;
    if (__OFADD__(v124, 1))
    {
      __break(1u);
      goto LABEL_70;
    }
    if (v24 < v117)
    {
      unint64_t v25 = *(void *)(v114 + 8 * v24);
      if (v25) {
        goto LABEL_13;
      }
      int64_t v55 = v124 + 2;
      ++v124;
      if (v24 + 1 < v117)
      {
        unint64_t v25 = *(void *)(v114 + 8 * v55);
        if (v25) {
          goto LABEL_28;
        }
        int64_t v124 = v24 + 1;
        if (v24 + 2 < v117)
        {
          unint64_t v25 = *(void *)(v114 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
            goto LABEL_13;
          }
          int64_t v55 = v24 + 3;
          int64_t v124 = v24 + 2;
          if (v24 + 3 < v117) {
            break;
          }
        }
      }
    }
LABEL_39:
    uint64_t v56 = v0[218];
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3358);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 1, 1, v57);
    uint64_t v19 = 0;
LABEL_40:
    uint64_t v58 = v0[219];
    sub_24E612440(v0[218], v58, &qword_2698F32F8);
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3358);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v58, 1, v59) == 1)
    {
      swift_release();
      uint64_t v83 = v0[239];
      uint64_t v84 = v0[207];
      uint64_t v85 = v0[206];
      sub_24E576EA0(v0[245], v83, (uint64_t *)&unk_2698F0F90);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v83, 1, v85) == 1)
      {
        sub_24E563530(v0[239], (uint64_t *)&unk_2698F0F90);
        goto LABEL_58;
      }
      uint64_t v86 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0[207] + 32);
      v86(v0[210], v0[239], v0[206]);
      sub_24E861638();
      if (v87 > 0.0)
      {
        double v88 = v87;
        uint64_t v89 = v0[210];
        uint64_t v90 = v0[209];
        uint64_t v129 = v0[208];
        uint64_t v91 = v0[207];
        uint64_t v92 = v0[206];
        uint64_t v125 = v92;
        uint64_t v127 = v90;
        uint64_t v93 = v0[205];
        uint64_t v132 = v93;
        uint64_t v134 = v0[245];
        uint64_t v94 = v0[204];
        uint64_t v95 = sub_24E863FE8();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v93, 1, 1, v95);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 16))(v90, v89, v92);
        swift_retain();
        uint64_t v96 = sub_24E863FA8();
        unint64_t v97 = (*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
        unint64_t v98 = (v129 + v97 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v99 = swift_allocObject();
        *(void *)(v99 + 16) = v96;
        *(void *)(v99 + 24) = MEMORY[0x263F8F500];
        v86(v99 + v97, v127, v125);
        *(double *)(v99 + v98) = v88;
        *(void *)(v99 + ((v98 + 15) & 0xFFFFFFFFFFFFFFF8)) = v94;
        uint64_t v100 = sub_24E5C54D0(v132, (uint64_t)&unk_2698F3350, v99);
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v89, v125);
        *(void *)(v94 + OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipRefresherTask) = v100;
        swift_release();
        uint64_t v101 = v134;
LABEL_66:
        sub_24E563530(v101, (uint64_t *)&unk_2698F0F90);
        uint64_t v9 = (uint64_t)(v0 + 2);
        uint64_t v12 = v0 + 170;
        uint64_t v11 = sub_24E5E80B8;
        uint64_t v10 = v0 + 175;
        return MEMORY[0x270FA23D8](v9, v10, v11, v12);
      }
      (*(void (**)(void, void))(v0[207] + 8))(v0[210], v0[206]);
LABEL_58:
      if (qword_2698F0E60 == -1)
      {
LABEL_59:
        uint64_t v102 = sub_24E862168();
        __swift_project_value_buffer(v102, (uint64_t)qword_269906D88);
        uint64_t v103 = sub_24E862148();
        os_log_type_t v104 = sub_24E864238();
        if (os_log_type_enabled(v103, v104))
        {
          uint64_t v105 = swift_slowAlloc();
          uint64_t v106 = swift_slowAlloc();
          v135[0] = v106;
          *(_DWORD *)uint64_t v105 = 136315394;
          sub_24E863FA8();
          sub_24E863F18();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          swift_release();
          v0[181] = sub_24E55B02C(0xD000000000000021, 0x800000024E873550, v135);
          sub_24E8643A8();
          *(_WORD *)(v105 + 12) = 2080;
          sub_24E863FA8();
          sub_24E863F18();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v107 = v0[245];
          uint64_t v108 = v0[242];
          swift_beginAccess();
          sub_24E576EA0(v107, v108, (uint64_t *)&unk_2698F0F90);
          uint64_t v109 = sub_24E863CC8();
          unint64_t v111 = v110;
          swift_release();
          v0[188] = sub_24E55B02C(v109, v111, v135);
          sub_24E8643A8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24E553000, v103, v104, "Repository: %s - Not scheduling timer: %s", (uint8_t *)v105, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533435F0](v106, -1, -1);
          MEMORY[0x2533435F0](v105, -1, -1);

          uint64_t v101 = v107;
        }
        else
        {
          uint64_t v112 = v0[245];

          uint64_t v101 = v112;
        }
        goto LABEL_66;
      }
LABEL_70:
      swift_once();
      goto LABEL_59;
    }
    unint64_t v130 = v19;
    uint64_t v60 = v0[231];
    uint64_t v61 = v0[230];
    uint64_t v62 = v0[227];
    uint64_t v63 = v0[217];
    uint64_t v64 = v0[213];
    uint64_t v65 = v0[212];
    uint64_t v66 = v0[219] + *(int *)(v59 + 48);
    (*v120)(v60);
    sub_24E612618(v66, v63, type metadata accessor for SessionFollowingState);
    uint64_t v126 = *v133;
    (*v133)(v61, v60, v62);
    sub_24E6125B0(v63, v65, type metadata accessor for SessionFollowingState);
    uint64_t v67 = *v128;
    (*v128)(v65, 0, 1, v64);
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v68 = v0[213];
    uint64_t v69 = v0[212];
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v70 = v0[191];
    int v71 = (*v119)(v69, 1, v68);
    uint64_t v72 = v0[230];
    if (v71 == 1)
    {
      sub_24E563530(v0[212], &qword_2698F2FA0);
      swift_bridgeObjectRetain();
      unint64_t v73 = sub_24E7C9D20(v72);
      char v75 = v74;
      swift_bridgeObjectRelease();
      if (v75)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v135[0] = v70;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_24E7D06B8();
          uint64_t v70 = v135[0];
        }
        uint64_t v77 = v0[213];
        uint64_t v78 = v0[211];
        unint64_t v47 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
        v47(*(void *)(v70 + 48) + *(void *)(v122 + 72) * v73, v0[227]);
        sub_24E612618(*(void *)(v70 + 56) + *(void *)(v121 + 72) * v73, v78, type metadata accessor for SessionFollowingState);
        sub_24E7EC5E4(v73, v70);
        swift_bridgeObjectRelease();
        v67(v78, 0, 1, v77);
      }
      else
      {
        v67(v0[211], 1, 1, v0[213]);
        unint64_t v47 = *v123;
      }
      uint64_t v82 = v0[211];
      v47(v0[230], v0[227]);
      sub_24E563530(v82, &qword_2698F2FA0);
    }
    else
    {
      uint64_t v79 = v0[227];
      uint64_t v80 = v0[216];
      sub_24E612618(v0[212], v80, type metadata accessor for SessionFollowingState);
      char v81 = swift_isUniquelyReferenced_nonNull_native();
      v135[0] = v70;
      sub_24E61D798(v80, v72, v81);
      uint64_t v70 = v135[0];
      swift_bridgeObjectRelease();
      unint64_t v47 = *v123;
      (*v123)(v72, v79);
    }
    uint64_t v131 = v47;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v13 = v0[217];
    uint64_t v14 = v0[215];
    swift_getKeyPath();
    swift_getKeyPath();
    v0[192] = v70;
    swift_retain();
    sub_24E862208();
    sub_24E5DF280();
    swift_release();
    sub_24E6125B0(v13, v14, type metadata accessor for SessionFollowingState);
    if (swift_getEnumCaseMultiPayload())
    {
      uint64_t v15 = v0[231];
      uint64_t v16 = v0[227];
      uint64_t v17 = v0[215];
      sub_24E612680(v0[217], type metadata accessor for SessionFollowingState);
      v47(v15, v16);
      uint64_t v9 = sub_24E612680(v17, type metadata accessor for SessionFollowingState);
    }
    else
    {
      uint64_t v26 = v0[241];
      uint64_t v27 = v0[215];
      uint64_t v28 = v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F2F70) + 48);
      sub_24E612440(v27, v26, (uint64_t *)&unk_2698F0F90);
      sub_24E563530(v28, (uint64_t *)&unk_2698F0F90);
      if (qword_2698F0E60 != -1) {
        swift_once();
      }
      uint64_t v29 = v0[241];
      uint64_t v30 = v0[240];
      uint64_t v31 = v0[231];
      uint64_t v32 = v0[229];
      uint64_t v33 = v0[227];
      uint64_t v34 = sub_24E862168();
      __swift_project_value_buffer(v34, (uint64_t)qword_269906D88);
      v126(v32, v31, v33);
      sub_24E576EA0(v29, v30, (uint64_t *)&unk_2698F0F90);
      uint64_t v35 = sub_24E862148();
      os_log_type_t v36 = sub_24E864238();
      if (os_log_type_enabled(v35, v36))
      {
        log = v35;
        uint64_t v37 = swift_slowAlloc();
        uint64_t v115 = swift_slowAlloc();
        v135[0] = v115;
        *(_DWORD *)uint64_t v37 = 136315650;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        v0[193] = sub_24E55B02C(0xD000000000000021, 0x800000024E873550, v135);
        sub_24E8643A8();
        *(_WORD *)(v37 + 12) = 2080;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v38 = v0[229];
        uint64_t v39 = v0[227];
        v126(v0[232], v38, v39);
        uint64_t v40 = sub_24E863CC8();
        unint64_t v42 = v41;
        swift_release();
        v0[194] = sub_24E55B02C(v40, v42, v135);
        sub_24E8643A8();
        swift_bridgeObjectRelease();
        v131(v38, v39);
        *(_WORD *)(v37 + 22) = 2080;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v43 = v0[240];
        sub_24E576EA0(v43, v0[242], (uint64_t *)&unk_2698F0F90);
        uint64_t v44 = sub_24E863CC8();
        unint64_t v46 = v45;
        swift_release();
        v0[195] = sub_24E55B02C(v44, v46, v135);
        sub_24E8643A8();
        swift_bridgeObjectRelease();
        sub_24E563530(v43, (uint64_t *)&unk_2698F0F90);
        _os_log_impl(&dword_24E553000, log, v36, "Repository: %s - following: %s - expiryDate %s", (uint8_t *)v37, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2533435F0](v115, -1, -1);
        MEMORY[0x2533435F0](v37, -1, -1);

        unint64_t v47 = v131;
      }
      else
      {
        uint64_t v48 = v0[240];
        v47(v0[229], v0[227]);
        sub_24E563530(v48, (uint64_t *)&unk_2698F0F90);
      }
      uint64_t v49 = v0[245];
      uint64_t v50 = v0[242];
      uint64_t v51 = v0[241];
      uint64_t v52 = v0[231];
      uint64_t v53 = v0[227];
      uint64_t v54 = v0[217];
      sub_24E5E9468(v49, v51, v50);
      sub_24E563530(v51, (uint64_t *)&unk_2698F0F90);
      sub_24E612680(v54, type metadata accessor for SessionFollowingState);
      v47(v52, v53);
      uint64_t v9 = sub_24E611E74(v50, v49, (uint64_t *)&unk_2698F0F90);
    }
    unint64_t v7 = v130;
  }
  unint64_t v25 = *(void *)(v114 + 8 * v55);
  if (v25)
  {
LABEL_28:
    int64_t v24 = v55;
LABEL_13:
    uint64_t v19 = (v25 - 1) & v25;
    unint64_t v20 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v124 = v24;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v24 = v55 + 1;
    if (__OFADD__(v55, 1)) {
      break;
    }
    if (v24 >= v117)
    {
      int64_t v124 = v117 - 1;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v114 + 8 * v24);
    ++v55;
    if (v25) {
      goto LABEL_13;
    }
  }
  __break(1u);
  return MEMORY[0x270FA23D8](v9, v10, v11, v12);
}

uint64_t sub_24E5E80B8()
{
  return MEMORY[0x270FA2498](sub_24E5E80D4, *(void *)(v0 + 1984), *(void *)(v0 + 1992));
}

uint64_t sub_24E5E80D4()
{
  swift_release();
  swift_task_dealloc();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1496, sub_24E5E8160, v0 + 1296);
}

uint64_t sub_24E5E8160()
{
  return MEMORY[0x270FA2498](sub_24E5E817C, *(void *)(v0 + 1984), *(void *)(v0 + 1992));
}

uint64_t sub_24E5E817C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E5E83BC()
{
  uint64_t v16 = v0;
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[254];
  uint64_t v2 = sub_24E862168();
  __swift_project_value_buffer(v2, (uint64_t)qword_269906D88);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_24E862148();
  os_log_type_t v6 = sub_24E864248();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v15 = v9;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[196] = sub_24E55B02C(0xD000000000000021, 0x800000024E873550, &v15);
    sub_24E8643A8();
    *(_WORD *)(v7 + 12) = 2112;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v10 = (void *)v0[254];
    id v11 = v10;
    swift_release();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[197] = v12;
    sub_24E8643A8();
    *uint64_t v8 = v12;

    _os_log_impl(&dword_24E553000, v5, v6, "Repository: %s - Followers - %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v9, -1, -1);
    MEMORY[0x2533435F0](v7, -1, -1);
  }
  else
  {
    uint64_t v13 = (void *)v0[254];
  }
  return MEMORY[0x270FA23E8](v0 + 2, v0 + 175, sub_24E5E6EC4, v0 + 182);
}

uint64_t sub_24E5E870C()
{
  uint64_t v53 = v0;
  unint64_t v1 = 0x2698F0000uLL;
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[255];
  uint64_t v3 = sub_24E862168();
  __swift_project_value_buffer(v3, (uint64_t)qword_269906D88);
  id v4 = v2;
  id v5 = v2;
  os_log_type_t v6 = sub_24E862148();
  os_log_type_t v7 = sub_24E864248();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v49 = v3;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v52 = v10;
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[189] = sub_24E55B02C(0xD000000000000021, 0x800000024E873550, &v52);
    sub_24E8643A8();
    *(_WORD *)(v8 + 12) = 2112;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    id v11 = (void *)v0[255];
    id v12 = v11;
    swift_release();
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[190] = v13;
    sub_24E8643A8();
    *uint64_t v9 = v13;

    _os_log_impl(&dword_24E553000, v6, v7, "Repository: %s - Followings - %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v10, -1, -1);
    MEMORY[0x2533435F0](v8, -1, -1);

    unint64_t v1 = 0x2698F0000;
    uint64_t v3 = v49;
  }
  else
  {
    uint64_t v14 = (void *)v0[255];
  }
  uint64_t v15 = v0[239];
  uint64_t v16 = v0[207];
  uint64_t v17 = v0[206];
  sub_24E576EA0(v0[245], v15, (uint64_t *)&unk_2698F0F90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v15, 1, v17) == 1)
  {
    sub_24E563530(v0[239], (uint64_t *)&unk_2698F0F90);
  }
  else
  {
    unint64_t v18 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0[207] + 32);
    v18(v0[210], v0[239], v0[206]);
    sub_24E861638();
    if (v19 > 0.0)
    {
      double v20 = v19;
      uint64_t v21 = v0[210];
      uint64_t v22 = v0[209];
      uint64_t v48 = v0[208];
      uint64_t v23 = v0[207];
      uint64_t v24 = v0[206];
      uint64_t v46 = v24;
      uint64_t v47 = v22;
      uint64_t v25 = v0[205];
      uint64_t v50 = v25;
      uint64_t v51 = v0[245];
      uint64_t v26 = v0[204];
      uint64_t v27 = sub_24E863FE8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 1, 1, v27);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v22, v21, v24);
      swift_retain();
      uint64_t v28 = sub_24E863FA8();
      unint64_t v29 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      unint64_t v30 = (v48 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v31 = swift_allocObject();
      uint64_t v32 = MEMORY[0x263F8F500];
      *(void *)(v31 + 16) = v28;
      *(void *)(v31 + 24) = v32;
      v18(v31 + v29, v47, v46);
      *(double *)(v31 + v30) = v20;
      *(void *)(v31 + ((v30 + 15) & 0xFFFFFFFFFFFFFFF8)) = v26;
      uint64_t v33 = sub_24E5C54D0(v50, (uint64_t)&unk_2698F3350, v31);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v46);
      *(void *)(v26 + OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipRefresherTask) = v33;
      swift_release();
      uint64_t v34 = v51;
      goto LABEL_24;
    }
    (*(void (**)(void, void))(v0[207] + 8))(v0[210], v0[206]);
  }
  if (*(void *)(v1 + 3680) != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v3, (uint64_t)qword_269906D88);
  uint64_t v35 = sub_24E862148();
  os_log_type_t v36 = sub_24E864238();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v52 = v38;
    *(_DWORD *)uint64_t v37 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[181] = sub_24E55B02C(0xD000000000000021, 0x800000024E873550, &v52);
    sub_24E8643A8();
    *(_WORD *)(v37 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v39 = v0[245];
    uint64_t v40 = v0[242];
    swift_beginAccess();
    sub_24E576EA0(v39, v40, (uint64_t *)&unk_2698F0F90);
    uint64_t v41 = sub_24E863CC8();
    unint64_t v43 = v42;
    swift_release();
    v0[188] = sub_24E55B02C(v41, v43, &v52);
    sub_24E8643A8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E553000, v35, v36, "Repository: %s - Not scheduling timer: %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v38, -1, -1);
    MEMORY[0x2533435F0](v37, -1, -1);

    uint64_t v34 = v39;
  }
  else
  {
    uint64_t v44 = v0[245];

    uint64_t v34 = v44;
  }
LABEL_24:
  sub_24E563530(v34, (uint64_t *)&unk_2698F0F90);
  return MEMORY[0x270FA23D8](v0 + 2, v0 + 175, sub_24E5E80B8, v0 + 170);
}

uint64_t sub_24E5E8F20(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 40) = a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24E5E8F44, 0, 0);
}

uint64_t sub_24E5E8F44()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_24E5E8FEC;
  char v2 = *(unsigned char *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 24);
  return sub_24E6319FC(v3, v2);
}

uint64_t sub_24E5E8FEC(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_24E5E90EC(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_24E5E91BC;
  return v5();
}

uint64_t sub_24E5E91BC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_24E5E92CC(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 40) = a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24E5E92F0, 0, 0);
}

uint64_t sub_24E5E92F0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E612A48;
  char v2 = *(unsigned char *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 24);
  return sub_24E6338EC(v3, v2);
}

uint64_t sub_24E5E9398(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_24E612A4C;
  return v5();
}

uint64_t sub_24E5E9468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = sub_24E8616F8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v25 - v16;
  sub_24E576EA0(a1, (uint64_t)v10, (uint64_t *)&unk_2698F0F90);
  unint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v18(v10, 1, v11) == 1)
  {
    sub_24E563530((uint64_t)v10, (uint64_t *)&unk_2698F0F90);
    return sub_24E576EA0(v26, a3, (uint64_t *)&unk_2698F0F90);
  }
  else
  {
    uint64_t v25 = a3;
    double v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v20(v17, v10, v11);
    sub_24E576EA0(v26, (uint64_t)v8, (uint64_t *)&unk_2698F0F90);
    if (v18(v8, 1, v11) == 1)
    {
      sub_24E563530((uint64_t)v8, (uint64_t *)&unk_2698F0F90);
      uint64_t v21 = v25;
      v20((char *)v25, v17, v11);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
    }
    else
    {
      v20(v15, v8, v11);
      sub_24E609BE8((unint64_t *)&qword_2698F2F78, MEMORY[0x263F07490]);
      if (sub_24E863BE8()) {
        uint64_t v22 = v15;
      }
      else {
        uint64_t v22 = v17;
      }
      uint64_t v23 = v25;
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v25, v22, v11);
      uint64_t v24 = *(void (**)(char *, uint64_t))(v12 + 8);
      v24(v15, v11);
      v24(v17, v11);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v23, 0, 1, v11);
    }
  }
}

uint64_t sub_24E5E9784(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 96) = a6;
  *(double *)(v6 + 88) = a1;
  *(void *)(v6 + 80) = a5;
  uint64_t v7 = sub_24E864638();
  *(void *)(v6 + 104) = v7;
  *(void *)(v6 + 112) = *(void *)(v7 - 8);
  *(void *)(v6 + 120) = swift_task_alloc();
  uint64_t v8 = sub_24E8616F8();
  *(void *)(v6 + 128) = v8;
  *(void *)(v6 + 136) = *(void *)(v8 - 8);
  *(void *)(v6 + 144) = swift_task_alloc();
  *(void *)(v6 + 152) = swift_task_alloc();
  *(void *)(v6 + 160) = sub_24E863FB8();
  *(void *)(v6 + 168) = sub_24E863FA8();
  uint64_t v10 = sub_24E863F18();
  *(void *)(v6 + 176) = v10;
  *(void *)(v6 + 184) = v9;
  return MEMORY[0x270FA2498](sub_24E5E98F0, v10, v9);
}

uint64_t sub_24E5E98F0()
{
  uint64_t v25 = v0;
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v5 = sub_24E862168();
  v0[24] = __swift_project_value_buffer(v5, (uint64_t)qword_269906D88);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[25] = v6;
  v0[26] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v3);
  uint64_t v7 = sub_24E862148();
  os_log_type_t v8 = sub_24E864268();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v24 = v22;
    *(_DWORD *)uint64_t v9 = 136315650;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[7] = sub_24E55B02C(0xD000000000000021, 0x800000024E873550, &v24);
    sub_24E8643A8();
    *(_WORD *)(v9 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v10 = v0[19];
    uint64_t v12 = v0[16];
    uint64_t v11 = v0[17];
    swift_release();
    sub_24E609BE8(&qword_2698F3368, MEMORY[0x263F07490]);
    uint64_t v13 = sub_24E864928();
    v0[8] = sub_24E55B02C(v13, v14, &v24);
    sub_24E8643A8();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15(v10, v12);
    *(_WORD *)(v9 + 22) = 2048;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v16 = v0[11];
    swift_release();
    v0[9] = v16;
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v7, v8, "Repository: %s - Scheduling timer: %s - %f", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v22, -1, -1);
    MEMORY[0x2533435F0](v9, -1, -1);
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0[17] + 8);
    v15(v0[19], v0[16]);
  }

  v0[27] = v15;
  uint64_t v17 = sub_24E864BF8();
  uint64_t v19 = v18;
  sub_24E864628();
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2698F5E80 + dword_2698F5E80);
  double v20 = (void *)swift_task_alloc();
  v0[28] = v20;
  *double v20 = v0;
  v20[1] = sub_24E5E9D6C;
  return v23(v17, v19, 0, 0, 1);
}

uint64_t sub_24E5E9D6C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 120);
  uint64_t v4 = *(void *)(*v1 + 112);
  uint64_t v5 = *(void *)(*v1 + 104);
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 184);
  uint64_t v7 = *(void *)(v2 + 176);
  if (v0) {
    os_log_type_t v8 = sub_24E5EA2CC;
  }
  else {
    os_log_type_t v8 = sub_24E5E9F04;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_24E5E9F04()
{
  uint64_t v18 = v0;
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[25];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[10];
  swift_release();
  v1(v2, v4, v3);
  uint64_t v5 = sub_24E862148();
  os_log_type_t v6 = sub_24E864268();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = v16;
    *(_DWORD *)uint64_t v7 = 136315650;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[4] = sub_24E55B02C(0xD000000000000021, 0x800000024E873550, &v17);
    sub_24E8643A8();
    *(_WORD *)(v7 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    os_log_type_t v8 = (void (*)(uint64_t, uint64_t))v0[27];
    uint64_t v9 = v0[18];
    uint64_t v10 = v0[16];
    swift_release();
    sub_24E609BE8(&qword_2698F3368, MEMORY[0x263F07490]);
    uint64_t v11 = sub_24E864928();
    v0[5] = sub_24E55B02C(v11, v12, &v17);
    sub_24E8643A8();
    swift_bridgeObjectRelease();
    v8(v9, v10);
    *(_WORD *)(v7 + 22) = 2048;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v13 = v0[11];
    swift_release();
    v0[6] = v13;
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v5, v6, "Repository: %s - Timer will trigger: %s - %f", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v16, -1, -1);
    MEMORY[0x2533435F0](v7, -1, -1);
  }
  else
  {
    ((void (*)(void, void))v0[27])(v0[18], v0[16]);
  }

  sub_24E5E50E8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_24E5EA2CC()
{
  uint64_t v16 = v0;
  uint64_t v1 = (void *)v0[29];
  swift_release();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24E862148();
  os_log_type_t v5 = sub_24E864248();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[2] = sub_24E55B02C(0xD000000000000021, 0x800000024E873550, &v15);
    sub_24E8643A8();
    *(_WORD *)(v6 + 12) = 2112;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v9 = (void *)v0[29];
    id v10 = v9;
    swift_release();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v11;
    sub_24E8643A8();
    *uint64_t v7 = v11;

    _os_log_impl(&dword_24E553000, v4, v5, "Repository: %s - timer error: %@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    MEMORY[0x2533435F0](v6, -1, -1);
  }
  else
  {
    unint64_t v12 = (void *)v0[29];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_24E5EA5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 48) = v14;
  *(_OWORD *)(v8 + 32) = v13;
  *(void *)(v8 + 16) = a6;
  *(void *)(v8 + 24) = a8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2FA8);
  *(void *)(v8 + 56) = swift_task_alloc();
  sub_24E863FB8();
  *(void *)(v8 + 64) = sub_24E863FA8();
  uint64_t v10 = sub_24E863F18();
  *(void *)(v8 + 72) = v10;
  *(void *)(v8 + 80) = v9;
  return MEMORY[0x270FA2498](sub_24E5EA6C8, v10, v9);
}

uint64_t sub_24E5EA6C8()
{
  objc_msgSend(*(id *)(v0 + 16), sel_coordinate);
  double v2 = v1;
  double v4 = v3;
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v5;
  *os_log_type_t v5 = v0;
  v5[1] = sub_24E5EA788;
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 24);
  return sub_24E5EA938(v6, v7, v2, v4);
}

uint64_t sub_24E5EA788()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return MEMORY[0x270FA2498](sub_24E5EA8A8, v3, v2);
}

uint64_t sub_24E5EA8A8()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  swift_release();
  sub_24E5EB6F8(v1, v2);
  sub_24E563530(v1, &qword_2698F2FA8);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_24E5EA938(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)(v4 + 216) = a2;
  *(double *)(v4 + 200) = a3;
  *(double *)(v4 + 208) = a4;
  *(void *)(v4 + 192) = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F30A0);
  *(void *)(v4 + 224) = v5;
  *(void *)(v4 + 232) = *(void *)(v5 - 8);
  *(void *)(v4 + 240) = swift_task_alloc();
  *(void *)(v4 + 248) = sub_24E863FB8();
  *(void *)(v4 + 256) = sub_24E863FA8();
  uint64_t v7 = sub_24E863F18();
  *(void *)(v4 + 264) = v7;
  *(void *)(v4 + 272) = v6;
  return MEMORY[0x270FA2498](sub_24E5EAA3C, v7, v6);
}

uint64_t sub_24E5EAA3C()
{
  uint64_t v19 = v0;
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E862168();
  v0[35] = __swift_project_value_buffer(v1, (uint64_t)qword_269906D88);
  uint64_t v2 = sub_24E862148();
  os_log_type_t v3 = sub_24E864268();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v18 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[23] = sub_24E55B02C(0xD000000000000020, 0x800000024E8733A0, &v18);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v2, v3, "CompositeAppViewModel: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v5, -1, -1);
    MEMORY[0x2533435F0](v4, -1, -1);
  }

  uint64_t v7 = v0[29];
  uint64_t v6 = v0[30];
  uint64_t v8 = v0[28];
  double v10 = *((double *)v0 + 25);
  double v9 = *((double *)v0 + 26);
  id v11 = objc_msgSend(self, sel_mapItemForCurrentLocation);
  v0[36] = v11;
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F109E0]), sel_initWithCoordinate_, v10, v9);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10960]), sel_initWithPlacemark_, v12);
  v0[37] = v13;

  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F108C0]), sel_init);
  v0[38] = v14;
  objc_msgSend(v14, sel_setSource_, v11);
  objc_msgSend(v14, sel_setDestination_, v13);
  objc_msgSend(v14, sel_setTransportType_, 3);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F108B8]), sel_initWithRequest_, v14);
  v0[39] = v15;
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_24E5EAE6C;
  swift_continuation_init();
  v0[17] = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v0 + 14);
  sub_24E60F6EC(0, &qword_2698F30A8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F30B0);
  sub_24E863F28();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 32))(boxed_opaque_existential_0, v6, v8);
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 1107296256;
  v0[12] = sub_24E5FC070;
  v0[13] = &block_descriptor_0;
  objc_msgSend(v15, sel_calculateETAWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24E5EAE6C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 320) = v2;
  uint64_t v3 = *(void *)(v1 + 272);
  uint64_t v4 = *(void *)(v1 + 264);
  if (v2) {
    uint64_t v5 = sub_24E5EB35C;
  }
  else {
    uint64_t v5 = sub_24E5EAF9C;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24E5EAF9C()
{
  uint64_t v24 = v0;
  swift_release();
  id v1 = *(id *)(v0 + 144);
  uint64_t v2 = sub_24E862148();
  os_log_type_t v3 = sub_24E864268();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v23 = v21;
    *(_DWORD *)uint64_t v4 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    *(void *)(v0 + 168) = sub_24E55B02C(0xD000000000000020, 0x800000024E8733A0, &v23);
    sub_24E8643A8();
    *(_WORD *)(v4 + 12) = 2112;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    *(void *)(v0 + 176) = v1;
    id v5 = v1;
    sub_24E8643A8();
    *uint64_t v20 = v1;

    _os_log_impl(&dword_24E553000, v2, v3, "CompositeAppViewModel: didReceive %s - %@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v20, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v21, -1, -1);
    MEMORY[0x2533435F0](v4, -1, -1);
  }
  else
  {
  }
  uint64_t v7 = *(void **)(v0 + 304);
  uint64_t v6 = *(void **)(v0 + 312);
  uint64_t v8 = *(void **)(v0 + 288);
  double v9 = *(void **)(v0 + 296);
  uint64_t v22 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 192);
  BOOL v11 = objc_msgSend(v1, sel_transportType) == (id)2;
  objc_msgSend(v1, sel_expectedTravelTime);
  uint64_t v12 = sub_24E864BF8();
  uint64_t v14 = v13;

  uint64_t v15 = type metadata accessor for DirectionsState();
  uint64_t v16 = v10 + *(int *)(v15 + 24);
  uint64_t v17 = sub_24E8616F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v16, v22, v17);
  *(unsigned char *)uint64_t v10 = v11;
  *(void *)(v10 + 8) = v12;
  *(void *)(v10 + 16) = v14;
  *(unsigned char *)(v10 + 24) = 0;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 0, 1, v15);
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_24E5EB35C()
{
  uint64_t v25 = v0;
  id v1 = *(void **)(v0 + 320);
  swift_release();
  swift_willThrow();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24E862148();
  os_log_type_t v5 = sub_24E864248();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v24 = v8;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    *(void *)(v0 + 152) = sub_24E55B02C(0xD000000000000020, 0x800000024E8733A0, &v24);
    sub_24E8643A8();
    *(_WORD *)(v6 + 12) = 2112;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v10 = *(void **)(v0 + 312);
    double v9 = *(void **)(v0 + 320);
    uint64_t v21 = *(void **)(v0 + 304);
    uint64_t v22 = *(void **)(v0 + 296);
    uint64_t v23 = *(void **)(v0 + 288);
    id v11 = v9;
    swift_release();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 160) = v12;
    sub_24E8643A8();
    *uint64_t v7 = v12;

    _os_log_impl(&dword_24E553000, v4, v5, "CompositeAppViewModel: didReceive %s %@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    MEMORY[0x2533435F0](v6, -1, -1);
  }
  else
  {
    uint64_t v14 = *(void **)(v0 + 312);
    uint64_t v13 = *(void **)(v0 + 320);
    uint64_t v16 = *(void **)(v0 + 296);
    uint64_t v15 = *(void **)(v0 + 304);
  }
  uint64_t v17 = *(void *)(v0 + 192);
  uint64_t v18 = type metadata accessor for DirectionsState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_24E5EB6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v176 = a2;
  uint64_t v3 = sub_24E861248();
  uint64_t v4 = *(NSObject **)(v3 - 8);
  uint64_t v173 = v3;
  os_log_t v174 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  os_log_t v165 = (os_log_t)((char *)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  double v9 = (char *)&v153 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  char v167 = (char *)&v153 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  char v162 = (char *)&v153 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v159 = (char *)&v153 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v161 = (char *)&v153 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v157 = (char *)&v153 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v153 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2FA8);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)&v153 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v166 = (char *)&v153 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v164 = (uint64_t)&v153 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v160 = (char *)&v153 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v153 - v33;
  MEMORY[0x270FA5388](v32);
  os_log_type_t v36 = (char *)&v153 - v35;
  uint64_t v177 = type metadata accessor for DirectionsState();
  uint64_t v175 = *(void *)(v177 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v177);
  uint64_t v39 = (char *)&v153 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x270FA5388](v37);
  uint64_t v158 = (uint64_t)&v153 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v169 = (uint64_t)&v153 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v156 = (uint64_t)&v153 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v168 = (uint64_t)&v153 - v47;
  MEMORY[0x270FA5388](v46);
  uint64_t v172 = (objc_class *)((char *)&v153 - v48);
  uint64_t v49 = sub_24E863FB8();
  uint64_t v50 = sub_24E863FA8();
  uint64_t v178 = v49;
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24E576EA0(a1, (uint64_t)v36, &qword_2698F2FA8);
  uint64_t v170 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48);
  uint64_t v171 = v175 + 48;
  if (v170(v36, 1, v177) == 1)
  {
    sub_24E563530((uint64_t)v36, &qword_2698F2FA8);
    if (qword_2698F0E60 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_24E862168();
    __swift_project_value_buffer(v51, (uint64_t)qword_269906D88);
    uint64_t v52 = v173;
    os_log_t v53 = v174;
    Class isa = v174[2].isa;
    ((void (*)(char *, uint64_t, uint64_t))isa)(v9, v176, v173);
    int64_t v55 = sub_24E862148();
    int v56 = sub_24E864268();
    if (os_log_type_enabled(v55, (os_log_type_t)v56))
    {
      LODWORD(v168) = v56;
      uint64_t v172 = isa;
      uint64_t v57 = swift_slowAlloc();
      char v167 = (char *)swift_slowAlloc();
      v180[0] = (uint64_t)v167;
      *(_DWORD *)uint64_t v57 = 136315651;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v159 = (char *)v50;
      swift_release();
      uint64_t v179 = sub_24E55B02C(0xD000000000000019, 0x800000024E873320, v180);
      sub_24E8643A8();
      *(_WORD *)(v57 + 12) = 2160;
      uint64_t v179 = 1752392040;
      sub_24E8643A8();
      *(_WORD *)(v57 + 22) = 2081;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v58 = sub_24E8611D8();
      unint64_t v60 = v59;
      swift_release();
      uint64_t v179 = sub_24E55B02C(v58, v60, v180);
      sub_24E8643A8();
      swift_bridgeObjectRelease();
      uint64_t v52 = v173;
      Class v61 = v174[1].isa;
      ((void (*)(char *, uint64_t))v61)(v9, v173);
      _os_log_impl(&dword_24E553000, v55, (os_log_type_t)v168, "Repository: %s - Remove Direction - %{private,mask.hash}s", (uint8_t *)v57, 0x20u);
      uint64_t v62 = (uint64_t)v167;
      swift_arrayDestroy();
      MEMORY[0x2533435F0](v62, -1, -1);
      MEMORY[0x2533435F0](v57, -1, -1);

      Class isa = v172;
    }
    else
    {
      Class v61 = v53[1].isa;
      ((void (*)(char *, uint64_t))v61)(v9, v52);
    }
    uint64_t v73 = (uint64_t)v165;
    ((void (*)(os_log_t, uint64_t, uint64_t))isa)(v165, v176, v52);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v175 + 56))(v25, 1, 1, v177);
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v74 = v180[0];
    if (v170(v25, 1, v177) == 1)
    {
      sub_24E563530((uint64_t)v25, &qword_2698F2FA8);
      uint64_t v75 = v164;
      sub_24E60A050(v73, v164);
      ((void (*)(uint64_t, uint64_t))v61)(v73, v52);
      sub_24E563530(v75, &qword_2698F2FA8);
    }
    else
    {
      uint64_t v76 = v169;
      sub_24E612618((uint64_t)v25, v169, (uint64_t (*)(void))type metadata accessor for DirectionsState);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v179 = v74;
      sub_24E61DBB8(v76, v73, isUniquelyReferenced_nonNull_native);
      v180[0] = v179;
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t))v61)(v73, v52);
    }
    uint64_t v78 = v180[0];
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v179 = v78;
    swift_retain();
    sub_24E862208();
    sub_24E5DE6AC();
    swift_release();
  }
  else
  {
    sub_24E612618((uint64_t)v36, (uint64_t)v172, (uint64_t (*)(void))type metadata accessor for DirectionsState);
    uint64_t v63 = v173;
    Class v64 = v174[2].isa;
    os_log_t v165 = v174 + 2;
    uint64_t v163 = (void (*)(char *, uint64_t, uint64_t))v64;
    ((void (*)(char *, uint64_t, uint64_t))v64)(v21, v176, v173);
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v65 = v180[0];
    if (*(void *)(v180[0] + 16))
    {
      unint64_t v66 = sub_24E7C9D20((uint64_t)v21);
      uint64_t v67 = v177;
      if (v68)
      {
        uint64_t v69 = v175;
        sub_24E6125B0(*(void *)(v65 + 56) + *(void *)(v175 + 72) * v66, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for DirectionsState);
        uint64_t v70 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56);
        int v71 = v34;
        uint64_t v72 = 0;
      }
      else
      {
        uint64_t v70 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v175 + 56);
        int v71 = v34;
        uint64_t v72 = 1;
      }
    }
    else
    {
      uint64_t v70 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v175 + 56);
      int v71 = v34;
      uint64_t v72 = 1;
      uint64_t v67 = v177;
    }
    uint64_t v154 = v70;
    v70((uint64_t)v71, v72, 1, v67);
    swift_bridgeObjectRelease();
    Class v79 = v174[1].isa;
    uint64_t v80 = v21;
    char v81 = v174 + 1;
    ((void (*)(char *, uint64_t))v79)(v80, v63);
    if (v170(v34, 1, v67) == 1)
    {
      sub_24E563530((uint64_t)v34, &qword_2698F2FA8);
      if (qword_2698F0E60 != -1) {
        swift_once();
      }
      uint64_t v82 = sub_24E862168();
      __swift_project_value_buffer(v82, (uint64_t)qword_269906D88);
      uint64_t v83 = v162;
      v163(v162, v176, v63);
      sub_24E6125B0((uint64_t)v172, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for DirectionsState);
      uint64_t v84 = sub_24E862148();
      int v85 = sub_24E864268();
      if (os_log_type_enabled(v84, (os_log_type_t)v85))
      {
        LODWORD(v168) = v85;
        uint64_t v155 = v79;
        os_log_t v174 = v81;
        uint64_t v86 = swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        v180[0] = v87;
        *(_DWORD *)uint64_t v86 = 136315907;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v159 = (char *)v50;
        swift_release();
        uint64_t v179 = sub_24E55B02C(0xD000000000000019, 0x800000024E873320, v180);
        sub_24E8643A8();
        *(_WORD *)(v86 + 12) = 2160;
        uint64_t v179 = 1752392040;
        sub_24E8643A8();
        *(_WORD *)(v86 + 22) = 2081;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        double v88 = v162;
        uint64_t v89 = sub_24E8611D8();
        unint64_t v91 = v90;
        swift_release();
        uint64_t v179 = sub_24E55B02C(v89, v91, v180);
        sub_24E8643A8();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v155)(v88, v173);
        *(_WORD *)(v86 + 32) = 2080;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        sub_24E6125B0((uint64_t)v39, v169, (uint64_t (*)(void))type metadata accessor for DirectionsState);
        uint64_t v92 = v177;
        uint64_t v93 = sub_24E863CC8();
        unint64_t v95 = v94;
        swift_release();
        uint64_t v179 = sub_24E55B02C(v93, v95, v180);
        uint64_t v67 = v92;
        sub_24E8643A8();
        swift_bridgeObjectRelease();
        sub_24E612680((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for DirectionsState);
        _os_log_impl(&dword_24E553000, v84, (os_log_type_t)v168, "Repository: %s - Add Direction - %{private,mask.hash}s %s", (uint8_t *)v86, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x2533435F0](v87, -1, -1);
        MEMORY[0x2533435F0](v86, -1, -1);

        uint64_t v63 = v173;
        Class v79 = v155;
      }
      else
      {
        ((void (*)(char *, uint64_t))v79)(v83, v63);
        sub_24E612680((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for DirectionsState);
      }
      v163(v167, v176, v63);
      uint64_t v116 = (uint64_t)v172;
      uint64_t v117 = (uint64_t)v166;
      sub_24E6125B0((uint64_t)v172, (uint64_t)v166, (uint64_t (*)(void))type metadata accessor for DirectionsState);
      v154(v117, 0, 1, v67);
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_24E8621F8();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v118 = v180[0];
      uint64_t v119 = (uint64_t)v166;
      if (v170(v166, 1, v67) == 1)
      {
        sub_24E563530(v119, &qword_2698F2FA8);
        uint64_t v120 = v164;
        uint64_t v121 = (uint64_t)v167;
        sub_24E60A050((uint64_t)v167, v164);
        ((void (*)(uint64_t, uint64_t))v79)(v121, v63);
        sub_24E563530(v120, &qword_2698F2FA8);
      }
      else
      {
        uint64_t v139 = v169;
        sub_24E612618(v119, v169, (uint64_t (*)(void))type metadata accessor for DirectionsState);
        char v140 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v179 = v118;
        uint64_t v141 = (uint64_t)v167;
        sub_24E61DBB8(v139, (uint64_t)v167, v140);
        v180[0] = v179;
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t))v79)(v141, v63);
      }
      uint64_t v142 = v180[0];
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v179 = v142;
      swift_retain();
      sub_24E862208();
      sub_24E5DE6AC();
      swift_release();
      uint64_t v138 = v116;
    }
    else
    {
      sub_24E612618((uint64_t)v34, v168, (uint64_t (*)(void))type metadata accessor for DirectionsState);
      char v96 = sub_24E861618();
      uint64_t v155 = v79;
      if (v96)
      {
        if (qword_2698F0E60 != -1) {
          swift_once();
        }
        uint64_t v97 = sub_24E862168();
        __swift_project_value_buffer(v97, (uint64_t)qword_269906D88);
        unint64_t v98 = v157;
        v163(v157, v176, v63);
        uint64_t v99 = (uint64_t)v172;
        uint64_t v100 = v156;
        sub_24E6125B0((uint64_t)v172, v156, (uint64_t (*)(void))type metadata accessor for DirectionsState);
        uint64_t v101 = sub_24E862148();
        os_log_type_t v102 = sub_24E864268();
        if (os_log_type_enabled(v101, v102))
        {
          os_log_t v174 = v101;
          uint64_t v103 = swift_slowAlloc();
          char v167 = (char *)swift_slowAlloc();
          v180[0] = (uint64_t)v167;
          *(_DWORD *)uint64_t v103 = 136315907;
          sub_24E863FA8();
          sub_24E863F18();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v159 = (char *)v50;
          swift_release();
          uint64_t v179 = sub_24E55B02C(0xD000000000000019, 0x800000024E873320, v180);
          sub_24E8643A8();
          *(_WORD *)(v103 + 12) = 2160;
          uint64_t v179 = 1752392040;
          sub_24E8643A8();
          *(_WORD *)(v103 + 22) = 2081;
          sub_24E863FA8();
          sub_24E863F18();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          os_log_type_t v104 = v157;
          uint64_t v105 = sub_24E8611D8();
          unint64_t v107 = v106;
          swift_release();
          uint64_t v179 = sub_24E55B02C(v105, v107, v180);
          sub_24E8643A8();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v155)(v104, v173);
          *(_WORD *)(v103 + 32) = 2080;
          sub_24E863FA8();
          sub_24E863F18();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v108 = v156;
          sub_24E6125B0(v156, v169, (uint64_t (*)(void))type metadata accessor for DirectionsState);
          uint64_t v109 = v177;
          uint64_t v110 = sub_24E863CC8();
          unint64_t v112 = v111;
          swift_release();
          uint64_t v179 = sub_24E55B02C(v110, v112, v180);
          uint64_t v67 = v109;
          sub_24E8643A8();
          swift_bridgeObjectRelease();
          sub_24E612680(v108, (uint64_t (*)(void))type metadata accessor for DirectionsState);
          os_log_t v113 = v174;
          _os_log_impl(&dword_24E553000, v174, v102, "Repository: %s - Replace Existing Directions - %{private,mask.hash}s %s", (uint8_t *)v103, 0x2Au);
          uint64_t v114 = (uint64_t)v167;
          swift_arrayDestroy();
          MEMORY[0x2533435F0](v114, -1, -1);
          MEMORY[0x2533435F0](v103, -1, -1);

          uint64_t v99 = (uint64_t)v172;
          uint64_t v63 = v173;
          uint64_t v115 = v155;
        }
        else
        {
          uint64_t v115 = v155;
          ((void (*)(char *, uint64_t))v155)(v98, v63);
          sub_24E612680(v100, (uint64_t (*)(void))type metadata accessor for DirectionsState);
        }
        v163(v161, v176, v63);
        uint64_t v143 = (uint64_t)v160;
        sub_24E6125B0(v99, (uint64_t)v160, (uint64_t (*)(void))type metadata accessor for DirectionsState);
        v154(v143, 0, 1, v67);
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_getKeyPath();
        swift_getKeyPath();
        sub_24E8621F8();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v144 = v180[0];
        uint64_t v145 = (uint64_t)v160;
        if (v170(v160, 1, v67) == 1)
        {
          sub_24E563530(v145, &qword_2698F2FA8);
          uint64_t v146 = v164;
          uint64_t v147 = (uint64_t)v161;
          sub_24E60A050((uint64_t)v161, v164);
          ((void (*)(uint64_t, uint64_t))v115)(v147, v63);
          sub_24E563530(v146, &qword_2698F2FA8);
        }
        else
        {
          uint64_t v148 = v169;
          sub_24E612618(v145, v169, (uint64_t (*)(void))type metadata accessor for DirectionsState);
          char v149 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v179 = v144;
          uint64_t v150 = (uint64_t)v161;
          sub_24E61DBB8(v148, (uint64_t)v161, v149);
          v180[0] = v179;
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t, uint64_t))v115)(v150, v63);
        }
        uint64_t v151 = v180[0];
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v179 = v151;
        swift_retain();
        sub_24E862208();
        sub_24E5DE6AC();
        swift_release();
        sub_24E612680(v168, (uint64_t (*)(void))type metadata accessor for DirectionsState);
        uint64_t v138 = v99;
      }
      else
      {
        if (qword_2698F0E60 != -1) {
          swift_once();
        }
        uint64_t v122 = sub_24E862168();
        __swift_project_value_buffer(v122, (uint64_t)qword_269906D88);
        uint64_t v123 = v159;
        v163(v159, v176, v63);
        uint64_t v124 = (uint64_t)v172;
        uint64_t v125 = v158;
        sub_24E6125B0((uint64_t)v172, v158, (uint64_t (*)(void))type metadata accessor for DirectionsState);
        uint64_t v126 = sub_24E862148();
        os_log_type_t v127 = sub_24E864268();
        if (os_log_type_enabled(v126, v127))
        {
          uint64_t v128 = swift_slowAlloc();
          uint64_t v176 = swift_slowAlloc();
          v180[0] = v176;
          *(_DWORD *)uint64_t v128 = 136315907;
          sub_24E863FA8();
          sub_24E863F18();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          os_log_t v174 = v81;
          swift_release();
          uint64_t v179 = sub_24E55B02C(0xD000000000000019, 0x800000024E873320, v180);
          sub_24E8643A8();
          *(_WORD *)(v128 + 12) = 2160;
          uint64_t v179 = 1752392040;
          sub_24E8643A8();
          *(_WORD *)(v128 + 22) = 2081;
          sub_24E863FA8();
          sub_24E863F18();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v129 = v159;
          uint64_t v130 = sub_24E8611D8();
          unint64_t v132 = v131;
          swift_release();
          uint64_t v179 = sub_24E55B02C(v130, v132, v180);
          sub_24E8643A8();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v155)(v129, v173);
          *(_WORD *)(v128 + 32) = 2080;
          sub_24E863FA8();
          sub_24E863F18();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v133 = v158;
          sub_24E6125B0(v158, v169, (uint64_t (*)(void))type metadata accessor for DirectionsState);
          uint64_t v134 = sub_24E863CC8();
          unint64_t v136 = v135;
          swift_release();
          uint64_t v179 = sub_24E55B02C(v134, v136, v180);
          sub_24E8643A8();
          swift_bridgeObjectRelease();
          sub_24E612680(v133, (uint64_t (*)(void))type metadata accessor for DirectionsState);
          _os_log_impl(&dword_24E553000, v126, v127, "Repository: %s - Not Replace Existing Directions - %{private,mask.hash}s %s", (uint8_t *)v128, 0x2Au);
          uint64_t v137 = v176;
          swift_arrayDestroy();
          MEMORY[0x2533435F0](v137, -1, -1);
          MEMORY[0x2533435F0](v128, -1, -1);

          sub_24E612680(v168, (uint64_t (*)(void))type metadata accessor for DirectionsState);
          uint64_t v138 = (uint64_t)v172;
        }
        else
        {

          sub_24E612680(v125, (uint64_t (*)(void))type metadata accessor for DirectionsState);
          ((void (*)(char *, uint64_t))v155)(v123, v63);
          sub_24E612680(v168, (uint64_t (*)(void))type metadata accessor for DirectionsState);
          uint64_t v138 = v124;
        }
      }
    }
    sub_24E612680(v138, (uint64_t (*)(void))type metadata accessor for DirectionsState);
  }
  return swift_release();
}

uint64_t sub_24E5ED57C()
{
  uint64_t v1 = v0;
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v2 = OBJC_IVAR____TtC12FindMyUICore10Repository_locationManager;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC12FindMyUICore10Repository_locationManager);
  if (!v3)
  {
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC12FindMyUICore10Repository_sourceBundleId + 8);
    if (v4)
    {
      uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC12FindMyUICore10Repository_sourceBundleId);
      uint64_t v6 = self;
      swift_bridgeObjectRetain();
      id v7 = objc_msgSend(v6, sel_mainBundle);
      id v8 = objc_msgSend(v7, sel_bundleIdentifier);

      if (v8)
      {
        uint64_t v9 = sub_24E863CA8();
        uint64_t v11 = v10;

        if (v5 == v9 && v4 == v11)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
        char v12 = sub_24E864988();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v12) {
          goto LABEL_11;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v15 = objc_allocWithZone((Class)type metadata accessor for Repository.MockDelegate());
      swift_bridgeObjectRetain();
      id v16 = objc_msgSend(v15, sel_init);
      sub_24E60F6EC(0, (unint64_t *)&qword_2698F3038);
      uint64_t v17 = (void *)sub_24E8642E8();
      id v18 = objc_allocWithZone(MEMORY[0x263F00A60]);
      uint64_t v19 = (void *)sub_24E863C68();
      swift_bridgeObjectRelease();
      id v20 = objc_msgSend(v18, sel_initWithEffectiveBundleIdentifier_delegate_onQueue_, v19, v16, v17);

      uint64_t v21 = *(void **)(v1 + v2);
      *(void *)(v1 + v2) = v20;

      uint64_t v22 = self;
      uint64_t v23 = (void *)sub_24E863C68();
      uint64_t v24 = (void *)sub_24E863C68();
      id v25 = objc_msgSend(v22, sel_newAssertionForBundleIdentifier_withReason_, v23, v24);

      uint64_t v14 = *(void **)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_effectiveBundleAssertion);
      *(void *)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_effectiveBundleAssertion) = v25;
LABEL_13:

      uint64_t v3 = *(void **)(v1 + v2);
      if (!v3) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
LABEL_11:
    id v13 = objc_msgSend(self, sel_sharedManager);
    uint64_t v14 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v13;
    goto LABEL_13;
  }
LABEL_14:
  objc_msgSend(v3, sel_requestWhenInUseAuthorization);
LABEL_15:

  return swift_release();
}

uint64_t sub_24E5ED880()
{
  v1[22] = v0;
  uint64_t v2 = sub_24E8616F8();
  v1[23] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[24] = v3;
  v1[25] = *(void *)(v3 + 64);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = sub_24E863FB8();
  v1[31] = sub_24E863FA8();
  uint64_t v5 = sub_24E863F18();
  v1[32] = v5;
  v1[33] = v4;
  return MEMORY[0x270FA2498](sub_24E5ED9A8, v5, v4);
}

uint64_t sub_24E5ED9A8()
{
  uint64_t v76 = v0;
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24E862168();
  v0[34] = __swift_project_value_buffer(v1, (uint64_t)qword_269906D88);
  uint64_t v2 = sub_24E862148();
  os_log_type_t v3 = sub_24E864268();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    v75[0] = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[21] = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v75);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v2, v3, "Repository: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v5, -1, -1);
    MEMORY[0x2533435F0](v4, -1, -1);
  }

  sub_24E8616E8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v6 = v0[22];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24E8621F8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = (void *)v0[2];
  v0[35] = v7;
  sub_24E5ED57C();
  id v8 = *(void **)(v6 + OBJC_IVAR____TtC12FindMyUICore10Repository_locationManager);
  v0[36] = v8;
  if (v8)
  {
    id v9 = v8;
    if (sub_24E64781C((uint64_t)objc_msgSend(v9, sel_authorizationStatus), (uint64_t)&unk_27005A558))
    {
      id v10 = v7;
      uint64_t v11 = sub_24E862148();
      os_log_type_t v12 = sub_24E864268();
      uint64_t v74 = v9;
      if (os_log_type_enabled(v11, v12))
      {
        os_log_type_t v71 = v12;
        uint64_t v13 = swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        v75[0] = v70;
        *(_DWORD *)uint64_t v13 = 136315394;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        v0[18] = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v75);
        sub_24E8643A8();
        *(_WORD *)(v13 + 12) = 2080;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v14 = v7;
        v0[19] = v7;
        id v15 = v10;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2EA8);
        uint64_t v16 = sub_24E863CC8();
        unint64_t v18 = v17;
        swift_release();
        v0[20] = sub_24E55B02C(v16, v18, v75);
        sub_24E8643A8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_24E553000, v11, v71, "Repository: %s - alreadyFetchedLocation: %s", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533435F0](v70, -1, -1);
        MEMORY[0x2533435F0](v13, -1, -1);

        id v9 = v74;
        if (!v14) {
          goto LABEL_40;
        }
      }
      else
      {

        if (!v7) {
          goto LABEL_40;
        }
      }
      id v29 = v10;
      if (sub_24E5F03A0(0.0))
      {
        swift_release();
        uint64_t v30 = sub_24E862148();
        os_log_type_t v31 = sub_24E864268();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = (uint8_t *)swift_slowAlloc();
          uint64_t v33 = swift_slowAlloc();
          v75[0] = v33;
          *(_DWORD *)uint64_t v32 = 136315138;
          sub_24E863FA8();
          sub_24E863F18();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v34 = v0[29];
          uint64_t v35 = v0[23];
          uint64_t v36 = v0[24];
          swift_release();
          v0[17] = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v75);
          sub_24E8643A8();
          _os_log_impl(&dword_24E553000, v30, v31, "Repository: %s - alreadyFetchedLocation: Accepted", v32, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2533435F0](v33, -1, -1);
          MEMORY[0x2533435F0](v32, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
        }
        else
        {
          uint64_t v66 = v0[29];
          uint64_t v67 = v0[23];
          uint64_t v68 = v0[24];

          (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v66, v67);
        }
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v69 = (uint64_t (*)(id))v0[1];
        return v69(v29);
      }

LABEL_40:
      uint64_t v40 = sub_24E862148();
      os_log_type_t v41 = sub_24E864268();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        v75[0] = v43;
        *(_DWORD *)uint64_t v42 = 136315138;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        v0[16] = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v75);
        sub_24E8643A8();
        _os_log_impl(&dword_24E553000, v40, v41, "Repository: %s - alreadyFetchedLocation: Not Accepted", v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533435F0](v43, -1, -1);
        MEMORY[0x2533435F0](v42, -1, -1);
      }

      uint64_t v44 = sub_24E862148();
      os_log_type_t v45 = sub_24E864268();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        v75[0] = v47;
        *(_DWORD *)uint64_t v46 = 136315138;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        v0[15] = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v75);
        sub_24E8643A8();
        _os_log_impl(&dword_24E553000, v44, v45, "Repository: %s - will listen to stream", v46, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533435F0](v47, -1, -1);
        MEMORY[0x2533435F0](v46, -1, -1);
      }

      uint64_t v48 = v0[29];
      uint64_t v50 = v0[27];
      uint64_t v49 = v0[28];
      uint64_t v52 = v0[25];
      uint64_t v51 = v0[26];
      uint64_t v54 = v0[23];
      uint64_t v53 = v0[24];
      sub_24E8616E8();
      uint64_t v55 = sub_24E864BF8();
      uint64_t v72 = v56;
      uint64_t v73 = v55;
      uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16);
      v57(v50, v49, v54);
      v57(v51, v48, v54);
      uint64_t v58 = *(unsigned __int8 *)(v53 + 80);
      uint64_t v59 = (v58 + 24) & ~v58;
      uint64_t v60 = (v52 + v58 + v59) & ~v58;
      uint64_t v61 = swift_allocObject();
      v0[37] = v61;
      *(void *)(v61 + 16) = v74;
      uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32);
      v62(v61 + v59, v50, v54);
      v62(v61 + v60, v51, v54);
      id v63 = v74;
      v0[38] = sub_24E863FA8();
      Class v64 = (void *)swift_task_alloc();
      v0[39] = v64;
      uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2EA8);
      v0[40] = v65;
      void *v64 = v0;
      v64[1] = sub_24E5EE90C;
      return MEMORY[0x270F28C80](v0 + 5, v73, v72, &unk_2698F30E8, v61, v65);
    }
    swift_release();
    uint64_t v23 = sub_24E862148();
    os_log_type_t v24 = sub_24E864248();
    if (os_log_type_enabled(v23, v24))
    {
      id v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v75[0] = v26;
      *(_DWORD *)id v25 = 136315138;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_release();
      v0[4] = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v75);
      sub_24E8643A8();
      _os_log_impl(&dword_24E553000, v23, v24, "Repository: %s - Not authorized", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533435F0](v26, -1, -1);
      MEMORY[0x2533435F0](v25, -1, -1);
    }
    else
    {
    }
    uint64_t v27 = v0[24];
    sub_24E60F740();
    swift_allocError();
    *uint64_t v37 = 0;
    swift_willThrow();
  }
  else
  {
    swift_release();
    uint64_t v19 = sub_24E862148();
    os_log_type_t v20 = sub_24E864248();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v75[0] = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_release();
      v0[3] = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v75);
      sub_24E8643A8();
      _os_log_impl(&dword_24E553000, v19, v20, "Repository: %s - Not Location Manager", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533435F0](v22, -1, -1);
      MEMORY[0x2533435F0](v21, -1, -1);
    }
    else
    {
    }
    uint64_t v27 = v0[24];
    sub_24E60F740();
    swift_allocError();
    unsigned char *v28 = 0;
    swift_willThrow();
  }

  (*(void (**)(void, void))(v27 + 8))(v0[29], v0[23]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = (uint64_t (*)(void))v0[1];
  return v38();
}

uint64_t sub_24E5EE90C()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_24E863F18();
  if (v0) {
    uint64_t v4 = sub_24E5EF520;
  }
  else {
    uint64_t v4 = sub_24E5EEA64;
  }
  return MEMORY[0x270FA2498](v4, v3, v2);
}

uint64_t sub_24E5EEA64()
{
  swift_release();
  swift_release();
  v0[42] = v0[5];
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[33];
  return MEMORY[0x270FA2498](sub_24E5EEAD8, v1, v2);
}

uint64_t sub_24E5EEAD8()
{
  uint64_t v55 = v0;
  uint64_t v1 = *(void **)(v0 + 336);
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_24E5EF3F8;
    return sub_24E6361EC((uint64_t)v2);
  }
  swift_release();
  uint64_t v5 = sub_24E862148();
  os_log_type_t v6 = sub_24E864248();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v54[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    *(void *)(v0 + 88) = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v54);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v5, v6, "Repository: %s - No Location from CL", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    MEMORY[0x2533435F0](v7, -1, -1);
  }

  id v9 = *(id *)(v0 + 280);
  id v10 = sub_24E862148();
  os_log_type_t v11 = sub_24E864268();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v54[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    *(void *)(v0 + 64) = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v54);
    sub_24E8643A8();
    *(_WORD *)(v12 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v14 = *(void **)(v0 + 280);
    *(void *)(v0 + 72) = v14;
    id v15 = v14;
    uint64_t v16 = sub_24E863CC8();
    unint64_t v18 = v17;
    swift_release();
    *(void *)(v0 + 80) = sub_24E55B02C(v16, v18, v54);
    sub_24E8643A8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24E553000, v10, v11, "Repository: %s - Will try alreadyFetchedLocation again: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v13, -1, -1);
    MEMORY[0x2533435F0](v12, -1, -1);

    uint64_t v19 = *(void **)(v0 + 280);
    if (!v19) {
      goto LABEL_23;
    }
  }
  else
  {
    os_log_type_t v20 = *(void **)(v0 + 280);

    uint64_t v19 = *(void **)(v0 + 280);
    if (!v19)
    {
LABEL_23:
      uint64_t v30 = sub_24E862148();
      os_log_type_t v31 = sub_24E864268();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        v54[0] = v33;
        *(_DWORD *)uint64_t v32 = 136315138;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        *(void *)(v0 + 48) = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v54);
        sub_24E8643A8();
        _os_log_impl(&dword_24E553000, v30, v31, "Repository: %s - alreadyFetchedLocation: Not Accepted", v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533435F0](v33, -1, -1);
        MEMORY[0x2533435F0](v32, -1, -1);
      }

      uint64_t v35 = *(void **)(v0 + 280);
      uint64_t v34 = *(void **)(v0 + 288);
      uint64_t v36 = *(void *)(v0 + 224);
      uint64_t v37 = *(void *)(v0 + 184);
      uint64_t v38 = *(void *)(v0 + 192);
      sub_24E60F740();
      swift_allocError();
      *uint64_t v39 = 0;
      swift_willThrow();

      uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v40(v36, v37);
      v40(*(void *)(v0 + 232), *(void *)(v0 + 184));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      os_log_type_t v41 = *(uint64_t (**)(void))(v0 + 8);
      return v41();
    }
  }
  id v21 = v19;
  if (!sub_24E5F03A0(3.0))
  {

    goto LABEL_23;
  }
  uint64_t v22 = sub_24E862148();
  os_log_type_t v23 = sub_24E864268();
  if (os_log_type_enabled(v22, v23))
  {
    os_log_type_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v54[0] = v25;
    *(_DWORD *)os_log_type_t v24 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v26 = *(void **)(v0 + 288);
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v51 = *(void **)(v0 + 280);
    uint64_t v52 = *(void *)(v0 + 224);
    uint64_t v28 = *(void *)(v0 + 184);
    uint64_t v27 = *(void *)(v0 + 192);
    swift_release();
    *(void *)(v0 + 56) = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v54);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v22, v23, "Repository: %s - alreadyFetchedLocation: Accepted", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v25, -1, -1);
    MEMORY[0x2533435F0](v24, -1, -1);

    id v29 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v29(v52, v28);
    v29(v53, v28);
  }
  else
  {
    uint64_t v43 = *(void **)(v0 + 280);
    uint64_t v42 = *(void **)(v0 + 288);
    uint64_t v44 = *(void *)(v0 + 224);
    uint64_t v45 = *(void *)(v0 + 232);
    uint64_t v46 = *(void *)(v0 + 184);
    uint64_t v47 = *(void *)(v0 + 192);

    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v48(v44, v46);
    v48(v45, v46);
  }
  uint64_t v49 = *(void *)(v0 + 280);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v50 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v50(v49);
}

uint64_t sub_24E5EF3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v6 = (void *)*v4;
  v6[44] = a3;
  v6[45] = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v7 = v6[32];
    uint64_t v8 = v6[33];
    id v9 = sub_24E5F02B0;
  }
  else
  {
    v6[46] = a2;
    uint64_t v7 = v6[32];
    uint64_t v8 = v6[33];
    id v9 = sub_24E5EFE1C;
  }
  return MEMORY[0x270FA2498](v9, v7, v8);
}

uint64_t sub_24E5EF520()
{
  uint64_t v1 = (void *)v0[41];
  swift_release();

  swift_release();
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[33];
  return MEMORY[0x270FA2498](sub_24E5EF598, v2, v3);
}

uint64_t sub_24E5EF598()
{
  uint64_t v52 = v0;
  swift_release();
  uint64_t v1 = sub_24E862148();
  os_log_type_t v2 = sub_24E864248();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    v51[0] = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    *(void *)(v0 + 88) = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v51);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v1, v2, "Repository: %s - No Location from CL", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v4, -1, -1);
    MEMORY[0x2533435F0](v3, -1, -1);
  }

  id v5 = *(id *)(v0 + 280);
  os_log_type_t v6 = sub_24E862148();
  os_log_type_t v7 = sub_24E864268();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v51[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    *(void *)(v0 + 64) = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v51);
    sub_24E8643A8();
    *(_WORD *)(v8 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    id v10 = *(void **)(v0 + 280);
    *(void *)(v0 + 72) = v10;
    id v11 = v10;
    uint64_t v12 = sub_24E863CC8();
    unint64_t v14 = v13;
    swift_release();
    *(void *)(v0 + 80) = sub_24E55B02C(v12, v14, v51);
    sub_24E8643A8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24E553000, v6, v7, "Repository: %s - Will try alreadyFetchedLocation again: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v9, -1, -1);
    MEMORY[0x2533435F0](v8, -1, -1);

    id v15 = *(void **)(v0 + 280);
    if (!v15) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v16 = *(void **)(v0 + 280);

    id v15 = *(void **)(v0 + 280);
    if (!v15)
    {
LABEL_19:
      uint64_t v26 = sub_24E862148();
      os_log_type_t v27 = sub_24E864268();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        v51[0] = v29;
        *(_DWORD *)uint64_t v28 = 136315138;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        *(void *)(v0 + 48) = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v51);
        sub_24E8643A8();
        _os_log_impl(&dword_24E553000, v26, v27, "Repository: %s - alreadyFetchedLocation: Not Accepted", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533435F0](v29, -1, -1);
        MEMORY[0x2533435F0](v28, -1, -1);
      }

      os_log_type_t v31 = *(void **)(v0 + 280);
      uint64_t v30 = *(void **)(v0 + 288);
      uint64_t v32 = *(void *)(v0 + 224);
      uint64_t v33 = *(void *)(v0 + 184);
      uint64_t v34 = *(void *)(v0 + 192);
      sub_24E60F740();
      swift_allocError();
      unsigned char *v35 = 0;
      swift_willThrow();

      uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v36(v32, v33);
      v36(*(void *)(v0 + 232), *(void *)(v0 + 184));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
      return v37();
    }
  }
  id v17 = v15;
  if (!sub_24E5F03A0(3.0))
  {

    goto LABEL_19;
  }
  unint64_t v18 = sub_24E862148();
  os_log_type_t v19 = sub_24E864268();
  if (os_log_type_enabled(v18, v19))
  {
    os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v51[0] = v21;
    *(_DWORD *)os_log_type_t v20 = 136315138;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v22 = *(void **)(v0 + 288);
    uint64_t v50 = *(void *)(v0 + 232);
    uint64_t v48 = *(void **)(v0 + 280);
    uint64_t v49 = *(void *)(v0 + 224);
    uint64_t v24 = *(void *)(v0 + 184);
    uint64_t v23 = *(void *)(v0 + 192);
    swift_release();
    *(void *)(v0 + 56) = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, v51);
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v18, v19, "Repository: %s - alreadyFetchedLocation: Accepted", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v21, -1, -1);
    MEMORY[0x2533435F0](v20, -1, -1);

    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v25(v49, v24);
    v25(v50, v24);
  }
  else
  {
    uint64_t v40 = *(void **)(v0 + 280);
    uint64_t v39 = *(void **)(v0 + 288);
    uint64_t v41 = *(void *)(v0 + 224);
    uint64_t v42 = *(void *)(v0 + 232);
    uint64_t v43 = *(void *)(v0 + 184);
    uint64_t v44 = *(void *)(v0 + 192);

    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v45(v41, v43);
    v45(v42, v43);
  }
  uint64_t v46 = *(void *)(v0 + 280);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v47 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v47(v46);
}

uint64_t sub_24E5EFE1C()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void **)(v0 + 352);
  swift_release();
  swift_bridgeObjectRelease();
  id v2 = v1;
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v3 = *(void **)(v0 + 352);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 96) = v1;
  id v4 = v3;
  swift_retain();
  sub_24E862208();
  sub_24E5DEA44();

  swift_release();
  id v5 = v4;
  os_log_type_t v6 = sub_24E862148();
  os_log_type_t v7 = sub_24E864268();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v35 = v7;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v36 = v34;
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    *(void *)(v0 + 104) = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, &v36);
    sub_24E8643A8();
    *(_WORD *)(v8 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v28 = *(void **)(v0 + 336);
    uint64_t v29 = *(void **)(v0 + 288);
    uint64_t v33 = *(void *)(v0 + 232);
    os_log_type_t v31 = *(void **)(v0 + 280);
    uint64_t v32 = *(void *)(v0 + 224);
    uint64_t v9 = *(void *)(v0 + 192);
    uint64_t v30 = *(void *)(v0 + 184);
    id v10 = *(id *)(v0 + 352);
    id v11 = objc_msgSend(v10, sel_description);
    uint64_t v12 = sub_24E863CA8();
    unint64_t v14 = v13;

    swift_release();
    *(void *)(v0 + 112) = sub_24E55B02C(v12, v14, &v36);
    sub_24E8643A8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24E553000, v6, v35, "Repository: %s - Finish with location: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v34, -1, -1);
    MEMORY[0x2533435F0](v8, -1, -1);

    id v15 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v15(v32, v30);
    v15(v33, v30);
  }
  else
  {
    uint64_t v16 = *(void **)(v0 + 352);
    id v17 = *(void **)(v0 + 336);
    os_log_type_t v19 = *(void **)(v0 + 280);
    unint64_t v18 = *(void **)(v0 + 288);
    uint64_t v21 = *(void *)(v0 + 224);
    uint64_t v20 = *(void *)(v0 + 232);
    uint64_t v22 = *(void *)(v0 + 184);
    uint64_t v23 = *(void *)(v0 + 192);

    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v24(v21, v22);
    v24(v20, v22);
  }
  uint64_t v25 = *(void *)(v0 + 352);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v26(v25);
}

uint64_t sub_24E5F02B0()
{
  uint64_t v1 = (void *)v0[42];
  uint64_t v3 = (void *)v0[35];
  id v2 = (void *)v0[36];
  uint64_t v4 = v0[28];
  uint64_t v5 = v0[23];
  uint64_t v6 = v0[24];
  swift_release();

  os_log_type_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(v0[29], v0[23]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

BOOL sub_24E5F03A0(double a1)
{
  uint64_t v3 = sub_24E8616F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v1, sel_horizontalAccuracy);
  double v8 = v7;
  double v9 = a1 * 170.0 + 30.0;
  if (a1 < 0.0) {
    double v9 = 30.0;
  }
  if (a1 <= 1.0) {
    double v10 = v9;
  }
  else {
    double v10 = 200.0;
  }
  objc_msgSend(v1, sel_horizontalAccuracy, v9);
  double v12 = v11;
  id v13 = objc_msgSend(v1, sel_timestamp);
  sub_24E8616D8();

  sub_24E861598();
  double v15 = v14;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_24E862168();
  __swift_project_value_buffer(v16, (uint64_t)qword_269906D88);
  id v17 = sub_24E862148();
  os_log_type_t v18 = sub_24E864238();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v31 = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v30 = sub_24E55B02C(0xD00000000000003FLL, 0x800000024E873410, &v31);
    sub_24E8643A8();
    *(_WORD *)(v19 + 12) = 1024;
    LODWORD(v30) = v15 < 300.0;
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v17, v18, "CompositeAppViewModel: %s - isAgeOk: %{BOOL}d", (uint8_t *)v19, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v20, -1, -1);
    MEMORY[0x2533435F0](v19, -1, -1);
  }

  uint64_t v21 = sub_24E862148();
  os_log_type_t v22 = sub_24E864238();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v31 = v24;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v30 = sub_24E55B02C(0xD00000000000003FLL, 0x800000024E873410, &v31);
    sub_24E8643A8();
    *(_WORD *)(v23 + 12) = 1024;
    LODWORD(v30) = v8 < 30.0;
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v21, v22, "CompositeAppViewModel: %s - isAccuracy: %{BOOL}d", (uint8_t *)v23, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v24, -1, -1);
    MEMORY[0x2533435F0](v23, -1, -1);
  }

  uint64_t v25 = sub_24E862148();
  os_log_type_t v26 = sub_24E864238();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v31 = v28;
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v30 = sub_24E55B02C(0xD00000000000003FLL, 0x800000024E873410, &v31);
    sub_24E8643A8();
    *(_WORD *)(v27 + 12) = 1024;
    LODWORD(v30) = v12 < v10;
    sub_24E8643A8();
    _os_log_impl(&dword_24E553000, v25, v26, "CompositeAppViewModel: %s - isAccuracyOkConsideringTimePassed: %{BOOL}d", (uint8_t *)v27, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v28, -1, -1);
    MEMORY[0x2533435F0](v27, -1, -1);
  }

  if (v15 >= 300.0) {
    return 0;
  }
  if (v12 < v10) {
    return 1;
  }
  return v8 < 30.0;
}

uint64_t sub_24E5F08DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F30F0);
  v4[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F30F8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  uint64_t v5 = sub_24E861838();
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v6 = sub_24E861858();
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3100);
  v4[16] = v7;
  v4[17] = *(void *)(v7 - 8);
  v4[18] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3108);
  v4[19] = v8;
  v4[20] = *(void *)(v8 - 8);
  v4[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5F0B30, 0, 0);
}

uint64_t sub_24E5F0B30()
{
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v12 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v13 = *(void *)(v0 + 48);
  uint64_t v14 = *(void *)(v0 + 152);
  long long v15 = *(_OWORD *)(v0 + 32);
  (*(void (**)(void, void, void))(*(void *)(v0 + 136) + 104))(*(void *)(v0 + 144), *MEMORY[0x263F8F580], *(void *)(v0 + 128));
  sub_24E864058();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, *MEMORY[0x263F8EF98], v6);
  sub_24E864298();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v7, v1, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v7 + *(int *)(v13 + 52), v12, v16);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 176) = v8;
  *(_OWORD *)(v8 + 16) = v15;
  id v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2698F3120 + dword_2698F3120);
  double v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v9;
  *double v9 = v0;
  v9[1] = sub_24E5F0D40;
  uint64_t v10 = *(void *)(v0 + 72);
  return v17(v10, (uint64_t)&unk_2698F3118, v8);
}

uint64_t sub_24E5F0D40()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_24E563530(v1, &qword_2698F30F0);
  return MEMORY[0x270FA2498](sub_24E5F0E7C, 0, 0);
}

uint64_t sub_24E5F0E7C()
{
  uint64_t v1 = v0[8];
  sub_24E576EA0(v0[9], v1, &qword_2698F30F8);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3128);
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t v4 = v0[20];
  uint64_t v17 = v0[21];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[15];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[8];
  uint64_t v10 = v0[9];
  double v11 = (uint64_t *)v0[2];
  if (v3 == 1)
  {
    sub_24E563530(v0[9], &qword_2698F30F8);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v5);
    sub_24E563530(v9, &qword_2698F30F8);
    *double v11 = 0;
  }
  else
  {
    uint64_t v12 = v9 + *(int *)(v2 + 48);
    uint64_t v13 = sub_24E861868();
    sub_24E563530(v10, &qword_2698F30F8);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v5);
    *double v11 = v13;
    uint64_t v14 = sub_24E861878();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_24E5F10A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3278);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24E863FE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v10 + v9, (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_24E5F1B0C((uint64_t)v7, (uint64_t)&unk_2698F3288, v10);
  return swift_release();
}

uint64_t sub_24E5F126C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  uint64_t v5 = sub_24E864618();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  uint64_t v6 = sub_24E864638();
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3290);
  v4[16] = v7;
  v4[17] = *(void *)(v7 - 8);
  v4[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5F13F8, 0, 0);
}

uint64_t sub_24E5F13F8()
{
  sub_24E864098();
  *(void *)(v0 + 152) = 0;
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 80);
  *(void *)(v0 + 56) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3278);
  sub_24E864018();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_24E864628();
  *(_OWORD *)(v0 + 40) = xmmword_24E868330;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  uint64_t v7 = sub_24E609BE8(&qword_2698F3298, MEMORY[0x263F8F710]);
  sub_24E8649E8();
  sub_24E609BE8(&qword_2698F32A0, MEMORY[0x263F8F6D8]);
  sub_24E864648();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  *(void *)(v0 + 160) = v8;
  *(void *)(v0 + 168) = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v4, v5);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_24E5F1678;
  uint64_t v11 = *(void *)(v0 + 96);
  uint64_t v10 = *(void *)(v0 + 104);
  return MEMORY[0x270FA2380](v11, v0 + 16, v10, v7);
}

uint64_t sub_24E5F1678()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 160))(*(void *)(v2 + 96), *(void *)(v2 + 72));
    uint64_t v3 = sub_24E5F1A68;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 112);
    uint64_t v4 = *(void *)(v2 + 120);
    uint64_t v6 = *(void *)(v2 + 104);
    (*(void (**)(void, void))(v2 + 160))(*(void *)(v2 + 96), *(void *)(v2 + 72));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_24E5F17D0;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24E5F17D0()
{
  uint64_t v1 = *(void *)(v0 + 184);
  double v2 = *(double *)(v0 + 152);
  sub_24E864098();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    *(double *)(v0 + 152) = v2 + 1.0;
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v9 = *(void *)(v0 + 72);
    uint64_t v10 = *(void *)(v0 + 80);
    *(double *)(v0 + 56) = v2 + 1.0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3278);
    sub_24E864018();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    sub_24E864628();
    *(_OWORD *)(v0 + 40) = xmmword_24E868330;
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 16) = 0;
    *(unsigned char *)(v0 + 32) = 1;
    uint64_t v11 = sub_24E609BE8(&qword_2698F3298, MEMORY[0x263F8F710]);
    sub_24E8649E8();
    sub_24E609BE8(&qword_2698F32A0, MEMORY[0x263F8F6D8]);
    sub_24E864648();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    *(void *)(v0 + 160) = v12;
    *(void *)(v0 + 168) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v12(v8, v9);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v13;
    void *v13 = v0;
    v13[1] = sub_24E5F1678;
    uint64_t v15 = *(void *)(v0 + 96);
    uint64_t v14 = *(void *)(v0 + 104);
    return MEMORY[0x270FA2380](v15, v0 + 16, v14, v11);
  }
}

uint64_t sub_24E5F1A68()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E5F1B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24E863FE8();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_24E863FD8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_24E563530(a1, (uint64_t *)&unk_2698F7FE0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24E863F18();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_24E5F1C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  uint64_t v4 = sub_24E8616F8();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3128);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5F1DB4, 0, 0);
}

uint64_t sub_24E5F1DB4()
{
  uint64_t v41 = v0;
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[4];
  uint64_t v3 = v0[13];
  double v2 = (void *)v0[14];
  uint64_t v4 = v0[10];
  uint64_t v5 = sub_24E862168();
  __swift_project_value_buffer(v5, (uint64_t)qword_269906D88);
  uint64_t v6 = *(int *)(v4 + 48);
  uint64_t v7 = (char *)v2 + v6;
  uint64_t v8 = (char *)v1 + v6;
  *double v2 = *v1;
  uint64_t v9 = sub_24E861878();
  uint64_t v37 = v8;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  uint64_t v39 = *(void *)(v9 - 8);
  v38(v7, v8, v9);
  sub_24E612440((uint64_t)v2, v3, &qword_2698F3128);
  uint64_t v10 = sub_24E862148();
  os_log_type_t v11 = sub_24E864238();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = (uint64_t *)v0[13];
  if (v12)
  {
    os_log_type_t type = v11;
    uint64_t v14 = (void *)v0[11];
    uint64_t v34 = v0[12];
    uint64_t v15 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v40 = v35;
    *(_DWORD *)uint64_t v15 = 136315394;
    v0[2] = sub_24E55B02C(0xD000000000000014, 0x800000024E8733F0, &v40);
    sub_24E8643A8();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v16 = *(int *)(v4 + 48);
    uint64_t v17 = v34 + v16;
    uint64_t v18 = *v13;
    v38((char *)(v34 + v16), (char *)v13 + v16, v9);
    uint64_t v19 = (char *)v14 + *(int *)(v4 + 48);
    void *v14 = v18;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v19, v17, v9);
    uint64_t v20 = sub_24E863CC8();
    v0[3] = sub_24E55B02C(v20, v21, &v40);
    sub_24E8643A8();
    swift_bridgeObjectRelease();
    sub_24E563530((uint64_t)v13, &qword_2698F3128);
    _os_log_impl(&dword_24E553000, v10, type, "Repository: %s - proposed location: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v35, -1, -1);
    MEMORY[0x2533435F0](v15, -1, -1);
  }
  else
  {
    sub_24E563530(v0[13], &qword_2698F3128);
  }

  os_log_type_t v22 = (void *)v0[12];
  uint64_t v24 = v0[8];
  uint64_t v23 = v0[9];
  uint64_t v25 = v0[7];
  os_log_type_t v26 = (void *)v0[4];
  sub_24E8616E8();
  sub_24E861598();
  double v28 = v27;
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  uint64_t v29 = (char *)v22 + *(int *)(v4 + 48);
  *os_log_type_t v22 = *v26;
  v38(v29, v37, v9);
  uint64_t v30 = sub_24E861868();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v9);
  if (v30)
  {
    id v31 = (id)v30;
    LOBYTE(v30) = sub_24E5F03A0(v28 / 3.0);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(uint64_t))v0[1];
  return v32(v30 & 1);
}

uint64_t sub_24E5F21E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3128);
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  v4[12] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3130);
  v4[13] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3138);
  v4[14] = v6;
  v4[15] = *(void *)(v6 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F30F8);
  v4[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3140);
  v4[20] = swift_task_alloc();
  uint64_t v7 = sub_24E861858();
  v4[21] = v7;
  v4[22] = *(void *)(v7 - 8);
  v4[23] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3108);
  v4[24] = v8;
  v4[25] = *(void *)(v8 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F30F0);
  v4[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E5F24B0, 0, 0);
}

uint64_t sub_24E5F24B0()
{
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v5 = v0[23];
  uint64_t v6 = v0[24];
  uint64_t v8 = v0[21];
  uint64_t v7 = v0[22];
  uint64_t v9 = v0[20];
  sub_24E576EA0(v0[8], v1, &qword_2698F30F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v1 + *(int *)(v2 + 52), v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v9, 1, 1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3148);
  swift_allocObject();
  uint64_t v10 = sub_24E5D0EA0(v3, v5, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F3150);
  uint64_t inited = swift_initStackObject();
  v0[29] = inited;
  *(void *)(inited + 16) = v10;
  sub_24E563530(v1, &qword_2698F30F0);
  BOOL v12 = (void *)swift_task_alloc();
  v0[30] = (uint64_t)v12;
  *BOOL v12 = v0;
  v12[1] = sub_24E5F2698;
  uint64_t v13 = v0[13];
  return MEMORY[0x270FA2338](v13, &unk_2698F3160);
}

uint64_t sub_24E5F2698()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E5F2C18;
  }
  else {
    uint64_t v2 = sub_24E5F27AC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E5F27AC()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = (uint64_t *)v0[13];
  int v3 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v0[15] + 48))(v2, 1, v1);
  uint64_t v4 = v0[19];
  if (v3 == 1)
  {
    uint64_t v6 = v0[9];
    uint64_t v5 = v0[10];
    sub_24E563530((uint64_t)v2, &qword_2698F3130);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v7(v4, 1, 1, v6);
  }
  else
  {
    uint64_t v9 = (void *)v0[17];
    uint64_t v8 = (uint64_t *)v0[18];
    uint64_t v10 = v0[9];
    uint64_t v36 = v0[10];
    uint64_t v33 = (void *)v0[16];
    uint64_t v11 = *(int *)(v1 + 48);
    BOOL v12 = (char *)v8 + v11;
    uint64_t v13 = *(int *)(v1 + 64);
    uint64_t v29 = (uint64_t)v8 + v13;
    uint64_t v30 = (void *)v0[19];
    uint64_t v34 = (char *)v2 + v11;
    uint64_t v14 = (uint64_t)v2 + v13;
    uint64_t v15 = *v2;
    *uint64_t v8 = *v2;
    uint64_t v16 = sub_24E861878();
    uint64_t v17 = *(void *)(v16 - 8);
    id v31 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v31(v12, v34, v16);
    sub_24E612440(v14, v29, (uint64_t *)&unk_2698F8860);
    uint64_t v32 = (char *)v30 + *(int *)(v10 + 48);
    uint64_t v35 = (char *)v9 + *(int *)(v1 + 48);
    uint64_t v18 = (uint64_t)v9 + *(int *)(v1 + 64);
    *uint64_t v9 = v15;
    (*(void (**)(void))(v17 + 16))();
    sub_24E576EA0(v29, v18, (uint64_t *)&unk_2698F8860);
    *uint64_t v30 = v15;
    uint64_t v19 = (char *)v33 + *(int *)(v1 + 48);
    uint64_t v20 = (uint64_t)v33 + *(int *)(v1 + 64);
    void *v33 = v15;
    v31(v19, v12, v16);
    sub_24E612440(v29, v20, (uint64_t *)&unk_2698F8860);
    v31(v32, v19, v16);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
    v7((uint64_t)v30, 0, 1, v10);
    sub_24E563530(v20, (uint64_t *)&unk_2698F8860);
    sub_24E563530(v18, (uint64_t *)&unk_2698F8860);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v35, v16);
  }
  v0[32] = v7;
  uint64_t v21 = v0[19];
  uint64_t v22 = v0[9];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[10] + 48))(v21, 1, v22) == 1)
  {
    uint64_t v23 = v0[5];
    swift_setDeallocating();
    sub_24E5CBFFC();
    swift_release();
    v7(v23, 1, 1, v22);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    return v24();
  }
  else
  {
    os_log_type_t v26 = (int *)v0[6];
    sub_24E612440(v21, v0[11], &qword_2698F3128);
    uint64_t v37 = (uint64_t (*)(uint64_t))((char *)v26 + *v26);
    double v27 = (void *)swift_task_alloc();
    v0[33] = v27;
    *double v27 = v0;
    v27[1] = sub_24E5F2D10;
    uint64_t v28 = v0[11];
    return v37(v28);
  }
}

uint64_t sub_24E5F2C18()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E5F2D10(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 272) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_24E563530(*(void *)(v4 + 88), &qword_2698F3128);
    swift_release();
    uint64_t v5 = sub_24E5F3078;
  }
  else
  {
    *(unsigned char *)(v4 + 280) = a1 & 1;
    uint64_t v5 = sub_24E5F2E54;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E5F2E54()
{
  if (*(unsigned char *)(v0 + 280) == 1)
  {
    uint64_t v1 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 256);
    uint64_t v2 = *(void *)(v0 + 88);
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 40);
    swift_setDeallocating();
    sub_24E5CBFFC();
    swift_release();
    sub_24E612440(v2, v4, &qword_2698F3128);
    v1(v4, 0, 1, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    sub_24E563530(*(void *)(v0 + 88), &qword_2698F3128);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_24E5F2698;
    uint64_t v8 = *(void *)(v0 + 104);
    return MEMORY[0x270FA2338](v8, &unk_2698F3160);
  }
}

uint64_t sub_24E5F3078()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E5F3168(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v49 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24E861248();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v53 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v46 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v57 = (char *)&v46 - v11;
  uint64_t v12 = sub_24E863FB8();
  uint64_t v48 = sub_24E863FA8();
  uint64_t v56 = v12;
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_24E862168();
  __swift_project_value_buffer(v13, (uint64_t)qword_269906D88);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_24E862148();
  os_log_type_t v15 = sub_24E864268();
  if (!os_log_type_enabled(v14, v15))
  {

    swift_bridgeObjectRelease_n();
    uint64_t v21 = *(void *)(a1 + 16);
    if (!v21) {
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  uint64_t v16 = swift_slowAlloc();
  uint64_t v54 = (void *)swift_slowAlloc();
  uint64_t v59 = v54;
  *(_DWORD *)uint64_t v16 = 136315394;
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_release();
  uint64_t v58 = sub_24E55B02C(0xD00000000000001DLL, 0x800000024E873660, (uint64_t *)&v59);
  uint64_t v52 = (uint64_t *)&v59;
  sub_24E8643A8();
  *(_WORD *)(v16 + 12) = 2080;
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v17 = MEMORY[0x253341E60](a1, v4);
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t v58 = sub_24E55B02C(v17, v19, (uint64_t *)&v59);
  sub_24E8643A8();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_24E553000, v14, v15, "Repository: %s - %s", (uint8_t *)v16, 0x16u);
  uint64_t v20 = (void (*)(void, void, void))v54;
  swift_arrayDestroy();
  MEMORY[0x2533435F0](v20, -1, -1);
  MEMORY[0x2533435F0](v16, -1, -1);

  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
LABEL_13:
    uint64_t v23 = *(void **)(v5 + 16);
    uint64_t v22 = v5 + 16;
    uint64_t v54 = v23;
    uint64_t v24 = a1 + ((*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64));
    uint64_t v52 = *(uint64_t **)(v22 + 56);
    uint64_t v25 = a1;
    os_log_type_t v26 = (void (**)(char *, uint64_t))(v22 - 8);
    uint64_t v47 = v25;
    swift_bridgeObjectRetain();
    uint64_t v50 = v10;
    uint64_t v51 = v22;
    while (1)
    {
      double v27 = v57;
      uint64_t v28 = (void (*)(char *, char *, uint64_t))v54;
      ((void (*)(char *, uint64_t, uint64_t))v54)(v57, v24, v4);
      v28(v10, v27, v4);
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v29 = v22;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_24E8621F8();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v30 = (uint64_t)v59;
      if (!v59[2]) {
        break;
      }
      unint64_t v31 = sub_24E7C9D20((uint64_t)v10);
      if ((v32 & 1) == 0) {
        break;
      }
      uint64_t v33 = (uint64_t *)(*(void *)(v30 + 56) + 32 * v31);
      uint64_t v34 = (void *)v33[2];
      sub_24E609DD0(*v33, v33[1], v34);
      swift_bridgeObjectRelease();
      uint64_t v35 = *v26;
      (*v26)(v10, v4);
      if (v34)
      {
        if (v34 == (void *)1) {
          goto LABEL_25;
        }

        swift_bridgeObjectRelease();
      }
      v35(v57, v4);
      uint64_t v22 = v29;
LABEL_15:
      v24 += (uint64_t)v52;
      if (!--v21)
      {
        a1 = v47;
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v35 = *v26;
    (*v26)(v10, v4);
LABEL_25:
    ((void (*)(uint64_t, char *, uint64_t))v54)(v53, v57, v4);
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v36 = (uint64_t)v59;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = (void *)v36;
    uint64_t v38 = v53;
    sub_24E61D450(0, 0, 0, 0, v53, isUniquelyReferenced_nonNull_native);
    uint64_t v39 = (uint64_t)v59;
    swift_bridgeObjectRelease();
    v35((char *)v38, v4);
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v59 = (void *)v39;
    swift_retain();
    sub_24E862208();
    sub_24E5DE31C();
    swift_release();
    v35(v57, v4);
    uint64_t v10 = v50;
    uint64_t v22 = v51;
    goto LABEL_15;
  }
LABEL_30:
  uint64_t v40 = sub_24E863FE8();
  uint64_t v41 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v49, 1, 1, v40);
  swift_bridgeObjectRetain();
  uint64_t v42 = v55;
  swift_retain();
  uint64_t v43 = sub_24E863FA8();
  uint64_t v44 = (void *)swift_allocObject();
  v44[2] = v43;
  v44[3] = MEMORY[0x263F8F500];
  v44[4] = a1;
  v44[5] = v42;
  sub_24E5C54D0(v41, (uint64_t)&unk_2698F35D8, (uint64_t)v44);
  swift_release();
  return swift_release();
}

uint64_t sub_24E5F3A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  uint64_t v6 = sub_24E861248();
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  uint64_t v7 = sub_24E864638();
  v5[16] = v7;
  v5[17] = *(void *)(v7 - 8);
  v5[18] = swift_task_alloc();
  v5[19] = sub_24E863FB8();
  v5[20] = sub_24E863FA8();
  uint64_t v9 = sub_24E863F18();
  v5[21] = v9;
  v5[22] = v8;
  return MEMORY[0x270FA2498](sub_24E5F3B90, v9, v8);
}

uint64_t sub_24E5F3B90()
{
  sub_24E864628();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2698F5E80 + dword_2698F5E80);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E5F3C58;
  return v3(0x8AC7230489E80000, 0, 0, 0, 1);
}

uint64_t sub_24E5F3C58()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 144);
  uint64_t v4 = *(void *)(*v1 + 136);
  uint64_t v5 = *(void *)(*v1 + 128);
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 176);
  uint64_t v7 = *(void *)(v2 + 168);
  if (v0) {
    uint64_t v8 = sub_24E5F45B0;
  }
  else {
    uint64_t v8 = sub_24E5F3DF0;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_24E5F3DF0()
{
  uint64_t v49 = v0;
  swift_release();
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v1 = v0 + 9;
  uint64_t v2 = sub_24E862168();
  __swift_project_value_buffer(v2, (uint64_t)qword_269906D88);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_24E862148();
  os_log_type_t v4 = sub_24E864268();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v48 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[7] = sub_24E55B02C(0xD00000000000001DLL, 0x800000024E873660, &v48);
    sub_24E8643A8();
    *(_WORD *)(v5 + 12) = 2080;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v7 = v0[11];
    uint64_t v8 = v0[9];
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v9 = MEMORY[0x253341E60](v8, v7);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v0[8] = sub_24E55B02C(v9, v11, &v48);
    sub_24E8643A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E553000, v3, v4, "Repository: %s - Will remove .loading - %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    uint64_t v12 = v6;
    uint64_t v1 = v0 + 9;
    MEMORY[0x2533435F0](v12, -1, -1);
    MEMORY[0x2533435F0](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v13 = *(void *)(*v1 + 16);
  if (v13)
  {
    uint64_t v14 = v0[12];
    os_log_type_t v15 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16);
    v14 += 16;
    unint64_t v16 = *v1 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
    uint64_t v45 = *(void *)(v14 + 56);
    uint64_t v46 = v15;
    swift_bridgeObjectRetain();
    uint64_t v47 = (void (**)(unint64_t, uint64_t))(v14 - 8);
    while (1)
    {
      unint64_t v21 = v0[14];
      unint64_t v20 = v0[15];
      uint64_t v22 = v0[11];
      v46(v20, v16, v22);
      v46(v21, v20, v22);
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_24E8621F8();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v23 = v0[4];
      if (*(void *)(v23 + 16) && (unint64_t v24 = sub_24E7C9D20(v0[14]), (v25 & 1) != 0))
      {
        unint64_t v26 = v0[14];
        uint64_t v27 = v0[11];
        uint64_t v28 = (uint64_t *)(*(void *)(v23 + 56) + 32 * v24);
        uint64_t v29 = (void *)v28[2];
        sub_24E609DD0(*v28, v28[1], v29);
        swift_bridgeObjectRelease();
        unint64_t v19 = *v47;
        (*v47)(v26, v27);
        if (!v29)
        {
          v46(v0[13], v0[15], v0[11]);
          sub_24E863FA8();
          sub_24E863F18();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v30 = v0[13];
          swift_getKeyPath();
          swift_getKeyPath();
          sub_24E8621F8();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v31 = v0[5];
          swift_bridgeObjectRetain();
          unint64_t v32 = sub_24E7C9D20(v30);
          char v34 = v33;
          swift_bridgeObjectRelease();
          if (v34)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v48 = v31;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_24E7D01EC();
              uint64_t v31 = v48;
            }
            v19(*(void *)(v31 + 48) + v32 * v45, v0[11]);
            uint64_t v36 = (uint64_t *)(*(void *)(v31 + 56) + 32 * v32);
            uint64_t v43 = v36[1];
            uint64_t v37 = v36[2];
            int64_t v38 = v32;
            uint64_t v39 = *v36;
            sub_24E7EC2E4(v38, v31);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v39 = 0;
            uint64_t v43 = 0;
            uint64_t v37 = 2;
          }
          v19(v0[13], v0[11]);
          sub_24E609D08(v39, v43, (void *)v37);
          sub_24E863FA8();
          sub_24E863F18();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          unint64_t v44 = v0[15];
          uint64_t v40 = v0[11];
          swift_getKeyPath();
          swift_getKeyPath();
          v0[6] = v31;
          swift_retain();
          sub_24E862208();
          sub_24E5DE31C();
          swift_release();
          v19(v44, v40);
          goto LABEL_14;
        }
        if (v29 != (void *)1)
        {

          swift_bridgeObjectRelease();
        }
      }
      else
      {
        unint64_t v17 = v0[14];
        uint64_t v18 = v0[11];
        swift_bridgeObjectRelease();
        unint64_t v19 = *v47;
        (*v47)(v17, v18);
      }
      v19(v0[15], v0[11]);
LABEL_14:
      v16 += v45;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = (uint64_t (*)(void))v0[1];
  return v41();
}

uint64_t sub_24E5F45B0()
{
  unint64_t v17 = v0;
  swift_release();
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = sub_24E862168();
  __swift_project_value_buffer(v2, (uint64_t)qword_269906D88);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_24E862148();
  os_log_type_t v6 = sub_24E864248();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v16 = v9;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[2] = sub_24E55B02C(0xD00000000000001DLL, 0x800000024E873660, &v16);
    sub_24E8643A8();
    *(_WORD *)(v7 + 12) = 2112;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    unint64_t v10 = (void *)v0[24];
    id v11 = v10;
    swift_release();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v12;
    sub_24E8643A8();
    *uint64_t v8 = v12;

    _os_log_impl(&dword_24E553000, v5, v6, "Repository: %s - Error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v9, -1, -1);
    MEMORY[0x2533435F0](v7, -1, -1);
  }
  else
  {
    uint64_t v13 = (void *)v0[24];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

void sub_24E5F4924(uint64_t a1, uint64_t a2, void *a3, int a4, uint64_t a5)
{
  int v85 = a4;
  uint64_t v83 = a1;
  uint64_t v76 = sub_24E8616F8();
  uint64_t v75 = *(void *)(v76 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v76);
  uint64_t v74 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v73 = (char *)&v68 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2FB0);
  uint64_t v90 = *(void *)(v11 - 8);
  uint64_t v91 = v11;
  MEMORY[0x270FA5388](v11);
  double v88 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_24E860F98();
  uint64_t v87 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v86 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_24E861248();
  uint64_t v14 = *(void *)(v94 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v94);
  uint64_t v92 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v68 - v17;
  uint64_t v19 = sub_24E863FB8();
  uint64_t v20 = sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_24E862168();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_269906D88);
  uint64_t v23 = v94;
  uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v81 = v14 + 16;
  v80(v18, a5, v94);
  swift_bridgeObjectRetain_n();
  id v24 = a3;
  uint64_t v82 = v22;
  char v25 = sub_24E862148();
  int v26 = sub_24E864268();
  BOOL v27 = os_log_type_enabled(v25, (os_log_type_t)v26);
  uint64_t v84 = a2;
  uint64_t v93 = v14;
  if (v27)
  {
    int v70 = v26;
    id v71 = v24;
    uint64_t v77 = a5;
    uint64_t v78 = v20;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    uint64_t v97 = v69;
    *(_DWORD *)uint64_t v28 = 136315907;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v95[0] = sub_24E55B02C(0xD000000000000025, 0x800000024E8736C0, &v97);
    sub_24E8643A8();
    *(_WORD *)(v28 + 12) = 2160;
    v95[0] = 1752392040;
    sub_24E8643A8();
    *(_WORD *)(v28 + 22) = 2081;
    sub_24E863FA8();
    sub_24E863F18();
    char isCurrentExecutor = swift_task_isCurrentExecutor();
    uint64_t v30 = v71;
    if ((isCurrentExecutor & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v31 = sub_24E8611D8();
    unint64_t v33 = v32;
    swift_release();
    v95[0] = sub_24E55B02C(v31, v33, &v97);
    sub_24E8643A8();
    swift_bridgeObjectRelease();
    Class v79 = *(void (**)(char *, uint64_t))(v93 + 8);
    v79(v18, v94);
    *(_WORD *)(v28 + 32) = 2080;
    sub_24E863FA8();
    uint64_t v72 = v19;
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    v95[0] = v83;
    v95[1] = v84;
    v95[2] = (uint64_t)v30;
    char v96 = v85;
    swift_bridgeObjectRetain();
    id v34 = v30;
    uint64_t v35 = sub_24E863CC8();
    unint64_t v37 = v36;
    swift_release();
    v95[0] = sub_24E55B02C(v35, v37, &v97);
    sub_24E8643A8();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E553000, v25, (os_log_type_t)v70, "Repository: %s - Insert Message Location - %{private,mask.hash}s %s", (uint8_t *)v28, 0x2Au);
    uint64_t v38 = v69;
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v38, -1, -1);
    MEMORY[0x2533435F0](v28, -1, -1);

    uint64_t v20 = v78;
    a5 = v77;
    uint64_t v23 = v94;
  }
  else
  {
    Class v79 = *(void (**)(char *, uint64_t))(v14 + 8);
    v79(v18, v23);

    swift_bridgeObjectRelease_n();
    uint64_t v30 = v24;
  }
  uint64_t v39 = v86;
  sub_24E860F88();
  uint64_t v40 = v88;
  sub_24E860F58();
  sub_24E860F78();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v40, v91);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v39, v89);
  if (v95[0])
  {
    uint64_t v41 = sub_24E862148();
    os_log_type_t v42 = sub_24E864268();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      v95[0] = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_release();
      uint64_t v97 = sub_24E55B02C(0xD000000000000025, 0x800000024E8736C0, v95);
      sub_24E8643A8();
      _os_log_impl(&dword_24E553000, v41, v42, "Repository: %s - Skipping", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533435F0](v44, -1, -1);
      MEMORY[0x2533435F0](v43, -1, -1);
    }
    swift_release();

    return;
  }
  v80(v92, a5, v23);
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24E8621F8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v45 = v95[0];
  uint64_t v46 = (uint64_t)v92;
  if (!*(void *)(v95[0] + 16) || (unint64_t v47 = sub_24E7C9D20((uint64_t)v92), (v48 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    v79((char *)v46, v23);
    uint64_t v55 = v30;
    goto LABEL_27;
  }
  uint64_t v78 = v20;
  uint64_t v77 = a5;
  uint64_t v49 = (uint64_t *)(*(void *)(v45 + 56) + 32 * v47);
  uint64_t v50 = v46;
  uint64_t v51 = v23;
  uint64_t v52 = *v49;
  uint64_t v53 = v49[1];
  uint64_t v54 = (void *)v49[2];
  sub_24E609DD0(*v49, v53, v54);
  swift_bridgeObjectRelease();
  v79((char *)v50, v51);
  if ((unint64_t)v54 < 2)
  {
    sub_24E609D18(v52, v53, v54);
    a5 = v77;
    uint64_t v55 = v30;
LABEL_27:
    sub_24E5F568C(v83, v84, v55, v85, a5);
    swift_release();
    return;
  }
  uint64_t v94 = v53;
  uint64_t v56 = v30;
  id v57 = objc_msgSend(v30, sel_timestamp);
  uint64_t v58 = v73;
  sub_24E8616D8();

  id v59 = objc_msgSend(v54, sel_timestamp);
  uint64_t v60 = v74;
  sub_24E8616D8();

  LOBYTE(v59) = sub_24E861618();
  uint64_t v61 = *(void (**)(char *, uint64_t))(v75 + 8);
  uint64_t v62 = v60;
  uint64_t v63 = v76;
  v61(v62, v76);
  v61(v58, v63);
  if (v59)
  {
    sub_24E5F568C(v83, v84, v56, v85, v77);
    swift_release();

LABEL_35:
    swift_bridgeObjectRelease();
    return;
  }
  Class v64 = sub_24E862148();
  os_log_type_t v65 = sub_24E864268();
  if (!os_log_type_enabled(v64, v65))
  {
    swift_release();

    goto LABEL_35;
  }
  uint64_t v66 = (uint8_t *)swift_slowAlloc();
  uint64_t v67 = swift_slowAlloc();
  v95[0] = v67;
  *(_DWORD *)uint64_t v66 = 136315138;
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_release();
  uint64_t v97 = sub_24E55B02C(0xD000000000000025, 0x800000024E8736C0, v95);
  sub_24E8643A8();
  _os_log_impl(&dword_24E553000, v64, v65, "Repository: %s - Not Using Message Location", v66, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2533435F0](v67, -1, -1);
  MEMORY[0x2533435F0](v66, -1, -1);
  swift_release();

  swift_bridgeObjectRelease();
}

uint64_t sub_24E5F568C(uint64_t a1, uint64_t a2, void *a3, int a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v27 = a5;
  int v31 = a4;
  uint64_t v30 = a1;
  uint64_t v9 = sub_24E861248();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v29 = v11;
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F7FE0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E863FB8();
  uint64_t v28 = sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v16 = sub_24E863FE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v27, v9);
  swift_bridgeObjectRetain();
  id v17 = a3;
  swift_retain();
  uint64_t v18 = sub_24E863FA8();
  uint64_t v19 = (uint64_t)v15;
  uint64_t v20 = v9;
  uint64_t v21 = a2;
  uint64_t v22 = v6;
  unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v18;
  *(void *)(v24 + 24) = MEMORY[0x263F8F500];
  *(void *)(v24 + 32) = v22;
  *(void *)(v24 + 40) = v30;
  *(void *)(v24 + 48) = v21;
  *(void *)(v24 + 56) = v17;
  *(unsigned char *)(v24 + 64) = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v24 + v23, v12, v20);
  sub_24E5C54D0(v19, (uint64_t)&unk_2698F35E8, v24);
  swift_release();
  return swift_release();
}

uint64_t sub_24E5F5938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 56) = a7;
  *(void *)(v8 + 64) = v13;
  *(unsigned char *)(v8 + 144) = a8;
  *(void *)(v8 + 40) = a5;
  *(void *)(v8 + 48) = a6;
  *(void *)(v8 + 32) = a4;
  *(void *)(v8 + 72) = sub_24E863FB8();
  *(void *)(v8 + 80) = sub_24E863FA8();
  uint64_t v10 = sub_24E863F18();
  *(void *)(v8 + 88) = v10;
  *(void *)(v8 + 96) = v9;
  return MEMORY[0x270FA2498](sub_24E5F59E8, v10, v9);
}

uint64_t sub_24E5F59E8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[13] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E5F5A8C;
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  return sub_24E63528C(v3, v2);
}

uint64_t sub_24E5F5A8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v10 = *v5;
  *(void *)(*v5 + 112) = v4;
  swift_task_dealloc();
  if (v4)
  {
    uint64_t v11 = *(void *)(v10 + 88);
    uint64_t v12 = *(void *)(v10 + 96);
    uint64_t v13 = sub_24E5F5CA0;
  }
  else
  {
    *(unsigned char *)(v10 + 145) = a4;
    *(void *)(v10 + 120) = a3;
    *(void *)(v10 + 128) = a2;
    *(void *)(v10 + 136) = a1;
    uint64_t v11 = *(void *)(v10 + 88);
    uint64_t v12 = *(void *)(v10 + 96);
    uint64_t v13 = sub_24E5F5BD8;
  }
  return MEMORY[0x270FA2498](v13, v11, v12);
}

uint64_t sub_24E5F5BD8()
{
  uint64_t v1 = *(uint64_t **)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void **)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 64);
  int v5 = *(unsigned __int8 *)(v0 + 145);
  swift_release();
  swift_bridgeObjectRetain();
  id v6 = v3;
  sub_24E5F5FF0(v2, v1, (uint64_t)v3, v5, v4);
  swift_bridgeObjectRelease_n();

  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_24E5F5CA0()
{
  uint64_t v18 = v0;
  swift_release();
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = sub_24E862168();
  __swift_project_value_buffer(v2, (uint64_t)qword_269906D88);
  id v3 = v1;
  id v4 = v1;
  int v5 = sub_24E862148();
  os_log_type_t v6 = sub_24E864248();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v17 = v9;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    *(void *)(v0 + 16) = sub_24E55B02C(0xD000000000000020, 0x800000024E8736F0, &v17);
    sub_24E8643A8();
    *(_WORD *)(v7 + 12) = 2112;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v10 = *(void **)(v0 + 112);
    id v11 = v10;
    swift_release();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v12;
    sub_24E8643A8();
    *uint64_t v8 = v12;

    _os_log_impl(&dword_24E553000, v5, v6, "Repository: %s - Error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F1378);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v9, -1, -1);
    MEMORY[0x2533435F0](v7, -1, -1);
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 112);
  }
  uint64_t v14 = *(void **)(v0 + 112);
  sub_24E5F5FF0(*(void *)(v0 + 40), *(uint64_t **)(v0 + 48), *(void *)(v0 + 56), *(unsigned __int8 *)(v0 + 144), *(void *)(v0 + 64));

  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_24E5F5FF0(uint64_t a1, uint64_t *a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v159 = a5;
  int v154 = a4;
  uint64_t v157 = (void *)a3;
  uint64_t v158 = a2;
  uint64_t v155 = a1;
  uint64_t v5 = sub_24E8616F8();
  uint64_t v147 = *(void **)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v142 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v142 - v9;
  uint64_t v11 = sub_24E861248();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v160 = v11;
  uint64_t v161 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v142 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v142 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v156 = (char *)&v142 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v23 = (char *)&v142 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v146 = (char *)&v142 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  char v149 = (char *)&v142 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v148 = (char *)&v142 - v29;
  MEMORY[0x270FA5388](v28);
  int v31 = (char *)&v142 - v30;
  uint64_t v32 = sub_24E863FB8();
  uint64_t v33 = sub_24E863FA8();
  uint64_t v162 = v32;
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  id v34 = v157;
  if (v157)
  {
    uint64_t v35 = v161 + 16;
    uint64_t v153 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 16);
    v153(v31, v159, v160);
    swift_bridgeObjectRetain();
    id v151 = v34;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v36 = v163;
    if (!*(void *)(v163 + 16) || (unint64_t v37 = sub_24E7C9D20((uint64_t)v31), (v38 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v46 = *(void (**)(char *, uint64_t))(v161 + 8);
      unint64_t v47 = v31;
      uint64_t v45 = v160;
      v46(v47, v160);
      goto LABEL_11;
    }
    uint64_t v144 = v5;
    uint64_t v39 = v33;
    uint64_t v145 = v35;
    uint64_t v40 = (uint64_t *)(*(void *)(v36 + 56) + 32 * v37);
    uint64_t v42 = *v40;
    uint64_t v41 = v40[1];
    uint64_t v43 = (void *)v40[2];
    sub_24E609DD0(*v40, v41, v43);
    swift_bridgeObjectRelease();
    uint64_t v44 = v161 + 8;
    uint64_t v150 = *(void (**)(char *, uint64_t))(v161 + 8);
    v150(v31, v160);
    if ((unint64_t)v43 < 2)
    {
      sub_24E609D18(v42, v41, v43);
      uint64_t v45 = v160;
      uint64_t v46 = v150;
      uint64_t v35 = v145;
      uint64_t v33 = v39;
LABEL_11:
      uint64_t v48 = (uint64_t)v158;
      if (qword_2698F0E60 != -1) {
        swift_once();
      }
      uint64_t v49 = sub_24E862168();
      __swift_project_value_buffer(v49, (uint64_t)qword_269906D88);
      v153(v23, v159, v45);
      swift_bridgeObjectRetain_n();
      id v50 = v151;
      uint64_t v51 = sub_24E862148();
      int v52 = sub_24E864268();
      if (os_log_type_enabled(v51, (os_log_type_t)v52))
      {
        LODWORD(v151) = v52;
        uint64_t v145 = v35;
        uint64_t v150 = v46;
        uint64_t v53 = swift_slowAlloc();
        char v149 = (char *)swift_slowAlloc();
        v167[0] = (uint64_t)v149;
        *(_DWORD *)uint64_t v53 = 136315907;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        uint64_t v163 = sub_24E55B02C(0xD000000000000017, 0x800000024E873620, v167);
        sub_24E8643A8();
        *(_WORD *)(v53 + 12) = 2160;
        uint64_t v163 = 1752392040;
        sub_24E8643A8();
        *(_WORD *)(v53 + 22) = 2081;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v152 = v33;
        uint64_t v54 = sub_24E8611D8();
        unint64_t v56 = v55;
        swift_release();
        uint64_t v163 = sub_24E55B02C(v54, v56, v167);
        sub_24E8643A8();
        swift_bridgeObjectRelease();
        v150(v23, v160);
        *(_WORD *)(v53 + 32) = 2080;
        sub_24E863FA8();
        sub_24E863F18();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        id v57 = (void (*)(void, void, void))v158;
        uint64_t v163 = v155;
        uint64_t v164 = (void (*)(void, void, void))v158;
        id v165 = v50;
        char v166 = v154;
        swift_bridgeObjectRetain();
        id v58 = v50;
        uint64_t v59 = sub_24E863CC8();
        unint64_t v61 = v60;
        swift_release();
        uint64_t v163 = sub_24E55B02C(v59, v61, v167);
        uint64_t v48 = (uint64_t)v57;
        sub_24E8643A8();

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24E553000, v51, (os_log_type_t)v151, "Repository: %s - Add Location - %{private,mask.hash}s %s", (uint8_t *)v53, 0x2Au);
        uint64_t v62 = (uint64_t)v149;
        swift_arrayDestroy();
        MEMORY[0x2533435F0](v62, -1, -1);
        MEMORY[0x2533435F0](v53, -1, -1);

        uint64_t v45 = v160;
        uint64_t v46 = v150;
      }
      else
      {
        v46(v23, v45);

        swift_bridgeObjectRelease_n();
      }
      v153(v156, v159, v45);
      swift_bridgeObjectRetain();
      id v75 = v50;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_24E8621F8();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v76 = v163;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v163 = v76;
      uint64_t v78 = (uint64_t)v156;
      sub_24E61D450(v155, v48, (uint64_t)v157, v154, (uint64_t)v156, isUniquelyReferenced_nonNull_native);
      uint64_t v79 = v163;
      swift_bridgeObjectRelease();
      v46((char *)v78, v45);
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v163 = v79;
      swift_retain();
      sub_24E862208();
      sub_24E5DE31C();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2F80);
      sub_24E6123FC(&qword_2698F2F88, &qword_2698F2F80);
      sub_24E8621D8();
      swift_release();

      return swift_bridgeObjectRelease();
    }
    uint64_t v143 = v42;
    uint64_t v161 = v44;
    uint64_t v156 = (char *)v41;
    uint64_t v152 = v39;
    id v87 = v151;
    id v88 = objc_msgSend(v151, sel_timestamp);
    sub_24E8616D8();

    id v89 = objc_msgSend(v43, sel_timestamp);
    sub_24E8616D8();

    char v90 = sub_24E861618();
    uint64_t v91 = (void (*)(char *, uint64_t))v147[1];
    uint64_t v92 = v144;
    v91(v8, v144);
    v91(v10, v92);
    id v93 = objc_msgSend(v87, sel_timestamp);
    sub_24E8616D8();

    uint64_t v147 = v43;
    id v94 = objc_msgSend(v43, sel_timestamp);
    sub_24E8616D8();

    char v95 = sub_24E8616C8();
    v91(v8, v92);
    v91(v10, v92);
    char v96 = (char *)v158;
    if (v158)
    {
      sub_24E863FA8();
      sub_24E863F18();
      char isCurrentExecutor = swift_task_isCurrentExecutor();
      uint64_t v98 = v160;
      uint64_t v99 = v150;
      if ((isCurrentExecutor & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      if (v156)
      {
        if (v143 == v155 && v156 == v96)
        {
          swift_release();
          if ((v95 & 1) == 0) {
            goto LABEL_59;
          }
          goto LABEL_50;
        }
        char v101 = sub_24E864988();
        swift_release();
        if (v95)
        {
          char v100 = v101 ^ 1;
LABEL_55:
          sub_24E863FA8();
          sub_24E863F18();
          char v102 = swift_task_isCurrentExecutor();
          id v103 = v147;
          if ((v102 & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          swift_release();
          if (v90) {
            goto LABEL_64;
          }
          goto LABEL_61;
        }
      }
      else
      {
        swift_release();
        if (v95)
        {
          char v100 = 1;
          goto LABEL_55;
        }
      }
    }
    else
    {
      uint64_t v98 = v160;
      uint64_t v99 = v150;
      if (v95)
      {
LABEL_50:
        char v100 = 0;
        goto LABEL_55;
      }
    }
LABEL_59:
    id v103 = v147;
    if (v90) {
      goto LABEL_64;
    }
    char v100 = 0;
LABEL_61:
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    if ((v100 & 1) == 0)
    {
      if (qword_2698F0E60 != -1) {
        swift_once();
      }
      uint64_t v127 = sub_24E862168();
      __swift_project_value_buffer(v127, (uint64_t)qword_269906D88);
      uint64_t v128 = v146;
      v153(v146, v159, v98);
      swift_bridgeObjectRetain_n();
      id v129 = v151;
      uint64_t v130 = sub_24E862148();
      os_log_type_t v131 = sub_24E864268();
      if (!os_log_type_enabled(v130, v131))
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v99(v128, v98);
        swift_release();

        return swift_bridgeObjectRelease_n();
      }
      uint64_t v132 = swift_slowAlloc();
      uint64_t v159 = swift_slowAlloc();
      v167[0] = v159;
      *(_DWORD *)uint64_t v132 = 136315907;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_release();
      uint64_t v163 = sub_24E55B02C(0xD000000000000017, 0x800000024E873620, v167);
      sub_24E8643A8();
      *(_WORD *)(v132 + 12) = 2160;
      uint64_t v163 = 1752392040;
      sub_24E8643A8();
      *(_WORD *)(v132 + 22) = 2081;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v133 = v146;
      uint64_t v134 = sub_24E8611D8();
      unint64_t v136 = v135;
      swift_release();
      uint64_t v163 = sub_24E55B02C(v134, v136, v167);
      sub_24E8643A8();
      swift_bridgeObjectRelease();
      v150(v133, v160);
      *(_WORD *)(v132 + 32) = 2080;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v163 = v155;
      uint64_t v164 = (void (*)(void, void, void))v158;
      id v165 = v129;
      char v166 = v154;
      swift_bridgeObjectRetain();
      id v137 = v129;
      uint64_t v138 = sub_24E863CC8();
      unint64_t v140 = v139;
      swift_release();
      uint64_t v163 = sub_24E55B02C(v138, v140, v167);
      sub_24E8643A8();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E553000, v130, v131, "Repository: %s - Not Replace Existing Location - %{private,mask.hash}s %s", (uint8_t *)v132, 0x2Au);
      uint64_t v141 = v159;
      swift_arrayDestroy();
      MEMORY[0x2533435F0](v141, -1, -1);
      MEMORY[0x2533435F0](v132, -1, -1);
      swift_release();

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_64:
    if (qword_2698F0E60 != -1) {
      swift_once();
    }
    uint64_t v104 = sub_24E862168();
    __swift_project_value_buffer(v104, (uint64_t)qword_269906D88);
    uint64_t v105 = v148;
    v153(v148, v159, v98);
    uint64_t v106 = (uint64_t)v158;
    swift_bridgeObjectRetain_n();
    id v107 = v151;
    uint64_t v108 = sub_24E862148();
    int v109 = sub_24E864268();
    if (os_log_type_enabled(v108, (os_log_type_t)v109))
    {
      LODWORD(v151) = v109;
      uint64_t v110 = swift_slowAlloc();
      uint64_t v146 = (char *)swift_slowAlloc();
      v167[0] = (uint64_t)v146;
      *(_DWORD *)uint64_t v110 = 136315907;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_release();
      uint64_t v163 = sub_24E55B02C(0xD000000000000017, 0x800000024E873620, v167);
      sub_24E8643A8();
      *(_WORD *)(v110 + 12) = 2160;
      uint64_t v163 = 1752392040;
      sub_24E8643A8();
      *(_WORD *)(v110 + 22) = 2081;
      sub_24E863FA8();
      sub_24E863F18();
      char v111 = swift_task_isCurrentExecutor();
      unint64_t v112 = v148;
      if ((v111 & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v113 = sub_24E8611D8();
      unint64_t v115 = v114;
      swift_release();
      uint64_t v163 = sub_24E55B02C(v113, v115, v167);
      sub_24E8643A8();
      swift_bridgeObjectRelease();
      v150(v112, v160);
      *(_WORD *)(v110 + 32) = 2080;
      sub_24E863FA8();
      sub_24E863F18();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v116 = (void (*)(void, void, void))v158;
      uint64_t v163 = v155;
      uint64_t v164 = (void (*)(void, void, void))v158;
      id v165 = v107;
      char v166 = v154;
      swift_bridgeObjectRetain();
      id v117 = v107;
      uint64_t v118 = sub_24E863CC8();
      unint64_t v120 = v119;
      swift_release();
      uint64_t v163 = sub_24E55B02C(v118, v120, v167);
      sub_24E8643A8();

      swift_bridgeObjectRelease_n();
      uint64_t v106 = (uint64_t)v116;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24E553000, v108, (os_log_type_t)v151, "Repository: %s - Replace Existing Location - %{private,mask.hash}s %s", (uint8_t *)v110, 0x2Au);
      uint64_t v121 = v146;
      swift_arrayDestroy();
      MEMORY[0x2533435F0](v121, -1, -1);
      MEMORY[0x2533435F0](v110, -1, -1);

      uint64_t v98 = v160;
      uint64_t v99 = v150;
      id v103 = v147;
    }
    else
    {
      v99(v105, v98);

      swift_bridgeObjectRelease_n();
    }
    v153(v149, v159, v98);
    swift_bridgeObjectRetain();
    id v122 = v107;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24E8621F8();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v123 = v163;
    char v124 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v163 = v123;
    uint64_t v125 = (uint64_t)v149;
    sub_24E61D450(v155, v106, (uint64_t)v157, v154, (uint64_t)v149, v124);
    uint64_t v126 = v163;
    swift_bridgeObjectRelease();
    v99((char *)v125, v98);
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v163 = v126;
    swift_retain();
    sub_24E862208();
    sub_24E5DE31C();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2F80);
    sub_24E6123FC(&qword_2698F2F88, &qword_2698F2F80);
    sub_24E8621D8();
    swift_release();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v152 = v33;
  if (qword_2698F0E60 != -1) {
    swift_once();
  }
  uint64_t v63 = sub_24E862168();
  __swift_project_value_buffer(v63, (uint64_t)qword_269906D88);
  uint64_t v64 = v160;
  uint64_t v65 = v161;
  uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 16);
  v66(v18, v159, v160);
  uint64_t v67 = sub_24E862148();
  int v68 = sub_24E864268();
  if (os_log_type_enabled(v67, (os_log_type_t)v68))
  {
    LODWORD(v157) = v68;
    uint64_t v158 = (uint64_t *)v66;
    uint64_t v69 = swift_slowAlloc();
    uint64_t v156 = (char *)swift_slowAlloc();
    uint64_t v163 = (uint64_t)v156;
    *(_DWORD *)uint64_t v69 = 136315651;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v167[0] = sub_24E55B02C(0xD000000000000017, 0x800000024E873620, &v163);
    sub_24E8643A8();
    *(_WORD *)(v69 + 12) = 2160;
    v167[0] = 1752392040;
    sub_24E8643A8();
    *(_WORD *)(v69 + 22) = 2081;
    sub_24E863FA8();
    sub_24E863F18();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v70 = sub_24E8611D8();
    unint64_t v72 = v71;
    swift_release();
    v167[0] = sub_24E55B02C(v70, v72, &v163);
    sub_24E8643A8();
    swift_bridgeObjectRelease();
    uint64_t v64 = v160;
    uint64_t v73 = *(void (**)(char *, uint64_t))(v161 + 8);
    v73(v18, v160);
    _os_log_impl(&dword_24E553000, v67, (os_log_type_t)v157, "Repository: %s - Remove Location - %{private,mask.hash}s", (uint8_t *)v69, 0x20u);
    uint64_t v74 = (uint64_t)v156;
    swift_arrayDestroy();
    MEMORY[0x2533435F0](v74, -1, -1);
    MEMORY[0x2533435F0](v69, -1, -1);

    ((void (*)(char *, uint64_t, uint64_t))v158)(v15, v159, v64);
  }
  else
  {
    uint64_t v73 = *(void (**)(char *, uint64_t))(v65 + 8);
    v73(v18, v64);

    v66(v15, v159, v64);
  }
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24E8621F8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v81 = sub_24E609F24((uint64_t)v15);
  uint64_t v83 = v82;
  int v85 = v84;
  v73(v15, v64);
  sub_24E609D08(v81, v83, v85);
  uint64_t v86 = v163;
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v167[0] = v86;
  swift_retain();
  sub_24E862208();
  sub_24E5DE31C();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2F80);
  sub_24E6123FC(&qword_2698F2F88, &qword_2698F2F80);
  sub_24E8621D8();
  return swift_release();
}

uint64_t sub_24E5F7D28(uint64_t a1)
{
  return sub_24E5F7EC0(a1, 534, (uint64_t (*)(char *))sub_24E559BAC, (void (*)(uint64_t))sub_24E5F80B8);
}

uint64_t sub_24E5F7D58()
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24E8621F8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24E5F7E90(uint64_t a1)
{
  return sub_24E5F7EC0(a1, 587, (uint64_t (*)(char *))sub_24E559FDC, (void (*)(uint64_t))sub_24E5F9560);
}

uint64_t sub_24E5F7EC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *), void (*a4)(uint64_t))
{
  uint64_t v16 = a4;
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698F10D8);
  uint64_t v6 = sub_24E861248();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24E865A70;
  uint64_t v10 = type metadata accessor for Friend();
  uint64_t v11 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a1 + *(int *)(v10 + 20), v6);
  uint64_t v12 = *(void *)(a1 + *(int *)(v10 + 24));
  MEMORY[0x270FA5388](v11);
  v15[2] = a1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24E6471A8(a3, (uint64_t)v15, v12);
  uint64_t v17 = v9;
  sub_24E650664(v13);
  v16(v17);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E5F80B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24E863FB8();
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24E8621F8();
  swift_release();
  swift_release();
  swift_release();
  sub_24E5F8218(a1, v5, a2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E5F8218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v189 = a2;
  uint64_t v161 = a3;
  uint64_t v200 = sub_24E8616F8();
  uint64_t v4 = *(void *)(v200 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v200);
  uint64_t v152 = (char *)&v151 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v151 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  char v167 = (char *)&v151 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v151 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  char v166 = (char *)&v151 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v173 = (char *)&v151 - v17;
  uint64_t v198 = sub_24E861248();
  uint64_t v188 = *(void *)(v198 - 8);
  MEMORY[0x270FA5388](v198);
  uint64_t v197 = (char *)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F2F60);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v187 = (uint64_t)&v151 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v190 = (uint64_t)&v151 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698F0F90);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v157 = (uint64_t)&v151 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v158 = (uint64_t)&v151 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v162 = (char *)&v151 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v159 = (uint64_t)&v151 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v172 = (uint64_t)&v151 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v179 = (char *)&v151 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v177 = (char *)&v151 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v171 = (uint64_t)&v151 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v178 = (uint64_t)&v151 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v176 = (char *)&v151 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v199 = (uint64_t)&v151 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v192 = (uint64_t)&v151 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v165 = (uint64_t)&v151 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v196 = (uint64_t)&v151 - v51;
  MEMORY[0x270FA5388](v50);
  uint64_t v195 = (uint64_t)&v151 - v52;
  sub_24E863FB8();
  uint64_t v160 = sub_24E863FA8();
  sub_24E863F18();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v54 = v195;
  uint64_t v55 = v200;
  v53(v195, 1, 1, v200);
  uint64_t v56 = v196;
  v53(v196, 1, 1, v55);
  uint64_t v57 = v165;
  int v180 = v53;
  uint64_t v181 = v4 + 56;
  v53(v165, 1, 1, v55);
  uint64_t v58 = *(void *)(a1 + 16);
  if (v58)
  {
    uint64_t v168 = v14;
    id v151 = v9;
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v188 + 16);
    uint64_t v60 = v58;
    unint64_t v61 = (*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80);
    char v184 = (void (**)(uint64_t, uint64_t))(v188 + 8);
    char v185 = v59;
    v188 += 16;
    uint64_t v186 = *(void *)(v188 + 56);
    v193 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v175 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
    uint64_t v170 = (void (**)(uint64_t, char *, uint64_t))(v4 + 16);
    uint64_t v169 = (void (**)(char *, uint64_t))(v4 + 8);
    swift_bridgeObjectRetain();
    int v153 = 0;
    int v154 = 0;
    int v155 = 0;
    char v62 = 0;
    uint64_t v63 = 0;
    uint64_t v174 = v60;
    uint64_t v163 = v60 - 1;
    uint64_t v156 = a1;
    uint64_t v164 = a1 + v61;
    uint64_t v64 = (uint64_t *)&unk_2698F2F60;
    uint64_t v65 = (uint64_t *)&unk_2698F0F90;
    uint64_t v67 = v189;
    uint64_t v66 = v190;
    uint64_t v68 = (uint64_t)v197;
    while (2)
    {
      uint64_t v69 = v164 + v186 * v63;
      uint64_t v70 = v63;
      while (1)
      {
        v185(v68, v69, v198);
        if (*(void *)(v67 + 16))
        {
          unint64_t v77 = sub_24E7C9D20(v68);
          if (v78)
          {
            unint64_t v79 = v77;
            uint64_t v80 = *(void *)(v67 + 56);
            uint64_t v81 = type metadata accessor for SessionFollowerState(0);
            uint64_t v82 = v64;
            uint64_t v83 = *(void *)(v81 - 8);
            uint64_t v84 = v80 + *(void *)(v83 + 72) * v79;
            uint64_t v66 = v190;
            sub_24E6125B0(v84, v190, type metadata accessor for SessionFollowerState);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v66, 0, 1, v81);
            uint64_t v64 = v82;
            uint64_t v67 = v189;
          }
          else
          {
            uint64_t v81 = type metadata accessor for SessionFollowerState(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v66, 1, 1, v81);
          }
          uint64_t v68 = (uint64_t)v197;
        }
        else
        {
          uint64_t v81 = type metadata accessor for SessionFollowerState(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v66, 1, 1, v81);
        }
        (*v184)(v68, v198);
        uint64_t v85 = v66;
        uint64_t v86 = v187;
        sub_24E576EA0(v85, v187, v64);
        type metadata accessor for SessionFollowerState(0);
        uint64_t v87 = *(void *)(v81 - 8);
        int v88 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v86, 1, v81);
        uint64_t v183 = v81;
        if (v88 == 1)
        {
          uint64_t v66 = v190;
          sub_24E563530(v190, v64);
          goto LABEL_6;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v182 = v87;
        uint64_t v194 = v70;
        if (EnumCaseMultiPayload) {
          break;
        }
        uint64_t v191 = v69;
        char v90 = v64;
        uint64_t v91 = v86 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698F2F70) + 48);
        uint64_t v92 = v192;
        sub_24E612440(v86, v192, v65);
        sub_24E612440(v91, v199, v65);
        uint64_t v93 = v178;
        sub_24E576EA0(v195, v178, v65);
        id v94 = *v193;
        unsigned int v95 = (*v193)(v93, 1, v200);
        uint64_t v96 = (uint64_t)v179;
        if (v95 == 1)
        {
          sub_24E563530(v93, v65);
          uint64_t v97 = (uint64_t)v176;
          sub_24E576EA0(v92, (uint64_t)v176, v65);
          uint64_t v68 = (uint64_t)v197;
          uint64_t v66 = v190;
          uint64_t v98 = v200;
          uint64_t v99 = v65;
          uint64_t v100 = v97;
          uint64_t v101 = v195;
        }
        else
        {
          uint64_t v102 = v92;
          id v103 = *v175;
          uint64_t v104 = v173;
          uint64_t v99 = v65;
          uint64_t v105 = v200;
          (*v175)(v173, v93, v200);
          uint64_t v106 = v171;
          sub_24E576EA0(v102, v171, v99);
          if (v94(v106, 1, v105) == 1)
          {
            sub_24E563530(v106, v99);
            uint64_t v100 = (uint64_t)v176;
            uint64_t v98 = v200;
            v103(v176, (uint64_t)v104, v200);
          }
          else
          {
            uint64_t v98 = v200;
            uint64_t v100 = (uint64_t)v176;
            id v107 = v166;
            v103(v166, v106, v200);
            sub_24E609BE8((unint64_t *)&qword_2698F2F78, MEMORY[0x263F07490]);
            if (sub_24E863BE8()) {
              uint64_t v108 = v107;
            }
            else {
              uint64_t v108 = v104;
            }
            (*v170)(v100, v108, v98);
            int v109 = *v169;
            (*v169)(v107, v98);
            v109(v173, v98);
          }
          v180(v100, 0, 1, v98);
          uint64_t v68 = (uint64_t)v197;
          uint64_t v66 = v190;
          uint64_t v101 = v195;
          char v90 = (uint64_t *)&unk_2698F2F60;
        }
        sub_24E563530(v101, v99);
        sub_24E612440(v100, v101, v99);
        sub_24E576EA0(v196, v96, v99);
        if (v94(v96, 1, v98) == 1)
        {
          sub_24E563530(v96, v99);
          uint64_t v71 = v199;
          uint64_t v72 = (uint64_t)v177;
          sub_24E576EA0(v199, (uint64_t)v177, v99);
          uint64_t v65 = v99;
          uint64_t v73 = v194;
          uint64_t v67 = v189;
          uint64_t v74 = v90;
        }
        else
        {
          uint64_t v110 = *v175;
          char v111 = v168;
          uint64_t v112 = v200;
          (*v175)(v168, v96, v200);
          uint64_t v113 = v172;
          sub_24E576EA0(v199, v172, v99);
          if (v94(v113, 1, v112) == 1)
          {
            sub_24E563530(v113, v99);
            uint64_t v72 = (uint64_t)v177;
            unint64_t v114 = v111;
            uint64_t v115 = v200;
            v110(v177, (uint64_t)v114, v200);
            uint64_t v116 = v72;
            uint64_t v117 = v115;
          }
          else
          {
            uint64_t v118 = v167;
            uint64_t v119 = v200;
            v110(v167, v113, v200);
            sub_24E609BE8((unint64_t *)&qword_2698F2F78, MEMORY[0x263F07490]);
            if (sub_24E863BE8()) {
              unint64_t v120 = v118;
            }
            else {
              unint64_t v120 = v111;
            }
            uint64_t v72 = (uint64_t)v177;
            (*v170)((uint64_t)v177, v120, v119);
            uint64_t v121 = *v169;
            (*v169)(v118, v119);
            v121(v111, v119);
            uint64_t v66 = v190;
            uint64_t v116 = v72;
            uint64_t v117 = v119;
          }
          v180(v116, 0, 1, v117);
          uint64_t v68 = (uint64_t)v197;
          uint64_t v71 = v199;
          uint64_t v74 = (uint64_t *)&unk_2698F2F60;
          uint64_t v65 = v99;
          uint64_t v73 = v194;
          uint64_t v67 = v189;
        }
        uint64_t v75 = v191;
        uint64_t v70 = v73 + 1;
        sub_24E563530(v71, v65);
        sub_24E563530(v192, v65);
        sub_24E563530(v66, v74);
        uint64_t v76 = v196;
        sub_24E563530(v196, v65);
        sub_24E612440(v72, v76, v65);
        uint64_t v69 = v75 + v186;
        char v62 = 1;
        uint64_t v64 = v74;
        if (v174 == v70)
        {
          swift_bridgeObjectRelease();
          uint64_t v87 = v182;
LABEL_50:
          sub_24E563530(v165, (uint64_t *)&unk_2698F0F90);
          uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698F2F70);
          uint64_t v142 = v161;
          uint64_t v143 = v161 + *(int *)(v141 + 48);
          sub_24E612440(v195, v161, (uint64_t *)&unk_2698F0F90);
          sub_24E612440(v196, v143, (uint64_t *)&unk_2698F0F90);
          uint64_t v144 = v183;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v142, 0, 1, v144);
          return swift_release();
        }
      }
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v122 = v159;
        sub_24E612440(v187, v159, v65);
        uint64_t v123 = v158;
        sub_24E576EA0(v165, v158, v65);
        char v124 = *v193;
        if ((*v193)(v123, 1, v200) == 1)
        {
          sub_24E563530(v123, v65);
          sub_24E576EA0(v122, (uint64_t)v162, v65);
          uint64_t v66 = v190;
          uint64_t v125 = v122;
        }
        else
        {
          uint64_t v126 = *v175;
          uint64_t v127 = v151;
          uint64_t v128 = v65;
          uint64_t v129 = v200;
          (*v175)(v151, v123, v200);
          uint64_t v130 = v157;
          sub_24E576EA0(v122, v157, v128);
          if (v124(v130, 1, v129) == 1)
          {
            sub_24E563530(v130, v128);
            uint64_t v131 = (uint64_t)v162;
            uint64_t v132 = v200;
            v126(v162, (uint64_t)v127, v200);
            uint64_t v133 = v131;
            uint64_t v134 = v132;
          }
          else
          {
            unint64_t v135 = v152;
            uint64_t v136 = v200;
            v126(v152, v130, v200);
            sub_24E609BE8((unint64_t *)&qword_2698F2F78, MEMORY[0x263F07490]);
            if (sub_24E863BE8()) {
              id v137 = v135;
            }
            else {
              id v137 = v127;
            }
            uint64_t v138 = (uint64_t)v162;
            (*v170)((uint64_t)v162, v137, v136);
            unint64_t v139 = *v169;
            (*v169)(v135, v136);
            v139(v127, v136);
            uint64_t v133 = v138;
            uint64_t v134 = v136;
          }
          v180(v133, 0, 1, v134);
          uint64_t v68 = (uint64_t)v197;
          uint64_t v66 = v190;
          uint64_t v125 = v159;
          uint64_t v65 = v128;
          uint64_t v70 = v194;
        }
        uint64_t v67 = v189;
        uint64_t v64 = (uint64_t *)&unk_2698F2F60;
        sub_24E563530(v125, v65);
        sub_24E563530(v66, (uint64_t *)&unk_2698F2F60);
        uint64_t v140 = v165;
        sub_24E563530(v165, v65);
        sub_24E612440((uint64_t)v162, v140, v65);
        int v155 = 1;
        uint64_t v87 = v182;
      }
      else
      {
        uint64_t v66 = v190;
        if (EnumCaseMultiPayload == 2)
        {
          sub_24E563530(v190, v64);
          int v153 = 1;
        }
        else
        {
          sub_24E563530(v190, v64);
          int v154 = 1;
        }
      }
LABEL_6:
      uint64_t v63 = v70 + 1;
      if (v163 != v70) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
    if (v62) {
      goto LABEL_50;
    }
    sub_24E563530(v196, (uint64_t *)&unk_2698F0F90);
    sub_24E563530(v195, (uint64_t *)&unk_2698F0F90);
    if (v155)
    {
      uint64_t v148 = v161;
      sub_24E612440(v165, v161, (uint64_t *)&unk_2698F0F90);
      uint64_t v149 = v183;
LABEL_59:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v148, 0, 1, v149);
      return swift_release();
    }
    sub_24E563530(v165, (uint64_t *)&unk_2698F0F90);
    if (v154)
    {
      uint64_t v148 = v161;
      uint64_t v149 = v183;
      goto LABEL_59;
    }
    uint64_t v145 = v161;
    if (v153)
    {
      uint64_t v150 = v183;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v145, 0, 1, v150);
      return swift_release();
    }
  }
  else
  {
    sub_24E563530(v56, (uint64_t *)&unk_2698F0F90);
    sub_24E563530(v54, (uint64_t *)&unk_2698F0F90);
    sub_24E563530(v57, (uint64_t *)&unk_2698F0F90);
    uint64_t v145 = v161;
  }
  uint64_t v146 = type metadata accessor for SessionFollowerState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 56))(v145, 1, 1, v146);
  return swift_release();
}