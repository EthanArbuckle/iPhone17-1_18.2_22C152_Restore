uint64_t BodyFocus.artworks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BodyFocus.iconName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BodyFocus.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BodyFocus.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BodyFocus.init(artworks:iconName:identifier:name:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

BOOL sub_24EEF3F10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24EEF3F24()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EEF3F6C()
{
  return sub_24EF87AA0();
}

uint64_t sub_24EEF3F98()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EEF3FDC()
{
  uint64_t result = 0x736B726F77747261;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D614E6E6F6369;
      break;
    case 2:
      uint64_t result = 0x696669746E656469;
      break;
    case 3:
      uint64_t result = 1701667182;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EEF4064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EEF6E00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EEF408C()
{
  return 0;
}

void sub_24EEF4098(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24EEF40A4(uint64_t a1)
{
  unint64_t v2 = sub_24EEF43F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EEF40E0(uint64_t a1)
{
  unint64_t v2 = sub_24EEF43F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EEF411C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *a1 = *(void *)(v1 + 24);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t BodyFocus.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985878);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  v13[5] = v1[2];
  v13[6] = v8;
  uint64_t v10 = v1[3];
  v13[3] = v1[4];
  v13[4] = v10;
  uint64_t v11 = v1[5];
  v13[1] = v1[6];
  v13[2] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EEF43F0();
  sub_24EF87AF0();
  uint64_t v18 = v9;
  char v17 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  sub_24EEF4884(&qword_269985890, &qword_269985898);
  sub_24EF87A20();
  if (!v2)
  {
    char v16 = 1;
    sub_24EF879B0();
    char v15 = 2;
    sub_24EF879D0();
    char v14 = 3;
    sub_24EF879D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_24EEF43F0()
{
  unint64_t result = qword_269985880;
  if (!qword_269985880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985880);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t BodyFocus.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EEF43F0();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  char v34 = 0;
  sub_24EEF4884(&qword_2699858A8, &qword_2699858B0);
  sub_24EF87970();
  uint64_t v9 = v35;
  char v33 = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24EF87900();
  uint64_t v30 = v11;
  uint64_t v28 = v10;
  uint64_t v29 = v9;
  char v32 = 2;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_24EF87920();
  uint64_t v27 = v12;
  char v31 = 3;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24EF87920();
  uint64_t v16 = v15;
  char v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v25 = v13;
  v17(v8, v5);
  uint64_t v18 = v29;
  swift_bridgeObjectRetain();
  uint64_t v19 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v27;
  uint64_t v20 = v28;
  *a2 = v18;
  a2[1] = v20;
  uint64_t v22 = v26;
  a2[2] = v19;
  a2[3] = v22;
  uint64_t v23 = v25;
  a2[4] = v21;
  a2[5] = v23;
  a2[6] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_24EEF4884(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985888);
    sub_24EEF78DC(a2, (void (*)(uint64_t))type metadata accessor for Artwork);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EEF4918@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return BodyFocus.init(from:)(a1, a2);
}

uint64_t sub_24EEF4930(void *a1)
{
  return BodyFocus.encode(to:)(a1);
}

uint64_t sub_24EEF494C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48)) {
    return 0;
  }
  else {
    return sub_24EF87A60();
  }
}

uint64_t sub_24EEF497C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_24EF87A60() ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_24EEF49BC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48)) {
    char v3 = 1;
  }
  else {
    char v3 = sub_24EF87A60() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_24EEF4A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  if (v4 == v2 && v5 == v3) {
    return 0;
  }
  else {
    return sub_24EF87A60();
  }
}

uint64_t BodyFocus.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(a1, v3);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t BodyFocus.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  sub_24EF87A90();
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(v4, v1);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  return sub_24EF87AD0();
}

uint64_t sub_24EEF4C28()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  sub_24EF87A90();
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(v4, v1);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  return sub_24EF87AD0();
}

uint64_t sub_24EEF4D1C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24EEF4D24()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24EEF4D54()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24EEF4D84()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EEF4DCC()
{
  return sub_24EF87AA0();
}

uint64_t sub_24EEF4DF8()
{
  return sub_24EF87AD0();
}

BOOL sub_24EEF4E3C(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_24EEF4E50@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_24EEF4E60(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_24EEF4E6C(long long *a1, uint64_t a2)
{
  uint64_t v59 = a2;
  uint64_t v58 = sub_24EF86A40();
  uint64_t v62 = *(void *)(v58 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v52 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24EF86AA0();
  uint64_t v7 = *(void *)(v6 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v51 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = &qword_2699858F0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Artwork();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v57 = (uint64_t)&v44 - v17;
  uint64_t v18 = *((void *)a1 + 8);
  long long v19 = a1[1];
  long long v63 = *a1;
  long long v64 = v19;
  long long v20 = a1[2];
  long long v21 = a1[3];
  v44 = a1;
  long long v65 = v20;
  long long v66 = v21;
  uint64_t v67 = v18;
  uint64_t v56 = sub_24EF87AD0();
  uint64_t v22 = *(void *)(v59 + 56);
  uint64_t v45 = v59 + 56;
  uint64_t v23 = 1 << *(unsigned char *)(v59 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  int64_t v60 = (unint64_t)(v23 + 63) >> 6;
  v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v49 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  v48 = (void (**)(char *, uint64_t))(v7 + 8);
  v54 = (unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
  v47 = (void (**)(char *, char *, uint64_t))(v62 + 32);
  v46 = (void (**)(char *, uint64_t))(v62 + 8);
  swift_bridgeObjectRetain();
  unint64_t v26 = v25;
  uint64_t v27 = 0;
  int64_t v28 = 0;
  v53 = v16;
  uint64_t v50 = v13;
  while (1)
  {
    uint64_t v62 = v27;
    if (v26)
    {
      uint64_t v61 = (v26 - 1) & v26;
      unint64_t v35 = __clz(__rbit64(v26)) | (v28 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v28++, 1)) {
      goto LABEL_25;
    }
    if (v28 >= v60) {
      break;
    }
    unint64_t v37 = *(void *)(v45 + 8 * v28);
    if (!v37)
    {
      int64_t v38 = v28 + 1;
      if (v28 + 1 >= v60) {
        break;
      }
      unint64_t v37 = *(void *)(v45 + 8 * v38);
      if (!v37)
      {
        while (1)
        {
          int64_t v28 = v38 + 1;
          if (__OFADD__(v38, 1)) {
            break;
          }
          if (v28 >= v60) {
            goto LABEL_23;
          }
          unint64_t v37 = *(void *)(v45 + 8 * v28);
          ++v38;
          if (v37) {
            goto LABEL_17;
          }
        }
        __break(1u);
LABEL_25:
        __break(1u);
        JUMPOUT(0x24EEF562CLL);
      }
      ++v28;
    }
LABEL_17:
    uint64_t v61 = (v37 - 1) & v37;
    unint64_t v35 = __clz(__rbit64(v37)) + (v28 << 6);
LABEL_18:
    uint64_t v39 = v57;
    sub_24EEF77B0(*(void *)(v59 + 48) + *(void *)(v13 + 72) * v35, v57);
    sub_24EEF7814(v39, (uint64_t)v16);
    sub_24EF87A90();
    sub_24EEF7878((uint64_t)v16, (uint64_t)v11, v9);
    if ((*v55)(v11, 1, v6) == 1)
    {
      sub_24EF87AB0();
    }
    else
    {
      v40 = v51;
      (*v49)(v51, v11, v6);
      sub_24EF87AB0();
      sub_24EEF78DC(&qword_2699858F8, MEMORY[0x263F3E0F0]);
      sub_24EF875A0();
      v41 = v40;
      uint64_t v16 = v53;
      (*v48)(v41, v6);
    }
    sub_24EF87670();
    swift_bridgeObjectRelease();
    sub_24EEF7878((uint64_t)&v16[*(int *)(v12 + 24)], (uint64_t)v5, &qword_2699858E8);
    uint64_t v42 = v58;
    if ((*v54)(v5, 1, v58) == 1)
    {
      sub_24EF87AB0();
    }
    else
    {
      uint64_t v29 = v12;
      uint64_t v30 = v11;
      char v31 = v9;
      char v32 = v52;
      (*v47)(v52, v5, v42);
      sub_24EF87AB0();
      sub_24EEF78DC(&qword_269985900, MEMORY[0x263F06EA8]);
      sub_24EF875A0();
      char v33 = v32;
      uint64_t v9 = v31;
      uint64_t v11 = v30;
      uint64_t v12 = v29;
      uint64_t v13 = v50;
      uint64_t v16 = v53;
      (*v46)(v33, v42);
    }
    uint64_t v34 = sub_24EF87AD0();
    sub_24EEF7924((uint64_t)v16);
    unint64_t v26 = v61;
    uint64_t v27 = v34 ^ v62;
  }
LABEL_23:
  swift_release();
  return sub_24EF87AA0();
}

uint64_t sub_24EEF5654(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24EF87AD0();
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v5++, 1)) {
      goto LABEL_19;
    }
    if (v5 >= v10) {
      return sub_24EF87AA0();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    if (!v12) {
      break;
    }
LABEL_16:
    uint64_t v9 = (v12 - 1) & v12;
LABEL_5:
    sub_24EF87A90();
    sub_24EF87AA0();
    uint64_t result = sub_24EF87AD0();
    v4 ^= result;
  }
  int64_t v13 = v5 + 1;
  if (v5 + 1 >= v10) {
    return sub_24EF87AA0();
  }
  uint64_t v12 = *(void *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v10) {
      return sub_24EF87AA0();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_24EEF57C0(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2 + 56;
  sub_24EF87AD0();
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 56);
  int64_t v28 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v30 = a2;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v15 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v7++, 1)) {
      goto LABEL_30;
    }
    if (v7 >= v28) {
      break;
    }
    unint64_t v18 = *(void *)(v29 + 8 * v7);
    if (!v18)
    {
      int64_t v19 = v7 + 1;
      if (v7 + 1 >= v28) {
        break;
      }
      unint64_t v18 = *(void *)(v29 + 8 * v19);
      if (!v18)
      {
        while (1)
        {
          int64_t v7 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            break;
          }
          if (v7 >= v28) {
            goto LABEL_28;
          }
          unint64_t v18 = *(void *)(v29 + 8 * v7);
          ++v19;
          if (v18) {
            goto LABEL_18;
          }
        }
        __break(1u);
LABEL_30:
        __break(1u);
        JUMPOUT(0x24EEF5C50);
      }
      ++v7;
    }
LABEL_18:
    unint64_t v5 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_19:
    uint64_t v20 = *(void *)(v30 + 48) + 48 * v16;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v20 + 24);
    uint64_t v25 = *(void *)(v20 + 32);
    uint64_t v26 = *(unsigned __int8 *)(v20 + 40);
    sub_24EF87A90();
    switch(v26)
    {
      case 1:
        sub_24EF87AA0();
        sub_24EEF7798(v21, v22, v23, v24, v25, 1u);
        sub_24EF87670();
        sub_24EF87AC0();
        sub_24EF87AC0();
        sub_24EF87AC0();
        goto LABEL_6;
      case 2:
        sub_24EF87AA0();
        uint64_t v8 = v21;
        uint64_t v9 = v22;
        uint64_t v10 = v23;
        uint64_t v11 = v24;
        uint64_t v12 = v25;
        unsigned __int8 v13 = 2;
        goto LABEL_5;
      case 3:
        sub_24EF87AA0();
        uint64_t v8 = v21;
        uint64_t v9 = v22;
        uint64_t v10 = v23;
        uint64_t v11 = v24;
        uint64_t v12 = v25;
        unsigned __int8 v13 = 3;
        goto LABEL_5;
      case 4:
        sub_24EF87AA0();
        uint64_t v8 = v21;
        uint64_t v9 = v22;
        uint64_t v10 = v23;
        uint64_t v11 = v24;
        uint64_t v12 = v25;
        unsigned __int8 v13 = 4;
        goto LABEL_5;
      case 5:
        sub_24EF87AA0();
        uint64_t v8 = v21;
        uint64_t v9 = v22;
        uint64_t v10 = v23;
        uint64_t v11 = v24;
        uint64_t v12 = v25;
        unsigned __int8 v13 = 5;
        goto LABEL_5;
      case 6:
        sub_24EF87AA0();
        uint64_t v8 = v21;
        uint64_t v9 = v22;
        uint64_t v10 = v23;
        uint64_t v11 = v24;
        uint64_t v12 = v25;
        unsigned __int8 v13 = 6;
        goto LABEL_5;
      case 7:
        sub_24EF87AA0();
        uint64_t v8 = v21;
        uint64_t v9 = v22;
        uint64_t v10 = v23;
        uint64_t v11 = v24;
        uint64_t v12 = v25;
        unsigned __int8 v13 = 7;
        goto LABEL_5;
      case 8:
        sub_24EF87AA0();
        sub_24EF87670();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      default:
        sub_24EF87AA0();
        uint64_t v8 = v21;
        uint64_t v9 = v22;
        uint64_t v10 = v23;
        uint64_t v11 = v24;
        uint64_t v12 = v25;
        unsigned __int8 v13 = 0;
LABEL_5:
        sub_24EEF7798(v8, v9, v10, v11, v12, v13);
        sub_24EF87670();
LABEL_6:
        uint64_t v14 = sub_24EF87AD0();
        sub_24EEF7780(v21, v22, v23, v24, v25, v26);
        v6 ^= v14;
        break;
    }
  }
LABEL_28:
  swift_release();
  return sub_24EF87AA0();
}

uint64_t sub_24EEF5C98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 64);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v26[9] = *(_OWORD *)a1;
  *(_OWORD *)&v26[11] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v26[13] = *(_OWORD *)(a1 + 32);
  *(_OWORD *)&v26[15] = v5;
  v26[17] = v3;
  sub_24EF87AD0();
  uint64_t v22 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  uint64_t v23 = a2;
  int64_t v24 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  int64_t v11 = 0;
  while (1)
  {
    uint64_t v25 = v10;
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v11++, 1)) {
      goto LABEL_23;
    }
    if (v11 >= v24)
    {
LABEL_21:
      swift_release();
      return sub_24EF87AA0();
    }
    unint64_t v16 = *(void *)(v22 + 8 * v11);
    if (!v16) {
      break;
    }
LABEL_16:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_17:
    unint64_t v18 = (uint64_t *)(*(void *)(v23 + 48) + 72 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[2];
    uint64_t v21 = v18[6];
    sub_24EF87A90();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24EEF4E6C((long long *)v26, v19);
    swift_bridgeObjectRelease();
    sub_24EF87AB0();
    if (v20)
    {
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
    sub_24EF87AB0();
    if (v21)
    {
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_24EF87AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v10 = v12 ^ v25;
  }
  int64_t v17 = v11 + 1;
  if (v11 + 1 >= v24) {
    goto LABEL_21;
  }
  unint64_t v16 = *(void *)(v22 + 8 * v17);
  if (v16)
  {
    ++v11;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_21;
    }
    unint64_t v16 = *(void *)(v22 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_24EEF5F68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 64);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v29[9] = *(_OWORD *)a1;
  *(_OWORD *)&v29[11] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v29[13] = *(_OWORD *)(a1 + 32);
  *(_OWORD *)&v29[15] = v5;
  v29[17] = v3;
  uint64_t v24 = a2 + 56;
  sub_24EF87AD0();
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  uint64_t v25 = a2;
  int64_t v26 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  int64_t v11 = 0;
  while (1)
  {
    uint64_t v28 = v10;
    if (v8)
    {
      uint64_t v27 = (v8 - 1) & v8;
      unint64_t v13 = __clz(__rbit64(v8)) | (v11 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v11++, 1)) {
      goto LABEL_24;
    }
    if (v11 >= v26)
    {
LABEL_22:
      swift_release();
      return sub_24EF87AA0();
    }
    unint64_t v15 = *(void *)(v24 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    uint64_t v27 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_17:
    int64_t v17 = (uint64_t *)(*(void *)(v25 + 48) + 72 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = v17[3];
    uint64_t v21 = v17[8];
    sub_24EF87A90();
    sub_24EF87AA0();
    uint64_t v22 = *(void *)(v18 + 16);
    if (v22)
    {
      uint64_t v23 = v18 + 32;
      do
      {
        v23 += 8;
        sub_24EF87AA0();
        --v22;
      }
      while (v22);
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_24EEF4E6C((long long *)v29, v19);
    swift_bridgeObjectRelease();
    sub_24EF87AB0();
    if (v20)
    {
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24EEF5654((uint64_t)v29, v21);
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_24EF87AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v10 = v12 ^ v28;
    unint64_t v8 = v27;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v26) {
    goto LABEL_22;
  }
  unint64_t v15 = *(void *)(v24 + 8 * v16);
  if (v15)
  {
    ++v11;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_22;
    }
    unint64_t v15 = *(void *)(v24 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_24EEF6260(long long *a1, uint64_t a2)
{
  uint64_t v3 = *((void *)a1 + 8);
  long long v4 = a1[1];
  long long v29 = *a1;
  long long v30 = v4;
  long long v5 = a1[3];
  long long v31 = a1[2];
  long long v32 = v5;
  uint64_t v33 = v3;
  sub_24EF87AD0();
  uint64_t v25 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v26 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v27 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v11++, 1)) {
      goto LABEL_28;
    }
    if (v11 >= v26)
    {
LABEL_26:
      swift_release();
      return sub_24EF87AA0();
    }
    unint64_t v16 = *(void *)(v25 + 8 * v11);
    if (!v16) {
      break;
    }
LABEL_16:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_17:
    uint64_t v18 = (void *)(*(void *)(v27 + 48) + 56 * v14);
    uint64_t v19 = v18[1];
    uint64_t v20 = v18[3];
    uint64_t v21 = v18[4];
    uint64_t v22 = v18[6];
    sub_24EF87A90();
    sub_24EF87AA0();
    sub_24EF87AA0();
    uint64_t v23 = *(void *)(v19 + 16);
    if (v23)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v24 = v19 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_24EF87670();
        swift_bridgeObjectRelease();
        v24 += 16;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24EF87AB0();
    if (v20)
    {
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_24EF4DD48((uint64_t)v28, v21);
    swift_bridgeObjectRelease();
    sub_24EF87AB0();
    if (v22)
    {
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
    }
    uint64_t v12 = sub_24EF87AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    v10 ^= v12;
  }
  int64_t v17 = v11 + 1;
  if (v11 + 1 >= v26) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v25 + 8 * v17);
  if (v16)
  {
    ++v11;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v25 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24EEF656C(uint64_t a1, uint64_t a2)
{
  sub_24EF87AD0();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_24EF87AA0();
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    if (!v13) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    sub_24EF87A90();
    swift_bridgeObjectRetain();
    sub_24EF87670();
    sub_24EF87AC0();
    sub_24EF87AC0();
    sub_24EF87AC0();
    uint64_t v11 = sub_24EF87AD0();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  int64_t v14 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_24EEF6740(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 64);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v26[9] = *(_OWORD *)a1;
  *(_OWORD *)&v26[11] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v26[13] = *(_OWORD *)(a1 + 32);
  *(_OWORD *)&v26[15] = v5;
  v26[17] = v3;
  sub_24EF87AD0();
  uint64_t v22 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  uint64_t v23 = a2;
  int64_t v24 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  int64_t v11 = 0;
  while (1)
  {
    uint64_t v25 = v10;
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v11++, 1)) {
      goto LABEL_21;
    }
    if (v11 >= v24)
    {
LABEL_19:
      swift_release();
      return sub_24EF87AA0();
    }
    unint64_t v16 = *(void *)(v22 + 8 * v11);
    if (!v16) {
      break;
    }
LABEL_16:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_17:
    uint64_t v18 = (uint64_t *)(*(void *)(v23 + 48) + 72 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[2];
    uint64_t v21 = v18[8];
    sub_24EF87A90();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_24EEF4E6C((long long *)v26, v19);
    swift_bridgeObjectRelease();
    sub_24EF87AB0();
    if (v20)
    {
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
    sub_24EF87AA0();
    swift_bridgeObjectRetain();
    sub_24EF32D8C((long long *)v26, v21);
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_24EF87AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v10 = v12 ^ v25;
  }
  int64_t v17 = v11 + 1;
  if (v11 + 1 >= v24) {
    goto LABEL_19;
  }
  unint64_t v16 = *(void *)(v22 + 8 * v17);
  if (v16)
  {
    ++v11;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_19;
    }
    unint64_t v16 = *(void *)(v22 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24EEF69F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 64);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v25[9] = *(_OWORD *)a1;
  *(_OWORD *)&v25[11] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v25[13] = *(_OWORD *)(a1 + 32);
  *(_OWORD *)&v25[15] = v5;
  v25[17] = v3;
  uint64_t v22 = a2 + 56;
  sub_24EF87AD0();
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v21 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v23 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  int64_t v11 = 0;
  while (1)
  {
    uint64_t v24 = v10;
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v11++, 1)) {
      goto LABEL_21;
    }
    if (v11 >= v21)
    {
LABEL_19:
      swift_release();
      return sub_24EF87AA0();
    }
    unint64_t v16 = *(void *)(v22 + 8 * v11);
    if (!v16) {
      break;
    }
LABEL_16:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_17:
    uint64_t v18 = (uint64_t *)(*(void *)(v23 + 48) + 56 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[2];
    sub_24EF87A90();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_24EEF4E6C((long long *)v25, v19);
    swift_bridgeObjectRelease();
    sub_24EF87AB0();
    if (v20)
    {
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_24EF87AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v10 = v12 ^ v24;
  }
  int64_t v17 = v11 + 1;
  if (v11 + 1 >= v21) {
    goto LABEL_19;
  }
  unint64_t v16 = *(void *)(v22 + 8 * v17);
  if (v16)
  {
    ++v11;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v21) {
      goto LABEL_19;
    }
    unint64_t v16 = *(void *)(v22 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24EEF6C68(uint64_t a1, uint64_t a2)
{
  sub_24EF87AD0();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_24EF87AA0();
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    if (!v13) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    sub_24EF87A90();
    swift_bridgeObjectRetain();
    sub_24EF87670();
    uint64_t v11 = sub_24EF87AD0();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  int64_t v14 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_24EEF6E00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736B726F77747261 && a2 == 0xE800000000000000;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E6E6F6369 && a2 == 0xE800000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t _s16FitnessFiltering9BodyFocusV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v15 = a1[5];
  uint64_t v16 = a1[6];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  if ((sub_24EF01DD8(*a1, *a2) & 1) == 0) {
    return 0;
  }
  if (v4)
  {
    if (v7)
    {
      if (v2 != v6 || v4 != v7)
      {
        char v12 = sub_24EF87A60();
        uint64_t result = 0;
        if ((v12 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v7) {
    return 0;
  }
LABEL_11:
  if (v3 == v8 && v5 == v10 || (v14 = sub_24EF87A60(), uint64_t result = 0, (v14 & 1) != 0))
  {
    if (v15 == v9 && v16 == v11)
    {
      return 1;
    }
    else
    {
      return sub_24EF87A60();
    }
  }
  return result;
}

uint64_t sub_24EEF7104()
{
  return MEMORY[0x263F8D320];
}

unint64_t sub_24EEF7114()
{
  unint64_t result = qword_2699858B8;
  if (!qword_2699858B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699858B8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BodyFocus(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for BodyFocus()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for BodyFocus(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BodyFocus(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for BodyFocus(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BodyFocus(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BodyFocus(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyFocus()
{
  return &type metadata for BodyFocus;
}

void type metadata accessor for HKWorkoutActivityType()
{
  if (!qword_2699858C0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_2699858C0);
    }
  }
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BodyFocus.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BodyFocus.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EEF75E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_24EEF760C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24EEF7618(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for BodyFocus.CodingKeys()
{
  return &type metadata for BodyFocus.CodingKeys;
}

unint64_t sub_24EEF7634()
{
  unint64_t result = qword_2699858C8;
  if (!qword_2699858C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699858C8);
  }
  return result;
}

uint64_t sub_24EEF7688()
{
  return sub_24EEF78DC(&qword_2699858D0, (void (*)(uint64_t))type metadata accessor for HKWorkoutActivityType);
}

unint64_t sub_24EEF76D4()
{
  unint64_t result = qword_2699858D8;
  if (!qword_2699858D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699858D8);
  }
  return result;
}

unint64_t sub_24EEF772C()
{
  unint64_t result = qword_2699858E0;
  if (!qword_2699858E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699858E0);
  }
  return result;
}

uint64_t sub_24EEF7780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 7u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EEF7798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 7u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24EEF77B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EEF7814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EEF7878(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EEF78DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EEF7924(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Filter.exclusions.getter()
{
  return swift_bridgeObjectRetain();
}

void Filter.filterContentType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t Filter.inclusions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Filter.sortMode.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t Filter.init(exclusions:filterContentType:inclusions:sortMode:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v5 = *a2;
  *(void *)a5 = result;
  *(unsigned char *)(a5 + 8) = v5;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = a4;
  return result;
}

unint64_t sub_24EEF79C0()
{
  unint64_t result = 0x6F6973756C637865;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6F6973756C636E69;
      break;
    case 3:
      unint64_t result = 0x65646F4D74726F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EEF7A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EEF8B78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EEF7A80(uint64_t a1)
{
  unint64_t v2 = sub_24EEF7D5C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EEF7ABC(uint64_t a1)
{
  unint64_t v2 = sub_24EEF7D5C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Filter.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985908);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  int v15 = *((unsigned __int8 *)v1 + 8);
  uint64_t v14 = v1[2];
  int v13 = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EEF7D5C();
  sub_24EF87AF0();
  uint64_t v17 = v8;
  char v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985918);
  sub_24EEF81D8(&qword_269985920, (void (*)(void))sub_24EEF7DB0);
  sub_24EF87A20();
  if (!v2)
  {
    uint64_t v9 = v14;
    char v10 = v13;
    LOBYTE(v17) = v15;
    char v16 = 1;
    sub_24EEF7E04();
    sub_24EF87A20();
    uint64_t v17 = v9;
    char v16 = 2;
    sub_24EF87A20();
    LOBYTE(v17) = v10;
    char v16 = 3;
    sub_24EEF7E58();
    sub_24EF87A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EEF7D5C()
{
  unint64_t result = qword_269985910;
  if (!qword_269985910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985910);
  }
  return result;
}

unint64_t sub_24EEF7DB0()
{
  unint64_t result = qword_269985928;
  if (!qword_269985928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985928);
  }
  return result;
}

unint64_t sub_24EEF7E04()
{
  unint64_t result = qword_269985930;
  if (!qword_269985930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985930);
  }
  return result;
}

unint64_t sub_24EEF7E58()
{
  unint64_t result = qword_269985938;
  if (!qword_269985938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985938);
  }
  return result;
}

uint64_t Filter.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985940);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EEF7D5C();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v17 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985918);
  char v18 = 0;
  sub_24EEF81D8(&qword_269985948, (void (*)(void))sub_24EEF8248);
  sub_24EF87970();
  uint64_t v9 = v19;
  char v18 = 1;
  sub_24EEF829C();
  swift_bridgeObjectRetain();
  sub_24EF87970();
  int v16 = v19;
  char v18 = 2;
  sub_24EF87970();
  char v11 = v16;
  uint64_t v12 = v19;
  char v18 = 3;
  sub_24EEF82F0();
  swift_bridgeObjectRetain();
  sub_24EF87970();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v13 = v19;
  uint64_t v14 = v17;
  *uint64_t v17 = v9;
  *((unsigned char *)v14 + 8) = v11;
  v14[2] = v12;
  *((unsigned char *)v14 + 24) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EEF81D8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985918);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EEF8248()
{
  unint64_t result = qword_269985950;
  if (!qword_269985950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985950);
  }
  return result;
}

unint64_t sub_24EEF829C()
{
  unint64_t result = qword_269985958;
  if (!qword_269985958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985958);
  }
  return result;
}

unint64_t sub_24EEF82F0()
{
  unint64_t result = qword_269985960;
  if (!qword_269985960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985960);
  }
  return result;
}

uint64_t sub_24EEF8344@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Filter.init(from:)(a1, a2);
}

uint64_t sub_24EEF835C(void *a1)
{
  return Filter.encode(to:)(a1);
}

uint64_t Filter.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  swift_bridgeObjectRetain();
  sub_24EEF57C0(a1, v3);
  swift_bridgeObjectRelease();
  sub_24EF87AA0();
  swift_bridgeObjectRetain();
  sub_24EEF57C0(a1, v4);
  swift_bridgeObjectRelease();
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t Filter.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 8);
  uint64_t v2 = v0[2];
  char v3 = *((unsigned char *)v0 + 24);
  uint64_t v6 = *v0;
  char v7 = v1;
  uint64_t v8 = v2;
  char v9 = v3;
  sub_24EF87A90();
  Filter.hash(into:)((uint64_t)v5);
  return sub_24EF87AD0();
}

uint64_t sub_24EEF85A0()
{
  char v1 = *((unsigned char *)v0 + 8);
  uint64_t v2 = v0[2];
  char v3 = *((unsigned char *)v0 + 24);
  uint64_t v6 = *v0;
  char v7 = v1;
  uint64_t v8 = v2;
  char v9 = v3;
  sub_24EF87A90();
  Filter.hash(into:)((uint64_t)v5);
  return sub_24EF87AD0();
}

uint64_t sub_24EEF8608()
{
  char v1 = *((unsigned char *)v0 + 8);
  uint64_t v2 = v0[2];
  char v3 = *((unsigned char *)v0 + 24);
  uint64_t v6 = *v0;
  char v7 = v1;
  uint64_t v8 = v2;
  char v9 = v3;
  sub_24EF87A90();
  Filter.hash(into:)((uint64_t)v5);
  return sub_24EF87AD0();
}

uint64_t _s16FitnessFiltering6FilterV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 24);
  int v5 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  if ((sub_24EF05194(*(void *)a1, *(void *)a2) & 1) == 0
    || ((v2 ^ v5) & 1) != 0
    || (sub_24EF05194(v3, v6) & 1) == 0)
  {
    return 0;
  }
  return sub_24EF065E0(v4, v7);
}

unint64_t sub_24EEF8714()
{
  unint64_t result = qword_269985968;
  if (!qword_269985968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985968);
  }
  return result;
}

uint64_t destroy for Filter()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Filter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Filter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Filter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for Filter(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Filter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Filter()
{
  return &type metadata for Filter;
}

unsigned char *storeEnumTagSinglePayload for Filter.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EEF8A38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Filter.CodingKeys()
{
  return &type metadata for Filter.CodingKeys;
}

unint64_t sub_24EEF8A74()
{
  unint64_t result = qword_269985970;
  if (!qword_269985970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985970);
  }
  return result;
}

unint64_t sub_24EEF8ACC()
{
  unint64_t result = qword_269985978;
  if (!qword_269985978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985978);
  }
  return result;
}

unint64_t sub_24EEF8B24()
{
  unint64_t result = qword_269985980;
  if (!qword_269985980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985980);
  }
  return result;
}

uint64_t sub_24EEF8B78(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6F6973756C637865 && a2 == 0xEA0000000000736ELL;
  if (v3 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024EF90B80 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6973756C636E69 && a2 == 0xEA0000000000736ELL || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65646F4D74726F73 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t FilterThemeSectionView.init(sizeClass:headerViewBuilder:options:onOptionSelected:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(unsigned char *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a5;
  *(void *)(a7 + 32) = a6;
  *(void *)(a7 + 40) = a4;
  return result;
}

uint64_t FilterThemeSectionView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v42 = a1;
  uint64_t v3 = a1[2];
  uint64_t v30 = a1[3];
  uint64_t v36 = v3;
  uint64_t v37 = a1[4];
  uint64_t v41 = a1[6];
  uint64_t v40 = a1[7];
  uint64_t v39 = a1[8];
  uint64_t v38 = a1[9];
  *((void *)&v60 + 1) = v38;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  sub_24EF87730();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985988);
  swift_getWitnessTable();
  *(void *)&long long v60 = MEMORY[0x263F8D320];
  sub_24EF87420();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985990);
  sub_24EEF9560();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  sub_24EF87490();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  sub_24EF86B50();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EF86F30();
  *(void *)&long long v59 = swift_getOpaqueTypeConformance2();
  *((void *)&v59 + 1) = MEMORY[0x263F1A480];
  *(void *)&long long v58 = swift_getOpaqueTypeMetadata2();
  *((void *)&v58 + 1) = swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  uint64_t v31 = sub_24EF874A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v4 = sub_24EF873E0();
  uint64_t v34 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v29 = (char *)&v28 - v5;
  uint64_t v33 = sub_24EF86C00();
  uint64_t v35 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v28 = (char *)&v28 - v6;
  uint64_t v7 = sub_24EF87430();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (_OWORD *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_24EF87440();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = v2[1];
  long long v58 = *v2;
  long long v59 = v15;
  long long v60 = v2[2];
  *char v10 = xmmword_24EF884E0;
  (*(void (**)(_OWORD *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F1B8C8], v7);
  sub_24EF87450();
  uint64_t v16 = sub_24EF87710();
  *(void *)(v16 + 16) = 4;
  unint64_t v17 = v16 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  char v18 = *(void (**)(unint64_t, char *, uint64_t))(v12 + 16);
  v18(v17, v14, v11);
  uint64_t v19 = *(void *)(v12 + 72);
  v18(v17 + v19, v14, v11);
  v18(v17 + 2 * v19, v14, v11);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + 3 * v19, v14, v11);
  sub_24EF86D90();
  uint64_t v44 = v36;
  uint64_t v45 = v30;
  uint64_t v20 = v42[5];
  uint64_t v46 = v37;
  uint64_t v47 = v20;
  uint64_t v48 = v41;
  uint64_t v49 = v40;
  uint64_t v50 = v39;
  uint64_t v51 = v38;
  uint64_t v52 = v42[10];
  v53 = &v58;
  uint64_t v54 = v16;
  int64_t v21 = v29;
  sub_24EF873D0();
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = v28;
  sub_24EF872B0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v4);
  uint64_t v24 = sub_24EF86F80();
  uint64_t v55 = v22;
  uint64_t v56 = MEMORY[0x263F190E0];
  uint64_t v25 = v33;
  uint64_t v26 = swift_getWitnessTable();
  sub_24EEFBE98(v24, 0x4034000000000000, 0, v25, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v23, v25);
}

unint64_t sub_24EEF9560()
{
  unint64_t result = qword_269985998;
  if (!qword_269985998)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985990);
    sub_24EEF960C();
    sub_24EEFD47C(qword_2699859F8, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985998);
  }
  return result;
}

unint64_t sub_24EEF960C()
{
  unint64_t result = qword_2699859A0;
  if (!qword_2699859A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859A8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859B0);
    sub_24EEF96E0();
    swift_getOpaqueTypeConformance2();
    sub_24EEFD4C4(&qword_2699859E8, &qword_2699859F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699859A0);
  }
  return result;
}

unint64_t sub_24EEF96E0()
{
  unint64_t result = qword_2699859B8;
  if (!qword_2699859B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859B0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859C0);
    sub_24EEFD4C4(&qword_2699859C8, &qword_2699859C0);
    sub_24EEF97F4();
    swift_getOpaqueTypeConformance2();
    sub_24EEFD4C4(&qword_2699859D8, &qword_2699859E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699859B8);
  }
  return result;
}

unint64_t sub_24EEF97F4()
{
  unint64_t result = qword_2699859D0;
  if (!qword_2699859D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699859D0);
  }
  return result;
}

uint64_t sub_24EEF9848(uint64_t result, uint64_t a2)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = result;
    if (a2)
    {
      uint64_t v4 = sub_24EF87440();
      uint64_t v5 = sub_24EF87710();
      *(void *)(v5 + 16) = a2;
      uint64_t v6 = *(void *)(v4 - 8);
      unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16);
      v8(v5 + v7, v3, v4);
      uint64_t v9 = a2 - 1;
      if (a2 != 1)
      {
        uint64_t v10 = *(void *)(v6 + 72);
        unint64_t v11 = v5 + v10 + v7;
        do
        {
          v8(v11, v3, v4);
          v11 += v10;
          --v9;
        }
        while (v9);
      }
    }
    else
    {
      uint64_t v5 = MEMORY[0x263F8EE78];
    }
    uint64_t v12 = sub_24EF87440();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v3, v12);
    return v5;
  }
  return result;
}

uint64_t sub_24EEF99A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v93 = a8;
  uint64_t v94 = a7;
  uint64_t v106 = a6;
  unint64_t v90 = a5;
  v118 = a3;
  uint64_t v107 = a2;
  uint64_t v117 = a9;
  uint64_t v119 = a12;
  uint64_t v92 = a11;
  uint64_t v91 = a10;
  uint64_t v116 = sub_24EF86DF0();
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  v114 = (char *)v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24EF86F10();
  MEMORY[0x270FA5388](v19 - 8);
  v111 = (char *)v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24EF86F30();
  uint64_t v112 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  v110 = (char *)v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_24EF86EF0();
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  v101 = (char *)v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = a3;
  unint64_t v135 = a5;
  uint64_t v136 = a7;
  uint64_t v137 = a8;
  uint64_t v138 = a10;
  uint64_t v139 = a11;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  uint64_t v24 = sub_24EF87730();
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985988);
  uint64_t WitnessTable = swift_getWitnessTable();
  v134 = (char *)v24;
  unint64_t v135 = MEMORY[0x263F8D310];
  uint64_t v136 = v25;
  uint64_t v137 = WitnessTable;
  uint64_t v138 = MEMORY[0x263F8D320];
  sub_24EF87420();
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985990);
  unint64_t v28 = sub_24EEF9560();
  v134 = (char *)v27;
  unint64_t v135 = v28;
  v133[2] = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v29 = sub_24EF87490();
  uint64_t v30 = swift_getWitnessTable();
  v134 = (char *)v29;
  unint64_t v135 = v30;
  v84[2] = swift_getOpaqueTypeMetadata2();
  v134 = (char *)v29;
  unint64_t v135 = v30;
  v84[1] = swift_getOpaqueTypeConformance2();
  uint64_t v31 = sub_24EF86B50();
  uint64_t v98 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)v84 - v32;
  uint64_t v34 = swift_getWitnessTable();
  v134 = (char *)v31;
  unint64_t v135 = v34;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v95 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  v85 = (char *)v84 - v36;
  v134 = (char *)v31;
  unint64_t v135 = v34;
  v84[4] = v34;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v134 = (char *)OpaqueTypeMetadata2;
  unint64_t v135 = v21;
  uint64_t v38 = MEMORY[0x263F1A480];
  uint64_t v136 = OpaqueTypeConformance2;
  uint64_t v137 = MEMORY[0x263F1A480];
  uint64_t v39 = swift_getOpaqueTypeMetadata2();
  uint64_t v102 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  v100 = (char *)v84 - v40;
  uint64_t v86 = OpaqueTypeMetadata2;
  v134 = (char *)OpaqueTypeMetadata2;
  unint64_t v135 = v21;
  uint64_t v113 = v21;
  v84[3] = OpaqueTypeConformance2;
  uint64_t v136 = OpaqueTypeConformance2;
  uint64_t v137 = v38;
  uint64_t v41 = swift_getOpaqueTypeConformance2();
  uint64_t v87 = v39;
  v134 = (char *)v39;
  unint64_t v135 = v41;
  uint64_t v99 = v41;
  uint64_t v42 = swift_getOpaqueTypeMetadata2();
  uint64_t v104 = *(void *)(v42 - 8);
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  v105 = (char *)v84 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  v89 = (char *)v84 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  v103 = (char *)v84 - v48;
  uint64_t v49 = a4;
  uint64_t v50 = *((void *)a4 - 1);
  uint64_t v51 = MEMORY[0x270FA5388](v47);
  v53 = (char *)v84 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = MEMORY[0x270FA5388](v51);
  uint64_t v56 = (char *)v84 - v55;
  (*(void (**)(uint64_t))(a1 + 8))(v54);
  v88 = v56;
  uint64_t v57 = v49;
  uint64_t v58 = v50;
  uint64_t v59 = v119;
  sub_24EF7FD6C(v53, v57, v119);
  long long v60 = *(uint64_t (**)(char *, char *))(v50 + 8);
  uint64_t v97 = v50 + 8;
  v96 = v60;
  v60(v53, v57);
  sub_24EF86F50();
  v120 = v118;
  v118 = v57;
  v121 = v57;
  unint64_t v122 = v90;
  uint64_t v123 = v106;
  uint64_t v124 = v94;
  uint64_t v125 = v93;
  uint64_t v126 = v91;
  uint64_t v127 = v92;
  uint64_t v128 = v59;
  uint64_t v129 = v107;
  uint64_t v130 = a1;
  uint64_t v61 = v33;
  sub_24EF73D3C();
  uint64_t v62 = v101;
  sub_24EF86ED0();
  LOBYTE(v33) = sub_24EF86F70();
  unsigned __int8 v63 = sub_24EF86F50();
  sub_24EF86F60();
  sub_24EF86F60();
  if (sub_24EF86F60() != v33) {
    sub_24EF86F60();
  }
  sub_24EF86F60();
  if (sub_24EF86F60() != v63) {
    sub_24EF86F60();
  }
  long long v64 = v85;
  sub_24EF871B0();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v62, v109);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v61, v31);
  sub_24EF86F00();
  long long v65 = v110;
  sub_24EF86F20();
  long long v66 = v100;
  uint64_t v67 = v86;
  uint64_t v68 = v113;
  sub_24EF871E0();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v65, v68);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v64, v67);
  v69 = v114;
  sub_24EF86DE0();
  unsigned __int8 v70 = sub_24EF86F50();
  sub_24EF86F60();
  sub_24EF86F60();
  if (sub_24EF86F60() != v70) {
    sub_24EF86F60();
  }
  v71 = v89;
  v72 = (char *)v87;
  unint64_t v73 = v99;
  sub_24EF871D0();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v69, v116);
  (*(void (**)(char *, char *))(v102 + 8))(v66, v72);
  v134 = v72;
  unint64_t v135 = v73;
  uint64_t v74 = swift_getOpaqueTypeConformance2();
  v75 = v103;
  sub_24EF7FD6C(v71, v42, v74);
  uint64_t v76 = v104;
  v77 = *(void (**)(char *, uint64_t))(v104 + 8);
  v77(v71, v42);
  v78 = v88;
  v79 = v118;
  (*(void (**)(char *, char *, char *))(v58 + 16))(v53, v88, v118);
  v134 = v53;
  v80 = v105;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v105, v75, v42);
  unint64_t v135 = (unint64_t)v80;
  v133[0] = v79;
  v133[1] = v42;
  uint64_t v131 = v119;
  uint64_t v132 = v74;
  sub_24EF7FDA8((uint64_t)&v134, 2uLL, (uint64_t)v133);
  v77(v75, v42);
  v81 = v78;
  v82 = v96;
  v96(v81, v79);
  v77(v80, v42);
  return v82(v53, v79);
}

uint64_t sub_24EEFA638@<X0>(uint64_t a1@<X8>)
{
  return sub_24EEF99A4(*(void *)(v1 + 88), *(void *)(v1 + 96), *(char **)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1, *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_24EEFA678@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v45 = a7;
  uint64_t v44 = a6;
  uint64_t v49 = a5;
  unint64_t v41 = a4;
  uint64_t v47 = a3;
  uint64_t v50 = a1;
  uint64_t v51 = a8;
  uint64_t v48 = a11;
  uint64_t v43 = a10;
  uint64_t v42 = a9;
  uint64_t v15 = sub_24EF86E40();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v46 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = a2;
  unint64_t v64 = a4;
  uint64_t v65 = a6;
  uint64_t v66 = a7;
  uint64_t v67 = a9;
  uint64_t v68 = a10;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  uint64_t v17 = sub_24EF87730();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985988);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v63 = v17;
  unint64_t v64 = MEMORY[0x263F8D310];
  uint64_t v65 = v18;
  uint64_t v66 = WitnessTable;
  uint64_t v67 = MEMORY[0x263F8D320];
  sub_24EF87420();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985990);
  unint64_t v21 = sub_24EEF9560();
  uint64_t v63 = v20;
  unint64_t v64 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v22 = sub_24EF87490();
  uint64_t v40 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v36 - v23;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v63 = v22;
  unint64_t v64 = v37;
  uint64_t v39 = MEMORY[0x263F1AD90];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v26 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v29 = (char *)&v36 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v36 - v30;
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_24EF86D30();
  uint64_t v52 = a2;
  uint64_t v53 = v47;
  unint64_t v54 = v41;
  uint64_t v55 = v49;
  uint64_t v56 = v44;
  uint64_t v57 = v45;
  uint64_t v58 = v42;
  uint64_t v59 = v43;
  uint64_t v60 = v48;
  uint64_t v61 = v50;
  sub_24EF4FA50();
  sub_24EF87480();
  uint64_t v32 = v37;
  sub_24EF871C0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v22);
  uint64_t v63 = v22;
  unint64_t v64 = v32;
  uint64_t v33 = swift_getOpaqueTypeConformance2();
  sub_24EF7FD6C(v29, OpaqueTypeMetadata2, v33);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v26 + 8);
  v34(v29, OpaqueTypeMetadata2);
  sub_24EF7FD6C(v31, OpaqueTypeMetadata2, v33);
  return ((uint64_t (*)(char *, uint64_t))v34)(v31, OpaqueTypeMetadata2);
}

uint64_t sub_24EEFAB54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v47 = a8;
  uint64_t v57 = a5;
  uint64_t v58 = a3;
  uint64_t v56 = a9;
  uint64_t v48 = a11;
  uint64_t v46 = a10;
  uint64_t v75 = a10;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  uint64_t v54 = sub_24EF87730();
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985988);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v70 = v54;
  unint64_t v71 = MEMORY[0x263F8D310];
  uint64_t v72 = v53;
  uint64_t v73 = WitnessTable;
  uint64_t v74 = MEMORY[0x263F8D320];
  uint64_t v51 = sub_24EF87420();
  uint64_t v55 = *(void *)(v51 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v51);
  uint64_t v49 = (char *)&KeyPath - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v50 = (char *)&KeyPath - v18;
  uint64_t v19 = (_OWORD *)a1;
  uint64_t v69 = *(void *)(a1 + 40);
  uint64_t v20 = sub_24EF87730();
  uint64_t v21 = swift_getWitnessTable();
  MEMORY[0x2533507D0](&v70, v20, v21);
  uint64_t v69 = v70;
  sub_24EF87890();
  swift_getWitnessTable();
  uint64_t v69 = sub_24EF87740();
  uint64_t v22 = a2;
  uint64_t v23 = v57;
  uint64_t v59 = a2;
  uint64_t v60 = v58;
  uint64_t v24 = a4;
  uint64_t v61 = a4;
  uint64_t v62 = v57;
  uint64_t v25 = a6;
  uint64_t v63 = a6;
  uint64_t v64 = a7;
  uint64_t v26 = a7;
  uint64_t v27 = v47;
  uint64_t v28 = v46;
  uint64_t v65 = v47;
  uint64_t v66 = v46;
  uint64_t v29 = v48;
  uint64_t v67 = v48;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = swift_allocObject();
  long long v31 = v19[1];
  *(_OWORD *)(v30 + 88) = *v19;
  uint64_t v32 = v58;
  *(void *)(v30 + 16) = v22;
  *(void *)(v30 + 24) = v32;
  *(void *)(v30 + 32) = v24;
  *(void *)(v30 + 40) = v23;
  *(void *)(v30 + 48) = v25;
  *(void *)(v30 + 56) = v26;
  *(void *)(v30 + 64) = v27;
  *(void *)(v30 + 72) = v28;
  *(void *)(v30 + 80) = v29;
  *(_OWORD *)(v30 + 104) = v31;
  *(_OWORD *)(v30 + 120) = v19[2];
  uint64_t v33 = (void *)swift_allocObject();
  uint64_t v34 = v58;
  v33[2] = v22;
  v33[3] = v34;
  uint64_t v35 = v57;
  v33[4] = v24;
  v33[5] = v35;
  v33[6] = v25;
  v33[7] = v26;
  v33[8] = v27;
  v33[9] = v28;
  v33[10] = v29;
  v33[11] = sub_24EEFCD74;
  v33[12] = v30;
  sub_24EEFCECC((uint64_t)v19);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985990);
  unint64_t v37 = sub_24EEF9560();
  uint64_t v70 = v36;
  unint64_t v71 = v37;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v38 = v49;
  sub_24EF87410();
  uint64_t v68 = OpaqueTypeConformance2;
  uint64_t v39 = v51;
  uint64_t v40 = swift_getWitnessTable();
  unint64_t v41 = v50;
  sub_24EF7FD6C(v38, v39, v40);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v55 + 8);
  v42(v38, v39);
  sub_24EF7FD6C(v41, v39, v40);
  return ((uint64_t (*)(char *, uint64_t))v42)(v41, v39);
}

uint64_t sub_24EEFAFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v142 = a2;
  uint64_t v143 = a1;
  uint64_t v133 = a4;
  uint64_t v6 = sub_24EF87590();
  uint64_t v131 = *(void *)(v6 - 8);
  uint64_t v132 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v130 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24EF87530();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v128 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24EF87550();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v127 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985A88);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v129 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_24EF86D70();
  uint64_t v124 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  uint64_t v125 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24EF87400();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v116 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985A90) - 8;
  MEMORY[0x270FA5388](v118);
  uint64_t v117 = (uint64_t)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a3[2];
  uint64_t v19 = a3[4];
  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v22 = a3[9];
  uint64_t v138 = a3[8];
  uint64_t v136 = v19;
  uint64_t v137 = v22;
  uint64_t v23 = a3;
  *(void *)&long long v156 = v18;
  *((void *)&v156 + 1) = v19;
  *(void *)&long long v157 = v20;
  *((void *)&v157 + 1) = v21;
  *(void *)&long long v158 = v138;
  *((void *)&v158 + 1) = v22;
  uint64_t v24 = type metadata accessor for Option();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v96 - v27;
  v100 = (char *)&v96 - v27;
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699859C0);
  uint64_t v109 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  v105 = (char *)&v96 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985A98);
  uint64_t v111 = *(void *)(v30 - 8);
  uint64_t v112 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v104 = (char *)&v96 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699859B0);
  MEMORY[0x270FA5388](v108);
  uint64_t v106 = (char *)&v96 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985AA0);
  uint64_t v114 = *(void *)(v33 - 8);
  uint64_t v115 = v33;
  MEMORY[0x270FA5388](v33);
  v110 = (char *)&v96 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699859A8);
  MEMORY[0x270FA5388](v140);
  uint64_t v113 = (char *)&v96 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985990);
  MEMORY[0x270FA5388](v120);
  uint64_t v123 = (char *)&v96 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985988);
  uint64_t v121 = *(void *)(v37 - 8);
  uint64_t v122 = v37;
  MEMORY[0x270FA5388](v37);
  uint64_t v119 = (char *)&v96 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v39 = v4[1];
  long long v156 = *v4;
  long long v157 = v39;
  long long v158 = v4[2];
  uint64_t v99 = v25;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v134 = v24;
  v40(v28, v143, v24);
  unint64_t v41 = (*(unsigned __int8 *)(v25 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v97 = (v26 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v98 = v41;
  uint64_t v42 = swift_allocObject();
  long long v43 = v157;
  *(_OWORD *)(v42 + 88) = v156;
  uint64_t v44 = v23[3];
  uint64_t v141 = v18;
  *(void *)(v42 + 16) = v18;
  *(void *)(v42 + 24) = v44;
  uint64_t v101 = v44;
  uint64_t v102 = v21;
  uint64_t v45 = v23[5];
  uint64_t v46 = v23;
  uint64_t v47 = v136;
  uint64_t v48 = v137;
  *(void *)(v42 + 32) = v136;
  *(void *)(v42 + 40) = v45;
  uint64_t v139 = v45;
  uint64_t v103 = v20;
  *(void *)(v42 + 48) = v20;
  *(void *)(v42 + 56) = v21;
  uint64_t v49 = v138;
  *(void *)(v42 + 64) = v138;
  *(void *)(v42 + 72) = v48;
  uint64_t v135 = v46[10];
  *(void *)(v42 + 80) = v135;
  *(_OWORD *)(v42 + 104) = v43;
  *(_OWORD *)(v42 + 120) = v158;
  (*(void (**)(unint64_t, char *, uint64_t))(v99 + 32))(v42 + v98, v100, v134);
  *(void *)(v42 + v97) = v142;
  uint64_t v144 = v18;
  uint64_t v145 = v44;
  uint64_t v146 = v47;
  uint64_t v147 = v45;
  uint64_t v148 = v20;
  uint64_t v149 = v21;
  uint64_t v150 = v49;
  uint64_t v151 = v48;
  uint64_t v50 = v143;
  uint64_t v152 = v135;
  uint64_t v153 = v143;
  v154 = &v156;
  sub_24EEFCECC((uint64_t)&v156);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985AA8);
  sub_24EEFD110();
  uint64_t v51 = v105;
  sub_24EF87380();
  sub_24EEFD4C4(&qword_2699859C8, &qword_2699859C0);
  sub_24EEF97F4();
  uint64_t v52 = v104;
  uint64_t v53 = v107;
  sub_24EF87140();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v51, v53);
  uint64_t v134 = *(int *)(v134 + 68);
  LOBYTE(v50) = *(unsigned char *)(v50 + v134) == 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v55 = swift_allocObject();
  *(unsigned char *)(v55 + 16) = v50;
  uint64_t v56 = v111;
  uint64_t v57 = v112;
  uint64_t v58 = (uint64_t)v106;
  (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v106, v52, v112);
  uint64_t v59 = (uint64_t *)(v58 + *(int *)(v108 + 36));
  *uint64_t v59 = KeyPath;
  v59[1] = (uint64_t)sub_24EEFD2E4;
  v59[2] = v55;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v57);
  sub_24EF86F50();
  sub_24EF87460();
  sub_24EEF96E0();
  uint64_t v60 = v110;
  sub_24EF87200();
  sub_24EEFD568(v58, &qword_2699859B0);
  uint64_t v61 = *MEMORY[0x263F19860];
  uint64_t v62 = sub_24EF86D40();
  uint64_t v63 = (uint64_t)v116;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 104))(v116, v61, v62);
  uint64_t v64 = v143;
  uint64_t v65 = sub_24EEFD2EC(v143, v141, v101, v136, v139, v103, v102, v138, v137);
  uint64_t v66 = v117;
  sub_24EEFD3BC(v63, v117);
  *(void *)(v66 + *(int *)(v118 + 44)) = v65;
  sub_24EEFD420(v63);
  uint64_t v67 = sub_24EF87460();
  uint64_t v69 = v68;
  uint64_t v70 = (uint64_t)v113;
  uint64_t v71 = (uint64_t)&v113[*(int *)(v140 + 36)];
  sub_24EEF7878(v66, v71, &qword_269985A90);
  uint64_t v72 = (uint64_t *)(v71 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699859F0) + 36));
  uint64_t *v72 = v67;
  v72[1] = v69;
  uint64_t v74 = v114;
  uint64_t v73 = v115;
  (*(void (**)(uint64_t, char *, uint64_t))(v114 + 16))(v70, v60, v115);
  sub_24EEFD568(v66, &qword_269985A90);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v60, v73);
  if (*(unsigned char *)(v64 + v134) == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985B18);
    uint64_t v75 = v124;
    uint64_t v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = xmmword_24EF884F0;
    sub_24EF86D50();
    uint64_t v155 = v76;
    sub_24EEFD47C(&qword_269985AF8, MEMORY[0x263F19938]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985B00);
    sub_24EEFD4C4(&qword_269985B08, &qword_269985B00);
    v77 = v125;
    uint64_t v78 = v126;
    sub_24EF87800();
    uint64_t v79 = v75;
  }
  else
  {
    uint64_t v155 = MEMORY[0x263F8EE78];
    sub_24EEFD47C(&qword_269985AF8, MEMORY[0x263F19938]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985B00);
    sub_24EEFD4C4(&qword_269985B08, &qword_269985B00);
    v77 = v125;
    uint64_t v78 = v126;
    sub_24EF87800();
    uint64_t v79 = v124;
  }
  sub_24EEF960C();
  uint64_t v80 = (uint64_t)v123;
  sub_24EF871F0();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v77, v78);
  sub_24EEFD568(v70, &qword_2699859A8);
  uint64_t v81 = v139;
  v82 = *(void (**)(uint64_t, uint64_t))(v139 + 24);
  uint64_t v83 = v141;
  v82(v141, v139);
  uint64_t v84 = v142;
  sub_24EF87540();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985B10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24EF88500;
  *(void *)(inited + 32) = 1701667182;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v86 = ((uint64_t (*)(uint64_t, uint64_t))v82)(v83, v81);
  uint64_t v87 = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v86;
  *(void *)(inited + 56) = v88;
  *(void *)(inited + 72) = v87;
  strcpy((char *)(inited + 80), "impressionType");
  *(unsigned char *)(inited + 95) = -18;
  *(void *)(inited + 96) = 0x7265746C6966;
  *(void *)(inited + 104) = 0xE600000000000000;
  *(void *)(inited + 120) = v87;
  *(void *)(inited + 128) = 0x6973736572706D69;
  uint64_t v89 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 136) = 0xEF7865646E496E6FLL;
  *(void *)(inited + 144) = v84;
  *(void *)(inited + 168) = v89;
  *(void *)(inited + 176) = 0x657079546469;
  *(void *)(inited + 216) = v87;
  *(void *)(inited + 184) = 0xE600000000000000;
  *(void *)(inited + 192) = 0x64695F737469;
  *(void *)(inited + 200) = 0xE600000000000000;
  sub_24EF72538(inited);
  sub_24EF87520();
  uint64_t v90 = MEMORY[0x263F8EE78];
  sub_24EF78EE8(MEMORY[0x263F8EE78]);
  sub_24EF78EE8(v90);
  uint64_t v91 = (uint64_t)v129;
  sub_24EF87560();
  uint64_t v92 = sub_24EF87570();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v91, 0, 1, v92);
  uint64_t v93 = v130;
  sub_24EF87580();
  sub_24EEF9560();
  uint64_t v94 = v119;
  sub_24EF870E0();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v93, v132);
  sub_24EEFD568(v91, &qword_269985A88);
  sub_24EEFD568(v80, &qword_269985990);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v121 + 32))(v133, v94, v122);
}

uint64_t sub_24EEFBE98(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_24EF86EA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  if ((a3 & 1) == 0) {
    sub_24EF86B40();
  }
  v17[1] = v12;
  v17[2] = v13;
  v17[3] = v14;
  v17[4] = v15;
  char v18 = a3 & 1;
  sub_24EF86E90();
  MEMORY[0x253350370](v11, a4, v8, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_24EEFBFD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EEFC02C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, long long a9)
{
  uint64_t v53 = a5;
  long long v52 = a9;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985AF0) - 8;
  MEMORY[0x270FA5388](v56);
  uint64_t v55 = (uint64_t)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24EF87400();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v54 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_24EF86D30();
  sub_24EEFC420(a1, a2, a3, a4, v53, a6, a7, (uint64_t)&v57, v52, *((uint64_t *)&v52 + 1));
  unsigned long long v19 = v57;
  LODWORD(a1) = v58[0];
  uint64_t v20 = *(void *)&v58[8];
  uint64_t v49 = *(void *)&v58[16];
  int v48 = v58[24];
  int v47 = sub_24EF86F90();
  sub_24EF87460();
  sub_24EF86C50();
  uint64_t v46 = v71;
  uint64_t v21 = v73;
  LOBYTE(a4) = v74;
  uint64_t v22 = v75;
  int v44 = v76;
  int v45 = v72;
  LOBYTE(a6) = v78;
  uint64_t v42 = v79;
  uint64_t v43 = v77;
  int v41 = v80;
  uint64_t v40 = v81;
  int v39 = v82;
  uint64_t v37 = v84;
  uint64_t v38 = v83;
  sub_24EEFD508(v19, *((uint64_t *)&v19 + 1), a1);
  swift_bridgeObjectRetain();
  uint64_t v53 = v19 >> 64;
  uint64_t v51 = v19;
  LODWORD(v52) = a1;
  sub_24EEFD518(v19, *((uint64_t *)&v19 + 1), a1);
  swift_bridgeObjectRelease();
  unsigned long long v57 = (unint64_t)v50;
  v58[0] = 1;
  *(_OWORD *)&v58[8] = v19;
  v58[24] = a1;
  *(void *)&long long v59 = v20;
  *((void *)&v59 + 1) = v49;
  LOBYTE(v60) = v48;
  BYTE8(v60) = v47;
  long long v61 = xmmword_24EF88510;
  long long v62 = xmmword_24EF88510;
  LOBYTE(v63) = 0;
  *((void *)&v63 + 1) = v46;
  LOBYTE(v64) = v45;
  *((void *)&v64 + 1) = v21;
  LOBYTE(v65) = a4;
  *((void *)&v65 + 1) = v22;
  LOBYTE(v66) = v44;
  *((void *)&v66 + 1) = v43;
  LOBYTE(v67) = a6;
  *((void *)&v67 + 1) = v42;
  LOBYTE(v68) = v41;
  *((void *)&v68 + 1) = v40;
  LOBYTE(v69) = v39;
  *((void *)&v69 + 1) = v38;
  uint64_t v70 = v37;
  uint64_t v23 = *MEMORY[0x263F19860];
  uint64_t v24 = sub_24EF86D40();
  uint64_t v25 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v54, v23, v24);
  uint64_t v26 = v55;
  sub_24EEFD3BC(v25, v55);
  *(unsigned char *)(v26 + *(int *)(v56 + 44)) = 0;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985AA8);
  sub_24EEF7878(v26, a8 + *(int *)(v27 + 36), &qword_269985AF0);
  long long v28 = v69;
  *(_OWORD *)(a8 + 192) = v68;
  *(_OWORD *)(a8 + 208) = v28;
  *(void *)(a8 + 224) = v70;
  long long v29 = v65;
  *(_OWORD *)(a8 + 128) = v64;
  *(_OWORD *)(a8 + 144) = v29;
  long long v30 = v67;
  *(_OWORD *)(a8 + 160) = v66;
  *(_OWORD *)(a8 + 176) = v30;
  long long v31 = v61;
  *(_OWORD *)(a8 + 64) = v60;
  *(_OWORD *)(a8 + 80) = v31;
  long long v32 = v63;
  *(_OWORD *)(a8 + 96) = v62;
  *(_OWORD *)(a8 + 112) = v32;
  long long v33 = *(_OWORD *)v58;
  *(_OWORD *)a8 = v57;
  *(_OWORD *)(a8 + 16) = v33;
  long long v34 = v59;
  *(_OWORD *)(a8 + 32) = *(_OWORD *)&v58[16];
  *(_OWORD *)(a8 + 48) = v34;
  sub_24EEFD528((uint64_t)&v57);
  sub_24EEFD568(v26, &qword_269985AF0);
  sub_24EEFD420(v25);
  sub_24EEFD518(v51, v53, v52);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EEFC420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  (*(void (**)(uint64_t, uint64_t))(a5 + 24))(a2, a5);
  sub_24EEFD5C4();
  uint64_t v11 = sub_24EF870C0();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  sub_24EF87050();
  uint64_t v16 = sub_24EF870A0();
  uint64_t v18 = v17;
  char v20 = v19;
  swift_release();
  sub_24EEFD518(v11, v13, v15);
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_24EF87090();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  sub_24EEFD518(v16, v18, v20 & 1);
  swift_bridgeObjectRelease();
  sub_24EEFD618(a1, a2, a3, a4, a5, a6, a7, a9, a10);
  uint64_t v26 = sub_24EF87070();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  LOBYTE(v11) = v31 & 1;
  sub_24EEFD518(v21, v23, v25);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)a8 = v26;
  *(void *)(a8 + 8) = v28;
  *(unsigned char *)(a8 + 16) = v11;
  *(void *)(a8 + 24) = v30;
  *(void *)(a8 + 32) = 0;
  *(unsigned char *)(a8 + 40) = 0;
  sub_24EEFD508(v26, v28, v11);
  swift_bridgeObjectRetain();
  sub_24EEFD518(v26, v28, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EEFC630()
{
  return sub_24EF87170();
}

uint64_t sub_24EEFC650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 88);
}

uint64_t sub_24EEFC658()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EEFC69C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24EEFC700(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_24EEFC794(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24EEFC7F4(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24EEFC83C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for FilterThemeSectionView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EEFC8A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EEFCC80@<X0>(uint64_t a1@<X8>)
{
  return sub_24EEFA678(*(void *)(v1 + 96), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1, *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_24EEFCCC0@<X0>(uint64_t a1@<X8>)
{
  return sub_24EEFAB54(v1[11], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1, v1[9], v1[10]);
}

uint64_t sub_24EEFCCFC()
{
  return 72;
}

__n128 sub_24EEFCD08(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  __n128 result = *(__n128 *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  *(void *)(a2 + 64) = *(void *)(a1 + 64);
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_24EEFCD2C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24EEFCD74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (void *)type metadata accessor for FilterThemeSectionView();
  return sub_24EEFAFE8(a2, a1, v6, a3);
}

uint64_t sub_24EEFCDF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EEFCE2C(char *a1)
{
  long long v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 88);
  uint64_t v4 = *(void *)a1;
  type metadata accessor for Option();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_24EEFCECC(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EEFCF14()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for Option() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24EEFD020()
{
  uint64_t v1 = *(void *)(type metadata accessor for Option() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return (*(uint64_t (**)(unint64_t, void))(v0 + 112))(v0 + v2, *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24EEFD0D0@<X0>(uint64_t a1@<X8>)
{
  return sub_24EEFC02C(*(void *)(v1 + 88), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1, *(_OWORD *)(v1 + 64));
}

unint64_t sub_24EEFD110()
{
  unint64_t result = qword_269985AB0;
  if (!qword_269985AB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985AA8);
    sub_24EEFD1B0();
    sub_24EEFD4C4(&qword_269985AE8, &qword_269985AF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985AB0);
  }
  return result;
}

unint64_t sub_24EEFD1B0()
{
  unint64_t result = qword_269985AB8;
  if (!qword_269985AB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985AC0);
    sub_24EEFD22C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985AB8);
  }
  return result;
}

unint64_t sub_24EEFD22C()
{
  unint64_t result = qword_269985AC8;
  if (!qword_269985AC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985AD0);
    sub_24EEFD4C4(&qword_269985AD8, &qword_269985AE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985AC8);
  }
  return result;
}

uint64_t sub_24EEFD2D4()
{
  return swift_deallocObject();
}

unsigned char *sub_24EEFD2E4(unsigned char *a1)
{
  return sub_24EF79290(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_24EEFD2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = type metadata accessor for Option();
  if (*(unsigned char *)(a1 + *(int *)(v10 + 68)) && *(unsigned char *)(a1 + *(int *)(v10 + 68)) != 1) {
    return MEMORY[0x2533503B0](objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.650980392, 1.0, 0.0, 1.0, a2, a4, a6, a7, a8, a9));
  }
  id v11 = objc_msgSend(self, sel_systemGray5Color, a2, a4, a6, a7, a8, a9);
  return MEMORY[0x2533503F0](v11);
}

uint64_t sub_24EEFD3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EF87400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EEFD420(uint64_t a1)
{
  uint64_t v2 = sub_24EF87400();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EEFD47C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EEFD4C4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EEFD508(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_24EEFD518(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24EEFD528(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EEFD568(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_24EEFD5C4()
{
  unint64_t result = qword_269985B20;
  if (!qword_269985B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985B20);
  }
  return result;
}

uint64_t sub_24EEFD618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = type metadata accessor for Option();
  if (*(unsigned char *)(a1 + *(int *)(v10 + 68)))
  {
    if (*(unsigned char *)(a1 + *(int *)(v10 + 68)) == 1) {
      return sub_24EF872F0();
    }
    else {
      return sub_24EF872D0();
    }
  }
  else
  {
    id v12 = objc_msgSend(self, sel_darkGrayColor, a2, a4, a6, a7, a8, a9);
    return MEMORY[0x2533503F0](v12);
  }
}

BOOL static TimedFilterContent<>.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(double (**)(uint64_t, uint64_t))(a4 + 8);
  double v7 = v6(a3, a4);
  return v7 < v6(a3, a4);
}

uint64_t FilterModalitySectionView.init(containerWidth:artworkViewBuilder:headerViewBuilder:options:onOptionSelected:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(double *)(a8 + 16) = a9;
  *(void *)(a8 + 24) = a3;
  *(void *)(a8 + 32) = a4;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = a7;
  *(void *)(a8 + 56) = a5;
  return result;
}

uint64_t FilterModalitySectionView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v4 = a1[3];
  uint64_t v34 = a1[4];
  uint64_t v40 = v4;
  uint64_t v41 = a1[6];
  uint64_t v45 = a1[8];
  uint64_t v44 = a1[9];
  uint64_t v43 = a1[10];
  uint64_t v42 = a1[11];
  *((void *)&v65 + 1) = v42;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  sub_24EF87730();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985B28);
  swift_getWitnessTable();
  *(void *)&long long v65 = MEMORY[0x263F8D320];
  sub_24EF87420();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985B30);
  sub_24EEFDF98();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  sub_24EF87490();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  sub_24EF86B50();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EF86F30();
  *(void *)&long long v64 = swift_getOpaqueTypeConformance2();
  *((void *)&v64 + 1) = MEMORY[0x263F1A480];
  *(void *)&long long v63 = swift_getOpaqueTypeMetadata2();
  *((void *)&v63 + 1) = swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  uint64_t v35 = sub_24EF874A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v33 = sub_24EF873E0();
  uint64_t v38 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  long long v32 = (char *)&v31 - v5;
  uint64_t v37 = sub_24EF86C00();
  uint64_t v39 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  char v31 = (char *)&v31 - v6;
  uint64_t v7 = sub_24EF87430();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (_OWORD *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_24EF87440();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = v2[1];
  long long v63 = *v2;
  long long v64 = v15;
  long long v16 = v2[3];
  long long v65 = v2[2];
  long long v66 = v16;
  *uint64_t v10 = xmmword_24EF884E0;
  (*(void (**)(_OWORD *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F1B8C8], v7);
  sub_24EF87450();
  uint64_t v17 = sub_24EF87710();
  *(void *)(v17 + 16) = 5;
  unint64_t v18 = v17 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  char v19 = *(void (**)(unint64_t, char *, uint64_t))(v12 + 16);
  v19(v18, v14, v11);
  uint64_t v20 = *(void *)(v12 + 72);
  v19(v18 + v20, v14, v11);
  v19(v18 + 2 * v20, v14, v11);
  v19(v18 + 3 * v20, v14, v11);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18 + 4 * v20, v14, v11);
  sub_24EF86D90();
  uint64_t v47 = a1[2];
  uint64_t v48 = v40;
  uint64_t v21 = a1[5];
  uint64_t v49 = v34;
  uint64_t v50 = v21;
  uint64_t v22 = a1[7];
  uint64_t v51 = v41;
  uint64_t v52 = v22;
  uint64_t v53 = v45;
  uint64_t v54 = v44;
  uint64_t v55 = v43;
  uint64_t v56 = v42;
  uint64_t v57 = a1[12];
  uint64_t v58 = &v63;
  uint64_t v59 = v17;
  uint64_t v23 = v32;
  sub_24EF873D0();
  swift_bridgeObjectRelease();
  uint64_t v24 = v33;
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = v31;
  sub_24EF872B0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v24);
  uint64_t v27 = sub_24EF86F80();
  uint64_t v60 = v25;
  uint64_t v61 = MEMORY[0x263F190E0];
  uint64_t v28 = v37;
  uint64_t v29 = swift_getWitnessTable();
  sub_24EEFBE98(v27, 0x4034000000000000, 0, v28, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v26, v28);
}

unint64_t sub_24EEFDF98()
{
  unint64_t result = qword_269985B38;
  if (!qword_269985B38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985B30);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985B40);
    sub_24EEFE088();
    sub_24EEF97F4();
    swift_getOpaqueTypeConformance2();
    sub_24EEFD4C4(&qword_2699859D8, &qword_2699859E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985B38);
  }
  return result;
}

unint64_t sub_24EEFE088()
{
  unint64_t result = qword_269985B48;
  if (!qword_269985B48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985B40);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985B50);
    sub_24EEFE15C();
    swift_getOpaqueTypeConformance2();
    sub_24EEFD4C4(&qword_2699859E8, &qword_2699859F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985B48);
  }
  return result;
}

unint64_t sub_24EEFE15C()
{
  unint64_t result = qword_269985B58;
  if (!qword_269985B58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985B50);
    sub_24EEFD4C4(&qword_269985B60, qword_269985B68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985B58);
  }
  return result;
}

uint64_t sub_24EEFE1FC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v103 = a8;
  unint64_t v86 = a7;
  uint64_t v102 = a6;
  v85 = a4;
  uint64_t v115 = a3;
  uint64_t v104 = a2;
  uint64_t v114 = a9;
  uint64_t v116 = a14;
  uint64_t v90 = a13;
  uint64_t v89 = a12;
  uint64_t v88 = a11;
  uint64_t v87 = a10;
  uint64_t v113 = sub_24EF86DF0();
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  uint64_t v111 = (char *)v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24EF86F10();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v108 = (char *)v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24EF86F30();
  uint64_t v109 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v107 = (char *)v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_24EF86EF0();
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  unint64_t v97 = (char *)v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = a4;
  unint64_t v134 = a7;
  uint64_t v135 = a10;
  uint64_t v136 = a11;
  uint64_t v137 = a12;
  uint64_t v138 = a13;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  uint64_t v24 = sub_24EF87730();
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985B28);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v133 = (char *)v24;
  unint64_t v134 = MEMORY[0x263F8D310];
  uint64_t v135 = v25;
  uint64_t v136 = WitnessTable;
  uint64_t v137 = MEMORY[0x263F8D320];
  sub_24EF87420();
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985B30);
  unint64_t v28 = sub_24EEFDF98();
  uint64_t v133 = (char *)v27;
  unint64_t v134 = v28;
  v132[2] = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v29 = sub_24EF87490();
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v133 = (char *)v29;
  unint64_t v134 = v30;
  v79[2] = swift_getOpaqueTypeMetadata2();
  uint64_t v133 = (char *)v29;
  unint64_t v134 = v30;
  v79[1] = swift_getOpaqueTypeConformance2();
  uint64_t v31 = sub_24EF86B50();
  uint64_t v94 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)v79 - v32;
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v133 = (char *)v31;
  unint64_t v134 = v34;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v91 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  unsigned __int8 v80 = (char *)v79 - v36;
  uint64_t v133 = (char *)v31;
  unint64_t v134 = v34;
  v79[4] = v34;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v133 = (char *)OpaqueTypeMetadata2;
  unint64_t v134 = v21;
  uint64_t v38 = MEMORY[0x263F1A480];
  uint64_t v135 = OpaqueTypeConformance2;
  uint64_t v136 = MEMORY[0x263F1A480];
  uint64_t v39 = swift_getOpaqueTypeMetadata2();
  uint64_t v98 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v96 = (char *)v79 - v40;
  uint64_t v133 = (char *)OpaqueTypeMetadata2;
  unint64_t v134 = v21;
  uint64_t v110 = v21;
  v79[3] = OpaqueTypeConformance2;
  uint64_t v135 = OpaqueTypeConformance2;
  uint64_t v136 = v38;
  uint64_t v41 = swift_getOpaqueTypeConformance2();
  uint64_t v81 = v39;
  uint64_t v133 = (char *)v39;
  unint64_t v134 = v41;
  uint64_t v95 = v41;
  uint64_t v42 = swift_getOpaqueTypeMetadata2();
  uint64_t v100 = *(void *)(v42 - 8);
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  uint64_t v101 = (char *)v79 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v83 = (char *)v79 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v99 = (char *)v79 - v48;
  uint64_t v49 = *(void *)(a5 - 8);
  uint64_t v50 = MEMORY[0x270FA5388](v47);
  uint64_t v52 = (char *)v79 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = MEMORY[0x270FA5388](v50);
  uint64_t v55 = (char *)v79 - v54;
  (*(void (**)(uint64_t))(a1 + 24))(v53);
  uint64_t v84 = v55;
  uint64_t v56 = v116;
  sub_24EF7FD6C(v52, a5, v116);
  uint64_t v82 = v49;
  uint64_t v57 = *(uint64_t (**)(char *, uint64_t))(v49 + 8);
  uint64_t v93 = v49 + 8;
  uint64_t v92 = v57;
  v57(v52, a5);
  sub_24EF86F50();
  uint64_t v117 = v115;
  uint64_t v118 = v85;
  uint64_t v115 = a5;
  uint64_t v119 = a5;
  uint64_t v120 = v102;
  unint64_t v121 = v86;
  uint64_t v122 = v103;
  uint64_t v123 = v87;
  uint64_t v124 = v88;
  uint64_t v125 = v89;
  uint64_t v126 = v90;
  uint64_t v127 = v56;
  uint64_t v128 = v104;
  uint64_t v129 = a1;
  uint64_t v104 = v33;
  sub_24EF73D3C();
  uint64_t v58 = v97;
  sub_24EF86ED0();
  LOBYTE(a1) = sub_24EF86F70();
  unsigned __int8 v59 = sub_24EF86F50();
  sub_24EF86F60();
  sub_24EF86F60();
  if (sub_24EF86F60() != a1) {
    sub_24EF86F60();
  }
  sub_24EF86F60();
  if (sub_24EF86F60() != v59) {
    sub_24EF86F60();
  }
  uint64_t v60 = v80;
  uint64_t v61 = v104;
  sub_24EF871B0();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v58, v106);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v61, v31);
  sub_24EF86F00();
  long long v62 = v107;
  sub_24EF86F20();
  long long v63 = v96;
  uint64_t v64 = v110;
  sub_24EF871E0();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v62, v64);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v60, OpaqueTypeMetadata2);
  long long v65 = v111;
  sub_24EF86DE0();
  LOBYTE(v61) = sub_24EF86F50();
  sub_24EF86F60();
  sub_24EF86F60();
  if (sub_24EF86F60() != v61) {
    sub_24EF86F60();
  }
  long long v66 = v83;
  long long v67 = (char *)v81;
  unint64_t v68 = v95;
  sub_24EF871D0();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v65, v113);
  (*(void (**)(char *, char *))(v98 + 8))(v63, v67);
  uint64_t v133 = v67;
  unint64_t v134 = v68;
  uint64_t v69 = swift_getOpaqueTypeConformance2();
  uint64_t v70 = v99;
  sub_24EF7FD6C(v66, v42, v69);
  uint64_t v71 = v100;
  unsigned __int8 v72 = *(void (**)(char *, uint64_t))(v100 + 8);
  v72(v66, v42);
  uint64_t v73 = v84;
  uint64_t v74 = v115;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v52, v84, v115);
  uint64_t v133 = v52;
  uint64_t v75 = v101;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v101, v70, v42);
  unint64_t v134 = (unint64_t)v75;
  v132[0] = v74;
  v132[1] = v42;
  uint64_t v130 = v116;
  uint64_t v131 = v69;
  sub_24EF7FDA8((uint64_t)&v133, 2uLL, (uint64_t)v132);
  v72(v70, v42);
  unsigned __int8 v76 = v73;
  uint64_t v77 = v92;
  v92(v76, v74);
  v72(v75, v42);
  return v77(v52, v74);
}

uint64_t sub_24EEFEEB8@<X0>(uint64_t a1@<X8>)
{
  return sub_24EEFE1FC(*(void *)(v1 + 104), *(char **)(v1 + 112), *(void *)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1, *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96));
}

uint64_t sub_24EEFEEF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EEFEF54@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v50 = a7;
  uint64_t v49 = a5;
  uint64_t v47 = a4;
  uint64_t v40 = a3;
  uint64_t v46 = a2;
  uint64_t v51 = a1;
  uint64_t v52 = a8;
  uint64_t v48 = a13;
  uint64_t v44 = a12;
  uint64_t v43 = a11;
  uint64_t v42 = a10;
  uint64_t v41 = a9;
  uint64_t v15 = sub_24EF86E40();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v45 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = a3;
  unint64_t v67 = a6;
  uint64_t v68 = a9;
  uint64_t v69 = a10;
  uint64_t v70 = a11;
  uint64_t v71 = a12;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  uint64_t v17 = sub_24EF87730();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985B28);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v66 = v17;
  unint64_t v67 = MEMORY[0x263F8D310];
  uint64_t v68 = v18;
  uint64_t v69 = WitnessTable;
  uint64_t v70 = MEMORY[0x263F8D320];
  sub_24EF87420();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985B30);
  unint64_t v21 = sub_24EEFDF98();
  uint64_t v66 = v20;
  unint64_t v67 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v22 = sub_24EF87490();
  uint64_t v39 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v36 - v23;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v66 = v22;
  unint64_t v67 = v37;
  uint64_t v38 = MEMORY[0x263F1AD90];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v26 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v29 = (char *)v36 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)v36 - v30;
  swift_bridgeObjectRetain();
  v36[1] = sub_24EF86D30();
  uint64_t v53 = v46;
  uint64_t v54 = v40;
  uint64_t v55 = v47;
  uint64_t v56 = v49;
  unint64_t v57 = a6;
  uint64_t v58 = v50;
  uint64_t v59 = v41;
  uint64_t v60 = v42;
  uint64_t v61 = v43;
  uint64_t v62 = v44;
  uint64_t v63 = v48;
  uint64_t v64 = v51;
  sub_24EF4FA50();
  sub_24EF87480();
  uint64_t v32 = v37;
  sub_24EF871C0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v22);
  uint64_t v66 = v22;
  unint64_t v67 = v32;
  uint64_t v33 = swift_getOpaqueTypeConformance2();
  sub_24EF7FD6C(v29, OpaqueTypeMetadata2, v33);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v26 + 8);
  v34(v29, OpaqueTypeMetadata2);
  sub_24EF7FD6C(v31, OpaqueTypeMetadata2, v33);
  return ((uint64_t (*)(char *, uint64_t))v34)(v31, OpaqueTypeMetadata2);
}

uint64_t sub_24EEFF458@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v51 = a8;
  uint64_t v65 = a7;
  uint64_t v52 = a5;
  uint64_t v64 = a4;
  uint64_t v63 = a1;
  uint64_t v61 = a9;
  uint64_t v53 = a13;
  uint64_t v50 = a12;
  uint64_t v49 = a11;
  uint64_t v47 = a10;
  uint64_t v84 = a12;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  uint64_t v59 = sub_24EF87730();
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985B28);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v79 = v59;
  unint64_t v80 = MEMORY[0x263F8D310];
  uint64_t v81 = v58;
  uint64_t v82 = WitnessTable;
  uint64_t v83 = MEMORY[0x263F8D320];
  uint64_t v56 = sub_24EF87420();
  uint64_t v60 = *(void *)(v56 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v56);
  uint64_t v54 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v55 = (char *)&v46 - v19;
  uint64_t v78 = *((void *)a1 + 7);
  uint64_t v20 = sub_24EF87730();
  uint64_t v21 = swift_getWitnessTable();
  MEMORY[0x2533507D0](&v79, v20, v21);
  uint64_t v78 = v79;
  sub_24EF87890();
  swift_getWitnessTable();
  uint64_t v78 = sub_24EF87740();
  uint64_t v66 = a2;
  uint64_t v67 = a3;
  uint64_t v22 = a3;
  uint64_t v23 = v64;
  uint64_t v24 = v52;
  uint64_t v68 = v64;
  uint64_t v69 = v52;
  uint64_t v62 = a6;
  uint64_t v25 = v65;
  uint64_t v70 = a6;
  uint64_t v71 = v65;
  uint64_t v26 = v51;
  uint64_t v72 = v51;
  uint64_t v73 = a10;
  uint64_t v27 = v49;
  uint64_t v28 = v50;
  uint64_t v74 = v49;
  uint64_t v75 = v50;
  uint64_t v29 = v53;
  uint64_t v76 = v53;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v63;
  long long v32 = v63[1];
  *(_OWORD *)(v30 + 104) = *v63;
  *(_OWORD *)(v30 + 120) = v32;
  long long v33 = v31[3];
  *(_OWORD *)(v30 + 136) = v31[2];
  *(void *)(v30 + 16) = a2;
  *(void *)(v30 + 24) = v22;
  *(void *)(v30 + 32) = v23;
  *(void *)(v30 + 40) = v24;
  *(void *)(v30 + 48) = v62;
  *(void *)(v30 + 56) = v25;
  uint64_t v34 = v47;
  *(void *)(v30 + 64) = v26;
  *(void *)(v30 + 72) = v34;
  *(void *)(v30 + 80) = v27;
  *(void *)(v30 + 88) = v28;
  *(void *)(v30 + 96) = v29;
  *(_OWORD *)(v30 + 152) = v33;
  uint64_t v35 = (void *)swift_allocObject();
  v35[2] = a2;
  v35[3] = v22;
  v35[4] = v64;
  v35[5] = v24;
  uint64_t v36 = v65;
  v35[6] = v62;
  v35[7] = v36;
  v35[8] = v26;
  v35[9] = v34;
  v35[10] = v27;
  v35[11] = v28;
  v35[12] = v29;
  v35[13] = sub_24EF015F8;
  v35[14] = v30;
  sub_24EF01714((uint64_t)v63);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985B30);
  unint64_t v38 = sub_24EEFDF98();
  uint64_t v79 = v37;
  unint64_t v80 = v38;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = v54;
  sub_24EF87410();
  uint64_t v77 = OpaqueTypeConformance2;
  uint64_t v40 = v56;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = v55;
  sub_24EF7FD6C(v39, v40, v41);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v60 + 8);
  v43(v39, v40);
  sub_24EF7FD6C(v42, v40, v41);
  return ((uint64_t (*)(char *, uint64_t))v43)(v42, v40);
}

uint64_t sub_24EEFF960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, long long a11, long long a12, uint64_t a13)
{
  uint64_t v136 = a7;
  uint64_t v134 = a6;
  uint64_t v132 = a4;
  uint64_t v103 = a2;
  uint64_t v138 = a1;
  uint64_t v128 = a9;
  uint64_t v137 = a13;
  uint64_t v131 = *((void *)&a12 + 1);
  uint64_t v139 = *((void *)&a11 + 1);
  uint64_t v140 = a10;
  uint64_t v130 = a11;
  uint64_t v129 = sub_24EF87590();
  uint64_t v127 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v126 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24EF87530();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v125 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24EF87550();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v123 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985A88);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v124 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_24EF87400();
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v120 = (char *)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985A90) - 8;
  MEMORY[0x270FA5388](v122);
  uint64_t v121 = (uint64_t)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v154 = a5;
  *((void *)&v154 + 1) = a8;
  long long v155 = a11;
  long long v156 = a12;
  uint64_t v97 = a12;
  uint64_t v27 = type metadata accessor for Option();
  uint64_t v133 = v27;
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 64);
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v97 - v30;
  uint64_t v102 = (char *)&v97 - v30;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(qword_269985B68);
  uint64_t v109 = *(void *)(v32 - 8);
  uint64_t v110 = v32;
  MEMORY[0x270FA5388](v32);
  uint64_t v105 = (char *)&v97 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985B50);
  MEMORY[0x270FA5388](v107);
  uint64_t v106 = (char *)&v97 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985BF0);
  uint64_t v115 = *(void *)(v35 - 8);
  uint64_t v116 = v35;
  MEMORY[0x270FA5388](v35);
  uint64_t v108 = (char *)&v97 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985B40);
  MEMORY[0x270FA5388](v112);
  uint64_t v111 = (char *)&v97 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985BF8);
  uint64_t v118 = *(void *)(v38 - 8);
  uint64_t v119 = v38;
  MEMORY[0x270FA5388](v38);
  uint64_t v113 = (char *)&v97 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985B30);
  MEMORY[0x270FA5388](v117);
  uint64_t v114 = (char *)&v97 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v31, a2, v27);
  unint64_t v99 = (*(unsigned __int8 *)(v28 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v100 = (v29 + v99 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  uint64_t v98 = a3;
  long long v42 = a3[1];
  *(_OWORD *)(v41 + 104) = *a3;
  *(_OWORD *)(v41 + 120) = v42;
  long long v43 = a3[3];
  *(_OWORD *)(v41 + 136) = a3[2];
  uint64_t v44 = v132;
  *(void *)(v41 + 16) = v132;
  *(void *)(v41 + 24) = a5;
  uint64_t v45 = a5;
  uint64_t v135 = a5;
  uint64_t v46 = v134;
  uint64_t v47 = v136;
  *(void *)(v41 + 32) = v134;
  *(void *)(v41 + 40) = v47;
  uint64_t v104 = a8;
  uint64_t v48 = v139;
  uint64_t v49 = v140;
  *(void *)(v41 + 48) = a8;
  *(void *)(v41 + 56) = v49;
  uint64_t v50 = v130;
  *(void *)(v41 + 64) = v130;
  *(void *)(v41 + 72) = v48;
  uint64_t v51 = v131;
  *(void *)(v41 + 80) = a12;
  *(void *)(v41 + 88) = v51;
  uint64_t v52 = v137;
  *(void *)(v41 + 96) = v137;
  *(_OWORD *)(v41 + 152) = v43;
  (*(void (**)(unint64_t, char *, uint64_t))(v101 + 32))(v41 + v99, v102, v133);
  *(void *)(v41 + v100) = v138;
  uint64_t v141 = v44;
  uint64_t v142 = v45;
  uint64_t v143 = v46;
  uint64_t v144 = v47;
  uint64_t v145 = a8;
  uint64_t v146 = v49;
  uint64_t v147 = v50;
  uint64_t v148 = v139;
  uint64_t v53 = v97;
  uint64_t v54 = v131;
  uint64_t v149 = v97;
  uint64_t v150 = v131;
  uint64_t v55 = v103;
  uint64_t v151 = v52;
  uint64_t v152 = v103;
  uint64_t v153 = (uint64_t)v98;
  sub_24EF01714((uint64_t)v98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985C00);
  sub_24EF0196C();
  uint64_t v56 = v105;
  sub_24EF87380();
  sub_24EF87460();
  sub_24EF86B90();
  uint64_t v58 = v109;
  uint64_t v57 = v110;
  uint64_t v59 = (uint64_t)v106;
  (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v106, v56, v110);
  uint64_t v60 = (_OWORD *)(v59 + *(int *)(v107 + 36));
  long long v61 = v155;
  *uint64_t v60 = v154;
  v60[1] = v61;
  v60[2] = v156;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v56, v57);
  sub_24EF86F50();
  sub_24EF87470();
  sub_24EEFE15C();
  uint64_t v62 = v108;
  sub_24EF87200();
  sub_24EEFD568(v59, &qword_269985B50);
  uint64_t v63 = *MEMORY[0x263F19860];
  uint64_t v64 = sub_24EF86D40();
  uint64_t v65 = (uint64_t)v120;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 104))(v120, v63, v64);
  *((void *)&v96 + 1) = v53;
  *(void *)&long long v96 = v139;
  uint64_t v66 = v55;
  uint64_t v67 = sub_24EF01A30(v55, v132, v135, v134, v136, v104, v140, v130, v96, v54);
  uint64_t v68 = v121;
  sub_24EEFD3BC(v65, v121);
  *(void *)(v68 + *(int *)(v122 + 44)) = v67;
  sub_24EEFD420(v65);
  uint64_t v69 = sub_24EF87460();
  uint64_t v71 = v70;
  uint64_t v72 = (uint64_t)v111;
  uint64_t v73 = (uint64_t)&v111[*(int *)(v112 + 36)];
  sub_24EEF7878(v68, v73, &qword_269985A90);
  uint64_t v74 = (uint64_t *)(v73 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699859F0) + 36));
  *uint64_t v74 = v69;
  v74[1] = v71;
  uint64_t v76 = v115;
  uint64_t v75 = v116;
  (*(void (**)(uint64_t, char *, uint64_t))(v115 + 16))(v72, v62, v116);
  sub_24EEFD568(v68, &qword_269985A90);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v62, v75);
  sub_24EEFE088();
  sub_24EEF97F4();
  uint64_t v77 = v113;
  sub_24EF87140();
  sub_24EEFD568(v72, &qword_269985B40);
  LOBYTE(v73) = *(unsigned char *)(v66 + *(int *)(v133 + 68)) == 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v79 = swift_allocObject();
  *(unsigned char *)(v79 + 16) = v73;
  uint64_t v81 = v118;
  uint64_t v80 = v119;
  uint64_t v82 = (uint64_t)v114;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v114, v77, v119);
  uint64_t v83 = (uint64_t *)(v82 + *(int *)(v117 + 36));
  *uint64_t v83 = KeyPath;
  v83[1] = (uint64_t)sub_24EEFD2E4;
  v83[2] = v79;
  (*(void (**)(char *, uint64_t))(v81 + 8))(v77, v80);
  Option.identifier.getter();
  uint64_t v84 = v138;
  sub_24EF87540();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985B10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24EF88500;
  *(void *)(inited + 32) = 1701667182;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v86 = (*(uint64_t (**)(uint64_t))(v140 + 24))(v135);
  uint64_t v87 = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v86;
  *(void *)(inited + 56) = v88;
  *(void *)(inited + 72) = v87;
  strcpy((char *)(inited + 80), "impressionType");
  *(unsigned char *)(inited + 95) = -18;
  *(void *)(inited + 96) = 0x7265746C6966;
  *(void *)(inited + 104) = 0xE600000000000000;
  *(void *)(inited + 120) = v87;
  *(void *)(inited + 128) = 0x6973736572706D69;
  uint64_t v89 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 136) = 0xEF7865646E496E6FLL;
  *(void *)(inited + 144) = v84;
  *(void *)(inited + 168) = v89;
  *(void *)(inited + 176) = 0x657079546469;
  *(void *)(inited + 216) = v87;
  *(void *)(inited + 184) = 0xE600000000000000;
  *(void *)(inited + 192) = 0x64695F737469;
  *(void *)(inited + 200) = 0xE600000000000000;
  sub_24EF72538(inited);
  sub_24EF87520();
  uint64_t v90 = MEMORY[0x263F8EE78];
  sub_24EF78EE8(MEMORY[0x263F8EE78]);
  sub_24EF78EE8(v90);
  uint64_t v91 = v124;
  sub_24EF87560();
  uint64_t v92 = sub_24EF87570();
  uint64_t v93 = (uint64_t)v91;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v91, 0, 1, v92);
  uint64_t v94 = v126;
  sub_24EF87580();
  sub_24EEFDF98();
  sub_24EF870E0();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v94, v129);
  sub_24EEFD568(v93, &qword_269985A88);
  return sub_24EEFD568(v82, &qword_269985B30);
}

uint64_t sub_24EF00584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, long long a9, long long a10, uint64_t a11)
{
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v29 = a3;
  uint64_t v34 = a8;
  long long v28 = a9;
  long long v27 = a10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985AF0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24EF87400();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24EF86D30();
  *((void *)&v26 + 1) = v27;
  *(void *)&long long v26 = *((void *)&v28 + 1);
  sub_24EF0081C(a1, a2, v29, v30, v31, v32, v33, (uint64_t)v35, v28, v26, *((uint64_t *)&v27 + 1), a11);
  *(_OWORD *)&v36[199] = v35[12];
  *(_OWORD *)&v36[215] = v35[13];
  *(_OWORD *)&v36[231] = v35[14];
  *(_OWORD *)&v36[247] = v35[15];
  *(_OWORD *)&v36[135] = v35[8];
  *(_OWORD *)&v36[151] = v35[9];
  *(_OWORD *)&v36[167] = v35[10];
  *(_OWORD *)&v36[183] = v35[11];
  *(_OWORD *)&v36[71] = v35[4];
  *(_OWORD *)&v36[87] = v35[5];
  *(_OWORD *)&v36[103] = v35[6];
  *(_OWORD *)&v36[119] = v35[7];
  *(_OWORD *)&v36[7] = v35[0];
  *(_OWORD *)&v36[23] = v35[1];
  *(_OWORD *)&v36[39] = v35[2];
  v36[264] = 0;
  *(_OWORD *)&v36[55] = v35[3];
  v37[0] = v20;
  v37[1] = 0x4018000000000000;
  LOBYTE(v37[2]) = 0;
  memcpy((char *)&v37[2] + 1, v36, 0x107uLL);
  uint64_t v21 = *MEMORY[0x263F19860];
  uint64_t v22 = sub_24EF86D40();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v19, v21, v22);
  sub_24EEFD3BC((uint64_t)v19, (uint64_t)v16);
  v16[*(int *)(v14 + 44)] = 0;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985C00);
  uint64_t v24 = v34;
  sub_24EEF7878((uint64_t)v16, (uint64_t)v34 + *(int *)(v23 + 36), &qword_269985AF0);
  memcpy(v24, v37, 0x118uLL);
  sub_24EF01B20((uint64_t)v37);
  sub_24EEFD568((uint64_t)v16, &qword_269985AF0);
  sub_24EEFD420((uint64_t)v19);
  return sub_24EF01BF4((uint64_t)v35);
}

uint64_t sub_24EF0081C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, long long a10, uint64_t a11, uint64_t a12)
{
  uint64_t v94 = a8;
  uint64_t v95 = a6;
  uint64_t v100 = a2;
  uint64_t v98 = a12;
  uint64_t v97 = a11;
  long long v96 = a10;
  uint64_t v99 = a9;
  uint64_t v17 = sub_24EF87320();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a7 + 16))(a3, a7);
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  if (v21)
  {
    sub_24EF87330();
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x263F1B4B8], v17);
    uint64_t v104 = sub_24EF87350();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    uint64_t v103 = sub_24EF01CC4(a1, v100, a3, a4, a5, v95, a7, v99, v96, v97);
    sub_24EF87460();
    sub_24EF86B90();
    uint64_t v101 = v118;
    uint64_t v102 = v117;
    uint64_t v92 = v120;
    uint64_t v93 = v119;
    uint64_t v90 = v122;
    uint64_t v91 = v121;
    unsigned __int8 v22 = sub_24EF86FC0();
    sub_24EF86B40();
    uint64_t v88 = v24;
    uint64_t v89 = v23;
    uint64_t v87 = v25;
    uint64_t v85 = v26;
    uint64_t v86 = v22;
  }
  else
  {
    uint64_t v103 = 0;
    uint64_t v104 = 0;
    uint64_t v101 = 0;
    uint64_t v102 = 0;
    uint64_t v92 = 0;
    uint64_t v93 = 0;
    uint64_t v90 = 0;
    uint64_t v91 = 0;
    uint64_t v86 = 0;
    uint64_t v87 = 0;
    uint64_t v88 = 0;
    uint64_t v89 = 0;
    uint64_t v85 = 0;
  }
  uint64_t v81 = a3;
  uint64_t v82 = a1;
  *(void *)uint64_t v115 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 24))(a3, a7);
  *(void *)&v115[8] = v27;
  sub_24EEFD5C4();
  uint64_t v28 = sub_24EF870C0();
  uint64_t v30 = v29;
  char v32 = v31 & 1;
  sub_24EF87050();
  uint64_t v33 = sub_24EF870A0();
  uint64_t v35 = v34;
  uint64_t v80 = a7;
  char v37 = v36;
  swift_release();
  char v38 = v37 & 1;
  sub_24EEFD518(v28, v30, v32);
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_24EF87090();
  uint64_t v41 = v40;
  char v43 = v42 & 1;
  sub_24EEFD518(v33, v35, v38);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v115 = sub_24EF01CC4(v82, v100, v81, v83, v84, v95, v80, v99, v96, v97);
  uint64_t v44 = sub_24EF87070();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  char v50 = v49 & 1;
  sub_24EEFD518(v39, v41, v43);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v51 = sub_24EF87470();
  sub_24EF5FF60(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v115, 0.0, 1, INFINITY, 0, v51, v52, v44, v46, v50, v48);
  sub_24EEFD518(v44, v46, v50);
  swift_bridgeObjectRelease();
  long long v112 = *(_OWORD *)&v115[112];
  long long v107 = *(_OWORD *)&v115[32];
  long long v108 = *(_OWORD *)&v115[48];
  long long v110 = *(_OWORD *)&v115[80];
  long long v106 = *(_OWORD *)&v115[16];
  v114[6] = *(_OWORD *)&v115[96];
  v114[7] = *(_OWORD *)&v115[112];
  v114[8] = *(_OWORD *)&v115[128];
  v114[2] = *(_OWORD *)&v115[32];
  v114[3] = *(_OWORD *)&v115[48];
  v114[4] = *(_OWORD *)&v115[64];
  v114[5] = *(_OWORD *)&v115[80];
  v114[0] = *(_OWORD *)v115;
  v114[1] = *(_OWORD *)&v115[16];
  long long v53 = *(_OWORD *)&v115[16];
  *(_OWORD *)&v115[7] = *(_OWORD *)v115;
  long long v105 = *(_OWORD *)&v115[7];
  *(_OWORD *)&v115[71] = *(_OWORD *)&v115[64];
  long long v109 = *(_OWORD *)&v115[71];
  long long v55 = *(_OWORD *)&v115[71];
  *(_OWORD *)&v115[55] = *(_OWORD *)&v115[48];
  long long v54 = *(_OWORD *)&v115[55];
  *(_OWORD *)&v115[39] = *(_OWORD *)&v115[32];
  long long v56 = *(_OWORD *)&v115[39];
  long long v57 = *(_OWORD *)&v115[7];
  *(_OWORD *)&v115[23] = v106;
  *(_OWORD *)&v115[135] = *(_OWORD *)&v115[128];
  long long v113 = *(_OWORD *)&v115[135];
  long long v59 = *(_OWORD *)&v115[135];
  *(_OWORD *)&v115[119] = *(_OWORD *)&v115[112];
  long long v58 = *(_OWORD *)&v115[119];
  long long v60 = v110;
  *(_OWORD *)&v115[103] = *(_OWORD *)&v115[96];
  long long v111 = *(_OWORD *)&v115[103];
  long long v61 = *(_OWORD *)&v115[103];
  *(_OWORD *)&v115[87] = v110;
  long long v62 = *(_OWORD *)&v115[112];
  uint64_t v63 = v94;
  *(_OWORD *)(v94 + 201) = *(_OWORD *)&v115[96];
  *(_OWORD *)(v63 + 217) = v62;
  *(_OWORD *)(v63 + 233) = *(_OWORD *)&v115[128];
  long long v64 = *(_OWORD *)&v115[48];
  *(_OWORD *)(v63 + 137) = *(_OWORD *)&v115[32];
  *(_OWORD *)(v63 + 153) = v64;
  long long v65 = *(_OWORD *)&v115[80];
  *(_OWORD *)(v63 + 169) = *(_OWORD *)&v115[64];
  *(_OWORD *)(v63 + 185) = v65;
  long long v66 = *(_OWORD *)&v115[16];
  *(_OWORD *)(v63 + 105) = *(_OWORD *)v115;
  *(_OWORD *)(v63 + 121) = v66;
  uint64_t v67 = v104;
  *(void *)uint64_t v63 = v104;
  uint64_t v68 = v67;
  uint64_t v104 = v67;
  uint64_t v69 = v103;
  *(void *)(v63 + 8) = v103;
  uint64_t v103 = v69;
  uint64_t v70 = v102;
  *(void *)(v63 + 16) = v102;
  uint64_t v102 = v70;
  uint64_t v72 = v92;
  uint64_t v71 = v93;
  *(void *)(v63 + 24) = v101;
  *(void *)(v63 + 32) = v71;
  uint64_t v74 = v90;
  uint64_t v73 = v91;
  *(void *)(v63 + 40) = v72;
  *(void *)(v63 + 48) = v73;
  uint64_t v76 = v86;
  uint64_t v75 = v87;
  *(void *)(v63 + 56) = v74;
  *(void *)(v63 + 64) = v76;
  uint64_t v77 = v88;
  *(void *)(v63 + 72) = v89;
  *(void *)(v63 + 80) = v77;
  uint64_t v78 = v85;
  *(void *)(v63 + 88) = v75;
  *(void *)(v63 + 96) = v78;
  *(unsigned char *)(v63 + 104) = 0;
  *(void *)(v63 + 248) = *(void *)&v115[143];
  v116[6] = v61;
  v116[7] = v58;
  v116[8] = v59;
  v116[2] = v56;
  v116[3] = v54;
  v116[4] = v55;
  v116[5] = v60;
  v116[0] = v57;
  v116[1] = v53;
  sub_24EF01BB4(v68);
  sub_24EF01D58((uint64_t)v114);
  sub_24EF01D98((uint64_t)v116);
  return sub_24EF01C84(v104);
}

uint64_t sub_24EF00E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 112);
}

uint64_t sub_24EF00E58()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF00EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_24EF00F1C(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_24EF00FC8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Theme(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Theme(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for FilterModalitySectionView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EF010E8()
{
  return swift_getWitnessTable();
}

unint64_t sub_24EF01498()
{
  unint64_t result = qword_269985A80;
  if (!qword_269985A80)
  {
    sub_24EF86EA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985A80);
  }
  return result;
}

uint64_t sub_24EF014F0@<X0>(uint64_t a1@<X8>)
{
  return sub_24EEFEF54(*(void *)(v1 + 112), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1, *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96));
}

uint64_t sub_24EF01530@<X0>(uint64_t a1@<X8>)
{
  return sub_24EEFF458(*(_OWORD **)(v1 + 104), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), a1, *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96));
}

uint64_t sub_24EF01578()
{
  return 88;
}

__n128 sub_24EF01584(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 64);
  *(void *)(a2 + 80) = *(void *)(a1 + 80);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 64) = v5;
  *(__n128 *)(a2 + 32) = result;
  return result;
}

uint64_t sub_24EF015A8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24EF015F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&v5[32] = *(void *)(v3 + 88);
  *(_OWORD *)long long v5 = *(_OWORD *)(v3 + 56);
  *(_OWORD *)&v5[16] = *(_OWORD *)(v3 + 72);
  return sub_24EEFF960(a1, a2, (_OWORD *)(v3 + 104), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), a3, *(void *)(v3 + 56), *(long long *)&v5[8], *(long long *)&v5[24], *(void *)(v3 + 96));
}

uint64_t sub_24EF0163C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EF01674(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 104);
  uint64_t v4 = *(void *)a1;
  type metadata accessor for Option();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_24EF01714(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EF01768()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(type metadata accessor for Option() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24EF0187C()
{
  uint64_t v1 = *(void *)(type metadata accessor for Option() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return (*(uint64_t (**)(unint64_t, void))(v0 + 144))(v0 + v2, *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24EF0192C@<X0>(void *a1@<X8>)
{
  return sub_24EF00584(*(void *)(v1 + 104), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1, *(_OWORD *)(v1 + 64), *(_OWORD *)(v1 + 80), *(void *)(v1 + 96));
}

unint64_t sub_24EF0196C()
{
  unint64_t result = qword_269985C08;
  if (!qword_269985C08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985C00);
    sub_24EEFD4C4(&qword_269985C10, &qword_269985C18);
    sub_24EEFD4C4(&qword_269985AE8, &qword_269985AF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985C08);
  }
  return result;
}

uint64_t sub_24EF01A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10)
{
  uint64_t v11 = type metadata accessor for Option();
  if (*(unsigned char *)(a1 + *(int *)(v11 + 68)) && *(unsigned char *)(a1 + *(int *)(v11 + 68)) != 1) {
    return MEMORY[0x2533503B0](objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.650980392, 1.0, 0.0, 1.0, a3, a6, a8, a9, a10));
  }
  id v12 = objc_msgSend(self, sel_systemGray5Color, a3, a6, a8, a9, a10);
  return MEMORY[0x2533503F0](v12);
}

uint64_t sub_24EF01B10()
{
  return swift_deallocObject();
}

uint64_t sub_24EF01B20(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 144);
  char v4 = *(unsigned char *)(a1 + 152);
  sub_24EF01BB4(*(void *)(a1 + 24));
  sub_24EEFD508(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24EF01BB4(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24EF01BF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 120);
  char v4 = *(unsigned char *)(a1 + 128);
  sub_24EF01C84(*(void *)a1);
  sub_24EEFD518(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24EF01C84(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24EF01CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10)
{
  uint64_t v11 = type metadata accessor for Option();
  if (*(unsigned char *)(a1 + *(int *)(v11 + 68)))
  {
    if (*(unsigned char *)(a1 + *(int *)(v11 + 68)) == 1) {
      return sub_24EF872F0();
    }
    else {
      return sub_24EF872D0();
    }
  }
  else
  {
    id v13 = objc_msgSend(self, sel_darkGrayColor, a3, a6, a8, a9, a10);
    return MEMORY[0x2533503F0](v13);
  }
}

uint64_t sub_24EF01D58(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EF01D98(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EF01DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D28);
  MEMORY[0x270FA5388](v99);
  uint64_t v104 = (uint64_t)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D30);
  MEMORY[0x270FA5388](v110);
  uint64_t v6 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_24EF86A40();
  uint64_t v7 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v93 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v94 = (uint64_t)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v90 = (uint64_t)&v81 - v12;
  uint64_t v13 = sub_24EF86AA0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v98 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v91 = (char *)&v81 - v20;
  uint64_t v103 = type metadata accessor for Artwork();
  uint64_t v21 = MEMORY[0x270FA5388](v103);
  uint64_t v114 = (uint64_t)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v113 = (uint64_t)&v81 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v81 - v26;
  uint64_t v111 = a2;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(v111 + 16))
  {
    int64_t v28 = 0;
    uint64_t v29 = a1 + 56;
    uint64_t v30 = 1 << *(unsigned char *)(a1 + 32);
    if (v30 < 64) {
      uint64_t v31 = ~(-1 << v30);
    }
    else {
      uint64_t v31 = -1;
    }
    unint64_t v32 = v31 & *(void *)(a1 + 56);
    int64_t v33 = (unint64_t)(v30 + 63) >> 6;
    long long v109 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    uint64_t v95 = (void (**)(char *, uint64_t, uint64_t))(v14 + 32);
    uint64_t v102 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v97 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v89 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
    uint64_t v92 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v108 = v111 + 56;
    long long v112 = v19;
    uint64_t v86 = a1;
    uint64_t v101 = v13;
    uint64_t v85 = v25;
    uint64_t v84 = v27;
    uint64_t v83 = a1 + 56;
    int64_t v82 = v33;
    while (1)
    {
      uint64_t v34 = (uint64_t)v91;
      if (v32)
      {
        uint64_t v87 = (v32 - 1) & v32;
        int64_t v88 = v28;
        unint64_t v35 = __clz(__rbit64(v32)) | (v28 << 6);
      }
      else
      {
        int64_t v36 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
          __break(1u);
          goto LABEL_84;
        }
        if (v36 >= v33) {
          return 1;
        }
        unint64_t v37 = *(void *)(v29 + 8 * v36);
        int64_t v38 = v28 + 1;
        if (!v37)
        {
          int64_t v38 = v36 + 1;
          if (v36 + 1 >= v33) {
            return 1;
          }
          unint64_t v37 = *(void *)(v29 + 8 * v38);
          if (!v37)
          {
            int64_t v38 = v36 + 2;
            if (v36 + 2 >= v33) {
              return 1;
            }
            unint64_t v37 = *(void *)(v29 + 8 * v38);
            if (!v37)
            {
              int64_t v39 = v36 + 3;
              if (v39 >= v33) {
                return 1;
              }
              unint64_t v37 = *(void *)(v29 + 8 * v39);
              if (!v37)
              {
                while (1)
                {
                  int64_t v38 = v39 + 1;
                  if (__OFADD__(v39, 1)) {
                    break;
                  }
                  if (v38 >= v33) {
                    return 1;
                  }
                  unint64_t v37 = *(void *)(v29 + 8 * v38);
                  ++v39;
                  if (v37) {
                    goto LABEL_22;
                  }
                }
LABEL_84:
                __break(1u);
                JUMPOUT(0x24EF02D48);
              }
              int64_t v38 = v39;
            }
          }
        }
LABEL_22:
        uint64_t v87 = (v37 - 1) & v37;
        int64_t v88 = v38;
        unint64_t v35 = __clz(__rbit64(v37)) + (v38 << 6);
      }
      uint64_t v40 = *(void *)(a1 + 48);
      uint64_t v107 = *(void *)(v25 + 72);
      uint64_t v41 = v27;
      sub_24EF229EC(v40 + v107 * v35, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for Artwork);
      uint64_t v42 = (uint64_t)v41;
      uint64_t v43 = v113;
      sub_24EF22B00(v42, v113, (uint64_t (*)(void))type metadata accessor for Artwork);
      sub_24EF87A90();
      sub_24EEF7878(v43, v34, &qword_2699858F0);
      uint64_t v44 = *v109;
      if ((*v109)(v34, 1, v13) == 1)
      {
        sub_24EF87AB0();
      }
      else
      {
        uint64_t v45 = v98;
        (*v95)(v98, v34, v13);
        sub_24EF87AB0();
        sub_24EF22A54(&qword_2699858F8, MEMORY[0x263F3E0F0]);
        sub_24EF875A0();
        (*v102)(v45, v13);
      }
      uint64_t v46 = v103;
      uint64_t v47 = v113;
      uint64_t v100 = *(int *)(v103 + 20);
      ArtworkVariant.rawValue.getter(*(unsigned char *)(v113 + v100));
      sub_24EF87670();
      swift_bridgeObjectRelease();
      uint64_t v96 = v47 + *(int *)(v46 + 24);
      uint64_t v48 = v90;
      sub_24EEF7878(v96, v90, &qword_2699858E8);
      char v49 = *v97;
      if ((*v97)(v48, 1, v105) == 1)
      {
        sub_24EF87AB0();
      }
      else
      {
        char v50 = v93;
        uint64_t v51 = v105;
        (*v89)(v93, v48, v105);
        sub_24EF87AB0();
        sub_24EF22A54(&qword_269985900, MEMORY[0x263F06EA8]);
        sub_24EF875A0();
        (*v92)((uint64_t)v50, v51);
      }
      uint64_t v52 = (uint64_t)v19;
      uint64_t v53 = sub_24EF87AD0();
      uint64_t v54 = -1 << *(unsigned char *)(v111 + 32);
      unint64_t v55 = v53 & ~v54;
      if (((*(void *)(v108 + ((v55 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v55) & 1) == 0) {
        break;
      }
      uint64_t v106 = ~v54;
      while (2)
      {
        uint64_t v58 = v114;
        sub_24EF229EC(*(void *)(v111 + 48) + v55 * v107, v114, (uint64_t (*)(void))type metadata accessor for Artwork);
        uint64_t v59 = (uint64_t)&v6[*(int *)(v110 + 48)];
        sub_24EEF7878(v58, (uint64_t)v6, &qword_2699858F0);
        sub_24EEF7878(v113, v59, &qword_2699858F0);
        if (v44((uint64_t)v6, 1, v13) == 1)
        {
          if (v44(v59, 1, v13) != 1) {
            goto LABEL_32;
          }
          sub_24EEFD568((uint64_t)v6, &qword_2699858F0);
        }
        else
        {
          sub_24EEF7878((uint64_t)v6, v52, &qword_2699858F0);
          if (v44(v59, 1, v13) == 1)
          {
            (*v102)((char *)v52, v13);
LABEL_32:
            uint64_t v56 = (uint64_t)v6;
            long long v57 = &qword_269985D30;
            goto LABEL_33;
          }
          long long v60 = v98;
          (*v95)(v98, v59, v13);
          sub_24EF22A54(&qword_269985D40, MEMORY[0x263F3E0F0]);
          char v61 = sub_24EF875B0();
          long long v62 = *v102;
          (*v102)(v112, v13);
          uint64_t v52 = (uint64_t)v112;
          v62(v60, v13);
          sub_24EEFD568((uint64_t)v6, &qword_2699858F0);
          if ((v61 & 1) == 0) {
            goto LABEL_34;
          }
        }
        unint64_t v63 = 0xE600000000000000;
        uint64_t v64 = 0x72656E6E6162;
        switch(*(unsigned char *)(v114 + *(int *)(v103 + 20)))
        {
          case 1:
            uint64_t v64 = 0x7265746E6563;
            break;
          case 2:
            unint64_t v63 = 0xE400000000000000;
            uint64_t v64 = 2019912806;
            break;
          case 3:
            uint64_t v64 = 0x657263536C6C7566;
            unint64_t v63 = 0xEA00000000006E65;
            break;
          case 4:
            unint64_t v63 = 0xE700000000000000;
            uint64_t v64 = 0x72616C75676572;
            break;
          case 5:
            unint64_t v63 = 0xE500000000000000;
            uint64_t v64 = 0x74726F6873;
            break;
          case 6:
            unint64_t v63 = 0xE400000000000000;
            uint64_t v64 = 1819042164;
            break;
          case 7:
            unint64_t v63 = 0xE400000000000000;
            uint64_t v64 = 1954047348;
            break;
          case 8:
            uint64_t v64 = 0x6469576172746C75;
            unint64_t v63 = 0xE900000000000065;
            break;
          case 9:
            unint64_t v63 = 0xE400000000000000;
            uint64_t v64 = 1701079415;
            break;
          default:
            break;
        }
        unint64_t v65 = 0xE600000000000000;
        uint64_t v66 = 0x72656E6E6162;
        switch(*(unsigned char *)(v113 + v100))
        {
          case 1:
            if (v64 != 0x7265746E6563) {
              goto LABEL_70;
            }
            goto LABEL_67;
          case 2:
            unint64_t v65 = 0xE400000000000000;
            if (v64 != 2019912806) {
              goto LABEL_70;
            }
            goto LABEL_67;
          case 3:
            unint64_t v65 = 0xEA00000000006E65;
            if (v64 != 0x657263536C6C7566) {
              goto LABEL_70;
            }
            goto LABEL_67;
          case 4:
            unint64_t v65 = 0xE700000000000000;
            if (v64 != 0x72616C75676572) {
              goto LABEL_70;
            }
            goto LABEL_67;
          case 5:
            unint64_t v65 = 0xE500000000000000;
            if (v64 != 0x74726F6873) {
              goto LABEL_70;
            }
            goto LABEL_67;
          case 6:
            unint64_t v65 = 0xE400000000000000;
            if (v64 != 1819042164) {
              goto LABEL_70;
            }
            goto LABEL_67;
          case 7:
            unint64_t v65 = 0xE400000000000000;
            if (v64 != 1954047348) {
              goto LABEL_70;
            }
            goto LABEL_67;
          case 8:
            uint64_t v66 = 0x6469576172746C75;
            unint64_t v65 = 0xE900000000000065;
            goto LABEL_66;
          case 9:
            unint64_t v65 = 0xE400000000000000;
            if (v64 != 1701079415) {
              goto LABEL_70;
            }
            goto LABEL_67;
          default:
LABEL_66:
            if (v64 != v66) {
              goto LABEL_70;
            }
LABEL_67:
            if (v63 == v65)
            {
              swift_bridgeObjectRelease_n();
              uint64_t v13 = v101;
              uint64_t v52 = (uint64_t)v112;
            }
            else
            {
LABEL_70:
              char v67 = sub_24EF87A60();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v13 = v101;
              uint64_t v52 = (uint64_t)v112;
              if ((v67 & 1) == 0) {
                goto LABEL_34;
              }
            }
            uint64_t v68 = v104;
            uint64_t v69 = v104 + *(int *)(v99 + 48);
            sub_24EEF7878(v114 + *(int *)(v103 + 24), v104, &qword_2699858E8);
            sub_24EEF7878(v96, v69, &qword_2699858E8);
            if (v49(v68, 1, v105) != 1)
            {
              uint64_t v70 = v94;
              sub_24EEF7878(v104, v94, &qword_2699858E8);
              if (v49(v69, 1, v105) == 1)
              {
                (*v92)(v70, v105);
                uint64_t v52 = (uint64_t)v112;
LABEL_76:
                uint64_t v56 = v104;
                long long v57 = &qword_269985D28;
LABEL_33:
                sub_24EEFD568(v56, v57);
                goto LABEL_34;
              }
              uint64_t v71 = v93;
              uint64_t v72 = v69;
              uint64_t v73 = v105;
              (*v89)(v93, v72, v105);
              sub_24EF22A54(&qword_269985D38, MEMORY[0x263F06EA8]);
              char v74 = sub_24EF875B0();
              uint64_t v75 = v70;
              char v76 = v74;
              uint64_t v77 = *v92;
              (*v92)(v75, v73);
              uint64_t v78 = v71;
              uint64_t v79 = v101;
              v77((uint64_t)v78, v73);
              uint64_t v13 = v79;
              sub_24EEFD568(v104, &qword_2699858E8);
              uint64_t v52 = (uint64_t)v112;
              if (v76) {
                goto LABEL_78;
              }
LABEL_34:
              sub_24EF22AA0(v114, (uint64_t (*)(void))type metadata accessor for Artwork);
              unint64_t v55 = (v55 + 1) & v106;
              if (((*(void *)(v108 + ((v55 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v55) & 1) == 0) {
                goto LABEL_80;
              }
              continue;
            }
            if (v49(v69, 1, v105) != 1) {
              goto LABEL_76;
            }
            sub_24EEFD568(v104, &qword_2699858E8);
LABEL_78:
            uint64_t v19 = (char *)v52;
            sub_24EF22AA0(v114, (uint64_t (*)(void))type metadata accessor for Artwork);
            sub_24EF22AA0(v113, (uint64_t (*)(void))type metadata accessor for Artwork);
            a1 = v86;
            uint64_t v25 = v85;
            uint64_t v27 = v84;
            int64_t v28 = v88;
            uint64_t v29 = v83;
            int64_t v33 = v82;
            unint64_t v32 = v87;
            break;
        }
        break;
      }
    }
LABEL_80:
    sub_24EF22AA0(v113, (uint64_t (*)(void))type metadata accessor for Artwork);
  }
  return 0;
}

uint64_t sub_24EF02D98(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    int v16 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v12);
    sub_24EF87A90();
    sub_24EF87AA0();
    unint64_t result = sub_24EF87AD0();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(unsigned __int8 *)(v19 + v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_24EF02F80(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v84 = a2 + 56;
  uint64_t v59 = result + 56;
  uint64_t v60 = result;
  int64_t v58 = v8;
  if (!v7) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v61 = (v7 - 1) & v7;
  int64_t v62 = v3;
  for (unint64_t i = __clz(__rbit64(v7)) | (v3 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v12 << 6))
  {
    unint64_t v14 = (uint64_t *)(*(void *)(result + 48) + 72 * i);
    uint64_t v15 = v14[1];
    uint64_t v18 = v14[2];
    uint64_t v17 = v14[3];
    uint64_t v20 = v14[4];
    uint64_t v19 = v14[5];
    uint64_t v22 = v14[6];
    uint64_t v21 = v14[7];
    uint64_t v23 = v14[8];
    uint64_t v89 = *v14;
    uint64_t v16 = v89;
    uint64_t v90 = v15;
    uint64_t v70 = v15;
    uint64_t v91 = v18;
    uint64_t v92 = v17;
    uint64_t v78 = v17;
    uint64_t v93 = v20;
    uint64_t v94 = v19;
    uint64_t v67 = v19;
    uint64_t v95 = v22;
    uint64_t v96 = v21;
    uint64_t v63 = v21;
    uint64_t v97 = v23;
    sub_24EF87A90();
    uint64_t v81 = v18;
    swift_bridgeObjectRetain();
    uint64_t v80 = v20;
    swift_bridgeObjectRetain();
    uint64_t v69 = v22;
    swift_bridgeObjectRetain();
    uint64_t v68 = v23;
    swift_bridgeObjectRetain();
    uint64_t v85 = v16;
    swift_bridgeObjectRetain();
    ThemeCategory.hash(into:)(v88);
    uint64_t v24 = sub_24EF87AD0();
    uint64_t v25 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v26 = v24 & ~v25;
    if (((*(void *)(v84 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
    {
LABEL_77:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v83 = ~v25;
    while (1)
    {
      uint64_t v27 = v2;
      unint64_t v87 = v26;
      int64_t v28 = (void *)(*(void *)(v2 + 48) + 72 * v26);
      uint64_t v29 = v28[1];
      uint64_t v31 = v28[2];
      uint64_t v30 = v28[3];
      uint64_t v33 = v28[4];
      uint64_t v32 = v28[5];
      uint64_t v35 = v28[6];
      uint64_t v34 = v28[7];
      uint64_t v36 = v28[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v37 = swift_bridgeObjectRetain();
      unint64_t result = sub_24EF01DD8(v37, v85);
      if (result) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v27;
LABEL_25:
      swift_bridgeObjectRelease();
      unint64_t v26 = (v87 + 1) & v83;
      if (((*(void *)(v84 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
        goto LABEL_77;
      }
    }
    uint64_t v86 = v33;
    if (v31)
    {
      uint64_t v2 = v27;
      uint64_t v38 = v35;
      if (!v81 || (v29 == v70 ? (v39 = v31 == v81) : (v39 = 0), !v39 && (unint64_t result = sub_24EF87A60(), (result & 1) == 0)))
      {
LABEL_70:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v2 = v27;
      uint64_t v38 = v35;
      if (v81) {
        goto LABEL_70;
      }
    }
    if (v30 != v78 || v86 != v80)
    {
      unint64_t result = sub_24EF87A60();
      if ((result & 1) == 0) {
        goto LABEL_70;
      }
    }
    if (v32 != v67 || v38 != v69)
    {
      unint64_t result = sub_24EF87A60();
      if ((result & 1) == 0) {
        goto LABEL_70;
      }
    }
    if (v34 != v63) {
      goto LABEL_70;
    }
    uint64_t v42 = *(void *)(v36 + 16);
    uint64_t v43 = v68;
    if (v42 != *(void *)(v68 + 16)) {
      goto LABEL_70;
    }
    if (v42 && v36 != v68) {
      break;
    }
LABEL_73:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v59;
    unint64_t result = v60;
    int64_t v8 = v58;
    unint64_t v7 = v61;
    int64_t v3 = v62;
    if (v61) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_80;
    }
    if (v10 >= v8) {
      return 1;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v10 + 1;
      if (v10 + 1 >= v8) {
        return 1;
      }
      unint64_t v11 = *(void *)(v4 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v10 + 2;
        if (v10 + 2 >= v8) {
          return 1;
        }
        unint64_t v11 = *(void *)(v4 + 8 * v12);
        if (!v11)
        {
          int64_t v13 = v10 + 3;
          if (v13 >= v8) {
            return 1;
          }
          unint64_t v11 = *(void *)(v4 + 8 * v13);
          if (!v11)
          {
            while (1)
            {
              int64_t v12 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_81;
              }
              if (v12 >= v8) {
                return 1;
              }
              unint64_t v11 = *(void *)(v4 + 8 * v12);
              ++v13;
              if (v11) {
                goto LABEL_21;
              }
            }
          }
          int64_t v12 = v13;
        }
      }
    }
LABEL_21:
    uint64_t v61 = (v11 - 1) & v11;
    int64_t v62 = v12;
  }
  uint64_t v44 = 0;
  unint64_t v45 = 0;
  uint64_t v65 = v2;
  uint64_t v66 = v36;
  uint64_t v64 = *(void *)(v36 + 16);
  while (v45 < *(void *)(v43 + 16))
  {
    unint64_t v71 = v45;
    uint64_t v72 = v44;
    uint64_t v46 = *(void *)(v36 + v44 + 40);
    uint64_t v79 = *(void *)(v36 + v44 + 32);
    uint64_t v47 = *(void *)(v36 + v44 + 48);
    uint64_t v77 = *(void *)(v36 + v44 + 56);
    uint64_t v48 = *(void *)(v36 + v44 + 64);
    uint64_t v76 = *(void *)(v36 + v44 + 72);
    uint64_t v49 = *(void *)(v36 + v44 + 80);
    uint64_t v74 = *(void *)(v36 + v44 + 88);
    char v50 = (void *)(v43 + v44);
    uint64_t v52 = *(void *)(v43 + v44 + 32);
    uint64_t v51 = *(void *)(v43 + v44 + 40);
    uint64_t v53 = *(void *)(v43 + v44 + 48);
    uint64_t v54 = *(void *)(v43 + v44 + 56);
    uint64_t v55 = v50[8];
    uint64_t v75 = v50[9];
    uint64_t v56 = v50[10];
    uint64_t v73 = v50[11];
    uint64_t v82 = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_24EF01DD8(v79, v52) & 1) == 0) {
      goto LABEL_71;
    }
    if (v47)
    {
      if (!v82 || (v46 != v51 || v47 != v82) && (sub_24EF87A60() & 1) == 0)
      {
LABEL_71:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v2 = v65;
        goto LABEL_25;
      }
    }
    else if (v82)
    {
      goto LABEL_71;
    }
    if ((v77 != v54 || v48 != v55) && (sub_24EF87A60() & 1) == 0) {
      goto LABEL_71;
    }
    if (v76 == v75 && v49 == v56)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v2 = v65;
    }
    else
    {
      char v57 = sub_24EF87A60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v2 = v65;
      if ((v57 & 1) == 0) {
        goto LABEL_70;
      }
    }
    uint64_t v36 = v66;
    if (v74 != v73) {
      goto LABEL_70;
    }
    unint64_t v45 = v71 + 1;
    uint64_t v44 = v72 + 64;
    uint64_t v43 = v68;
    if (v64 == v71 + 1) {
      goto LABEL_73;
    }
  }
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
  return result;
}

uint64_t sub_24EF03700(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(result + 56);
  uint64_t v34 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  int64_t v35 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = a2 + 56;
  if ((v7 & v5) == 0) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  int64_t v36 = v4;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    uint64_t v16 = *(void *)(v3 + 48) + 40 * i;
    uint64_t v18 = *(void *)v16;
    uint64_t v17 = *(void *)(v16 + 8);
    double v19 = *(double *)(v16 + 16);
    double v20 = *(double *)(v16 + 24);
    double v21 = *(double *)(v16 + 32);
    sub_24EF87A90();
    swift_bridgeObjectRetain();
    Duration.hash(into:)();
    uint64_t v22 = sub_24EF87AD0();
    uint64_t v23 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v24 = v22 & ~v23;
    if (((*(void *)(v9 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
    {
LABEL_38:
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v25 = ~v23;
    uint64_t v26 = *(void *)(a2 + 48);
    while (1)
    {
      uint64_t v27 = v26 + 40 * v24;
      double v29 = *(double *)(v27 + 16);
      double v28 = *(double *)(v27 + 24);
      double v30 = *(double *)(v27 + 32);
      BOOL v31 = *(void *)v27 == v18 && *(void *)(v27 + 8) == v17;
      if (v31 || (sub_24EF87A60() & 1) != 0)
      {
        BOOL v32 = v29 == v19 && v28 == v20;
        if (v32 && v30 == v21) {
          break;
        }
      }
      unint64_t v24 = (v24 + 1) & v25;
      if (((*(void *)(v9 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
        goto LABEL_38;
      }
    }
    unint64_t result = swift_bridgeObjectRelease();
    int64_t v4 = v36;
    if (v8) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v12 >= v35) {
      return 1;
    }
    unint64_t v13 = *(void *)(v34 + 8 * v12);
    int64_t v14 = v4 + 1;
    if (!v13)
    {
      int64_t v14 = v12 + 1;
      if (v12 + 1 >= v35) {
        return 1;
      }
      unint64_t v13 = *(void *)(v34 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v12 + 2;
        if (v12 + 2 >= v35) {
          return 1;
        }
        unint64_t v13 = *(void *)(v34 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
    int64_t v36 = v14;
  }
  int64_t v15 = v12 + 3;
  if (v15 >= v35) {
    return 1;
  }
  unint64_t v13 = *(void *)(v34 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v35) {
      return 1;
    }
    unint64_t v13 = *(void *)(v34 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_24EF03998(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v48 = a2 + 56;
  uint64_t v38 = result + 56;
  uint64_t v39 = result;
  int64_t v37 = v9;
  if (!v8) {
    goto LABEL_8;
  }
  while (2)
  {
    uint64_t v40 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v4 << 6);
LABEL_22:
    int64_t v14 = (uint64_t *)(*(void *)(v3 + 48) + 56 * v10);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = v14[2];
    uint64_t v44 = v14[3];
    uint64_t v18 = v14[4];
    uint64_t v42 = v14[5];
    uint64_t v19 = v14[6];
    sub_24EF87A90();
    swift_bridgeObjectRetain();
    uint64_t v45 = v18;
    swift_bridgeObjectRetain();
    uint64_t v43 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_24EEF4E6C(v50, v16);
    uint64_t v49 = v16;
    swift_bridgeObjectRelease();
    uint64_t v46 = v15;
    uint64_t v47 = v17;
    int64_t v41 = v4;
    sub_24EF87AB0();
    if (v17)
    {
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_24EF87AD0();
    uint64_t v21 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v22 = v20 & ~v21;
    if (((*(void *)(v48 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
    {
LABEL_52:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v23 = ~v21;
    while (1)
    {
      uint64_t v24 = v2;
      uint64_t v25 = (void *)(*(void *)(v2 + 48) + 56 * v22);
      uint64_t v26 = v25[1];
      uint64_t v28 = v25[2];
      uint64_t v27 = v25[3];
      uint64_t v29 = v25[4];
      uint64_t v30 = v25[5];
      uint64_t v31 = v25[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v32 = swift_bridgeObjectRetain();
      if ((sub_24EF01DD8(v32, v49) & 1) == 0)
      {
LABEL_27:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v2 = v24;
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      if (v28)
      {
        if (!v47) {
          goto LABEL_27;
        }
        BOOL v33 = v26 == v46 && v28 == v47;
        if (!v33 && (sub_24EF87A60() & 1) == 0) {
          goto LABEL_27;
        }
      }
      else if (v47)
      {
        goto LABEL_27;
      }
      BOOL v34 = v27 == v44 && v29 == v45;
      if (!v34 && (sub_24EF87A60() & 1) == 0) {
        goto LABEL_27;
      }
      BOOL v35 = v30 == v42 && v31 == v43;
      uint64_t v2 = v24;
      if (v35) {
        break;
      }
      char v36 = sub_24EF87A60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v36) {
        goto LABEL_49;
      }
LABEL_28:
      unint64_t v22 = (v22 + 1) & v23;
      if (((*(void *)(v48 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
        goto LABEL_52;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_49:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v5 = v38;
    uint64_t v3 = v39;
    int64_t v9 = v37;
    unint64_t v8 = v40;
    int64_t v4 = v41;
    if (v40) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_55;
  }
  if (v11 >= v9) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v11);
  ++v4;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v4 = v11 + 1;
  if (v11 + 1 >= v9) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v4);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v4 = v11 + 2;
  if (v11 + 2 >= v9) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v4);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v9) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
LABEL_21:
    uint64_t v40 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_24EF03E0C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v57 = a2 + 56;
  uint64_t v46 = result + 56;
  uint64_t v47 = result;
  int64_t v45 = v7;
  if (!v6) {
    goto LABEL_8;
  }
  while (2)
  {
    uint64_t v48 = (v6 - 1) & v6;
    int64_t v49 = v2;
    unint64_t v8 = __clz(__rbit64(v6)) | (v2 << 6);
LABEL_22:
    int64_t v13 = (uint64_t *)(*(void *)(result + 48) + 56 * v8);
    uint64_t v15 = *v13;
    int64_t v14 = (void *)v13[1];
    uint64_t v16 = v13[2];
    uint64_t v17 = v13[3];
    uint64_t v19 = v13[4];
    uint64_t v18 = v13[5];
    uint64_t v20 = v13[6];
    uint64_t v60 = *v13;
    uint64_t v61 = v14;
    uint64_t v52 = v16;
    uint64_t v62 = v16;
    uint64_t v63 = v17;
    uint64_t v64 = v19;
    uint64_t v65 = v18;
    uint64_t v50 = v18;
    uint64_t v66 = v20;
    sub_24EF87A90();
    uint64_t v51 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v56 = v17;
    swift_bridgeObjectRetain();
    uint64_t v53 = v19;
    swift_bridgeObjectRetain();
    FilterConfiguration.hash(into:)((uint64_t)v59);
    uint64_t v21 = sub_24EF87AD0();
    uint64_t v23 = v57;
    uint64_t v22 = a2;
    uint64_t v24 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v25 = v21 & ~v24;
    if (((*(void *)(v57 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
    {
LABEL_72:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v26 = ~v24;
    while (1)
    {
      uint64_t v27 = (void *)(*(void *)(v22 + 48) + 56 * v25);
      if (*v27 != v15) {
        goto LABEL_26;
      }
      uint64_t v28 = (void *)v27[1];
      uint64_t v29 = v28[2];
      if (v29 != v14[2]) {
        goto LABEL_26;
      }
      uint64_t v30 = v27[2];
      uint64_t v31 = v27[3];
      uint64_t v54 = v27[5];
      uint64_t v55 = v27[6];
      if (v29) {
        BOOL v32 = v28 == v14;
      }
      else {
        BOOL v32 = 1;
      }
      if (!v32)
      {
        if (v28[4] != v14[4] || v28[5] != v14[5])
        {
          char v35 = sub_24EF87A60();
          uint64_t v23 = v57;
          uint64_t v22 = a2;
          if ((v35 & 1) == 0) {
            goto LABEL_26;
          }
        }
        if (v29 != 1)
        {
          if (v28[6] != v14[6] || v28[7] != v14[7])
          {
            char v37 = sub_24EF87A60();
            uint64_t v23 = v57;
            uint64_t v22 = a2;
            if ((v37 & 1) == 0) {
              goto LABEL_26;
            }
          }
          uint64_t v38 = v29 - 2;
          if (v38)
          {
            uint64_t v39 = v28 + 9;
            uint64_t v40 = v14 + 9;
            do
            {
              if (*(v39 - 1) != *(v40 - 1) || *v39 != *v40)
              {
                char v42 = sub_24EF87A60();
                uint64_t v23 = v57;
                uint64_t v22 = a2;
                if ((v42 & 1) == 0) {
                  goto LABEL_26;
                }
              }
              v40 += 2;
              v39 += 2;
            }
            while (--v38);
          }
        }
      }
      if (v31)
      {
        if (!v56) {
          goto LABEL_26;
        }
        if (v30 != v52 || v31 != v56)
        {
          char v33 = sub_24EF87A60();
          uint64_t v23 = v57;
          uint64_t v22 = a2;
          if ((v33 & 1) == 0) {
            goto LABEL_26;
          }
        }
      }
      else if (v56)
      {
        goto LABEL_26;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v43 = swift_bridgeObjectRetain();
      if ((sub_24EF4D9F8(v43, v53) & 1) == 0) {
        goto LABEL_25;
      }
      if (!v55)
      {
        if (!v51) {
          break;
        }
LABEL_25:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v23 = v57;
        uint64_t v22 = a2;
        goto LABEL_26;
      }
      if (!v51) {
        goto LABEL_25;
      }
      if (v54 == v50 && v55 == v51) {
        break;
      }
      char v44 = sub_24EF87A60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = v57;
      uint64_t v22 = a2;
      if (v44)
      {
        swift_bridgeObjectRelease();
        goto LABEL_69;
      }
LABEL_26:
      unint64_t v25 = (v25 + 1) & v26;
      if (((*(void *)(v23 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
        goto LABEL_72;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_69:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v46;
    unint64_t result = v47;
    int64_t v7 = v45;
    unint64_t v6 = v48;
    int64_t v2 = v49;
    if (v48) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v9 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_75;
  }
  if (v9 >= v7) {
    return 1;
  }
  unint64_t v10 = *(void *)(v3 + 8 * v9);
  int64_t v11 = v2 + 1;
  if (v10) {
    goto LABEL_21;
  }
  int64_t v11 = v9 + 1;
  if (v9 + 1 >= v7) {
    return 1;
  }
  unint64_t v10 = *(void *)(v3 + 8 * v11);
  if (v10) {
    goto LABEL_21;
  }
  int64_t v11 = v9 + 2;
  if (v9 + 2 >= v7) {
    return 1;
  }
  unint64_t v10 = *(void *)(v3 + 8 * v11);
  if (v10) {
    goto LABEL_21;
  }
  int64_t v12 = v9 + 3;
  if (v12 >= v7) {
    return 1;
  }
  unint64_t v10 = *(void *)(v3 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v12;
LABEL_21:
    uint64_t v48 = (v10 - 1) & v10;
    int64_t v49 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v7) {
      return 1;
    }
    unint64_t v10 = *(void *)(v3 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_21;
    }
  }
LABEL_75:
  __break(1u);
  return result;
}

uint64_t sub_24EF042F8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v63 = a2 + 56;
  uint64_t v50 = result + 56;
  uint64_t v51 = result;
  int64_t v49 = v7;
  if (v6) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v9 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (v9 >= v7) {
    return 1;
  }
  unint64_t v10 = *(void *)(v3 + 8 * v9);
  int64_t v11 = v2 + 1;
  if (!v10)
  {
    int64_t v11 = v9 + 1;
    if (v9 + 1 >= v7) {
      return 1;
    }
    unint64_t v10 = *(void *)(v3 + 8 * v11);
    if (!v10)
    {
      int64_t v11 = v9 + 2;
      if (v9 + 2 >= v7) {
        return 1;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (!v10)
      {
        int64_t v12 = v9 + 3;
        if (v12 < v7)
        {
          unint64_t v10 = *(void *)(v3 + 8 * v12);
          if (v10)
          {
            int64_t v11 = v12;
            goto LABEL_21;
          }
          while (1)
          {
            int64_t v11 = v12 + 1;
            if (__OFADD__(v12, 1)) {
              break;
            }
            if (v11 >= v7) {
              return 1;
            }
            unint64_t v10 = *(void *)(v3 + 8 * v11);
            ++v12;
            if (v10) {
              goto LABEL_21;
            }
          }
LABEL_64:
          __break(1u);
          return result;
        }
        return 1;
      }
    }
  }
LABEL_21:
  uint64_t v52 = (v10 - 1) & v10;
  int64_t v53 = v11;
  for (unint64_t i = __clz(__rbit64(v10)) + (v11 << 6); ; unint64_t i = __clz(__rbit64(v6)) | (v2 << 6))
  {
    int64_t v13 = (void *)(*(void *)(result + 48) + 72 * i);
    uint64_t v15 = v13[1];
    uint64_t v16 = v13[2];
    uint64_t v17 = v13[3];
    uint64_t v18 = v13[4];
    uint64_t v19 = v13[5];
    uint64_t v20 = v13[6];
    uint64_t v21 = v13[7];
    uint64_t v22 = v13[8];
    uint64_t v68 = (void *)*v13;
    int64_t v14 = v68;
    uint64_t v69 = v15;
    uint64_t v56 = v20;
    uint64_t v57 = v16;
    uint64_t v70 = v16;
    uint64_t v71 = v17;
    uint64_t v59 = v18;
    uint64_t v72 = v18;
    uint64_t v73 = v19;
    uint64_t v74 = v20;
    uint64_t v75 = v21;
    uint64_t v76 = v22;
    sub_24EF87A90();
    uint64_t v61 = v17;
    swift_bridgeObjectRetain();
    uint64_t v60 = v19;
    swift_bridgeObjectRetain();
    uint64_t v58 = v21;
    swift_bridgeObjectRetain();
    uint64_t v55 = v22;
    swift_bridgeObjectRetain();
    uint64_t v66 = v14;
    swift_bridgeObjectRetain();
    uint64_t v64 = v15;
    swift_bridgeObjectRetain();
    Modality.hash(into:)(v67);
    unint64_t result = sub_24EF87AD0();
    uint64_t v23 = a2;
    uint64_t v24 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v25 = result & ~v24;
    uint64_t v26 = v63;
    if (((*(void *)(v63 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
      break;
    }
    uint64_t v27 = ~v24;
    uint64_t v28 = v14[2];
    uint64_t v54 = v14 + 6;
    uint64_t v62 = ~v24;
    while (1)
    {
      uint64_t v29 = (void *)(*(void *)(v23 + 48) + 72 * v25);
      uint64_t v30 = (void *)*v29;
      if (*(void *)(*v29 + 16) != v28) {
        goto LABEL_26;
      }
      uint64_t v31 = v29[2];
      uint64_t v32 = v29[3];
      uint64_t v33 = v29[4];
      uint64_t v35 = v29[5];
      uint64_t v34 = v29[6];
      uint64_t v37 = v29[7];
      uint64_t v36 = v29[8];
      if (!v28 || v30 == v66) {
        break;
      }
      unint64_t v38 = v66[2];
      if (!v38)
      {
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      if (v30[4] == v66[4])
      {
        if (v28 == 1) {
          break;
        }
        BOOL v41 = v38 >= 2;
        unint64_t v42 = v38 - 2;
        if (!v41) {
          goto LABEL_62;
        }
        if (v30[5] == v66[5])
        {
          uint64_t v43 = v30 + 6;
          uint64_t v44 = v28 - 2;
          int64_t v45 = v54;
          while (v44)
          {
            if (!v42)
            {
              __break(1u);
              goto LABEL_61;
            }
            uint64_t v47 = *v43++;
            uint64_t v46 = v47;
            uint64_t v48 = *v45++;
            --v42;
            --v44;
            if (v46 != v48) {
              goto LABEL_26;
            }
          }
          break;
        }
      }
LABEL_26:
      unint64_t v25 = (v25 + 1) & v27;
      if (((*(void *)(v26 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
        goto LABEL_58;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = swift_bridgeObjectRetain();
    if ((sub_24EF01DD8(v39, v64) & 1) == 0) {
      goto LABEL_25;
    }
    if (v32)
    {
      if (!v61 || (v31 != v57 || v32 != v61) && (sub_24EF87A60() & 1) == 0) {
        goto LABEL_25;
      }
    }
    else if (v61)
    {
      goto LABEL_25;
    }
    if ((v33 != v59 || v35 != v60) && (sub_24EF87A60() & 1) == 0
      || (v34 != v56 || v37 != v58) && (sub_24EF87A60() & 1) == 0)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v23 = a2;
      uint64_t v27 = v62;
      uint64_t v26 = v63;
      goto LABEL_26;
    }
    char v40 = sub_24EF02D98(v36, v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = a2;
    uint64_t v27 = v62;
    uint64_t v26 = v63;
    if ((v40 & 1) == 0) {
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v50;
    unint64_t result = v51;
    int64_t v7 = v49;
    unint64_t v6 = v52;
    int64_t v2 = v53;
    if (!v52) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v52 = (v6 - 1) & v6;
    int64_t v53 = v2;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24EF0481C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v56 = a2 + 56;
  uint64_t v43 = result + 56;
  uint64_t v44 = result;
  int64_t v42 = v8;
  if (!v7) {
    goto LABEL_8;
  }
  while (2)
  {
    uint64_t v45 = (v7 - 1) & v7;
    int64_t v46 = v3;
    unint64_t v9 = __clz(__rbit64(v7)) | (v3 << 6);
LABEL_22:
    int64_t v14 = (uint64_t *)(*(void *)(result + 48) + 72 * v9);
    uint64_t v15 = v14[1];
    uint64_t v18 = v14[2];
    uint64_t v17 = v14[3];
    uint64_t v20 = v14[4];
    uint64_t v19 = v14[5];
    uint64_t v22 = v14[6];
    uint64_t v21 = v14[7];
    uint64_t v23 = v14[8];
    uint64_t v60 = *v14;
    uint64_t v16 = v60;
    uint64_t v61 = v15;
    uint64_t v51 = v15;
    uint64_t v52 = v17;
    uint64_t v62 = v18;
    uint64_t v63 = v17;
    uint64_t v64 = v20;
    uint64_t v65 = v19;
    uint64_t v47 = v21;
    uint64_t v48 = v19;
    uint64_t v66 = v22;
    uint64_t v67 = v21;
    uint64_t v68 = v23;
    sub_24EF87A90();
    uint64_t v50 = v22;
    swift_bridgeObjectRetain();
    uint64_t v49 = v23;
    swift_bridgeObjectRetain();
    uint64_t v58 = v16;
    swift_bridgeObjectRetain();
    uint64_t v54 = v18;
    swift_bridgeObjectRetain();
    uint64_t v53 = v20;
    swift_bridgeObjectRetain();
    SkillLevel.hash(into:)(v59);
    uint64_t v24 = sub_24EF87AD0();
    uint64_t v25 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v26 = v24 & ~v25;
    if (((*(void *)(v56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
    {
LABEL_62:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v55 = ~v25;
    while (1)
    {
      uint64_t v27 = v2;
      uint64_t v28 = (uint64_t *)(*(void *)(v2 + 48) + 72 * v26);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      uint64_t v32 = v28[2];
      uint64_t v31 = v28[3];
      uint64_t v34 = v28[4];
      uint64_t v33 = v28[5];
      uint64_t v35 = v28[6];
      uint64_t v57 = v28[7];
      uint64_t v36 = v28[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_24EF01DD8(v29, v58) & 1) == 0)
      {
LABEL_52:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v2 = v27;
LABEL_53:
        swift_bridgeObjectRelease();
        goto LABEL_54;
      }
      if (v32)
      {
        if (!v54) {
          goto LABEL_52;
        }
        BOOL v37 = v30 == v51 && v32 == v54;
        if (!v37 && (sub_24EF87A60() & 1) == 0) {
          goto LABEL_52;
        }
      }
      else if (v54)
      {
        goto LABEL_52;
      }
      BOOL v38 = v31 == v52 && v34 == v53;
      if (!v38 && (sub_24EF87A60() & 1) == 0) {
        goto LABEL_52;
      }
      uint64_t v2 = v27;
      if (v35)
      {
        if (!v50 || (v33 == v48 ? (BOOL v39 = v35 == v50) : (BOOL v39 = 0), !v39 && (sub_24EF87A60() & 1) == 0))
        {
LABEL_57:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_53;
        }
      }
      else if (v50)
      {
        goto LABEL_57;
      }
      if (v57 == v47 && v36 == v49) {
        break;
      }
      char v41 = sub_24EF87A60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v41) {
        goto LABEL_59;
      }
LABEL_54:
      unint64_t v26 = (v26 + 1) & v55;
      if (((*(void *)(v56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
        goto LABEL_62;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_59:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v43;
    unint64_t result = v44;
    int64_t v8 = v42;
    unint64_t v7 = v45;
    int64_t v3 = v46;
    if (v45) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v10 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v10 >= v8) {
    return 1;
  }
  unint64_t v11 = *(void *)(v4 + 8 * v10);
  int64_t v12 = v3 + 1;
  if (v11) {
    goto LABEL_21;
  }
  int64_t v12 = v10 + 1;
  if (v10 + 1 >= v8) {
    return 1;
  }
  unint64_t v11 = *(void *)(v4 + 8 * v12);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v12 = v10 + 2;
  if (v10 + 2 >= v8) {
    return 1;
  }
  unint64_t v11 = *(void *)(v4 + 8 * v12);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v13 = v10 + 3;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v11 = *(void *)(v4 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v13;
LABEL_21:
    uint64_t v45 = (v11 - 1) & v11;
    int64_t v46 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v8) {
      return 1;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_24EF04CD8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v56 = a2 + 56;
  uint64_t v43 = result + 56;
  uint64_t v44 = result;
  int64_t v42 = v8;
  if (!v7) {
    goto LABEL_8;
  }
  while (2)
  {
    uint64_t v45 = (v7 - 1) & v7;
    int64_t v46 = v3;
    unint64_t v9 = __clz(__rbit64(v7)) | (v3 << 6);
LABEL_22:
    int64_t v14 = (uint64_t *)(*(void *)(result + 48) + 72 * v9);
    uint64_t v15 = v14[1];
    uint64_t v18 = v14[2];
    uint64_t v17 = v14[3];
    uint64_t v20 = v14[4];
    uint64_t v19 = v14[5];
    uint64_t v22 = v14[6];
    uint64_t v21 = v14[7];
    uint64_t v23 = v14[8];
    uint64_t v60 = *v14;
    uint64_t v16 = v60;
    uint64_t v61 = v15;
    uint64_t v51 = v15;
    uint64_t v52 = v17;
    uint64_t v62 = v18;
    uint64_t v63 = v17;
    uint64_t v64 = v20;
    uint64_t v65 = v19;
    uint64_t v47 = v21;
    uint64_t v48 = v19;
    uint64_t v66 = v22;
    uint64_t v67 = v21;
    uint64_t v68 = v23;
    sub_24EF87A90();
    uint64_t v50 = v22;
    swift_bridgeObjectRetain();
    uint64_t v49 = v23;
    swift_bridgeObjectRetain();
    uint64_t v58 = v16;
    swift_bridgeObjectRetain();
    uint64_t v54 = v18;
    swift_bridgeObjectRetain();
    uint64_t v53 = v20;
    swift_bridgeObjectRetain();
    Trainer.hash(into:)(v59);
    uint64_t v24 = sub_24EF87AD0();
    uint64_t v25 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v26 = v24 & ~v25;
    if (((*(void *)(v56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
    {
LABEL_62:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v55 = ~v25;
    while (1)
    {
      uint64_t v27 = v2;
      uint64_t v28 = (uint64_t *)(*(void *)(v2 + 48) + 72 * v26);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      uint64_t v32 = v28[2];
      uint64_t v31 = v28[3];
      uint64_t v34 = v28[4];
      uint64_t v33 = v28[5];
      uint64_t v35 = v28[6];
      uint64_t v57 = v28[7];
      uint64_t v36 = v28[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_24EF01DD8(v29, v58) & 1) == 0)
      {
LABEL_52:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v2 = v27;
LABEL_53:
        swift_bridgeObjectRelease();
        goto LABEL_54;
      }
      if (v32)
      {
        if (!v54) {
          goto LABEL_52;
        }
        BOOL v37 = v30 == v51 && v32 == v54;
        if (!v37 && (sub_24EF87A60() & 1) == 0) {
          goto LABEL_52;
        }
      }
      else if (v54)
      {
        goto LABEL_52;
      }
      BOOL v38 = v31 == v52 && v34 == v53;
      if (!v38 && (sub_24EF87A60() & 1) == 0) {
        goto LABEL_52;
      }
      uint64_t v2 = v27;
      if (v35)
      {
        if (!v50 || (v33 == v48 ? (BOOL v39 = v35 == v50) : (BOOL v39 = 0), !v39 && (sub_24EF87A60() & 1) == 0))
        {
LABEL_57:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_53;
        }
      }
      else if (v50)
      {
        goto LABEL_57;
      }
      if (v57 == v47 && v36 == v49) {
        break;
      }
      char v41 = sub_24EF87A60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v41) {
        goto LABEL_59;
      }
LABEL_54:
      unint64_t v26 = (v26 + 1) & v55;
      if (((*(void *)(v56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
        goto LABEL_62;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_59:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v43;
    unint64_t result = v44;
    int64_t v8 = v42;
    unint64_t v7 = v45;
    int64_t v3 = v46;
    if (v45) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v10 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v10 >= v8) {
    return 1;
  }
  unint64_t v11 = *(void *)(v4 + 8 * v10);
  int64_t v12 = v3 + 1;
  if (v11) {
    goto LABEL_21;
  }
  int64_t v12 = v10 + 1;
  if (v10 + 1 >= v8) {
    return 1;
  }
  unint64_t v11 = *(void *)(v4 + 8 * v12);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v12 = v10 + 2;
  if (v10 + 2 >= v8) {
    return 1;
  }
  unint64_t v11 = *(void *)(v4 + 8 * v12);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v13 = v10 + 3;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v11 = *(void *)(v4 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v13;
LABEL_21:
    uint64_t v45 = (v11 - 1) & v11;
    int64_t v46 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v8) {
      return 1;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_24EF05194(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v80 = a1;
  uint64_t v81 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v82 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v89 = a2 + 56;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v83 = (v6 - 1) & v6;
  int64_t v84 = v3;
  unint64_t v7 = __clz(__rbit64(v6)) | (v3 << 6);
LABEL_22:
  uint64_t v12 = *(void *)(a1 + 48) + 48 * v7;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  uint64_t v15 = *(void *)(v12 + 16);
  uint64_t v16 = *(void *)(v12 + 24);
  uint64_t v17 = *(void *)(v12 + 32);
  int v18 = *(unsigned __int8 *)(v12 + 40);
  sub_24EF87A90();
  uint64_t v90 = v17;
  uint64_t v91 = v15;
  uint64_t v95 = v16;
  int v96 = v18;
  sub_24EEF7798(v13, v14, v15, v16, v17, v18);
  FilterItem.hash(into:)();
  uint64_t v19 = sub_24EF87AD0();
  uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v21 = v19 & ~v20;
  if (((*(void *)(v89 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
  {
LABEL_138:
    sub_24EEF7780(v13, v14, v91, v95, v90, v96);
    return 0;
  }
  uint64_t v22 = ~v20;
  char v85 = v13;
  uint64_t v86 = ~v20;
  uint64_t v97 = v13;
  uint64_t v98 = v14;
  while (2)
  {
    uint64_t v31 = *(void *)(v2 + 48) + 48 * v21;
    uint64_t v32 = *(void *)v31;
    uint64_t v33 = *(void *)(v31 + 8);
    uint64_t v35 = *(uint64_t *)(v31 + 16);
    uint64_t v34 = *(uint64_t *)(v31 + 24);
    uint64_t v36 = *(uint64_t *)(v31 + 32);
    unsigned __int8 v99 = *(unsigned char *)(v31 + 40);
    switch(v99)
    {
      case 1u:
        if (v96 != 1)
        {
          uint64_t v93 = *(void *)v31;
          uint64_t v38 = *(void *)(v31 + 16);
          uint64_t v40 = *(void *)(v31 + 24);
          uint64_t v42 = *(void *)(v31 + 32);
          swift_bridgeObjectRetain();
          goto LABEL_88;
        }
        if (v32 == v13 && v33 == v14)
        {
          sub_24EEF7798(v13, v14, v91, v95, v90, 1u);
          sub_24EEF7798(v13, v14, v35, v34, v36, 1u);
          sub_24EEF7780(v13, v14, v35, v34, v36, 1u);
          sub_24EEF7780(v13, v14, v91, v95, v90, 1u);
        }
        else
        {
          uint64_t v46 = *(void *)v31;
          char v94 = sub_24EF87A60();
          sub_24EEF7798(v13, v14, v91, v95, v90, 1u);
          sub_24EEF7798(v46, v33, v35, v34, v36, 1u);
          sub_24EEF7780(v46, v33, v35, v34, v36, 1u);
          uint64_t v13 = v97;
          uint64_t v14 = v98;
          sub_24EEF7780(v97, v98, v91, v95, v90, 1u);
          if ((v94 & 1) == 0) {
            goto LABEL_30;
          }
        }
        if (*(double *)&v35 == *(double *)&v91
          && *(double *)&v34 == *(double *)&v95
          && *(double *)&v36 == *(double *)&v90)
        {
          goto LABEL_134;
        }
        goto LABEL_30;
      case 2u:
        if (v96 != 2)
        {
          uint64_t v93 = *(void *)v31;
          uint64_t v37 = *(void *)(v31 + 8);
          uint64_t v38 = *(void *)(v31 + 16);
          uint64_t v39 = v38;
          uint64_t v40 = *(void *)(v31 + 24);
          uint64_t v41 = v40;
          uint64_t v42 = *(void *)(v31 + 32);
          uint64_t v43 = v42;
          unsigned __int8 v44 = 2;
LABEL_87:
          sub_24EEF7798(v32, v37, v39, v41, v43, v44);
LABEL_88:
          swift_bridgeObjectRetain();
LABEL_89:
          sub_24EEF7798(v13, v14, v91, v95, v90, v96);
          sub_24EEF7780(v93, v33, v38, v40, v42, v99);
          uint64_t v13 = v97;
          uint64_t v14 = v98;
          sub_24EEF7780(v97, v98, v91, v95, v90, v96);
          uint64_t v22 = v86;
          sub_24EEF7780(v93, v33, v38, v40, v42, v99);
          goto LABEL_30;
        }
        if (v32 != v13 || v33 != v14)
        {
          uint64_t v48 = *(void *)v31;
          char v92 = sub_24EF87A60();
          sub_24EEF7798(v13, v14, v91, v95, v90, 2u);
          sub_24EEF7798(v48, v33, v35, v34, v36, 2u);
          sub_24EEF7780(v48, v33, v35, v34, v36, 2u);
          uint64_t v25 = v97;
          uint64_t v26 = v98;
          uint64_t v27 = v91;
          uint64_t v28 = v95;
          uint64_t v29 = v90;
          uint64_t v13 = v97;
          uint64_t v14 = v98;
          unsigned __int8 v30 = 2;
LABEL_29:
          sub_24EEF7780(v25, v26, v27, v28, v29, v30);
          if (v92) {
            goto LABEL_134;
          }
LABEL_30:
          unint64_t v21 = (v21 + 1) & v22;
          uint64_t v2 = a2;
          if (((*(void *)(v89 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
            goto LABEL_138;
          }
          continue;
        }
        sub_24EEF7798(v13, v14, v91, v95, v90, 2u);
        sub_24EEF7798(v13, v14, v35, v34, v36, 2u);
        sub_24EEF7780(v13, v14, v35, v34, v36, 2u);
        uint64_t v73 = v13;
        uint64_t v74 = v14;
        uint64_t v75 = v91;
        uint64_t v76 = v95;
        uint64_t v77 = v90;
        unsigned __int8 v78 = 2;
LABEL_133:
        sub_24EEF7780(v73, v74, v75, v76, v77, v78);
LABEL_134:
        sub_24EEF7780(v13, v14, v91, v95, v90, v99);
LABEL_135:
        uint64_t v2 = a2;
        a1 = v80;
        unint64_t v6 = v83;
        int64_t v3 = v84;
        if (v83) {
          goto LABEL_7;
        }
LABEL_8:
        int64_t v8 = v3 + 1;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_141;
        }
        if (v8 < v82)
        {
          unint64_t v9 = *(void *)(v81 + 8 * v8);
          int64_t v10 = v3 + 1;
          if (v9) {
            goto LABEL_21;
          }
          int64_t v10 = v8 + 1;
          if (v8 + 1 < v82)
          {
            unint64_t v9 = *(void *)(v81 + 8 * v10);
            if (v9) {
              goto LABEL_21;
            }
            int64_t v10 = v8 + 2;
            if (v8 + 2 < v82)
            {
              unint64_t v9 = *(void *)(v81 + 8 * v10);
              if (v9) {
                goto LABEL_21;
              }
              int64_t v11 = v8 + 3;
              if (v11 < v82)
              {
                unint64_t v9 = *(void *)(v81 + 8 * v11);
                if (v9)
                {
                  int64_t v10 = v11;
LABEL_21:
                  uint64_t v83 = (v9 - 1) & v9;
                  int64_t v84 = v10;
                  unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
                  goto LABEL_22;
                }
                while (1)
                {
                  int64_t v10 = v11 + 1;
                  if (__OFADD__(v11, 1)) {
                    break;
                  }
                  if (v10 >= v82) {
                    return 1;
                  }
                  unint64_t v9 = *(void *)(v81 + 8 * v10);
                  ++v11;
                  if (v9) {
                    goto LABEL_21;
                  }
                }
LABEL_141:
                __break(1u);
                JUMPOUT(0x24EF062F4);
              }
            }
          }
        }
        return 1;
      case 3u:
        if (v96 != 3)
        {
          uint64_t v93 = *(void *)v31;
          uint64_t v37 = *(void *)(v31 + 8);
          uint64_t v38 = *(void *)(v31 + 16);
          uint64_t v39 = v38;
          uint64_t v40 = *(void *)(v31 + 24);
          uint64_t v41 = v40;
          uint64_t v42 = *(void *)(v31 + 32);
          uint64_t v43 = v42;
          unsigned __int8 v44 = 3;
          goto LABEL_87;
        }
        if (v32 == v13 && v33 == v14)
        {
          sub_24EEF7798(v13, v14, v91, v95, v90, 3u);
          sub_24EEF7798(v13, v14, v35, v34, v36, 3u);
          sub_24EEF7780(v13, v14, v35, v34, v36, 3u);
          uint64_t v73 = v13;
          uint64_t v74 = v14;
          uint64_t v75 = v91;
          uint64_t v76 = v95;
          uint64_t v77 = v90;
          unsigned __int8 v78 = 3;
          goto LABEL_133;
        }
        uint64_t v50 = *(void *)v31;
        char v92 = sub_24EF87A60();
        sub_24EEF7798(v13, v14, v91, v95, v90, 3u);
        sub_24EEF7798(v50, v33, v35, v34, v36, 3u);
        sub_24EEF7780(v50, v33, v35, v34, v36, 3u);
        uint64_t v25 = v97;
        uint64_t v26 = v98;
        uint64_t v27 = v91;
        uint64_t v28 = v95;
        uint64_t v29 = v90;
        uint64_t v13 = v97;
        uint64_t v14 = v98;
        unsigned __int8 v30 = 3;
        goto LABEL_29;
      case 4u:
        if (v96 != 4)
        {
          uint64_t v93 = *(void *)v31;
          uint64_t v37 = *(void *)(v31 + 8);
          uint64_t v38 = *(void *)(v31 + 16);
          uint64_t v39 = v38;
          uint64_t v40 = *(void *)(v31 + 24);
          uint64_t v41 = v40;
          uint64_t v42 = *(void *)(v31 + 32);
          uint64_t v43 = v42;
          unsigned __int8 v44 = 4;
          goto LABEL_87;
        }
        if (v32 == v13 && v33 == v14)
        {
          sub_24EEF7798(v13, v14, v91, v95, v90, 4u);
          sub_24EEF7798(v13, v14, v35, v34, v36, 4u);
          sub_24EEF7780(v13, v14, v35, v34, v36, 4u);
          uint64_t v73 = v13;
          uint64_t v74 = v14;
          uint64_t v75 = v91;
          uint64_t v76 = v95;
          uint64_t v77 = v90;
          unsigned __int8 v78 = 4;
          goto LABEL_133;
        }
        uint64_t v52 = *(void *)v31;
        char v92 = sub_24EF87A60();
        sub_24EEF7798(v13, v14, v91, v95, v90, 4u);
        sub_24EEF7798(v52, v33, v35, v34, v36, 4u);
        sub_24EEF7780(v52, v33, v35, v34, v36, 4u);
        uint64_t v25 = v97;
        uint64_t v26 = v98;
        uint64_t v27 = v91;
        uint64_t v28 = v95;
        uint64_t v29 = v90;
        uint64_t v13 = v97;
        uint64_t v14 = v98;
        unsigned __int8 v30 = 4;
        goto LABEL_29;
      case 5u:
        if (v96 != 5)
        {
          uint64_t v93 = *(void *)v31;
          uint64_t v37 = *(void *)(v31 + 8);
          uint64_t v38 = *(void *)(v31 + 16);
          uint64_t v39 = v38;
          uint64_t v40 = *(void *)(v31 + 24);
          uint64_t v41 = v40;
          uint64_t v42 = *(void *)(v31 + 32);
          uint64_t v43 = v42;
          unsigned __int8 v44 = 5;
          goto LABEL_87;
        }
        if (v32 == v13 && v33 == v14)
        {
          sub_24EEF7798(v13, v14, v91, v95, v90, 5u);
          sub_24EEF7798(v13, v14, v35, v34, v36, 5u);
          sub_24EEF7780(v13, v14, v35, v34, v36, 5u);
          uint64_t v73 = v13;
          uint64_t v74 = v14;
          uint64_t v75 = v91;
          uint64_t v76 = v95;
          uint64_t v77 = v90;
          unsigned __int8 v78 = 5;
          goto LABEL_133;
        }
        uint64_t v54 = *(void *)v31;
        char v92 = sub_24EF87A60();
        sub_24EEF7798(v13, v14, v91, v95, v90, 5u);
        sub_24EEF7798(v54, v33, v35, v34, v36, 5u);
        sub_24EEF7780(v54, v33, v35, v34, v36, 5u);
        uint64_t v25 = v97;
        uint64_t v26 = v98;
        uint64_t v27 = v91;
        uint64_t v28 = v95;
        uint64_t v29 = v90;
        uint64_t v13 = v97;
        uint64_t v14 = v98;
        unsigned __int8 v30 = 5;
        goto LABEL_29;
      case 6u:
        if (v96 != 6)
        {
          uint64_t v93 = *(void *)v31;
          uint64_t v37 = *(void *)(v31 + 8);
          uint64_t v38 = *(void *)(v31 + 16);
          uint64_t v39 = v38;
          uint64_t v40 = *(void *)(v31 + 24);
          uint64_t v41 = v40;
          uint64_t v42 = *(void *)(v31 + 32);
          uint64_t v43 = v42;
          unsigned __int8 v44 = 6;
          goto LABEL_87;
        }
        if (v32 == v13 && v33 == v14)
        {
          sub_24EEF7798(v13, v14, v91, v95, v90, 6u);
          sub_24EEF7798(v13, v14, v35, v34, v36, 6u);
          sub_24EEF7780(v13, v14, v35, v34, v36, 6u);
          uint64_t v73 = v13;
          uint64_t v74 = v14;
          uint64_t v75 = v91;
          uint64_t v76 = v95;
          uint64_t v77 = v90;
          unsigned __int8 v78 = 6;
          goto LABEL_133;
        }
        uint64_t v56 = *(void *)v31;
        char v92 = sub_24EF87A60();
        sub_24EEF7798(v13, v14, v91, v95, v90, 6u);
        sub_24EEF7798(v56, v33, v35, v34, v36, 6u);
        sub_24EEF7780(v56, v33, v35, v34, v36, 6u);
        uint64_t v25 = v97;
        uint64_t v26 = v98;
        uint64_t v27 = v91;
        uint64_t v28 = v95;
        uint64_t v29 = v90;
        uint64_t v13 = v97;
        uint64_t v14 = v98;
        unsigned __int8 v30 = 6;
        goto LABEL_29;
      case 7u:
        if (v96 != 7)
        {
          uint64_t v93 = *(void *)v31;
          uint64_t v37 = *(void *)(v31 + 8);
          uint64_t v38 = *(void *)(v31 + 16);
          uint64_t v39 = v38;
          uint64_t v40 = *(void *)(v31 + 24);
          uint64_t v41 = v40;
          uint64_t v42 = *(void *)(v31 + 32);
          uint64_t v43 = v42;
          unsigned __int8 v44 = 7;
          goto LABEL_87;
        }
        if (v32 == v13 && v33 == v14)
        {
          sub_24EEF7798(v13, v14, v91, v95, v90, 7u);
          sub_24EEF7798(v13, v14, v35, v34, v36, 7u);
          sub_24EEF7780(v13, v14, v35, v34, v36, 7u);
          uint64_t v73 = v13;
          uint64_t v74 = v14;
          uint64_t v75 = v91;
          uint64_t v76 = v95;
          uint64_t v77 = v90;
          unsigned __int8 v78 = 7;
          goto LABEL_133;
        }
        uint64_t v58 = *(void *)v31;
        char v92 = sub_24EF87A60();
        sub_24EEF7798(v13, v14, v91, v95, v90, 7u);
        sub_24EEF7798(v58, v33, v35, v34, v36, 7u);
        sub_24EEF7780(v58, v33, v35, v34, v36, 7u);
        uint64_t v25 = v97;
        uint64_t v26 = v98;
        uint64_t v27 = v91;
        uint64_t v28 = v95;
        uint64_t v29 = v90;
        uint64_t v13 = v97;
        uint64_t v14 = v98;
        unsigned __int8 v30 = 7;
        goto LABEL_29;
      case 8u:
        uint64_t v93 = *(void *)v31;
        uint64_t v38 = *(void *)(v31 + 16);
        uint64_t v40 = *(void *)(v31 + 24);
        uint64_t v42 = *(void *)(v31 + 32);
        if (v96 != 8) {
          goto LABEL_89;
        }
        unint64_t v59 = 0xEF746867696C746FLL;
        uint64_t v60 = 0x7053747369747261;
        uint64_t v61 = *(void *)(v31 + 32);
        switch(*(void *)v31)
        {
          case 1u:
            uint64_t v60 = 0x6565776F6C6C6168;
            unint64_t v59 = 0xE90000000000006ELL;
            break;
          case 2u:
            unint64_t v59 = 0xE700000000000000;
            uint64_t v60 = 0x796164696C6F68;
            break;
          case 3u:
            uint64_t v60 = 0x77654E72616E756CLL;
            uint64_t v64 = 1918985561;
            goto LABEL_106;
          case 4u:
            unint64_t v59 = 0xE700000000000000;
            uint64_t v60 = 0x7261655977656ELL;
            break;
          case 5u:
            unint64_t v59 = 0xE500000000000000;
            uint64_t v60 = 0x6564697270;
            break;
          case 6u:
            uint64_t v60 = 0x576D6172676F7270;
            unint64_t v59 = 0xEE0074756F6B726FLL;
            break;
          case 7u:
            uint64_t v60 = 0x6967736B6E616874;
            uint64_t v64 = 1735289206;
LABEL_106:
            unint64_t v59 = v64 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          default:
            break;
        }
        uint64_t v87 = *(void *)(v31 + 8);
        uint64_t v65 = *(void *)(v31 + 24);
        uint64_t v66 = 0x7053747369747261;
        unint64_t v67 = 0xEF746867696C746FLL;
        uint64_t v68 = *(void *)(v31 + 16);
        switch(v85)
        {
          case 1:
            unint64_t v67 = 0xE90000000000006ELL;
            if (v60 != 0x6565776F6C6C6168) {
              goto LABEL_123;
            }
            goto LABEL_122;
          case 2:
            unint64_t v67 = 0xE700000000000000;
            if (v60 != 0x796164696C6F68) {
              goto LABEL_123;
            }
            goto LABEL_122;
          case 3:
            uint64_t v69 = 0x77654E72616E756CLL;
            uint64_t v70 = 1918985561;
            goto LABEL_121;
          case 4:
            unint64_t v67 = 0xE700000000000000;
            if (v60 != 0x7261655977656ELL) {
              goto LABEL_123;
            }
            goto LABEL_122;
          case 5:
            unint64_t v67 = 0xE500000000000000;
            if (v60 != 0x6564697270) {
              goto LABEL_123;
            }
            goto LABEL_122;
          case 6:
            uint64_t v66 = 0x576D6172676F7270;
            unint64_t v67 = 0xEE0074756F6B726FLL;
            goto LABEL_118;
          case 7:
            uint64_t v69 = 0x6967736B6E616874;
            uint64_t v70 = 1735289206;
LABEL_121:
            unint64_t v67 = v70 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            if (v60 == v69) {
              goto LABEL_122;
            }
            goto LABEL_123;
          default:
LABEL_118:
            if (v60 != v66) {
              goto LABEL_123;
            }
LABEL_122:
            if (v59 == v67)
            {
              swift_bridgeObjectRelease_n();
              uint64_t v73 = v93;
              uint64_t v74 = v87;
              uint64_t v75 = v38;
              uint64_t v76 = v65;
              uint64_t v77 = v61;
              unsigned __int8 v78 = 8;
              goto LABEL_133;
            }
LABEL_123:
            uint64_t v71 = *(void *)(v31 + 32);
            char v72 = sub_24EF87A60();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_24EEF7780(v93, v87, v68, v65, v71, 8u);
            sub_24EEF7780(v13, v14, v91, v95, v90, 8u);
            if (v72) {
              goto LABEL_135;
            }
            break;
        }
        goto LABEL_30;
      default:
        if (v96)
        {
          uint64_t v93 = *(void *)v31;
          uint64_t v37 = *(void *)(v31 + 8);
          uint64_t v38 = *(void *)(v31 + 16);
          uint64_t v39 = v38;
          uint64_t v40 = *(void *)(v31 + 24);
          uint64_t v41 = v40;
          uint64_t v42 = *(void *)(v31 + 32);
          uint64_t v43 = v42;
          unsigned __int8 v44 = 0;
          goto LABEL_87;
        }
        if (v32 == v13 && v33 == v14)
        {
          sub_24EEF7798(v13, v14, v91, v95, v90, 0);
          sub_24EEF7798(v13, v14, v35, v34, v36, 0);
          sub_24EEF7780(v13, v14, v35, v34, v36, 0);
          uint64_t v73 = v13;
          uint64_t v74 = v14;
          uint64_t v75 = v91;
          uint64_t v76 = v95;
          uint64_t v77 = v90;
          unsigned __int8 v78 = 0;
          goto LABEL_133;
        }
        uint64_t v24 = *(void *)v31;
        char v92 = sub_24EF87A60();
        sub_24EEF7798(v13, v14, v91, v95, v90, 0);
        sub_24EEF7798(v24, v33, v35, v34, v36, 0);
        sub_24EEF7780(v24, v33, v35, v34, v36, 0);
        uint64_t v25 = v13;
        uint64_t v26 = v98;
        uint64_t v27 = v91;
        uint64_t v28 = v95;
        uint64_t v29 = v90;
        uint64_t v14 = v98;
        unsigned __int8 v30 = 0;
        goto LABEL_29;
    }
  }
}

uint64_t sub_24EF06358(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_24EF87A90();
    swift_bridgeObjectRetain();
    sub_24EF87670();
    uint64_t v18 = sub_24EF87AD0();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_24EF87A60() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_24EF87A60() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    unint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_24EF065E0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0x800000024EF901A0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000013;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x656C655265746164;
      unint64_t v3 = 0xEC00000064657361;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6E6F697461727564;
      break;
    case 3:
      unint64_t v5 = 0x7974696C61646F6DLL;
      unint64_t v3 = 0xEC000000656D614ELL;
      break;
    case 4:
      unint64_t v5 = 0x6E6547636973756DLL;
      unint64_t v3 = 0xEE00656D614E6572;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1701736302;
      break;
    case 6:
      unint64_t v5 = 0x4E72656E69617274;
      unint64_t v3 = 0xEB00000000656D61;
      break;
    case 7:
      unint64_t v5 = 0x6D614E656D656874;
      unint64_t v3 = 0xE900000000000065;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x800000024EF901A0;
  switch(a2)
  {
    case 1:
      uint64_t v7 = 0x656C655265746164;
      uint64_t v8 = 1684370273;
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6E6F697461727564) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      uint64_t v7 = 0x7974696C61646F6DLL;
      uint64_t v8 = 1701667150;
LABEL_14:
      unint64_t v6 = v8 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      if (v5 != v7) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xEE00656D614E6572;
      if (v5 != 0x6E6547636973756DLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1701736302) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v2 = 0x4E72656E69617274;
      unint64_t v6 = 0xEB00000000656D61;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xE900000000000065;
      if (v5 != 0x6D614E656D656874) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v9 = 1;
      }
      else {
LABEL_25:
      }
        char v9 = sub_24EF87A60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_24EF0689C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEF746867696C746FLL;
  uint64_t v3 = 0x7053747369747261;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7053747369747261;
  unint64_t v6 = 0xEF746867696C746FLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6565776F6C6C6168;
      unint64_t v6 = 0xE90000000000006ELL;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x796164696C6F68;
      break;
    case 3:
      uint64_t v5 = 0x77654E72616E756CLL;
      uint64_t v7 = 1918985561;
      goto LABEL_9;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x7261655977656ELL;
      break;
    case 5:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6564697270;
      break;
    case 6:
      uint64_t v5 = 0x576D6172676F7270;
      unint64_t v6 = 0xEE0074756F6B726FLL;
      break;
    case 7:
      uint64_t v5 = 0x6967736B6E616874;
      uint64_t v7 = 1735289206;
LABEL_9:
      unint64_t v6 = v7 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE90000000000006ELL;
      if (v5 == 0x6565776F6C6C6168) {
        goto LABEL_25;
      }
      goto LABEL_27;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x796164696C6F68) {
        goto LABEL_27;
      }
      goto LABEL_25;
    case 3:
      uint64_t v8 = 0x77654E72616E756CLL;
      uint64_t v9 = 1918985561;
      goto LABEL_24;
    case 4:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x7261655977656ELL) {
        goto LABEL_27;
      }
      goto LABEL_25;
    case 5:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x6564697270) {
        goto LABEL_27;
      }
      goto LABEL_25;
    case 6:
      uint64_t v3 = 0x576D6172676F7270;
      unint64_t v2 = 0xEE0074756F6B726FLL;
      goto LABEL_21;
    case 7:
      uint64_t v8 = 0x6967736B6E616874;
      uint64_t v9 = 1735289206;
LABEL_24:
      unint64_t v2 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      if (v5 == v8) {
        goto LABEL_25;
      }
      goto LABEL_27;
    default:
LABEL_21:
      if (v5 != v3) {
        goto LABEL_27;
      }
LABEL_25:
      if (v6 == v2) {
        char v10 = 1;
      }
      else {
LABEL_27:
      }
        char v10 = sub_24EF87A60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t FilterFeature.environment.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[7];
  long long v3 = v1[9];
  long long v24 = v1[8];
  long long v25 = v3;
  long long v4 = v1[9];
  long long v26 = v1[10];
  long long v5 = v1[3];
  long long v6 = v1[5];
  long long v20 = v1[4];
  long long v7 = v20;
  long long v21 = v6;
  long long v8 = v1[5];
  long long v9 = v1[7];
  long long v22 = v1[6];
  long long v10 = v22;
  long long v23 = v9;
  long long v11 = v1[1];
  v17[0] = *v1;
  v17[1] = v11;
  long long v12 = v1[3];
  long long v14 = *v1;
  long long v13 = v1[1];
  long long v18 = v1[2];
  long long v15 = v18;
  long long v19 = v12;
  a1[8] = v24;
  a1[9] = v4;
  a1[10] = v1[10];
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v10;
  a1[7] = v2;
  *a1 = v14;
  a1[1] = v13;
  a1[2] = v15;
  a1[3] = v5;
  return sub_24EF06BF0((uint64_t)v17);
}

uint64_t sub_24EF06BF0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  swift_retain();
  swift_retain();
  sub_24EF06CC8(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24EF06CC8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 FilterFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a2 + 144) = v2;
  *(_OWORD *)(a2 + 160) = *(_OWORD *)(a1 + 160);
  long long v3 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v3;
  long long v4 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 112) = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v5;
  __n128 result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(a2 + 48) = result;
  *(void *)(a2 + 176) = &unk_27009B4B0;
  return result;
}

uint64_t FilterFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, unint64_t a2, void **a3, uint64_t a4)
{
  void (*v94)(uint64_t *__return_ptr, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;
  int *v99;
  unsigned char *v100;
  unsigned char *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  int *v122;
  unsigned char *v123;
  unsigned char *v124;
  unsigned char *v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  void *v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  int *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(uint64_t, uint64_t);
  uint64_t v164;
  long long v165;
  long long v166;
  long long v167;
  long long v168;
  long long v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(uint64_t, void, uint64_t);
  void (*v174)(void);
  void *v175;
  unint64_t v176;
  unint64_t v177;
  uint64_t v178;
  void (*v179)(unsigned char *, uint64_t, uint64_t);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  uint64_t v184;
  long long v185;
  long long v186;
  long long v187;
  long long v188;
  long long v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unsigned char *v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  unsigned char *v198;
  uint64_t v199;
  void (*v200)(uint64_t, void, uint64_t);
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int v204;
  uint64_t v205;
  unsigned __int8 v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unsigned char *v212;
  unsigned char *v213;
  unsigned char *v214;
  uint64_t v215;
  char v216;
  uint64_t v217;
  uint64_t v218;
  void *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  int *v230;
  unsigned char *v231;
  unsigned char *v232;
  unsigned char *v233;
  void *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  long long v238;
  long long v239;
  long long v240;
  long long v241;
  long long v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unsigned char *v262;
  uint64_t v263;
  uint64_t v264;
  unsigned char *v265;
  unsigned char *v266;
  unsigned char *v267;
  BOOL v268;
  void *v269;
  int *v270;
  unsigned char *v271;
  unsigned char *v272;
  void *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  void *v281;
  void *v282;
  unint64_t v283;
  unint64_t v284;
  int *v285;
  char v286;
  uint64_t v287;
  uint64_t v288;
  void *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  long long v293;
  uint64_t v294;
  long long v295;
  long long v296;
  long long v297;
  long long v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unint64_t v303;
  unint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  int v310;
  uint64_t v311;
  char *v312;
  unint64_t v313;
  unint64_t v314;
  unsigned char *v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  int *v320;
  unsigned char *v321;
  unsigned char *v322;
  void *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  unint64_t v331;
  unint64_t v332;
  uint64_t v333;
  uint64_t v334;
  char v335;
  uint64_t v336;
  char v337;
  int *v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  void *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  void *v349;
  void *v350;
  unint64_t v351;
  unint64_t v352;
  unint64_t v353;
  uint64_t v354;
  uint64_t v355;
  unsigned char *v356;
  uint64_t v357;
  uint64_t v358;
  void (*v359)(uint64_t *__return_ptr, uint64_t);
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  unsigned char *v370;
  int *v371;
  uint64_t v372;
  uint64_t v373;
  void *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  char *v380;
  unsigned char *v381;
  uint64_t *v382;
  unsigned char v383[12];
  int v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  unsigned char *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  unsigned char *v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  unsigned char *v399;
  uint64_t v400;
  uint64_t v401;
  unsigned char *v402;
  uint64_t v403;
  uint64_t v404;
  void (*v405)(uint64_t, void, uint64_t);
  uint64_t v406;
  unsigned char *v407;
  unsigned char *v408;
  long long v409;
  long long v410;
  long long v411;
  long long v412;
  long long v413;
  long long v414;
  void **v415;
  uint64_t v416;
  uint64_t v417;
  unint64_t v418;
  char v419;
  uint64_t v420;
  void *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  long long v426;
  long long v427;
  long long v428;
  long long v429;
  unsigned char *v430;
  long long v431;
  long long v432;
  long long v433;
  long long v434;
  unsigned char *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  unsigned char *v441;
  uint64_t v442;
  unsigned char *v443;
  unsigned char *v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  unsigned __int8 v449;
  uint64_t v450;
  unsigned __int8 v451;
  void v452[20];
  char v453;
  uint64_t v454;
  char v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  unsigned char *v460;
  uint64_t v461;
  uint64_t v462;
  void (*v463)(void, void, void);
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  unsigned char v467[280];
  unsigned char v468[280];
  unsigned char v469[280];
  long long v470;
  long long v471;
  long long v472;
  long long v473;
  long long v474;
  long long v475;
  long long v476;
  long long v477;
  long long v478;
  long long v479;
  long long v480;
  uint64_t v481;
  void v482[9];
  unsigned char v483[48];
  long long v484;
  long long v485;
  long long v486;
  long long v487;
  unsigned char *v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  unsigned char *v494;
  uint64_t v495;
  unsigned char *v496;
  unsigned char *v497;

  v415 = a3;
  v418 = a2;
  *(void *)&v413 = 0;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985C20);
  uint64_t v7 = *(void *)(v6 - 8);
  v416 = v6;
  v417 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  *(void *)&v411 = &v383[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  *(void *)&v409 = &v383[-v11];
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  long long v14 = &v383[-v13];
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  *(void *)&v412 = &v383[-v16];
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  long long v19 = &v383[-v18];
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  long long v22 = &v383[-v21];
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  *(void *)&v410 = &v383[-v24];
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v407 = &v383[-v26];
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = &v383[-v28];
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  v408 = &v383[-v31];
  MEMORY[0x270FA5388](v30);
  *(void *)&v414 = &v383[-v32];
  uint64_t v33 = type metadata accessor for FilterAction();
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = &v383[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v36 = *(_OWORD *)(v4 + 144);
  v478 = *(_OWORD *)(v4 + 128);
  v479 = v36;
  v480 = *(_OWORD *)(v4 + 160);
  long long v37 = *(_OWORD *)(v4 + 80);
  v474 = *(_OWORD *)(v4 + 64);
  v475 = v37;
  long long v38 = *(_OWORD *)(v4 + 112);
  v476 = *(_OWORD *)(v4 + 96);
  v477 = v38;
  long long v39 = *(_OWORD *)(v4 + 16);
  v470 = *(_OWORD *)v4;
  v471 = v39;
  long long v40 = *(_OWORD *)(v4 + 48);
  v472 = *(_OWORD *)(v4 + 32);
  v481 = *(void *)(v4 + 176);
  v473 = v40;
  sub_24EF229EC(a4, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FilterAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24EF0D038((uint64_t)v35, (uint64_t)&v448);
      sub_24EF0C628(v418, (uint64_t)v469);
      sub_24EF0C628((uint64_t)v469, (uint64_t)v467);
      if (sub_24EF0C6B8((uint64_t)v467) != 1) {
        return sub_24EF13808((uint64_t)&v448, (void (*)(void, void, void, void, void, void))sub_24EEF7780);
      }
      nullsub_1(v467);
      sub_24EF0C628((uint64_t)v469, (uint64_t)v452);
      long long v112 = nullsub_1(v452);
      uint64_t v113 = *(void *)v112;
      if (!*(void *)v112) {
        return sub_24EF13808((uint64_t)&v448, (void (*)(void, void, void, void, void, void))sub_24EEF7780);
      }
      uint64_t v114 = *(void *)(v112 + 8);
      uint64_t v115 = *(void *)(v112 + 16);
      uint64_t v116 = *(unsigned char *)(v112 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (sub_24EF0A49C((uint64_t)&v448, v115))
      {
        v489 = v113;
        LOBYTE(v490) = v114 & 1;
        v491 = v115;
        LOBYTE(v492) = v116;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269985C78);
        uint64_t v117 = swift_allocObject();
        *(_OWORD *)(v117 + 16) = xmmword_24EF884F0;
        sub_24EF0D038((uint64_t)&v448, v117 + 32);
        unsigned __int8 v118 = sub_24EF19FD0(v117);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        sub_24EF79930(v118, (uint64_t)&v422);
        swift_bridgeObjectRelease();
        sub_24EF0CF9C(v113);
        uint64_t v119 = v422;
        unsigned __int8 v120 = v423;
        uint64_t v121 = v424;
        LOBYTE(v118) = v425;
        uint64_t v122 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269985C28);
        uint64_t v123 = v408;
        uint64_t v124 = &v408[v122[16]];
        uint64_t v125 = &v408[v122[20]];
        uint64_t v126 = &v408[v122[24]];
        LOBYTE(v422) = 6;
        sub_24EF0D094();
        sub_24EF87820();
        sub_24EF87780();
        uint64_t v127 = *MEMORY[0x263F39590];
        uint64_t v128 = sub_24EF874F0();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v128 - 8) + 104))(v124, v127, v128);
        uint64_t v129 = swift_allocObject();
        *(void *)(v129 + 16) = v119;
        *(unsigned char *)(v129 + 24) = v120;
        *(void *)(v129 + 32) = v121;
        *(unsigned char *)(v129 + 40) = v118;
        *uint64_t v126 = &unk_269985CE8;
        v126[1] = v129;
        uint64_t v130 = *MEMORY[0x263F39578];
        uint64_t v131 = sub_24EF874E0();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v131 - 8) + 104))(v125, v130, v131);
        uint64_t v133 = v416;
        uint64_t v132 = v417;
        (*(void (**)(unsigned char *, void, uint64_t))(v417 + 104))(v123, *MEMORY[0x263F39530], v416);
        uint64_t v134 = v415;
        uint64_t v135 = *v415;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v135 = (void *)sub_24EF134C4(0, v135[2] + 1, 1, v135);
        }
        uint64_t v137 = v135[2];
        uint64_t v136 = v135[3];
        if (v137 >= v136 >> 1) {
          uint64_t v135 = (void *)sub_24EF134C4(v136 > 1, v137 + 1, 1, v135);
        }
        v135[2] = v137 + 1;
        uint64_t result = (*(uint64_t (**)(unint64_t, unsigned char *, uint64_t))(v132 + 32))((unint64_t)v135+ ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ *(void *)(v132 + 72) * v137, v123, v133);
        char *v134 = v135;
      }
      else
      {
        sub_24EF13808((uint64_t)&v448, (void (*)(void, void, void, void, void, void))sub_24EEF7780);
        return sub_24EF0CF9C(v113);
      }
      return result;
    case 2u:
      char v69 = *v35;
      uint64_t v70 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269985C28);
      uint64_t v71 = &v29[v70[16]];
      char v72 = &v29[v70[20]];
      uint64_t v73 = &v29[v70[24]];
      v467[0] = 2;
      sub_24EF0D094();
      sub_24EF87820();
      sub_24EF87780();
      uint64_t v74 = *MEMORY[0x263F39590];
      uint64_t v75 = sub_24EF874F0();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v75 - 8) + 104))(v71, v74, v75);
      uint64_t v76 = swift_allocObject();
      *(unsigned char *)(v76 + 16) = v69;
      *(_OWORD *)(v76 + 152) = v478;
      *(_OWORD *)(v76 + 168) = v479;
      *(_OWORD *)(v76 + 184) = v480;
      *(void *)(v76 + 200) = v481;
      *(_OWORD *)(v76 + 88) = v474;
      *(_OWORD *)(v76 + 104) = v475;
      *(_OWORD *)(v76 + 120) = v476;
      *(_OWORD *)(v76 + 136) = v477;
      *(_OWORD *)(v76 + 24) = v470;
      *(_OWORD *)(v76 + 40) = v471;
      *(_OWORD *)(v76 + 56) = v472;
      *(_OWORD *)(v76 + 72) = v473;
      *uint64_t v73 = &unk_269985CD8;
      v73[1] = v76;
      uint64_t v77 = *MEMORY[0x263F39578];
      uint64_t v78 = sub_24EF874E0();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 104))(v72, v77, v78);
      uint64_t v80 = v416;
      uint64_t v79 = v417;
      (*(void (**)(unsigned char *, void, uint64_t))(v417 + 104))(v29, *MEMORY[0x263F39530], v416);
      uint64_t v81 = v415;
      int64_t v82 = *v415;
      sub_24EF103F8((uint64_t)&v470);
      goto LABEL_14;
    case 3u:
      uint64_t v85 = *(void *)v35;
      uint64_t v86 = v35[8];
      uint64_t v87 = *((void *)v35 + 2);
      int v88 = v35[24];
      long long v89 = *((_OWORD *)v35 + 3);
      v414 = *((_OWORD *)v35 + 2);
      v485 = v89;
      long long v90 = *((_OWORD *)v35 + 3);
      v486 = *((_OWORD *)v35 + 4);
      long long v91 = *((_OWORD *)v35 + 5);
      v411 = *((_OWORD *)v35 + 4);
      v412 = v90;
      v487 = v91;
      char v92 = (unsigned char *)*((void *)v35 + 12);
      v488 = v92;
      v484 = *((_OWORD *)v35 + 2);
      v410 = *((_OWORD *)v35 + 5);
      sub_24EF0C628(v418, (uint64_t)v469);
      sub_24EF0C628((uint64_t)v469, (uint64_t)v467);
      if (sub_24EF0C6B8((uint64_t)v467))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return sub_24EF21850((uint64_t)&v484);
      }
      v388 = v92;
      LODWORD(v389) = v88;
      v390 = v86;
      *(void *)&v409 = v87;
      v192 = nullsub_1(v467);
      v408 = *(unsigned char **)v192;
      v193 = *(void *)(v192 + 8);
      v405 = *(void (**)(uint64_t, void, uint64_t))(v192 + 48);
      v406 = v193;
      v194 = *(unsigned char **)(v192 + 64);
      v398 = v85;
      sub_24EF0C628((uint64_t)v469, (uint64_t)v452);
      v195 = (uint64_t *)nullsub_1(v452);
      sub_24EF218EC(v195);
      swift_bridgeObjectRelease();
      v381 = v194;
      sub_24EF0CE70((uint64_t)v408);
      v196 = *(void *)(v192 + 80);
      v197 = *(void *)(v192 + 96);
      v198 = *(unsigned char **)(v192 + 104);
      v199 = *(void *)(v192 + 112);
      v200 = *(void (**)(uint64_t, void, uint64_t))(v192 + 120);
      v201 = *(void *)(v192 + 128);
      v202 = *(void *)(v192 + 136);
      v396 = *(void *)(v192 + 88);
      v397 = v196;
      v482[0] = v196;
      v482[1] = v396;
      v395 = v197;
      v482[2] = v197;
      v408 = v198;
      v482[3] = v198;
      v405 = v200;
      v406 = v199;
      v482[4] = v199;
      v482[5] = v200;
      v403 = v202;
      v404 = v201;
      v482[6] = v201;
      v482[7] = v202;
      v203 = *(void *)(v192 + 152);
      v402 = *(unsigned char **)(v192 + 144);
      v482[8] = v402;
      v204 = *(unsigned __int8 *)(v192 + 160);
      v205 = *(void *)(v192 + 168);
      v206 = *(unsigned char *)(v192 + 176);
      v207 = *(void *)(v192 + 184);
      v208 = *(void *)(v192 + 192);
      v210 = *(void *)(v192 + 200);
      v209 = *(void *)(v192 + 208);
      v211 = *(void *)(v192 + 216);
      v212 = *(unsigned char **)(v192 + 224);
      v213 = *(unsigned char **)(v192 + 240);
      v400 = *(void *)(v192 + 232);
      v401 = v207;
      v489 = v207;
      v490 = v208;
      v491 = v210;
      v393 = v211;
      v394 = v209;
      v492 = v209;
      v493 = v211;
      v494 = v212;
      v495 = v400;
      v399 = v213;
      v496 = v213;
      v214 = *(unsigned char **)(v192 + 248);
      v391 = *(void *)(v192 + 256);
      v392 = v212;
      v497 = v214;
      v215 = *(void *)(v192 + 264);
      if (sub_24EF05194(v203, v398) & 1) != 0 && v390 == v204 && (sub_24EF05194(v205, v409))
      {
        v216 = sub_24EF065E0(v206, v389);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v216)
        {
          v217 = type metadata accessor for FilterState();
          sub_24EF0D038(v418 + *(int *)(v217 + 28), (uint64_t)v483);
          v218 = v409;
          swift_bridgeObjectRetain_n();
          sub_24EF13808((uint64_t)v483, (void (*)(void, void, void, void, void, void))sub_24EEF7798);
          v219 = sub_24EF11AB8(v218);
          swift_bridgeObjectRelease();
          v421 = v219;
          v220 = v413;
          sub_24EF13A50((uint64_t *)&v421, (uint64_t (*)(uint64_t))sub_24EF19B40, sub_24EF13B60);
          if (v220)
          {
            swift_release();
            __break(1u);
            JUMPOUT(0x24EF09E5CLL);
          }
          v221 = swift_bridgeObjectRelease();
          v222 = (uint64_t)v421;
          MEMORY[0x270FA5388](v221);
          *(void *)&v383[-48] = v483;
          *(void *)&v383[-40] = &v470;
          *(void *)&v383[-32] = v482;
          *(void *)&v383[-24] = &v489;
          *(void *)&v413 = sub_24EF0F928((void (*)(_OWORD *__return_ptr, void *))sub_24EF21A48, (uint64_t)&v383[-64], v222);
          v387 = 0;
          swift_release();
          sub_24EF13808((uint64_t)v483, (void (*)(void, void, void, void, void, void))sub_24EEF7780);
          sub_24EF103F8((uint64_t)&v470);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v223 = v398;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_24EF21A6C((uint64_t)&v484);
          v381 = v214;
          sub_24EF0C9E8(v401);
          v382 = &v420;
          v387 = sub_24EF1D154(v215, &v470, (uint64_t)v482, v223, v390, v218, v389, &v484, (uint64_t)&v489);
          v381 = v214;
          sub_24EF0CF1C(v401);
          sub_24EF21850((uint64_t)&v484);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v224 = v395;
          swift_bridgeObjectRelease();
          v225 = v396;
          swift_bridgeObjectRelease();
          v226 = v397;
          swift_bridgeObjectRelease();
          v227 = v409;
          swift_bridgeObjectRelease();
          v228 = v398;
          swift_bridgeObjectRelease();
          sub_24EF21698((uint64_t)&v470);
          swift_bridgeObjectRelease();
          v422 = v228;
          v423 = v390;
          v424 = v227;
          LOBYTE(v425) = v389;
          *(void *)&v426 = v226;
          *((void *)&v426 + 1) = v225;
          *(void *)&v427 = v224;
          *((void *)&v427 + 1) = v408;
          *(void *)&v428 = v406;
          *((void *)&v428 + 1) = v405;
          *(void *)&v429 = v404;
          *((void *)&v429 + 1) = v403;
          v430 = v402;
          v431 = v414;
          v432 = v412;
          v433 = v411;
          v434 = v410;
          v435 = v388;
          v436 = v401;
          v437 = v208;
          v438 = v210;
          v439 = v394;
          v440 = v393;
          v441 = v392;
          v442 = v400;
          v443 = v399;
          v444 = v214;
          v445 = v413;
          v446 = v391;
          v447 = v387;
          sub_24EF2177C((uint64_t)&v422);
          v229 = v418;
          sub_24EF0C628(v418, (uint64_t)&v448);
          sub_24EF21B08((uint64_t)&v448, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24EF0CC0C);
          sub_24EF0C628((uint64_t)&v422, v229);
          v230 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269985C28);
          v231 = v407;
          v232 = &v407[v230[16]];
          v233 = &v407[v230[20]];
          v234 = &v407[v230[24]];
          v419 = 5;
          sub_24EF0D094();
          sub_24EF87820();
          sub_24EF87780();
          v235 = *MEMORY[0x263F39590];
          v236 = sub_24EF874F0();
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v236 - 8) + 104))(v232, v235, v236);
          v237 = swift_allocObject();
          v238 = v479;
          *(_OWORD *)(v237 + 144) = v478;
          *(_OWORD *)(v237 + 160) = v238;
          *(_OWORD *)(v237 + 176) = v480;
          *(void *)(v237 + 192) = v481;
          v239 = v475;
          *(_OWORD *)(v237 + 80) = v474;
          *(_OWORD *)(v237 + 96) = v239;
          v240 = v477;
          *(_OWORD *)(v237 + 112) = v476;
          *(_OWORD *)(v237 + 128) = v240;
          v241 = v471;
          *(_OWORD *)(v237 + 16) = v470;
          *(_OWORD *)(v237 + 32) = v241;
          v242 = v473;
          *(_OWORD *)(v237 + 48) = v472;
          *(_OWORD *)(v237 + 64) = v242;
          *v234 = &unk_269985CC8;
          v234[1] = v237;
          v243 = *MEMORY[0x263F39578];
          v244 = sub_24EF874E0();
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v244 - 8) + 104))(v233, v243, v244);
          v246 = v416;
          v245 = v417;
          (*(void (**)(unsigned char *, void, uint64_t))(v417 + 104))(v231, *MEMORY[0x263F39530], v416);
          uint64_t v81 = v415;
          int64_t v82 = *v415;
          sub_24EF103F8((uint64_t)&v470);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v82 = (void *)sub_24EF134C4(0, v82[2] + 1, 1, v82);
          }
          v248 = v82[2];
          v247 = v82[3];
          if (v248 >= v247 >> 1) {
            int64_t v82 = (void *)sub_24EF134C4(v247 > 1, v248 + 1, 1, v82);
          }
          v82[2] = v248 + 1;
          uint64_t result = (*(uint64_t (**)(unint64_t, unsigned char *, uint64_t))(v245 + 32))((unint64_t)v82+ ((*(unsigned __int8 *)(v245 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v245 + 80))+ *(void *)(v245 + 72) * v248, v231, v246);
          goto LABEL_97;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EF21850((uint64_t)&v484);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v381 = v214;
      sub_24EF0CF1C(v401);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 4u:
      long long v61 = *((_OWORD *)v35 + 1);
      v414 = *(_OWORD *)v35;
      v485 = v61;
      long long v62 = *((_OWORD *)v35 + 1);
      v486 = *((_OWORD *)v35 + 2);
      long long v63 = *((_OWORD *)v35 + 3);
      v411 = *((_OWORD *)v35 + 2);
      v412 = v62;
      v487 = v63;
      uint64_t v64 = (unsigned char *)*((void *)v35 + 8);
      v488 = v64;
      v484 = *(_OWORD *)v35;
      v409 = *((_OWORD *)v35 + 3);
      unint64_t v65 = v418;
      sub_24EF0C628(v418, (uint64_t)&v448);
      sub_24EF0CFDC((uint64_t)v452);
      sub_24EF0C628((uint64_t)&v448, (uint64_t)v467);
      sub_24EF0C628((uint64_t)v452, (uint64_t)v468);
      sub_24EF0C628((uint64_t)&v448, (uint64_t)v469);
      unsigned int v66 = sub_24EF0C6B8((uint64_t)v469);
      if (v66 >= 2)
      {
        if (v66 != 2)
        {
          v399 = v64;
          sub_24EF0CA6C((uint64_t)v467);
          v250 = v65 + *(int *)(type metadata accessor for FilterState() + 28);
          if (*(unsigned char *)(v250 + 40) == 3)
          {
            v252 = *(void *)(v250 + 24);
            v251 = *(void *)(v250 + 32);
            v254 = *(void *)(v250 + 8);
            v253 = *(void *)(v250 + 16);
            v255 = *(void *)v250;
            sub_24EEF7798(*(void *)v250, v254, v253, v252, v251, 3u);
            sub_24EEF7798(v255, v254, v253, v252, v251, 3u);
            v256 = swift_bridgeObjectRetain();
            v257 = v413;
            sub_24EF0D0E8(v256, v255, v254, (uint64_t)&v422);
            *(void *)&v413 = v257;
            swift_bridgeObjectRelease();
            sub_24EEF7780(v255, v254, v253, v252, v251, 3u);
            v259 = v422;
            v258 = v423;
            v261 = v424;
            v260 = v425;
            v262 = (unsigned char *)*((void *)&v426 + 1);
            v263 = v426;
            v265 = (unsigned char *)*((void *)&v427 + 1);
            v264 = v427;
            v266 = (unsigned char *)v428;
            if (v422)
            {
              v267 = (unsigned char *)v428;
              v268 = sub_24EF0A58C(6u, v428);
              v266 = v267;
              v269 = &unk_27009B4D8;
              if (!v268) {
                v269 = &unk_27009B500;
              }
            }
            else
            {
              v269 = &unk_27009B528;
            }
          }
          else
          {
            v259 = 0;
            v258 = 0;
            v261 = 0;
            v260 = 0;
            v263 = 0;
            v262 = 0;
            v264 = 0;
            v265 = 0;
            v266 = 0;
            v269 = &unk_27009B528;
          }
          v397 = v264;
          v398 = v259;
          v489 = v259;
          v490 = v258;
          v491 = v261;
          v492 = v260;
          v493 = v263;
          v407 = v262;
          v408 = v265;
          v494 = v262;
          v495 = v264;
          v496 = v265;
          v497 = v266;
          v355 = v269[2];
          v404 = v263;
          v356 = v266;
          v357 = v261;
          if (v355) {
            v358 = *((unsigned __int8 *)v269 + 32);
          }
          else {
            v358 = 1;
          }
          v359 = (void (*)(uint64_t *__return_ptr, uint64_t))v477;
          v396 = (uint64_t)v269;
          swift_bridgeObjectRetain();
          v359(&v422, v358);
          v395 = v422;
          LODWORD(v406) = v423;
          v403 = v424;
          LODWORD(v405) = v425;
          v360 = v398;
          v400 = v357;
          v401 = v258;
          v361 = v260;
          v362 = v397;
          sub_24EF0C9E8(v398);
          v363 = swift_bridgeObjectRetain();
          v364 = v413;
          v394 = sub_24EF1D53C(v363, v418, (uint64_t)&v489);
          *(void *)&v413 = v364;
          v402 = v356;
          sub_24EF0CF1C(v360);
          swift_bridgeObjectRelease();
          sub_24EF103F8((uint64_t)&v470);
          v365 = v360;
          sub_24EF0C9E8(v360);
          sub_24EF21A6C((uint64_t)&v484);
          v366 = v395;
          swift_bridgeObjectRetain();
          v367 = v403;
          swift_bridgeObjectRetain();
          *(void *)&v413 = sub_24EF21008(v394, &v470, (uint64_t)&v484, v366, v406, v367, (int)v405, (uint64_t)&v489);
          v381 = v402;
          v368 = v400;
          v369 = v404;
          v370 = v408;
          sub_24EF0CF1C(v365);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24EF21850((uint64_t)&v484);
          sub_24EF21698((uint64_t)&v470);
          swift_bridgeObjectRelease();
          v422 = 0;
          v423 = 0;
          LOBYTE(v425) = 0;
          v424 = 0;
          v426 = v414;
          v427 = v412;
          v428 = v411;
          v429 = v409;
          v430 = v399;
          v431 = 0u;
          v432 = 0u;
          v433 = 0u;
          v434 = 0u;
          v435 = 0;
          v436 = v365;
          v437 = v401;
          v438 = v368;
          v439 = v361;
          v440 = v369;
          v441 = v407;
          v442 = v362;
          v443 = v370;
          v444 = v402;
          v445 = MEMORY[0x263F8EE78];
          v446 = v396;
          v447 = v413;
          sub_24EF2177C((uint64_t)&v422);
          sub_24EF0C628((uint64_t)&v422, v418);
          v371 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269985C28);
          uint64_t v29 = (unsigned char *)v410;
          v372 = v410 + v371[16];
          v373 = v410 + v371[20];
          v374 = (void *)(v410 + v371[24]);
          LOBYTE(v482[0]) = 1;
          sub_24EF0D094();
          sub_24EF87820();
          sub_24EF87780();
          v375 = *MEMORY[0x263F39590];
          v376 = sub_24EF874F0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v376 - 8) + 104))(v372, v375, v376);
          v377 = swift_allocObject();
          *(void *)(v377 + 16) = v366;
          *(unsigned char *)(v377 + 24) = v406;
          *(void *)(v377 + 32) = v403;
          *(unsigned char *)(v377 + 40) = (_BYTE)v405;
          *v374 = &unk_269985CB8;
          v374[1] = v377;
          v378 = *MEMORY[0x263F39578];
          v379 = sub_24EF874E0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v379 - 8) + 104))(v373, v378, v379);
          uint64_t v80 = v416;
          uint64_t v79 = v417;
          (*(void (**)(unsigned char *, void, uint64_t))(v417 + 104))(v29, *MEMORY[0x263F39530], v416);
          uint64_t v81 = v415;
          int64_t v82 = *v415;
LABEL_14:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v82 = (void *)sub_24EF134C4(0, v82[2] + 1, 1, v82);
          }
          unint64_t v84 = v82[2];
          unint64_t v83 = v82[3];
          if (v84 >= v83 >> 1) {
            int64_t v82 = (void *)sub_24EF134C4(v83 > 1, v84 + 1, 1, v82);
          }
          v82[2] = v84 + 1;
          uint64_t result = (*(uint64_t (**)(unint64_t, unsigned char *, uint64_t))(v79 + 32))((unint64_t)v82+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v84, v29, v80);
          goto LABEL_97;
        }
      }
      else
      {
        nullsub_1(v469);
      }
      sub_24EF21B08((uint64_t)&v448, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24EF0C6D0);
      sub_24EF0CA6C((uint64_t)v467);
      return sub_24EF21850((uint64_t)&v484);
    case 5u:
      sub_24EF0D038((uint64_t)v35, (uint64_t)&v448);
      uint64_t v138 = (unint64_t)&v35[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269985C68) + 64)];
      sub_24EF0C628(v418, (uint64_t)v469);
      sub_24EF0C628((uint64_t)v469, (uint64_t)v467);
      if (sub_24EF0C6B8((uint64_t)v467) == 1
        && (nullsub_1(v467),
            sub_24EF0C628((uint64_t)v469, (uint64_t)v452),
            uint64_t v139 = nullsub_1(v452),
            (uint64_t v140 = *(void *)v139) != 0))
      {
        v418 = v138;
        uint64_t v142 = *(void *)(v139 + 8);
        uint64_t v141 = *(void *)(v139 + 16);
        uint64_t v143 = *(unsigned __int8 *)(v139 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (sub_24EF0A49C((uint64_t)&v448, v141))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269985C78);
          uint64_t v144 = swift_allocObject();
          *(_OWORD *)(v144 + 16) = xmmword_24EF884F0;
          sub_24EF0D038((uint64_t)&v448, v144 + 32);
          uint64_t v145 = sub_24EF19FD0(v144);
        }
        else
        {
          LODWORD(v411) = v143;
          *(void *)&v414 = v142;
          swift_bridgeObjectRetain();
          sub_24EF13808((uint64_t)&v448, (void (*)(void, void, void, void, void, void))sub_24EEF7798);
          sub_24EF0D350(v141, (uint64_t)&v448, (uint64_t)&v422);
          swift_bridgeObjectRelease();
          v305 = v422;
          v306 = v423;
          v307 = v424;
          v308 = v425;
          v309 = v426;
          v310 = BYTE8(v426);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269985C70);
          v311 = swift_allocObject();
          v413 = xmmword_24EF884F0;
          *(_OWORD *)(v311 + 16) = xmmword_24EF884F0;
          *(void *)(v311 + 32) = v305;
          *(void *)(v311 + 40) = v306;
          *(void *)(v311 + 48) = v307;
          *(void *)(v311 + 56) = v308;
          *(void *)(v311 + 64) = v309;
          *(unsigned char *)(v311 + 72) = v310;
          if (v310 == 255)
          {
            v312 = (char *)MEMORY[0x263F8EE78];
          }
          else
          {
            *(void *)&v410 = v305;
            *(void *)&v409 = v306;
            sub_24EEF7798(v305, v306, v307, v308, v309, v310);
            v312 = sub_24EF131D8(0, 1, 1, MEMORY[0x263F8EE78]);
            v314 = *((void *)v312 + 2);
            v313 = *((void *)v312 + 3);
            v315 = (unsigned char *)(v314 + 1);
            if (v314 >= v313 >> 1)
            {
              v408 = (unsigned char *)(v314 + 1);
              v380 = sub_24EF131D8((char *)(v313 > 1), v314 + 1, 1, v312);
              v315 = v408;
              v312 = v380;
            }
            *((void *)v312 + 2) = v315;
            v316 = &v312[48 * v314];
            v317 = v409;
            *((void *)v316 + 4) = v410;
            *((void *)v316 + 5) = v317;
            *((void *)v316 + 6) = v307;
            *((void *)v316 + 7) = v308;
            *((void *)v316 + 8) = v309;
            v316[72] = v310;
          }
          swift_bridgeObjectRelease();
          uint64_t v145 = sub_24EF2138C((uint64_t)v312);
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_269985C78);
          v333 = swift_allocObject();
          *(_OWORD *)(v333 + 16) = v413;
          sub_24EF0D038((uint64_t)&v448, v333 + 32);
          sub_24EF19FD0(v333);
          LOBYTE(v142) = v414;
          LOBYTE(v143) = v411;
        }
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        v489 = v140;
        LOBYTE(v490) = v142 & 1;
        v491 = v141;
        LOBYTE(v492) = v143;
        sub_24EF79930(v145, (uint64_t)&v422);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24EF0CF9C(v140);
        v334 = v422;
        v335 = v423;
        v336 = v424;
        v337 = v425;
        v338 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269985C28);
        v339 = v412;
        v340 = v412 + v338[16];
        v341 = v412 + v338[20];
        v342 = (void *)(v412 + v338[24]);
        LOBYTE(v422) = 6;
        sub_24EF0D094();
        sub_24EF87820();
        sub_24EF87780();
        v343 = *MEMORY[0x263F39590];
        v344 = sub_24EF874F0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v344 - 8) + 104))(v340, v343, v344);
        v345 = swift_allocObject();
        *(void *)(v345 + 16) = v334;
        *(unsigned char *)(v345 + 24) = v335;
        *(void *)(v345 + 32) = v336;
        *(unsigned char *)(v345 + 40) = v337;
        *v342 = &unk_269985C88;
        v342[1] = v345;
        v346 = *MEMORY[0x263F39578];
        v347 = sub_24EF874E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v347 - 8) + 104))(v341, v346, v347);
        v348 = v416;
        (*(void (**)(uint64_t, void, uint64_t))(v417 + 104))(v339, *MEMORY[0x263F39530], v416);
        v349 = v415;
        v350 = *v415;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v350 = (void *)sub_24EF134C4(0, v350[2] + 1, 1, v350);
        }
        v351 = v418;
        v353 = v350[2];
        v352 = v350[3];
        if (v353 >= v352 >> 1) {
          v350 = (void *)sub_24EF134C4(v352 > 1, v353 + 1, 1, v350);
        }
        v350[2] = v353 + 1;
        (*(void (**)(unint64_t, void, uint64_t))(v417 + 32))((unint64_t)v350+ ((*(unsigned __int8 *)(v417 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v417 + 80))+ *(void *)(v417 + 72) * v353, v412, v348);
        *v349 = v350;
        v354 = sub_24EF86A90();
        return (*(uint64_t (**)(unint64_t, uint64_t))(*(void *)(v354 - 8) + 8))(v351, v354);
      }
      else
      {
        sub_24EF13808((uint64_t)&v448, (void (*)(void, void, void, void, void, void))sub_24EEF7780);
        uint64_t v153 = sub_24EF86A90();
        return (*(uint64_t (**)(unint64_t, uint64_t))(*(void *)(v153 - 8) + 8))(v138, v153);
      }
    case 6u:
      uint64_t v146 = *v35;
      sub_24EF0C628(v418, (uint64_t)v469);
      sub_24EF0C628((uint64_t)v469, (uint64_t)v467);
      uint64_t result = sub_24EF0C6B8((uint64_t)v467);
      switch((int)result)
      {
        case 1:
          uint64_t result = nullsub_1(v467);
          uint64_t v148 = *(void *)result;
          if (*(void *)result)
          {
            uint64_t v150 = *(void *)(result + 16);
            uint64_t v149 = *(_DWORD *)(result + 8) & 1;
            goto LABEL_84;
          }
          break;
        case 2:
        case 3:
          return result;
        default:
          uint64_t v147 = nullsub_1(v467);
          uint64_t v148 = *(void *)(v147 + 152);
          LOBYTE(v149) = *(unsigned char *)(v147 + 160);
          uint64_t v150 = *(void *)(v147 + 168);
LABEL_84:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v270 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269985C28);
          v271 = &v14[v270[16]];
          v272 = &v14[v270[20]];
          v273 = &v14[v270[24]];
          LOBYTE(v452[0]) = 6;
          sub_24EF0D094();
          sub_24EF87820();
          sub_24EF87780();
          v274 = *MEMORY[0x263F39590];
          v275 = sub_24EF874F0();
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v275 - 8) + 104))(v271, v274, v275);
          v276 = swift_allocObject();
          *(void *)(v276 + 16) = v148;
          *(unsigned char *)(v276 + 24) = v149;
          *(void *)(v276 + 32) = v150;
          *(unsigned char *)(v276 + 40) = v146;
          *v273 = &unk_269985C60;
          v273[1] = v276;
          v277 = *MEMORY[0x263F39578];
          v278 = sub_24EF874E0();
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v278 - 8) + 104))(v272, v277, v278);
          v280 = v416;
          v279 = v417;
          (*(void (**)(unsigned char *, void, uint64_t))(v417 + 104))(v14, *MEMORY[0x263F39530], v416);
          v281 = v415;
          v282 = *v415;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v282 = (void *)sub_24EF134C4(0, v282[2] + 1, 1, v282);
          }
          v284 = v282[2];
          v283 = v282[3];
          if (v284 >= v283 >> 1) {
            v282 = (void *)sub_24EF134C4(v283 > 1, v284 + 1, 1, v282);
          }
          v282[2] = v284 + 1;
          uint64_t result = (*(uint64_t (**)(unint64_t, unsigned char *, uint64_t))(v279 + 32))((unint64_t)v282+ ((*(unsigned __int8 *)(v279 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v279 + 80))+ *(void *)(v279 + 72) * v284, v14, v280);
          goto LABEL_110;
      }
      return result;
    case 7u:
      sub_24EF0C628(v418, (uint64_t)v469);
      sub_24EF0C628((uint64_t)v469, (uint64_t)v467);
      uint64_t result = sub_24EF0C6B8((uint64_t)v467);
      if (result != 1) {
        return result;
      }
      nullsub_1(v467);
      sub_24EF0C628((uint64_t)v469, (uint64_t)v452);
      uint64_t result = nullsub_1(v452);
      uint64_t v93 = *(void *)result;
      if (!*(void *)result) {
        return result;
      }
      char v94 = (void (*)(uint64_t *__return_ptr, uint64_t))v477;
      uint64_t v95 = *(unsigned __int8 *)(result + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v94(&v448, v95);
      sub_24EF0CF9C(v93);
      int v96 = v448;
      LOBYTE(v95) = v449;
      uint64_t v97 = v450;
      uint64_t v98 = v451;
      unsigned __int8 v99 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269985C28);
      uint64_t v100 = &v22[v99[16]];
      uint64_t v101 = &v22[v99[20]];
      uint64_t v102 = &v22[v99[24]];
      LOBYTE(v448) = 7;
      sub_24EF0D094();
      sub_24EF87820();
      sub_24EF87780();
      uint64_t v103 = *MEMORY[0x263F39590];
      uint64_t v104 = sub_24EF874F0();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v104 - 8) + 104))(v100, v103, v104);
      uint64_t v105 = swift_allocObject();
      *(void *)(v105 + 16) = v96;
      *(unsigned char *)(v105 + 24) = v95;
      *(void *)(v105 + 32) = v97;
      *(unsigned char *)(v105 + 40) = v98;
      *uint64_t v102 = &unk_269985CA8;
      v102[1] = v105;
      uint64_t v106 = *MEMORY[0x263F39578];
      uint64_t v107 = sub_24EF874E0();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v107 - 8) + 104))(v101, v106, v107);
      long long v109 = v416;
      uint64_t v108 = v417;
      (*(void (**)(unsigned char *, void, uint64_t))(v417 + 104))(v22, *MEMORY[0x263F39530], v416);
      uint64_t v81 = v415;
      int64_t v82 = *v415;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v82 = (void *)sub_24EF134C4(0, v82[2] + 1, 1, v82);
      }
      uint64_t v111 = v82[2];
      uint64_t v110 = v82[3];
      if (v111 >= v110 >> 1) {
        int64_t v82 = (void *)sub_24EF134C4(v110 > 1, v111 + 1, 1, v82);
      }
      v82[2] = v111 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, unsigned char *, uint64_t))(v108 + 32))((unint64_t)v82+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ *(void *)(v108 + 72) * v111, v22, v109);
      goto LABEL_97;
    case 8u:
      sub_24EF0C628(v418, (uint64_t)v469);
      sub_24EF0C628((uint64_t)v469, (uint64_t)v467);
      uint64_t result = sub_24EF0C6B8((uint64_t)v467);
      if (result == 1)
      {
        nullsub_1(v467);
        sub_24EF0C628((uint64_t)v469, (uint64_t)v452);
        uint64_t result = nullsub_1(v452);
        uint64_t v151 = *(void *)result;
        if (*(void *)result)
        {
          uint64_t v152 = v472;
          if ((void)v472)
          {
            LODWORD(v418) = BYTE8(v472) & 1;
            LODWORD(v414) = BYTE8(v473);
            *(void *)&v413 = v473;
            *(void *)&v412 = v472;
          }
          else
          {
            v318 = *(void *)(result + 16);
            v418 = *(void *)(result + 8);
            *(void *)&v414 = v318;
            v319 = *(unsigned __int8 *)(result + 24);
            *(void *)&v413 = v477;
            sub_24EF06CC8(v151);
            swift_retain();
            ((void (*)(uint64_t *__return_ptr, uint64_t))v413)(&v448, v319);
            sub_24EF0CF9C(v151);
            swift_release();
            *(void *)&v412 = v448;
            LODWORD(v418) = v449;
            *(void *)&v413 = v450;
            LODWORD(v414) = v451;
          }
          v320 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269985C28);
          v321 = &v19[v320[16]];
          v322 = &v19[v320[20]];
          v323 = &v19[v320[24]];
          LOBYTE(v448) = 1;
          sub_24EF06CC8(v152);
          sub_24EF0D094();
          sub_24EF87820();
          sub_24EF87780();
          v324 = *MEMORY[0x263F39590];
          v325 = sub_24EF874F0();
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v325 - 8) + 104))(v321, v324, v325);
          v326 = swift_allocObject();
          *(void *)(v326 + 16) = v412;
          *(unsigned char *)(v326 + 24) = v418;
          *(void *)(v326 + 32) = v413;
          *(unsigned char *)(v326 + 40) = v414;
          *v323 = &unk_269985C98;
          v323[1] = v326;
          v327 = *MEMORY[0x263F39578];
          v328 = sub_24EF874E0();
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v328 - 8) + 104))(v322, v327, v328);
          v330 = v416;
          v329 = v417;
          (*(void (**)(unsigned char *, void, uint64_t))(v417 + 104))(v19, *MEMORY[0x263F39530], v416);
          v281 = v415;
          v282 = *v415;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v282 = (void *)sub_24EF134C4(0, v282[2] + 1, 1, v282);
          }
          v332 = v282[2];
          v331 = v282[3];
          if (v332 >= v331 >> 1) {
            v282 = (void *)sub_24EF134C4(v331 > 1, v332 + 1, 1, v282);
          }
          v282[2] = v332 + 1;
          uint64_t result = (*(uint64_t (**)(unint64_t, unsigned char *, uint64_t))(v329 + 32))((unint64_t)v282+ ((*(unsigned __int8 *)(v329 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v329 + 80))+ *(void *)(v329 + 72) * v332, v19, v330);
LABEL_110:
          *v281 = v282;
        }
      }
      return result;
    case 9u:
      uint64_t v67 = v418;
      sub_24EF0C628(v418, (uint64_t)&v448);
      sub_24EF0C684((uint64_t)v452);
      sub_24EF0C628((uint64_t)&v448, (uint64_t)v467);
      sub_24EF0C628((uint64_t)v452, (uint64_t)v468);
      sub_24EF0C628((uint64_t)&v448, (uint64_t)v469);
      unsigned int v68 = sub_24EF0C6B8((uint64_t)v469);
      if (v68 >= 2)
      {
        if (v68 == 2)
        {
          sub_24EF0CA6C((uint64_t)v467);
          sub_24EF0CFDC((uint64_t)&v422);
          sub_24EF0C628((uint64_t)&v422, v67);
          long long v154 = type metadata accessor for FilterState();
          sub_24EF0D038(v67 + *(int *)(v154 + 28), (uint64_t)&v489);
          long long v155 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269985C28);
          long long v156 = v409;
          long long v157 = v409 + v155[16];
          long long v158 = v409 + v155[20];
          v159 = (void *)(v409 + v155[24]);
          LOBYTE(v484) = 4;
          sub_24EF13808((uint64_t)&v489, (void (*)(void, void, void, void, void, void))sub_24EEF7798);
          v418 = sub_24EF0D094();
          sub_24EF87820();
          sub_24EF87780();
          v160 = *MEMORY[0x263F39590];
          v161 = sub_24EF874F0();
          v162 = *(void *)(v161 - 8);
          v163 = *(void (**)(uint64_t, uint64_t))(v162 + 104);
          *(void *)&v414 = v161;
          *(void *)&v413 = v163;
          *(void *)&v412 = v162 + 104;
          v163(v157, v160);
          v164 = swift_allocObject();
          v165 = v479;
          *(_OWORD *)(v164 + 144) = v478;
          *(_OWORD *)(v164 + 160) = v165;
          *(_OWORD *)(v164 + 176) = v480;
          *(void *)(v164 + 192) = v481;
          v166 = v475;
          *(_OWORD *)(v164 + 80) = v474;
          *(_OWORD *)(v164 + 96) = v166;
          v167 = v477;
          *(_OWORD *)(v164 + 112) = v476;
          *(_OWORD *)(v164 + 128) = v167;
          v168 = v471;
          *(_OWORD *)(v164 + 16) = v470;
          *(_OWORD *)(v164 + 32) = v168;
          v169 = v473;
          *(_OWORD *)(v164 + 48) = v472;
          *(_OWORD *)(v164 + 64) = v169;
          sub_24EF0D038((uint64_t)&v489, v164 + 200);
          *v159 = &unk_269985C40;
          v159[1] = v164;
          v170 = *MEMORY[0x263F39578];
          v171 = sub_24EF874E0();
          v172 = *(void *)(v171 - 8);
          v173 = *(void (**)(uint64_t, void, uint64_t))(v172 + 104);
          v404 = v172 + 104;
          v405 = v173;
          v173(v158, v170, v171);
          v174 = *(void (**)(void))(v417 + 104);
          LODWORD(v410) = *MEMORY[0x263F39530];
          v408 = v174;
          v174(v156);
          v175 = *v415;
          sub_24EF103F8((uint64_t)&v470);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v175 = (void *)sub_24EF134C4(0, v175[2] + 1, 1, v175);
          }
          v177 = v175[2];
          v176 = v175[3];
          if (v177 >= v176 >> 1) {
            v175 = (void *)sub_24EF134C4(v176 > 1, v177 + 1, 1, v175);
          }
          v175[2] = v177 + 1;
          v178 = v416;
          v179 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v417 + 32);
          v407 = (unsigned char *)((*(unsigned __int8 *)(v417 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v417 + 80));
          v406 = *(void *)(v417 + 72);
          v417 += 32;
          *(void *)&v409 = v179;
          v179(&v407[(void)v175 + v406 * v177], v156, v416);
          uint64_t v81 = v415;
          *v415 = v175;
          v180 = v411;
          v181 = v411 + v155[16];
          v182 = v411 + v155[20];
          v183 = (void *)(v411 + v155[24]);
          LOBYTE(v484) = 3;
          sub_24EF87820();
          ((void (*)(uint64_t, void, void))v413)(v181, *MEMORY[0x263F39580], v414);
          v405(v182, *MEMORY[0x263F39570], v171);
          v184 = swift_allocObject();
          v185 = v479;
          *(_OWORD *)(v184 + 144) = v478;
          *(_OWORD *)(v184 + 160) = v185;
          *(_OWORD *)(v184 + 176) = v480;
          *(void *)(v184 + 192) = v481;
          v186 = v475;
          *(_OWORD *)(v184 + 80) = v474;
          *(_OWORD *)(v184 + 96) = v186;
          v187 = v477;
          *(_OWORD *)(v184 + 112) = v476;
          *(_OWORD *)(v184 + 128) = v187;
          v188 = v471;
          *(_OWORD *)(v184 + 16) = v470;
          *(_OWORD *)(v184 + 32) = v188;
          v189 = v473;
          *(_OWORD *)(v184 + 48) = v472;
          *(_OWORD *)(v184 + 64) = v189;
          *v183 = &unk_269985C50;
          v183[1] = v184;
          sub_24EF103F8((uint64_t)&v470);
          sub_24EF87780();
          ((void (*)(uint64_t, void, uint64_t))v408)(v180, v410, v178);
          int64_t v82 = *v81;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v82 = (void *)sub_24EF134C4(0, v82[2] + 1, 1, v82);
          }
          v191 = v82[2];
          v190 = v82[3];
          if (v191 >= v190 >> 1) {
            int64_t v82 = (void *)sub_24EF134C4(v190 > 1, v191 + 1, 1, v82);
          }
          v82[2] = v191 + 1;
          uint64_t result = ((uint64_t (*)(unsigned char *, void, uint64_t))v409)(&v407[(void)v82 + v191 * v406], v411, v178);
          goto LABEL_97;
        }
      }
      else
      {
        nullsub_1(v469);
      }
      sub_24EF21B08((uint64_t)&v448, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24EF0C6D0);
      return sub_24EF0CA6C((uint64_t)v467);
    default:
      uint64_t v41 = *(void *)v35;
      int v42 = v35[8];
      uint64_t v43 = *((void *)v35 + 2);
      char v44 = v35[24];
      sub_24EF0C628(v418, (uint64_t)v469);
      sub_24EF0C628((uint64_t)v469, (uint64_t)v467);
      if (sub_24EF0C6B8((uint64_t)v467) != 1)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v45 = nullsub_1(v467);
      uint64_t v47 = *(void *)v45;
      uint64_t v46 = *(void *)(v45 + 8);
      uint64_t v48 = *(void *)(v45 + 16);
      unsigned __int8 v49 = *(unsigned char *)(v45 + 24);
      uint64_t v50 = *(void *)(v45 + 32);
      *(void *)&v413 = *(void *)(v45 + 40);
      *(void *)&v412 = *(void *)(v45 + 48);
      *(void *)&v411 = *(void *)(v45 + 56);
      *(void *)&v410 = *(void *)(v45 + 64);
      uint64_t v51 = *(void *)(v45 + 72);
      v408 = *(unsigned char **)(v45 + 80);
      *(void *)&v409 = v51;
      uint64_t v52 = *(unsigned char **)(v45 + 88);
      v406 = *(void *)(v45 + 96);
      v407 = v52;
      uint64_t v53 = *(void *)(v45 + 104);
      uint64_t v54 = *(unsigned char **)(v45 + 112);
      uint64_t v55 = *(void *)(v45 + 120);
      v396 = *(void *)(v45 + 128);
      v398 = *(void *)(v45 + 136);
      v400 = *(void *)(v45 + 144);
      v402 = *(unsigned char **)(v45 + 152);
      v404 = *(void *)(v45 + 160);
      v388 = *(unsigned char **)(v45 + 168);
      uint64_t v56 = *(void *)(v45 + 176);
      v390 = v53;
      v391 = v56;
      uint64_t v57 = *(void *)(v45 + 184);
      v392 = v54;
      v393 = v57;
      uint64_t v58 = *(void *)(v45 + 192);
      v394 = v55;
      v395 = v58;
      v397 = *(void *)(v45 + 200);
      v399 = *(unsigned char **)(v45 + 208);
      v401 = *(void *)(v45 + 216);
      v403 = *(void *)(v45 + 224);
      v405 = *(void (**)(uint64_t, void, uint64_t))(v45 + 232);
      v389 = *(void *)(v45 + 240);
      uint64_t v59 = *(void *)(v45 + 256);
      v385 = *(void *)(v45 + 248);
      v386 = v59;
      v387 = *(void *)(v45 + 264);
      if (!v47)
      {
        sub_24EF21B08((uint64_t)v469, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24EF0C6D0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24EF0CF9C(0);
        v249 = v41;
        goto LABEL_90;
      }
      sub_24EF21B08((uint64_t)v469, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24EF0C6D0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24EF06CC8(v47);
      if ((sub_24EF05194(v47, v41) & 1) == 0
        || ((v42 ^ v46) & 1) != 0
        || (sub_24EF05194(v48, v43) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v249 = v47;
LABEL_90:
        sub_24EF0CF9C(v249);
        goto LABEL_91;
      }
      v384 = sub_24EF065E0(v49, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EF0CF9C(v47);
      if (v384)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24EF0CF1C(v391);
        v381 = v388;
        sub_24EF0CE70(v390);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
LABEL_91:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24EF21B08((uint64_t)v469, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24EF0CC0C);
      v452[0] = v390;
      v452[1] = v392;
      v452[2] = v394;
      v452[3] = v396;
      v452[4] = v398;
      v452[5] = v400;
      v452[6] = v402;
      v452[7] = v404;
      v452[8] = v388;
      v452[9] = v385;
      v452[10] = v50;
      v452[11] = v413;
      v452[12] = v412;
      v452[13] = v411;
      v452[14] = v410;
      v452[15] = v409;
      v452[16] = v408;
      v452[17] = v407;
      v452[18] = v406;
      v456 = v391;
      v457 = v393;
      v458 = v395;
      v459 = v397;
      v460 = v399;
      v461 = v401;
      v462 = v403;
      v463 = v405;
      v464 = v389;
      v465 = v386;
      v466 = v387;
      v452[19] = v41;
      v453 = v42;
      v454 = v43;
      v455 = v44;
      sub_24EF21F10((uint64_t)v452);
      sub_24EF0C628((uint64_t)v452, v418);
      v285 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269985C28);
      v286 = v44;
      v287 = v414;
      v288 = v414 + v285[16];
      v418 = v414 + v285[20];
      v289 = (void *)(v414 + v285[24]);
      LOBYTE(v448) = 0;
      sub_24EF0D094();
      sub_24EF87820();
      sub_24EF87780();
      v290 = *MEMORY[0x263F39590];
      v291 = sub_24EF874F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v291 - 8) + 104))(v288, v290, v291);
      v292 = swift_allocObject();
      v293 = v479;
      *(_OWORD *)(v292 + 144) = v478;
      *(_OWORD *)(v292 + 160) = v293;
      *(_OWORD *)(v292 + 176) = v480;
      v294 = v481;
      v295 = v475;
      *(_OWORD *)(v292 + 80) = v474;
      *(_OWORD *)(v292 + 96) = v295;
      v296 = v477;
      *(_OWORD *)(v292 + 112) = v476;
      *(_OWORD *)(v292 + 128) = v296;
      v297 = v471;
      *(_OWORD *)(v292 + 16) = v470;
      *(_OWORD *)(v292 + 32) = v297;
      v298 = v473;
      *(_OWORD *)(v292 + 48) = v472;
      *(_OWORD *)(v292 + 64) = v298;
      *(void *)(v292 + 192) = v294;
      *(void *)(v292 + 200) = v41;
      *(unsigned char *)(v292 + 208) = v42;
      *(void *)(v292 + 216) = v43;
      *(unsigned char *)(v292 + 224) = v286;
      *v289 = &unk_269985CF8;
      v289[1] = v292;
      v299 = *MEMORY[0x263F39578];
      v300 = sub_24EF874E0();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v300 - 8) + 104))(v418, v299, v300);
      v302 = v416;
      v301 = v417;
      (*(void (**)(uint64_t, void, uint64_t))(v417 + 104))(v287, *MEMORY[0x263F39530], v416);
      uint64_t v81 = v415;
      int64_t v82 = *v415;
      sub_24EF103F8((uint64_t)&v470);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v82 = (void *)sub_24EF134C4(0, v82[2] + 1, 1, v82);
      }
      v304 = v82[2];
      v303 = v82[3];
      if (v304 >= v303 >> 1) {
        int64_t v82 = (void *)sub_24EF134C4(v303 > 1, v304 + 1, 1, v82);
      }
      v82[2] = v304 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, void, uint64_t))(v301 + 32))((unint64_t)v82+ ((*(unsigned __int8 *)(v301 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v301 + 80))+ *(void *)(v301 + 72) * v304, v414, v302);
LABEL_97:
      char *v81 = v82;
      return result;
  }
}

uint64_t sub_24EF09E94(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 114) = a6;
  *(void *)(v6 + 136) = a5;
  *(unsigned char *)(v6 + 113) = a4;
  char v11 = a4 & 1;
  *(void *)(v6 + 120) = a1;
  *(void *)(v6 + 128) = a3;
  *(void *)(v6 + 144) = type metadata accessor for FilterAction();
  *(void *)(v6 + 152) = swift_task_alloc();
  *(void *)(v6 + 160) = sub_24EF87770();
  *(void *)(v6 + 168) = sub_24EF87760();
  uint64_t v12 = *(int **)(a2 + 64);
  *(void *)(v6 + 88) = a3;
  *(unsigned char *)(v6 + 96) = v11;
  *(void *)(v6 + 104) = a5;
  *(unsigned char *)(v6 + 112) = a6;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v12 + *v12);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 176) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_24EF0A008;
  return v15(v6 + 16, v6 + 88);
}

uint64_t sub_24EF0A008()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24EF87750();
    uint64_t v5 = v4;
    uint64_t v6 = sub_24EF0A42C;
    uint64_t v7 = v3;
    uint64_t v8 = v5;
  }
  else
  {
    uint64_t v9 = sub_24EF87750();
    uint64_t v8 = v10;
    *(void *)(v2 + 192) = v9;
    *(void *)(v2 + 200) = v10;
    uint64_t v6 = sub_24EF0A158;
    uint64_t v7 = v9;
  }
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_24EF0A158()
{
  uint64_t v1 = *(void *)(v0 + 152);
  char v2 = *(unsigned char *)(v0 + 114);
  uint64_t v3 = *(void *)(v0 + 136);
  char v4 = *(unsigned char *)(v0 + 113) & 1;
  uint64_t v5 = *(void *)(v0 + 80);
  long long v6 = *(_OWORD *)(v0 + 16);
  long long v7 = *(_OWORD *)(v0 + 32);
  long long v8 = *(_OWORD *)(v0 + 48);
  long long v9 = *(_OWORD *)(v0 + 64);
  *(void *)uint64_t v1 = *(void *)(v0 + 128);
  *(unsigned char *)(v1 + 8) = v4;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 24) = v2;
  *(_OWORD *)(v1 + 32) = v6;
  *(_OWORD *)(v1 + 48) = v7;
  *(_OWORD *)(v1 + 64) = v8;
  *(_OWORD *)(v1 + 80) = v9;
  *(void *)(v1 + 96) = v5;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D50);
  *uint64_t v10 = v0;
  v10[1] = sub_24EF0A264;
  uint64_t v12 = *(void *)(v0 + 152);
  return MEMORY[0x270F252C8](v12, v11);
}

uint64_t sub_24EF0A264()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 152);
  swift_task_dealloc();
  sub_24EF22AA0(v2, (uint64_t (*)(void))type metadata accessor for FilterAction);
  uint64_t v3 = *(void *)(v1 + 200);
  uint64_t v4 = *(void *)(v1 + 192);
  return MEMORY[0x270FA2498](sub_24EF0A3BC, v4, v3);
}

uint64_t sub_24EF0A3BC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EF0A42C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EF0A49C(uint64_t a1, uint64_t a2)
{
  sub_24EF0D038(a1, (uint64_t)v16);
  if (*(void *)(a2 + 16)
    && (sub_24EF87A90(),
        FilterItem.hash(into:)(),
        uint64_t v3 = sub_24EF87AD0(),
        uint64_t v4 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v5 = v3 & ~v4,
        ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = *(void *)(a2 + 48) + 48 * v5;
      uint64_t v8 = *(void *)(v7 + 32);
      char v9 = *(unsigned char *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v13[0] = *(_OWORD *)v7;
      v13[1] = v10;
      uint64_t v14 = v8;
      char v15 = v9;
      char v11 = _s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v13, (uint64_t)v16);
      if (v11) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

BOOL sub_24EF0A58C(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  int v3 = a1;
  sub_24EF87A90();
  sub_24EF87AA0();
  uint64_t v4 = sub_24EF87AD0();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_24EF0A67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_24EF87A90();
    sub_24EF87670();
    uint64_t v6 = sub_24EF87AD0();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_24EF87A60() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_24EF87A60() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_24EF0A7B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 89) = a5;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a4;
  *(unsigned char *)(v5 + 88) = a3;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 40) = type metadata accessor for FilterAction();
  *(void *)(v5 + 48) = swift_task_alloc();
  sub_24EF87770();
  *(void *)(v5 + 56) = sub_24EF87760();
  uint64_t v7 = sub_24EF87750();
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 72) = v6;
  return MEMORY[0x270FA2498](sub_24EF0A888, v7, v6);
}

uint64_t sub_24EF0A888()
{
  uint64_t v1 = *(void *)(v0 + 48);
  char v2 = *(unsigned char *)(v0 + 89);
  uint64_t v3 = *(void *)(v0 + 32);
  char v4 = *(unsigned char *)(v0 + 88) & 1;
  *(void *)uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 8) = v4;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 24) = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D50);
  *uint64_t v5 = v0;
  v5[1] = sub_24EF0A97C;
  uint64_t v7 = *(void *)(v0 + 48);
  return MEMORY[0x270F252C8](v7, v6);
}

uint64_t sub_24EF0A97C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  swift_task_dealloc();
  sub_24EF22AA0(v2, (uint64_t (*)(void))type metadata accessor for FilterAction);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 64);
  return MEMORY[0x270FA2498](sub_24EF0AAD4, v4, v3);
}

uint64_t sub_24EF0AAD4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EF0AB40(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 96) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  *(void *)(v3 + 32) = type metadata accessor for FilterAction();
  *(void *)(v3 + 40) = swift_task_alloc();
  sub_24EF87770();
  *(void *)(v3 + 48) = sub_24EF87760();
  uint64_t v5 = sub_24EF87750();
  *(void *)(v3 + 56) = v5;
  *(void *)(v3 + 64) = v4;
  return MEMORY[0x270FA2498](sub_24EF0AC0C, v5, v4);
}

uint64_t sub_24EF0AC0C()
{
  if (*(unsigned char *)(v0 + 96) == 1)
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v1;
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D50);
    *uint64_t v1 = v0;
    v1[1] = sub_24EF0AD7C;
    uint64_t v3 = *(void *)(v0 + 40);
    return MEMORY[0x270F252C8](v3, v2);
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(void))(*(void *)(*(void *)(v0 + 24) + 16) + **(int **)(*(void *)(v0 + 24) + 16));
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_24EF0AF30;
    return v6();
  }
}

uint64_t sub_24EF0AD7C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *v0;
  swift_task_dealloc();
  sub_24EF22AA0(v2, (uint64_t (*)(void))type metadata accessor for FilterAction);
  uint64_t v6 = (uint64_t (*)(void))(*(void *)(*(void *)(v1 + 24) + 16) + **(int **)(*(void *)(v1 + 24) + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 80) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_24EF0AF30;
  return v6();
}

uint64_t sub_24EF0AF30()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v5 = sub_24EF0B0D8;
  }
  else {
    uint64_t v5 = sub_24EF0B06C;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EF0B06C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EF0B0D8()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EF0B144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v102 = a6;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D60);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v97 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int v96 = (char *)&v89 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v95 = (char *)&v89 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  char v94 = (char *)&v89 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v93 = (char *)&v89 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  char v92 = (char *)&v89 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  long long v91 = (char *)&v89 - v26;
  MEMORY[0x270FA5388](v25);
  long long v90 = (char *)&v89 - v27;
  uint64_t v28 = *(void *)(a2 + 32);
  uint64_t v29 = *(void *)a3;
  uint64_t v30 = *(void *)(a3 + 8);
  uint64_t v31 = *(void *)(a3 + 16);
  uint64_t v32 = *(unsigned __int8 *)(a3 + 24);
  sub_24EF22C1C(a4, (uint64_t)v113, &qword_269985D68);
  long long v33 = *a5;
  long long v105 = a5[1];
  long long v106 = v33;
  long long v34 = a5[2];
  long long v103 = a5[3];
  long long v104 = v34;
  uint64_t v35 = *((void *)a5 + 8);
  long long v36 = *(_OWORD *)(v6 + 144);
  long long v118 = *(_OWORD *)(v6 + 128);
  long long v119 = v36;
  long long v120 = *(_OWORD *)(v6 + 160);
  uint64_t v121 = *(void *)(v6 + 176);
  long long v37 = *(_OWORD *)(v6 + 80);
  v114[4] = *(_OWORD *)(v6 + 64);
  long long v115 = v37;
  long long v38 = *(_OWORD *)(v6 + 112);
  long long v116 = *(_OWORD *)(v6 + 96);
  long long v117 = v38;
  long long v39 = *(_OWORD *)(v6 + 16);
  v114[0] = *(_OWORD *)v6;
  v114[1] = v39;
  long long v40 = *(_OWORD *)(v6 + 48);
  v114[2] = *(_OWORD *)(v6 + 32);
  v114[3] = v40;
  uint64_t v101 = type metadata accessor for FilterSectionDescriptor();
  uint64_t v41 = a1 + *(int *)(v101 + 24);
  uint64_t v42 = *(void *)v41;
  uint64_t v43 = *(unsigned __int8 *)(v41 + 8);
  long long v107 = v106;
  long long v108 = v105;
  long long v109 = v104;
  long long v110 = v103;
  uint64_t v111 = v35;
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, long long *))v115)(v112, v43, v28, &v107);
  uint64_t v44 = v112[0];
  uint64_t v99 = v112[1];
  uint64_t v100 = v112[4];
  *(void *)&long long v104 = v112[5];
  *(void *)&long long v105 = v112[6];
  *(void *)&long long v106 = v112[3];
  *(void *)&long long v103 = v112[2];
  switch(v43)
  {
    case 1:
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0C93C);
      sub_24EF06CC8(v29);
      sub_24EF103F8((uint64_t)v114);
      uint64_t v45 = sub_24EF1B664(v42, v29, v30, v31, v32, (uint64_t)v113);
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0CE70);
      sub_24EF0CF9C(v29);
      sub_24EF21698((uint64_t)v114);
      if (*(void *)(v45 + 16))
      {
        uint64_t v97 = (char *)v45;
        uint64_t v98 = v43;
        uint64_t v43 = v99;
        *(void *)&long long v107 = v44;
        *((void *)&v107 + 1) = v99;
        *(void *)&long long v108 = v103;
        *((void *)&v108 + 1) = v106;
        *(void *)&long long v109 = v100;
        *((void *)&v109 + 1) = v104;
        *(void *)&long long v110 = v105;
        unsigned __int8 v49 = v91;
        (*(void (**)(uint64_t, long long *))&v114[0])(1, &v107);
        uint64_t v50 = v44;
        uint64_t v51 = v43;
        uint64_t v45 = (uint64_t)v97;
        LOBYTE(v43) = v98;
      }
      else
      {
        uint64_t v74 = sub_24EF86A30();
        unsigned __int8 v49 = v91;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v91, 1, 1, v74);
        uint64_t v50 = v44;
        uint64_t v51 = v99;
      }
      sub_24EF22BB8(v50, v51);
      uint64_t v76 = v101;
      uint64_t v75 = v102;
      *uint64_t v102 = 0x6E6F697461727564;
      v75[1] = 0xE800000000000000;
      uint64_t v77 = (uint64_t)v75 + *(int *)(v76 + 20);
      uint64_t v78 = (uint64_t)v49;
      goto LABEL_35;
    case 2:
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0C93C);
      sub_24EF06CC8(v29);
      sub_24EF103F8((uint64_t)v114);
      uint64_t v52 = sub_24EF1B948(v42, v29, v30, v31, v32, (uint64_t)v113);
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0CE70);
      sub_24EF0CF9C(v29);
      sub_24EF21698((uint64_t)v114);
      if (*(void *)(v52 + 16))
      {
        uint64_t v97 = (char *)v52;
        uint64_t v98 = v43;
        uint64_t v43 = v99;
        *(void *)&long long v107 = v44;
        *((void *)&v107 + 1) = v99;
        *(void *)&long long v108 = v103;
        *((void *)&v108 + 1) = v106;
        *(void *)&long long v109 = v100;
        *((void *)&v109 + 1) = v104;
        *(void *)&long long v110 = v105;
        uint64_t v53 = (uint64_t)v92;
        (*(void (**)(uint64_t, long long *))&v114[0])(2, &v107);
        uint64_t v54 = v44;
        uint64_t v55 = v43;
        uint64_t v52 = (uint64_t)v97;
        LOBYTE(v43) = v98;
      }
      else
      {
        uint64_t v79 = sub_24EF86A30();
        uint64_t v53 = (uint64_t)v92;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v92, 1, 1, v79);
        uint64_t v54 = v44;
        uint64_t v55 = v99;
      }
      sub_24EF22BB8(v54, v55);
      uint64_t v81 = v101;
      uint64_t v80 = v102;
      *uint64_t v102 = 0x6E656D7069757165;
      v80[1] = 0xE900000000000074;
      uint64_t result = sub_24EF22C1C(v53, (uint64_t)v80 + *(int *)(v81 + 20), &qword_269985D60);
      unint64_t v83 = (char *)v80 + *(int *)(v81 + 24);
      *(void *)unint64_t v83 = v52;
      goto LABEL_36;
    case 3:
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0C93C);
      sub_24EF06CC8(v29);
      sub_24EF103F8((uint64_t)v114);
      uint64_t v45 = sub_24EF1BCF0(v42, v29, v30, v31, v32, (uint64_t)v113);
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0CE70);
      sub_24EF0CF9C(v29);
      sub_24EF21698((uint64_t)v114);
      if (*(void *)(v45 + 16))
      {
        uint64_t v56 = v99;
        uint64_t v97 = (char *)v45;
        uint64_t v98 = v43;
        *(void *)&long long v107 = v44;
        *((void *)&v107 + 1) = v99;
        *(void *)&long long v108 = v103;
        *((void *)&v108 + 1) = v106;
        *(void *)&long long v109 = v100;
        *((void *)&v109 + 1) = v104;
        *(void *)&long long v110 = v105;
        uint64_t v46 = v93;
        (*(void (**)(uint64_t, long long *))&v114[0])(3, &v107);
        uint64_t v57 = v44;
        uint64_t v58 = v56;
        uint64_t v45 = (uint64_t)v97;
        LOBYTE(v43) = v98;
      }
      else
      {
        uint64_t v84 = sub_24EF86A30();
        uint64_t v46 = v93;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v93, 1, 1, v84);
        uint64_t v57 = v44;
        uint64_t v58 = v99;
      }
      sub_24EF22BB8(v57, v58);
      uint64_t v72 = 0x7974696C61646F6DLL;
      unint64_t v73 = 0xE800000000000000;
      goto LABEL_34;
    case 4:
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0C93C);
      sub_24EF06CC8(v29);
      sub_24EF103F8((uint64_t)v114);
      uint64_t v45 = sub_24EF1C168(v42, v29, v30, v31, v32, (uint64_t)v113);
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0CE70);
      sub_24EF0CF9C(v29);
      sub_24EF21698((uint64_t)v114);
      if (*(void *)(v45 + 16))
      {
        uint64_t v59 = v99;
        uint64_t v97 = (char *)v45;
        uint64_t v98 = v43;
        *(void *)&long long v107 = v44;
        *((void *)&v107 + 1) = v99;
        *(void *)&long long v108 = v103;
        *((void *)&v108 + 1) = v106;
        *(void *)&long long v109 = v100;
        *((void *)&v109 + 1) = v104;
        *(void *)&long long v110 = v105;
        uint64_t v46 = v94;
        (*(void (**)(uint64_t, long long *))&v114[0])(4, &v107);
        uint64_t v60 = v44;
        uint64_t v61 = v59;
        uint64_t v45 = (uint64_t)v97;
        LOBYTE(v43) = v98;
      }
      else
      {
        uint64_t v85 = sub_24EF86A30();
        uint64_t v46 = v94;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v94, 1, 1, v85);
        uint64_t v60 = v44;
        uint64_t v61 = v99;
      }
      sub_24EF22BB8(v60, v61);
      uint64_t v72 = 0x6E6547636973756DLL;
      unint64_t v73 = 0xEA00000000006572;
      goto LABEL_34;
    case 5:
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0C93C);
      sub_24EF06CC8(v29);
      sub_24EF103F8((uint64_t)v114);
      uint64_t v45 = sub_24EF1C510(v42, v29, v30, v31, v32, (uint64_t)v113);
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0CE70);
      sub_24EF0CF9C(v29);
      sub_24EF21698((uint64_t)v114);
      if (*(void *)(v45 + 16))
      {
        uint64_t v62 = v99;
        uint64_t v97 = (char *)v45;
        uint64_t v98 = v43;
        *(void *)&long long v107 = v44;
        *((void *)&v107 + 1) = v99;
        *(void *)&long long v108 = v103;
        *((void *)&v108 + 1) = v106;
        *(void *)&long long v109 = v100;
        *((void *)&v109 + 1) = v104;
        *(void *)&long long v110 = v105;
        uint64_t v46 = v95;
        (*(void (**)(uint64_t, long long *))&v114[0])(5, &v107);
        uint64_t v63 = v44;
        uint64_t v64 = v62;
        uint64_t v45 = (uint64_t)v97;
        LOBYTE(v43) = v98;
      }
      else
      {
        uint64_t v86 = sub_24EF86A30();
        uint64_t v46 = v95;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v95, 1, 1, v86);
        uint64_t v63 = v44;
        uint64_t v64 = v99;
      }
      sub_24EF22BB8(v63, v64);
      uint64_t v72 = 0x76654C6C6C696B73;
      unint64_t v73 = 0xEA00000000006C65;
      goto LABEL_34;
    case 6:
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0C93C);
      sub_24EF06CC8(v29);
      sub_24EF103F8((uint64_t)v114);
      uint64_t v45 = sub_24EF1C948(v42, v29, v30, v31, v32, (uint64_t)v113);
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0CE70);
      sub_24EF0CF9C(v29);
      sub_24EF21698((uint64_t)v114);
      if (*(void *)(v45 + 16))
      {
        uint64_t v65 = v99;
        uint64_t v97 = (char *)v45;
        uint64_t v98 = v43;
        *(void *)&long long v107 = v44;
        *((void *)&v107 + 1) = v99;
        *(void *)&long long v108 = v103;
        *((void *)&v108 + 1) = v106;
        *(void *)&long long v109 = v100;
        *((void *)&v109 + 1) = v104;
        *(void *)&long long v110 = v105;
        uint64_t v46 = v96;
        (*(void (**)(uint64_t, long long *))&v114[0])(6, &v107);
        uint64_t v66 = v44;
        uint64_t v67 = v65;
        uint64_t v45 = (uint64_t)v97;
        LOBYTE(v43) = v98;
      }
      else
      {
        uint64_t v87 = sub_24EF86A30();
        uint64_t v46 = v96;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v96, 1, 1, v87);
        uint64_t v66 = v44;
        uint64_t v67 = v99;
      }
      sub_24EF22BB8(v66, v67);
      uint64_t v72 = 0x656D656874;
      unint64_t v73 = 0xE500000000000000;
      goto LABEL_34;
    case 7:
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0C93C);
      sub_24EF06CC8(v29);
      sub_24EF103F8((uint64_t)v114);
      uint64_t v45 = sub_24EF1CD1C(v42, v29, v30, v31, v32, (uint64_t)v113);
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0CE70);
      sub_24EF0CF9C(v29);
      sub_24EF21698((uint64_t)v114);
      if (*(void *)(v45 + 16))
      {
        uint64_t v68 = v99;
        int v96 = (char *)v45;
        *(void *)&long long v107 = v44;
        *((void *)&v107 + 1) = v99;
        *(void *)&long long v108 = v103;
        *((void *)&v108 + 1) = v106;
        *(void *)&long long v109 = v100;
        *((void *)&v109 + 1) = v104;
        uint64_t v98 = v43;
        *(void *)&long long v110 = v105;
        uint64_t v46 = v97;
        (*(void (**)(uint64_t, long long *))&v114[0])(7, &v107);
        uint64_t v69 = v44;
        uint64_t v45 = (uint64_t)v96;
        uint64_t v70 = v68;
        LOBYTE(v43) = v98;
      }
      else
      {
        uint64_t v88 = sub_24EF86A30();
        uint64_t v46 = v97;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v97, 1, 1, v88);
        uint64_t v69 = v44;
        uint64_t v70 = v99;
      }
      sub_24EF22BB8(v69, v70);
      uint64_t v72 = 0x72656E69617274;
      unint64_t v73 = 0xE700000000000000;
      goto LABEL_34;
    default:
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0C93C);
      sub_24EF06CC8(v29);
      sub_24EF103F8((uint64_t)v114);
      uint64_t v45 = sub_24EF1B2E0(v42, v29, v30, v31, v32, (uint64_t)v113);
      sub_24EF22B68(v113, (void (*)(void, void, void, void, void, void, void, void, void))sub_24EF0CE70);
      sub_24EF0CF9C(v29);
      sub_24EF21698((uint64_t)v114);
      if (*(void *)(v45 + 16))
      {
        uint64_t v97 = (char *)v45;
        uint64_t v98 = v43;
        uint64_t v43 = v99;
        *(void *)&long long v107 = v44;
        *((void *)&v107 + 1) = v99;
        *(void *)&long long v108 = v103;
        *((void *)&v108 + 1) = v106;
        *(void *)&long long v109 = v100;
        *((void *)&v109 + 1) = v104;
        *(void *)&long long v110 = v105;
        uint64_t v46 = v90;
        (*(void (**)(void, long long *))&v114[0])(0, &v107);
        uint64_t v47 = v44;
        uint64_t v48 = v43;
        uint64_t v45 = (uint64_t)v97;
        LOBYTE(v43) = v98;
      }
      else
      {
        uint64_t v71 = sub_24EF86A30();
        uint64_t v46 = v90;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v90, 1, 1, v71);
        uint64_t v47 = v44;
        uint64_t v48 = v99;
      }
      sub_24EF22BB8(v47, v48);
      uint64_t v72 = 0x75636F4679646F62;
      unint64_t v73 = 0xE900000000000073;
LABEL_34:
      uint64_t v76 = v101;
      uint64_t v75 = v102;
      *uint64_t v102 = v72;
      v75[1] = v73;
      uint64_t v77 = (uint64_t)v75 + *(int *)(v76 + 20);
      uint64_t v78 = (uint64_t)v46;
LABEL_35:
      uint64_t result = sub_24EF22C1C(v78, v77, &qword_269985D60);
      unint64_t v83 = (char *)v75 + *(int *)(v76 + 24);
      *(void *)unint64_t v83 = v45;
LABEL_36:
      v83[8] = v43;
      return result;
  }
}

uint64_t sub_24EF0C120(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v44 = MEMORY[0x263F8EE78];
    sub_24EF11FD4(0, v4, 0);
    uint64_t v5 = v44;
    uint64_t v7 = (long long *)(a3 + 48);
    while (1)
    {
      uint64_t v8 = *((void *)v7 - 1);
      uint64_t v10 = *((void *)v7 + 2);
      uint64_t v9 = *((void *)v7 + 3);
      uint64_t v11 = *((void *)v7 + 6);
      v30[0] = *((void *)v7 - 2);
      v30[1] = v8;
      long long v31 = *v7;
      uint64_t v32 = v10;
      uint64_t v33 = v9;
      long long v34 = v7[2];
      uint64_t v35 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v36, v30);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v36;
      long long v13 = v37;
      uint64_t v14 = v38;
      uint64_t v15 = v39;
      long long v16 = v40;
      uint64_t v18 = v41;
      uint64_t v17 = v42;
      char v19 = v43;
      unint64_t v21 = *(void *)(v5 + 16);
      unint64_t v20 = *(void *)(v5 + 24);
      uint64_t v44 = v5;
      if (v21 >= v20 >> 1)
      {
        long long v27 = v40;
        long long v28 = v37;
        uint64_t v23 = v36;
        uint64_t v26 = v42;
        char v25 = v43;
        sub_24EF11FD4((void *)(v20 > 1), v21 + 1, 1);
        char v19 = v25;
        uint64_t v17 = v26;
        uint64_t v12 = v23;
        long long v16 = v27;
        long long v13 = v28;
        uint64_t v5 = v44;
      }
      *(void *)(v5 + 16) = v21 + 1;
      uint64_t v22 = v5 + 80 * v21;
      *(void *)(v22 + 32) = v12;
      *(_OWORD *)(v22 + 40) = v13;
      *(void *)(v22 + 56) = v14;
      *(void *)(v22 + 64) = v15;
      *(_OWORD *)(v22 + 72) = v16;
      *(void *)(v22 + 88) = v18;
      *(void *)(v22 + 96) = v17;
      *(unsigned char *)(v22 + 104) = v19;
      uint64_t v7 = (long long *)((char *)v7 + 72);
      --v4;
      uint64_t v3 = 0;
      if (!v4) {
        return v5;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_24EF0C31C(uint64_t a1, uint64_t a2)
{
  v2[2] = sub_24EF87770();
  v2[3] = sub_24EF87760();
  uint64_t v6 = (uint64_t (*)(void))(*(void *)(a2 + 144) + **(int **)(a2 + 144));
  int64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *int64_t v4 = v2;
  v4[1] = sub_24EF0C404;
  return v6();
}

uint64_t sub_24EF0C404()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_24EF87750();
  if (v0) {
    int64_t v4 = sub_24EF0C5C4;
  }
  else {
    int64_t v4 = sub_24EF0C560;
  }
  return MEMORY[0x270FA2498](v4, v3, v2);
}

uint64_t sub_24EF0C560()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EF0C5C4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EF0C628(uint64_t a1, uint64_t a2)
{
  return a2;
}

double sub_24EF0C684(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 272) = 2;
  return result;
}

uint64_t sub_24EF0C6B8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 272) <= 1u) {
    return *(unsigned __int8 *)(a1 + 272);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_24EF0C6D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  if (a35 == 1)
  {
    sub_24EF06CC8(result);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24EF0C93C(a14);
    sub_24EF0C9E8(a23);
    swift_bridgeObjectRetain();
  }
  else
  {
    if (a35) {
      return result;
    }
    sub_24EF0C93C(result);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24EF0C9E8(a24);
  }
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24EF0C93C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24EF0C9E8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24EF0CA6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 296);
  uint64_t v26 = *(void *)(a1 + 288);
  uint64_t v27 = *(void *)(a1 + 280);
  uint64_t v3 = *(void *)(a1 + 304);
  uint64_t v4 = *(void *)(a1 + 312);
  uint64_t v5 = *(void *)(a1 + 320);
  uint64_t v6 = *(void *)(a1 + 328);
  uint64_t v7 = *(void *)(a1 + 336);
  long long v24 = *(_OWORD *)(a1 + 360);
  long long v25 = *(_OWORD *)(a1 + 344);
  long long v22 = *(_OWORD *)(a1 + 392);
  long long v23 = *(_OWORD *)(a1 + 376);
  long long v20 = *(_OWORD *)(a1 + 424);
  long long v21 = *(_OWORD *)(a1 + 408);
  long long v18 = *(_OWORD *)(a1 + 456);
  long long v19 = *(_OWORD *)(a1 + 440);
  long long v17 = *(_OWORD *)(a1 + 472);
  long long v15 = *(_OWORD *)(a1 + 504);
  long long v16 = *(_OWORD *)(a1 + 488);
  long long v14 = *(_OWORD *)(a1 + 520);
  uint64_t v8 = *(void *)(a1 + 536);
  uint64_t v9 = *(void *)(a1 + 544);
  char v10 = *(unsigned char *)(a1 + 552);
  long long v12 = *(_OWORD *)(a1 + 224);
  long long v13 = *(_OWORD *)(a1 + 240);
  sub_24EF0CC0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    *(void *)(a1 + 256),
    *(void *)(a1 + 264),
    *(unsigned char *)(a1 + 272));
  sub_24EF0CC0C(v27, v26, v2, v3, v4, v5, v6, v7, v25, *((uint64_t *)&v25 + 1), v24, *((uint64_t *)&v24 + 1), v23, *((uint64_t *)&v23 + 1), v22, *((uint64_t *)&v22 + 1), v21, *((uint64_t *)&v21 + 1), v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v8,
    v9,
    v10);
  return a1;
}

uint64_t sub_24EF0CC0C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  if (a35 == 1)
  {
    sub_24EF0CF9C(result);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24EF0CE70(a14);
    sub_24EF0CF1C(a23);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (a35) {
      return result;
    }
    sub_24EF0CE70(result);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24EF0CF1C(a24);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF0CE70(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EF0CF1C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EF0CF9C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_24EF0CFDC(uint64_t a1)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 264) = 0;
  *(unsigned char *)(a1 + 272) = 2;
  return result;
}

uint64_t sub_24EF0D038(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_24EF0D094()
{
  unint64_t result = qword_269985C30;
  if (!qword_269985C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269985C30);
  }
  return result;
}

uint64_t sub_24EF0D0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v25 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_21;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v25) {
      goto LABEL_29;
    }
    unint64_t v12 = *(void *)(v24 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v25) {
        goto LABEL_29;
      }
      unint64_t v12 = *(void *)(v24 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v25) {
          goto LABEL_29;
        }
        unint64_t v12 = *(void *)(v24 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v25) {
            goto LABEL_29;
          }
          unint64_t v12 = *(void *)(v24 + 8 * v8);
          if (!v12)
          {
            int64_t v13 = v11 + 4;
            if (v13 >= v25)
            {
LABEL_29:
              swift_bridgeObjectRelease();
              uint64_t result = swift_release();
              *(void *)(a4 + 64) = 0;
              *(_OWORD *)(a4 + 32) = 0u;
              *(_OWORD *)(a4 + 48) = 0u;
              *(_OWORD *)a4 = 0u;
              *(_OWORD *)(a4 + 16) = 0u;
              return result;
            }
            unint64_t v12 = *(void *)(v24 + 8 * v13);
            int64_t v8 = v13;
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_21:
    long long v14 = (uint64_t *)(*(void *)(a1 + 48) + 72 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = v14[3];
    uint64_t v19 = v14[4];
    uint64_t v18 = v14[5];
    uint64_t v20 = v14[7];
    uint64_t v26 = v14[6];
    uint64_t v27 = v14[2];
    uint64_t v21 = v14[8];
    if (v19 == a2 && v18 == a3)
    {
      uint64_t v19 = a2;
      uint64_t v18 = a3;
LABEL_28:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      *(void *)a4 = v15;
      *(void *)(a4 + 8) = v16;
      *(void *)(a4 + 16) = v27;
      *(void *)(a4 + 24) = v17;
      *(void *)(a4 + 32) = v19;
      *(void *)(a4 + 40) = v18;
      *(void *)(a4 + 48) = v26;
      *(void *)(a4 + 56) = v20;
      *(void *)(a4 + 64) = v21;
      return result;
    }
    uint64_t result = sub_24EF87A60();
    if (result) {
      goto LABEL_28;
    }
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v25) {
      goto LABEL_29;
    }
    unint64_t v12 = *(void *)(v24 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

double sub_24EF0D350@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_24EF0D038(a2, (uint64_t)v31);
  uint64_t v29 = v31[1];
  uint64_t v30 = v31[0];
  uint64_t v27 = v31[3];
  uint64_t v28 = v31[2];
  uint64_t v26 = v31[4];
  unsigned __int8 v25 = v32;
  uint64_t v23 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v24 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v42 = a1;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (2)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v8 << 6);
    }
    else
    {
      int64_t v11 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_46;
      }
      if (v11 >= v24) {
        goto LABEL_44;
      }
      unint64_t v12 = *(void *)(v23 + 8 * v11);
      ++v8;
      if (!v12)
      {
        int64_t v8 = v11 + 1;
        if (v11 + 1 >= v24) {
          goto LABEL_44;
        }
        unint64_t v12 = *(void *)(v23 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 2;
          if (v11 + 2 >= v24) {
            goto LABEL_44;
          }
          unint64_t v12 = *(void *)(v23 + 8 * v8);
          if (!v12)
          {
            int64_t v8 = v11 + 3;
            if (v11 + 3 >= v24) {
              goto LABEL_44;
            }
            unint64_t v12 = *(void *)(v23 + 8 * v8);
            if (!v12)
            {
              int64_t v13 = v11 + 4;
              if (v13 >= v24)
              {
LABEL_44:
                swift_release();
                sub_24EF13808(a2, (void (*)(void, void, void, void, void, void))sub_24EEF7780);
                double result = 0.0;
                *(_OWORD *)a3 = 0u;
                *(_OWORD *)(a3 + 16) = 0u;
                *(void *)(a3 + 32) = 0;
                *(unsigned char *)(a3 + 40) = -1;
                return result;
              }
              unint64_t v12 = *(void *)(v23 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  int64_t v8 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    break;
                  }
                  if (v8 >= v24) {
                    goto LABEL_44;
                  }
                  unint64_t v12 = *(void *)(v23 + 8 * v8);
                  ++v13;
                  if (v12) {
                    goto LABEL_24;
                  }
                }
LABEL_46:
                __break(1u);
                JUMPOUT(0x24EF0D7C8);
              }
              int64_t v8 = v13;
            }
          }
        }
      }
LABEL_24:
      unint64_t v7 = (v12 - 1) & v12;
      unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    }
    uint64_t v14 = *(void *)(v42 + 48) + 48 * v10;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    uint64_t v18 = *(void *)(v14 + 24);
    uint64_t v19 = *(void *)(v14 + 32);
    unsigned __int8 v20 = *(unsigned char *)(v14 + 40);
    switch(v20)
    {
      case 1u:
        sub_24EF0D038(a2, (uint64_t)v34);
        if (v34[40] != 1) {
          goto LABEL_5;
        }
        goto LABEL_42;
      case 2u:
        sub_24EF0D038(a2, (uint64_t)v35);
        if (v35[40] == 2) {
          goto LABEL_42;
        }
        goto LABEL_5;
      case 3u:
        sub_24EF0D038(a2, (uint64_t)v36);
        if (v36[40] == 3) {
          goto LABEL_42;
        }
        goto LABEL_5;
      case 4u:
        sub_24EF0D038(a2, (uint64_t)v37);
        if (v37[40] == 4) {
          goto LABEL_42;
        }
        goto LABEL_5;
      case 5u:
        sub_24EF0D038(a2, (uint64_t)v38);
        if (v38[40] == 5) {
          goto LABEL_42;
        }
        goto LABEL_5;
      case 6u:
        sub_24EF0D038(a2, (uint64_t)v39);
        if (v39[40] == 6) {
          goto LABEL_42;
        }
        goto LABEL_5;
      case 7u:
        sub_24EF0D038(a2, (uint64_t)v40);
        if (v40[40] == 7) {
          goto LABEL_42;
        }
        goto LABEL_5;
      case 8u:
        sub_24EF0D038(a2, (uint64_t)v41);
        if (v41[40] == 8) {
          goto LABEL_43;
        }
        goto LABEL_6;
      default:
        sub_24EF0D038(a2, (uint64_t)v33);
        if (v33[40])
        {
LABEL_5:
          sub_24EEF7798(v15, v16, v17, v18, v19, v20);
          swift_bridgeObjectRetain();
LABEL_6:
          sub_24EF13808(a2, (void (*)(void, void, void, void, void, void))sub_24EEF7798);
          sub_24EEF7780(v15, v16, v17, v18, v19, v20);
          sub_24EEF7780(v30, v29, v28, v27, v26, v25);
          sub_24EEF7780(v15, v16, v17, v18, v19, v20);
          continue;
        }
LABEL_42:
        sub_24EEF7798(v15, v16, v17, v18, v19, v20);
        swift_bridgeObjectRetain();
LABEL_43:
        sub_24EF13808(a2, (void (*)(void, void, void, void, void, void))sub_24EEF7798);
        sub_24EEF7780(v15, v16, v17, v18, v19, v20);
        sub_24EEF7780(v30, v29, v28, v27, v26, v25);
        swift_release();
        sub_24EF13808(a2, (void (*)(void, void, void, void, void, void))sub_24EEF7780);
        *(void *)a3 = v15;
        *(void *)(a3 + 8) = v16;
        *(void *)(a3 + 16) = v17;
        *(void *)(a3 + 24) = v18;
        *(void *)(a3 + 32) = v19;
        *(unsigned char *)(a3 + 40) = v20;
        return result;
    }
  }
}

uint64_t sub_24EF0D7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v25 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_21;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v25) {
      goto LABEL_29;
    }
    unint64_t v12 = *(void *)(v24 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v25) {
        goto LABEL_29;
      }
      unint64_t v12 = *(void *)(v24 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v25) {
          goto LABEL_29;
        }
        unint64_t v12 = *(void *)(v24 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v25) {
            goto LABEL_29;
          }
          unint64_t v12 = *(void *)(v24 + 8 * v8);
          if (!v12)
          {
            int64_t v13 = v11 + 4;
            if (v13 >= v25)
            {
LABEL_29:
              swift_bridgeObjectRelease();
              uint64_t result = swift_release();
              *(void *)(a4 + 48) = 0;
              *(_OWORD *)(a4 + 16) = 0u;
              *(_OWORD *)(a4 + 32) = 0u;
              *(_OWORD *)a4 = 0u;
              return result;
            }
            unint64_t v12 = *(void *)(v24 + 8 * v13);
            int64_t v8 = v13;
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_21:
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 56 * v10);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = v14[2];
    uint64_t v18 = v14[3];
    uint64_t v19 = v14[4];
    uint64_t v20 = v14[5];
    uint64_t v21 = v14[6];
    if (v18 == a2 && v19 == a3)
    {
      uint64_t v18 = a2;
      uint64_t v19 = a3;
LABEL_28:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      *(void *)a4 = v16;
      *(void *)(a4 + 8) = v15;
      *(void *)(a4 + 16) = v17;
      *(void *)(a4 + 24) = v18;
      *(void *)(a4 + 32) = v19;
      *(void *)(a4 + 40) = v20;
      *(void *)(a4 + 48) = v21;
      return result;
    }
    uint64_t result = sub_24EF87A60();
    if (result) {
      goto LABEL_28;
    }
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v25) {
      goto LABEL_29;
    }
    unint64_t v12 = *(void *)(v24 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_24EF0DA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v25 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_21;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v25) {
      goto LABEL_29;
    }
    unint64_t v12 = *(void *)(v24 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v25) {
        goto LABEL_29;
      }
      unint64_t v12 = *(void *)(v24 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v25) {
          goto LABEL_29;
        }
        unint64_t v12 = *(void *)(v24 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v25) {
            goto LABEL_29;
          }
          unint64_t v12 = *(void *)(v24 + 8 * v8);
          if (!v12)
          {
            int64_t v13 = v11 + 4;
            if (v13 >= v25)
            {
LABEL_29:
              swift_bridgeObjectRelease();
              uint64_t result = swift_release();
              *(void *)(a4 + 64) = 0;
              *(_OWORD *)(a4 + 32) = 0u;
              *(_OWORD *)(a4 + 48) = 0u;
              *(_OWORD *)a4 = 0u;
              *(_OWORD *)(a4 + 16) = 0u;
              return result;
            }
            unint64_t v12 = *(void *)(v24 + 8 * v13);
            int64_t v8 = v13;
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_21:
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 72 * v10);
    uint64_t v15 = *v14;
    uint64_t v17 = v14[2];
    uint64_t v16 = v14[3];
    uint64_t v19 = v14[4];
    uint64_t v18 = v14[5];
    uint64_t v20 = v14[6];
    uint64_t v26 = v14[7];
    uint64_t v27 = v14[1];
    uint64_t v21 = v14[8];
    if (v16 == a2 && v19 == a3)
    {
      uint64_t v16 = a2;
      uint64_t v19 = a3;
LABEL_28:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      *(void *)a4 = v15;
      *(void *)(a4 + 8) = v27;
      *(void *)(a4 + 16) = v17;
      *(void *)(a4 + 24) = v16;
      *(void *)(a4 + 32) = v19;
      *(void *)(a4 + 40) = v18;
      *(void *)(a4 + 48) = v20;
      *(void *)(a4 + 56) = v26;
      *(void *)(a4 + 64) = v21;
      return result;
    }
    uint64_t result = sub_24EF87A60();
    if (result) {
      goto LABEL_28;
    }
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v25) {
      goto LABEL_29;
    }
    unint64_t v12 = *(void *)(v24 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_24EF0DC8C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, long long *a5@<X4>, void *a6@<X8>)
{
  v270 = a6;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D60);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  v260 = (char *)&v249 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v252 = (char *)&v249 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v254 = (char *)&v249 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v259 = (char *)&v249 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v258 = (char *)&v249 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v257 = (char *)&v249 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v256 = (char *)&v249 - v26;
  MEMORY[0x270FA5388](v25);
  v255 = (char *)&v249 - v27;
  *(void *)&long long v276 = *a2;
  uint64_t v28 = a2[1];
  uint64_t v29 = a2[2];
  uint64_t v30 = a2[4];
  uint64_t v273 = a2[3];
  uint64_t v274 = v28;
  uint64_t v32 = a2[5];
  uint64_t v31 = a2[6];
  uint64_t v33 = a2[7];
  uint64_t v34 = a2[8];
  uint64_t v253 = v33;
  uint64_t v35 = *a3;
  uint64_t v263 = a3[2];
  uint64_t v264 = *a4;
  uint64_t v265 = v35;
  uint64_t v36 = a4[1];
  uint64_t v37 = a4[2];
  uint64_t v275 = a4[3];
  uint64_t v38 = a4[7];
  uint64_t v39 = a4[8];
  uint64_t v250 = v38;
  uint64_t v251 = v36;
  uint64_t v40 = *((void *)a5 + 8);
  long long v41 = *(_OWORD *)(v6 + 144);
  long long v292 = *(_OWORD *)(v6 + 128);
  long long v293 = v41;
  long long v294 = *(_OWORD *)(v6 + 160);
  uint64_t v295 = *(void *)(v6 + 176);
  long long v42 = *(_OWORD *)(v6 + 80);
  v288[4] = *(_OWORD *)(v6 + 64);
  long long v289 = v42;
  long long v43 = *(_OWORD *)(v6 + 112);
  long long v290 = *(_OWORD *)(v6 + 96);
  long long v291 = v43;
  long long v44 = *(_OWORD *)(v6 + 16);
  v288[0] = *(_OWORD *)v6;
  v288[1] = v44;
  long long v45 = *(_OWORD *)(v6 + 48);
  v288[2] = *(_OWORD *)(v6 + 32);
  v288[3] = v45;
  uint64_t v261 = *((void *)&v288[0] + 1);
  v262 = *(void (**)(uint64_t, long long *))&v288[0];
  long long v46 = a5[1];
  long long v277 = *a5;
  long long v278 = v46;
  long long v47 = a5[3];
  long long v279 = a5[2];
  long long v280 = v47;
  uint64_t v281 = v40;
  ((void (*)(long long *__return_ptr, uint64_t, uint64_t, long long *))v289)(&v282, a1, v30, &v277);
  long long v268 = v282;
  uint64_t v271 = v284;
  uint64_t v269 = v285;
  uint64_t v48 = v287;
  uint64_t v266 = v286;
  uint64_t v267 = v283;
  switch((char)a1)
  {
    case 1:
      uint64_t v77 = v287;
      swift_bridgeObjectRetain_n();
      uint64_t v78 = sub_24EF11EA0(v29);
      swift_bridgeObjectRelease();
      *(void *)&long long v277 = v78;
      sub_24EF13A50((uint64_t *)&v277, (uint64_t (*)(uint64_t))sub_24EF19C70, sub_24EF16794);
      swift_bridgeObjectRelease();
      uint64_t v79 = v277;
      uint64_t v80 = v263;
      uint64_t v81 = v264;
      uint64_t v272 = v77;
      if (v265) {
        swift_bridgeObjectRetain();
      }
      else {
        uint64_t v80 = 0;
      }
      uint64_t v171 = v269;
      uint64_t v66 = v270;
      uint64_t v172 = v271;
      uint64_t v173 = v267;
      if (v81)
      {
        uint64_t v174 = v251;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v174 = 0;
      }
      sub_24EF103F8((uint64_t)v288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v177 = sub_24EF1DBE4(v79, v80, v174);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EF21698((uint64_t)v288);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (*(void *)(v177 + 16))
      {
        long long v178 = v268;
        long long v277 = v268;
        *(void *)&long long v278 = v173;
        *((void *)&v278 + 1) = v172;
        *(void *)&long long v279 = v171;
        *(void *)&long long v276 = v177;
        *((void *)&v279 + 1) = v266;
        *(void *)&long long v280 = v272;
        uint64_t v179 = (uint64_t)v256;
        v262(1, &v277);
        uint64_t v181 = *((void *)&v178 + 1);
        uint64_t v180 = v178;
        uint64_t v177 = v276;
      }
      else
      {
        uint64_t v182 = sub_24EF86A30();
        uint64_t v179 = (uint64_t)v256;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v182 - 8) + 56))(v256, 1, 1, v182);
        uint64_t v181 = *((void *)&v268 + 1);
        uint64_t v180 = v268;
      }
      sub_24EF22BB8(v180, v181);
      *uint64_t v66 = 0x6E6F697461727564;
      v66[1] = 0xE800000000000000;
      uint64_t v132 = type metadata accessor for FilterSectionDescriptor();
      sub_24EF22C1C(v179, (uint64_t)v66 + *(int *)(v132 + 20), &qword_269985D60);
      uint64_t v133 = (char *)v66 + *(int *)(v132 + 24);
      *(void *)uint64_t v133 = v177;
      char v134 = 1;
      goto LABEL_130;
    case 2:
      uint64_t v60 = v287;
      uint64_t v61 = v273;
      swift_bridgeObjectRetain_n();
      uint64_t v62 = sub_24EF11DA8(v61, &qword_269985E38);
      swift_bridgeObjectRelease();
      *(void *)&long long v277 = v62;
      sub_24EF13AD4((uint64_t *)&v277, (uint64_t (*)(uint64_t))sub_24EF19C38, (uint64_t)&type metadata for Equipment, (uint64_t (*)(void *, uint64_t))sub_24EF16088);
      swift_bridgeObjectRelease();
      uint64_t v63 = v277;
      uint64_t v64 = v263;
      uint64_t v65 = v264;
      uint64_t v272 = v60;
      if (v265)
      {
        swift_bridgeObjectRetain();
        uint64_t v66 = v270;
        uint64_t v67 = v271;
        if (v65)
        {
LABEL_8:
          swift_bridgeObjectRetain();
          goto LABEL_62;
        }
      }
      else
      {
        uint64_t v64 = 0;
        uint64_t v66 = v270;
        uint64_t v67 = v271;
        if (v264) {
          goto LABEL_8;
        }
      }
      uint64_t v37 = 0;
LABEL_62:
      sub_24EF103F8((uint64_t)v288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v135 = sub_24EF1DEA8(v63, v64, v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EF21698((uint64_t)v288);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (*(void *)(v135 + 16))
      {
        long long v136 = v268;
        long long v277 = v268;
        *(void *)&long long v278 = v267;
        *((void *)&v278 + 1) = v67;
        *(void *)&long long v276 = v135;
        *(void *)&long long v279 = v269;
        *((void *)&v279 + 1) = v266;
        *(void *)&long long v280 = v272;
        uint64_t v137 = (uint64_t)v257;
        v262(2, &v277);
        uint64_t v139 = *((void *)&v136 + 1);
        uint64_t v138 = v136;
        uint64_t v135 = v276;
      }
      else
      {
        uint64_t v140 = sub_24EF86A30();
        uint64_t v137 = (uint64_t)v257;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 56))(v257, 1, 1, v140);
        uint64_t v139 = *((void *)&v268 + 1);
        uint64_t v138 = v268;
      }
      sub_24EF22BB8(v138, v139);
      *uint64_t v66 = 0x6E656D7069757165;
      v66[1] = 0xE900000000000074;
      uint64_t v132 = type metadata accessor for FilterSectionDescriptor();
      sub_24EF22C1C(v137, (uint64_t)v66 + *(int *)(v132 + 20), &qword_269985D60);
      uint64_t v133 = (char *)v66 + *(int *)(v132 + 24);
      *(void *)uint64_t v133 = v135;
      char v134 = 2;
      goto LABEL_130;
    case 3:
      swift_bridgeObjectRetain_n();
      uint64_t v68 = sub_24EF11BB0(v32, &qword_269985E40, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_24EF193F4);
      swift_bridgeObjectRelease();
      *(void *)&long long v277 = v68;
      sub_24EF13A50((uint64_t *)&v277, (uint64_t (*)(uint64_t))sub_24EF19C24, sub_24EF15938);
      uint64_t v272 = v48;
      swift_bridgeObjectRelease();
      uint64_t v69 = v277;
      if (v265)
      {
        uint64_t v70 = v263;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v70 = 0;
      }
      uint64_t v141 = v266;
      uint64_t v142 = v267;
      uint64_t v143 = v269;
      uint64_t v66 = v270;
      uint64_t v144 = v271;
      uint64_t v145 = v275;
      if (v264) {
        swift_bridgeObjectRetain();
      }
      else {
        uint64_t v145 = 0;
      }
      sub_24EF103F8((uint64_t)v288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v146 = sub_24EF1E230(v69, v70, v145);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EF21698((uint64_t)v288);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (*(void *)(v146 + 16))
      {
        *(void *)&long long v276 = v146;
        long long v147 = v268;
        long long v277 = v268;
        *(void *)&long long v278 = v142;
        *((void *)&v278 + 1) = v144;
        *(void *)&long long v279 = v143;
        *((void *)&v279 + 1) = v141;
        *(void *)&long long v280 = v272;
        uint64_t v148 = (uint64_t)v258;
        v262(3, &v277);
        uint64_t v150 = *((void *)&v147 + 1);
        uint64_t v149 = v147;
        uint64_t v146 = v276;
        uint64_t v66 = v270;
      }
      else
      {
        uint64_t v151 = sub_24EF86A30();
        uint64_t v148 = (uint64_t)v258;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 56))(v258, 1, 1, v151);
        uint64_t v150 = *((void *)&v268 + 1);
        uint64_t v149 = v268;
      }
      sub_24EF22BB8(v149, v150);
      *uint64_t v66 = 0x7974696C61646F6DLL;
      v66[1] = 0xE800000000000000;
      uint64_t v132 = type metadata accessor for FilterSectionDescriptor();
      sub_24EF22C1C(v148, (uint64_t)v66 + *(int *)(v132 + 20), &qword_269985D60);
      uint64_t v133 = (char *)v66 + *(int *)(v132 + 24);
      *(void *)uint64_t v133 = v146;
      char v134 = 3;
      goto LABEL_130;
    case 4:
      uint64_t v55 = v287;
      swift_bridgeObjectRetain_n();
      uint64_t v56 = sub_24EF11DA8(v31, &qword_269985E48);
      swift_bridgeObjectRelease();
      *(void *)&long long v277 = v56;
      sub_24EF13AD4((uint64_t *)&v277, (uint64_t (*)(uint64_t))sub_24EF19BEC, (uint64_t)&type metadata for MusicGenre, (uint64_t (*)(void *, uint64_t))sub_24EF16088);
      swift_bridgeObjectRelease();
      uint64_t v57 = v277;
      uint64_t v58 = v263;
      uint64_t v59 = v264;
      uint64_t v272 = v55;
      if (v265) {
        swift_bridgeObjectRetain();
      }
      else {
        uint64_t v58 = 0;
      }
      uint64_t v122 = v269;
      uint64_t v66 = v270;
      uint64_t v123 = v266;
      uint64_t v124 = v267;
      uint64_t v125 = v271;
      if (v59)
      {
        uint64_t v59 = v275;
        swift_bridgeObjectRetain();
      }
      sub_24EF103F8((uint64_t)v288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v126 = sub_24EF1E684(v57, v58, v59);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EF21698((uint64_t)v288);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (*(void *)(v126 + 16))
      {
        *(void *)&long long v276 = v126;
        long long v127 = v268;
        long long v277 = v268;
        *(void *)&long long v278 = v124;
        *((void *)&v278 + 1) = v125;
        *(void *)&long long v279 = v122;
        *((void *)&v279 + 1) = v123;
        *(void *)&long long v280 = v272;
        uint64_t v128 = (uint64_t)v259;
        v262(4, &v277);
        uint64_t v130 = *((void *)&v127 + 1);
        uint64_t v129 = v127;
        uint64_t v126 = v276;
        uint64_t v66 = v270;
      }
      else
      {
        uint64_t v131 = sub_24EF86A30();
        uint64_t v128 = (uint64_t)v259;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v131 - 8) + 56))(v259, 1, 1, v131);
        uint64_t v130 = *((void *)&v268 + 1);
        uint64_t v129 = v268;
      }
      sub_24EF22BB8(v129, v130);
      *uint64_t v66 = 0x6E6547636973756DLL;
      v66[1] = 0xEA00000000006572;
      uint64_t v132 = type metadata accessor for FilterSectionDescriptor();
      sub_24EF22C1C(v128, (uint64_t)v66 + *(int *)(v132 + 20), &qword_269985D60);
      uint64_t v133 = (char *)v66 + *(int *)(v132 + 24);
      *(void *)uint64_t v133 = v126;
      char v134 = 4;
      goto LABEL_130;
    case 5:
      uint64_t v82 = *((void *)&v268 + 1);
      if (!*((void *)&v268 + 1))
      {
        uint64_t v183 = v287;
        uint64_t v184 = swift_bridgeObjectRetain();
        v185 = sub_24EF11CB0(v184, &qword_269985E58);
        swift_bridgeObjectRelease();
        *(void *)&long long v277 = v185;
        sub_24EF13AD4((uint64_t *)&v277, (uint64_t (*)(uint64_t))sub_24EF19BB4, (uint64_t)&type metadata for SkillLevel, (uint64_t (*)(void *, uint64_t))sub_24EF151DC);
        uint64_t v186 = v277;
        uint64_t v187 = v266;
        uint64_t v83 = v269;
        uint64_t v188 = v271;
        goto LABEL_134;
      }
      long long v277 = v268;
      *(void *)&long long v278 = v267;
      *((void *)&v278 + 1) = v271;
      uint64_t v83 = v269;
      uint64_t v84 = v266;
      *(void *)&long long v279 = v269;
      *((void *)&v279 + 1) = v266;
      *(void *)&long long v280 = v287;
      sub_24EF22DD4(v268, *((uint64_t *)&v268 + 1));
      swift_bridgeObjectRetain();
      uint64_t v85 = (void *)sub_24EF72664(MEMORY[0x263F8EE78]);
      *(void *)&long long v276 = *(void *)(v82 + 16);
      if ((void)v276)
      {
        uint64_t v272 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v86 = 0;
        uint64_t v87 = (uint64_t *)(v82 + 40);
        uint64_t v274 = (uint64_t)v85;
        uint64_t v88 = v85;
        while (1)
        {
          uint64_t v90 = *(v87 - 1);
          uint64_t v89 = *v87;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v282 = v88;
          unint64_t v93 = sub_24EF7281C(v90, v89);
          uint64_t v94 = v88[2];
          BOOL v95 = (v92 & 1) == 0;
          uint64_t v96 = v94 + v95;
          if (__OFADD__(v94, v95)) {
            goto LABEL_145;
          }
          char v97 = v92;
          if (v88[3] >= v96)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              uint64_t v85 = (void *)v282;
              if ((v92 & 1) == 0) {
                goto LABEL_27;
              }
            }
            else
            {
              sub_24EF18ADC();
              uint64_t v85 = (void *)v282;
              if ((v97 & 1) == 0) {
                goto LABEL_27;
              }
            }
          }
          else
          {
            sub_24EF187F0(v96, isUniquelyReferenced_nonNull_native);
            unint64_t v98 = sub_24EF7281C(v90, v89);
            if ((v97 & 1) != (v99 & 1)) {
              goto LABEL_150;
            }
            unint64_t v93 = v98;
            uint64_t v85 = (void *)v282;
            if ((v97 & 1) == 0)
            {
LABEL_27:
              v85[(v93 >> 6) + 8] |= 1 << v93;
              uint64_t v100 = (uint64_t *)(v85[6] + 16 * v93);
              uint64_t *v100 = v90;
              v100[1] = v89;
              *(void *)(v85[7] + 8 * v93) = v86;
              uint64_t v101 = v85[2];
              BOOL v102 = __OFADD__(v101, 1);
              uint64_t v103 = v101 + 1;
              if (v102) {
                goto LABEL_148;
              }
              v85[2] = v103;
              swift_bridgeObjectRetain();
              goto LABEL_19;
            }
          }
          *(void *)(v85[7] + 8 * v93) = v86;
LABEL_19:
          ++v86;
          v87 += 2;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v88 = v85;
          if ((void)v276 == v86)
          {
            swift_bridgeObjectRelease();
            uint64_t v82 = *((void *)&v268 + 1);
            swift_bridgeObjectRelease();
            uint64_t v121 = v272;
            uint64_t v84 = v266;
            uint64_t v83 = v269;
            goto LABEL_133;
          }
        }
      }
      uint64_t v121 = v48;
LABEL_133:
      swift_bridgeObjectRelease();
      uint64_t v232 = v268;
      sub_24EF22DD4(v268, v82);
      uint64_t v233 = swift_bridgeObjectRetain();
      *(void *)&long long v276 = sub_24EF1EA0C(v233, (uint64_t)&v277);
      sub_24EF22BB8(v232, v82);
      uint64_t v187 = v84;
      uint64_t v188 = v271;
      swift_bridgeObjectRelease();
      uint64_t v234 = v232;
      uint64_t v235 = v276;
      uint64_t v236 = v82;
      uint64_t v183 = v121;
      sub_24EF22BB8(v234, v236);
      *(void *)&long long v282 = v235;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24EF207CC((char **)&v282, (uint64_t)v85);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v186 = v282;
LABEL_134:
      v237 = v270;
      uint64_t v238 = v263;
      uint64_t v239 = v264;
      if (v265)
      {
        swift_bridgeObjectRetain();
        if (!v239) {
          goto LABEL_137;
        }
        goto LABEL_136;
      }
      uint64_t v238 = 0;
      if (v264)
      {
LABEL_136:
        uint64_t v239 = v275;
        swift_bridgeObjectRetain();
      }
LABEL_137:
      sub_24EF103F8((uint64_t)v288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v240 = sub_24EF20870(v186, v238, v239);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EF21698((uint64_t)v288);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v240 + 16))
      {
        *(void *)&long long v276 = v240;
        uint64_t v242 = *((void *)&v268 + 1);
        uint64_t v241 = v268;
        long long v282 = v268;
        uint64_t v283 = v267;
        uint64_t v284 = v188;
        uint64_t v285 = v83;
        uint64_t v286 = v187;
        uint64_t v287 = v183;
        uint64_t v243 = (uint64_t)v254;
        v262(5, &v282);
        uint64_t v244 = v241;
        v237 = v270;
        uint64_t v245 = v242;
        uint64_t v240 = v276;
      }
      else
      {
        uint64_t v246 = sub_24EF86A30();
        uint64_t v243 = (uint64_t)v254;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v246 - 8) + 56))(v254, 1, 1, v246);
        uint64_t v245 = *((void *)&v268 + 1);
        uint64_t v244 = v268;
      }
      sub_24EF22BB8(v244, v245);
      void *v237 = 0x76654C6C6C696B73;
      v237[1] = 0xEA00000000006C65;
      uint64_t v247 = type metadata accessor for FilterSectionDescriptor();
      sub_24EF22C1C(v243, (uint64_t)v237 + *(int *)(v247 + 20), &qword_269985D60);
      v248 = (char *)v237 + *(int *)(v247 + 24);
      *(void *)v248 = v240;
      v248[8] = 5;
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v247 - 8) + 56))(v237, 0, 1, v247);
    case 6:
      uint64_t v104 = v274;
      swift_bridgeObjectRetain_n();
      long long v105 = sub_24EF11BB0(v104, &qword_269985E60, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_24EF18E94);
      swift_bridgeObjectRelease();
      *(void *)&long long v277 = v105;
      sub_24EF13A50((uint64_t *)&v277, (uint64_t (*)(uint64_t))sub_24EF19BA0, sub_24EF14A74);
      v259 = 0;
      swift_bridgeObjectRelease();
      uint64_t v106 = v277;
      uint64_t v107 = *(void *)(v277 + 16);
      uint64_t v272 = v48;
      if (v107)
      {
        swift_retain();
        long long v108 = (char *)MEMORY[0x263F8EE78];
        uint64_t v109 = 96;
        while (1)
        {
          uint64_t v110 = *(void *)(v106 + v109);
          uint64_t v111 = *(void *)(v110 + 16);
          int64_t v112 = *((void *)v108 + 2);
          int64_t v113 = v112 + v111;
          if (__OFADD__(v112, v111))
          {
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
            goto LABEL_149;
          }
          swift_bridgeObjectRetain();
          uint64_t v114 = (char *)swift_isUniquelyReferenced_nonNull_native();
          if (v114 && v113 <= *((void *)v108 + 3) >> 1)
          {
            if (*(void *)(v110 + 16)) {
              goto LABEL_44;
            }
          }
          else
          {
            if (v112 <= v113) {
              int64_t v115 = v112 + v111;
            }
            else {
              int64_t v115 = v112;
            }
            long long v108 = sub_24EF13848(v114, v115, 1, v108);
            if (*(void *)(v110 + 16))
            {
LABEL_44:
              if ((*((void *)v108 + 3) >> 1) - *((void *)v108 + 2) < v111) {
                goto LABEL_146;
              }
              swift_arrayInitWithCopy();
              if (v111)
              {
                uint64_t v116 = *((void *)v108 + 2);
                BOOL v102 = __OFADD__(v116, v111);
                uint64_t v117 = v116 + v111;
                if (v102) {
                  goto LABEL_147;
                }
                *((void *)v108 + 2) = v117;
              }
              goto LABEL_34;
            }
          }
          if (v111) {
            goto LABEL_144;
          }
LABEL_34:
          swift_bridgeObjectRelease();
          v109 += 72;
          if (!--v107)
          {
            swift_release();
            uint64_t v48 = v272;
            goto LABEL_99;
          }
        }
      }
      long long v108 = (char *)MEMORY[0x263F8EE78];
LABEL_99:
      swift_release();
      v189 = v108;
      uint64_t v190 = *((void *)v108 + 2);
      v260 = v189;
      if (v190)
      {
        uint64_t v191 = swift_bridgeObjectRetain() + 48;
        uint64_t v192 = MEMORY[0x263F8EE78];
        uint64_t v193 = v190;
        do
        {
          uint64_t v199 = *(void *)(v191 + 40);
          if (v199)
          {
            uint64_t v201 = *(void *)(v191 - 16);
            uint64_t v200 = *(void *)(v191 - 8);
            long long v202 = *(_OWORD *)v191;
            uint64_t v203 = *(void *)(v191 + 16);
            uint64_t v273 = *(void *)(v191 + 24);
            uint64_t v274 = v200;
            uint64_t v204 = *(void *)(v191 + 32);
            long long v276 = v202;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v275 = v201;
            swift_bridgeObjectRetain();
            char v205 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v277 = v192;
            if ((v205 & 1) == 0)
            {
              sub_24EF12134(0, *(void *)(v192 + 16) + 1, 1);
              uint64_t v192 = v277;
            }
            unint64_t v195 = *(void *)(v192 + 16);
            unint64_t v194 = *(void *)(v192 + 24);
            if (v195 >= v194 >> 1)
            {
              sub_24EF12134((char *)(v194 > 1), v195 + 1, 1);
              uint64_t v192 = v277;
            }
            *(void *)(v192 + 16) = v195 + 1;
            uint64_t v196 = v192 + (v195 << 6);
            uint64_t v197 = v274;
            *(void *)(v196 + 32) = v275;
            *(void *)(v196 + 40) = v197;
            *(_OWORD *)(v196 + 48) = v276;
            uint64_t v198 = v273;
            *(void *)(v196 + 64) = v203;
            *(void *)(v196 + 72) = v198;
            *(void *)(v196 + 80) = v204;
            *(void *)(v196 + 88) = v199;
          }
          v191 += 64;
          --v193;
        }
        while (v193);
        swift_bridgeObjectRelease();
        uint64_t v206 = v272;
      }
      else
      {
        uint64_t v206 = v48;
        uint64_t v192 = MEMORY[0x263F8EE78];
      }
      *(void *)&long long v277 = v192;
      swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269985E18);
      sub_24EF22D78();
      uint64_t v274 = sub_24EF876D0();
      swift_release();
      swift_bridgeObjectRelease();
      if (v190)
      {
        v207 = v260 + 48;
        uint64_t v208 = MEMORY[0x263F8EE78];
        do
        {
          if (!*((void *)v207 + 5))
          {
            uint64_t v213 = *((void *)v207 - 2);
            uint64_t v275 = *((void *)v207 - 1);
            uint64_t v214 = *((void *)v207 + 2);
            uint64_t v215 = *((void *)v207 + 3);
            uint64_t v216 = *((void *)v207 + 4);
            long long v276 = *(_OWORD *)v207;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v217 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v277 = v208;
            if ((v217 & 1) == 0)
            {
              sub_24EF12134(0, *(void *)(v208 + 16) + 1, 1);
              uint64_t v208 = v277;
            }
            unint64_t v210 = *(void *)(v208 + 16);
            unint64_t v209 = *(void *)(v208 + 24);
            if (v210 >= v209 >> 1)
            {
              sub_24EF12134((char *)(v209 > 1), v210 + 1, 1);
              uint64_t v208 = v277;
            }
            *(void *)(v208 + 16) = v210 + 1;
            uint64_t v211 = v208 + (v210 << 6);
            uint64_t v212 = v275;
            *(void *)(v211 + 32) = v213;
            *(void *)(v211 + 40) = v212;
            *(_OWORD *)(v211 + 48) = v276;
            *(void *)(v211 + 64) = v214;
            *(void *)(v211 + 72) = v215;
            *(void *)(v211 + 80) = v216;
            *(void *)(v211 + 88) = 0;
            uint64_t v206 = v272;
          }
          v207 += 64;
          --v190;
        }
        while (v190);
      }
      else
      {
        uint64_t v208 = MEMORY[0x263F8EE78];
      }
      swift_bridgeObjectRelease();
      *(void *)&long long v277 = v208;
      swift_retain();
      v218 = v259;
      sub_24EF13A50((uint64_t *)&v277, (uint64_t (*)(uint64_t))sub_24EF19B8C, sub_24EF1438C);
      if (v218)
      {
LABEL_149:
        swift_release();
        __break(1u);
LABEL_150:
        sub_24EF87A80();
        __break(1u);
        swift_bridgeObjectRelease();
        swift_release();
        __break(1u);
        JUMPOUT(0x24EF0F904);
      }
      swift_release();
      uint64_t v219 = v277;
      *(void *)&long long v277 = v274;
      sub_24EF18704(v219);
      uint64_t v220 = v277;
      uint64_t v221 = v269;
      uint64_t v66 = v270;
      uint64_t v222 = v271;
      uint64_t v223 = v263;
      uint64_t v224 = v264;
      if (v265)
      {
        swift_bridgeObjectRetain();
        if (v224)
        {
LABEL_123:
          uint64_t v225 = v250;
          swift_bridgeObjectRetain();
          goto LABEL_126;
        }
      }
      else
      {
        uint64_t v223 = 0;
        if (v264) {
          goto LABEL_123;
        }
      }
      uint64_t v225 = 0;
LABEL_126:
      sub_24EF103F8((uint64_t)v288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v226 = sub_24EF20C78(v220, v223, v225);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EF21698((uint64_t)v288);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v226 + 16))
      {
        long long v227 = v268;
        long long v277 = v268;
        *(void *)&long long v276 = v226;
        *(void *)&long long v278 = v267;
        *((void *)&v278 + 1) = v222;
        *(void *)&long long v279 = v221;
        *((void *)&v279 + 1) = v266;
        *(void *)&long long v280 = v206;
        uint64_t v228 = (uint64_t)v252;
        v262(6, &v277);
        uint64_t v230 = *((void *)&v227 + 1);
        uint64_t v229 = v227;
        uint64_t v226 = v276;
      }
      else
      {
        uint64_t v231 = sub_24EF86A30();
        uint64_t v228 = (uint64_t)v252;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v231 - 8) + 56))(v252, 1, 1, v231);
        uint64_t v230 = *((void *)&v268 + 1);
        uint64_t v229 = v268;
      }
      sub_24EF22BB8(v229, v230);
      *uint64_t v66 = 0x656D656874;
      v66[1] = 0xE500000000000000;
      uint64_t v132 = type metadata accessor for FilterSectionDescriptor();
      sub_24EF22C1C(v228, (uint64_t)v66 + *(int *)(v132 + 20), &qword_269985D60);
      uint64_t v133 = (char *)v66 + *(int *)(v132 + 24);
      *(void *)uint64_t v133 = v226;
      char v134 = 6;
LABEL_130:
      v133[8] = v134;
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v66, 0, 1, v132);
    case 7:
      uint64_t v71 = v287;
      swift_bridgeObjectRetain_n();
      uint64_t v72 = sub_24EF11CB0(v34, &qword_269985E88);
      swift_bridgeObjectRelease();
      *(void *)&long long v277 = v72;
      sub_24EF13AD4((uint64_t *)&v277, (uint64_t (*)(uint64_t))sub_24EF19B54, (uint64_t)&type metadata for Trainer, (uint64_t (*)(void *, uint64_t))sub_24EF151DC);
      uint64_t v73 = swift_bridgeObjectRelease();
      uint64_t v74 = v277;
      uint64_t v75 = v263;
      uint64_t v76 = v39;
      uint64_t v272 = v71;
      if (v265) {
        uint64_t v73 = swift_bridgeObjectRetain();
      }
      else {
        uint64_t v75 = MEMORY[0x263F8EE88];
      }
      uint64_t v153 = v266;
      uint64_t v152 = v267;
      uint64_t v154 = v269;
      uint64_t v155 = v271;
      if (v264) {
        uint64_t v73 = swift_bridgeObjectRetain();
      }
      else {
        uint64_t v76 = 0;
      }
      MEMORY[0x270FA5388](v73);
      *(&v249 - 4) = (uint64_t)v288;
      *(&v249 - 3) = v75;
      *(&v249 - 2) = v76;
      uint64_t v156 = sub_24EF0C120((void (*)(uint64_t *__return_ptr, void *))sub_24EF22D54, (uint64_t)(&v249 - 6), v74);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      if (*(void *)(v156 + 16))
      {
        long long v157 = v268;
        long long v277 = v268;
        *(void *)&long long v278 = v152;
        *((void *)&v278 + 1) = v155;
        *(void *)&long long v279 = v154;
        *((void *)&v279 + 1) = v153;
        *(void *)&long long v280 = v272;
        uint64_t v158 = (uint64_t)v260;
        v262(7, &v277);
        uint64_t v160 = *((void *)&v157 + 1);
        uint64_t v159 = v157;
      }
      else
      {
        uint64_t v161 = sub_24EF86A30();
        uint64_t v158 = (uint64_t)v260;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v161 - 8) + 56))(v260, 1, 1, v161);
        uint64_t v160 = *((void *)&v268 + 1);
        uint64_t v159 = v268;
      }
      sub_24EF22BB8(v159, v160);
      uint64_t v66 = v270;
      void *v270 = 0x72656E69617274;
      v66[1] = 0xE700000000000000;
      uint64_t v132 = type metadata accessor for FilterSectionDescriptor();
      sub_24EF22C1C(v158, (uint64_t)v66 + *(int *)(v132 + 20), &qword_269985D60);
      uint64_t v133 = (char *)v66 + *(int *)(v132 + 24);
      *(void *)uint64_t v133 = v156;
      char v134 = 7;
      goto LABEL_130;
    case 8:
      uint64_t v118 = type metadata accessor for FilterSectionDescriptor();
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v270, 1, 1, v118);
      long long v119 = v268;
      return sub_24EF22BB8(v119, *((uint64_t *)&v119 + 1));
    default:
      uint64_t v49 = v287;
      uint64_t v50 = v276;
      swift_bridgeObjectRetain_n();
      uint64_t v51 = sub_24EF11DA8(v50, &qword_269985E28);
      swift_bridgeObjectRelease();
      *(void *)&long long v277 = v51;
      sub_24EF13AD4((uint64_t *)&v277, (uint64_t (*)(uint64_t))sub_24EF19C84, (uint64_t)&type metadata for BodyFocus, (uint64_t (*)(void *, uint64_t))sub_24EF16088);
      swift_bridgeObjectRelease();
      uint64_t v52 = v277;
      uint64_t v53 = v263;
      uint64_t v54 = v264;
      uint64_t v272 = v49;
      if (v265) {
        swift_bridgeObjectRetain();
      }
      else {
        uint64_t v53 = 0;
      }
      uint64_t v162 = v269;
      uint64_t v66 = v270;
      uint64_t v163 = v266;
      uint64_t v164 = v267;
      uint64_t v165 = v271;
      if (v54) {
        swift_bridgeObjectRetain();
      }
      sub_24EF103F8((uint64_t)v288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v166 = sub_24EF1D860(v52, v53, v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EF21698((uint64_t)v288);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (*(void *)(v166 + 16))
      {
        *(void *)&long long v276 = v166;
        long long v167 = v268;
        long long v277 = v268;
        *(void *)&long long v278 = v164;
        *((void *)&v278 + 1) = v165;
        *(void *)&long long v279 = v162;
        *((void *)&v279 + 1) = v163;
        *(void *)&long long v280 = v272;
        uint64_t v168 = (uint64_t)v255;
        v262(0, &v277);
        uint64_t v170 = *((void *)&v167 + 1);
        uint64_t v169 = v167;
        uint64_t v166 = v276;
        uint64_t v66 = v270;
      }
      else
      {
        uint64_t v175 = sub_24EF86A30();
        uint64_t v168 = (uint64_t)v255;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56))(v255, 1, 1, v175);
        uint64_t v170 = *((void *)&v268 + 1);
        uint64_t v169 = v268;
      }
      sub_24EF22BB8(v169, v170);
      *uint64_t v66 = 0x75636F4679646F62;
      v66[1] = 0xE900000000000073;
      uint64_t v132 = type metadata accessor for FilterSectionDescriptor();
      sub_24EF22C1C(v168, (uint64_t)v66 + *(int *)(v132 + 20), &qword_269985D60);
      v176 = (char *)v66 + *(int *)(v132 + 24);
      *(void *)v176 = v166;
      v176[8] = 0;
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v66, 0, 1, v132);
  }
}

uint64_t sub_24EF0F928(void (*a1)(_OWORD *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = (unsigned __int8 *)(a3 + 72);
  uint64_t v25 = (char *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v7 = *((void *)v5 - 5);
    uint64_t v8 = *((void *)v5 - 4);
    uint64_t v9 = *((void *)v5 - 3);
    uint64_t v10 = *((void *)v5 - 2);
    uint64_t v11 = *((void *)v5 - 1);
    unsigned __int8 v12 = *v5;
    v31[0] = v7;
    v31[1] = v8;
    v31[2] = v9;
    v31[3] = v10;
    v31[4] = v11;
    unsigned __int8 v32 = v12;
    sub_24EEF7798(v7, v8, v9, v10, v11, v12);
    uint64_t v13 = v33;
    a1(v26, v31);
    if (v13)
    {
      sub_24EEF7780(v7, v8, v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t v33 = 0;
    sub_24EEF7780(v7, v8, v9, v10, v11, v12);
    uint64_t v14 = v30;
    if (v30)
    {
      long long v23 = v26[1];
      long long v24 = v26[0];
      uint64_t v16 = v27;
      char v15 = v28;
      uint64_t v17 = v29;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v18 = v25;
      }
      else {
        uint64_t v18 = sub_24EF130D4(0, *((void *)v25 + 2) + 1, 1, v25);
      }
      unint64_t v20 = *((void *)v18 + 2);
      unint64_t v19 = *((void *)v18 + 3);
      if (v20 >= v19 >> 1) {
        uint64_t v18 = sub_24EF130D4((char *)(v19 > 1), v20 + 1, 1, v18);
      }
      *((void *)v18 + 2) = v20 + 1;
      uint64_t v25 = v18;
      uint64_t v6 = &v18[64 * v20];
      *((_OWORD *)v6 + 2) = v24;
      *((_OWORD *)v6 + 3) = v23;
      *((void *)v6 + 8) = v16;
      v6[72] = v15;
      *((void *)v6 + 10) = v17;
      *((void *)v6 + 11) = v14;
    }
    v5 += 48;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return (uint64_t)v25;
}

uint64_t sub_24EF0FB18(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 89) = a5;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a4;
  *(unsigned char *)(v5 + 88) = a3;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 40) = type metadata accessor for FilterAction();
  *(void *)(v5 + 48) = swift_task_alloc();
  sub_24EF87770();
  *(void *)(v5 + 56) = sub_24EF87760();
  uint64_t v7 = sub_24EF87750();
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 72) = v6;
  return MEMORY[0x270FA2498](sub_24EF0FBEC, v7, v6);
}

uint64_t sub_24EF0FBEC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  char v2 = *(unsigned char *)(v0 + 89);
  uint64_t v3 = *(void *)(v0 + 32);
  char v4 = *(unsigned char *)(v0 + 88) & 1;
  *(void *)uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 8) = v4;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 24) = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D50);
  *uint64_t v5 = v0;
  v5[1] = sub_24EF0FCE0;
  uint64_t v7 = *(void *)(v0 + 48);
  return MEMORY[0x270F252C8](v7, v6);
}

uint64_t sub_24EF0FCE0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  swift_task_dealloc();
  sub_24EF22AA0(v2, (uint64_t (*)(void))type metadata accessor for FilterAction);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 64);
  return MEMORY[0x270FA2498](sub_24EF23040, v4, v3);
}

uint64_t sub_24EF0FE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a1;
  v3[18] = type metadata accessor for FilterAction();
  v3[19] = swift_task_alloc();
  v3[20] = sub_24EF87770();
  v3[21] = sub_24EF87760();
  uint64_t v6 = *(int **)(a2 + 128);
  sub_24EF0D038(a3, (uint64_t)(v3 + 11));
  uint64_t v9 = (int *)((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  v3[22] = v7;
  void *v7 = v3;
  v7[1] = sub_24EF0FF90;
  return ((uint64_t (*)(void *, void *))v9)(v3 + 2, v3 + 11);
}

uint64_t sub_24EF0FF90()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24EF87750();
    uint64_t v5 = v4;
    uint64_t v6 = sub_24EF0A42C;
    uint64_t v7 = v3;
    uint64_t v8 = v5;
  }
  else
  {
    uint64_t v9 = sub_24EF87750();
    uint64_t v8 = v10;
    *(void *)(v2 + 192) = v9;
    *(void *)(v2 + 200) = v10;
    uint64_t v6 = sub_24EF100E0;
    uint64_t v7 = v9;
  }
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_24EF100E0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 80);
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 48);
  long long v5 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v3;
  *(_OWORD *)(v1 + 32) = v4;
  *(_OWORD *)(v1 + 48) = v5;
  *(void *)(v1 + 64) = v2;
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D50);
  *uint64_t v6 = v0;
  v6[1] = sub_24EF0A264;
  uint64_t v8 = *(void *)(v0 + 152);
  return MEMORY[0x270F252C8](v8, v7);
}

uint64_t sub_24EF101B0()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24EEF7780(*(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 224), *(void *)(v0 + 232), *(unsigned char *)(v0 + 240));
  return swift_deallocObject();
}

uint64_t sub_24EF10258(uint64_t a1)
{
  long long v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *long long v4 = v2;
  v4[1] = sub_24EF10304;
  return sub_24EF0FE38(a1, v1 + 16, v1 + 200);
}

uint64_t sub_24EF10304()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24EF103F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  swift_retain();
  swift_retain();
  sub_24EF06CC8(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24EF104DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985EB0);
  *(void *)(v2 + 24) = v4;
  *(void *)(v2 + 32) = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 40) = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985EB8);
  *(void *)(v2 + 48) = v6;
  *(void *)(v2 + 56) = *(void *)(v6 - 8);
  *(void *)(v2 + 64) = swift_task_alloc();
  *(void *)(v2 + 72) = sub_24EF87770();
  *(void *)(v2 + 80) = sub_24EF87760();
  uint64_t v7 = *(int **)(a2 + 96);
  *(_OWORD *)(v2 + 88) = *(_OWORD *)(a2 + 160);
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)v7 + *v7);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 104) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_24EF1069C;
  return v10(v5);
}

uint64_t sub_24EF1069C()
{
  uint64_t v2 = (void *)*v1;
  v2[14] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24EF87750();
  v2[15] = v4;
  v2[16] = v3;
  if (v0) {
    uint64_t v5 = sub_24EF10B8C;
  }
  else {
    uint64_t v5 = sub_24EF107FC;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EF107FC()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_24EF87790();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = sub_24EF87760();
  v0[17] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[18] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24EF108F0;
  uint64_t v6 = v0[6];
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v0 + 2, v4, v7, v6);
}

uint64_t sub_24EF108F0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return MEMORY[0x270FA2498](sub_24EF10A34, v3, v2);
}

uint64_t sub_24EF10A34()
{
  if (*(void *)(v0 + 16))
  {
    (*(void (**)(void))(v0 + 88))(*(void *)(v0 + 16));
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_24EF87760();
    *(void *)(v0 + 136) = v1;
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_24EF108F0;
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v4 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA1F68](v0 + 16, v1, v4, v3);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_24EF10B8C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t FilterFeature.dispose(localState:sharedState:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for FilterState();
  if (*(unsigned char *)(a1 + *(int *)(result + 36)) == 1)
  {
    sub_24EF0C684((uint64_t)v3);
    sub_24EF0C628(a1, (uint64_t)v4);
    sub_24EF21B08((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24EF0CC0C);
    return sub_24EF0C628((uint64_t)v3, a1);
  }
  return result;
}

uint64_t sub_24EF10C84@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF87860();
  if (!a3)
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v8 = sub_24EF0A67C(v15[0], v15[1], a3);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
LABEL_8:
    char v10 = 0;
    goto LABEL_9;
  }
  char v10 = 1;
  if (a2)
  {
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v11);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 8))(v14, v11, v12);
    sub_24EF0D038((uint64_t)v14, (uint64_t)v15);
    char v13 = sub_24EF0A49C((uint64_t)v15, a2);
    uint64_t result = sub_24EF13808((uint64_t)v15, (void (*)(void, void, void, void, void, void))sub_24EEF7780);
    if (v13) {
      char v10 = 2;
    }
    else {
      char v10 = 1;
    }
  }
LABEL_9:
  *a4 = v10;
  return result;
}

char *sub_24EF10DAC(uint64_t a1)
{
  uint64_t v22 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = (char *)swift_bridgeObjectRetain();
  int64_t v7 = 0;
  char v8 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    if (v4)
    {
      unint64_t v9 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v10 = v9 | (v7 << 6);
    }
    else
    {
      int64_t v11 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_42;
      }
      if (v11 >= v5)
      {
LABEL_37:
        swift_release();
        return v8;
      }
      unint64_t v12 = *(void *)(v22 + 8 * v11);
      ++v7;
      if (!v12)
      {
        int64_t v7 = v11 + 1;
        if (v11 + 1 >= v5) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v22 + 8 * v7);
        if (!v12)
        {
          int64_t v7 = v11 + 2;
          if (v11 + 2 >= v5) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v22 + 8 * v7);
          if (!v12)
          {
            int64_t v7 = v11 + 3;
            if (v11 + 3 >= v5) {
              goto LABEL_37;
            }
            unint64_t v12 = *(void *)(v22 + 8 * v7);
            if (!v12)
            {
              int64_t v13 = v11 + 4;
              if (v13 >= v5) {
                goto LABEL_37;
              }
              unint64_t v12 = *(void *)(v22 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  int64_t v7 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_43;
                  }
                  if (v7 >= v5) {
                    goto LABEL_37;
                  }
                  unint64_t v12 = *(void *)(v22 + 8 * v7);
                  ++v13;
                  if (v12) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v13;
            }
          }
        }
      }
LABEL_23:
      unint64_t v4 = (v12 - 1) & v12;
      unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
    }
    uint64_t v14 = *(void *)(*(void *)(a1 + 48) + 72 * v10 + 64);
    uint64_t v15 = *(void *)(v14 + 16);
    int64_t v16 = *((void *)v8 + 2);
    int64_t v17 = v16 + v15;
    if (__OFADD__(v16, v15)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v17 <= *((void *)v8 + 3) >> 1)
    {
      if (!*(void *)(v14 + 16)) {
        goto LABEL_4;
      }
    }
    else
    {
      if (v16 <= v17) {
        int64_t v18 = v16 + v15;
      }
      else {
        int64_t v18 = v16;
      }
      uint64_t result = sub_24EF13848(result, v18, 1, v8);
      char v8 = result;
      if (!*(void *)(v14 + 16))
      {
LABEL_4:
        if (v15) {
          goto LABEL_39;
        }
        goto LABEL_5;
      }
    }
    if ((*((void *)v8 + 3) >> 1) - *((void *)v8 + 2) < v15) {
      goto LABEL_40;
    }
    uint64_t result = (char *)swift_arrayInitWithCopy();
    if (v15)
    {
      uint64_t v19 = *((void *)v8 + 2);
      BOOL v20 = __OFADD__(v19, v15);
      uint64_t v21 = v19 + v15;
      if (v20) {
        goto LABEL_41;
      }
      *((void *)v8 + 2) = v21;
    }
LABEL_5:
    uint64_t result = (char *)swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

double sub_24EF10FF8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v27 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(unsigned __int8 *)(a1 + 40);
  sub_24EF0D038(a2, (uint64_t)v45);
  switch(v45[40])
  {
    case 1:
      if (v14 != 1) {
        goto LABEL_19;
      }
      goto LABEL_21;
    case 2:
      if (v14 == 2) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 3:
      if (v14 == 3) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 4:
      if (v14 == 4) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 5:
      if (v14 == 5) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 6:
      if (v14 == 6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 7:
      if (v14 == 7) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 8:
      if (v14 != 8) {
        goto LABEL_19;
      }
      goto LABEL_21;
    default:
      if (!v14) {
        goto LABEL_21;
      }
LABEL_19:
      long long v15 = a3[9];
      long long v41 = a3[8];
      long long v42 = v15;
      long long v43 = a3[10];
      uint64_t v44 = *((void *)a3 + 22);
      long long v16 = a3[5];
      long long v37 = a3[4];
      long long v38 = v16;
      long long v17 = a3[7];
      long long v39 = a3[6];
      long long v40 = v17;
      long long v18 = a3[1];
      long long v33 = *a3;
      long long v34 = v18;
      long long v19 = a3[3];
      long long v35 = a3[2];
      long long v36 = v19;
      v31[0] = v27;
      v31[1] = v10;
      v31[2] = v11;
      v31[3] = v12;
      v31[4] = v13;
      char v32 = v14;
      long long v20 = *(_OWORD *)(a4 + 48);
      v29[2] = *(_OWORD *)(a4 + 32);
      v29[3] = v20;
      uint64_t v30 = *(void *)(a4 + 64);
      long long v21 = *(_OWORD *)(a4 + 16);
      v29[0] = *(_OWORD *)a4;
      v29[1] = v21;
      sub_24EF22C1C(a5, (uint64_t)v28, &qword_269985D58);
      uint64_t v22 = sub_24EF111FC((uint64_t)v31, (uint64_t)v29, v28, a6);
      if (v23)
      {
        *a7 = v27;
        a7[1] = v10;
        a7[2] = v11;
        a7[3] = v12;
        a7[4] = v13;
        a7[5] = v14;
        a7[6] = v22;
        a7[7] = v23;
        sub_24EEF7798(v27, v10, v11, v12, v13, v14);
      }
      else
      {
LABEL_21:
        double result = 0.0;
        *((_OWORD *)a7 + 2) = 0u;
        *((_OWORD *)a7 + 3) = 0u;
        *(_OWORD *)a7 = 0u;
        *((_OWORD *)a7 + 1) = 0u;
      }
      return result;
  }
}

uint64_t sub_24EF111FC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v70 = a4;
  uint64_t v8 = 0;
  uint64_t v68 = sub_24EF86A60();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v69 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24EF87630();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v71 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24EF87610();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(uint64_t *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(unsigned __int8 *)(a1 + 40);
  long long v19 = *(char **)(a2 + 32);
  uint64_t v20 = *a3;
  uint64_t v21 = a3[1];
  uint64_t v22 = a3[2];
  uint64_t v23 = a3[3];
  uint64_t v25 = a3[4];
  uint64_t v24 = a3[5];
  uint64_t v26 = a3[6];
  uint64_t v27 = a3[7];
  uint64_t v28 = a3[8];
  uint64_t v29 = *(char **)(v4 + 80);
  uint64_t v30 = *(void *)(v4 + 88);
  switch(v18)
  {
    case 1:
      uint64_t v36 = v17;
      swift_bridgeObjectRetain();
      sub_24EF87600();
      sub_24EF875F0();
      double v37 = round(*(double *)&v16 / 60.0);
      sub_24EEF7780(v14, v13, v15, v16, v36, 1u);
      if ((~*(void *)&v37 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_39;
      }
      if (v37 <= -9.22337204e18)
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      if (v37 >= 9.22337204e18)
      {
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      v75[0] = (uint64_t)v37;
      sub_24EF875D0();
      sub_24EF875F0();
      sub_24EF87620();
      if (qword_269985870 == -1) {
        goto LABEL_7;
      }
LABEL_41:
      swift_once();
LABEL_7:
      long long v38 = (void *)qword_269997D90;
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v69, v70, v68);
      id v39 = v38;
      return sub_24EF87650();
    case 2:
      uint64_t v31 = v14;
      uint64_t v32 = v13;
      uint64_t v33 = v15;
      uint64_t v34 = v16;
      unsigned __int8 v35 = 2;
      goto LABEL_12;
    case 3:
      sub_24EEF7798(v14, v13, v15, v16, v17, 3u);
      uint64_t v40 = swift_bridgeObjectRetain();
      sub_24EF0D0E8(v40, v14, v13, (uint64_t)v75);
      swift_bridgeObjectRelease();
      uint64_t v41 = v75[0];
      if (!v75[0]) {
        return 0;
      }
      uint64_t v8 = v77;
      swift_bridgeObjectRetain();
      sub_24EF0CF1C(v41);
      return v8;
    case 4:
      uint64_t v31 = v14;
      uint64_t v32 = v13;
      uint64_t v33 = v15;
      uint64_t v34 = v16;
      unsigned __int8 v35 = 4;
      goto LABEL_12;
    case 5:
      uint64_t v62 = v26;
      uint64_t v63 = v24;
      uint64_t v64 = v25;
      uint64_t v65 = v30;
      uint64_t v66 = v23;
      uint64_t v67 = v22;
      uint64_t v68 = v21;
      uint64_t v69 = v29;
      uint64_t v70 = v20;
      uint64_t v71 = v19;
      sub_24EEF7798(v14, v13, v15, v16, v17, 5u);
      uint64_t v44 = swift_bridgeObjectRetain();
      sub_24EF0DA2C(v44, v14, v13, (uint64_t)v75);
      swift_bridgeObjectRelease();
      uint64_t v45 = v75[0];
      if (!v75[0]) {
        return 0;
      }
      uint64_t v46 = v76;
      uint64_t v47 = v77;
      if (!v77)
      {
        sub_24EF22C80(v75[0]);
        return 0;
      }
      uint64_t v61 = v78;
      swift_bridgeObjectRetain();
      sub_24EF22C80(v45);
      v75[0] = v70;
      v75[1] = v68;
      v75[2] = v67;
      v75[3] = v66;
      v75[4] = v64;
      uint64_t v76 = v63;
      uint64_t v77 = v62;
      uint64_t v78 = v27;
      uint64_t v79 = v28;
      ((void (*)(uint64_t *__return_ptr, uint64_t, char *, uint64_t *))v69)(&v72, 5, v71, v75);
      uint64_t v48 = v73;
      if (!v73) {
        goto LABEL_34;
      }
      uint64_t v49 = v72;
      uint64_t v50 = v74;
      swift_bridgeObjectRetain();
      sub_24EF22BB8(v49, v48);
      if (*(void *)(v50 + 16))
      {
        unint64_t v51 = sub_24EF7281C(v46, v47);
        if (v52)
        {
          uint64_t v8 = *(void *)(*(void *)(v50 + 56) + 16 * v51);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v8;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_34;
    case 6:
      uint64_t v53 = swift_bridgeObjectRetain();
      uint64_t v54 = sub_24EF10DAC(v53);
      swift_bridgeObjectRelease();
      uint64_t v55 = *((void *)v54 + 2);
      if (!v55) {
        goto LABEL_34;
      }
      uint64_t v56 = v54 + 80;
      do
      {
        uint64_t v8 = *((void *)v56 - 1);
        BOOL v57 = *((void *)v56 - 3) == v14 && v13 == *((void *)v56 - 2);
        if (v57 || (sub_24EF87A60() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v8;
        }
        v56 += 64;
        --v55;
      }
      while (v55);
LABEL_34:
      swift_bridgeObjectRelease();
      return 0;
    case 7:
      sub_24EEF7798(v14, v13, v15, v16, v17, 7u);
      uint64_t v58 = swift_bridgeObjectRetain();
      sub_24EF0DA2C(v58, v14, v13, (uint64_t)v75);
      swift_bridgeObjectRelease();
      uint64_t v59 = v75[0];
      if (!v75[0]) {
        return 0;
      }
      uint64_t v8 = v78;
      swift_bridgeObjectRetain();
      sub_24EF22C80(v59);
      return v8;
    case 8:
      return v8;
    default:
      uint64_t v31 = v14;
      uint64_t v32 = v13;
      uint64_t v33 = v15;
      uint64_t v34 = v16;
      unsigned __int8 v35 = 0;
LABEL_12:
      sub_24EEF7798(v31, v32, v33, v34, v17, v35);
      uint64_t v42 = swift_bridgeObjectRetain();
      sub_24EF0D7EC(v42, v14, v13, (uint64_t)v75);
      swift_bridgeObjectRelease();
      uint64_t v43 = v75[0];
      if (!v75[0]) {
        return 0;
      }
      uint64_t v8 = v76;
      swift_bridgeObjectRetain();
      sub_24EF22CEC(v43);
      return v8;
  }
}

uint64_t sub_24EF11A38(uint64_t a1, uint64_t a2)
{
  uint64_t result = type metadata accessor for FilterState();
  if (*(unsigned char *)(a2 + *(int *)(result + 36)) == 1)
  {
    sub_24EF0C684((uint64_t)v4);
    sub_24EF0C628(a2, (uint64_t)v5);
    sub_24EF21B08((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24EF0CC0C);
    return sub_24EF0C628((uint64_t)v4, a2);
  }
  return result;
}

void *sub_24EF11AB8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985C78);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 48);
  uint64_t v5 = sub_24EF18C74((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_24EF22D4C();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_24EF11BB0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = (void *)swift_allocObject();
  size_t v7 = _swift_stdlib_malloc_size(v6);
  v6[2] = v3;
  v6[3] = 2 * ((uint64_t)(v7 - 32) / 72);
  uint64_t v8 = a3(&v10, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_24EF22D4C();
  if (v8 != v3)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v6;
}

void *sub_24EF11CB0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  size_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = v2;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 72);
  uint64_t v6 = sub_24EF19140(&v8, (uint64_t)(v4 + 4), v2, a1);
  swift_bridgeObjectRetain();
  sub_24EF22D4C();
  if (v6 != (void *)v2)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v4;
}

void *sub_24EF11DA8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  size_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = v2;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 56);
  uint64_t v6 = sub_24EF198CC(&v8, (uint64_t)(v4 + 4), v2, a1);
  swift_bridgeObjectRetain();
  sub_24EF22D4C();
  if (v6 != (void *)v2)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v4;
}

void *sub_24EF11EA0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985E30);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_24EF196B4((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_24EF22D4C();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

char *sub_24EF11F94(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_24EF1229C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_24EF11FB4(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_24EF12388(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_24EF11FD4(void *a1, int64_t a2, char a3)
{
  size_t result = sub_24EF12698(a1, a2, a3, *v3, &qword_269985DE0, &qword_269985DE8);
  *uint64_t v3 = result;
  return result;
}

void *sub_24EF12004(void *a1, int64_t a2, char a3)
{
  size_t result = sub_24EF1255C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_24EF12024(void *a1, int64_t a2, char a3)
{
  size_t result = sub_24EF12698(a1, a2, a3, *v3, &qword_269985DC0, &qword_269985DC8);
  *uint64_t v3 = result;
  return result;
}

void *sub_24EF12054(void *a1, int64_t a2, char a3)
{
  size_t result = sub_24EF12908(a1, a2, a3, *v3, &qword_269985DB0, &qword_269985DB8);
  *uint64_t v3 = result;
  return result;
}

void *sub_24EF12084(void *a1, int64_t a2, char a3)
{
  size_t result = sub_24EF12698(a1, a2, a3, *v3, &qword_269985DA0, &qword_269985DA8);
  *uint64_t v3 = result;
  return result;
}

void *sub_24EF120B4(void *a1, int64_t a2, char a3)
{
  size_t result = sub_24EF12908(a1, a2, a3, *v3, &qword_269985D90, &qword_269985D98);
  *uint64_t v3 = result;
  return result;
}

void *sub_24EF120E4(void *a1, int64_t a2, char a3)
{
  size_t result = sub_24EF127D0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_24EF12104(void *a1, int64_t a2, char a3)
{
  size_t result = sub_24EF12908(a1, a2, a3, *v3, &qword_269985D70, &qword_269985D78);
  *uint64_t v3 = result;
  return result;
}

char *sub_24EF12134(char *a1, int64_t a2, char a3)
{
  size_t result = sub_24EF12A30(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_24EF12154(char *a1, int64_t a2, char a3)
{
  size_t result = sub_24EF12C54(a1, a2, a3, *v3, &qword_269985E58);
  *uint64_t v3 = result;
  return result;
}

char *sub_24EF12184(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985C78);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_24EF1229C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985E90);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

size_t sub_24EF12388(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985DF0);
  uint64_t v10 = *(void *)(type metadata accessor for FilterSectionDescriptor() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  _OWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for FilterSectionDescriptor() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

void *sub_24EF1255C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985DD0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[9 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 72 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985DD8);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_24EF12698(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    _OWORD v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 80);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[10 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 80 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

void *sub_24EF127D0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985D80);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[6 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985D88);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_24EF12908(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 + 31;
    }
    _OWORD v13[2] = v11;
    v13[3] = 2 * (v15 >> 6);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[8 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, v11 << 6);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

char *sub_24EF12A30(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985E00);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_24EF12B34(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985E60);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8]) {
      memmove(v12, v13, 72 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_24EF12C54(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 72);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  int64_t v14 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v13 >= &v14[72 * v9]) {
      memmove(v13, v14, 72 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v11;
}

char *sub_24EF12D78(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985E40);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8]) {
      memmove(v12, v13, 72 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_24EF12E98(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985E30);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_24EF12FB0(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  int64_t v14 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v13 >= &v14[56 * v9]) {
      memmove(v13, v14, 56 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v11;
}

char *sub_24EF130D4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985DF8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24EF131D8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985C78);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_24EF132F0(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985DF0);
  uint64_t v10 = *(void *)(type metadata accessor for FilterSectionDescriptor() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  _OWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for FilterSectionDescriptor() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

size_t sub_24EF134C4(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985EC0);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269985C20) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  _OWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269985C20) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

uint64_t sub_24EF136A4(uint64_t a1)
{
  size_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *size_t v4 = v2;
  v4[1] = sub_24EF23044;
  return sub_24EF104DC(a1, v1 + 16);
}

uint64_t sub_24EF13744(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_24EF23044;
  return sub_24EF0FB18(a1, v4, v5, v6, v7);
}

uint64_t sub_24EF13808(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

char *sub_24EF13848(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985E00);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24EF1394C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985D48);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24EF13A50(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_24EF13AD4(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(void *, uint64_t))
{
  uint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = a2(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + 32;
  v11[1] = v9;
  uint64_t result = a4(v11, a3);
  *a1 = v8;
  return result;
}

uint64_t sub_24EF13B60(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24EF87A40();
  if (result < v3)
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_173;
    }
    uint64_t v108 = result;
    uint64_t v113 = v1;
    uint64_t v106 = a1;
    if (v3 <= 1)
    {
      uint64_t v8 = MEMORY[0x263F8EE78];
      int64_t v112 = (unsigned __int8 *)(MEMORY[0x263F8EE78] + 32);
      if (v3 != 1)
      {
        unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
        uint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_139:
        char v97 = v12;
        uint64_t v107 = v8;
        if (v13 >= 2)
        {
          uint64_t v98 = *v106;
          do
          {
            unint64_t v99 = v13 - 2;
            if (v13 < 2) {
              goto LABEL_168;
            }
            if (!v98) {
              goto LABEL_181;
            }
            uint64_t v100 = v97;
            uint64_t v101 = *(void *)&v97[16 * v99 + 32];
            uint64_t v102 = *(void *)&v97[16 * v13 + 24];
            sub_24EF173CC((unsigned __int8 *)(v98 + 48 * v101), (unsigned __int8 *)(v98 + 48 * *(void *)&v97[16 * v13 + 16]), v98 + 48 * v102, v112);
            if (v113) {
              break;
            }
            if (v102 < v101) {
              goto LABEL_169;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v100 = sub_24EF186F0((uint64_t)v100);
            }
            if (v99 >= *((void *)v100 + 2)) {
              goto LABEL_170;
            }
            uint64_t v103 = &v100[16 * v99 + 32];
            *(void *)uint64_t v103 = v101;
            *((void *)v103 + 1) = v102;
            unint64_t v104 = *((void *)v100 + 2);
            if (v13 > v104) {
              goto LABEL_171;
            }
            memmove(&v100[16 * v13 + 16], &v100[16 * v13 + 32], 16 * (v104 - v13));
            char v97 = v100;
            *((void *)v100 + 2) = v104 - 1;
            unint64_t v13 = v104 - 1;
          }
          while (v104 > 2);
        }
LABEL_136:
        swift_bridgeObjectRelease();
        *(void *)(v107 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      uint64_t v107 = MEMORY[0x263F8EE78];
    }
    else
    {
      uint64_t v6 = v5 >> 1;
      uint64_t v7 = sub_24EF87710();
      *(void *)(v7 + 16) = v6;
      uint64_t v107 = v7;
      int64_t v112 = (unsigned __int8 *)(v7 + 32);
    }
    uint64_t v9 = 0;
    uint64_t v10 = *a1;
    uint64_t v11 = *a1 + 40;
    uint64_t v105 = *a1 - 48;
    uint64_t v12 = (char *)MEMORY[0x263F8EE78];
    uint64_t v109 = v11;
    uint64_t v110 = v3;
    uint64_t v111 = v10;
    do
    {
      uint64_t v14 = v9++;
      if (v9 < v3)
      {
        unsigned int v15 = *(unsigned __int8 *)(v11 + 48 * v9);
        switch(*(unsigned char *)(v11 + 48 * v14))
        {
          case 4:
            BOOL v16 = v15 >= 4;
            break;
          case 5:
            BOOL v16 = v15 >= 5;
            break;
          case 6:
            BOOL v16 = v15 >= 6;
            break;
          case 7:
            BOOL v16 = v15 >= 7;
            break;
          case 8:
            BOOL v16 = v15 >= 8;
            break;
          default:
            BOOL v16 = v15 >= *(unsigned __int8 *)(v11 + 48 * v14);
            break;
        }
        int v17 = !v16;
        uint64_t v18 = v14 + 2;
        if (v14 + 2 < v3)
        {
          if (v3 <= v14 + 3) {
            uint64_t v19 = v14 + 3;
          }
          else {
            uint64_t v19 = v3;
          }
          uint64_t v20 = (unsigned __int8 *)(v11 + 48 * v18);
          while (2)
          {
            unsigned int v24 = *v20;
            v20 += 48;
            unsigned int v23 = v24;
            switch(*(unsigned char *)(v11 + 48 * v9))
            {
              case 2:
                BOOL v21 = v23 > 1;
                goto LABEL_33;
              case 3:
                BOOL v21 = v23 > 2;
                goto LABEL_33;
              case 4:
                BOOL v21 = v23 > 3;
                goto LABEL_33;
              case 5:
                BOOL v21 = v23 > 4;
                goto LABEL_33;
              case 6:
                BOOL v21 = v23 > 5;
                goto LABEL_33;
              case 7:
                BOOL v21 = v23 > 6;
                goto LABEL_33;
              case 8:
                BOOL v21 = v23 > 7;
LABEL_33:
                int v22 = v21;
                if ((v17 ^ v22)) {
                  goto LABEL_37;
                }
                break;
              default:
                if (v17 == v23 >= *(unsigned __int8 *)(v11 + 48 * v9)) {
                  break;
                }
LABEL_37:
                uint64_t v9 = v18++;
                if (v18 < v3) {
                  continue;
                }
                uint64_t v18 = v19;
                break;
            }
            break;
          }
        }
        if (v17)
        {
          if (v18 < v14) {
            goto LABEL_175;
          }
          if (v14 < v18)
          {
            uint64_t v25 = 48 * v18;
            uint64_t v26 = 48 * v14;
            uint64_t v27 = v18;
            uint64_t v28 = v14;
            do
            {
              if (v28 != --v27)
              {
                if (!v10) {
                  goto LABEL_180;
                }
                uint64_t v29 = (_OWORD *)(v10 + v26);
                uint64_t v30 = *(void *)(v10 + v26 + 32);
                uint64_t v31 = v10 + v25;
                char v32 = *(unsigned char *)(v10 + v26 + 40);
                long long v33 = *(_OWORD *)(v10 + v26);
                long long v34 = *(_OWORD *)(v10 + v26 + 16);
                long long v36 = *(_OWORD *)(v10 + v25 - 32);
                long long v35 = *(_OWORD *)(v10 + v25 - 16);
                *uint64_t v29 = *(_OWORD *)(v10 + v25 - 48);
                v29[1] = v36;
                v29[2] = v35;
                *(_OWORD *)(v31 - 48) = v33;
                *(_OWORD *)(v31 - 32) = v34;
                *(void *)(v31 - 16) = v30;
                *(unsigned char *)(v31 - 8) = v32;
              }
              ++v28;
              v25 -= 48;
              v26 += 48;
            }
            while (v28 < v27);
          }
        }
        uint64_t v9 = v18;
      }
      if (v9 < v3)
      {
        if (__OFSUB__(v9, v14)) {
          goto LABEL_172;
        }
        if (v9 - v14 < v108)
        {
          if (__OFADD__(v14, v108)) {
            goto LABEL_176;
          }
          if (v14 + v108 >= v3) {
            uint64_t v37 = v3;
          }
          else {
            uint64_t v37 = v14 + v108;
          }
          if (v37 < v14)
          {
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
            JUMPOUT(0x24EF14320);
          }
          if (v9 != v37)
          {
            uint64_t v38 = v105 + 48 * v9;
LABEL_68:
            uint64_t v39 = v14;
            uint64_t v40 = v38;
            while (2)
            {
              uint64_t v41 = (_OWORD *)(v40 + 48);
              unsigned int v42 = *(unsigned __int8 *)(v40 + 88);
              switch(*(unsigned char *)(v40 + 40))
              {
                case 2:
                  if (v42 >= 2) {
                    goto LABEL_67;
                  }
                  goto LABEL_85;
                case 3:
                  if (v42 >= 3) {
                    goto LABEL_67;
                  }
                  goto LABEL_85;
                case 4:
                  if (v42 >= 4) {
                    goto LABEL_67;
                  }
                  goto LABEL_85;
                case 5:
                  if (v42 >= 5) {
                    goto LABEL_67;
                  }
                  goto LABEL_85;
                case 6:
                  if (v42 >= 6) {
                    goto LABEL_67;
                  }
                  goto LABEL_85;
                case 7:
                  if (v42 >= 7) {
                    goto LABEL_67;
                  }
                  goto LABEL_85;
                case 8:
                  if (v42 < 8) {
                    goto LABEL_85;
                  }
                  goto LABEL_67;
                default:
                  if (v42 >= *(unsigned __int8 *)(v40 + 40)) {
                    goto LABEL_67;
                  }
LABEL_85:
                  if (!v10) {
                    goto LABEL_178;
                  }
                  long long v44 = *(_OWORD *)(v40 + 48);
                  long long v43 = *(_OWORD *)(v40 + 64);
                  long long v45 = *(_OWORD *)(v40 + 16);
                  long long v46 = *(_OWORD *)(v40 + 32);
                  _OWORD *v41 = *(_OWORD *)v40;
                  *(_OWORD *)(v40 + 64) = v45;
                  uint64_t v47 = *(void *)(v40 + 80);
                  *(_OWORD *)uint64_t v40 = v44;
                  *(_OWORD *)(v40 + 16) = v43;
                  *(void *)(v40 + 32) = v47;
                  *(unsigned char *)(v40 + 40) = v42;
                  v40 -= 48;
                  ++v39;
                  v41[2] = v46;
                  if (v9 != v39) {
                    continue;
                  }
LABEL_67:
                  ++v9;
                  v38 += 48;
                  if (v9 != v37) {
                    goto LABEL_68;
                  }
                  uint64_t v9 = v37;
                  break;
              }
              break;
            }
          }
        }
      }
      if (v9 < v14) {
        goto LABEL_167;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_24EF185F4(0, *((void *)v12 + 2) + 1, 1, v12);
      }
      unint64_t v49 = *((void *)v12 + 2);
      unint64_t v48 = *((void *)v12 + 3);
      unint64_t v13 = v49 + 1;
      uint64_t v10 = v111;
      if (v49 >= v48 >> 1)
      {
        uint64_t v10 = v111;
        uint64_t v12 = sub_24EF185F4((char *)(v48 > 1), v49 + 1, 1, v12);
      }
      *((void *)v12 + 2) = v13;
      uint64_t v50 = v12 + 32;
      unint64_t v51 = &v12[16 * v49 + 32];
      *(void *)unint64_t v51 = v14;
      *((void *)v51 + 1) = v9;
      if (v49)
      {
        while (1)
        {
          unint64_t v52 = v13 - 1;
          if (v13 >= 4)
          {
            BOOL v57 = &v50[16 * v13];
            uint64_t v58 = *((void *)v57 - 8);
            uint64_t v59 = *((void *)v57 - 7);
            BOOL v63 = __OFSUB__(v59, v58);
            uint64_t v60 = v59 - v58;
            if (v63) {
              goto LABEL_156;
            }
            uint64_t v62 = *((void *)v57 - 6);
            uint64_t v61 = *((void *)v57 - 5);
            BOOL v63 = __OFSUB__(v61, v62);
            uint64_t v55 = v61 - v62;
            char v56 = v63;
            if (v63) {
              goto LABEL_157;
            }
            unint64_t v64 = v13 - 2;
            uint64_t v65 = &v50[16 * v13 - 32];
            uint64_t v67 = *(void *)v65;
            uint64_t v66 = *((void *)v65 + 1);
            BOOL v63 = __OFSUB__(v66, v67);
            uint64_t v68 = v66 - v67;
            if (v63) {
              goto LABEL_158;
            }
            BOOL v63 = __OFADD__(v55, v68);
            uint64_t v69 = v55 + v68;
            if (v63) {
              goto LABEL_160;
            }
            if (v69 >= v60)
            {
              uint64_t v87 = &v50[16 * v52];
              uint64_t v89 = *(void *)v87;
              uint64_t v88 = *((void *)v87 + 1);
              BOOL v63 = __OFSUB__(v88, v89);
              uint64_t v90 = v88 - v89;
              if (v63) {
                goto LABEL_166;
              }
              BOOL v80 = v55 < v90;
              goto LABEL_126;
            }
          }
          else
          {
            if (v13 != 3)
            {
              uint64_t v81 = *((void *)v12 + 4);
              uint64_t v82 = *((void *)v12 + 5);
              BOOL v63 = __OFSUB__(v82, v81);
              uint64_t v74 = v82 - v81;
              char v75 = v63;
              goto LABEL_120;
            }
            uint64_t v54 = *((void *)v12 + 4);
            uint64_t v53 = *((void *)v12 + 5);
            BOOL v63 = __OFSUB__(v53, v54);
            uint64_t v55 = v53 - v54;
            char v56 = v63;
          }
          if (v56) {
            goto LABEL_159;
          }
          unint64_t v64 = v13 - 2;
          uint64_t v70 = &v50[16 * v13 - 32];
          uint64_t v72 = *(void *)v70;
          uint64_t v71 = *((void *)v70 + 1);
          BOOL v73 = __OFSUB__(v71, v72);
          uint64_t v74 = v71 - v72;
          char v75 = v73;
          if (v73) {
            goto LABEL_161;
          }
          uint64_t v76 = &v50[16 * v52];
          uint64_t v78 = *(void *)v76;
          uint64_t v77 = *((void *)v76 + 1);
          BOOL v63 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          if (v63) {
            goto LABEL_163;
          }
          if (__OFADD__(v74, v79)) {
            goto LABEL_165;
          }
          if (v74 + v79 >= v55)
          {
            BOOL v80 = v55 < v79;
LABEL_126:
            if (v80) {
              unint64_t v52 = v64;
            }
            goto LABEL_128;
          }
LABEL_120:
          if (v75) {
            goto LABEL_162;
          }
          uint64_t v83 = &v50[16 * v52];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v63 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v63) {
            goto LABEL_164;
          }
          if (v86 < v74) {
            goto LABEL_15;
          }
LABEL_128:
          unint64_t v91 = v52 - 1;
          if (v52 - 1 >= v13)
          {
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
            goto LABEL_177;
          }
          if (!v10) {
            goto LABEL_179;
          }
          char v92 = &v50[16 * v91];
          uint64_t v93 = *(void *)v92;
          uint64_t v94 = &v50[16 * v52];
          uint64_t v95 = *((void *)v94 + 1);
          sub_24EF173CC((unsigned __int8 *)(v10 + 48 * *(void *)v92), (unsigned __int8 *)(v10 + 48 * *(void *)v94), v10 + 48 * v95, v112);
          if (v113) {
            goto LABEL_136;
          }
          if (v95 < v93) {
            goto LABEL_153;
          }
          if (v52 > *((void *)v12 + 2)) {
            goto LABEL_154;
          }
          *(void *)char v92 = v93;
          *(void *)&v50[16 * v91 + 8] = v95;
          unint64_t v96 = *((void *)v12 + 2);
          if (v52 >= v96) {
            goto LABEL_155;
          }
          unint64_t v13 = v96 - 1;
          memmove(&v50[16 * v52], v94 + 16, 16 * (v96 - 1 - v52));
          *((void *)v12 + 2) = v96 - 1;
          uint64_t v10 = v111;
          if (v96 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v13 = 1;
LABEL_15:
      uint64_t v11 = v109;
      uint64_t v3 = v110;
    }
    while (v9 < v110);
    uint64_t v8 = v107;
    goto LABEL_139;
  }
  if (v3 < 0) {
    goto LABEL_174;
  }
  if (v3) {
    return sub_24EF16E94(0, v3, 1, a1);
  }
  return result;
}

uint64_t sub_24EF1438C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24EF87A40();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_24EF16FBC(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_151;
  }
  uint64_t v114 = result;
  uint64_t v111 = a1;
  if (v3 <= 1)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v117 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_117:
      uint64_t result = v10;
      uint64_t v113 = v7;
      if (v11 >= 2)
      {
        uint64_t v103 = *v111;
        do
        {
          unint64_t v104 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_146;
          }
          if (!v103) {
            goto LABEL_159;
          }
          uint64_t v105 = result;
          uint64_t v106 = *(void *)(result + 32 + 16 * v104);
          uint64_t v107 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_24EF1774C((char *)(v103 + (v106 << 6)), (char *)(v103 + (*(void *)(result + 32 + 16 * (v11 - 1)) << 6)), v103 + (v107 << 6), v117);
          if (v1) {
            break;
          }
          if (v107 < v106) {
            goto LABEL_147;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_24EF186F0(v105);
            uint64_t v105 = result;
          }
          if (v104 >= *(void *)(v105 + 16)) {
            goto LABEL_148;
          }
          uint64_t v108 = (void *)(v105 + 32 + 16 * v104);
          *uint64_t v108 = v106;
          v108[1] = v107;
          unint64_t v109 = *(void *)(v105 + 16);
          if (v11 > v109) {
            goto LABEL_149;
          }
          memmove((void *)(v105 + 32 + 16 * (v11 - 1)), (const void *)(v105 + 32 + 16 * v11), 16 * (v109 - v11));
          uint64_t result = v105;
          *(void *)(v105 + 16) = v109 - 1;
          unint64_t v11 = v109 - 1;
        }
        while (v109 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v113 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v113 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t result = sub_24EF87710();
    *(void *)(result + 16) = v6;
    uint64_t v113 = result;
    uint64_t v117 = (char *)(result + 32);
  }
  uint64_t v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v112 = *a1 + 48;
  uint64_t v110 = *a1 + 56;
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v115 = v3;
  uint64_t v116 = v9;
  while (1)
  {
    uint64_t v12 = v8++;
    if (v8 >= v3) {
      goto LABEL_45;
    }
    uint64_t v13 = v9 + (v8 << 6);
    uint64_t result = *(void *)(v13 + 40);
    uint64_t v14 = *(void *)(v13 + 48);
    uint64_t v15 = v9 + (v12 << 6);
    if (result == *(void *)(v15 + 40) && v14 == *(void *)(v15 + 48))
    {
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_44;
      }
      int v17 = 0;
    }
    else
    {
      uint64_t result = sub_24EF87A60();
      int v17 = result;
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v19 = (void *)(v112 + (v18 << 6));
    do
    {
      uint64_t result = *(v19 - 1);
      uint64_t v21 = v9 + (v8 << 6);
      if (result == *(void *)(v21 + 40) && *v19 == *(void *)(v21 + 48))
      {
        if (v17) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t result = sub_24EF87A60();
        if ((v17 ^ result)) {
          goto LABEL_36;
        }
      }
      uint64_t v20 = v18 + 1;
      v19 += 8;
      uint64_t v8 = v18;
      uint64_t v18 = v20;
    }
    while (v20 < v3);
    uint64_t v18 = v20;
LABEL_36:
    uint64_t v8 = v18;
    if (v17)
    {
LABEL_37:
      if (v18 < v12) {
        goto LABEL_155;
      }
      if (v12 < v18)
      {
        uint64_t v23 = v18 << 6;
        uint64_t v24 = v12 << 6;
        uint64_t v25 = v18;
        uint64_t v26 = v12;
        do
        {
          if (v26 != --v25)
          {
            if (!v9) {
              goto LABEL_158;
            }
            uint64_t v27 = (_OWORD *)(v9 + v24);
            uint64_t v28 = *(void *)(v9 + v24);
            uint64_t v29 = v9 + v23;
            long long v30 = *(_OWORD *)(v9 + v24 + 24);
            long long v31 = *(_OWORD *)(v9 + v24 + 40);
            uint64_t v32 = *(void *)(v9 + v24 + 56);
            long long v33 = *(_OWORD *)(v9 + v24 + 8);
            long long v34 = *(_OWORD *)(v9 + v23 - 16);
            long long v36 = *(_OWORD *)(v9 + v23 - 64);
            long long v35 = *(_OWORD *)(v9 + v23 - 48);
            v27[2] = *(_OWORD *)(v9 + v23 - 32);
            v27[3] = v34;
            *uint64_t v27 = v36;
            v27[1] = v35;
            *(void *)(v29 - 64) = v28;
            *(_OWORD *)(v29 - 56) = v33;
            *(_OWORD *)(v29 - 40) = v30;
            *(_OWORD *)(v29 - 24) = v31;
            *(void *)(v29 - 8) = v32;
          }
          ++v26;
          v23 -= 64;
          v24 += 64;
        }
        while (v26 < v25);
      }
LABEL_44:
      uint64_t v8 = v18;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12)) {
        goto LABEL_150;
      }
      if (v8 - v12 < v114) {
        break;
      }
    }
LABEL_66:
    if (v8 < v12) {
      goto LABEL_145;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_24EF185F4(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    unint64_t v54 = *(void *)(v10 + 16);
    unint64_t v53 = *(void *)(v10 + 24);
    unint64_t v11 = v54 + 1;
    if (v54 >= v53 >> 1)
    {
      uint64_t result = (uint64_t)sub_24EF185F4((char *)(v53 > 1), v54 + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    *(void *)(v10 + 16) = v11;
    uint64_t v55 = v10 + 32;
    char v56 = (uint64_t *)(v10 + 32 + 16 * v54);
    *char v56 = v12;
    v56[1] = v8;
    if (v54)
    {
      uint64_t v9 = v116;
      while (1)
      {
        unint64_t v57 = v11 - 1;
        if (v11 >= 4)
        {
          unint64_t v62 = v55 + 16 * v11;
          uint64_t v63 = *(void *)(v62 - 64);
          uint64_t v64 = *(void *)(v62 - 56);
          BOOL v68 = __OFSUB__(v64, v63);
          uint64_t v65 = v64 - v63;
          if (v68) {
            goto LABEL_134;
          }
          uint64_t v67 = *(void *)(v62 - 48);
          uint64_t v66 = *(void *)(v62 - 40);
          BOOL v68 = __OFSUB__(v66, v67);
          uint64_t v60 = v66 - v67;
          char v61 = v68;
          if (v68) {
            goto LABEL_135;
          }
          unint64_t v69 = v11 - 2;
          uint64_t v70 = (uint64_t *)(v55 + 16 * (v11 - 2));
          uint64_t v72 = *v70;
          uint64_t v71 = v70[1];
          BOOL v68 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          if (v68) {
            goto LABEL_136;
          }
          BOOL v68 = __OFADD__(v60, v73);
          uint64_t v74 = v60 + v73;
          if (v68) {
            goto LABEL_138;
          }
          if (v74 >= v65)
          {
            char v92 = (uint64_t *)(v55 + 16 * v57);
            uint64_t v94 = *v92;
            uint64_t v93 = v92[1];
            BOOL v68 = __OFSUB__(v93, v94);
            uint64_t v95 = v93 - v94;
            if (v68) {
              goto LABEL_144;
            }
            BOOL v85 = v60 < v95;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v86 = *(void *)(v10 + 32);
            uint64_t v87 = *(void *)(v10 + 40);
            BOOL v68 = __OFSUB__(v87, v86);
            uint64_t v79 = v87 - v86;
            char v80 = v68;
            goto LABEL_98;
          }
          uint64_t v59 = *(void *)(v10 + 32);
          uint64_t v58 = *(void *)(v10 + 40);
          BOOL v68 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          char v61 = v68;
        }
        if (v61) {
          goto LABEL_137;
        }
        unint64_t v69 = v11 - 2;
        char v75 = (uint64_t *)(v55 + 16 * (v11 - 2));
        uint64_t v77 = *v75;
        uint64_t v76 = v75[1];
        BOOL v78 = __OFSUB__(v76, v77);
        uint64_t v79 = v76 - v77;
        char v80 = v78;
        if (v78) {
          goto LABEL_139;
        }
        uint64_t v81 = (uint64_t *)(v55 + 16 * v57);
        uint64_t v83 = *v81;
        uint64_t v82 = v81[1];
        BOOL v68 = __OFSUB__(v82, v83);
        uint64_t v84 = v82 - v83;
        if (v68) {
          goto LABEL_141;
        }
        if (__OFADD__(v79, v84)) {
          goto LABEL_143;
        }
        if (v79 + v84 >= v60)
        {
          BOOL v85 = v60 < v84;
LABEL_104:
          if (v85) {
            unint64_t v57 = v69;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v80) {
          goto LABEL_140;
        }
        uint64_t v88 = (uint64_t *)(v55 + 16 * v57);
        uint64_t v90 = *v88;
        uint64_t v89 = v88[1];
        BOOL v68 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v68) {
          goto LABEL_142;
        }
        if (v91 < v79) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v96 = v57 - 1;
        if (v57 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v9) {
          goto LABEL_157;
        }
        uint64_t v97 = v9;
        uint64_t v98 = (uint64_t *)(v55 + 16 * v96);
        uint64_t v99 = *v98;
        uint64_t v100 = (void *)(v55 + 16 * v57);
        uint64_t v101 = v100[1];
        uint64_t result = sub_24EF1774C((char *)(v97 + (*v98 << 6)), (char *)(v97 + (*v100 << 6)), v97 + (v101 << 6), v117);
        if (v1) {
          goto LABEL_114;
        }
        if (v101 < v99) {
          goto LABEL_131;
        }
        if (v57 > *(void *)(v10 + 16)) {
          goto LABEL_132;
        }
        *uint64_t v98 = v99;
        *(void *)(v55 + 16 * v96 + 8) = v101;
        unint64_t v102 = *(void *)(v10 + 16);
        if (v57 >= v102) {
          goto LABEL_133;
        }
        unint64_t v11 = v102 - 1;
        uint64_t result = (uint64_t)memmove((void *)(v55 + 16 * v57), v100 + 2, 16 * (v102 - 1 - v57));
        *(void *)(v10 + 16) = v102 - 1;
        BOOL v85 = v102 > 2;
        uint64_t v9 = v116;
        if (!v85) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
    uint64_t v9 = v116;
LABEL_15:
    uint64_t v3 = v115;
    if (v8 >= v115)
    {
      uint64_t v7 = v113;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v114)) {
    goto LABEL_153;
  }
  if (v12 + v114 >= v3) {
    uint64_t v37 = v3;
  }
  else {
    uint64_t v37 = v12 + v114;
  }
  if (v37 >= v12)
  {
    if (v8 != v37)
    {
      uint64_t v38 = v110 + (v8 << 6);
      do
      {
        uint64_t v39 = v9 + (v8 << 6);
        uint64_t result = *(void *)(v39 + 40);
        uint64_t v40 = *(void *)(v39 + 48);
        uint64_t v41 = v12;
        uint64_t v42 = v38;
        do
        {
          if (result == *(void *)(v42 - 80) && v40 == *(void *)(v42 - 72)) {
            break;
          }
          uint64_t result = sub_24EF87A60();
          if ((result & 1) == 0) {
            break;
          }
          if (!v9) {
            goto LABEL_156;
          }
          long long v44 = (_OWORD *)(v42 - 56);
          long long v45 = (_OWORD *)(v42 - 120);
          long long v47 = *(_OWORD *)(v42 - 88);
          long long v46 = *(_OWORD *)(v42 - 72);
          *(void *)(v42 - 64) = *(void *)v42;
          v42 -= 64;
          uint64_t v48 = *(void *)(v42 + 8);
          uint64_t v49 = *(void *)(v42 + 32);
          uint64_t v50 = *(void *)(v42 + 40);
          long long v51 = *(_OWORD *)(v42 + 16);
          long long v52 = v45[1];
          _OWORD *v44 = *v45;
          v44[1] = v52;
          uint64_t result = *(void *)(v42 + 48);
          uint64_t v40 = *(void *)(v42 + 56);
          v44[2] = v47;
          v44[3] = v46;
          *(void *)(v42 - 56) = v48;
          *(_OWORD *)(v42 - 48) = v51;
          *(void *)(v42 - 32) = v49;
          *(void *)(v42 - 24) = v50;
          ++v41;
          *(void *)(v42 - 16) = result;
          *(void *)(v42 - 8) = v40;
        }
        while (v8 != v41);
        ++v8;
        v38 += 64;
      }
      while (v8 != v37);
      uint64_t v8 = v37;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_24EF14A74(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24EF87A40();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v90 = 0;
      uint64_t v91 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v93 = *(void *)(v91 + 72 * i + 56);
        uint64_t v94 = v90;
        do
        {
          uint64_t v95 = v91 + v94;
          if (v93 >= *(void *)(v91 + v94 + 56)) {
            break;
          }
          if (!v91) {
            goto LABEL_142;
          }
          uint64_t v96 = *(void *)(v95 + 72);
          uint64_t v97 = v91 + v94;
          uint64_t v98 = *(void *)(v91 + v94 + 112);
          uint64_t result = *(void *)(v91 + v94 + 120);
          uint64_t v99 = *(void *)(v91 + v94 + 136);
          long long v101 = *(_OWORD *)(v91 + v94 + 80);
          long long v100 = *(_OWORD *)(v91 + v94 + 96);
          long long v102 = *(_OWORD *)(v95 + 48);
          *(_OWORD *)(v95 + 104) = *(_OWORD *)(v95 + 32);
          *(_OWORD *)(v95 + 120) = v102;
          *(void *)(v95 + 136) = *(void *)(v95 + 64);
          long long v103 = *(_OWORD *)(v95 + 16);
          *(_OWORD *)(v95 + 72) = *(_OWORD *)v95;
          *(_OWORD *)(v95 + 88) = v103;
          *(void *)uint64_t v97 = v96;
          *(_OWORD *)(v97 + 8) = v101;
          *(_OWORD *)(v97 + 24) = v100;
          *(void *)(v97 + 40) = v98;
          *(void *)(v97 + 48) = result;
          *(void *)(v95 + 56) = v93;
          v94 -= 72;
          *(void *)(v97 + 64) = v99;
        }
        while (v94 != -72);
        v90 += 72;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v116 = result;
    uint64_t v124 = v1;
    uint64_t v113 = a1;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = sub_24EF87710();
      *(void *)(result + 16) = v6;
      uint64_t v115 = result;
      uint64_t v122 = (char *)(result + 32);
LABEL_13:
      uint64_t v8 = 0;
      uint64_t v9 = *a1;
      uint64_t v114 = *a1 + 200;
      uint64_t v112 = *a1 + 64;
      uint64_t v10 = MEMORY[0x263F8EE78];
      uint64_t v117 = v3;
      uint64_t v123 = v9;
      while (1)
      {
        uint64_t v12 = v8++;
        if (v8 < v3)
        {
          uint64_t v13 = *(void *)(v9 + 72 * v8 + 56);
          uint64_t v14 = *(void *)(v9 + 72 * v12 + 56);
          uint64_t v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            uint64_t v15 = (uint64_t *)(v114 + 72 * v12);
            uint64_t v16 = v13;
            while (1)
            {
              uint64_t v18 = *v15;
              v15 += 9;
              uint64_t v17 = v18;
              if (v13 < v14 == v18 >= v16) {
                break;
              }
              ++v8;
              uint64_t v16 = v17;
              if (v3 == v8)
              {
                uint64_t v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_139;
            }
            if (v12 < v8)
            {
              uint64_t v19 = 72 * v8;
              uint64_t v20 = 72 * v12;
              uint64_t v21 = v8;
              uint64_t v111 = v12;
              do
              {
                if (v12 != --v21)
                {
                  if (!v9) {
                    goto LABEL_145;
                  }
                  uint64_t v22 = v10;
                  uint64_t v23 = v9 + v19;
                  uint64_t v24 = *(void *)(v9 + v20);
                  long long v120 = *(_OWORD *)(v9 + v20 + 40);
                  long long v121 = *(_OWORD *)(v9 + v20 + 24);
                  uint64_t v25 = *(void *)(v9 + v20 + 56);
                  uint64_t v119 = *(void *)(v9 + v20 + 64);
                  long long v118 = *(_OWORD *)(v9 + v20 + 8);
                  uint64_t result = (uint64_t)memmove((void *)(v9 + v20), (const void *)(v9 + v19 - 72), 0x48uLL);
                  uint64_t v9 = v123;
                  *(void *)(v23 - 72) = v24;
                  *(_OWORD *)(v23 - 64) = v118;
                  *(_OWORD *)(v23 - 48) = v121;
                  *(_OWORD *)(v23 - 32) = v120;
                  *(void *)(v23 - 16) = v25;
                  *(void *)(v23 - 8) = v119;
                  uint64_t v10 = v22;
                }
                ++v12;
                v19 -= 72;
                v20 += 72;
              }
              while (v12 < v21);
              uint64_t v3 = v117;
              uint64_t v12 = v111;
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_136;
          }
          if (v8 - v12 < v116)
          {
            uint64_t v26 = v12 + v116;
            if (__OFADD__(v12, v116)) {
              goto LABEL_140;
            }
            if (v26 >= v3) {
              uint64_t v26 = v3;
            }
            if (v26 < v12)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v8 != v26)
            {
              uint64_t v27 = (uint64_t *)(v112 + 72 * v8);
              do
              {
                uint64_t v28 = *(void *)(v9 + 72 * v8 + 56);
                uint64_t v29 = v27;
                uint64_t v30 = v12;
                do
                {
                  if (v28 >= *(v29 - 10)) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_143;
                  }
                  long long v31 = v29 - 8;
                  uint64_t v32 = *(v29 - 8);
                  uint64_t v33 = *(v29 - 5);
                  uint64_t v34 = *(v29 - 4);
                  uint64_t v35 = *(v29 - 3);
                  uint64_t result = *(v29 - 2);
                  uint64_t v36 = *v29;
                  long long v37 = *(_OWORD *)(v29 - 7);
                  long long v38 = *(_OWORD *)(v29 - 11);
                  *((_OWORD *)v31 + 2) = *(_OWORD *)(v29 - 13);
                  *((_OWORD *)v31 + 3) = v38;
                  *uint64_t v29 = *(v29 - 9);
                  long long v39 = *(_OWORD *)(v29 - 15);
                  *(_OWORD *)long long v31 = *(_OWORD *)(v29 - 17);
                  *((_OWORD *)v31 + 1) = v39;
                  *(v29 - 9) = v36;
                  v29 -= 9;
                  *(v29 - 8) = v32;
                  *(_OWORD *)(v29 - 7) = v37;
                  *(v29 - 5) = v33;
                  *(v29 - 4) = v34;
                  *(v29 - 3) = v35;
                  *(v29 - 2) = result;
                  ++v30;
                  *(v29 - 1) = v28;
                }
                while (v8 != v30);
                ++v8;
                v27 += 9;
              }
              while (v8 != v26);
              uint64_t v8 = v26;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_24EF185F4(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
          uint64_t v10 = result;
        }
        unint64_t v41 = *(void *)(v10 + 16);
        unint64_t v40 = *(void *)(v10 + 24);
        unint64_t v11 = v41 + 1;
        uint64_t v9 = v123;
        if (v41 >= v40 >> 1)
        {
          uint64_t result = (uint64_t)sub_24EF185F4((char *)(v40 > 1), v41 + 1, 1, (char *)v10);
          uint64_t v9 = v123;
          uint64_t v10 = result;
        }
        *(void *)(v10 + 16) = v11;
        uint64_t v42 = v10 + 32;
        long long v43 = (uint64_t *)(v10 + 32 + 16 * v41);
        *long long v43 = v12;
        v43[1] = v8;
        if (v41)
        {
          while (1)
          {
            unint64_t v44 = v11 - 1;
            if (v11 >= 4)
            {
              unint64_t v49 = v42 + 16 * v11;
              uint64_t v50 = *(void *)(v49 - 64);
              uint64_t v51 = *(void *)(v49 - 56);
              BOOL v55 = __OFSUB__(v51, v50);
              uint64_t v52 = v51 - v50;
              if (v55) {
                goto LABEL_120;
              }
              uint64_t v54 = *(void *)(v49 - 48);
              uint64_t v53 = *(void *)(v49 - 40);
              BOOL v55 = __OFSUB__(v53, v54);
              uint64_t v47 = v53 - v54;
              char v48 = v55;
              if (v55) {
                goto LABEL_121;
              }
              unint64_t v56 = v11 - 2;
              unint64_t v57 = (uint64_t *)(v42 + 16 * (v11 - 2));
              uint64_t v59 = *v57;
              uint64_t v58 = v57[1];
              BOOL v55 = __OFSUB__(v58, v59);
              uint64_t v60 = v58 - v59;
              if (v55) {
                goto LABEL_122;
              }
              BOOL v55 = __OFADD__(v47, v60);
              uint64_t v61 = v47 + v60;
              if (v55) {
                goto LABEL_124;
              }
              if (v61 >= v52)
              {
                uint64_t v79 = (uint64_t *)(v42 + 16 * v44);
                uint64_t v81 = *v79;
                uint64_t v80 = v79[1];
                BOOL v55 = __OFSUB__(v80, v81);
                uint64_t v82 = v80 - v81;
                if (v55) {
                  goto LABEL_130;
                }
                BOOL v72 = v47 < v82;
                goto LABEL_84;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v73 = *(void *)(v10 + 32);
                uint64_t v74 = *(void *)(v10 + 40);
                BOOL v55 = __OFSUB__(v74, v73);
                uint64_t v66 = v74 - v73;
                char v67 = v55;
                goto LABEL_78;
              }
              uint64_t v46 = *(void *)(v10 + 32);
              uint64_t v45 = *(void *)(v10 + 40);
              BOOL v55 = __OFSUB__(v45, v46);
              uint64_t v47 = v45 - v46;
              char v48 = v55;
            }
            if (v48) {
              goto LABEL_123;
            }
            unint64_t v56 = v11 - 2;
            unint64_t v62 = (uint64_t *)(v42 + 16 * (v11 - 2));
            uint64_t v64 = *v62;
            uint64_t v63 = v62[1];
            BOOL v65 = __OFSUB__(v63, v64);
            uint64_t v66 = v63 - v64;
            char v67 = v65;
            if (v65) {
              goto LABEL_125;
            }
            BOOL v68 = (uint64_t *)(v42 + 16 * v44);
            uint64_t v70 = *v68;
            uint64_t v69 = v68[1];
            BOOL v55 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v55) {
              goto LABEL_127;
            }
            if (__OFADD__(v66, v71)) {
              goto LABEL_129;
            }
            if (v66 + v71 >= v47)
            {
              BOOL v72 = v47 < v71;
LABEL_84:
              if (v72) {
                unint64_t v44 = v56;
              }
              goto LABEL_86;
            }
LABEL_78:
            if (v67) {
              goto LABEL_126;
            }
            char v75 = (uint64_t *)(v42 + 16 * v44);
            uint64_t v77 = *v75;
            uint64_t v76 = v75[1];
            BOOL v55 = __OFSUB__(v76, v77);
            uint64_t v78 = v76 - v77;
            if (v55) {
              goto LABEL_128;
            }
            if (v78 < v66) {
              goto LABEL_15;
            }
LABEL_86:
            unint64_t v83 = v44 - 1;
            if (v44 - 1 >= v11)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v9) {
              goto LABEL_144;
            }
            uint64_t v84 = v10;
            BOOL v85 = (uint64_t *)(v42 + 16 * v83);
            uint64_t v86 = *v85;
            uint64_t v87 = (void *)(v42 + 16 * v44);
            uint64_t v88 = v87[1];
            uint64_t result = sub_24EF179A4((char *)(v9 + 72 * *v85), (char *)(v9 + 72 * *v87), v9 + 72 * v88, v122);
            if (v124) {
              goto LABEL_94;
            }
            if (v88 < v86) {
              goto LABEL_117;
            }
            if (v44 > *(void *)(v84 + 16)) {
              goto LABEL_118;
            }
            uint64_t *v85 = v86;
            *(void *)(v42 + 16 * v83 + 8) = v88;
            unint64_t v89 = *(void *)(v84 + 16);
            if (v44 >= v89) {
              goto LABEL_119;
            }
            uint64_t v10 = v84;
            unint64_t v11 = v89 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v42 + 16 * v44), v87 + 2, 16 * (v89 - 1 - v44));
            *(void *)(v84 + 16) = v89 - 1;
            uint64_t v9 = v123;
            if (v89 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        uint64_t v3 = v117;
        if (v8 >= v117)
        {
          uint64_t v7 = v115;
          goto LABEL_103;
        }
      }
    }
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v122 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 == 1)
    {
      uint64_t v115 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_103:
    uint64_t result = v10;
    uint64_t v115 = v7;
    if (v11 >= 2)
    {
      uint64_t v104 = *v113;
      do
      {
        unint64_t v105 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_132;
        }
        if (!v104) {
          goto LABEL_146;
        }
        uint64_t v106 = result;
        uint64_t v107 = *(void *)(result + 32 + 16 * v105);
        uint64_t v108 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
        uint64_t result = sub_24EF179A4((char *)(v104 + 72 * v107), (char *)(v104 + 72 * *(void *)(result + 32 + 16 * (v11 - 1))), v104 + 72 * v108, v122);
        if (v124) {
          break;
        }
        if (v108 < v107) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_24EF186F0(v106);
          uint64_t v106 = result;
        }
        if (v105 >= *(void *)(v106 + 16)) {
          goto LABEL_134;
        }
        unint64_t v109 = (void *)(v106 + 32 + 16 * v105);
        *unint64_t v109 = v107;
        v109[1] = v108;
        unint64_t v110 = *(void *)(v106 + 16);
        if (v11 > v110) {
          goto LABEL_135;
        }
        memmove((void *)(v106 + 32 + 16 * (v11 - 1)), (const void *)(v106 + 32 + 16 * v11), 16 * (v110 - v11));
        uint64_t result = v106;
        *(void *)(v106 + 16) = v110 - 1;
        unint64_t v11 = v110 - 1;
      }
      while (v110 > 2);
    }
LABEL_94:
    swift_bridgeObjectRelease();
    *(void *)(v115 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EF151DC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24EF87A40();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_153;
    }
    if (v3) {
      return sub_24EF170B0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_152;
  }
  uint64_t v106 = result;
  long long v103 = a1;
  if (v3 > 1)
  {
    uint64_t v6 = v5 >> 1;
    uint64_t result = sub_24EF87710();
    *(void *)(result + 16) = v6;
    uint64_t v105 = result;
    uint64_t v114 = (char *)(result + 32);
LABEL_13:
    uint64_t v8 = 0;
    uint64_t v9 = *a1;
    uint64_t v104 = *a1 + 64;
    uint64_t v10 = MEMORY[0x263F8EE78];
    uint64_t v107 = v3;
    uint64_t v115 = *a1;
    while (1)
    {
      uint64_t v12 = v8++;
      if (v8 >= v3) {
        goto LABEL_46;
      }
      uint64_t v13 = v9 + 72 * v8;
      uint64_t result = *(void *)(v13 + 56);
      uint64_t v14 = *(void *)(v13 + 64);
      uint64_t v15 = v9 + 72 * v12;
      if (result == *(void *)(v15 + 56) && v14 == *(void *)(v15 + 64))
      {
        uint64_t v18 = v12 + 2;
        if (v12 + 2 >= v3)
        {
          uint64_t v8 = v12 + 2;
          goto LABEL_68;
        }
        int v17 = 0;
      }
      else
      {
        uint64_t result = sub_24EF87A60();
        int v17 = result;
        uint64_t v18 = v12 + 2;
        if (v12 + 2 >= v3) {
          goto LABEL_37;
        }
      }
      uint64_t v19 = (void *)(v104 + 72 * v18);
      do
      {
        uint64_t result = *(v19 - 1);
        uint64_t v21 = v9 + 72 * v8;
        if (result == *(void *)(v21 + 56) && *v19 == *(void *)(v21 + 64))
        {
          if (v17) {
            goto LABEL_38;
          }
        }
        else
        {
          uint64_t result = sub_24EF87A60();
          if ((v17 ^ result)) {
            goto LABEL_37;
          }
        }
        uint64_t v20 = v18 + 1;
        v19 += 9;
        uint64_t v8 = v18;
        uint64_t v18 = v20;
      }
      while (v20 < v3);
      uint64_t v18 = v20;
LABEL_37:
      uint64_t v8 = v18;
      if ((v17 & 1) == 0) {
        goto LABEL_46;
      }
LABEL_38:
      if (v18 < v12) {
        goto LABEL_156;
      }
      if (v12 >= v18)
      {
        uint64_t v8 = v18;
LABEL_46:
        if (v8 >= v3) {
          goto LABEL_68;
        }
        goto LABEL_47;
      }
      uint64_t v23 = 72 * v18;
      uint64_t v24 = 72 * v12;
      uint64_t v25 = v18;
      uint64_t v26 = v12;
      do
      {
        if (v26 != --v25)
        {
          if (!v9) {
            goto LABEL_159;
          }
          uint64_t v27 = v9 + v24;
          uint64_t v28 = v9 + v23;
          uint64_t v29 = (const void *)(v9 + v23 - 72);
          uint64_t v30 = *(void *)(v9 + v24);
          uint64_t v110 = *(void *)(v27 + 32);
          uint64_t v111 = *(void *)(v27 + 24);
          uint64_t v112 = *(void *)(v27 + 64);
          uint64_t v113 = *(void *)(v27 + 56);
          long long v108 = *(_OWORD *)(v27 + 8);
          long long v109 = *(_OWORD *)(v27 + 40);
          uint64_t result = (uint64_t)memmove((void *)v27, v29, 0x48uLL);
          *(void *)(v28 - 72) = v30;
          *(_OWORD *)(v28 - 64) = v108;
          uint64_t v9 = v115;
          *(void *)(v28 - 48) = v111;
          *(void *)(v28 - 40) = v110;
          *(_OWORD *)(v28 - 32) = v109;
          *(void *)(v28 - 16) = v113;
          *(void *)(v28 - 8) = v112;
        }
        ++v26;
        v23 -= 72;
        v24 += 72;
      }
      while (v26 < v25);
      uint64_t v8 = v18;
      uint64_t v3 = v107;
      if (v18 >= v107) {
        goto LABEL_68;
      }
LABEL_47:
      if (__OFSUB__(v8, v12)) {
        goto LABEL_151;
      }
      if (v8 - v12 < v106)
      {
        if (__OFADD__(v12, v106)) {
          goto LABEL_154;
        }
        if (v12 + v106 >= v3) {
          uint64_t v31 = v3;
        }
        else {
          uint64_t v31 = v12 + v106;
        }
        if (v31 < v12)
        {
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
          return result;
        }
        if (v8 != v31)
        {
          uint64_t v32 = (uint64_t *)(v104 + 72 * v8);
          do
          {
            uint64_t v33 = v9 + 72 * v8;
            uint64_t result = *(void *)(v33 + 56);
            uint64_t v34 = *(void *)(v33 + 64);
            uint64_t v35 = v12;
            uint64_t v36 = v32;
            do
            {
              if (result == *(v36 - 10) && v34 == *(v36 - 9)) {
                break;
              }
              uint64_t result = sub_24EF87A60();
              if ((result & 1) == 0) {
                break;
              }
              if (!v9) {
                goto LABEL_157;
              }
              long long v38 = v36 - 8;
              uint64_t v39 = *(v36 - 8);
              uint64_t v40 = *(v36 - 5);
              uint64_t v41 = *(v36 - 4);
              uint64_t result = *(v36 - 1);
              uint64_t v34 = *v36;
              long long v42 = *(_OWORD *)(v36 - 7);
              long long v43 = *(_OWORD *)(v36 - 3);
              long long v44 = *(_OWORD *)(v36 - 11);
              *((_OWORD *)v38 + 2) = *(_OWORD *)(v36 - 13);
              *((_OWORD *)v38 + 3) = v44;
              *uint64_t v36 = *(v36 - 9);
              long long v45 = *(_OWORD *)(v36 - 15);
              *(_OWORD *)long long v38 = *(_OWORD *)(v36 - 17);
              *((_OWORD *)v38 + 1) = v45;
              *(v36 - 9) = v34;
              v36 -= 9;
              *(v36 - 8) = v39;
              *(_OWORD *)(v36 - 7) = v42;
              *(v36 - 5) = v40;
              *(v36 - 4) = v41;
              *(_OWORD *)(v36 - 3) = v43;
              ++v35;
              *(v36 - 1) = result;
            }
            while (v8 != v35);
            ++v8;
            v32 += 9;
          }
          while (v8 != v31);
          uint64_t v8 = v31;
        }
      }
LABEL_68:
      if (v8 < v12) {
        goto LABEL_146;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24EF185F4(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
        uint64_t v10 = result;
      }
      unint64_t v47 = *(void *)(v10 + 16);
      unint64_t v46 = *(void *)(v10 + 24);
      unint64_t v11 = v47 + 1;
      if (v47 >= v46 >> 1)
      {
        uint64_t result = (uint64_t)sub_24EF185F4((char *)(v46 > 1), v47 + 1, 1, (char *)v10);
        uint64_t v10 = result;
      }
      *(void *)(v10 + 16) = v11;
      uint64_t v48 = v10 + 32;
      unint64_t v49 = (uint64_t *)(v10 + 32 + 16 * v47);
      *unint64_t v49 = v12;
      v49[1] = v8;
      if (v47)
      {
        while (1)
        {
          unint64_t v50 = v11 - 1;
          if (v11 >= 4)
          {
            unint64_t v55 = v48 + 16 * v11;
            uint64_t v56 = *(void *)(v55 - 64);
            uint64_t v57 = *(void *)(v55 - 56);
            BOOL v61 = __OFSUB__(v57, v56);
            uint64_t v58 = v57 - v56;
            if (v61) {
              goto LABEL_135;
            }
            uint64_t v60 = *(void *)(v55 - 48);
            uint64_t v59 = *(void *)(v55 - 40);
            BOOL v61 = __OFSUB__(v59, v60);
            uint64_t v53 = v59 - v60;
            char v54 = v61;
            if (v61) {
              goto LABEL_136;
            }
            unint64_t v62 = v11 - 2;
            uint64_t v63 = (uint64_t *)(v48 + 16 * (v11 - 2));
            uint64_t v65 = *v63;
            uint64_t v64 = v63[1];
            BOOL v61 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v61) {
              goto LABEL_137;
            }
            BOOL v61 = __OFADD__(v53, v66);
            uint64_t v67 = v53 + v66;
            if (v61) {
              goto LABEL_139;
            }
            if (v67 >= v58)
            {
              BOOL v85 = (uint64_t *)(v48 + 16 * v50);
              uint64_t v87 = *v85;
              uint64_t v86 = v85[1];
              BOOL v61 = __OFSUB__(v86, v87);
              uint64_t v88 = v86 - v87;
              if (v61) {
                goto LABEL_145;
              }
              BOOL v78 = v53 < v88;
              goto LABEL_105;
            }
          }
          else
          {
            if (v11 != 3)
            {
              uint64_t v79 = *(void *)(v10 + 32);
              uint64_t v80 = *(void *)(v10 + 40);
              BOOL v61 = __OFSUB__(v80, v79);
              uint64_t v72 = v80 - v79;
              char v73 = v61;
              goto LABEL_99;
            }
            uint64_t v52 = *(void *)(v10 + 32);
            uint64_t v51 = *(void *)(v10 + 40);
            BOOL v61 = __OFSUB__(v51, v52);
            uint64_t v53 = v51 - v52;
            char v54 = v61;
          }
          if (v54) {
            goto LABEL_138;
          }
          unint64_t v62 = v11 - 2;
          BOOL v68 = (uint64_t *)(v48 + 16 * (v11 - 2));
          uint64_t v70 = *v68;
          uint64_t v69 = v68[1];
          BOOL v71 = __OFSUB__(v69, v70);
          uint64_t v72 = v69 - v70;
          char v73 = v71;
          if (v71) {
            goto LABEL_140;
          }
          uint64_t v74 = (uint64_t *)(v48 + 16 * v50);
          uint64_t v76 = *v74;
          uint64_t v75 = v74[1];
          BOOL v61 = __OFSUB__(v75, v76);
          uint64_t v77 = v75 - v76;
          if (v61) {
            goto LABEL_142;
          }
          if (__OFADD__(v72, v77)) {
            goto LABEL_144;
          }
          if (v72 + v77 >= v53)
          {
            BOOL v78 = v53 < v77;
LABEL_105:
            if (v78) {
              unint64_t v50 = v62;
            }
            goto LABEL_107;
          }
LABEL_99:
          if (v73) {
            goto LABEL_141;
          }
          uint64_t v81 = (uint64_t *)(v48 + 16 * v50);
          uint64_t v83 = *v81;
          uint64_t v82 = v81[1];
          BOOL v61 = __OFSUB__(v82, v83);
          uint64_t v84 = v82 - v83;
          if (v61) {
            goto LABEL_143;
          }
          if (v84 < v72) {
            goto LABEL_15;
          }
LABEL_107:
          unint64_t v89 = v50 - 1;
          if (v50 - 1 >= v11)
          {
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
            goto LABEL_155;
          }
          if (!v9) {
            goto LABEL_158;
          }
          uint64_t v90 = v9;
          uint64_t v91 = (uint64_t *)(v48 + 16 * v89);
          uint64_t v92 = *v91;
          uint64_t v93 = (void *)(v48 + 16 * v50);
          uint64_t v94 = v93[1];
          uint64_t result = sub_24EF17C04((char *)(v90 + 72 * *v91), (char *)(v90 + 72 * *v93), v90 + 72 * v94, v114);
          if (v1) {
            goto LABEL_115;
          }
          if (v94 < v92) {
            goto LABEL_132;
          }
          if (v50 > *(void *)(v10 + 16)) {
            goto LABEL_133;
          }
          *uint64_t v91 = v92;
          *(void *)(v48 + 16 * v89 + 8) = v94;
          unint64_t v95 = *(void *)(v10 + 16);
          if (v50 >= v95) {
            goto LABEL_134;
          }
          unint64_t v11 = v95 - 1;
          uint64_t result = (uint64_t)memmove((void *)(v48 + 16 * v50), v93 + 2, 16 * (v95 - 1 - v50));
          *(void *)(v10 + 16) = v95 - 1;
          uint64_t v9 = v115;
          if (v95 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v11 = 1;
LABEL_15:
      uint64_t v3 = v107;
      if (v8 >= v107)
      {
        uint64_t v7 = v105;
        goto LABEL_118;
      }
    }
  }
  uint64_t v7 = MEMORY[0x263F8EE78];
  uint64_t v114 = (char *)(MEMORY[0x263F8EE78] + 32);
  if (v3 == 1)
  {
    uint64_t v105 = MEMORY[0x263F8EE78];
    goto LABEL_13;
  }
  unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_118:
  uint64_t result = v10;
  uint64_t v105 = v7;
  if (v11 >= 2)
  {
    uint64_t v96 = *v103;
    do
    {
      unint64_t v97 = v11 - 2;
      if (v11 < 2) {
        goto LABEL_147;
      }
      if (!v96) {
        goto LABEL_160;
      }
      uint64_t v98 = result;
      uint64_t v99 = *(void *)(result + 32 + 16 * v97);
      uint64_t v100 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
      uint64_t result = sub_24EF17C04((char *)(v96 + 72 * v99), (char *)(v96 + 72 * *(void *)(result + 32 + 16 * (v11 - 1))), v96 + 72 * v100, v114);
      if (v1) {
        break;
      }
      if (v100 < v99) {
        goto LABEL_148;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24EF186F0(v98);
        uint64_t v98 = result;
      }
      if (v97 >= *(void *)(v98 + 16)) {
        goto LABEL_149;
      }
      long long v101 = (void *)(v98 + 32 + 16 * v97);
      void *v101 = v99;
      v101[1] = v100;
      unint64_t v102 = *(void *)(v98 + 16);
      if (v11 > v102) {
        goto LABEL_150;
      }
      memmove((void *)(v98 + 32 + 16 * (v11 - 1)), (const void *)(v98 + 32 + 16 * v11), 16 * (v102 - v11));
      uint64_t result = v98;
      *(void *)(v98 + 16) = v102 - 1;
      unint64_t v11 = v102 - 1;
    }
    while (v102 > 2);
  }
LABEL_115:
  swift_bridgeObjectRelease();
  *(void *)(v105 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF15938(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24EF87A40();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_154;
    }
    if (v3) {
      return sub_24EF171BC(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_153;
  }
  uint64_t v108 = result;
  uint64_t v105 = a1;
  if (v3 <= 1)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v114 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_119:
      uint64_t result = v10;
      uint64_t v107 = v7;
      if (v11 >= 2)
      {
        uint64_t v98 = *v105;
        do
        {
          unint64_t v99 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_148;
          }
          if (!v98) {
            goto LABEL_161;
          }
          uint64_t v100 = result;
          uint64_t v101 = *(void *)(result + 32 + 16 * v99);
          uint64_t v102 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_24EF17E84((char *)(v98 + 72 * v101), (char *)(v98 + 72 * *(void *)(result + 32 + 16 * (v11 - 1))), v98 + 72 * v102, v114);
          if (v1) {
            break;
          }
          if (v102 < v101) {
            goto LABEL_149;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_24EF186F0(v100);
            uint64_t v100 = result;
          }
          if (v99 >= *(void *)(v100 + 16)) {
            goto LABEL_150;
          }
          long long v103 = (void *)(v100 + 32 + 16 * v99);
          void *v103 = v101;
          v103[1] = v102;
          unint64_t v104 = *(void *)(v100 + 16);
          if (v11 > v104) {
            goto LABEL_151;
          }
          memmove((void *)(v100 + 32 + 16 * (v11 - 1)), (const void *)(v100 + 32 + 16 * v11), 16 * (v104 - v11));
          uint64_t result = v100;
          *(void *)(v100 + 16) = v104 - 1;
          unint64_t v11 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v107 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v107 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t result = sub_24EF87710();
    *(void *)(result + 16) = v6;
    uint64_t v107 = result;
    uint64_t v114 = (char *)(result + 32);
  }
  uint64_t v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v106 = *a1 + 56;
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v109 = v3;
  uint64_t v115 = v9;
  while (1)
  {
    uint64_t v12 = v8++;
    if (v8 >= v3) {
      goto LABEL_46;
    }
    uint64_t v13 = v9 + 72 * v8;
    uint64_t result = *(void *)(v13 + 48);
    uint64_t v14 = *(void *)(v13 + 56);
    uint64_t v15 = v9 + 72 * v12;
    if (result == *(void *)(v15 + 48) && v14 == *(void *)(v15 + 56))
    {
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3)
      {
        uint64_t v8 = v12 + 2;
        goto LABEL_68;
      }
      int v17 = 0;
    }
    else
    {
      uint64_t result = sub_24EF87A60();
      int v17 = result;
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_37;
      }
    }
    uint64_t v19 = (void *)(v106 + 72 * v18);
    do
    {
      uint64_t result = *(v19 - 1);
      uint64_t v21 = v9 + 72 * v8;
      if (result == *(void *)(v21 + 48) && *v19 == *(void *)(v21 + 56))
      {
        if (v17) {
          goto LABEL_38;
        }
      }
      else
      {
        uint64_t result = sub_24EF87A60();
        if ((v17 ^ result)) {
          goto LABEL_37;
        }
      }
      uint64_t v20 = v18 + 1;
      v19 += 9;
      uint64_t v8 = v18;
      uint64_t v18 = v20;
    }
    while (v20 < v3);
    uint64_t v18 = v20;
LABEL_37:
    uint64_t v8 = v18;
    if ((v17 & 1) == 0) {
      goto LABEL_46;
    }
LABEL_38:
    if (v18 < v12) {
      goto LABEL_157;
    }
    if (v12 < v18) {
      break;
    }
    uint64_t v8 = v18;
LABEL_46:
    if (v8 < v3) {
      goto LABEL_47;
    }
LABEL_68:
    if (v8 < v12) {
      goto LABEL_147;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_24EF185F4(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    unint64_t v49 = *(void *)(v10 + 16);
    unint64_t v48 = *(void *)(v10 + 24);
    unint64_t v11 = v49 + 1;
    if (v49 >= v48 >> 1)
    {
      uint64_t result = (uint64_t)sub_24EF185F4((char *)(v48 > 1), v49 + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    *(void *)(v10 + 16) = v11;
    uint64_t v50 = v10 + 32;
    uint64_t v51 = (uint64_t *)(v10 + 32 + 16 * v49);
    uint64_t *v51 = v12;
    v51[1] = v8;
    if (v49)
    {
      uint64_t v9 = v115;
      while (1)
      {
        unint64_t v52 = v11 - 1;
        if (v11 >= 4)
        {
          unint64_t v57 = v50 + 16 * v11;
          uint64_t v58 = *(void *)(v57 - 64);
          uint64_t v59 = *(void *)(v57 - 56);
          BOOL v63 = __OFSUB__(v59, v58);
          uint64_t v60 = v59 - v58;
          if (v63) {
            goto LABEL_136;
          }
          uint64_t v62 = *(void *)(v57 - 48);
          uint64_t v61 = *(void *)(v57 - 40);
          BOOL v63 = __OFSUB__(v61, v62);
          uint64_t v55 = v61 - v62;
          char v56 = v63;
          if (v63) {
            goto LABEL_137;
          }
          unint64_t v64 = v11 - 2;
          uint64_t v65 = (uint64_t *)(v50 + 16 * (v11 - 2));
          uint64_t v67 = *v65;
          uint64_t v66 = v65[1];
          BOOL v63 = __OFSUB__(v66, v67);
          uint64_t v68 = v66 - v67;
          if (v63) {
            goto LABEL_138;
          }
          BOOL v63 = __OFADD__(v55, v68);
          uint64_t v69 = v55 + v68;
          if (v63) {
            goto LABEL_140;
          }
          if (v69 >= v60)
          {
            uint64_t v87 = (uint64_t *)(v50 + 16 * v52);
            uint64_t v89 = *v87;
            uint64_t v88 = v87[1];
            BOOL v63 = __OFSUB__(v88, v89);
            uint64_t v90 = v88 - v89;
            if (v63) {
              goto LABEL_146;
            }
            BOOL v80 = v55 < v90;
            goto LABEL_106;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v81 = *(void *)(v10 + 32);
            uint64_t v82 = *(void *)(v10 + 40);
            BOOL v63 = __OFSUB__(v82, v81);
            uint64_t v74 = v82 - v81;
            char v75 = v63;
            goto LABEL_100;
          }
          uint64_t v54 = *(void *)(v10 + 32);
          uint64_t v53 = *(void *)(v10 + 40);
          BOOL v63 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          char v56 = v63;
        }
        if (v56) {
          goto LABEL_139;
        }
        unint64_t v64 = v11 - 2;
        uint64_t v70 = (uint64_t *)(v50 + 16 * (v11 - 2));
        uint64_t v72 = *v70;
        uint64_t v71 = v70[1];
        BOOL v73 = __OFSUB__(v71, v72);
        uint64_t v74 = v71 - v72;
        char v75 = v73;
        if (v73) {
          goto LABEL_141;
        }
        uint64_t v76 = (uint64_t *)(v50 + 16 * v52);
        uint64_t v78 = *v76;
        uint64_t v77 = v76[1];
        BOOL v63 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v63) {
          goto LABEL_143;
        }
        if (__OFADD__(v74, v79)) {
          goto LABEL_145;
        }
        if (v74 + v79 >= v55)
        {
          BOOL v80 = v55 < v79;
LABEL_106:
          if (v80) {
            unint64_t v52 = v64;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v75) {
          goto LABEL_142;
        }
        uint64_t v83 = (uint64_t *)(v50 + 16 * v52);
        uint64_t v85 = *v83;
        uint64_t v84 = v83[1];
        BOOL v63 = __OFSUB__(v84, v85);
        uint64_t v86 = v84 - v85;
        if (v63) {
          goto LABEL_144;
        }
        if (v86 < v74) {
          goto LABEL_15;
        }
LABEL_108:
        unint64_t v91 = v52 - 1;
        if (v52 - 1 >= v11)
        {
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
          goto LABEL_156;
        }
        if (!v9) {
          goto LABEL_159;
        }
        uint64_t v92 = v9;
        uint64_t v93 = (uint64_t *)(v50 + 16 * v91);
        uint64_t v94 = *v93;
        unint64_t v95 = (void *)(v50 + 16 * v52);
        uint64_t v96 = v95[1];
        uint64_t result = sub_24EF17E84((char *)(v92 + 72 * *v93), (char *)(v92 + 72 * *v95), v92 + 72 * v96, v114);
        if (v1) {
          goto LABEL_116;
        }
        if (v96 < v94) {
          goto LABEL_133;
        }
        if (v52 > *(void *)(v10 + 16)) {
          goto LABEL_134;
        }
        *uint64_t v93 = v94;
        *(void *)(v50 + 16 * v91 + 8) = v96;
        unint64_t v97 = *(void *)(v10 + 16);
        if (v52 >= v97) {
          goto LABEL_135;
        }
        unint64_t v11 = v97 - 1;
        uint64_t result = (uint64_t)memmove((void *)(v50 + 16 * v52), v95 + 2, 16 * (v97 - 1 - v52));
        *(void *)(v10 + 16) = v97 - 1;
        BOOL v80 = v97 > 2;
        uint64_t v9 = v115;
        if (!v80) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
    uint64_t v9 = v115;
LABEL_15:
    uint64_t v3 = v109;
    if (v8 >= v109)
    {
      uint64_t v7 = v107;
      goto LABEL_119;
    }
  }
  uint64_t v23 = 72 * v18;
  uint64_t v24 = 72 * v12;
  uint64_t v25 = v18;
  uint64_t v26 = v12;
  do
  {
    if (v26 != --v25)
    {
      if (!v9) {
        goto LABEL_160;
      }
      uint64_t v27 = (char *)(v9 + v24);
      uint64_t v28 = v115 + v23;
      uint64_t v29 = *((void *)v27 + 6);
      long long v110 = *(_OWORD *)v27;
      long long v111 = *((_OWORD *)v27 + 1);
      long long v112 = *(_OWORD *)(v27 + 56);
      long long v113 = *((_OWORD *)v27 + 2);
      uint64_t result = (uint64_t)memmove(v27, (const void *)(v115 + v23 - 72), 0x48uLL);
      *(_OWORD *)(v28 - 72) = v110;
      *(_OWORD *)(v28 - 56) = v111;
      *(_OWORD *)(v28 - 40) = v113;
      *(void *)(v28 - 24) = v29;
      *(_OWORD *)(v28 - 16) = v112;
      uint64_t v9 = v115;
    }
    ++v26;
    v23 -= 72;
    v24 += 72;
  }
  while (v26 < v25);
  uint64_t v8 = v18;
  uint64_t v3 = v109;
  if (v18 >= v109) {
    goto LABEL_68;
  }
LABEL_47:
  if (__OFSUB__(v8, v12)) {
    goto LABEL_152;
  }
  if (v8 - v12 >= v108) {
    goto LABEL_68;
  }
  if (__OFADD__(v12, v108)) {
    goto LABEL_155;
  }
  if (v12 + v108 >= v3) {
    uint64_t v30 = v3;
  }
  else {
    uint64_t v30 = v12 + v108;
  }
  if (v30 >= v12)
  {
    if (v8 != v30)
    {
      uint64_t v31 = v106 + 72 * v8;
      do
      {
        uint64_t v32 = v9 + 72 * v8;
        uint64_t result = *(void *)(v32 + 48);
        uint64_t v33 = *(void *)(v32 + 56);
        uint64_t v34 = v12;
        uint64_t v35 = v31;
        do
        {
          if (result == *(void *)(v35 - 80) && v33 == *(void *)(v35 - 72)) {
            break;
          }
          uint64_t result = sub_24EF87A60();
          if ((result & 1) == 0) {
            break;
          }
          if (!v9) {
            goto LABEL_158;
          }
          uint64_t v37 = v35 - 56;
          long long v38 = *(_OWORD *)v35;
          uint64_t v39 = (_OWORD *)(v35 - 128);
          uint64_t v40 = *(void *)(v35 - 64);
          long long v42 = *(_OWORD *)(v35 - 96);
          long long v41 = *(_OWORD *)(v35 - 80);
          *(_OWORD *)(v35 - 72) = *(_OWORD *)v35;
          v35 -= 72;
          uint64_t v43 = *(void *)(v35 + 48);
          uint64_t v44 = *(void *)(v35 + 56);
          uint64_t result = *(void *)(v35 + 64);
          long long v46 = *(_OWORD *)(v35 + 16);
          long long v45 = *(_OWORD *)(v35 + 32);
          *(_OWORD *)(v37 + 32) = v42;
          *(_OWORD *)(v37 + 48) = v41;
          *(void *)(v37 + 64) = v40;
          long long v47 = v39[1];
          *(_OWORD *)uint64_t v37 = *v39;
          *(_OWORD *)(v37 + 16) = v47;
          *(_OWORD *)(v35 - 56) = v46;
          *(_OWORD *)(v35 - 40) = v45;
          *(void *)(v35 - 24) = v43;
          *(void *)(v35 - 16) = v44;
          uint64_t v33 = v38;
          ++v34;
          *(void *)(v35 - 8) = result;
        }
        while (v8 != v34);
        ++v8;
        v31 += 72;
      }
      while (v8 != v30);
      uint64_t v8 = v30;
    }
    goto LABEL_68;
  }
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
  return result;
}

uint64_t sub_24EF16088(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24EF87A40();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_24EF172C4(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_151;
  }
  uint64_t v112 = result;
  uint64_t v109 = a1;
  if (v3 <= 1)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v115 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_117:
      uint64_t result = v10;
      uint64_t v111 = v7;
      if (v11 >= 2)
      {
        uint64_t v102 = *v109;
        do
        {
          unint64_t v103 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_146;
          }
          if (!v102) {
            goto LABEL_159;
          }
          uint64_t v104 = result;
          uint64_t v105 = *(void *)(result + 32 + 16 * v103);
          uint64_t v106 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_24EF1835C((char *)(v102 + 56 * v105), (char *)(v102 + 56 * *(void *)(result + 32 + 16 * (v11 - 1))), v102 + 56 * v106, v115);
          if (v1) {
            break;
          }
          if (v106 < v105) {
            goto LABEL_147;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_24EF186F0(v104);
            uint64_t v104 = result;
          }
          if (v103 >= *(void *)(v104 + 16)) {
            goto LABEL_148;
          }
          uint64_t v107 = (void *)(v104 + 32 + 16 * v103);
          *uint64_t v107 = v105;
          v107[1] = v106;
          unint64_t v108 = *(void *)(v104 + 16);
          if (v11 > v108) {
            goto LABEL_149;
          }
          memmove((void *)(v104 + 32 + 16 * (v11 - 1)), (const void *)(v104 + 32 + 16 * v11), 16 * (v108 - v11));
          uint64_t result = v104;
          *(void *)(v104 + 16) = v108 - 1;
          unint64_t v11 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v111 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v111 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t result = sub_24EF87710();
    *(void *)(result + 16) = v6;
    uint64_t v111 = result;
    uint64_t v115 = (char *)(result + 32);
  }
  uint64_t v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v110 = *a1 + 48;
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v113 = v3;
  uint64_t v114 = *a1;
  while (1)
  {
    uint64_t v12 = v8++;
    if (v8 >= v3) {
      goto LABEL_45;
    }
    uint64_t v13 = v9 + 56 * v8;
    uint64_t result = *(void *)(v13 + 40);
    uint64_t v14 = *(void *)(v13 + 48);
    uint64_t v15 = v9 + 56 * v12;
    if (result == *(void *)(v15 + 40) && v14 == *(void *)(v15 + 48))
    {
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_44;
      }
      int v17 = 0;
    }
    else
    {
      uint64_t result = sub_24EF87A60();
      int v17 = result;
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v19 = (void *)(v110 + 56 * v18);
    do
    {
      uint64_t result = *(v19 - 1);
      uint64_t v21 = v9 + 56 * v8;
      if (result == *(void *)(v21 + 40) && *v19 == *(void *)(v21 + 48))
      {
        if (v17) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t result = sub_24EF87A60();
        if ((v17 ^ result)) {
          goto LABEL_36;
        }
      }
      uint64_t v20 = v18 + 1;
      v19 += 7;
      uint64_t v8 = v18;
      uint64_t v18 = v20;
    }
    while (v20 < v3);
    uint64_t v18 = v20;
LABEL_36:
    uint64_t v8 = v18;
    if (v17)
    {
LABEL_37:
      if (v18 < v12) {
        goto LABEL_155;
      }
      if (v12 < v18)
      {
        uint64_t v23 = 56 * v18;
        uint64_t v24 = v18;
        uint64_t v25 = v12;
        uint64_t v26 = 56 * v12;
        do
        {
          if (v25 != --v24)
          {
            if (!v9) {
              goto LABEL_158;
            }
            uint64_t v27 = v9 + v26;
            uint64_t v28 = *(void *)(v9 + v26);
            uint64_t v29 = v9 + v23;
            long long v30 = *(_OWORD *)(v9 + v26 + 24);
            uint64_t v31 = *(void *)(v9 + v26 + 40);
            uint64_t v32 = *(void *)(v9 + v26 + 48);
            long long v33 = *(_OWORD *)(v9 + v26 + 8);
            long long v34 = *(_OWORD *)(v9 + v23 - 40);
            long long v35 = *(_OWORD *)(v9 + v23 - 24);
            long long v36 = *(_OWORD *)(v9 + v23 - 56);
            *(void *)(v27 + 48) = *(void *)(v9 + v23 - 8);
            *(_OWORD *)(v27 + 16) = v34;
            *(_OWORD *)(v27 + 32) = v35;
            *(_OWORD *)uint64_t v27 = v36;
            *(void *)(v29 - 56) = v28;
            *(_OWORD *)(v29 - 48) = v33;
            *(_OWORD *)(v29 - 32) = v30;
            *(void *)(v29 - 16) = v31;
            *(void *)(v29 - 8) = v32;
          }
          ++v25;
          v23 -= 56;
          v26 += 56;
        }
        while (v25 < v24);
      }
LABEL_44:
      uint64_t v8 = v18;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12)) {
        goto LABEL_150;
      }
      if (v8 - v12 < v112) {
        break;
      }
    }
LABEL_66:
    if (v8 < v12) {
      goto LABEL_145;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_24EF185F4(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    unint64_t v53 = *(void *)(v10 + 16);
    unint64_t v52 = *(void *)(v10 + 24);
    unint64_t v11 = v53 + 1;
    if (v53 >= v52 >> 1)
    {
      uint64_t result = (uint64_t)sub_24EF185F4((char *)(v52 > 1), v53 + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    *(void *)(v10 + 16) = v11;
    uint64_t v54 = v10 + 32;
    uint64_t v55 = (uint64_t *)(v10 + 32 + 16 * v53);
    *uint64_t v55 = v12;
    v55[1] = v8;
    if (v53)
    {
      uint64_t v9 = v114;
      while (1)
      {
        unint64_t v56 = v11 - 1;
        if (v11 >= 4)
        {
          unint64_t v61 = v54 + 16 * v11;
          uint64_t v62 = *(void *)(v61 - 64);
          uint64_t v63 = *(void *)(v61 - 56);
          BOOL v67 = __OFSUB__(v63, v62);
          uint64_t v64 = v63 - v62;
          if (v67) {
            goto LABEL_134;
          }
          uint64_t v66 = *(void *)(v61 - 48);
          uint64_t v65 = *(void *)(v61 - 40);
          BOOL v67 = __OFSUB__(v65, v66);
          uint64_t v59 = v65 - v66;
          char v60 = v67;
          if (v67) {
            goto LABEL_135;
          }
          unint64_t v68 = v11 - 2;
          uint64_t v69 = (uint64_t *)(v54 + 16 * (v11 - 2));
          uint64_t v71 = *v69;
          uint64_t v70 = v69[1];
          BOOL v67 = __OFSUB__(v70, v71);
          uint64_t v72 = v70 - v71;
          if (v67) {
            goto LABEL_136;
          }
          BOOL v67 = __OFADD__(v59, v72);
          uint64_t v73 = v59 + v72;
          if (v67) {
            goto LABEL_138;
          }
          if (v73 >= v64)
          {
            unint64_t v91 = (uint64_t *)(v54 + 16 * v56);
            uint64_t v93 = *v91;
            uint64_t v92 = v91[1];
            BOOL v67 = __OFSUB__(v92, v93);
            uint64_t v94 = v92 - v93;
            if (v67) {
              goto LABEL_144;
            }
            BOOL v84 = v59 < v94;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v85 = *(void *)(v10 + 32);
            uint64_t v86 = *(void *)(v10 + 40);
            BOOL v67 = __OFSUB__(v86, v85);
            uint64_t v78 = v86 - v85;
            char v79 = v67;
            goto LABEL_98;
          }
          uint64_t v58 = *(void *)(v10 + 32);
          uint64_t v57 = *(void *)(v10 + 40);
          BOOL v67 = __OFSUB__(v57, v58);
          uint64_t v59 = v57 - v58;
          char v60 = v67;
        }
        if (v60) {
          goto LABEL_137;
        }
        unint64_t v68 = v11 - 2;
        uint64_t v74 = (uint64_t *)(v54 + 16 * (v11 - 2));
        uint64_t v76 = *v74;
        uint64_t v75 = v74[1];
        BOOL v77 = __OFSUB__(v75, v76);
        uint64_t v78 = v75 - v76;
        char v79 = v77;
        if (v77) {
          goto LABEL_139;
        }
        BOOL v80 = (uint64_t *)(v54 + 16 * v56);
        uint64_t v82 = *v80;
        uint64_t v81 = v80[1];
        BOOL v67 = __OFSUB__(v81, v82);
        uint64_t v83 = v81 - v82;
        if (v67) {
          goto LABEL_141;
        }
        if (__OFADD__(v78, v83)) {
          goto LABEL_143;
        }
        if (v78 + v83 >= v59)
        {
          BOOL v84 = v59 < v83;
LABEL_104:
          if (v84) {
            unint64_t v56 = v68;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v79) {
          goto LABEL_140;
        }
        uint64_t v87 = (uint64_t *)(v54 + 16 * v56);
        uint64_t v89 = *v87;
        uint64_t v88 = v87[1];
        BOOL v67 = __OFSUB__(v88, v89);
        uint64_t v90 = v88 - v89;
        if (v67) {
          goto LABEL_142;
        }
        if (v90 < v78) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v95 = v56 - 1;
        if (v56 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v9) {
          goto LABEL_157;
        }
        uint64_t v96 = v9;
        unint64_t v97 = (uint64_t *)(v54 + 16 * v95);
        uint64_t v98 = *v97;
        unint64_t v99 = (void *)(v54 + 16 * v56);
        uint64_t v100 = v99[1];
        uint64_t result = sub_24EF1835C((char *)(v96 + 56 * *v97), (char *)(v96 + 56 * *v99), v96 + 56 * v100, v115);
        if (v1) {
          goto LABEL_114;
        }
        if (v100 < v98) {
          goto LABEL_131;
        }
        if (v56 > *(void *)(v10 + 16)) {
          goto LABEL_132;
        }
        *unint64_t v97 = v98;
        *(void *)(v54 + 16 * v95 + 8) = v100;
        unint64_t v101 = *(void *)(v10 + 16);
        if (v56 >= v101) {
          goto LABEL_133;
        }
        unint64_t v11 = v101 - 1;
        uint64_t result = (uint64_t)memmove((void *)(v54 + 16 * v56), v99 + 2, 16 * (v101 - 1 - v56));
        *(void *)(v10 + 16) = v101 - 1;
        BOOL v84 = v101 > 2;
        uint64_t v9 = v114;
        if (!v84) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
    uint64_t v9 = v114;
LABEL_15:
    uint64_t v3 = v113;
    if (v8 >= v113)
    {
      uint64_t v7 = v111;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v112)) {
    goto LABEL_153;
  }
  if (v12 + v112 >= v3) {
    uint64_t v37 = v3;
  }
  else {
    uint64_t v37 = v12 + v112;
  }
  if (v37 >= v12)
  {
    if (v8 != v37)
    {
      uint64_t v38 = v110 + 56 * v8;
      do
      {
        uint64_t v39 = v9 + 56 * v8;
        uint64_t result = *(void *)(v39 + 40);
        uint64_t v40 = *(void *)(v39 + 48);
        uint64_t v41 = v12;
        uint64_t v42 = v38;
        do
        {
          if (result == *(void *)(v42 - 64) && v40 == *(void *)(v42 - 56)) {
            break;
          }
          uint64_t result = sub_24EF87A60();
          if ((result & 1) == 0) {
            break;
          }
          if (!v9) {
            goto LABEL_156;
          }
          uint64_t v44 = v42 - 48;
          uint64_t v40 = *(void *)v42;
          long long v45 = (_OWORD *)(v42 - 104);
          uint64_t v46 = *(void *)(v42 - 56);
          *(void *)(v42 - 56) = *(void *)v42;
          v42 -= 56;
          uint64_t v47 = *(void *)(v42 + 8);
          uint64_t v48 = *(void *)(v42 + 32);
          uint64_t v49 = *(void *)(v42 + 40);
          uint64_t result = *(void *)(v42 + 48);
          long long v50 = *(_OWORD *)(v42 + 16);
          long long v51 = v45[1];
          *(_OWORD *)uint64_t v44 = *v45;
          *(_OWORD *)(v44 + 16) = v51;
          *(_OWORD *)(v44 + 32) = v45[2];
          *(void *)(v44 + 48) = v46;
          *(void *)(v42 - 48) = v47;
          *(_OWORD *)(v42 - 40) = v50;
          *(void *)(v42 - 24) = v48;
          *(void *)(v42 - 16) = v49;
          *(void *)(v42 - 8) = result;
          ++v41;
        }
        while (v8 != v41);
        ++v8;
        v38 += 56;
      }
      while (v8 != v37);
      uint64_t v8 = v37;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_24EF16794(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24EF87A40();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v93 = *a1;
      uint64_t v94 = *a1 + 40;
      uint64_t v95 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v97 = *(double *)(v93 + 40 * i + 24);
        uint64_t v98 = v95;
        unint64_t v99 = (double *)v94;
        do
        {
          if (v97 >= *(v99 - 2)) {
            break;
          }
          if (!v93) {
            goto LABEL_142;
          }
          double v100 = *v99;
          uint64_t v101 = *((void *)v99 + 1);
          uint64_t v102 = *((void *)v99 + 2);
          uint64_t v103 = *((void *)v99 + 4);
          long long v104 = *(_OWORD *)(v99 - 3);
          *(_OWORD *)unint64_t v99 = *(_OWORD *)(v99 - 5);
          *((_OWORD *)v99 + 1) = v104;
          v99[4] = *(v99 - 1);
          *((void *)v99 - 4) = v101;
          *((void *)v99 - 3) = v102;
          *(v99 - 2) = v97;
          *((void *)v99 - 1) = v103;
          *(v99 - 5) = v100;
          v99 -= 5;
        }
        while (!__CFADD__(v98++, 1));
        v94 += 40;
        --v95;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v6 = result;
    uint64_t v114 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      uint64_t result = sub_24EF87710();
      *(void *)(result + 16) = v7;
      uint64_t v116 = result;
      long long v120 = (double *)(result + 32);
LABEL_13:
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v115 = *a1 + 104;
      uint64_t v113 = *a1 + 32;
      uint64_t v11 = MEMORY[0x263F8EE78];
      uint64_t v117 = v6;
      uint64_t v118 = v3;
      uint64_t v119 = v10;
      while (1)
      {
        uint64_t v13 = v9++;
        if (v9 < v3)
        {
          double v14 = *(double *)(v10 + 40 * v9 + 24);
          double v15 = *(double *)(v10 + 40 * v13 + 24);
          uint64_t v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            uint64_t v16 = (double *)(v115 + 40 * v13);
            double v17 = v14;
            while (1)
            {
              double v18 = v17;
              double v17 = *v16;
              if (v14 < v15 == *v16 >= v18) {
                break;
              }
              ++v9;
              v16 += 5;
              if (v3 == v9)
              {
                uint64_t v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13) {
              goto LABEL_139;
            }
            if (v13 < v9)
            {
              uint64_t v19 = 40 * v9;
              uint64_t v20 = 40 * v13;
              uint64_t v21 = v9;
              uint64_t v22 = v13;
              do
              {
                if (v22 != --v21)
                {
                  if (!v10) {
                    goto LABEL_145;
                  }
                  uint64_t v23 = v10 + v20;
                  uint64_t v24 = v10 + v19;
                  uint64_t v25 = *(void *)(v10 + v20);
                  uint64_t v26 = *(void *)(v10 + v20 + 8);
                  uint64_t v27 = *(void *)(v10 + v20 + 32);
                  long long v28 = *(_OWORD *)(v10 + v20 + 16);
                  uint64_t v29 = *(void *)(v10 + v19 - 8);
                  long long v30 = *(_OWORD *)(v10 + v19 - 24);
                  *(_OWORD *)uint64_t v23 = *(_OWORD *)(v10 + v19 - 40);
                  *(_OWORD *)(v23 + 16) = v30;
                  *(void *)(v23 + 32) = v29;
                  *(void *)(v24 - 40) = v25;
                  *(void *)(v24 - 32) = v26;
                  *(_OWORD *)(v24 - 24) = v28;
                  *(void *)(v24 - 8) = v27;
                }
                ++v22;
                v19 -= 40;
                v20 += 40;
              }
              while (v22 < v21);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_136;
          }
          if (v9 - v13 < v6)
          {
            uint64_t v31 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_140;
            }
            if (v31 >= v3) {
              uint64_t v31 = v3;
            }
            if (v31 < v13)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v9 != v31)
            {
              uint64_t v32 = (double *)(v113 + 40 * v9);
              do
              {
                double v33 = *(double *)(v10 + 40 * v9 + 24);
                uint64_t v34 = v13;
                long long v35 = v32;
                do
                {
                  if (v33 >= *(v35 - 6)) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_143;
                  }
                  long long v36 = v35 - 4;
                  uint64_t v37 = v35 - 9;
                  uint64_t v38 = *((void *)v35 - 5);
                  *(v35 - 5) = *v35;
                  v35 -= 5;
                  uint64_t v39 = *((void *)v35 + 1);
                  uint64_t v40 = *((void *)v35 + 2);
                  uint64_t v41 = *((void *)v35 + 3);
                  long long v42 = *((_OWORD *)v37 + 1);
                  *(_OWORD *)long long v36 = *(_OWORD *)v37;
                  *((_OWORD *)v36 + 1) = v42;
                  *((void *)v36 + 4) = v38;
                  *((void *)v35 - 4) = v39;
                  *((void *)v35 - 3) = v40;
                  *((void *)v35 - 2) = v41;
                  *(v35 - 1) = v33;
                  ++v34;
                }
                while (v9 != v34);
                ++v9;
                v32 += 5;
              }
              while (v9 != v31);
              uint64_t v9 = v31;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_24EF185F4(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
          uint64_t v11 = result;
        }
        unint64_t v44 = *(void *)(v11 + 16);
        unint64_t v43 = *(void *)(v11 + 24);
        unint64_t v12 = v44 + 1;
        uint64_t v10 = v119;
        if (v44 >= v43 >> 1)
        {
          uint64_t result = (uint64_t)sub_24EF185F4((char *)(v43 > 1), v44 + 1, 1, (char *)v11);
          uint64_t v10 = v119;
          uint64_t v11 = result;
        }
        *(void *)(v11 + 16) = v12;
        uint64_t v45 = v11 + 32;
        uint64_t v46 = (uint64_t *)(v11 + 32 + 16 * v44);
        *uint64_t v46 = v13;
        v46[1] = v9;
        if (v44)
        {
          while (1)
          {
            unint64_t v47 = v12 - 1;
            if (v12 >= 4)
            {
              unint64_t v52 = v45 + 16 * v12;
              uint64_t v53 = *(void *)(v52 - 64);
              uint64_t v54 = *(void *)(v52 - 56);
              BOOL v58 = __OFSUB__(v54, v53);
              uint64_t v55 = v54 - v53;
              if (v58) {
                goto LABEL_120;
              }
              uint64_t v57 = *(void *)(v52 - 48);
              uint64_t v56 = *(void *)(v52 - 40);
              BOOL v58 = __OFSUB__(v56, v57);
              uint64_t v50 = v56 - v57;
              char v51 = v58;
              if (v58) {
                goto LABEL_121;
              }
              unint64_t v59 = v12 - 2;
              char v60 = (uint64_t *)(v45 + 16 * (v12 - 2));
              uint64_t v62 = *v60;
              uint64_t v61 = v60[1];
              BOOL v58 = __OFSUB__(v61, v62);
              uint64_t v63 = v61 - v62;
              if (v58) {
                goto LABEL_122;
              }
              BOOL v58 = __OFADD__(v50, v63);
              uint64_t v64 = v50 + v63;
              if (v58) {
                goto LABEL_124;
              }
              if (v64 >= v55)
              {
                uint64_t v82 = (uint64_t *)(v45 + 16 * v47);
                uint64_t v84 = *v82;
                uint64_t v83 = v82[1];
                BOOL v58 = __OFSUB__(v83, v84);
                uint64_t v85 = v83 - v84;
                if (v58) {
                  goto LABEL_130;
                }
                BOOL v75 = v50 < v85;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v76 = *(void *)(v11 + 32);
                uint64_t v77 = *(void *)(v11 + 40);
                BOOL v58 = __OFSUB__(v77, v76);
                uint64_t v69 = v77 - v76;
                char v70 = v58;
                goto LABEL_77;
              }
              uint64_t v49 = *(void *)(v11 + 32);
              uint64_t v48 = *(void *)(v11 + 40);
              BOOL v58 = __OFSUB__(v48, v49);
              uint64_t v50 = v48 - v49;
              char v51 = v58;
            }
            if (v51) {
              goto LABEL_123;
            }
            unint64_t v59 = v12 - 2;
            uint64_t v65 = (uint64_t *)(v45 + 16 * (v12 - 2));
            uint64_t v67 = *v65;
            uint64_t v66 = v65[1];
            BOOL v68 = __OFSUB__(v66, v67);
            uint64_t v69 = v66 - v67;
            char v70 = v68;
            if (v68) {
              goto LABEL_125;
            }
            uint64_t v71 = (uint64_t *)(v45 + 16 * v47);
            uint64_t v73 = *v71;
            uint64_t v72 = v71[1];
            BOOL v58 = __OFSUB__(v72, v73);
            uint64_t v74 = v72 - v73;
            if (v58) {
              goto LABEL_127;
            }
            if (__OFADD__(v69, v74)) {
              goto LABEL_129;
            }
            if (v69 + v74 >= v50)
            {
              BOOL v75 = v50 < v74;
LABEL_83:
              if (v75) {
                unint64_t v47 = v59;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v70) {
              goto LABEL_126;
            }
            uint64_t v78 = (uint64_t *)(v45 + 16 * v47);
            uint64_t v80 = *v78;
            uint64_t v79 = v78[1];
            BOOL v58 = __OFSUB__(v79, v80);
            uint64_t v81 = v79 - v80;
            if (v58) {
              goto LABEL_128;
            }
            if (v81 < v69) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v86 = v47 - 1;
            if (v47 - 1 >= v12)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v10) {
              goto LABEL_144;
            }
            uint64_t v87 = v11;
            uint64_t v88 = (uint64_t *)(v45 + 16 * v86);
            uint64_t v89 = *v88;
            uint64_t v90 = (void *)(v45 + 16 * v47);
            uint64_t v91 = v90[1];
            uint64_t result = sub_24EF18104((double *)(v10 + 40 * *v88), (double *)(v10 + 40 * *v90), v10 + 40 * v91, v120);
            if (v1) {
              goto LABEL_93;
            }
            if (v91 < v89) {
              goto LABEL_117;
            }
            if (v47 > *(void *)(v87 + 16)) {
              goto LABEL_118;
            }
            uint64_t *v88 = v89;
            *(void *)(v45 + 16 * v86 + 8) = v91;
            unint64_t v92 = *(void *)(v87 + 16);
            if (v47 >= v92) {
              goto LABEL_119;
            }
            uint64_t v11 = v87;
            unint64_t v12 = v92 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v45 + 16 * v47), v90 + 2, 16 * (v92 - 1 - v47));
            *(void *)(v87 + 16) = v92 - 1;
            uint64_t v10 = v119;
            if (v92 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v117;
        uint64_t v3 = v118;
        if (v9 >= v118)
        {
          uint64_t v8 = v116;
          goto LABEL_103;
        }
      }
    }
    uint64_t v8 = MEMORY[0x263F8EE78];
    long long v120 = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 == 1)
    {
      uint64_t v116 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_103:
    uint64_t result = v11;
    uint64_t v116 = v8;
    if (v12 >= 2)
    {
      uint64_t v106 = *v114;
      do
      {
        unint64_t v107 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_132;
        }
        if (!v106) {
          goto LABEL_146;
        }
        uint64_t v108 = result;
        uint64_t v109 = *(void *)(result + 32 + 16 * v107);
        uint64_t v110 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_24EF18104((double *)(v106 + 40 * v109), (double *)(v106 + 40 * *(void *)(result + 32 + 16 * (v12 - 1))), v106 + 40 * v110, v120);
        if (v1) {
          break;
        }
        if (v110 < v109) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_24EF186F0(v108);
          uint64_t v108 = result;
        }
        if (v107 >= *(void *)(v108 + 16)) {
          goto LABEL_134;
        }
        uint64_t v111 = (void *)(v108 + 32 + 16 * v107);
        void *v111 = v109;
        v111[1] = v110;
        unint64_t v112 = *(void *)(v108 + 16);
        if (v12 > v112) {
          goto LABEL_135;
        }
        memmove((void *)(v108 + 32 + 16 * (v12 - 1)), (const void *)(v108 + 32 + 16 * v12), 16 * (v112 - v12));
        uint64_t result = v108;
        *(void *)(v108 + 16) = v112 - 1;
        unint64_t v12 = v112 - 1;
      }
      while (v112 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(void *)(v116 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EF16E94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 48 * a3 - 48;
    do
    {
      uint64_t v6 = result;
      uint64_t v7 = v5;
      while (2)
      {
        uint64_t v8 = (_OWORD *)(v7 + 48);
        unsigned int v9 = *(unsigned __int8 *)(v7 + 88);
        switch(*(unsigned char *)(v7 + 40))
        {
          case 2:
            if (v9 < 2) {
              goto LABEL_22;
            }
            break;
          case 3:
            if (v9 < 3) {
              goto LABEL_22;
            }
            break;
          case 4:
            if (v9 < 4) {
              goto LABEL_22;
            }
            break;
          case 5:
            if (v9 < 5) {
              goto LABEL_22;
            }
            break;
          case 6:
            if (v9 < 6) {
              goto LABEL_22;
            }
            break;
          case 7:
            if (v9 < 7) {
              goto LABEL_22;
            }
            break;
          case 8:
            if (v9 < 8) {
              goto LABEL_22;
            }
            break;
          default:
            if (v9 < *(unsigned __int8 *)(v7 + 40))
            {
LABEL_22:
              if (!v4)
              {
                __break(1u);
                JUMPOUT(0x24EF16F98);
              }
              long long v11 = *(_OWORD *)(v7 + 48);
              long long v10 = *(_OWORD *)(v7 + 64);
              long long v12 = *(_OWORD *)(v7 + 16);
              long long v13 = *(_OWORD *)(v7 + 32);
              *uint64_t v8 = *(_OWORD *)v7;
              *(_OWORD *)(v7 + 64) = v12;
              uint64_t v14 = *(void *)(v7 + 80);
              *(_OWORD *)uint64_t v7 = v11;
              *(_OWORD *)(v7 + 16) = v10;
              *(void *)(v7 + 32) = v14;
              *(unsigned char *)(v7 + 40) = v9;
              v7 -= 48;
              ++v6;
              v8[2] = v13;
              if (a3 != v6) {
                continue;
              }
            }
            break;
        }
        break;
      }
      ++a3;
      v5 += 48;
    }
    while (a3 != a2);
  }
  return result;
}

uint64_t sub_24EF16FBC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + (a3 << 6) + 56;
LABEL_5:
    uint64_t v9 = v7 + (v4 << 6);
    uint64_t result = *(void *)(v9 + 40);
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    while (1)
    {
      BOOL v13 = result == *(void *)(v12 - 80) && v10 == *(void *)(v12 - 72);
      if (v13 || (uint64_t result = sub_24EF87A60(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 64;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v14 = (_OWORD *)(v12 - 56);
      double v15 = (_OWORD *)(v12 - 120);
      long long v17 = *(_OWORD *)(v12 - 88);
      long long v16 = *(_OWORD *)(v12 - 72);
      *(void *)(v12 - 64) = *(void *)v12;
      v12 -= 64;
      uint64_t v18 = *(void *)(v12 + 8);
      uint64_t v19 = *(void *)(v12 + 32);
      uint64_t v20 = *(void *)(v12 + 40);
      long long v21 = *(_OWORD *)(v12 + 16);
      long long v22 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v22;
      uint64_t result = *(void *)(v12 + 48);
      uint64_t v10 = *(void *)(v12 + 56);
      v14[2] = v17;
      v14[3] = v16;
      *(void *)(v12 - 56) = v18;
      *(_OWORD *)(v12 - 48) = v21;
      *(void *)(v12 - 32) = v19;
      *(void *)(v12 - 24) = v20;
      ++v11;
      *(void *)(v12 - 16) = result;
      *(void *)(v12 - 8) = v10;
      if (v4 == v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24EF170B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 72 * a3 + 64;
LABEL_5:
    uint64_t v9 = v7 + 72 * v4;
    uint64_t result = *(void *)(v9 + 56);
    uint64_t v10 = *(void *)(v9 + 64);
    uint64_t v11 = v6;
    uint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 10) && v10 == *(v12 - 9);
      if (v13 || (uint64_t result = sub_24EF87A60(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 72;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v14 = v12 - 8;
      uint64_t v15 = *(v12 - 8);
      uint64_t v16 = *(v12 - 5);
      uint64_t v17 = *(v12 - 4);
      uint64_t result = *(v12 - 1);
      uint64_t v10 = *v12;
      long long v18 = *(_OWORD *)(v12 - 7);
      long long v19 = *(_OWORD *)(v12 - 3);
      long long v20 = *(_OWORD *)(v12 - 11);
      *((_OWORD *)v14 + 2) = *(_OWORD *)(v12 - 13);
      *((_OWORD *)v14 + 3) = v20;
      *uint64_t v12 = *(v12 - 9);
      long long v21 = *(_OWORD *)(v12 - 15);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)(v12 - 17);
      *((_OWORD *)v14 + 1) = v21;
      *(v12 - 9) = v10;
      v12 -= 9;
      *(v12 - 8) = v15;
      *(_OWORD *)(v12 - 7) = v18;
      *(v12 - 5) = v16;
      *(v12 - 4) = v17;
      *(_OWORD *)(v12 - 3) = v19;
      ++v11;
      *(v12 - 1) = result;
      if (v4 == v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24EF171BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 72 * a3 + 56;
LABEL_5:
    uint64_t v9 = v7 + 72 * v4;
    uint64_t result = *(void *)(v9 + 48);
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    while (1)
    {
      BOOL v13 = result == *(void *)(v12 - 80) && v10 == *(void *)(v12 - 72);
      if (v13 || (uint64_t result = sub_24EF87A60(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 72;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v14 = v12 - 56;
      long long v15 = *(_OWORD *)v12;
      uint64_t v16 = (_OWORD *)(v12 - 128);
      uint64_t v17 = *(void *)(v12 - 64);
      long long v19 = *(_OWORD *)(v12 - 96);
      long long v18 = *(_OWORD *)(v12 - 80);
      *(_OWORD *)(v12 - 72) = *(_OWORD *)v12;
      v12 -= 72;
      uint64_t v20 = *(void *)(v12 + 48);
      uint64_t v21 = *(void *)(v12 + 56);
      uint64_t result = *(void *)(v12 + 64);
      long long v23 = *(_OWORD *)(v12 + 16);
      long long v22 = *(_OWORD *)(v12 + 32);
      *(_OWORD *)(v14 + 32) = v19;
      *(_OWORD *)(v14 + 48) = v18;
      *(void *)(v14 + 64) = v17;
      long long v24 = v16[1];
      *(_OWORD *)uint64_t v14 = *v16;
      *(_OWORD *)(v14 + 16) = v24;
      *(_OWORD *)(v12 - 56) = v23;
      *(_OWORD *)(v12 - 40) = v22;
      *(void *)(v12 - 24) = v20;
      *(void *)(v12 - 16) = v21;
      uint64_t v10 = v15;
      ++v11;
      *(void *)(v12 - 8) = result;
      if (v4 == v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24EF172C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 56 * a3 + 48;
LABEL_5:
    uint64_t v9 = v7 + 56 * v4;
    uint64_t result = *(void *)(v9 + 40);
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    while (1)
    {
      BOOL v13 = result == *(void *)(v12 - 64) && v10 == *(void *)(v12 - 56);
      if (v13 || (uint64_t result = sub_24EF87A60(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 56;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v14 = v12 - 48;
      uint64_t v10 = *(void *)v12;
      long long v15 = (_OWORD *)(v12 - 104);
      uint64_t v16 = *(void *)(v12 - 56);
      *(void *)(v12 - 56) = *(void *)v12;
      v12 -= 56;
      uint64_t v17 = *(void *)(v12 + 8);
      uint64_t v18 = *(void *)(v12 + 32);
      uint64_t v19 = *(void *)(v12 + 40);
      uint64_t result = *(void *)(v12 + 48);
      long long v20 = *(_OWORD *)(v12 + 16);
      long long v21 = v15[1];
      *(_OWORD *)uint64_t v14 = *v15;
      *(_OWORD *)(v14 + 16) = v21;
      *(_OWORD *)(v14 + 32) = v15[2];
      *(void *)(v14 + 48) = v16;
      *(void *)(v12 - 48) = v17;
      *(_OWORD *)(v12 - 40) = v20;
      *(void *)(v12 - 24) = v18;
      *(void *)(v12 - 16) = v19;
      *(void *)(v12 - 8) = result;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24EF173CC(unsigned __int8 *__dst, unsigned __int8 *__src, unint64_t a3, unsigned __int8 *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 48;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 48;
  if (v9 >= v11)
  {
    uint64_t v20 = 48 * v11;
    if (a4 != __src || &__src[v20] <= a4) {
      memmove(a4, __src, 48 * v11);
    }
    BOOL v13 = &v4[v20];
    if (v7 < v6 && v10 >= 48)
    {
      long long v21 = (unsigned __int8 *)(a3 - 48);
      while (2)
      {
        long long v22 = v21 + 48;
        unsigned int v23 = *(v13 - 8);
        long long v24 = v6 - 48;
        switch(*(v6 - 8))
        {
          case 2u:
            if (v23 < 2) {
              goto LABEL_41;
            }
            goto LABEL_59;
          case 3u:
            if (v23 >= 3) {
              goto LABEL_59;
            }
            goto LABEL_41;
          case 4u:
            if (v23 >= 4) {
              goto LABEL_59;
            }
            goto LABEL_41;
          case 5u:
            if (v23 >= 5) {
              goto LABEL_59;
            }
            goto LABEL_41;
          case 6u:
            if (v23 >= 6) {
              goto LABEL_59;
            }
            goto LABEL_41;
          case 7u:
            if (v23 >= 7) {
              goto LABEL_59;
            }
            goto LABEL_41;
          case 8u:
            if (v23 >= 8) {
              goto LABEL_59;
            }
            goto LABEL_41;
          default:
            if (v23 >= *(v6 - 8))
            {
LABEL_59:
              long long v24 = v13 - 48;
              if (v22 == v13)
              {
                BOOL v25 = v21 >= v13;
                v13 -= 48;
                if (!v25) {
                  goto LABEL_65;
                }
              }
              else
              {
                v13 -= 48;
              }
            }
            else
            {
LABEL_41:
              if (v22 == v6)
              {
                BOOL v25 = v21 >= v6;
                v6 -= 48;
                if (!v25) {
                  goto LABEL_65;
                }
              }
              else
              {
                v6 -= 48;
              }
            }
            long long v26 = *(_OWORD *)v24;
            long long v27 = *((_OWORD *)v24 + 2);
            *((_OWORD *)v21 + 1) = *((_OWORD *)v24 + 1);
            *((_OWORD *)v21 + 2) = v27;
            *(_OWORD *)long long v21 = v26;
LABEL_65:
            if (v6 <= v7) {
              break;
            }
            v21 -= 48;
            if (v13 <= v4) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
  else
  {
    size_t v12 = 48 * v9;
    if (a4 != __dst || &__dst[v12] <= a4) {
      memmove(a4, __dst, v12);
    }
    BOOL v13 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      while (1)
      {
        unsigned int v14 = v6[40];
        switch(v4[40])
        {
          case 2u:
            if (v14 < 2) {
              goto LABEL_9;
            }
            goto LABEL_25;
          case 3u:
            if (v14 >= 3) {
              goto LABEL_25;
            }
            goto LABEL_9;
          case 4u:
            if (v14 >= 4) {
              goto LABEL_25;
            }
            goto LABEL_9;
          case 5u:
            if (v14 >= 5) {
              goto LABEL_25;
            }
            goto LABEL_9;
          case 6u:
            if (v14 >= 6) {
              goto LABEL_25;
            }
            goto LABEL_9;
          case 7u:
            if (v14 >= 7) {
              goto LABEL_25;
            }
            goto LABEL_9;
          case 8u:
            if (v14 >= 8) {
              goto LABEL_25;
            }
            goto LABEL_9;
          default:
            if (v14 >= v4[40])
            {
LABEL_25:
              uint64_t v17 = v4 + 48;
              uint64_t v16 = v4;
              long long v15 = v6;
              if (v7 == v4)
              {
                v4 += 48;
                if (v7 < v17) {
                  goto LABEL_30;
                }
              }
              else
              {
                v4 += 48;
              }
LABEL_29:
              long long v18 = *(_OWORD *)v16;
              long long v19 = *((_OWORD *)v16 + 2);
              *((_OWORD *)v7 + 1) = *((_OWORD *)v16 + 1);
              *((_OWORD *)v7 + 2) = v19;
              *(_OWORD *)uint64_t v7 = v18;
              goto LABEL_30;
            }
LABEL_9:
            long long v15 = v6 + 48;
            uint64_t v16 = v6;
            if (v7 != v6 || v7 >= v15) {
              goto LABEL_29;
            }
LABEL_30:
            v7 += 48;
            if (v4 >= v13) {
              goto LABEL_32;
            }
            uint64_t v6 = v15;
            if ((unint64_t)v15 >= a3) {
              goto LABEL_32;
            }
            break;
        }
      }
    }
LABEL_32:
    uint64_t v6 = v7;
  }
  size_t v28 = 48 * ((v13 - v4) / 48);
  if (v6 != v4 || v6 >= &v4[v28]) {
    memmove(v6, v4, v28);
  }
  return 1;
}

uint64_t sub_24EF1774C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 63;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 6;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 63;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 6;
  if (v10 >= v12 >> 6)
  {
    if (a4 != __src || &__src[64 * v13] <= a4) {
      memmove(a4, __src, v13 << 6);
    }
    unsigned int v14 = &v4[64 * v13];
    if (v7 >= v6 || v11 < 64) {
      goto LABEL_51;
    }
    long long v22 = (char *)(a3 - 64);
    while (1)
    {
      unsigned int v23 = v22 + 64;
      BOOL v24 = *((void *)v14 - 3) == *((void *)v6 - 3) && *((void *)v14 - 2) == *((void *)v6 - 2);
      if (v24 || (sub_24EF87A60() & 1) == 0)
      {
        BOOL v25 = v14 - 64;
        if (v23 != v14)
        {
          v14 -= 64;
LABEL_48:
          long long v27 = *(_OWORD *)v25;
          long long v28 = *((_OWORD *)v25 + 1);
          long long v29 = *((_OWORD *)v25 + 3);
          *((_OWORD *)v22 + 2) = *((_OWORD *)v25 + 2);
          *((_OWORD *)v22 + 3) = v29;
          *(_OWORD *)long long v22 = v27;
          *((_OWORD *)v22 + 1) = v28;
          goto LABEL_49;
        }
        BOOL v26 = v22 >= v14;
        v14 -= 64;
        if (v26) {
          goto LABEL_48;
        }
      }
      else
      {
        BOOL v25 = v6 - 64;
        if (v23 != v6)
        {
          v6 -= 64;
          goto LABEL_48;
        }
        BOOL v26 = v22 >= v6;
        v6 -= 64;
        if (v26) {
          goto LABEL_48;
        }
      }
LABEL_49:
      if (v6 > v7)
      {
        v22 -= 64;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_51;
    }
  }
  if (a4 != __dst || &__dst[64 * v10] <= a4) {
    memmove(a4, __dst, v10 << 6);
  }
  unsigned int v14 = &v4[64 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 64)
  {
    while (1)
    {
      BOOL v15 = *((void *)v6 + 5) == *((void *)v4 + 5) && *((void *)v6 + 6) == *((void *)v4 + 6);
      if (v15 || (sub_24EF87A60() & 1) == 0)
      {
        long long v18 = v4 + 64;
        uint64_t v17 = v4;
        uint64_t v16 = v6;
        if (v7 == v4)
        {
          v4 += 64;
          if (v7 < v18) {
            goto LABEL_24;
          }
        }
        else
        {
          v4 += 64;
        }
      }
      else
      {
        uint64_t v16 = v6 + 64;
        uint64_t v17 = v6;
        if (v7 == v6 && v7 < v16) {
          goto LABEL_24;
        }
      }
      long long v19 = *(_OWORD *)v17;
      long long v20 = *((_OWORD *)v17 + 1);
      long long v21 = *((_OWORD *)v17 + 3);
      *((_OWORD *)v7 + 2) = *((_OWORD *)v17 + 2);
      *((_OWORD *)v7 + 3) = v21;
      *(_OWORD *)uint64_t v7 = v19;
      *((_OWORD *)v7 + 1) = v20;
LABEL_24:
      v7 += 64;
      if (v4 < v14)
      {
        uint64_t v6 = v16;
        if ((unint64_t)v16 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_51:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0x3FuLL : 0)) & 0xFFFFFFFFFFFFFFC0]) {
    memmove(v6, v4, ((v14 - v4) / 64) << 6);
  }
  return 1;
}

uint64_t sub_24EF179A4(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 72;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 72;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[72 * v11] <= a4) {
      memmove(a4, __src, 72 * v11);
    }
    uint64_t v12 = &v4[72 * v11];
    if (v7 >= v6 || v10 < 72) {
      goto LABEL_39;
    }
    uint64_t v16 = (char *)(a3 - 72);
    while (1)
    {
      uint64_t v17 = v16 + 72;
      if (*((void *)v12 - 2) >= *((void *)v6 - 2))
      {
        long long v18 = v12 - 72;
        if (v17 != v12)
        {
          v12 -= 72;
          goto LABEL_36;
        }
        BOOL v19 = v16 >= v12;
        v12 -= 72;
        if (v19) {
          goto LABEL_36;
        }
      }
      else
      {
        long long v18 = v6 - 72;
        if (v17 != v6)
        {
          v6 -= 72;
LABEL_36:
          memmove(v16, v18, 0x48uLL);
          goto LABEL_37;
        }
        BOOL v19 = v16 >= v6;
        v6 -= 72;
        if (v19) {
          goto LABEL_36;
        }
      }
LABEL_37:
      if (v6 > v7)
      {
        v16 -= 72;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_39;
    }
  }
  if (a4 != __dst || &__dst[72 * v9] <= a4) {
    memmove(a4, __dst, 72 * v9);
  }
  uint64_t v12 = &v4[72 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 72)
  {
    while (1)
    {
      if (*((void *)v6 + 7) >= *((void *)v4 + 7))
      {
        BOOL v15 = v4 + 72;
        unsigned int v14 = v4;
        uint64_t v13 = v6;
        if (v7 == v4)
        {
          v4 += 72;
          if (v7 < v15) {
            goto LABEL_16;
          }
        }
        else
        {
          v4 += 72;
        }
      }
      else
      {
        uint64_t v13 = v6 + 72;
        unsigned int v14 = v6;
        if (v7 == v6 && v7 < v13) {
          goto LABEL_16;
        }
      }
      memmove(v7, v14, 0x48uLL);
LABEL_16:
      v7 += 72;
      if (v4 < v12)
      {
        uint64_t v6 = v13;
        if ((unint64_t)v13 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_39:
  uint64_t v20 = (v12 - v4) / 72;
  if (v6 != v4 || v6 >= &v4[72 * v20]) {
    memmove(v6, v4, 72 * v20);
  }
  return 1;
}

uint64_t sub_24EF17C04(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 72;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 72;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[72 * v11] <= a4) {
      memmove(a4, __src, 72 * v11);
    }
    uint64_t v12 = &v4[72 * v11];
    if (v7 >= v6 || v10 < 72) {
      goto LABEL_47;
    }
    uint64_t v17 = (char *)(a3 - 72);
    while (1)
    {
      long long v18 = v17 + 72;
      BOOL v19 = *((void *)v12 - 2) == *((void *)v6 - 2) && *((void *)v12 - 1) == *((void *)v6 - 1);
      if (v19 || (sub_24EF87A60() & 1) == 0)
      {
        uint64_t v20 = v12 - 72;
        if (v18 != v12)
        {
          v12 -= 72;
LABEL_44:
          memmove(v17, v20, 0x48uLL);
          goto LABEL_45;
        }
        BOOL v21 = v17 >= v12;
        v12 -= 72;
        if (v21) {
          goto LABEL_44;
        }
      }
      else
      {
        uint64_t v20 = v6 - 72;
        if (v18 != v6)
        {
          v6 -= 72;
          goto LABEL_44;
        }
        BOOL v21 = v17 >= v6;
        v6 -= 72;
        if (v21) {
          goto LABEL_44;
        }
      }
LABEL_45:
      if (v6 > v7)
      {
        v17 -= 72;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
  if (a4 != __dst || &__dst[72 * v9] <= a4) {
    memmove(a4, __dst, 72 * v9);
  }
  uint64_t v12 = &v4[72 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 72)
  {
    while (1)
    {
      BOOL v13 = *((void *)v6 + 7) == *((void *)v4 + 7) && *((void *)v6 + 8) == *((void *)v4 + 8);
      if (v13 || (sub_24EF87A60() & 1) == 0)
      {
        uint64_t v16 = v4 + 72;
        BOOL v15 = v4;
        unsigned int v14 = v6;
        if (v7 == v4)
        {
          v4 += 72;
          if (v7 < v16) {
            goto LABEL_20;
          }
        }
        else
        {
          v4 += 72;
        }
      }
      else
      {
        unsigned int v14 = v6 + 72;
        BOOL v15 = v6;
        if (v7 == v6 && v7 < v14) {
          goto LABEL_20;
        }
      }
      memmove(v7, v15, 0x48uLL);
LABEL_20:
      v7 += 72;
      if (v4 < v12)
      {
        uint64_t v6 = v14;
        if ((unint64_t)v14 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_47:
  uint64_t v22 = (v12 - v4) / 72;
  if (v6 != v4 || v6 >= &v4[72 * v22]) {
    memmove(v6, v4, 72 * v22);
  }
  return 1;
}

uint64_t sub_24EF17E84(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 72;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 72;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[72 * v11] <= a4) {
      memmove(a4, __src, 72 * v11);
    }
    uint64_t v12 = &v4[72 * v11];
    if (v7 >= v6 || v10 < 72) {
      goto LABEL_47;
    }
    uint64_t v17 = (char *)(a3 - 72);
    while (1)
    {
      long long v18 = v17 + 72;
      BOOL v19 = *((void *)v12 - 3) == *((void *)v6 - 3) && *((void *)v12 - 2) == *((void *)v6 - 2);
      if (v19 || (sub_24EF87A60() & 1) == 0)
      {
        uint64_t v20 = v12 - 72;
        if (v18 != v12)
        {
          v12 -= 72;
LABEL_44:
          memmove(v17, v20, 0x48uLL);
          goto LABEL_45;
        }
        BOOL v21 = v17 >= v12;
        v12 -= 72;
        if (v21) {
          goto LABEL_44;
        }
      }
      else
      {
        uint64_t v20 = v6 - 72;
        if (v18 != v6)
        {
          v6 -= 72;
          goto LABEL_44;
        }
        BOOL v21 = v17 >= v6;
        v6 -= 72;
        if (v21) {
          goto LABEL_44;
        }
      }
LABEL_45:
      if (v6 > v7)
      {
        v17 -= 72;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
  if (a4 != __dst || &__dst[72 * v9] <= a4) {
    memmove(a4, __dst, 72 * v9);
  }
  uint64_t v12 = &v4[72 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 72)
  {
    while (1)
    {
      BOOL v13 = *((void *)v6 + 6) == *((void *)v4 + 6) && *((void *)v6 + 7) == *((void *)v4 + 7);
      if (v13 || (sub_24EF87A60() & 1) == 0)
      {
        uint64_t v16 = v4 + 72;
        BOOL v15 = v4;
        unsigned int v14 = v6;
        if (v7 == v4)
        {
          v4 += 72;
          if (v7 < v16) {
            goto LABEL_20;
          }
        }
        else
        {
          v4 += 72;
        }
      }
      else
      {
        unsigned int v14 = v6 + 72;
        BOOL v15 = v6;
        if (v7 == v6 && v7 < v14) {
          goto LABEL_20;
        }
      }
      memmove(v7, v15, 0x48uLL);
LABEL_20:
      v7 += 72;
      if (v4 < v12)
      {
        uint64_t v6 = v14;
        if ((unint64_t)v14 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_47:
  uint64_t v22 = (v12 - v4) / 72;
  if (v6 != v4 || v6 >= &v4[72 * v22]) {
    memmove(v6, v4, 72 * v22);
  }
  return 1;
}

uint64_t sub_24EF18104(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 40;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 40;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[5 * v11] <= a4) {
      memmove(a4, __src, 40 * v11);
    }
    uint64_t v12 = &v4[5 * v11];
    if (v7 >= v6 || v10 < 40) {
      goto LABEL_39;
    }
    unint64_t v18 = a3 - 40;
    while (1)
    {
      BOOL v19 = (double *)(v18 + 40);
      if (*(v12 - 2) >= *(v6 - 2))
      {
        uint64_t v20 = v12 - 5;
        if (v19 != v12)
        {
          v12 -= 5;
          goto LABEL_36;
        }
        BOOL v21 = v18 >= (unint64_t)v12;
        v12 -= 5;
        if (v21) {
          goto LABEL_36;
        }
      }
      else
      {
        uint64_t v20 = v6 - 5;
        if (v19 != v6)
        {
          v6 -= 5;
LABEL_36:
          long long v22 = *(_OWORD *)v20;
          long long v23 = *((_OWORD *)v20 + 1);
          *(double *)(v18 + 32) = v20[4];
          *(_OWORD *)unint64_t v18 = v22;
          *(_OWORD *)(v18 + 16) = v23;
          goto LABEL_37;
        }
        BOOL v21 = v18 >= (unint64_t)v6;
        v6 -= 5;
        if (v21) {
          goto LABEL_36;
        }
      }
LABEL_37:
      if (v6 > v7)
      {
        v18 -= 40;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_39;
    }
  }
  if (a4 != __dst || &__dst[5 * v9] <= a4) {
    memmove(a4, __dst, 40 * v9);
  }
  uint64_t v12 = &v4[5 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 40)
  {
    while (1)
    {
      if (v6[3] >= v4[3])
      {
        BOOL v15 = v4 + 5;
        unsigned int v14 = v4;
        BOOL v13 = v6;
        if (v7 == v4)
        {
          v4 += 5;
          if (v7 < v15) {
            goto LABEL_16;
          }
        }
        else
        {
          v4 += 5;
        }
      }
      else
      {
        BOOL v13 = v6 + 5;
        unsigned int v14 = v6;
        if (v7 == v6 && v7 < v13) {
          goto LABEL_16;
        }
      }
      long long v16 = *(_OWORD *)v14;
      long long v17 = *((_OWORD *)v14 + 1);
      v7[4] = v14[4];
      *(_OWORD *)uint64_t v7 = v16;
      *((_OWORD *)v7 + 1) = v17;
LABEL_16:
      v7 += 5;
      if (v4 < v12)
      {
        uint64_t v6 = v13;
        if ((unint64_t)v13 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_39:
  uint64_t v24 = (unsigned __int128)(((char *)v12 - (char *)v4) * (__int128)0x6666666666666667) >> 64;
  uint64_t v25 = (v24 >> 4) + ((unint64_t)v24 >> 63);
  if (v6 != v4 || v6 >= &v4[5 * v25]) {
    memmove(v6, v4, 40 * v25);
  }
  return 1;
}

uint64_t sub_24EF1835C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 56;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 56;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[56 * v11] <= a4) {
      memmove(a4, __src, 56 * v11);
    }
    uint64_t v12 = &v4[56 * v11];
    if (v7 >= v6 || v10 < 56) {
      goto LABEL_47;
    }
    unint64_t v20 = a3 - 56;
    while (1)
    {
      BOOL v21 = (char *)(v20 + 56);
      BOOL v22 = *((void *)v12 - 2) == *((void *)v6 - 2) && *((void *)v12 - 1) == *((void *)v6 - 1);
      if (v22 || (sub_24EF87A60() & 1) == 0)
      {
        long long v23 = v12 - 56;
        if (v21 != v12)
        {
          v12 -= 56;
LABEL_44:
          long long v25 = *(_OWORD *)v23;
          long long v26 = *((_OWORD *)v23 + 1);
          long long v27 = *((_OWORD *)v23 + 2);
          *(void *)(v20 + 48) = *((void *)v23 + 6);
          *(_OWORD *)(v20 + 16) = v26;
          *(_OWORD *)(v20 + 32) = v27;
          *(_OWORD *)unint64_t v20 = v25;
          goto LABEL_45;
        }
        BOOL v24 = v20 >= (unint64_t)v12;
        v12 -= 56;
        if (v24) {
          goto LABEL_44;
        }
      }
      else
      {
        long long v23 = v6 - 56;
        if (v21 != v6)
        {
          v6 -= 56;
          goto LABEL_44;
        }
        BOOL v24 = v20 >= (unint64_t)v6;
        v6 -= 56;
        if (v24) {
          goto LABEL_44;
        }
      }
LABEL_45:
      if (v6 > v7)
      {
        v20 -= 56;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
  if (a4 != __dst || &__dst[56 * v9] <= a4) {
    memmove(a4, __dst, 56 * v9);
  }
  uint64_t v12 = &v4[56 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 56)
  {
    while (1)
    {
      BOOL v13 = *((void *)v6 + 5) == *((void *)v4 + 5) && *((void *)v6 + 6) == *((void *)v4 + 6);
      if (v13 || (sub_24EF87A60() & 1) == 0)
      {
        long long v16 = v4 + 56;
        BOOL v15 = v4;
        unsigned int v14 = v6;
        if (v7 == v4)
        {
          v4 += 56;
          if (v7 < v16) {
            goto LABEL_20;
          }
        }
        else
        {
          v4 += 56;
        }
      }
      else
      {
        unsigned int v14 = v6 + 56;
        BOOL v15 = v6;
        if (v7 == v6 && v7 < v14) {
          goto LABEL_20;
        }
      }
      long long v17 = *(_OWORD *)v15;
      long long v18 = *((_OWORD *)v15 + 1);
      long long v19 = *((_OWORD *)v15 + 2);
      *((void *)v7 + 6) = *((void *)v15 + 6);
      *((_OWORD *)v7 + 1) = v18;
      *((_OWORD *)v7 + 2) = v19;
      *(_OWORD *)uint64_t v7 = v17;
LABEL_20:
      v7 += 56;
      if (v4 < v12)
      {
        uint64_t v6 = v14;
        if ((unint64_t)v14 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_47:
  uint64_t v28 = (v12 - v4) / 56;
  if (v6 != v4 || v6 >= &v4[56 * v28]) {
    memmove(v6, v4, 56 * v28);
  }
  return 1;
}

char *sub_24EF185F4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985E08);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  BOOL v13 = v10 + 32;
  unsigned int v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24EF186F0(uint64_t a1)
{
  return sub_24EF185F4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24EF18704(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_24EF13848((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24EF187F0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985E50);
  char v37 = a2;
  uint64_t v6 = sub_24EF878B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1)) {
      goto LABEL_40;
    }
    if (v14 >= v11) {
      break;
    }
    long long v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v14);
    if (!v24)
    {
      int64_t v25 = v14 + 1;
      if (v14 + 1 >= v11)
      {
LABEL_31:
        swift_release();
        uint64_t v3 = v35;
        if ((v37 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v25);
      if (!v24)
      {
        while (1)
        {
          int64_t v14 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            break;
          }
          if (v14 >= v11) {
            goto LABEL_31;
          }
          unint64_t v24 = *(void *)(v36 + 8 * v14);
          ++v25;
          if (v24) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v14;
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_21:
    long long v26 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_24EF87A90();
    sub_24EF87670();
    uint64_t result = sub_24EF87AD0();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v17 == v31;
        if (v17 == v31) {
          unint64_t v17 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v12 + 8 * v17);
      }
      while (v33 == -1);
      unint64_t v18 = __clz(__rbit64(~v33)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    long long v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *long long v19 = v28;
    v19[1] = v27;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v29;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  long long v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_24EF18ADC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985E50);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24EF878A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    if (!v24) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    BOOL v22 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_24EF18C74(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v27 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 48 * v16;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v20 + 24);
    uint64_t v25 = *(void *)(v20 + 32);
    unsigned __int8 v26 = *(unsigned char *)(v20 + 40);
    *(void *)uint64_t v11 = *(void *)v20;
    *(void *)(v11 + 8) = v22;
    *(void *)(v11 + 16) = v23;
    *(void *)(v11 + 24) = v24;
    *(void *)(v11 + 32) = v25;
    *(unsigned char *)(v11 + 40) = v26;
    if (v13 == v10)
    {
      sub_24EEF7798(v21, v22, v23, v24, v25, v26);
      goto LABEL_38;
    }
    v11 += 48;
    uint64_t result = sub_24EEF7798(v21, v22, v23, v24, v25, v26);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v27;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_24EF18E94(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a4 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a4 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v10 = 0;
    uint64_t v8 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v28;
    result[2] = ~v5;
    result[3] = v10;
    result[4] = v7;
    return (void *)v8;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
    int64_t v10 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v9 = a2;
  uint64_t v25 = -1 << *(unsigned char *)(a4 + 32);
  unsigned __int8 v26 = result;
  int64_t v10 = 0;
  uint64_t v11 = 0;
  int64_t v27 = (unint64_t)(63 - v5) >> 6;
  if (!v7) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v13 = v12 | (v10 << 6);
  while (1)
  {
    ++v11;
    uint64_t v17 = *(void *)(a4 + 48) + 72 * v13;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 32);
    uint64_t v19 = *(void *)(v17 + 40);
    uint64_t v22 = *(void *)(v17 + 48);
    uint64_t v21 = *(void *)(v17 + 56);
    uint64_t v23 = *(void *)(v17 + 64);
    long long v24 = *(_OWORD *)(v17 + 16);
    *(void *)uint64_t v9 = *(void *)v17;
    *(void *)(v9 + 8) = v18;
    *(_OWORD *)(v9 + 16) = v24;
    *(void *)(v9 + 32) = v20;
    *(void *)(v9 + 40) = v19;
    *(void *)(v9 + 48) = v22;
    *(void *)(v9 + 56) = v21;
    *(void *)(v9 + 64) = v23;
    if (v11 == v8)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v9 += 72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v14 >= v27) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    if (!v15)
    {
      v10 += 2;
      if (v14 + 1 >= v27)
      {
        unint64_t v7 = 0;
        int64_t v10 = v14;
      }
      else
      {
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (v15) {
          goto LABEL_14;
        }
        int64_t v16 = v14 + 2;
        if (v14 + 2 >= v27) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v16);
        if (v15)
        {
LABEL_17:
          int64_t v14 = v16;
          goto LABEL_18;
        }
        int64_t v10 = v14 + 3;
        if (v14 + 3 < v27)
        {
          unint64_t v15 = *(void *)(v28 + 8 * v10);
          if (v15)
          {
LABEL_14:
            int64_t v14 = v10;
            goto LABEL_18;
          }
          int64_t v16 = v14 + 4;
          if (v14 + 4 >= v27)
          {
LABEL_33:
            unint64_t v7 = 0;
            goto LABEL_37;
          }
          unint64_t v15 = *(void *)(v28 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v14 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_42;
              }
              if (v14 >= v27)
              {
                unint64_t v7 = 0;
                int64_t v10 = v27 - 1;
                goto LABEL_37;
              }
              unint64_t v15 = *(void *)(v28 + 8 * v14);
              ++v16;
              if (v15) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v7 = 0;
        int64_t v10 = v14 + 2;
      }
LABEL_37:
      uint64_t v8 = v11;
LABEL_38:
      uint64_t v5 = v25;
      uint64_t result = v26;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
    int64_t v10 = v14;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_24EF19140(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a4 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a4 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v10 = 0;
    uint64_t v8 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v27;
    result[2] = ~v5;
    result[3] = v10;
    result[4] = v7;
    return (void *)v8;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
    int64_t v10 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v9 = a2;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v25 = result;
  int64_t v10 = 0;
  uint64_t v11 = 0;
  int64_t v26 = (unint64_t)(63 - v5) >> 6;
  if (!v7) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v13 = v12 | (v10 << 6);
  while (1)
  {
    ++v11;
    uint64_t v17 = *(void *)(a4 + 48) + 72 * v13;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 32);
    uint64_t v19 = *(void *)(v17 + 40);
    uint64_t v21 = *(void *)(v17 + 64);
    long long v22 = *(_OWORD *)(v17 + 16);
    long long v23 = *(_OWORD *)(v17 + 48);
    *(void *)uint64_t v9 = *(void *)v17;
    *(void *)(v9 + 8) = v18;
    *(_OWORD *)(v9 + 16) = v22;
    *(void *)(v9 + 32) = v20;
    *(void *)(v9 + 40) = v19;
    *(_OWORD *)(v9 + 48) = v23;
    *(void *)(v9 + 64) = v21;
    if (v11 == v8)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v9 += 72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v14 >= v26) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v14);
    if (!v15)
    {
      v10 += 2;
      if (v14 + 1 >= v26)
      {
        unint64_t v7 = 0;
        int64_t v10 = v14;
      }
      else
      {
        unint64_t v15 = *(void *)(v27 + 8 * v10);
        if (v15) {
          goto LABEL_14;
        }
        int64_t v16 = v14 + 2;
        if (v14 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v27 + 8 * v16);
        if (v15)
        {
LABEL_17:
          int64_t v14 = v16;
          goto LABEL_18;
        }
        int64_t v10 = v14 + 3;
        if (v14 + 3 < v26)
        {
          unint64_t v15 = *(void *)(v27 + 8 * v10);
          if (v15)
          {
LABEL_14:
            int64_t v14 = v10;
            goto LABEL_18;
          }
          int64_t v16 = v14 + 4;
          if (v14 + 4 >= v26)
          {
LABEL_33:
            unint64_t v7 = 0;
            goto LABEL_37;
          }
          unint64_t v15 = *(void *)(v27 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v14 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_42;
              }
              if (v14 >= v26)
              {
                unint64_t v7 = 0;
                int64_t v10 = v26 - 1;
                goto LABEL_37;
              }
              unint64_t v15 = *(void *)(v27 + 8 * v14);
              ++v16;
              if (v15) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v7 = 0;
        int64_t v10 = v14 + 2;
      }
LABEL_37:
      uint64_t v8 = v11;
LABEL_38:
      uint64_t v5 = v24;
      uint64_t result = v25;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
    int64_t v10 = v14;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_24EF193F4(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 56);
  uint64_t v4 = a4 + 56;
  uint64_t v5 = v6;
  uint64_t v30 = v4;
  uint64_t v7 = -1 << *(unsigned char *)(v4 - 24);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v5;
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v30;
    result[2] = ~v7;
    result[3] = v12;
    result[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  uint64_t v27 = -1 << *(unsigned char *)(v4 - 24);
  uint64_t v28 = result;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v29 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v15 = v14 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v19 = *(void *)(a4 + 48) + 72 * v15;
    uint64_t v20 = *(void *)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 40);
    uint64_t v22 = *(void *)(v19 + 48);
    uint64_t v25 = *(void *)(v19 + 56);
    uint64_t v24 = *(void *)(v19 + 64);
    long long v26 = *(_OWORD *)(v19 + 24);
    *(void *)uint64_t v11 = *(void *)v19;
    *(void *)(v11 + 8) = v20;
    *(void *)(v11 + 16) = v21;
    *(_OWORD *)(v11 + 24) = v26;
    *(void *)(v11 + 40) = v23;
    *(void *)(v11 + 48) = v22;
    *(void *)(v11 + 56) = v25;
    *(void *)(v11 + 64) = v24;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v16);
    if (!v17)
    {
      v12 += 2;
      if (v16 + 1 >= v29)
      {
        unint64_t v9 = 0;
        int64_t v12 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v30 + 8 * v12);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v30 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v12 = v16 + 3;
        if (v16 + 3 < v29)
        {
          unint64_t v17 = *(void *)(v30 + 8 * v12);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v12;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v29)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v30 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v29)
              {
                unint64_t v9 = 0;
                int64_t v12 = v29 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v30 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v16 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v27;
      uint64_t result = v28;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v12 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_24EF196B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 40 * v16;
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 32);
    long long v23 = *(_OWORD *)(v20 + 16);
    *(void *)uint64_t v11 = *(void *)v20;
    *(void *)(v11 + 8) = v21;
    *(_OWORD *)(v11 + 16) = v23;
    *(void *)(v11 + 32) = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 40;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_24EF198CC(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v25 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v26 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v18 = *(void *)(a4 + 48) + 56 * v14;
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 32);
    uint64_t v20 = *(void *)(v18 + 40);
    uint64_t v22 = *(void *)(v18 + 48);
    long long v23 = *(_OWORD *)(v18 + 16);
    *(void *)uint64_t v10 = *(void *)v18;
    *(void *)(v10 + 8) = v19;
    *(_OWORD *)(v10 + 16) = v23;
    *(void *)(v10 + 32) = v21;
    *(void *)(v10 + 40) = v20;
    *(void *)(v10 + 48) = v22;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v26)
      {
        unint64_t v8 = 0;
        int64_t v11 = v15;
      }
      else
      {
        unint64_t v16 = *(void *)(v5 + 8 * v11);
        if (v16) {
          goto LABEL_14;
        }
        int64_t v17 = v15 + 2;
        if (v15 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          int64_t v15 = v17;
          goto LABEL_18;
        }
        int64_t v11 = v15 + 3;
        if (v15 + 3 < v26)
        {
          unint64_t v16 = *(void *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            int64_t v15 = v11;
            goto LABEL_18;
          }
          int64_t v17 = v15 + 4;
          if (v15 + 4 >= v26)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v15 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v15 >= v26)
              {
                unint64_t v8 = 0;
                int64_t v11 = v26 - 1;
                goto LABEL_37;
              }
              unint64_t v16 = *(void *)(v5 + 8 * v15);
              ++v17;
              if (v16) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v15 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v24;
      uint64_t result = v25;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

char *sub_24EF19B40(uint64_t a1)
{
  return sub_24EF12184(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_24EF19B54(uint64_t a1)
{
  return sub_24EF12C54(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_269985E88);
}

char *sub_24EF19B8C(uint64_t a1)
{
  return sub_24EF12A30(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_24EF19BA0(uint64_t a1)
{
  return sub_24EF12B34(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_24EF19BB4(uint64_t a1)
{
  return sub_24EF12C54(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_269985E58);
}

char *sub_24EF19BEC(uint64_t a1)
{
  return sub_24EF12FB0(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_269985E48);
}

char *sub_24EF19C24(uint64_t a1)
{
  return sub_24EF12D78(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_24EF19C38(uint64_t a1)
{
  return sub_24EF12FB0(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_269985E38);
}

char *sub_24EF19C70(uint64_t a1)
{
  return sub_24EF12E98(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_24EF19C84(uint64_t a1)
{
  return sub_24EF12FB0(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_269985E28);
}

uint64_t sub_24EF19CBC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_24EF19D5C(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_24EF19E40@<X0>(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v10 = a1[5];
  uint64_t v12 = a1[6];
  uint64_t v22 = a1[7];
  uint64_t v13 = a1[8];
  long long v14 = a2[9];
  long long v34 = a2[8];
  long long v35 = v14;
  long long v36 = a2[10];
  uint64_t v37 = *((void *)a2 + 22);
  long long v15 = a2[5];
  long long v30 = a2[4];
  long long v31 = v15;
  long long v16 = a2[7];
  long long v32 = a2[6];
  long long v33 = v16;
  long long v17 = a2[1];
  long long v26 = *a2;
  long long v27 = v17;
  long long v18 = a2[3];
  long long v28 = a2[2];
  long long v29 = v18;
  v25[3] = &type metadata for Trainer;
  v25[4] = &protocol witness table for Trainer;
  v25[5] = sub_24EF22E44();
  v25[6] = sub_24EF22E98();
  v25[7] = sub_24EF22EEC();
  v25[8] = sub_24EF22F40();
  uint64_t v19 = (void *)swift_allocObject();
  v25[0] = v19;
  v19[2] = v6;
  v19[3] = v7;
  v19[4] = v9;
  v19[5] = v8;
  v19[6] = v11;
  v19[7] = v10;
  v19[8] = v12;
  v19[9] = v22;
  v19[10] = v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_24EF10C84(v25, a3, a4, v38);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  char v21 = v38[0];
  *(void *)a5 = v6;
  *(void *)(a5 + 8) = v7;
  *(void *)(a5 + 16) = v9;
  *(void *)(a5 + 24) = v8;
  *(void *)(a5 + 32) = v11;
  *(void *)(a5 + 40) = v10;
  *(void *)(a5 + 48) = v12;
  *(void *)(a5 + 56) = v22;
  *(void *)(a5 + 64) = v13;
  *(unsigned char *)(a5 + 72) = v21;
  return result;
}

uint64_t sub_24EF19FD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985EA0);
    uint64_t v3 = sub_24EF87850();
    uint64_t v4 = 0;
    uint64_t v61 = v3 + 56;
    uint64_t v53 = v1;
    uint64_t v54 = a1 + 32;
    uint64_t v59 = v3;
    while (1)
    {
      uint64_t v6 = v54 + 48 * v4;
      uint64_t v7 = *(void *)v6;
      uint64_t v8 = *(void *)(v6 + 8);
      double v62 = *(double *)(v6 + 16);
      double v63 = *(double *)(v6 + 24);
      double v64 = *(double *)(v6 + 32);
      uint64_t v9 = *(unsigned __int8 *)(v6 + 40);
      sub_24EF87A90();
      uint64_t v58 = v4 + 1;
      switch(v9)
      {
        case 1:
          sub_24EF87AA0();
          swift_bridgeObjectRetain_n();
          sub_24EF87670();
          sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 1u);
          sub_24EF87AC0();
          sub_24EF87AC0();
          sub_24EF87AC0();
          break;
        case 8:
          sub_24EF87AA0();
          sub_24EF87670();
          swift_bridgeObjectRelease();
          break;
        default:
          sub_24EF87AA0();
          swift_bridgeObjectRetain();
          sub_24EF87670();
          break;
      }
      uint64_t v10 = sub_24EF87AD0();
      uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v12 = v10 & ~v11;
      unint64_t v13 = v12 >> 6;
      uint64_t v14 = *(void *)(v61 + 8 * (v12 >> 6));
      uint64_t v15 = 1 << v12;
      if (((1 << v12) & v14) == 0)
      {
LABEL_117:
        *(void *)(v61 + 8 * v13) = v15 | v14;
        uint64_t v49 = *(void *)(v3 + 48) + 48 * v12;
        *(void *)uint64_t v49 = v7;
        *(void *)(v49 + 8) = v8;
        *(double *)(v49 + 16) = v62;
        *(double *)(v49 + 24) = v63;
        *(double *)(v49 + 32) = v64;
        *(unsigned char *)(v49 + 40) = v9;
        uint64_t v50 = *(void *)(v3 + 16);
        BOOL v51 = __OFADD__(v50, 1);
        uint64_t v52 = v50 + 1;
        if (v51)
        {
          __break(1u);
          JUMPOUT(0x24EF1B238);
        }
        *(void *)(v3 + 16) = v52;
        goto LABEL_6;
      }
      uint64_t v60 = ~v11;
      char v57 = v7;
      uint64_t v66 = v8;
      uint64_t v67 = v7;
      int v65 = v9;
      while (2)
      {
        uint64_t v16 = *(void *)(v3 + 48) + 48 * v12;
        uint64_t v18 = *(void *)v16;
        uint64_t v17 = *(void *)(v16 + 8);
        uint64_t v19 = *(uint64_t *)(v16 + 16);
        uint64_t v20 = *(uint64_t *)(v16 + 24);
        uint64_t v21 = *(uint64_t *)(v16 + 32);
        unsigned __int8 v22 = *(unsigned char *)(v16 + 40);
        switch(v22)
        {
          case 1u:
            if (v9 != 1) {
              goto LABEL_13;
            }
            if (v18 != v7 || v17 != v8)
            {
              char v24 = sub_24EF87A60();
              sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 1u);
              sub_24EEF7798(v18, v17, v19, v20, v21, 1u);
              sub_24EEF7780(v18, v17, v19, v20, v21, 1u);
              uint64_t v8 = v66;
              uint64_t v7 = v67;
              LODWORD(v9) = v65;
              sub_24EEF7780(v67, v66, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 1u);
              uint64_t v3 = v59;
              if (v24)
              {
                BOOL v25 = *(double *)&v19 == v62 && *(double *)&v20 == v63;
                if (v25 && *(double *)&v21 == v64) {
                  goto LABEL_132;
                }
              }
              goto LABEL_15;
            }
            sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 1u);
            sub_24EEF7798(v7, v8, v19, v20, v21, 1u);
            sub_24EEF7780(v7, v8, v19, v20, v21, 1u);
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 1u);
            BOOL v43 = *(double *)&v19 == v62 && *(double *)&v20 == v63 && *(double *)&v21 == v64;
            uint64_t v3 = v59;
            if (!v43) {
              goto LABEL_15;
            }
LABEL_132:
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 1u);
            goto LABEL_6;
          case 2u:
            if (v9 != 2) {
              goto LABEL_13;
            }
            if (v18 != v7 || v17 != v8)
            {
              char v28 = sub_24EF87A60();
              sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 2u);
              sub_24EEF7798(v18, v17, v19, v20, v21, 2u);
              sub_24EEF7780(v18, v17, v19, v20, v21, 2u);
              uint64_t v8 = v66;
              uint64_t v7 = v67;
              LODWORD(v9) = v65;
              sub_24EEF7780(v67, v66, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 2u);
              uint64_t v3 = v59;
              if (v28) {
                goto LABEL_121;
              }
              goto LABEL_15;
            }
            sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 2u);
            sub_24EEF7798(v7, v8, v19, v20, v21, 2u);
            sub_24EEF7780(v7, v8, v19, v20, v21, 2u);
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 2u);
            uint64_t v3 = v59;
LABEL_121:
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 2u);
            goto LABEL_6;
          case 3u:
            if (v9 != 3) {
              goto LABEL_13;
            }
            if (v18 != v7 || v17 != v8)
            {
              char v30 = sub_24EF87A60();
              sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 3u);
              sub_24EEF7798(v18, v17, v19, v20, v21, 3u);
              sub_24EEF7780(v18, v17, v19, v20, v21, 3u);
              uint64_t v8 = v66;
              uint64_t v7 = v67;
              LODWORD(v9) = v65;
              sub_24EEF7780(v67, v66, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 3u);
              uint64_t v3 = v59;
              if (v30) {
                goto LABEL_123;
              }
              goto LABEL_15;
            }
            sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 3u);
            sub_24EEF7798(v7, v8, v19, v20, v21, 3u);
            sub_24EEF7780(v7, v8, v19, v20, v21, 3u);
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 3u);
            uint64_t v3 = v59;
LABEL_123:
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 3u);
            goto LABEL_6;
          case 4u:
            if (v9 != 4) {
              goto LABEL_13;
            }
            if (v18 != v7 || v17 != v8)
            {
              char v32 = sub_24EF87A60();
              sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 4u);
              sub_24EEF7798(v18, v17, v19, v20, v21, 4u);
              sub_24EEF7780(v18, v17, v19, v20, v21, 4u);
              uint64_t v8 = v66;
              uint64_t v7 = v67;
              LODWORD(v9) = v65;
              sub_24EEF7780(v67, v66, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 4u);
              uint64_t v3 = v59;
              if (v32) {
                goto LABEL_125;
              }
              goto LABEL_15;
            }
            sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 4u);
            sub_24EEF7798(v7, v8, v19, v20, v21, 4u);
            sub_24EEF7780(v7, v8, v19, v20, v21, 4u);
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 4u);
            uint64_t v3 = v59;
LABEL_125:
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 4u);
            goto LABEL_6;
          case 5u:
            if (v9 != 5) {
              goto LABEL_13;
            }
            if (v18 != v7 || v17 != v8)
            {
              char v34 = sub_24EF87A60();
              sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 5u);
              sub_24EEF7798(v18, v17, v19, v20, v21, 5u);
              sub_24EEF7780(v18, v17, v19, v20, v21, 5u);
              uint64_t v8 = v66;
              uint64_t v7 = v67;
              LODWORD(v9) = v65;
              sub_24EEF7780(v67, v66, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 5u);
              uint64_t v3 = v59;
              if (v34) {
                goto LABEL_127;
              }
              goto LABEL_15;
            }
            sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 5u);
            sub_24EEF7798(v7, v8, v19, v20, v21, 5u);
            sub_24EEF7780(v7, v8, v19, v20, v21, 5u);
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 5u);
            uint64_t v3 = v59;
LABEL_127:
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 5u);
            goto LABEL_6;
          case 6u:
            if (v9 != 6) {
              goto LABEL_13;
            }
            if (v18 != v7 || v17 != v8)
            {
              char v36 = sub_24EF87A60();
              sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 6u);
              sub_24EEF7798(v18, v17, v19, v20, v21, 6u);
              sub_24EEF7780(v18, v17, v19, v20, v21, 6u);
              uint64_t v8 = v66;
              uint64_t v7 = v67;
              LODWORD(v9) = v65;
              sub_24EEF7780(v67, v66, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 6u);
              uint64_t v3 = v59;
              if (v36) {
                goto LABEL_129;
              }
              goto LABEL_15;
            }
            sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 6u);
            sub_24EEF7798(v7, v8, v19, v20, v21, 6u);
            sub_24EEF7780(v7, v8, v19, v20, v21, 6u);
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 6u);
            uint64_t v3 = v59;
LABEL_129:
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 6u);
            goto LABEL_6;
          case 7u:
            if (v9 != 7) {
              goto LABEL_13;
            }
            if (v18 != v7 || v17 != v8)
            {
              char v38 = sub_24EF87A60();
              sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 7u);
              sub_24EEF7798(v18, v17, v19, v20, v21, 7u);
              sub_24EEF7780(v18, v17, v19, v20, v21, 7u);
              uint64_t v8 = v66;
              uint64_t v7 = v67;
              LODWORD(v9) = v65;
              sub_24EEF7780(v67, v66, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 7u);
              uint64_t v3 = v59;
              if (v38) {
                goto LABEL_131;
              }
              goto LABEL_15;
            }
            sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 7u);
            sub_24EEF7798(v7, v8, v19, v20, v21, 7u);
            sub_24EEF7780(v7, v8, v19, v20, v21, 7u);
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 7u);
            uint64_t v3 = v59;
LABEL_131:
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 7u);
            goto LABEL_6;
          case 8u:
            if (v9 != 8) {
              goto LABEL_14;
            }
            unint64_t v39 = 0xEF746867696C746FLL;
            uint64_t v40 = 0x7053747369747261;
            switch(*(void *)v16)
            {
              case 1u:
                uint64_t v40 = 0x6565776F6C6C6168;
                unint64_t v39 = 0xE90000000000006ELL;
                break;
              case 2u:
                unint64_t v39 = 0xE700000000000000;
                uint64_t v40 = 0x796164696C6F68;
                break;
              case 3u:
                uint64_t v40 = 0x77654E72616E756CLL;
                uint64_t v44 = 1918985561;
                goto LABEL_98;
              case 4u:
                unint64_t v39 = 0xE700000000000000;
                uint64_t v40 = 0x7261655977656ELL;
                break;
              case 5u:
                unint64_t v39 = 0xE500000000000000;
                uint64_t v40 = 0x6564697270;
                break;
              case 6u:
                uint64_t v40 = 0x576D6172676F7270;
                unint64_t v39 = 0xEE0074756F6B726FLL;
                break;
              case 7u:
                uint64_t v40 = 0x6967736B6E616874;
                uint64_t v44 = 1735289206;
LABEL_98:
                unint64_t v39 = v44 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
                break;
              default:
                break;
            }
            uint64_t v45 = 0x7053747369747261;
            unint64_t v46 = 0xEF746867696C746FLL;
            switch(v57)
            {
              case 1:
                unint64_t v46 = 0xE90000000000006ELL;
                if (v40 == 0x6565776F6C6C6168) {
                  goto LABEL_114;
                }
                goto LABEL_115;
              case 2:
                unint64_t v46 = 0xE700000000000000;
                if (v40 != 0x796164696C6F68) {
                  goto LABEL_115;
                }
                goto LABEL_114;
              case 3:
                uint64_t v47 = 0x77654E72616E756CLL;
                uint64_t v48 = 1918985561;
                goto LABEL_113;
              case 4:
                unint64_t v46 = 0xE700000000000000;
                if (v40 != 0x7261655977656ELL) {
                  goto LABEL_115;
                }
                goto LABEL_114;
              case 5:
                unint64_t v46 = 0xE500000000000000;
                if (v40 != 0x6564697270) {
                  goto LABEL_115;
                }
                goto LABEL_114;
              case 6:
                uint64_t v45 = 0x576D6172676F7270;
                unint64_t v46 = 0xEE0074756F6B726FLL;
                goto LABEL_110;
              case 7:
                uint64_t v47 = 0x6967736B6E616874;
                uint64_t v48 = 1735289206;
LABEL_113:
                unint64_t v46 = v48 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
                if (v40 == v47) {
                  goto LABEL_114;
                }
                goto LABEL_115;
              default:
LABEL_110:
                if (v40 != v45) {
                  goto LABEL_115;
                }
LABEL_114:
                if (v39 == v46)
                {
                  swift_bridgeObjectRelease_n();
                  sub_24EEF7780(v18, v17, v19, v20, v21, 8u);
                  sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 8u);
                  uint64_t v3 = v59;
                  goto LABEL_6;
                }
LABEL_115:
                char v56 = sub_24EF87A60();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_24EEF7780(v18, v17, v19, v20, v21, 8u);
                sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 8u);
                uint64_t v3 = v59;
                LODWORD(v9) = v65;
                if (v56) {
                  goto LABEL_6;
                }
                break;
            }
            goto LABEL_15;
          default:
            if (v9)
            {
LABEL_13:
              swift_bridgeObjectRetain_n();
LABEL_14:
              sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, v65);
              sub_24EEF7780(v18, v17, v19, v20, v21, v22);
              uint64_t v8 = v66;
              uint64_t v7 = v67;
              LODWORD(v9) = v65;
              sub_24EEF7780(v67, v66, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, v65);
              sub_24EEF7780(v18, v17, v19, v20, v21, v22);
              uint64_t v3 = v59;
              goto LABEL_15;
            }
            if (v18 != v7 || v17 != v8)
            {
              char v55 = sub_24EF87A60();
              sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 0);
              sub_24EEF7798(v18, v17, v19, v20, v21, 0);
              sub_24EEF7780(v18, v17, v19, v20, v21, 0);
              uint64_t v7 = v67;
              LODWORD(v9) = v65;
              sub_24EEF7780(v67, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 0);
              uint64_t v3 = v59;
              if (v55) {
                goto LABEL_134;
              }
LABEL_15:
              unint64_t v12 = (v12 + 1) & v60;
              unint64_t v13 = v12 >> 6;
              uint64_t v14 = *(void *)(v61 + 8 * (v12 >> 6));
              uint64_t v15 = 1 << v12;
              if ((v14 & (1 << v12)) == 0) {
                goto LABEL_117;
              }
              continue;
            }
            sub_24EEF7798(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 0);
            sub_24EEF7798(v7, v8, v19, v20, v21, 0);
            sub_24EEF7780(v7, v8, v19, v20, v21, 0);
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 0);
            uint64_t v3 = v59;
LABEL_134:
            sub_24EEF7780(v7, v8, *(uint64_t *)&v62, *(uint64_t *)&v63, *(uint64_t *)&v64, 0);
LABEL_6:
            uint64_t v4 = v58;
            if (v58 == v53) {
              return v3;
            }
            break;
        }
        break;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_24EF1B2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v7)
  {
    uint64_t v47 = MEMORY[0x263F8EE78];
    sub_24EF12104(0, v7, 0);
    uint64_t v10 = 0;
    uint64_t result = v47;
    uint64_t v33 = a1 + 32;
    int64_t v34 = v7;
    uint64_t v37 = a4 + 56;
    uint64_t v35 = a4;
    do
    {
      uint64_t v11 = (uint64_t *)(v33 + (v10 << 6));
      uint64_t v13 = *v11;
      uint64_t v12 = v11[1];
      uint64_t v15 = v11[2];
      uint64_t v14 = v11[3];
      uint64_t v16 = v11[4];
      uint64_t v38 = result;
      uint64_t v39 = v11[5];
      uint64_t v17 = v11[6];
      sub_24EF22C1C(a6, (uint64_t)v46, &qword_269985D68);
      uint64_t v18 = v46[0];
      uint64_t v40 = v12;
      if (v46[0])
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        char v19 = sub_24EF0A67C(v14, v16, v18);
        swift_bridgeObjectRelease();
        if (v19)
        {
          if (a2)
          {
            v44[0] = v14;
            v44[1] = v16;
            memset(&v44[2], 0, 24);
            char v45 = 0;
            if (*(void *)(a4 + 16))
            {
              sub_24EF87A90();
              sub_24EF87AA0();
              swift_bridgeObjectRetain();
              sub_24EF87670();
              uint64_t v20 = sub_24EF87AD0();
              uint64_t v21 = -1 << *(unsigned char *)(a4 + 32);
              unint64_t v22 = v20 & ~v21;
              if ((*(void *)(v37 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
              {
                uint64_t v23 = ~v21;
                while (1)
                {
                  uint64_t v24 = *(void *)(a4 + 48) + 48 * v22;
                  uint64_t v25 = *(void *)(v24 + 32);
                  char v26 = *(unsigned char *)(v24 + 40);
                  long long v27 = *(_OWORD *)(v24 + 16);
                  v41[0] = *(_OWORD *)v24;
                  v41[1] = v27;
                  uint64_t v42 = v25;
                  char v43 = v26;
                  if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v41, (uint64_t)v44)) {
                    break;
                  }
                  unint64_t v22 = (v22 + 1) & v23;
                  if (((*(void *)(v37 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
                    goto LABEL_11;
                  }
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                char v28 = 2;
                swift_bridgeObjectRelease_n();
                goto LABEL_15;
              }
LABEL_11:
              swift_bridgeObjectRelease();
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v28 = 1;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v28 = 0;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v28 = 0;
      }
LABEL_15:
      uint64_t result = v38;
      uint64_t v47 = v38;
      unint64_t v30 = *(void *)(v38 + 16);
      unint64_t v29 = *(void *)(v38 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_24EF12104((void *)(v29 > 1), v30 + 1, 1);
        uint64_t result = v47;
      }
      ++v10;
      *(void *)(result + 16) = v30 + 1;
      uint64_t v31 = result + (v30 << 6);
      *(void *)(v31 + 32) = v13;
      *(void *)(v31 + 40) = v40;
      *(void *)(v31 + 48) = v15;
      *(void *)(v31 + 56) = v14;
      *(void *)(v31 + 64) = v16;
      *(void *)(v31 + 72) = v39;
      *(void *)(v31 + 80) = v17;
      *(unsigned char *)(v31 + 88) = v28;
      a4 = v35;
    }
    while (v10 != v34);
  }
  return result;
}

uint64_t sub_24EF1B664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v43 = MEMORY[0x263F8EE78];
    int64_t v33 = v6;
    sub_24EF120E4(0, v6, 0);
    int64_t v10 = v33;
    uint64_t v11 = 0;
    uint64_t v7 = v43;
    uint64_t v34 = a1 + 32;
    uint64_t v36 = a4;
    uint64_t v37 = a4 + 56;
    while (1)
    {
      uint64_t v12 = (uint64_t *)(v34 + 48 * v11);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      uint64_t v15 = v12[2];
      uint64_t v16 = v12[3];
      uint64_t v17 = v12[4];
      sub_24EF22C1C(a6, (uint64_t)v44, &qword_269985D68);
      if (v44[0]) {
        break;
      }
      swift_bridgeObjectRetain();
      char v27 = 0;
LABEL_16:
      uint64_t v43 = v7;
      unint64_t v29 = *(void *)(v7 + 16);
      unint64_t v28 = *(void *)(v7 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_24EF120E4((void *)(v28 > 1), v29 + 1, 1);
        int64_t v10 = v33;
        uint64_t v7 = v43;
      }
      ++v11;
      *(void *)(v7 + 16) = v29 + 1;
      uint64_t v30 = v7 + 48 * v29;
      *(void *)(v30 + 32) = v14;
      *(void *)(v30 + 40) = v13;
      *(void *)(v30 + 48) = v15;
      *(void *)(v30 + 56) = v16;
      *(void *)(v30 + 64) = v17;
      *(unsigned char *)(v30 + 72) = v27;
      a4 = v36;
      if (v11 == v10) {
        return v7;
      }
    }
    uint64_t v18 = v44[1];
    swift_bridgeObjectRetain_n();
    LOBYTE(v18) = sub_24EF0A67C(v14, v13, v18);
    swift_bridgeObjectRelease();
    if (v18)
    {
      if (a2)
      {
        v41[0] = v14;
        v41[1] = v13;
        _OWORD v41[2] = v15;
        v41[3] = v16;
        v41[4] = v17;
        char v42 = 1;
        if (*(void *)(a4 + 16))
        {
          sub_24EF87A90();
          sub_24EF87AA0();
          swift_bridgeObjectRetain();
          sub_24EF87670();
          sub_24EF87AC0();
          sub_24EF87AC0();
          sub_24EF87AC0();
          uint64_t v19 = sub_24EF87AD0();
          uint64_t v20 = -1 << *(unsigned char *)(v36 + 32);
          unint64_t v21 = v19 & ~v20;
          if ((*(void *)(v37 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
          {
            uint64_t v22 = ~v20;
            while (1)
            {
              uint64_t v23 = *(void *)(v36 + 48) + 48 * v21;
              uint64_t v24 = *(void *)(v23 + 32);
              char v25 = *(unsigned char *)(v23 + 40);
              long long v26 = *(_OWORD *)(v23 + 16);
              v38[0] = *(_OWORD *)v23;
              v38[1] = v26;
              uint64_t v39 = v24;
              char v40 = v25;
              if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v38, (uint64_t)v41)) {
                break;
              }
              unint64_t v21 = (v21 + 1) & v22;
              if (((*(void *)(v37 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
                goto LABEL_11;
              }
            }
            char v27 = 2;
            swift_bridgeObjectRelease_n();
            goto LABEL_15;
          }
LABEL_11:
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      char v27 = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      char v27 = 0;
    }
LABEL_15:
    int64_t v10 = v33;
    goto LABEL_16;
  }
  return v7;
}

uint64_t sub_24EF1B948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v49 = MEMORY[0x263F8EE78];
    int64_t v34 = v6;
    sub_24EF120B4(0, v6, 0);
    int64_t v10 = v34;
    uint64_t v11 = 0;
    uint64_t v35 = a1 + 32;
    uint64_t v36 = a4;
    uint64_t v7 = v49;
    uint64_t v38 = a4 + 56;
    while (1)
    {
      uint64_t v39 = v7;
      uint64_t v12 = (uint64_t *)(v35 + (v11 << 6));
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      uint64_t v16 = v12[2];
      uint64_t v15 = v12[3];
      uint64_t v17 = v12[4];
      uint64_t v40 = v12[5];
      uint64_t v18 = v12[6];
      sub_24EF22C1C(a6, (uint64_t)v48, &qword_269985D68);
      uint64_t v41 = v13;
      uint64_t v42 = v16;
      if (!v48[0]) {
        break;
      }
      uint64_t v19 = v48[2];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      LOBYTE(v19) = sub_24EF0A67C(v15, v17, v19);
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v28 = 0;
        goto LABEL_17;
      }
      if (!a2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v28 = 1;
        goto LABEL_17;
      }
      v46[0] = v15;
      v46[1] = v17;
      memset(&v46[2], 0, 24);
      char v47 = 2;
      if (*(void *)(a4 + 16))
      {
        sub_24EF87A90();
        sub_24EF87AA0();
        swift_bridgeObjectRetain();
        sub_24EF87670();
        uint64_t v20 = sub_24EF87AD0();
        uint64_t v21 = -1 << *(unsigned char *)(a4 + 32);
        unint64_t v22 = v20 & ~v21;
        if ((*(void *)(v38 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
        {
          uint64_t v23 = ~v21;
          while (1)
          {
            uint64_t v24 = *(void *)(a4 + 48) + 48 * v22;
            uint64_t v25 = *(void *)(v24 + 32);
            char v26 = *(unsigned char *)(v24 + 40);
            long long v27 = *(_OWORD *)(v24 + 16);
            v43[0] = *(_OWORD *)v24;
            v43[1] = v27;
            uint64_t v44 = v25;
            char v45 = v26;
            if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v43, (uint64_t)v46)) {
              break;
            }
            unint64_t v22 = (v22 + 1) & v23;
            if (((*(void *)(v38 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
              goto LABEL_11;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v28 = 2;
          swift_bridgeObjectRelease_n();
LABEL_17:
          int64_t v10 = v34;
LABEL_18:
          uint64_t v7 = v39;
          goto LABEL_19;
        }
LABEL_11:
        swift_bridgeObjectRelease();
      }
      uint64_t v7 = v39;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v28 = 1;
      int64_t v10 = v34;
LABEL_19:
      uint64_t v49 = v7;
      unint64_t v30 = *(void *)(v7 + 16);
      unint64_t v29 = *(void *)(v7 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_24EF120B4((void *)(v29 > 1), v30 + 1, 1);
        int64_t v10 = v34;
        uint64_t v7 = v49;
      }
      ++v11;
      *(void *)(v7 + 16) = v30 + 1;
      uint64_t v31 = v7 + (v30 << 6);
      *(void *)(v31 + 32) = v14;
      *(void *)(v31 + 40) = v41;
      *(void *)(v31 + 48) = v42;
      *(void *)(v31 + 56) = v15;
      *(void *)(v31 + 64) = v17;
      *(void *)(v31 + 72) = v40;
      *(void *)(v31 + 80) = v18;
      *(unsigned char *)(v31 + 88) = v28;
      a4 = v36;
      if (v11 == v10) {
        return v7;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v28 = 0;
    goto LABEL_18;
  }
  return v7;
}

uint64_t sub_24EF1BCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v56 = MEMORY[0x263F8EE78];
    int64_t v41 = v6;
    sub_24EF12084(0, v6, 0);
    uint64_t v10 = 0;
    uint64_t v38 = a1 + 32;
    uint64_t v39 = a4;
    uint64_t v7 = v56;
    uint64_t v42 = a4 + 56;
    do
    {
      uint64_t v43 = v10;
      uint64_t v44 = v7;
      uint64_t v11 = (uint64_t *)(v38 + 80 * v10);
      uint64_t v12 = *v11;
      uint64_t v13 = v11[1];
      uint64_t v14 = v11[2];
      uint64_t v15 = v11[3];
      uint64_t v17 = v11[4];
      uint64_t v16 = v11[5];
      uint64_t v18 = v11[7];
      uint64_t v45 = v11[6];
      uint64_t v19 = v11[8];
      sub_24EF22C1C(a6, (uint64_t)v55, &qword_269985D68);
      uint64_t v46 = v14;
      uint64_t v47 = v12;
      uint64_t v48 = v18;
      uint64_t v49 = v15;
      if (v55[0])
      {
        uint64_t v20 = v55[3];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        LOBYTE(v20) = sub_24EF0A67C(v17, v16, v20);
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v29 = v13;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v30 = 0;
LABEL_18:
          int64_t v32 = v41;
          uint64_t v31 = v43;
          uint64_t v7 = v44;
          goto LABEL_19;
        }
        if (!a2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v29 = v13;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v30 = 1;
          goto LABEL_18;
        }
        v53[0] = v17;
        v53[1] = v16;
        memset(&v53[2], 0, 24);
        char v54 = 3;
        if (*(void *)(a4 + 16))
        {
          sub_24EF87A90();
          sub_24EF87AA0();
          swift_bridgeObjectRetain();
          sub_24EF87670();
          uint64_t v21 = sub_24EF87AD0();
          uint64_t v22 = -1 << *(unsigned char *)(a4 + 32);
          unint64_t v23 = v21 & ~v22;
          if ((*(void *)(v42 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
          {
            uint64_t v24 = ~v22;
            while (1)
            {
              uint64_t v25 = *(void *)(a4 + 48) + 48 * v23;
              uint64_t v26 = *(void *)(v25 + 32);
              char v27 = *(unsigned char *)(v25 + 40);
              long long v28 = *(_OWORD *)(v25 + 16);
              v50[0] = *(_OWORD *)v25;
              v50[1] = v28;
              uint64_t v51 = v26;
              char v52 = v27;
              if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v50, (uint64_t)v53)) {
                break;
              }
              unint64_t v23 = (v23 + 1) & v24;
              if (((*(void *)(v42 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
                goto LABEL_11;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v29 = v13;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v30 = 2;
            swift_bridgeObjectRelease_n();
            goto LABEL_18;
          }
LABEL_11:
          swift_bridgeObjectRelease();
          uint64_t v29 = v13;
        }
        else
        {
          uint64_t v29 = v13;
        }
        uint64_t v31 = v43;
        uint64_t v7 = v44;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v30 = 1;
        int64_t v32 = v41;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v29 = v13;
        swift_bridgeObjectRetain();
        char v30 = 0;
        uint64_t v31 = v43;
        uint64_t v7 = v44;
        int64_t v32 = v41;
      }
LABEL_19:
      uint64_t v56 = v7;
      unint64_t v34 = *(void *)(v7 + 16);
      unint64_t v33 = *(void *)(v7 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_24EF12084((void *)(v33 > 1), v34 + 1, 1);
        int64_t v32 = v41;
        uint64_t v7 = v56;
      }
      uint64_t v10 = v31 + 1;
      *(void *)(v7 + 16) = v34 + 1;
      uint64_t v35 = v7 + 80 * v34;
      *(void *)(v35 + 32) = v47;
      *(void *)(v35 + 40) = v29;
      *(void *)(v35 + 48) = v46;
      *(void *)(v35 + 56) = v49;
      *(void *)(v35 + 64) = v17;
      *(void *)(v35 + 72) = v16;
      *(void *)(v35 + 80) = v45;
      *(void *)(v35 + 88) = v48;
      *(void *)(v35 + 96) = v19;
      *(unsigned char *)(v35 + 104) = v30;
      a4 = v39;
    }
    while (v10 != v32);
  }
  return v7;
}

uint64_t sub_24EF1C168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v49 = MEMORY[0x263F8EE78];
    int64_t v34 = v6;
    sub_24EF12054(0, v6, 0);
    int64_t v10 = v34;
    uint64_t v11 = 0;
    uint64_t v35 = a1 + 32;
    uint64_t v36 = a4;
    uint64_t v7 = v49;
    uint64_t v38 = a4 + 56;
    while (1)
    {
      uint64_t v39 = v7;
      uint64_t v12 = (uint64_t *)(v35 + (v11 << 6));
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      uint64_t v16 = v12[2];
      uint64_t v15 = v12[3];
      uint64_t v17 = v12[4];
      uint64_t v40 = v12[5];
      uint64_t v18 = v12[6];
      sub_24EF22C1C(a6, (uint64_t)v48, &qword_269985D68);
      uint64_t v41 = v13;
      uint64_t v42 = v16;
      if (!v48[0]) {
        break;
      }
      uint64_t v19 = v48[4];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      LOBYTE(v19) = sub_24EF0A67C(v15, v17, v19);
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v28 = 0;
        goto LABEL_17;
      }
      if (!a2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v28 = 1;
        goto LABEL_17;
      }
      v46[0] = v15;
      v46[1] = v17;
      memset(&v46[2], 0, 24);
      char v47 = 4;
      if (*(void *)(a4 + 16))
      {
        sub_24EF87A90();
        sub_24EF87AA0();
        swift_bridgeObjectRetain();
        sub_24EF87670();
        uint64_t v20 = sub_24EF87AD0();
        uint64_t v21 = -1 << *(unsigned char *)(a4 + 32);
        unint64_t v22 = v20 & ~v21;
        if ((*(void *)(v38 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
        {
          uint64_t v23 = ~v21;
          while (1)
          {
            uint64_t v24 = *(void *)(a4 + 48) + 48 * v22;
            uint64_t v25 = *(void *)(v24 + 32);
            char v26 = *(unsigned char *)(v24 + 40);
            long long v27 = *(_OWORD *)(v24 + 16);
            v43[0] = *(_OWORD *)v24;
            v43[1] = v27;
            uint64_t v44 = v25;
            char v45 = v26;
            if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v43, (uint64_t)v46)) {
              break;
            }
            unint64_t v22 = (v22 + 1) & v23;
            if (((*(void *)(v38 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
              goto LABEL_11;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v28 = 2;
          swift_bridgeObjectRelease_n();
LABEL_17:
          int64_t v10 = v34;
LABEL_18:
          uint64_t v7 = v39;
          goto LABEL_19;
        }
LABEL_11:
        swift_bridgeObjectRelease();
      }
      uint64_t v7 = v39;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v28 = 1;
      int64_t v10 = v34;
LABEL_19:
      uint64_t v49 = v7;
      unint64_t v30 = *(void *)(v7 + 16);
      unint64_t v29 = *(void *)(v7 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_24EF12054((void *)(v29 > 1), v30 + 1, 1);
        int64_t v10 = v34;
        uint64_t v7 = v49;
      }
      ++v11;
      *(void *)(v7 + 16) = v30 + 1;
      uint64_t v31 = v7 + (v30 << 6);
      *(void *)(v31 + 32) = v14;
      *(void *)(v31 + 40) = v41;
      *(void *)(v31 + 48) = v42;
      *(void *)(v31 + 56) = v15;
      *(void *)(v31 + 64) = v17;
      *(void *)(v31 + 72) = v40;
      *(void *)(v31 + 80) = v18;
      *(unsigned char *)(v31 + 88) = v28;
      a4 = v36;
      if (v11 == v10) {
        return v7;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v28 = 0;
    goto LABEL_18;
  }
  return v7;
}

uint64_t sub_24EF1C510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v7)
  {
    uint64_t v55 = MEMORY[0x263F8EE78];
    int64_t v40 = v7;
    sub_24EF12024(0, v7, 0);
    uint64_t v10 = 0;
    uint64_t v37 = a1 + 32;
    uint64_t v38 = a4;
    uint64_t result = v55;
    uint64_t v41 = a4 + 56;
    do
    {
      uint64_t v11 = (uint64_t *)(v37 + 80 * v10);
      uint64_t v13 = *v11;
      uint64_t v12 = v11[1];
      uint64_t v14 = v11[2];
      uint64_t v15 = v11[3];
      uint64_t v16 = v11[4];
      uint64_t v42 = v11[5];
      uint64_t v43 = result;
      uint64_t v17 = v11[6];
      uint64_t v44 = v11[7];
      uint64_t v18 = v11[8];
      sub_24EF22C1C(a6, (uint64_t)v54, &qword_269985D68);
      uint64_t v45 = v12;
      uint64_t v46 = v13;
      uint64_t v47 = v15;
      uint64_t v48 = v18;
      if (v54[0])
      {
        uint64_t v19 = v54[6];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        LOBYTE(v19) = sub_24EF0A67C(v15, v16, v19);
        swift_bridgeObjectRelease();
        if (v19)
        {
          if (a2)
          {
            v52[0] = v15;
            v52[1] = v16;
            memset(&v52[2], 0, 24);
            char v53 = 5;
            if (*(void *)(a4 + 16))
            {
              sub_24EF87A90();
              sub_24EF87AA0();
              swift_bridgeObjectRetain();
              sub_24EF87670();
              uint64_t v20 = sub_24EF87AD0();
              uint64_t v21 = -1 << *(unsigned char *)(a4 + 32);
              unint64_t v22 = v20 & ~v21;
              uint64_t v23 = v17;
              uint64_t v24 = v42;
              if ((*(void *)(v41 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
              {
                uint64_t v25 = ~v21;
                while (1)
                {
                  uint64_t v26 = *(void *)(a4 + 48) + 48 * v22;
                  uint64_t v27 = *(void *)(v26 + 32);
                  char v28 = *(unsigned char *)(v26 + 40);
                  long long v29 = *(_OWORD *)(v26 + 16);
                  v49[0] = *(_OWORD *)v26;
                  v49[1] = v29;
                  uint64_t v50 = v27;
                  char v51 = v28;
                  if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v49, (uint64_t)v52)) {
                    break;
                  }
                  unint64_t v22 = (v22 + 1) & v25;
                  if (((*(void *)(v41 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
                    goto LABEL_11;
                  }
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v30 = v14;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                char v31 = 2;
                swift_bridgeObjectRelease_n();
                goto LABEL_18;
              }
LABEL_11:
              swift_bridgeObjectRelease();
              uint64_t v30 = v14;
            }
            else
            {
              uint64_t v23 = v17;
              uint64_t v30 = v14;
              uint64_t v24 = v42;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v31 = 1;
LABEL_18:
            int64_t v32 = v40;
            uint64_t result = v43;
            goto LABEL_19;
          }
          swift_bridgeObjectRelease();
          uint64_t v23 = v17;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = v14;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v31 = 1;
          int64_t v32 = v40;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = v14;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v31 = 0;
          int64_t v32 = v40;
          uint64_t v23 = v17;
        }
        uint64_t v24 = v42;
        uint64_t result = v43;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v30 = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v31 = 0;
        uint64_t v23 = v17;
        uint64_t v24 = v42;
        uint64_t result = v43;
        int64_t v32 = v40;
      }
LABEL_19:
      uint64_t v55 = result;
      unint64_t v34 = *(void *)(result + 16);
      unint64_t v33 = *(void *)(result + 24);
      if (v34 >= v33 >> 1)
      {
        sub_24EF12024((void *)(v33 > 1), v34 + 1, 1);
        int64_t v32 = v40;
        uint64_t result = v55;
      }
      ++v10;
      *(void *)(result + 16) = v34 + 1;
      uint64_t v35 = result + 80 * v34;
      *(void *)(v35 + 32) = v46;
      *(void *)(v35 + 40) = v45;
      *(void *)(v35 + 48) = v30;
      *(void *)(v35 + 56) = v47;
      *(void *)(v35 + 64) = v16;
      *(void *)(v35 + 72) = v24;
      *(void *)(v35 + 80) = v23;
      *(void *)(v35 + 88) = v44;
      *(void *)(v35 + 96) = v48;
      *(unsigned char *)(v35 + 104) = v31;
      a4 = v38;
    }
    while (v10 != v32);
  }
  return result;
}

uint64_t sub_24EF1C948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v53 = MEMORY[0x263F8EE78];
    int64_t v36 = v6;
    sub_24EF12004(0, v6, 0);
    int64_t v10 = v36;
    uint64_t v11 = 0;
    uint64_t v37 = a1 + 32;
    uint64_t v38 = a4;
    uint64_t v7 = v53;
    uint64_t v40 = a4 + 56;
    while (1)
    {
      uint64_t v41 = v7;
      uint64_t v12 = (uint64_t *)(v37 + 72 * v11);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      uint64_t v16 = v12[2];
      uint64_t v15 = v12[3];
      uint64_t v17 = v12[4];
      uint64_t v18 = v12[6];
      uint64_t v42 = v12[7];
      uint64_t v43 = v12[5];
      sub_24EF22C1C(a6, (uint64_t)v52, &qword_269985D68);
      uint64_t v44 = v13;
      uint64_t v45 = v18;
      uint64_t v46 = v16;
      if (!v52[0]) {
        break;
      }
      uint64_t v19 = v52[7];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      LOBYTE(v19) = sub_24EF0A67C(v15, v17, v19);
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v30 = 0;
        int64_t v10 = v36;
        goto LABEL_14;
      }
      if (!a2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v23 = v14;
        swift_bridgeObjectRelease();
        char v30 = 1;
        int64_t v10 = v36;
        goto LABEL_15;
      }
      v50[0] = v15;
      v50[1] = v17;
      memset(&v50[2], 0, 24);
      char v51 = 6;
      if (*(void *)(a4 + 16))
      {
        sub_24EF87A90();
        sub_24EF87AA0();
        swift_bridgeObjectRetain();
        sub_24EF87670();
        uint64_t v20 = sub_24EF87AD0();
        uint64_t v21 = -1 << *(unsigned char *)(a4 + 32);
        unint64_t v22 = v20 & ~v21;
        uint64_t v23 = v14;
        uint64_t v24 = v42;
        if ((*(void *)(v40 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
        {
          uint64_t v25 = ~v21;
          while (1)
          {
            uint64_t v26 = *(void *)(a4 + 48) + 48 * v22;
            uint64_t v27 = *(void *)(v26 + 32);
            char v28 = *(unsigned char *)(v26 + 40);
            long long v29 = *(_OWORD *)(v26 + 16);
            v47[0] = *(_OWORD *)v26;
            v47[1] = v29;
            uint64_t v48 = v27;
            char v49 = v28;
            if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v47, (uint64_t)v50)) {
              break;
            }
            unint64_t v22 = (v22 + 1) & v25;
            if (((*(void *)(v40 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
              goto LABEL_11;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v30 = 2;
          swift_bridgeObjectRelease_n();
          int64_t v10 = v36;
          uint64_t v7 = v41;
          goto LABEL_16;
        }
LABEL_11:
        swift_bridgeObjectRelease();
        uint64_t v7 = v41;
      }
      else
      {
        uint64_t v23 = v14;
        uint64_t v7 = v41;
        uint64_t v24 = v42;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v30 = 1;
      int64_t v10 = v36;
LABEL_16:
      uint64_t v53 = v7;
      unint64_t v32 = *(void *)(v7 + 16);
      unint64_t v31 = *(void *)(v7 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_24EF12004((void *)(v31 > 1), v32 + 1, 1);
        int64_t v10 = v36;
        uint64_t v7 = v53;
      }
      ++v11;
      *(void *)(v7 + 16) = v32 + 1;
      uint64_t v33 = v7 + 72 * v32;
      *(void *)(v33 + 32) = v23;
      *(void *)(v33 + 40) = v44;
      *(void *)(v33 + 48) = v46;
      *(void *)(v33 + 56) = v15;
      *(void *)(v33 + 64) = v17;
      *(void *)(v33 + 72) = v43;
      *(void *)(v33 + 80) = v45;
      *(void *)(v33 + 88) = v24;
      *(unsigned char *)(v33 + 96) = v30;
      a4 = v38;
      if (v11 == v10) {
        return v7;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v30 = 0;
LABEL_14:
    uint64_t v23 = v14;
LABEL_15:
    uint64_t v7 = v41;
    uint64_t v24 = v42;
    goto LABEL_16;
  }
  return v7;
}

uint64_t sub_24EF1CD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v7)
  {
    uint64_t v55 = MEMORY[0x263F8EE78];
    int64_t v40 = v7;
    sub_24EF11FD4(0, v7, 0);
    uint64_t v10 = 0;
    uint64_t v37 = a1 + 32;
    uint64_t v38 = a4;
    uint64_t result = v55;
    uint64_t v41 = a4 + 56;
    do
    {
      uint64_t v11 = (uint64_t *)(v37 + 80 * v10);
      uint64_t v13 = *v11;
      uint64_t v12 = v11[1];
      uint64_t v14 = v11[2];
      uint64_t v15 = v11[3];
      uint64_t v16 = v11[4];
      uint64_t v42 = v11[5];
      uint64_t v43 = result;
      uint64_t v17 = v11[6];
      uint64_t v44 = v11[7];
      uint64_t v18 = v11[8];
      sub_24EF22C1C(a6, (uint64_t)v54, &qword_269985D68);
      uint64_t v45 = v12;
      uint64_t v46 = v13;
      uint64_t v47 = v15;
      uint64_t v48 = v18;
      if (v54[0])
      {
        uint64_t v19 = v54[8];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        LOBYTE(v19) = sub_24EF0A67C(v15, v16, v19);
        swift_bridgeObjectRelease();
        if (v19)
        {
          if (a2)
          {
            v52[0] = v15;
            v52[1] = v16;
            memset(&v52[2], 0, 24);
            char v53 = 7;
            if (*(void *)(a4 + 16))
            {
              sub_24EF87A90();
              sub_24EF87AA0();
              swift_bridgeObjectRetain();
              sub_24EF87670();
              uint64_t v20 = sub_24EF87AD0();
              uint64_t v21 = -1 << *(unsigned char *)(a4 + 32);
              unint64_t v22 = v20 & ~v21;
              uint64_t v23 = v17;
              uint64_t v24 = v42;
              if ((*(void *)(v41 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
              {
                uint64_t v25 = ~v21;
                while (1)
                {
                  uint64_t v26 = *(void *)(a4 + 48) + 48 * v22;
                  uint64_t v27 = *(void *)(v26 + 32);
                  char v28 = *(unsigned char *)(v26 + 40);
                  long long v29 = *(_OWORD *)(v26 + 16);
                  v49[0] = *(_OWORD *)v26;
                  v49[1] = v29;
                  uint64_t v50 = v27;
                  char v51 = v28;
                  if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v49, (uint64_t)v52)) {
                    break;
                  }
                  unint64_t v22 = (v22 + 1) & v25;
                  if (((*(void *)(v41 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
                    goto LABEL_11;
                  }
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v30 = v14;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                char v31 = 2;
                swift_bridgeObjectRelease_n();
                goto LABEL_18;
              }
LABEL_11:
              swift_bridgeObjectRelease();
              uint64_t v30 = v14;
            }
            else
            {
              uint64_t v23 = v17;
              uint64_t v30 = v14;
              uint64_t v24 = v42;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v31 = 1;
LABEL_18:
            int64_t v32 = v40;
            uint64_t result = v43;
            goto LABEL_19;
          }
          swift_bridgeObjectRelease();
          uint64_t v23 = v17;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = v14;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v31 = 1;
          int64_t v32 = v40;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = v14;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v31 = 0;
          int64_t v32 = v40;
          uint64_t v23 = v17;
        }
        uint64_t v24 = v42;
        uint64_t result = v43;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v30 = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v31 = 0;
        uint64_t v23 = v17;
        uint64_t v24 = v42;
        uint64_t result = v43;
        int64_t v32 = v40;
      }
LABEL_19:
      uint64_t v55 = result;
      unint64_t v34 = *(void *)(result + 16);
      unint64_t v33 = *(void *)(result + 24);
      if (v34 >= v33 >> 1)
      {
        sub_24EF11FD4((void *)(v33 > 1), v34 + 1, 1);
        int64_t v32 = v40;
        uint64_t result = v55;
      }
      ++v10;
      *(void *)(result + 16) = v34 + 1;
      uint64_t v35 = result + 80 * v34;
      *(void *)(v35 + 32) = v46;
      *(void *)(v35 + 40) = v45;
      *(void *)(v35 + 48) = v30;
      *(void *)(v35 + 56) = v47;
      *(void *)(v35 + 64) = v16;
      *(void *)(v35 + 72) = v24;
      *(void *)(v35 + 80) = v23;
      *(void *)(v35 + 88) = v44;
      *(void *)(v35 + 96) = v48;
      *(unsigned char *)(v35 + 104) = v31;
      a4 = v38;
    }
    while (v10 != v32);
  }
  return result;
}

uint64_t sub_24EF1D154(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, long long *a8, uint64_t a9)
{
  int v68 = a7;
  uint64_t v46 = a4;
  uint64_t v47 = a6;
  uint64_t v45 = a3;
  long long v13 = *a8;
  long long v43 = a8[1];
  long long v44 = v13;
  long long v14 = a8[2];
  long long v41 = a8[3];
  long long v42 = v14;
  uint64_t v40 = *((void *)a8 + 8);
  uint64_t v15 = type metadata accessor for FilterSectionDescriptor() - 8;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (uint64_t *)((char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = MEMORY[0x263F8EE78];
  if (v19)
  {
    uint64_t v35 = v9;
    uint64_t v39 = a9;
    uint64_t v67 = MEMORY[0x263F8EE78];
    uint64_t v37 = a5;
    uint64_t v21 = v16;
    sub_24EF11FB4(0, v19, 0);
    uint64_t v20 = v67;
    unint64_t v38 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    uint64_t v22 = a1 + v38;
    uint64_t v36 = *(void *)(v21 + 72);
    v37 &= 1u;
    do
    {
      long long v23 = a2[9];
      long long v63 = a2[8];
      long long v64 = v23;
      long long v65 = a2[10];
      uint64_t v66 = *((void *)a2 + 22);
      long long v24 = a2[5];
      long long v59 = a2[4];
      long long v60 = v24;
      long long v25 = a2[7];
      long long v61 = a2[6];
      long long v62 = v25;
      long long v26 = a2[1];
      long long v55 = *a2;
      long long v56 = v26;
      long long v27 = a2[3];
      long long v57 = a2[2];
      long long v58 = v27;
      long long v28 = *(_OWORD *)(v45 + 48);
      v53[2] = *(_OWORD *)(v45 + 32);
      v53[3] = v28;
      uint64_t v54 = *(void *)(v45 + 64);
      long long v29 = *(_OWORD *)(v45 + 16);
      v53[0] = *(_OWORD *)v45;
      v53[1] = v29;
      v51[0] = v46;
      v51[1] = v37;
      v51[2] = v47;
      char v52 = v68;
      v49[0] = v44;
      v49[1] = v43;
      _OWORD v49[2] = v42;
      v49[3] = v41;
      uint64_t v50 = v40;
      sub_24EF22C1C(v39, (uint64_t)v48, &qword_269985D58);
      sub_24EF0B144(v22, (uint64_t)v53, (uint64_t)v51, (uint64_t)v49, v48, v18);
      uint64_t v67 = v20;
      unint64_t v31 = *(void *)(v20 + 16);
      unint64_t v30 = *(void *)(v20 + 24);
      uint64_t v32 = v20;
      if (v31 >= v30 >> 1)
      {
        sub_24EF11FB4(v30 > 1, v31 + 1, 1);
        uint64_t v32 = v67;
      }
      *(void *)(v32 + 16) = v31 + 1;
      uint64_t v33 = v36;
      sub_24EF22B00((uint64_t)v18, v32 + v38 + v31 * v36, (uint64_t (*)(void))type metadata accessor for FilterSectionDescriptor);
      v22 += v33;
      --v19;
      uint64_t v20 = v32;
    }
    while (v19);
  }
  return v20;
}

uint64_t sub_24EF1D3F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985E98);
    uint64_t v3 = sub_24EF87850();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      int v7 = *(unsigned __int8 *)(v6 + v4);
      sub_24EF87A90();
      sub_24EF87AA0();
      uint64_t result = sub_24EF87AD0();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_24EF1D53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  uint64_t v5 = a2 + 40;
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v7 = a1 + 32;
LABEL_3:
  if (v4 <= v3) {
    unint64_t v8 = v3;
  }
  else {
    unint64_t v8 = v4;
  }
  while (2)
  {
    if (v4 == v8)
    {
      __break(1u);
      JUMPOUT(0x24EF1D83CLL);
    }
    int v9 = *(unsigned __int8 *)(v7 + v4++);
    switch(*(unsigned char *)(v5 + *(int *)(type metadata accessor for FilterState() + 28)))
    {
      case 1:
        if (v9 != 1) {
          goto LABEL_27;
        }
        goto LABEL_7;
      case 2:
        if (v9 != 2) {
          goto LABEL_27;
        }
        goto LABEL_7;
      case 3:
        if (v9 != 3) {
          goto LABEL_27;
        }
        goto LABEL_7;
      case 4:
        if (v9 != 4) {
          goto LABEL_27;
        }
        goto LABEL_7;
      case 5:
        if (v9 != 5) {
          goto LABEL_27;
        }
        goto LABEL_7;
      case 6:
        if (v9 != 6) {
          goto LABEL_27;
        }
        goto LABEL_7;
      case 7:
        if (v9 != 7) {
          goto LABEL_27;
        }
        goto LABEL_7;
      case 8:
        if (v9 != 8) {
          goto LABEL_27;
        }
        goto LABEL_7;
      default:
        if (!v9) {
          goto LABEL_7;
        }
LABEL_27:
        sub_24EF22C1C(a3, (uint64_t)v27, &qword_269985D58);
        if (v27[0])
        {
          uint64_t v10 = v28;
          if (*(void *)(v28 + 16))
          {
            sub_24EF87A90();
            sub_24EF87AA0();
            uint64_t v11 = sub_24EF87AD0();
            uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
            unint64_t v13 = v11 & ~v12;
            if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
            {
              uint64_t v14 = *(void *)(v10 + 48);
              if (*(unsigned __int8 *)(v14 + v13) == v9) {
                goto LABEL_42;
              }
              uint64_t v15 = ~v12;
              while (1)
              {
                unint64_t v13 = (v13 + 1) & v15;
                if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
                  break;
                }
                if (*(unsigned __int8 *)(v14 + v13) == v9) {
                  goto LABEL_42;
                }
              }
            }
          }
LABEL_7:
          if (v4 == v3) {
            return v6;
          }
          continue;
        }
        uint64_t v16 = sub_24EF1D3F8((uint64_t)&unk_27009B550);
        if (!*(void *)(v16 + 16)
          || (sub_24EF87A90(),
              sub_24EF87AA0(),
              uint64_t v17 = sub_24EF87AD0(),
              uint64_t v18 = -1 << *(unsigned char *)(v16 + 32),
              unint64_t v19 = v17 & ~v18,
              ((*(void *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0))
        {
LABEL_6:
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
        uint64_t v20 = *(void *)(v16 + 48);
        if (*(unsigned __int8 *)(v20 + v19) != v9)
        {
          uint64_t v21 = ~v18;
          do
          {
            unint64_t v19 = (v19 + 1) & v21;
            if (((*(void *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
              goto LABEL_6;
            }
          }
          while (*(unsigned __int8 *)(v20 + v19) != v9);
        }
        swift_bridgeObjectRelease();
LABEL_42:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v29 = v6;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_24EF11F94(0, *(void *)(v6 + 16) + 1, 1);
          uint64_t v6 = v29;
        }
        unint64_t v24 = *(void *)(v6 + 16);
        unint64_t v23 = *(void *)(v6 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_24EF11F94((char *)(v23 > 1), v24 + 1, 1);
          uint64_t v6 = v29;
        }
        *(void *)(v6 + 16) = v24 + 1;
        *(unsigned char *)(v6 + v24 + 32) = v9;
        if (v4 != v3) {
          goto LABEL_3;
        }
        return v6;
    }
  }
}

uint64_t sub_24EF1D860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v46 = MEMORY[0x263F8EE78];
    sub_24EF12104(0, v4, 0);
    uint64_t v7 = a3;
    uint64_t v8 = 0;
    uint64_t result = v46;
    uint64_t v34 = a1 + 32;
    uint64_t v35 = a2;
    int64_t v32 = v4;
    uint64_t v36 = a2 + 56;
    int64_t v9 = v4;
    while (1)
    {
      uint64_t v10 = (uint64_t *)(v34 + 56 * v8);
      uint64_t v12 = *v10;
      uint64_t v11 = v10[1];
      uint64_t v14 = v10[2];
      uint64_t v13 = v10[3];
      uint64_t v15 = v10[4];
      uint64_t v37 = result;
      uint64_t v38 = v10[5];
      uint64_t v16 = v10[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v39 = v13;
      uint64_t v40 = v16;
      if (v7) {
        break;
      }
      uint64_t v26 = v14;
      uint64_t v27 = v12;
      char v28 = 0;
LABEL_19:
      uint64_t result = v37;
      uint64_t v46 = v37;
      unint64_t v30 = *(void *)(v37 + 16);
      unint64_t v29 = *(void *)(v37 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_24EF12104((void *)(v29 > 1), v30 + 1, 1);
        int64_t v9 = v32;
        uint64_t v7 = a3;
        uint64_t result = v46;
      }
      ++v8;
      *(void *)(result + 16) = v30 + 1;
      uint64_t v31 = result + (v30 << 6);
      *(void *)(v31 + 32) = v27;
      *(void *)(v31 + 40) = v11;
      *(void *)(v31 + 48) = v26;
      *(void *)(v31 + 56) = v39;
      *(void *)(v31 + 64) = v15;
      *(void *)(v31 + 72) = v38;
      *(void *)(v31 + 80) = v40;
      *(unsigned char *)(v31 + 88) = v28;
      a2 = v35;
      if (v8 == v9) {
        return result;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v17 = sub_24EF0A67C(v13, v15, v7);
    swift_bridgeObjectRelease();
    if (v17)
    {
      if (a2)
      {
        v44[0] = v13;
        v44[1] = v15;
        memset(&v44[2], 0, 24);
        char v45 = 0;
        if (*(void *)(a2 + 16))
        {
          sub_24EF87A90();
          sub_24EF87AA0();
          swift_bridgeObjectRetain();
          sub_24EF87670();
          uint64_t v18 = sub_24EF87AD0();
          uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v20 = v18 & ~v19;
          if ((*(void *)(v36 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
          {
            uint64_t v21 = ~v19;
            while (1)
            {
              uint64_t v22 = *(void *)(a2 + 48) + 48 * v20;
              uint64_t v23 = *(void *)(v22 + 32);
              char v24 = *(unsigned char *)(v22 + 40);
              long long v25 = *(_OWORD *)(v22 + 16);
              v41[0] = *(_OWORD *)v22;
              v41[1] = v25;
              uint64_t v42 = v23;
              char v43 = v24;
              if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v41, (uint64_t)v44)) {
                break;
              }
              unint64_t v20 = (v20 + 1) & v21;
              if (((*(void *)(v36 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
                goto LABEL_11;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v26 = v14;
            swift_bridgeObjectRelease();
            uint64_t v27 = v12;
            swift_bridgeObjectRelease();
            char v28 = 2;
            swift_bridgeObjectRelease_n();
            goto LABEL_18;
          }
LABEL_11:
          swift_bridgeObjectRelease();
          uint64_t v26 = v14;
          uint64_t v27 = v12;
        }
        else
        {
          uint64_t v26 = v14;
          uint64_t v27 = v12;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v26 = v14;
        swift_bridgeObjectRelease();
        uint64_t v27 = v12;
      }
      swift_bridgeObjectRelease();
      char v28 = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = v14;
      swift_bridgeObjectRelease();
      uint64_t v27 = v12;
      swift_bridgeObjectRelease();
      char v28 = 0;
    }
LABEL_18:
    int64_t v9 = v32;
    uint64_t v7 = a3;
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_24EF1DBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v39 = MEMORY[0x263F8EE78];
    sub_24EF120E4(0, v3, 0);
    uint64_t v7 = a3;
    uint64_t v8 = 0;
    uint64_t v33 = a1 + 32;
    uint64_t v4 = v39;
    uint64_t v30 = a2 + 56;
    int64_t v31 = v3;
    int64_t v9 = v3;
    while (1)
    {
      uint64_t v10 = (uint64_t *)(v33 + 40 * v8);
      uint64_t v12 = *v10;
      uint64_t v11 = v10[1];
      uint64_t v13 = v10[2];
      uint64_t v14 = v10[3];
      uint64_t v15 = v10[4];
      swift_bridgeObjectRetain();
      if (v7) {
        break;
      }
      char v25 = 0;
LABEL_16:
      uint64_t v39 = v4;
      unint64_t v27 = *(void *)(v4 + 16);
      unint64_t v26 = *(void *)(v4 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_24EF120E4((void *)(v26 > 1), v27 + 1, 1);
        int64_t v9 = v31;
        uint64_t v7 = a3;
        uint64_t v4 = v39;
      }
      ++v8;
      *(void *)(v4 + 16) = v27 + 1;
      uint64_t v28 = v4 + 48 * v27;
      *(void *)(v28 + 32) = v12;
      *(void *)(v28 + 40) = v11;
      *(void *)(v28 + 48) = v13;
      *(void *)(v28 + 56) = v14;
      *(void *)(v28 + 64) = v15;
      *(unsigned char *)(v28 + 72) = v25;
      if (v8 == v9) {
        return v4;
      }
    }
    swift_bridgeObjectRetain_n();
    char v16 = sub_24EF0A67C(v12, v11, v7);
    swift_bridgeObjectRelease();
    if (v16)
    {
      if (a2)
      {
        v37[0] = v12;
        v37[1] = v11;
        v37[2] = v13;
        v37[3] = v14;
        v37[4] = v15;
        char v38 = 1;
        if (*(void *)(a2 + 16))
        {
          sub_24EF87A90();
          sub_24EF87AA0();
          swift_bridgeObjectRetain();
          sub_24EF87670();
          sub_24EF87AC0();
          sub_24EF87AC0();
          sub_24EF87AC0();
          uint64_t v17 = sub_24EF87AD0();
          uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v19 = v17 & ~v18;
          if ((*(void *)(v30 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
          {
            uint64_t v20 = ~v18;
            while (1)
            {
              uint64_t v21 = *(void *)(a2 + 48) + 48 * v19;
              uint64_t v22 = *(void *)(v21 + 32);
              char v23 = *(unsigned char *)(v21 + 40);
              long long v24 = *(_OWORD *)(v21 + 16);
              v34[0] = *(_OWORD *)v21;
              v34[1] = v24;
              uint64_t v35 = v22;
              char v36 = v23;
              if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v34, (uint64_t)v37)) {
                break;
              }
              unint64_t v19 = (v19 + 1) & v20;
              if (((*(void *)(v30 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
                goto LABEL_11;
              }
            }
            swift_bridgeObjectRelease_n();
            char v25 = 2;
            goto LABEL_15;
          }
LABEL_11:
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease_n();
      char v25 = 1;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      char v25 = 0;
    }
LABEL_15:
    int64_t v9 = v31;
    uint64_t v7 = a3;
    goto LABEL_16;
  }
  return v4;
}

uint64_t sub_24EF1DEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v46 = MEMORY[0x263F8EE78];
    sub_24EF120B4(0, v4, 0);
    uint64_t v7 = a3;
    uint64_t v8 = 0;
    uint64_t result = v46;
    uint64_t v34 = a1 + 32;
    uint64_t v35 = a2;
    int64_t v32 = v4;
    uint64_t v36 = a2 + 56;
    int64_t v9 = v4;
    while (1)
    {
      uint64_t v10 = (uint64_t *)(v34 + 56 * v8);
      uint64_t v12 = *v10;
      uint64_t v11 = v10[1];
      uint64_t v14 = v10[2];
      uint64_t v13 = v10[3];
      uint64_t v15 = v10[4];
      uint64_t v37 = result;
      uint64_t v38 = v10[5];
      uint64_t v16 = v10[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v39 = v13;
      uint64_t v40 = v16;
      if (v7) {
        break;
      }
      uint64_t v26 = v14;
      uint64_t v27 = v12;
      char v28 = 0;
LABEL_19:
      uint64_t result = v37;
      uint64_t v46 = v37;
      unint64_t v30 = *(void *)(v37 + 16);
      unint64_t v29 = *(void *)(v37 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_24EF120B4((void *)(v29 > 1), v30 + 1, 1);
        int64_t v9 = v32;
        uint64_t v7 = a3;
        uint64_t result = v46;
      }
      ++v8;
      *(void *)(result + 16) = v30 + 1;
      uint64_t v31 = result + (v30 << 6);
      *(void *)(v31 + 32) = v27;
      *(void *)(v31 + 40) = v11;
      *(void *)(v31 + 48) = v26;
      *(void *)(v31 + 56) = v39;
      *(void *)(v31 + 64) = v15;
      *(void *)(v31 + 72) = v38;
      *(void *)(v31 + 80) = v40;
      *(unsigned char *)(v31 + 88) = v28;
      a2 = v35;
      if (v8 == v9) {
        return result;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v17 = sub_24EF0A67C(v13, v15, v7);
    swift_bridgeObjectRelease();
    if (v17)
    {
      if (a2)
      {
        v44[0] = v13;
        v44[1] = v15;
        memset(&v44[2], 0, 24);
        char v45 = 2;
        if (*(void *)(a2 + 16))
        {
          sub_24EF87A90();
          sub_24EF87AA0();
          swift_bridgeObjectRetain();
          sub_24EF87670();
          uint64_t v18 = sub_24EF87AD0();
          uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v20 = v18 & ~v19;
          if ((*(void *)(v36 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
          {
            uint64_t v21 = ~v19;
            while (1)
            {
              uint64_t v22 = *(void *)(a2 + 48) + 48 * v20;
              uint64_t v23 = *(void *)(v22 + 32);
              char v24 = *(unsigned char *)(v22 + 40);
              long long v25 = *(_OWORD *)(v22 + 16);
              v41[0] = *(_OWORD *)v22;
              v41[1] = v25;
              uint64_t v42 = v23;
              char v43 = v24;
              if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v41, (uint64_t)v44)) {
                break;
              }
              unint64_t v20 = (v20 + 1) & v21;
              if (((*(void *)(v36 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
                goto LABEL_11;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v26 = v14;
            swift_bridgeObjectRelease();
            uint64_t v27 = v12;
            swift_bridgeObjectRelease();
            char v28 = 2;
            swift_bridgeObjectRelease_n();
            goto LABEL_18;
          }
LABEL_11:
          swift_bridgeObjectRelease();
          uint64_t v26 = v14;
          uint64_t v27 = v12;
        }
        else
        {
          uint64_t v26 = v14;
          uint64_t v27 = v12;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v26 = v14;
        swift_bridgeObjectRelease();
        uint64_t v27 = v12;
      }
      swift_bridgeObjectRelease();
      char v28 = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = v14;
      swift_bridgeObjectRelease();
      uint64_t v27 = v12;
      swift_bridgeObjectRelease();
      char v28 = 0;
    }
LABEL_18:
    int64_t v9 = v32;
    uint64_t v7 = a3;
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_24EF1E230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v53 = MEMORY[0x263F8EE78];
    sub_24EF12084(0, v4, 0);
    uint64_t v7 = a3;
    uint64_t v8 = 0;
    uint64_t v36 = a1 + 32;
    uint64_t v37 = a2;
    uint64_t result = v53;
    int64_t v38 = v4;
    uint64_t v39 = a2 + 56;
    do
    {
      uint64_t v40 = v8;
      uint64_t v41 = result;
      int64_t v9 = (uint64_t *)(v36 + 72 * v8);
      uint64_t v10 = *v9;
      uint64_t v11 = v9[1];
      uint64_t v12 = v9[2];
      uint64_t v13 = v9[3];
      uint64_t v15 = v9[4];
      uint64_t v14 = v9[5];
      uint64_t v16 = v9[7];
      uint64_t v42 = v9[6];
      uint64_t v17 = v9[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v45 = v16;
      uint64_t v46 = v14;
      uint64_t v43 = v15;
      uint64_t v44 = v12;
      uint64_t v47 = v17;
      if (v7)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v18 = sub_24EF0A67C(v15, v14, v7);
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v27 = v11;
          swift_bridgeObjectRelease();
          uint64_t v28 = v10;
          swift_bridgeObjectRelease();
          char v29 = 0;
LABEL_18:
          uint64_t v7 = a3;
          int64_t v31 = v38;
          uint64_t v30 = v40;
          uint64_t result = v41;
          goto LABEL_19;
        }
        if (!a2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v27 = v11;
          swift_bridgeObjectRelease();
          uint64_t v28 = v10;
          swift_bridgeObjectRelease();
          char v29 = 1;
          goto LABEL_18;
        }
        v51[0] = v15;
        v51[1] = v14;
        memset(&v51[2], 0, 24);
        char v52 = 3;
        if (*(void *)(a2 + 16))
        {
          sub_24EF87A90();
          sub_24EF87AA0();
          swift_bridgeObjectRetain();
          sub_24EF87670();
          uint64_t v19 = sub_24EF87AD0();
          uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v21 = v19 & ~v20;
          if ((*(void *)(v39 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
          {
            uint64_t v22 = ~v20;
            while (1)
            {
              uint64_t v23 = *(void *)(a2 + 48) + 48 * v21;
              uint64_t v24 = *(void *)(v23 + 32);
              char v25 = *(unsigned char *)(v23 + 40);
              long long v26 = *(_OWORD *)(v23 + 16);
              v48[0] = *(_OWORD *)v23;
              v48[1] = v26;
              uint64_t v49 = v24;
              char v50 = v25;
              if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v48, (uint64_t)v51)) {
                break;
              }
              unint64_t v21 = (v21 + 1) & v22;
              if (((*(void *)(v39 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
                goto LABEL_11;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v27 = v11;
            swift_bridgeObjectRelease();
            uint64_t v28 = v10;
            swift_bridgeObjectRelease();
            char v29 = 2;
            swift_bridgeObjectRelease_n();
            goto LABEL_18;
          }
LABEL_11:
          swift_bridgeObjectRelease();
          uint64_t v27 = v11;
          uint64_t v28 = v10;
        }
        else
        {
          uint64_t v27 = v11;
          uint64_t v28 = v10;
        }
        uint64_t v30 = v40;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v29 = 1;
        uint64_t v7 = a3;
        int64_t v31 = v38;
        uint64_t result = v41;
      }
      else
      {
        uint64_t v27 = v11;
        uint64_t v28 = v10;
        char v29 = 0;
        uint64_t v30 = v40;
        uint64_t result = v41;
        int64_t v31 = v38;
      }
LABEL_19:
      uint64_t v53 = result;
      unint64_t v33 = *(void *)(result + 16);
      unint64_t v32 = *(void *)(result + 24);
      if (v33 >= v32 >> 1)
      {
        sub_24EF12084((void *)(v32 > 1), v33 + 1, 1);
        int64_t v31 = v38;
        uint64_t v7 = a3;
        uint64_t result = v53;
      }
      uint64_t v8 = v30 + 1;
      *(void *)(result + 16) = v33 + 1;
      uint64_t v34 = result + 80 * v33;
      *(void *)(v34 + 32) = v28;
      *(void *)(v34 + 40) = v27;
      *(void *)(v34 + 48) = v44;
      *(void *)(v34 + 56) = v13;
      *(void *)(v34 + 64) = v43;
      *(void *)(v34 + 72) = v46;
      *(void *)(v34 + 80) = v42;
      *(void *)(v34 + 88) = v45;
      *(void *)(v34 + 96) = v47;
      *(unsigned char *)(v34 + 104) = v29;
      a2 = v37;
    }
    while (v8 != v31);
  }
  return result;
}

uint64_t sub_24EF1E684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v46 = MEMORY[0x263F8EE78];
    sub_24EF12054(0, v4, 0);
    uint64_t v7 = a3;
    uint64_t v8 = 0;
    uint64_t result = v46;
    uint64_t v34 = a1 + 32;
    uint64_t v35 = a2;
    int64_t v32 = v4;
    uint64_t v36 = a2 + 56;
    int64_t v9 = v4;
    while (1)
    {
      uint64_t v10 = (uint64_t *)(v34 + 56 * v8);
      uint64_t v12 = *v10;
      uint64_t v11 = v10[1];
      uint64_t v14 = v10[2];
      uint64_t v13 = v10[3];
      uint64_t v15 = v10[4];
      uint64_t v37 = result;
      uint64_t v38 = v10[5];
      uint64_t v16 = v10[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v39 = v13;
      uint64_t v40 = v16;
      if (v7) {
        break;
      }
      uint64_t v26 = v14;
      uint64_t v27 = v12;
      char v28 = 0;
LABEL_19:
      uint64_t result = v37;
      uint64_t v46 = v37;
      unint64_t v30 = *(void *)(v37 + 16);
      unint64_t v29 = *(void *)(v37 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_24EF12054((void *)(v29 > 1), v30 + 1, 1);
        int64_t v9 = v32;
        uint64_t v7 = a3;
        uint64_t result = v46;
      }
      ++v8;
      *(void *)(result + 16) = v30 + 1;
      uint64_t v31 = result + (v30 << 6);
      *(void *)(v31 + 32) = v27;
      *(void *)(v31 + 40) = v11;
      *(void *)(v31 + 48) = v26;
      *(void *)(v31 + 56) = v39;
      *(void *)(v31 + 64) = v15;
      *(void *)(v31 + 72) = v38;
      *(void *)(v31 + 80) = v40;
      *(unsigned char *)(v31 + 88) = v28;
      a2 = v35;
      if (v8 == v9) {
        return result;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v17 = sub_24EF0A67C(v13, v15, v7);
    swift_bridgeObjectRelease();
    if (v17)
    {
      if (a2)
      {
        v44[0] = v13;
        v44[1] = v15;
        memset(&v44[2], 0, 24);
        char v45 = 4;
        if (*(void *)(a2 + 16))
        {
          sub_24EF87A90();
          sub_24EF87AA0();
          swift_bridgeObjectRetain();
          sub_24EF87670();
          uint64_t v18 = sub_24EF87AD0();
          uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v20 = v18 & ~v19;
          if ((*(void *)(v36 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
          {
            uint64_t v21 = ~v19;
            while (1)
            {
              uint64_t v22 = *(void *)(a2 + 48) + 48 * v20;
              uint64_t v23 = *(void *)(v22 + 32);
              char v24 = *(unsigned char *)(v22 + 40);
              long long v25 = *(_OWORD *)(v22 + 16);
              v41[0] = *(_OWORD *)v22;
              v41[1] = v25;
              uint64_t v42 = v23;
              char v43 = v24;
              if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v41, (uint64_t)v44)) {
                break;
              }
              unint64_t v20 = (v20 + 1) & v21;
              if (((*(void *)(v36 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
                goto LABEL_11;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v26 = v14;
            swift_bridgeObjectRelease();
            uint64_t v27 = v12;
            swift_bridgeObjectRelease();
            char v28 = 2;
            swift_bridgeObjectRelease_n();
            goto LABEL_18;
          }
LABEL_11:
          swift_bridgeObjectRelease();
          uint64_t v26 = v14;
          uint64_t v27 = v12;
        }
        else
        {
          uint64_t v26 = v14;
          uint64_t v27 = v12;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v26 = v14;
        swift_bridgeObjectRelease();
        uint64_t v27 = v12;
      }
      swift_bridgeObjectRelease();
      char v28 = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = v14;
      swift_bridgeObjectRelease();
      uint64_t v27 = v12;
      swift_bridgeObjectRelease();
      char v28 = 0;
    }
LABEL_18:
    int64_t v9 = v32;
    uint64_t v7 = a3;
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_24EF1EA0C(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_24EF12154(0, v2, 0);
  uint64_t v4 = a1;
  uint64_t v3 = v38;
  uint64_t result = sub_24EF19CBC(a1);
  int64_t v7 = result;
  char v9 = v8 & 1;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(v4 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      goto LABEL_22;
    }
    if (*(_DWORD *)(v4 + 36) != v6) {
      goto LABEL_23;
    }
    int v31 = v6;
    uint64_t v10 = (uint64_t *)(*(void *)(v4 + 48) + 72 * v7);
    uint64_t v11 = *v10;
    uint64_t v29 = v10[1];
    uint64_t v37 = v10[5];
    uint64_t v12 = v10[6];
    uint64_t v33 = v10[3];
    uint64_t v34 = v10[7];
    uint64_t v32 = v10[4];
    uint64_t v35 = v10[8];
    uint64_t v36 = v10[2];
    if (!v12)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = v11;
      swift_bridgeObjectRetain();
LABEL_15:
      int v21 = v31;
      uint64_t v20 = v29;
      goto LABEL_16;
    }
    uint64_t v13 = *v10;
    char v28 = v9;
    uint64_t v14 = *(void *)(a2 + 32);
    uint64_t v15 = *(void *)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v15)
    {
      swift_bridgeObjectRetain();
LABEL_14:
      uint64_t v4 = a1;
      char v9 = v28;
      goto LABEL_15;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_24EF7281C(v37, v12);
    if ((v17 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v34 = *v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
    uint64_t v36 = 0;
    uint64_t v13 = MEMORY[0x263F8EE88];
    uint64_t v35 = v19;
    uint64_t v4 = a1;
    char v9 = v28;
    int v21 = v31;
LABEL_16:
    unint64_t v23 = *(void *)(v38 + 16);
    unint64_t v22 = *(void *)(v38 + 24);
    if (v23 >= v22 >> 1)
    {
      uint64_t v30 = v20;
      sub_24EF12154((char *)(v22 > 1), v23 + 1, 1);
      uint64_t v20 = v30;
      uint64_t v4 = a1;
    }
    *(void *)(v38 + 16) = v23 + 1;
    char v24 = (void *)(v38 + 72 * v23);
    v24[4] = v13;
    v24[5] = v20;
    v24[6] = v36;
    v24[7] = v33;
    v24[8] = v32;
    v24[9] = v37;
    v24[10] = v12;
    v24[11] = v34;
    v24[12] = v35;
    uint64_t result = sub_24EF19D5C(v7, v21, v9 & 1, v4);
    int64_t v7 = result;
    char v9 = v25 & 1;
    if (!--v2)
    {
      sub_24EF22E38(result, v6, v25 & 1);
      return v3;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_24EF1ECE4(char *__dst, char *__src, unint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v5 = a4;
  unint64_t v6 = a3;
  char v8 = __dst;
  int64_t v9 = __src - __dst;
  int64_t v10 = (__src - __dst) / 72;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = (uint64_t)(a3 - (void)__src) / 72;
  if (v10 >= v12)
  {
    if (a4 != __src || &__src[72 * v12] <= a4) {
      memmove(a4, __src, 72 * v12);
    }
    uint64_t v13 = &v5[72 * v12];
    if (v8 >= __src || v11 < 72)
    {
      uint64_t v26 = __src;
      goto LABEL_58;
    }
    uint64_t v27 = (char *)(v6 - 72);
    uint64_t v26 = __src;
    uint64_t v41 = v5;
    while (1)
    {
      char v28 = v27 + 72;
      uint64_t v29 = *((void *)v13 - 3);
      if (v29)
      {
        uint64_t v30 = v26 - 72;
        uint64_t v31 = *((void *)v26 - 3);
        if (v31)
        {
          if (*(void *)(a5 + 16))
          {
            uint64_t v49 = v26;
            uint64_t v46 = *((void *)v13 - 4);
            uint64_t v43 = *((void *)v26 - 4);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v32 = sub_24EF7281C(v46, v29);
            if ((v33 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
LABEL_46:
              uint64_t v5 = v41;
              swift_bridgeObjectRelease_n();
              char v28 = v27 + 72;
              goto LABEL_47;
            }
            uint64_t v34 = *(void *)(*(void *)(a5 + 56) + 8 * v32);
            swift_bridgeObjectRelease();
            if (!*(void *)(a5 + 16) || (unint64_t v35 = sub_24EF7281C(v43, v31), (v36 & 1) == 0))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_46;
            }
            uint64_t v37 = *(void *)(*(void *)(a5 + 56) + 8 * v35);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            BOOL v23 = v34 < v37;
            uint64_t v26 = v49;
            char v28 = v27 + 72;
            uint64_t v5 = v41;
            if (v23)
            {
              if (v27 + 72 == v49)
              {
                uint64_t v26 = v30;
                if (v27 < v49) {
                  goto LABEL_53;
                }
              }
              else
              {
                uint64_t v26 = v30;
              }
              goto LABEL_52;
            }
          }
        }
      }
LABEL_47:
      uint64_t v30 = v13 - 72;
      if (v28 != v13)
      {
        v13 -= 72;
LABEL_52:
        memmove(v27, v30, 0x48uLL);
        goto LABEL_53;
      }
      BOOL v38 = v27 >= v13;
      v13 -= 72;
      if (v38) {
        goto LABEL_52;
      }
LABEL_53:
      if (v26 > v8)
      {
        v27 -= 72;
        if (v13 > v5) {
          continue;
        }
      }
      goto LABEL_58;
    }
  }
  if (a4 != __dst || &__dst[72 * v10] <= a4) {
    memmove(a4, __dst, 72 * v10);
  }
  uint64_t v13 = &v5[72 * v10];
  if ((unint64_t)__src < v6 && v9 >= 72)
  {
    uint64_t v14 = __src;
    uint64_t v15 = a5;
    unint64_t v44 = v6;
    while (1)
    {
      uint64_t v16 = *((void *)v14 + 6);
      if (!v16) {
        goto LABEL_21;
      }
      uint64_t v17 = *((void *)v5 + 6);
      if (!v17 || !*(void *)(v15 + 16)) {
        goto LABEL_21;
      }
      uint64_t v47 = *((void *)v14 + 5);
      uint64_t v48 = v14;
      uint64_t v45 = *((void *)v5 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v15 = a5;
      unint64_t v18 = sub_24EF7281C(v47, v16);
      if ((v19 & 1) == 0) {
        break;
      }
      uint64_t v42 = *(void *)(*(void *)(a5 + 56) + 8 * v18);
      swift_bridgeObjectRelease();
      if (!*(void *)(a5 + 16) || (unint64_t v20 = sub_24EF7281C(v45, v17), (v21 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      uint64_t v22 = *(void *)(*(void *)(a5 + 56) + 8 * v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      unint64_t v6 = v44;
      BOOL v23 = v42 < v22;
      uint64_t v14 = v48;
      if (!v23) {
        goto LABEL_21;
      }
      char v24 = v48;
      uint64_t v14 = v48 + 72;
      if (v8 != v48) {
        goto LABEL_22;
      }
LABEL_23:
      v8 += 72;
      if (v5 >= v13 || (unint64_t)v14 >= v6) {
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
LABEL_20:
    unint64_t v6 = v44;
    swift_bridgeObjectRelease_n();
LABEL_21:
    char v24 = v5;
    BOOL v25 = v8 == v5;
    v5 += 72;
    if (v25) {
      goto LABEL_23;
    }
LABEL_22:
    memmove(v8, v24, 0x48uLL);
    goto LABEL_23;
  }
LABEL_25:
  uint64_t v26 = v8;
LABEL_58:
  uint64_t v39 = (v13 - v5) / 72;
  if (v26 != v5 || v26 >= &v5[72 * v39]) {
    memmove(v26, v5, 72 * v39);
  }
  return 1;
}

uint64_t sub_24EF1F45C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v28 = result;
  if (a3 != a2)
  {
    uint64_t v30 = *a4;
    unint64_t v6 = (void *)(*a4 + 72 * a3 + 64);
    while (2)
    {
      uint64_t v7 = v30 + 72 * a3;
      uint64_t v8 = *(void *)(v7 + 40);
      uint64_t v9 = *(void *)(v7 + 48);
      uint64_t v29 = v6;
      uint64_t v10 = v28;
      uint64_t v31 = a3;
      while (1)
      {
        if (!v9) {
          goto LABEL_6;
        }
        uint64_t v11 = *(v6 - 11);
        if (!v11 || !*(void *)(a5 + 16)) {
          goto LABEL_6;
        }
        uint64_t v32 = v10;
        uint64_t v12 = *(v6 - 12);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v13 = sub_24EF7281C(v8, v9);
        if ((v14 & 1) == 0) {
          break;
        }
        uint64_t v15 = *(void *)(*(void *)(a5 + 56) + 8 * v13);
        swift_bridgeObjectRelease();
        if (!*(void *)(a5 + 16) || (unint64_t v16 = sub_24EF7281C(v12, v11), (v17 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
        uint64_t v18 = *(void *)(*(void *)(a5 + 56) + 8 * v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease_n();
        a3 = v31;
        if (v15 >= v18) {
          goto LABEL_6;
        }
        if (!v30)
        {
          __break(1u);
          return result;
        }
        uint64_t v20 = *(v6 - 8);
        uint64_t v19 = *(v6 - 7);
        uint64_t v21 = *(v6 - 4);
        uint64_t v8 = *(v6 - 3);
        uint64_t v22 = *v6;
        long long v23 = *((_OWORD *)v6 - 3);
        long long v24 = *((_OWORD *)v6 - 1);
        long long v25 = *(_OWORD *)(v6 - 11);
        *((_OWORD *)v6 - 2) = *(_OWORD *)(v6 - 13);
        *((_OWORD *)v6 - 1) = v25;
        *unint64_t v6 = *(v6 - 9);
        long long v26 = *(_OWORD *)(v6 - 15);
        *((_OWORD *)v6 - 4) = *(_OWORD *)(v6 - 17);
        *((_OWORD *)v6 - 3) = v26;
        *(v6 - 9) = v22;
        v6 -= 9;
        *(v6 - 8) = v20;
        *(v6 - 7) = v19;
        *((_OWORD *)v6 - 3) = v23;
        *((_OWORD *)v6 - 1) = v24;
        uint64_t v9 = v24;
        uint64_t v10 = v32 + 1;
        *(v6 - 4) = v21;
        *(v6 - 3) = v8;
        if (v31 == v32 + 1) {
          goto LABEL_6;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_5:
      uint64_t result = swift_bridgeObjectRelease_n();
      a3 = v31;
LABEL_6:
      ++a3;
      unint64_t v6 = v29 + 9;
      if (a3 == a2) {
        return result;
      }
      continue;
    }
  }
  return result;
}

uint64_t sub_24EF1F7C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_24EF87A40();
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_189;
    }
    if (!v5) {
      return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    sub_24EF1F45C(0, v5, 1, a1, a2);
    if (!v2) {
      return swift_bridgeObjectRelease_n();
    }
LABEL_165:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_188;
  }
  uint64_t v149 = a2;
  uint64_t v139 = v6;
  uint64_t v145 = v2;
  uint64_t v133 = a1;
  if (v5 > 1)
  {
    uint64_t v8 = v7 >> 1;
    uint64_t v9 = sub_24EF87710();
    *(void *)(v9 + 16) = v8;
    uint64_t v135 = v9;
    uint64_t v143 = (char *)(v9 + 32);
LABEL_13:
    uint64_t v10 = 0;
    uint64_t v11 = *a1;
    uint64_t v134 = *a1 + 32;
    uint64_t v132 = *a1 + 64;
    uint64_t v144 = MEMORY[0x263F8EE78];
    uint64_t v138 = v5;
    uint64_t v150 = *a1;
    while (1)
    {
      uint64_t v13 = v10 + 1;
      uint64_t v140 = v10;
      if (v10 + 1 >= v5) {
        goto LABEL_98;
      }
      uint64_t v14 = v11 + 72 * v13;
      uint64_t v15 = *(void *)(v14 + 48);
      if (!v15)
      {
        BOOL v24 = 0;
LABEL_27:
        uint64_t v25 = v10 + 2;
        uint64_t v27 = v138;
        uint64_t v26 = v139;
        if (v10 + 2 >= v138) {
          goto LABEL_57;
        }
        goto LABEL_36;
      }
      uint64_t v16 = v11 + 72 * v10;
      uint64_t v17 = *(void *)(v16 + 48);
      if (!v17 || !*(void *)(a2 + 16))
      {
        BOOL v24 = 0;
        uint64_t v13 = v10 + 1;
        goto LABEL_27;
      }
      uint64_t v155 = *(void *)(v14 + 40);
      uint64_t v152 = *(void *)(v16 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v18 = sub_24EF7281C(v155, v15);
      if (v19)
      {
        uint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * v18);
        swift_bridgeObjectRelease();
        if (!*(void *)(a2 + 16))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v25 = v10 + 2;
          uint64_t v27 = v138;
          if (v10 + 2 >= v138)
          {
            uint64_t v13 = v10 + 2;
LABEL_148:
            uint64_t v26 = v139;
            uint64_t v11 = v150;
            if (v13 >= v27) {
              goto LABEL_98;
            }
            goto LABEL_70;
          }
          BOOL v24 = 0;
          goto LABEL_35;
        }
        unint64_t v21 = sub_24EF7281C(v152, v17);
        if (v22)
        {
          uint64_t v23 = *(void *)(*(void *)(a2 + 56) + 8 * v21);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          BOOL v24 = v20 < v23;
          uint64_t v11 = v150;
          uint64_t v13 = v10 + 1;
          goto LABEL_27;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease_n();
      uint64_t v25 = v10 + 2;
      uint64_t v27 = v138;
      if (v10 + 2 >= v138)
      {
        uint64_t v13 = v10 + 2;
        a2 = v149;
        goto LABEL_148;
      }
      BOOL v24 = 0;
      a2 = v149;
LABEL_35:
      uint64_t v26 = v139;
      uint64_t v11 = v150;
      uint64_t v13 = v10 + 1;
LABEL_36:
      uint64_t v28 = v134 + 72 * v25;
      uint64_t v29 = v25;
      BOOL v141 = v24;
      do
      {
        uint64_t v25 = v29;
        uint64_t v30 = *(void *)(v28 + 16);
        if (v30)
        {
          uint64_t v31 = v11 + 72 * v13;
          uint64_t v32 = *(void *)(v31 + 48);
          if (v32 && *(void *)(a2 + 16))
          {
            uint64_t v153 = *(void *)(v28 + 8);
            uint64_t v146 = *(void *)(v31 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v33 = sub_24EF7281C(v153, v30);
            if (v34)
            {
              uint64_t v136 = *(void *)(*(void *)(a2 + 56) + 8 * v33);
              swift_bridgeObjectRelease();
              uint64_t v27 = v138;
              if (*(void *)(a2 + 16) && (unint64_t v35 = sub_24EF7281C(v146, v32), (v36 & 1) != 0))
              {
                uint64_t v37 = *(void *)(*(void *)(a2 + 56) + 8 * v35);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                BOOL v102 = v136 < v37;
                uint64_t v27 = v138;
                uint64_t v26 = v139;
                int v38 = !v102;
                BOOL v24 = v141;
                uint64_t v11 = v150;
                uint64_t v10 = v140;
                if (((v141 ^ v38) & 1) == 0) {
                  goto LABEL_57;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                uint64_t v26 = v139;
                uint64_t v10 = v140;
                uint64_t v11 = v150;
                BOOL v24 = v141;
                if (v141) {
                  goto LABEL_58;
                }
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              uint64_t v26 = v139;
              uint64_t v10 = v140;
              uint64_t v11 = v150;
              BOOL v24 = v141;
              uint64_t v27 = v138;
              if (v141) {
                goto LABEL_58;
              }
            }
          }
          else
          {
            uint64_t v26 = v139;
            if (v24) {
              goto LABEL_58;
            }
          }
        }
        else if (v24)
        {
          goto LABEL_58;
        }
        v28 += 72;
        uint64_t v29 = v25 + 1;
        uint64_t v13 = v25;
      }
      while (v25 + 1 < v27);
      ++v25;
LABEL_57:
      uint64_t v13 = v25;
      if (v24)
      {
LABEL_58:
        if (v25 < v10) {
          goto LABEL_190;
        }
        if (v10 >= v25)
        {
          uint64_t v13 = v25;
          if (v25 >= v27) {
            goto LABEL_98;
          }
          goto LABEL_70;
        }
        uint64_t v39 = 72 * v25;
        uint64_t v40 = 72 * v10;
        uint64_t v41 = v10;
        uint64_t v42 = v25;
        do
        {
          if (v41 != --v42)
          {
            if (!v11) {
              goto LABEL_195;
            }
            uint64_t v43 = v11 + v39;
            uint64_t v44 = *(void *)(v11 + v40);
            uint64_t v45 = *(void *)(v11 + v40 + 24);
            uint64_t v46 = *(void *)(v11 + v40 + 32);
            uint64_t v158 = *(void *)(v11 + v40 + 56);
            uint64_t v157 = *(void *)(v11 + v40 + 64);
            long long v154 = *(_OWORD *)(v11 + v40 + 8);
            long long v156 = *(_OWORD *)(v11 + v40 + 40);
            memmove((void *)(v11 + v40), (const void *)(v11 + v39 - 72), 0x48uLL);
            *(void *)(v43 - 72) = v44;
            *(_OWORD *)(v43 - 64) = v154;
            *(void *)(v43 - 48) = v45;
            *(void *)(v43 - 40) = v46;
            *(_OWORD *)(v43 - 32) = v156;
            *(void *)(v43 - 16) = v158;
            *(void *)(v43 - 8) = v157;
            a2 = v149;
            uint64_t v11 = v150;
            uint64_t v27 = v138;
            uint64_t v26 = v139;
          }
          ++v41;
          v39 -= 72;
          v40 += 72;
        }
        while (v41 < v42);
        uint64_t v13 = v25;
        uint64_t v10 = v140;
      }
      if (v13 >= v27) {
        goto LABEL_98;
      }
LABEL_70:
      if (__OFSUB__(v13, v10)) {
        goto LABEL_187;
      }
      if (v13 - v10 < v26)
      {
        if (__OFADD__(v10, v26)) {
          goto LABEL_191;
        }
        if (v10 + v26 >= v27) {
          uint64_t v47 = v27;
        }
        else {
          uint64_t v47 = v10 + v26;
        }
        if (v47 < v10)
        {
LABEL_192:
          __break(1u);
LABEL_193:
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_194:
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_195:
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_196:
          uint64_t result = swift_bridgeObjectRelease_n();
          __break(1u);
          return result;
        }
        if (v13 != v47)
        {
          uint64_t v48 = (void *)(v132 + 72 * v13);
          uint64_t v137 = v47;
          do
          {
            uint64_t v147 = v13;
            uint64_t v49 = v11 + 72 * v13;
            uint64_t v50 = *(void *)(v49 + 40);
            uint64_t v51 = *(void *)(v49 + 48);
            uint64_t v142 = v48;
            uint64_t v52 = v140;
            do
            {
              if (!v51) {
                break;
              }
              uint64_t v53 = *(v48 - 11);
              if (!v53 || !*(void *)(a2 + 16)) {
                break;
              }
              uint64_t v151 = v52;
              uint64_t v54 = *(v48 - 12);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v55 = sub_24EF7281C(v50, v51);
              if ((v56 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                goto LABEL_80;
              }
              uint64_t v57 = *(void *)(*(void *)(a2 + 56) + 8 * v55);
              swift_bridgeObjectRelease();
              if (!*(void *)(a2 + 16) || (unint64_t v58 = sub_24EF7281C(v54, v53), (v59 & 1) == 0))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_80:
                swift_bridgeObjectRelease_n();
LABEL_81:
                uint64_t v11 = v150;
                break;
              }
              uint64_t v60 = *(void *)(*(void *)(a2 + 56) + 8 * v58);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              if (v57 >= v60)
              {
                a2 = v149;
                goto LABEL_81;
              }
              uint64_t v11 = v150;
              if (!v150) {
                goto LABEL_193;
              }
              uint64_t v62 = *(v48 - 8);
              uint64_t v61 = *(v48 - 7);
              uint64_t v63 = *(v48 - 4);
              uint64_t v50 = *(v48 - 3);
              uint64_t v64 = *v48;
              long long v65 = *((_OWORD *)v48 - 3);
              long long v66 = *((_OWORD *)v48 - 1);
              long long v67 = *(_OWORD *)(v48 - 11);
              *((_OWORD *)v48 - 2) = *(_OWORD *)(v48 - 13);
              *((_OWORD *)v48 - 1) = v67;
              *uint64_t v48 = *(v48 - 9);
              long long v68 = *(_OWORD *)(v48 - 15);
              *((_OWORD *)v48 - 4) = *(_OWORD *)(v48 - 17);
              *((_OWORD *)v48 - 3) = v68;
              *(v48 - 9) = v64;
              v48 -= 9;
              *(v48 - 8) = v62;
              *(v48 - 7) = v61;
              *((_OWORD *)v48 - 3) = v65;
              *((_OWORD *)v48 - 1) = v66;
              uint64_t v51 = v66;
              uint64_t v52 = v151 + 1;
              *(v48 - 4) = v63;
              *(v48 - 3) = v50;
              a2 = v149;
            }
            while (v13 != v151 + 1);
            ++v13;
            uint64_t v48 = v142 + 9;
          }
          while (v147 + 1 != v137);
          uint64_t v13 = v137;
          uint64_t v10 = v140;
        }
      }
LABEL_98:
      uint64_t v69 = (char *)v144;
      if (v13 < v10) {
        goto LABEL_182;
      }
      uint64_t v148 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v69 = sub_24EF185F4(0, *(void *)(v144 + 16) + 1, 1, (char *)v144);
      }
      unint64_t v71 = *((void *)v69 + 2);
      unint64_t v70 = *((void *)v69 + 3);
      unint64_t v12 = v71 + 1;
      uint64_t v11 = v150;
      if (v71 >= v70 >> 1)
      {
        uint64_t v122 = sub_24EF185F4((char *)(v70 > 1), v71 + 1, 1, v69);
        uint64_t v11 = v150;
        uint64_t v69 = v122;
      }
      *((void *)v69 + 2) = v12;
      uint64_t v159 = v69 + 32;
      uint64_t v72 = &v69[16 * v71 + 32];
      *(void *)uint64_t v72 = v10;
      *((void *)v72 + 1) = v148;
      uint64_t v144 = (uint64_t)v69;
      if (v71)
      {
        uint64_t v73 = v69 + 32;
        while (1)
        {
          unint64_t v74 = v12 - 1;
          if (v12 >= 4)
          {
            uint64_t v79 = &v73[16 * v12];
            uint64_t v80 = *((void *)v79 - 8);
            uint64_t v81 = *((void *)v79 - 7);
            BOOL v85 = __OFSUB__(v81, v80);
            uint64_t v82 = v81 - v80;
            if (v85) {
              goto LABEL_171;
            }
            uint64_t v84 = *((void *)v79 - 6);
            uint64_t v83 = *((void *)v79 - 5);
            BOOL v85 = __OFSUB__(v83, v84);
            uint64_t v77 = v83 - v84;
            char v78 = v85;
            if (v85) {
              goto LABEL_172;
            }
            unint64_t v86 = v12 - 2;
            uint64_t v87 = &v73[16 * v12 - 32];
            uint64_t v89 = *(void *)v87;
            uint64_t v88 = *((void *)v87 + 1);
            BOOL v85 = __OFSUB__(v88, v89);
            uint64_t v90 = v88 - v89;
            if (v85) {
              goto LABEL_173;
            }
            BOOL v85 = __OFADD__(v77, v90);
            uint64_t v91 = v77 + v90;
            if (v85) {
              goto LABEL_175;
            }
            if (v91 >= v82)
            {
              uint64_t v109 = &v73[16 * v74];
              uint64_t v111 = *(void *)v109;
              uint64_t v110 = *((void *)v109 + 1);
              BOOL v85 = __OFSUB__(v110, v111);
              uint64_t v112 = v110 - v111;
              if (v85) {
                goto LABEL_181;
              }
              BOOL v102 = v77 < v112;
              goto LABEL_136;
            }
          }
          else
          {
            if (v12 != 3)
            {
              uint64_t v103 = *((void *)v69 + 4);
              uint64_t v104 = *((void *)v69 + 5);
              BOOL v85 = __OFSUB__(v104, v103);
              uint64_t v96 = v104 - v103;
              char v97 = v85;
              goto LABEL_130;
            }
            uint64_t v76 = *((void *)v69 + 4);
            uint64_t v75 = *((void *)v69 + 5);
            BOOL v85 = __OFSUB__(v75, v76);
            uint64_t v77 = v75 - v76;
            char v78 = v85;
          }
          if (v78) {
            goto LABEL_174;
          }
          unint64_t v86 = v12 - 2;
          unint64_t v92 = &v73[16 * v12 - 32];
          uint64_t v94 = *(void *)v92;
          uint64_t v93 = *((void *)v92 + 1);
          BOOL v95 = __OFSUB__(v93, v94);
          uint64_t v96 = v93 - v94;
          char v97 = v95;
          if (v95) {
            goto LABEL_176;
          }
          uint64_t v98 = &v73[16 * v74];
          uint64_t v100 = *(void *)v98;
          uint64_t v99 = *((void *)v98 + 1);
          BOOL v85 = __OFSUB__(v99, v100);
          uint64_t v101 = v99 - v100;
          if (v85) {
            goto LABEL_178;
          }
          if (__OFADD__(v96, v101)) {
            goto LABEL_180;
          }
          if (v96 + v101 >= v77)
          {
            BOOL v102 = v77 < v101;
LABEL_136:
            if (v102) {
              unint64_t v74 = v86;
            }
            goto LABEL_138;
          }
LABEL_130:
          if (v97) {
            goto LABEL_177;
          }
          uint64_t v105 = &v73[16 * v74];
          uint64_t v107 = *(void *)v105;
          uint64_t v106 = *((void *)v105 + 1);
          BOOL v85 = __OFSUB__(v106, v107);
          uint64_t v108 = v106 - v107;
          if (v85) {
            goto LABEL_179;
          }
          if (v108 < v96) {
            goto LABEL_15;
          }
LABEL_138:
          unint64_t v113 = v74 - 1;
          if (v74 - 1 >= v12)
          {
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
            goto LABEL_192;
          }
          if (!v11) {
            goto LABEL_194;
          }
          uint64_t v114 = &v73[16 * v113];
          uint64_t v115 = *(void *)v114;
          uint64_t v116 = &v73[16 * v74];
          uint64_t v117 = *((void *)v116 + 1);
          uint64_t v118 = (char *)(v11 + 72 * *(void *)v114);
          uint64_t v119 = (char *)(v11 + 72 * *(void *)v116);
          unint64_t v120 = v11 + 72 * v117;
          swift_bridgeObjectRetain();
          sub_24EF1ECE4(v118, v119, v120, v143, v149);
          if (v145)
          {
LABEL_164:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)(v135 + 16) = 0;
            goto LABEL_165;
          }
          swift_bridgeObjectRelease();
          if (v117 < v115) {
            goto LABEL_168;
          }
          uint64_t v69 = (char *)v144;
          if (v74 > *(void *)(v144 + 16)) {
            goto LABEL_169;
          }
          *(void *)uint64_t v114 = v115;
          uint64_t v73 = v159;
          *(void *)&v159[16 * v113 + 8] = v117;
          unint64_t v121 = *(void *)(v144 + 16);
          if (v74 >= v121) {
            goto LABEL_170;
          }
          unint64_t v12 = v121 - 1;
          memmove(v116, v116 + 16, 16 * (v121 - 1 - v74));
          *(void *)(v144 + 16) = v121 - 1;
          uint64_t v11 = v150;
          if (v121 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v12 = 1;
LABEL_15:
      uint64_t v5 = v138;
      uint64_t v10 = v148;
      a2 = v149;
      if (v148 >= v138) {
        goto LABEL_152;
      }
    }
  }
  uint64_t v143 = (char *)(MEMORY[0x263F8EE78] + 32);
  uint64_t v135 = MEMORY[0x263F8EE78];
  if (v5 == 1) {
    goto LABEL_13;
  }
  unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
  uint64_t v144 = MEMORY[0x263F8EE78];
LABEL_152:
  if (v12 >= 2)
  {
    uint64_t v124 = *v133;
    do
    {
      unint64_t v125 = v12 - 2;
      if (v12 < 2) {
        goto LABEL_183;
      }
      if (!v124) {
        goto LABEL_196;
      }
      uint64_t v126 = *(void *)(v144 + 32 + 16 * v125);
      uint64_t v127 = *(void *)(v144 + 32 + 16 * (v12 - 1) + 8);
      uint64_t v128 = (char *)(v124 + 72 * *(void *)(v144 + 32 + 16 * (v12 - 1)));
      swift_bridgeObjectRetain();
      sub_24EF1ECE4((char *)(v124 + 72 * v126), v128, v124 + 72 * v127, v143, a2);
      if (v145) {
        goto LABEL_164;
      }
      swift_bridgeObjectRelease();
      if (v127 < v126) {
        goto LABEL_184;
      }
      uint64_t v129 = (char *)v144;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v129 = sub_24EF186F0(v144);
      }
      if (v125 >= *((void *)v129 + 2)) {
        goto LABEL_185;
      }
      uint64_t v130 = &v129[16 * v125 + 32];
      *(void *)uint64_t v130 = v126;
      *((void *)v130 + 1) = v127;
      unint64_t v131 = *((void *)v129 + 2);
      if (v12 > v131) {
        goto LABEL_186;
      }
      memmove(&v129[16 * v12 + 16], &v129[16 * v12 + 32], 16 * (v131 - v12));
      uint64_t v144 = (uint64_t)v129;
      *((void *)v129 + 2) = v131 - 1;
      unint64_t v12 = v131 - 1;
      a2 = v149;
    }
    while (v131 > 2);
  }
  swift_bridgeObjectRelease();
  *(void *)(v135 + 16) = 0;
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF207CC(char **a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_24EF19BB4((uint64_t)v4);
  }
  uint64_t v5 = *((void *)v4 + 2);
  v7[0] = (uint64_t)(v4 + 32);
  v7[1] = v5;
  swift_bridgeObjectRetain();
  sub_24EF1F7C8(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_24EF20870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v51 = MEMORY[0x263F8EE78];
    sub_24EF12024(0, v4, 0);
    uint64_t v7 = a3;
    uint64_t v8 = 0;
    uint64_t v35 = a1 + 32;
    uint64_t v36 = a2;
    uint64_t result = v51;
    int64_t v37 = v4;
    uint64_t v38 = a2 + 56;
    do
    {
      uint64_t v9 = (uint64_t *)(v35 + 72 * v8);
      uint64_t v11 = *v9;
      uint64_t v10 = v9[1];
      uint64_t v13 = v9[2];
      uint64_t v12 = v9[3];
      uint64_t v14 = v9[4];
      uint64_t v40 = result;
      uint64_t v41 = v9[5];
      uint64_t v15 = v9[6];
      uint64_t v39 = v9[7];
      uint64_t v16 = v9[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v42 = v12;
      uint64_t v43 = v10;
      uint64_t v44 = v15;
      uint64_t v45 = v16;
      if (v7)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v17 = sub_24EF0A67C(v12, v14, v7);
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v26 = v13;
          swift_bridgeObjectRelease();
          uint64_t v27 = v11;
          swift_bridgeObjectRelease();
          char v28 = 0;
LABEL_18:
          uint64_t v7 = a3;
          int64_t v30 = v37;
          uint64_t v29 = v39;
          uint64_t result = v40;
          goto LABEL_19;
        }
        if (!a2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v26 = v13;
          swift_bridgeObjectRelease();
          uint64_t v27 = v11;
          swift_bridgeObjectRelease();
          char v28 = 1;
          goto LABEL_18;
        }
        v49[0] = v12;
        v49[1] = v14;
        memset(&v49[2], 0, 24);
        char v50 = 5;
        if (*(void *)(a2 + 16))
        {
          sub_24EF87A90();
          sub_24EF87AA0();
          swift_bridgeObjectRetain();
          sub_24EF87670();
          uint64_t v18 = sub_24EF87AD0();
          uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v20 = v18 & ~v19;
          if ((*(void *)(v38 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
          {
            uint64_t v21 = ~v19;
            while (1)
            {
              uint64_t v22 = *(void *)(a2 + 48) + 48 * v20;
              uint64_t v23 = *(void *)(v22 + 32);
              char v24 = *(unsigned char *)(v22 + 40);
              long long v25 = *(_OWORD *)(v22 + 16);
              v46[0] = *(_OWORD *)v22;
              v46[1] = v25;
              uint64_t v47 = v23;
              char v48 = v24;
              if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v46, (uint64_t)v49)) {
                break;
              }
              unint64_t v20 = (v20 + 1) & v21;
              if (((*(void *)(v38 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
                goto LABEL_11;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v26 = v13;
            swift_bridgeObjectRelease();
            uint64_t v27 = v11;
            swift_bridgeObjectRelease();
            char v28 = 2;
            swift_bridgeObjectRelease_n();
            goto LABEL_18;
          }
LABEL_11:
          swift_bridgeObjectRelease();
          uint64_t v26 = v13;
          uint64_t v27 = v11;
        }
        else
        {
          uint64_t v26 = v13;
          uint64_t v27 = v11;
        }
        uint64_t v29 = v39;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v28 = 1;
        uint64_t v7 = a3;
        int64_t v30 = v37;
        uint64_t result = v40;
      }
      else
      {
        uint64_t v26 = v13;
        uint64_t v27 = v11;
        char v28 = 0;
        uint64_t v29 = v39;
        uint64_t result = v40;
        int64_t v30 = v37;
      }
LABEL_19:
      uint64_t v51 = result;
      unint64_t v32 = *(void *)(result + 16);
      unint64_t v31 = *(void *)(result + 24);
      if (v32 >= v31 >> 1)
      {
        sub_24EF12024((void *)(v31 > 1), v32 + 1, 1);
        int64_t v30 = v37;
        uint64_t v7 = a3;
        uint64_t result = v51;
      }
      ++v8;
      *(void *)(result + 16) = v32 + 1;
      uint64_t v33 = result + 80 * v32;
      *(void *)(v33 + 32) = v27;
      *(void *)(v33 + 40) = v43;
      *(void *)(v33 + 48) = v26;
      *(void *)(v33 + 56) = v42;
      *(void *)(v33 + 64) = v14;
      *(void *)(v33 + 72) = v41;
      *(void *)(v33 + 80) = v44;
      *(void *)(v33 + 88) = v29;
      *(void *)(v33 + 96) = v45;
      *(unsigned char *)(v33 + 104) = v28;
      a2 = v36;
    }
    while (v8 != v30);
  }
  return result;
}

uint64_t sub_24EF20C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v47 = MEMORY[0x263F8EE78];
    sub_24EF12004(0, v4, 0);
    uint64_t v7 = a3;
    uint64_t v8 = 0;
    uint64_t result = v47;
    uint64_t v34 = a1 + 32;
    uint64_t v35 = a2;
    int64_t v32 = v4;
    uint64_t v36 = a2 + 56;
    int64_t v9 = v4;
    while (1)
    {
      uint64_t v10 = (uint64_t *)(v34 + (v8 << 6));
      uint64_t v12 = *v10;
      uint64_t v11 = v10[1];
      uint64_t v14 = v10[2];
      uint64_t v13 = v10[3];
      uint64_t v15 = v10[4];
      uint64_t v39 = v10[5];
      uint64_t v16 = v10[6];
      uint64_t v37 = result;
      uint64_t v38 = v10[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v40 = v13;
      uint64_t v41 = v16;
      if (v7) {
        break;
      }
      uint64_t v26 = v14;
      uint64_t v27 = v12;
      char v28 = 0;
LABEL_19:
      uint64_t result = v37;
      uint64_t v47 = v37;
      unint64_t v30 = *(void *)(v37 + 16);
      unint64_t v29 = *(void *)(v37 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_24EF12004((void *)(v29 > 1), v30 + 1, 1);
        int64_t v9 = v32;
        uint64_t v7 = a3;
        uint64_t result = v47;
      }
      ++v8;
      *(void *)(result + 16) = v30 + 1;
      uint64_t v31 = result + 72 * v30;
      *(void *)(v31 + 32) = v27;
      *(void *)(v31 + 40) = v11;
      *(void *)(v31 + 48) = v26;
      *(void *)(v31 + 56) = v40;
      *(void *)(v31 + 64) = v15;
      *(void *)(v31 + 72) = v39;
      *(void *)(v31 + 80) = v41;
      *(void *)(v31 + 88) = v38;
      *(unsigned char *)(v31 + 96) = v28;
      a2 = v35;
      if (v8 == v9) {
        return result;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v17 = sub_24EF0A67C(v13, v15, v7);
    swift_bridgeObjectRelease();
    if (v17)
    {
      if (a2)
      {
        v45[0] = v13;
        v45[1] = v15;
        memset(&v45[2], 0, 24);
        char v46 = 6;
        if (*(void *)(a2 + 16))
        {
          sub_24EF87A90();
          sub_24EF87AA0();
          swift_bridgeObjectRetain();
          sub_24EF87670();
          uint64_t v18 = sub_24EF87AD0();
          uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v20 = v18 & ~v19;
          if ((*(void *)(v36 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
          {
            uint64_t v21 = ~v19;
            while (1)
            {
              uint64_t v22 = *(void *)(a2 + 48) + 48 * v20;
              uint64_t v23 = *(void *)(v22 + 32);
              char v24 = *(unsigned char *)(v22 + 40);
              long long v25 = *(_OWORD *)(v22 + 16);
              v42[0] = *(_OWORD *)v22;
              v42[1] = v25;
              uint64_t v43 = v23;
              char v44 = v24;
              if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v42, (uint64_t)v45)) {
                break;
              }
              unint64_t v20 = (v20 + 1) & v21;
              if (((*(void *)(v36 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
                goto LABEL_11;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v26 = v14;
            swift_bridgeObjectRelease();
            uint64_t v27 = v12;
            swift_bridgeObjectRelease();
            char v28 = 2;
            swift_bridgeObjectRelease_n();
            goto LABEL_18;
          }
LABEL_11:
          swift_bridgeObjectRelease();
          uint64_t v26 = v14;
          uint64_t v27 = v12;
        }
        else
        {
          uint64_t v26 = v14;
          uint64_t v27 = v12;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v26 = v14;
        swift_bridgeObjectRelease();
        uint64_t v27 = v12;
      }
      swift_bridgeObjectRelease();
      char v28 = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = v14;
      swift_bridgeObjectRelease();
      uint64_t v27 = v12;
      swift_bridgeObjectRelease();
      char v28 = 0;
    }
LABEL_18:
    int64_t v9 = v32;
    uint64_t v7 = a3;
    goto LABEL_19;
  }
  return result;
}

void *sub_24EF21008(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v66 = a8;
  int v47 = a7;
  uint64_t v45 = a4;
  uint64_t v46 = a6;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985E10);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (void *)((char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = a1;
  uint64_t v44 = type metadata accessor for FilterSectionDescriptor();
  uint64_t v18 = MEMORY[0x270FA5388](v44);
  uint64_t v43 = (uint64_t)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v38 = (uint64_t)v36 - v21;
  uint64_t v42 = *(void *)(a1 + 16);
  if (!v42) {
    return (void *)MEMORY[0x263F8EE78];
  }
  v36[1] = v9;
  uint64_t v37 = v20;
  uint64_t v39 = (unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48);
  uint64_t v40 = a5 & 1;
  swift_bridgeObjectRetain();
  uint64_t v22 = 0;
  uint64_t v23 = (void *)MEMORY[0x263F8EE78];
  uint64_t v41 = v17;
  do
  {
    uint64_t v24 = *(unsigned __int8 *)(v17 + v22 + 32);
    long long v25 = a2[9];
    long long v62 = a2[8];
    long long v63 = v25;
    long long v64 = a2[10];
    uint64_t v65 = *((void *)a2 + 22);
    long long v26 = a2[5];
    long long v58 = a2[4];
    long long v59 = v26;
    long long v27 = a2[7];
    long long v60 = a2[6];
    long long v61 = v27;
    long long v28 = a2[1];
    long long v54 = *a2;
    long long v55 = v28;
    long long v29 = a2[3];
    long long v56 = a2[2];
    long long v57 = v29;
    long long v30 = *(_OWORD *)(a3 + 48);
    v52[2] = *(_OWORD *)(a3 + 32);
    v52[3] = v30;
    uint64_t v53 = *(void *)(a3 + 64);
    long long v31 = *(_OWORD *)(a3 + 16);
    v52[0] = *(_OWORD *)a3;
    v52[1] = v31;
    v50[0] = v45;
    v50[1] = v40;
    _OWORD v50[2] = v46;
    char v51 = v47;
    memset(v49, 0, 72);
    sub_24EF22C1C(v66, (uint64_t)v48, &qword_269985D58);
    sub_24EF0DC8C(v24, v52, v50, v49, v48, v16);
    if ((*v39)(v16, 1, v44) == 1)
    {
      sub_24EEFD568((uint64_t)v16, &qword_269985E10);
    }
    else
    {
      uint64_t v32 = v38;
      sub_24EF22B00((uint64_t)v16, v38, (uint64_t (*)(void))type metadata accessor for FilterSectionDescriptor);
      sub_24EF22B00(v32, v43, (uint64_t (*)(void))type metadata accessor for FilterSectionDescriptor);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v23 = (void *)sub_24EF132F0(0, v23[2] + 1, 1, v23);
      }
      unint64_t v34 = v23[2];
      unint64_t v33 = v23[3];
      if (v34 >= v33 >> 1) {
        uint64_t v23 = (void *)sub_24EF132F0(v33 > 1, v34 + 1, 1, v23);
      }
      v23[2] = v34 + 1;
      sub_24EF22B00(v43, (uint64_t)v23+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v34, (uint64_t (*)(void))type metadata accessor for FilterSectionDescriptor);
    }
    ++v22;
    uint64_t v17 = v41;
  }
  while (v42 != v22);
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_24EF2138C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_24EF22FEC();
  uint64_t result = sub_24EF877B0();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_24EF0D038(v4, (uint64_t)v8);
      sub_24EF13808((uint64_t)v8, (void (*)(void, void, void, void, void, void))sub_24EEF7798);
      sub_24EF79C18((uint64_t)v5, (uint64_t)v8);
      sub_24EEF7780(v5[0], v5[1], v5[2], v5[3], v5[4], v6);
      v4 += 48;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_24EF21444(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_24EF23044;
  return sub_24EF0FB18(a1, v4, v5, v6, v7);
}

uint64_t sub_24EF2150C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_24EF23044;
  return sub_24EF0FB18(a1, v4, v5, v6, v7);
}

uint64_t sub_24EF215D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_24EF23044;
  return sub_24EF0FB18(a1, v4, v5, v6, v7);
}

uint64_t sub_24EF21698(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  swift_release();
  swift_release();
  sub_24EF0CF9C(v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_24EF2177C(uint64_t result)
{
  *(unsigned char *)(result + 272) = 1;
  return result;
}

uint64_t sub_24EF2178C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_24EF23044;
  return sub_24EF0FB18(a1, v4, v5, v6, v7);
}

uint64_t sub_24EF21850(uint64_t a1)
{
  return a1;
}

uint64_t *sub_24EF218EC(uint64_t *a1)
{
  uint64_t v3 = a1[23];
  sub_24EF0C93C(*a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24EF0C9E8(v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

double sub_24EF21A48@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24EF10FF8(a1, *(void *)(v2 + 16), *(long long **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_24EF21A6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EF21B08(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v6 = *(unsigned char *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    *(void *)(a1 + 256),
    *(void *)(a1 + 264),
    v6);
  return a1;
}

uint64_t objectdestroy_3Tm()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24EF21C2C(uint64_t a1)
{
  long long v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *long long v4 = v2;
  v4[1] = sub_24EF23044;
  return sub_24EF0C31C(a1, v1 + 16);
}

uint64_t sub_24EF21CC8()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24EF21D5C(uint64_t a1)
{
  char v4 = *(unsigned char *)(v1 + 16);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *long long v5 = v2;
  v5[1] = sub_24EF23044;
  return sub_24EF0AB40(a1, v4, v1 + 24);
}

uint64_t objectdestroy_7Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24EF21E4C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_24EF23044;
  return sub_24EF0A7B4(a1, v4, v5, v6, v7);
}

uint64_t sub_24EF21F10(uint64_t result)
{
  *(unsigned char *)(result + 272) = 0;
  return result;
}

uint64_t sub_24EF21F18()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24EF21FBC(uint64_t a1)
{
  uint64_t v4 = v1 + 16;
  uint64_t v5 = *(void *)(v1 + 200);
  char v6 = *(unsigned char *)(v1 + 208);
  uint64_t v7 = *(void *)(v1 + 216);
  char v8 = *(unsigned char *)(v1 + 224);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_24EF23044;
  return sub_24EF09E94(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_24EF22088()
{
  return sub_24EF22A54(&qword_269985D00, (void (*)(uint64_t))type metadata accessor for FilterAction);
}

uint64_t sub_24EF220D0()
{
  return sub_24EF22A54(&qword_269985D08, (void (*)(uint64_t))type metadata accessor for FilterAction);
}

unint64_t sub_24EF2211C()
{
  unint64_t result = qword_269985D10;
  if (!qword_269985D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985D10);
  }
  return result;
}

uint64_t sub_24EF22170()
{
  return sub_24EF22A54(&qword_269985D18, (void (*)(uint64_t))type metadata accessor for FilterState);
}

uint64_t destroy for FilterFeature(uint64_t a1)
{
  swift_release();
  swift_release();
  if (*(void *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FilterFeature(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  char v6 = (_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  if (v5)
  {
    *(void *)(a1 + 32) = v5;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v6;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)v6 + 9);
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v8 = *(void *)(a2 + 168);
  uint64_t v7 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = v8;
  *(void *)(a1 + 176) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FilterFeature(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  char v6 = (_OWORD *)(a1 + 32);
  uint64_t v8 = (_OWORD *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v7)
    {
      *(void *)(a1 + 32) = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    }
    else
    {
      sub_24EF22580(a1 + 32);
      long long v9 = *(_OWORD *)(a2 + 41);
      *char v6 = *v8;
      *(_OWORD *)(a1 + 41) = v9;
    }
  }
  else if (v7)
  {
    *(void *)(a1 + 32) = v7;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v8;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    *char v6 = v10;
  }
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  swift_retain();
  swift_release();
  uint64_t v13 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v13;
  swift_retain();
  swift_release();
  uint64_t v14 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v15;
  swift_retain();
  swift_release();
  uint64_t v16 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v16;
  swift_retain();
  swift_release();
  uint64_t v17 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v17;
  swift_retain();
  swift_release();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24EF22580(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy184_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for FilterFeature(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32)) {
    goto LABEL_5;
  }
  if (!v4)
  {
    sub_24EF22580(a1 + 32);
LABEL_5:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_6;
  }
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
LABEL_6:
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_release();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_release();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FilterFeature(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 184)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FilterFeature(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterFeature()
{
  return &type metadata for FilterFeature;
}

uint64_t getEnumTagSinglePayload for FilterFeature.TaskIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FilterFeature.TaskIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF2295CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterFeature.TaskIdentifier()
{
  return &type metadata for FilterFeature.TaskIdentifier;
}

unint64_t sub_24EF22998()
{
  unint64_t result = qword_269985D20;
  if (!qword_269985D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985D20);
  }
  return result;
}

uint64_t sub_24EF229EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EF22A54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EF22AA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EF22B00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_24EF22B68(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_24EF22BB8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EF22C1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EF22C80(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EF22CEC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EF22D4C()
{
  return swift_release();
}

uint64_t sub_24EF22D54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24EF19E40(a1, *(long long **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

unint64_t sub_24EF22D78()
{
  unint64_t result = qword_269985E20;
  if (!qword_269985E20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985E18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985E20);
  }
  return result;
}

uint64_t sub_24EF22DD4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24EF22E38(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24EF22E44()
{
  unint64_t result = qword_269985E68;
  if (!qword_269985E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985E68);
  }
  return result;
}

unint64_t sub_24EF22E98()
{
  unint64_t result = qword_269985E70;
  if (!qword_269985E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985E70);
  }
  return result;
}

unint64_t sub_24EF22EEC()
{
  unint64_t result = qword_269985E78;
  if (!qword_269985E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985E78);
  }
  return result;
}

unint64_t sub_24EF22F40()
{
  unint64_t result = qword_269985E80;
  if (!qword_269985E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985E80);
  }
  return result;
}

uint64_t sub_24EF22F94()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_24EF22FEC()
{
  unint64_t result = qword_269985EA8;
  if (!qword_269985EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985EA8);
  }
  return result;
}

__n128 SelectedFilterItem.init(filterItem:name:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  __n128 result = *(__n128 *)a1;
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v7;
  *(void *)(a4 + 32) = v4;
  *(unsigned char *)(a4 + 40) = v5;
  *(void *)(a4 + 48) = a2;
  *(void *)(a4 + 56) = a3;
  return result;
}

uint64_t SelectedFilterItem.filterItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  unsigned __int8 v7 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 40) = v7;
  return sub_24EEF7798(v2, v3, v4, v5, v6, v7);
}

uint64_t SelectedFilterItem.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_24EF230BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24EF230D4()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 0x74497265746C6966;
  }
}

uint64_t sub_24EF2310C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF24000(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EF23134(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24EF23140(uint64_t a1)
{
  unint64_t v2 = sub_24EF23360();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF2317C(uint64_t a1)
{
  unint64_t v2 = sub_24EF23360();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SelectedFilterItem.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985EC8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v14 = v1[1];
  long long v15 = v7;
  uint64_t v8 = *((void *)v1 + 4);
  char v9 = *((unsigned char *)v1 + 40);
  uint64_t v10 = *((void *)v1 + 6);
  v13[0] = *((void *)v1 + 7);
  v13[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF23360();
  sub_24EF87AF0();
  long long v17 = v15;
  long long v18 = v14;
  uint64_t v19 = v8;
  char v20 = v9;
  char v21 = 0;
  sub_24EEF7DB0();
  uint64_t v11 = v16;
  sub_24EF87A20();
  if (!v11)
  {
    LOBYTE(v17) = 1;
    sub_24EF879D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EF23360()
{
  unint64_t result = qword_269985ED0;
  if (!qword_269985ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985ED0);
  }
  return result;
}

uint64_t SelectedFilterItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985ED8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF23360();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v33 = 0;
  sub_24EEF8248();
  sub_24EF87970();
  uint64_t v9 = v26;
  uint64_t v10 = v27;
  LOBYTE(v26) = 1;
  uint64_t v24 = v29;
  uint64_t v25 = v28;
  uint64_t v23 = v30;
  int v32 = v31;
  sub_24EEF7798(v9, v27, v28, v29, v30, v31);
  uint64_t v11 = sub_24EF87920();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v21 = v11;
  uint64_t v22 = v13;
  v12(v8, v5);
  uint64_t v15 = v24;
  uint64_t v14 = v25;
  uint64_t v16 = v23;
  unsigned __int8 v17 = v32;
  sub_24EEF7798(v9, v10, v25, v24, v23, v32);
  swift_bridgeObjectRetain();
  sub_24EEF7780(v9, v10, v14, v15, v16, v17);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v16;
  *(unsigned char *)(a2 + 40) = v17;
  uint64_t v18 = v22;
  *(void *)(a2 + 48) = v21;
  *(void *)(a2 + 56) = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_24EEF7780(v9, v10, v14, v15, v16, v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF2368C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SelectedFilterItem.init(from:)(a1, a2);
}

uint64_t sub_24EF236A4(void *a1)
{
  return SelectedFilterItem.encode(to:)(a1);
}

uint64_t SelectedFilterItem.hash(into:)()
{
  FilterItem.hash(into:)();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t SelectedFilterItem.hashValue.getter()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF237E4()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF23888()
{
  FilterItem.hash(into:)();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF23908()
{
  return sub_24EF87AD0();
}

uint64_t _s16FitnessFiltering18SelectedFilterItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  long long v10 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v10;
  uint64_t v17 = v2;
  char v18 = v3;
  long long v11 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v11;
  uint64_t v14 = v6;
  char v15 = v7;
  if ((_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v16, (uint64_t)v13) & 1) == 0) {
    return 0;
  }
  if (v4 == v8 && v5 == v9) {
    return 1;
  }
  return sub_24EF87A60();
}

unint64_t sub_24EF23A78()
{
  unint64_t result = qword_269985EE0;
  if (!qword_269985EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985EE0);
  }
  return result;
}

uint64_t destroy for SelectedFilterItem(uint64_t a1)
{
  sub_24EEF7780(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SelectedFilterItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 40);
  sub_24EEF7798(*(void *)a2, v5, v6, v7, v8, v9);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SelectedFilterItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 40);
  sub_24EEF7798(*(void *)a2, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  unsigned __int8 v15 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v9;
  sub_24EEF7780(v10, v11, v12, v13, v14, v15);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SelectedFilterItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = v4;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v5;
  sub_24EEF7780(v6, v7, v8, v9, v10, v12);
  uint64_t v13 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SelectedFilterItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelectedFilterItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectedFilterItem()
{
  return &type metadata for SelectedFilterItem;
}

uint64_t getEnumTagSinglePayload for SelectedFilterItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SelectedFilterItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF23EB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24EF23EDC(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SelectedFilterItem.CodingKeys()
{
  return &type metadata for SelectedFilterItem.CodingKeys;
}

unint64_t sub_24EF23EFC()
{
  unint64_t result = qword_269985EE8;
  if (!qword_269985EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985EE8);
  }
  return result;
}

unint64_t sub_24EF23F54()
{
  unint64_t result = qword_269985EF0;
  if (!qword_269985EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985EF0);
  }
  return result;
}

unint64_t sub_24EF23FAC()
{
  unint64_t result = qword_269985EF8;
  if (!qword_269985EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985EF8);
  }
  return result;
}

uint64_t sub_24EF24000(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74497265746C6966 && a2 == 0xEA00000000006D65;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_24EF240F0(char a1)
{
  unint64_t result = 0x796C707061;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x7373696D736964;
      break;
    case 3:
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x704F646564616F6CLL;
      break;
    case 5:
      unint64_t result = 0x6C69467465736572;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0x6570704177656976;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF24244()
{
  return 1;
}

uint64_t sub_24EF24254()
{
  return 0x7265746C6966;
}

uint64_t sub_24EF24268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7265746C6966 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24EF87A60();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_24EF242F8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24EF24304(uint64_t a1)
{
  unint64_t v2 = sub_24EF262D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF24340(uint64_t a1)
{
  unint64_t v2 = sub_24EF262D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24EF24384()
{
  return sub_24EF240F0(*v0);
}

uint64_t sub_24EF2438C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF2B05C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EF243B4(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_24EF243C0(uint64_t a1)
{
  unint64_t v2 = sub_24EF25DD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF243FC(uint64_t a1)
{
  unint64_t v2 = sub_24EF25DD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF24438()
{
  return sub_24EF87AA0();
}

uint64_t sub_24EF24460()
{
  return 12383;
}

uint64_t sub_24EF24470(uint64_t a1)
{
  unint64_t v2 = sub_24EF26280();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF244AC(uint64_t a1)
{
  unint64_t v2 = sub_24EF26280();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24EF244E8()
{
  return 0xD000000000000011;
}

uint64_t sub_24EF24504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF2B47C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EF24530(uint64_t a1)
{
  unint64_t v2 = sub_24EF2622C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF2456C(uint64_t a1)
{
  unint64_t v2 = sub_24EF2622C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF245A8()
{
  if (*v0) {
    return 0x65527265746C6966;
  }
  else {
    return 0x7265746C6966;
  }
}

uint64_t sub_24EF245E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF2B504(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF24610(uint64_t a1)
{
  unint64_t v2 = sub_24EF26130();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF2464C(uint64_t a1)
{
  unint64_t v2 = sub_24EF26130();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF24688()
{
  return 0x704F7265746C6966;
}

uint64_t sub_24EF246AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x704F7265746C6966 && a2 == 0xED0000736E6F6974)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24EF87A60();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24EF24768(uint64_t a1)
{
  unint64_t v2 = sub_24EF26088();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF247A4(uint64_t a1)
{
  unint64_t v2 = sub_24EF26088();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF247E0()
{
  return 0;
}

uint64_t sub_24EF247EC(uint64_t a1)
{
  unint64_t v2 = sub_24EF26034();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF24828(uint64_t a1)
{
  unint64_t v2 = sub_24EF26034();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF24864@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24EF24894(uint64_t a1)
{
  unint64_t v2 = sub_24EF25FE0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF248D0(uint64_t a1)
{
  unint64_t v2 = sub_24EF25FE0();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24EF2490C()
{
  return ((unint64_t)*v0 << 8) + 12383;
}

uint64_t sub_24EF24920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF2B608(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EF24948(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24EF24954(uint64_t a1)
{
  unint64_t v2 = sub_24EF25F38();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF24990(uint64_t a1)
{
  unint64_t v2 = sub_24EF25F38();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF249CC()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF24A10()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF24A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24EF87A60();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24EF24AD0(uint64_t a1)
{
  unint64_t v2 = sub_24EF25EE4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF24B0C(uint64_t a1)
{
  unint64_t v2 = sub_24EF25EE4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF24B48(uint64_t a1)
{
  unint64_t v2 = sub_24EF25E90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF24B84(uint64_t a1)
{
  unint64_t v2 = sub_24EF25E90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FilterAction.encode(to:)(void *a1)
{
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985F00);
  uint64_t v120 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388](v121);
  uint64_t v118 = (uint64_t)&v97 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985F08);
  uint64_t v100 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v119 = (uint64_t)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985F10);
  uint64_t v101 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  uint64_t v123 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_24EF86A90();
  uint64_t v125 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  uint64_t v126 = (uint64_t)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985F18);
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  uint64_t v111 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985F20);
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v108 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985F28);
  uint64_t v98 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  uint64_t v112 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985F30);
  uint64_t v99 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v116 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985F38);
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v103 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985F40);
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  unsigned __int8 v12 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985F48);
  uint64_t v102 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unsigned __int8 v15 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FilterAction();
  MEMORY[0x270FA5388](v16);
  char v18 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985F50);
  uint64_t v128 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF25DD8();
  unint64_t v131 = v20;
  sub_24EF87AF0();
  sub_24EF25E2C(v130, (uint64_t)v18);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v28 = *((void *)v18 + 1);
      uint64_t v130 = *(void *)v18;
      uint64_t v27 = v130;
      uint64_t v30 = *((void *)v18 + 2);
      uint64_t v29 = *((void *)v18 + 3);
      uint64_t v126 = v28;
      uint64_t v127 = v30;
      uint64_t v125 = v29;
      uint64_t v31 = *((void *)v18 + 4);
      unsigned __int8 v32 = v18[40];
      LOBYTE(v133) = 1;
      sub_24EF26280();
      char v33 = v131;
      uint64_t v34 = v132;
      sub_24EF879A0();
      uint64_t v133 = v27;
      uint64_t v134 = v28;
      uint64_t v35 = v125;
      uint64_t v135 = (char *)v30;
      uint64_t v136 = v125;
      uint64_t v137 = v31;
      LOBYTE(v138) = v32;
      sub_24EEF7DB0();
      uint64_t v36 = v105;
      sub_24EF87A20();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v12, v36);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v33, v34);
      return sub_24EEF7780(v130, v126, v127, v35, v31, v32);
    case 2u:
      LOBYTE(v133) = 2;
      sub_24EF2622C();
      uint64_t v38 = (uint64_t)v103;
      uint64_t v40 = v131;
      uint64_t v39 = v132;
      sub_24EF879A0();
      uint64_t v41 = v107;
      sub_24EF879E0();
      uint64_t v42 = &v138;
      goto LABEL_11;
    case 3u:
      uint64_t v43 = *(void *)v18;
      char v44 = v18[8];
      uint64_t v45 = (char *)*((void *)v18 + 2);
      char v46 = v18[24];
      uint64_t v47 = *((void *)v18 + 4);
      uint64_t v124 = *((void *)v18 + 5);
      uint64_t v125 = v47;
      char v48 = (char *)*((void *)v18 + 6);
      uint64_t v122 = *((void *)v18 + 7);
      uint64_t v123 = v48;
      uint64_t v121 = *((void *)v18 + 8);
      uint64_t v130 = *((void *)v18 + 9);
      uint64_t v49 = *((void *)v18 + 10);
      uint64_t v50 = *((void *)v18 + 11);
      uint64_t v51 = *((void *)v18 + 12);
      uint64_t v126 = v50;
      uint64_t v127 = v49;
      LOBYTE(v133) = 3;
      sub_24EF26130();
      uint64_t v52 = v116;
      long long v54 = v131;
      uint64_t v53 = v132;
      sub_24EF879A0();
      uint64_t v133 = v43;
      LOBYTE(v134) = v44;
      uint64_t v135 = v45;
      LOBYTE(v136) = v46;
      char v143 = 0;
      sub_24EF26184();
      uint64_t v55 = v117;
      uint64_t v56 = v129;
      sub_24EF87A20();
      if (v56)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v99 + 8))(v52, v55);
        (*(void (**)(char *, uint64_t))(v128 + 8))(v54, v53);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v133 = v125;
        uint64_t v134 = v124;
        uint64_t v135 = v123;
        uint64_t v136 = v122;
        uint64_t v137 = v121;
        uint64_t v138 = v130;
        uint64_t v139 = v127;
        uint64_t v140 = v126;
        uint64_t v141 = v51;
        char v143 = 1;
        sub_24EF261D8();
        sub_24EF87A20();
        (*(void (**)(char *, uint64_t))(v99 + 8))(v52, v55);
        (*(void (**)(char *, uint64_t))(v128 + 8))(v131, v132);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_19:
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    case 4u:
      uint64_t v57 = *(void *)v18;
      uint64_t v58 = *((void *)v18 + 1);
      long long v59 = (char *)*((void *)v18 + 2);
      uint64_t v130 = *((void *)v18 + 3);
      uint64_t v60 = *((void *)v18 + 4);
      uint64_t v61 = *((void *)v18 + 5);
      uint64_t v62 = *((void *)v18 + 7);
      uint64_t v126 = *((void *)v18 + 6);
      uint64_t v127 = v60;
      uint64_t v63 = *((void *)v18 + 8);
      LOBYTE(v133) = 4;
      sub_24EF26088();
      long long v64 = v112;
      uint64_t v65 = v131;
      sub_24EF879A0();
      uint64_t v124 = v58;
      uint64_t v125 = v57;
      uint64_t v133 = v57;
      uint64_t v134 = v58;
      uint64_t v122 = v61;
      uint64_t v123 = v59;
      uint64_t v135 = v59;
      uint64_t v136 = v130;
      uint64_t v137 = v127;
      uint64_t v138 = v61;
      uint64_t v139 = v126;
      uint64_t v140 = v62;
      uint64_t v121 = v63;
      uint64_t v141 = v63;
      sub_24EF260DC();
      uint64_t v66 = v115;
      sub_24EF87A20();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v64, v66);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v65, v132);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 5u:
      uint64_t v67 = *(void *)v18;
      uint64_t v68 = *((void *)v18 + 1);
      uint64_t v69 = *((void *)v18 + 2);
      uint64_t v130 = *((void *)v18 + 3);
      uint64_t v70 = *((void *)v18 + 4);
      LODWORD(v122) = v18[40];
      LODWORD(v117) = v18[41];
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985C68);
      uint64_t v72 = v125;
      (*(void (**)(uint64_t, char *, uint64_t))(v125 + 32))(v126, &v18[*(int *)(v71 + 64)], v127);
      LOBYTE(v133) = 7;
      sub_24EF25F38();
      uint64_t v73 = v123;
      unint64_t v74 = v131;
      uint64_t v75 = v132;
      sub_24EF879A0();
      uint64_t v121 = v67;
      uint64_t v133 = v67;
      uint64_t v134 = v68;
      uint64_t v120 = v68;
      uint64_t v119 = v69;
      uint64_t v135 = (char *)v69;
      uint64_t v76 = v130;
      uint64_t v136 = v130;
      uint64_t v137 = v70;
      uint64_t v118 = v70;
      unsigned __int8 v77 = v122;
      LOBYTE(v138) = v122;
      char v143 = 0;
      sub_24EEF7DB0();
      uint64_t v78 = v124;
      uint64_t v79 = v129;
      sub_24EF87A20();
      if (v79)
      {
        (*(void (**)(char *, uint64_t))(v101 + 8))(v73, v78);
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v126, v127);
        (*(void (**)(char *, uint64_t))(v128 + 8))(v74, v75);
        return sub_24EEF7780(v121, v120, v119, v76, v118, v77);
      }
      else
      {
        sub_24EEF7780(v121, v120, v119, v76, v118, v77);
        LOBYTE(v133) = v117;
        char v143 = 1;
        sub_24EF25F8C();
        sub_24EF87A20();
        LOBYTE(v133) = 2;
        sub_24EF29088(&qword_269985F80, MEMORY[0x263F07A30]);
        uint64_t v94 = v126;
        uint64_t v93 = v127;
        sub_24EF87A20();
        BOOL v95 = v131;
        uint64_t v96 = v125;
        (*(void (**)(char *, uint64_t))(v101 + 8))(v73, v78);
        (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v94, v93);
        uint64_t v81 = *(uint64_t (**)(char *, uint64_t))(v128 + 8);
        uint64_t v82 = v95;
        uint64_t v83 = v75;
        return v81(v82, v83);
      }
    case 6u:
      char v80 = *v18;
      LOBYTE(v133) = 8;
      sub_24EF25EE4();
      uint64_t v38 = v119;
      uint64_t v40 = v131;
      uint64_t v39 = v132;
      sub_24EF879A0();
      LOBYTE(v133) = v80;
      sub_24EEF7E58();
      uint64_t v41 = v122;
      sub_24EF87A20();
      uint64_t v42 = &v132;
LABEL_11:
      (*(void (**)(uint64_t, uint64_t))(*(v42 - 32) + 8))(v38, v41);
      uint64_t v81 = *(uint64_t (**)(char *, uint64_t))(v128 + 8);
      uint64_t v82 = v40;
      uint64_t v83 = v39;
      return v81(v82, v83);
    case 7u:
      LOBYTE(v133) = 5;
      sub_24EF26034();
      uint64_t v84 = v108;
      unint64_t v86 = v131;
      uint64_t v85 = v132;
      sub_24EF879A0();
      uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
      uint64_t v88 = (uint64_t)v84;
      uint64_t v89 = (uint64_t *)&v142;
      goto LABEL_15;
    case 8u:
      LOBYTE(v133) = 6;
      sub_24EF25FE0();
      uint64_t v90 = v111;
      unint64_t v86 = v131;
      uint64_t v85 = v132;
      sub_24EF879A0();
      uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v113 + 8);
      uint64_t v88 = (uint64_t)v90;
      uint64_t v89 = &v144;
LABEL_15:
      uint64_t v91 = *(v89 - 32);
      goto LABEL_17;
    case 9u:
      LOBYTE(v133) = 9;
      sub_24EF25E90();
      uint64_t v92 = v118;
      unint64_t v86 = v131;
      uint64_t v85 = v132;
      sub_24EF879A0();
      uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
      uint64_t v88 = v92;
      uint64_t v91 = v121;
LABEL_17:
      v87(v88, v91);
      return (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v86, v85);
    default:
      uint64_t v21 = *(void *)v18;
      char v22 = v18[8];
      uint64_t v23 = (char *)*((void *)v18 + 2);
      char v24 = v18[24];
      LOBYTE(v133) = 0;
      sub_24EF262D4();
      uint64_t v26 = v131;
      uint64_t v25 = v132;
      sub_24EF879A0();
      uint64_t v133 = v21;
      LOBYTE(v134) = v22;
      uint64_t v135 = v23;
      LOBYTE(v136) = v24;
      sub_24EF26184();
      sub_24EF87A20();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v15, v13);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v26, v25);
      goto LABEL_19;
  }
}

uint64_t type metadata accessor for FilterAction()
{
  uint64_t result = qword_269986070;
  if (!qword_269986070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EF25DD8()
{
  unint64_t result = qword_269985F58;
  if (!qword_269985F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985F58);
  }
  return result;
}

uint64_t sub_24EF25E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FilterAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EF25E90()
{
  unint64_t result = qword_269985F60;
  if (!qword_269985F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985F60);
  }
  return result;
}

unint64_t sub_24EF25EE4()
{
  unint64_t result = qword_269985F68;
  if (!qword_269985F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985F68);
  }
  return result;
}

unint64_t sub_24EF25F38()
{
  unint64_t result = qword_269985F70;
  if (!qword_269985F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985F70);
  }
  return result;
}

unint64_t sub_24EF25F8C()
{
  unint64_t result = qword_269985F78;
  if (!qword_269985F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985F78);
  }
  return result;
}

unint64_t sub_24EF25FE0()
{
  unint64_t result = qword_269985F88;
  if (!qword_269985F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985F88);
  }
  return result;
}

unint64_t sub_24EF26034()
{
  unint64_t result = qword_269985F90;
  if (!qword_269985F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985F90);
  }
  return result;
}

unint64_t sub_24EF26088()
{
  unint64_t result = qword_269985F98;
  if (!qword_269985F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985F98);
  }
  return result;
}

unint64_t sub_24EF260DC()
{
  unint64_t result = qword_269985FA0;
  if (!qword_269985FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985FA0);
  }
  return result;
}

unint64_t sub_24EF26130()
{
  unint64_t result = qword_269985FA8;
  if (!qword_269985FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985FA8);
  }
  return result;
}

unint64_t sub_24EF26184()
{
  unint64_t result = qword_269985FB0;
  if (!qword_269985FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985FB0);
  }
  return result;
}

unint64_t sub_24EF261D8()
{
  unint64_t result = qword_269985FB8;
  if (!qword_269985FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985FB8);
  }
  return result;
}

unint64_t sub_24EF2622C()
{
  unint64_t result = qword_269985FC0;
  if (!qword_269985FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985FC0);
  }
  return result;
}

unint64_t sub_24EF26280()
{
  unint64_t result = qword_269985FC8;
  if (!qword_269985FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985FC8);
  }
  return result;
}

unint64_t sub_24EF262D4()
{
  unint64_t result = qword_269985FD0;
  if (!qword_269985FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269985FD0);
  }
  return result;
}

uint64_t FilterAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v147 = a2;
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985FD8);
  uint64_t v136 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v137);
  uint64_t v152 = (char *)&v113 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985FE0);
  uint64_t v124 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  uint64_t v151 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985FE8);
  uint64_t v140 = *(void *)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  uint64_t v146 = (char *)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985FF0);
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  uint64_t v150 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985FF8);
  uint64_t v129 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v144 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986000);
  uint64_t v122 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v145 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986008);
  uint64_t v123 = *(void *)(v133 - 8);
  MEMORY[0x270FA5388](v133);
  uint64_t v149 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986010);
  uint64_t v121 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  char v143 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986018);
  uint64_t v120 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  char v142 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986020);
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  uint64_t v141 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986028);
  uint64_t v148 = *(void *)(v154 - 8);
  MEMORY[0x270FA5388](v154);
  uint64_t v14 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = type metadata accessor for FilterAction();
  uint64_t v15 = MEMORY[0x270FA5388](v153);
  uint64_t v119 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v130 = (char *)&v113 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v118 = (_OWORD *)((char *)&v113 - v20);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v113 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v113 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)&v113 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  unsigned __int8 v32 = (char *)&v113 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v113 - v33;
  uint64_t v35 = a1[3];
  uint64_t v155 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v35);
  sub_24EF25DD8();
  uint64_t v36 = v156;
  sub_24EF87AE0();
  uint64_t v156 = v36;
  if (v36) {
    goto LABEL_32;
  }
  uint64_t v115 = v26;
  uint64_t v116 = v32;
  uint64_t v117 = v29;
  uint64_t v114 = v23;
  uint64_t v37 = v149;
  uint64_t v38 = v150;
  uint64_t v40 = v151;
  uint64_t v39 = v152;
  uint64_t v41 = v154;
  uint64_t v42 = sub_24EF87980();
  if (*(void *)(v42 + 16) != 1)
  {
    uint64_t v51 = sub_24EF87880();
    uint64_t v52 = swift_allocError();
    uint64_t v53 = v14;
    uint64_t v54 = v41;
    uint64_t v56 = v55;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269986030);
    *uint64_t v56 = v153;
    sub_24EF878F0();
    sub_24EF87870();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v51 - 8) + 104))(v56, *MEMORY[0x263F8DCB0], v51);
    uint64_t v156 = v52;
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v148 + 8))(v53, v54);
LABEL_32:
    uint64_t v89 = (uint64_t)v155;
    return __swift_destroy_boxed_opaque_existential_1(v89);
  }
  switch(*(unsigned char *)(v42 + 32))
  {
    case 1:
      LOBYTE(v161) = 1;
      sub_24EF26280();
      uint64_t v57 = v142;
      uint64_t v58 = v156;
      sub_24EF878E0();
      uint64_t v156 = v58;
      if (v58) {
        goto LABEL_31;
      }
      sub_24EEF8248();
      uint64_t v59 = v127;
      uint64_t v60 = v156;
      sub_24EF87970();
      uint64_t v156 = v60;
      if (v60)
      {
        (*(void (**)(char *, uint64_t))(v120 + 8))(v57, v59);
        goto LABEL_31;
      }
      (*(void (**)(char *, uint64_t))(v120 + 8))(v57, v59);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v14, v41);
      uint64_t v91 = v163;
      char v92 = BYTE8(v163);
      long long v93 = v162;
      uint64_t v94 = v117;
      *uint64_t v117 = v161;
      v94[1] = v93;
      *((void *)v94 + 4) = v91;
      *((unsigned char *)v94 + 40) = v92;
      goto LABEL_40;
    case 2:
      LOBYTE(v161) = 2;
      sub_24EF2622C();
      uint64_t v61 = v143;
      uint64_t v62 = v156;
      sub_24EF878E0();
      uint64_t v156 = v62;
      if (v62) {
        goto LABEL_31;
      }
      uint64_t v63 = v128;
      char v64 = sub_24EF87930();
      uint64_t v65 = v148;
      uint64_t v156 = 0;
      char v95 = v64;
      (*(void (**)(char *, uint64_t))(v121 + 8))(v61, v63);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v41);
      char v96 = v95 & 1;
      uint64_t v50 = v115;
      *uint64_t v115 = v96;
      goto LABEL_45;
    case 3:
      LOBYTE(v161) = 3;
      sub_24EF26130();
      uint64_t v66 = v37;
      uint64_t v67 = v156;
      sub_24EF878E0();
      uint64_t v156 = v67;
      if (v67) {
        goto LABEL_31;
      }
      LOBYTE(v161) = 0;
      sub_24EF27954();
      uint64_t v68 = v133;
      uint64_t v69 = v156;
      sub_24EF87970();
      uint64_t v70 = v148;
      uint64_t v156 = v69;
      if (v69)
      {
        (*(void (**)(char *, uint64_t))(v123 + 8))(v66, v68);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v14, v41);
        goto LABEL_32;
      }
      uint64_t v97 = v14;
      uint64_t v98 = v68;
      uint64_t v99 = v157;
      LODWORD(v152) = v158;
      uint64_t v100 = v159;
      LODWORD(v151) = v160;
      char v166 = 1;
      sub_24EF279A8();
      uint64_t v101 = v156;
      sub_24EF87970();
      uint64_t v156 = v101;
      if (v101)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v123 + 8))(v66, v98);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v97, v154);
        goto LABEL_32;
      }
      (*(void (**)(char *, uint64_t))(v123 + 8))(v66, v98);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v97, v154);
      uint64_t v107 = v165;
      uint64_t v50 = v114;
      void *v114 = v99;
      v50[8] = (_BYTE)v152;
      *((void *)v50 + 2) = v100;
      v50[24] = (_BYTE)v151;
      long long v108 = v162;
      *((_OWORD *)v50 + 2) = v161;
      *((_OWORD *)v50 + 3) = v108;
      long long v109 = v164;
      *((_OWORD *)v50 + 4) = v163;
      *((_OWORD *)v50 + 5) = v109;
      *((void *)v50 + 12) = v107;
      goto LABEL_45;
    case 4:
      LOBYTE(v161) = 4;
      sub_24EF26088();
      uint64_t v71 = v145;
      uint64_t v72 = v156;
      sub_24EF878E0();
      uint64_t v156 = v72;
      if (v72) {
        goto LABEL_31;
      }
      sub_24EF27900();
      uint64_t v73 = v132;
      uint64_t v74 = v156;
      sub_24EF87970();
      uint64_t v75 = v148;
      uint64_t v156 = v74;
      if (v74)
      {
        (*(void (**)(char *, uint64_t))(v122 + 8))(v71, v73);
        goto LABEL_29;
      }
      (*(void (**)(char *, uint64_t))(v122 + 8))(v71, v73);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v14, v41);
      uint64_t v102 = v165;
      long long v103 = v162;
      uint64_t v94 = v118;
      _OWORD *v118 = v161;
      v94[1] = v103;
      long long v104 = v164;
      v94[2] = v163;
      v94[3] = v104;
      *((void *)v94 + 8) = v102;
LABEL_40:
      swift_storeEnumTagMultiPayload();
      uint64_t v105 = (uint64_t)v94;
      goto LABEL_46;
    case 5:
      LOBYTE(v161) = 5;
      sub_24EF26034();
      uint64_t v76 = v144;
      uint64_t v77 = v156;
      sub_24EF878E0();
      uint64_t v156 = v77;
      if (v77) {
        goto LABEL_31;
      }
      (*(void (**)(char *, uint64_t))(v129 + 8))(v76, v131);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v14, v41);
      goto LABEL_35;
    case 6:
      LOBYTE(v161) = 6;
      sub_24EF25FE0();
      uint64_t v78 = v156;
      sub_24EF878E0();
      uint64_t v156 = v78;
      if (v78) {
        goto LABEL_31;
      }
      (*(void (**)(char *, uint64_t))(v134 + 8))(v38, v135);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v14, v41);
      goto LABEL_35;
    case 7:
      LOBYTE(v161) = 7;
      sub_24EF25F38();
      uint64_t v79 = v146;
      uint64_t v80 = v156;
      sub_24EF878E0();
      uint64_t v156 = v80;
      if (v80) {
        goto LABEL_31;
      }
      LOBYTE(v161) = 0;
      sub_24EEF8248();
      uint64_t v81 = v130;
      uint64_t v82 = v139;
      uint64_t v83 = v156;
      sub_24EF87970();
      uint64_t v84 = v148;
      uint64_t v156 = v83;
      if (v83)
      {
        (*(void (**)(char *, uint64_t))(v140 + 8))(v79, v82);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v14, v154);
        goto LABEL_32;
      }
      LOBYTE(v161) = 1;
      sub_24EF278AC();
      uint64_t v106 = v156;
      sub_24EF87970();
      uint64_t v156 = v106;
      if (v106)
      {
        (*(void (**)(char *, uint64_t))(v140 + 8))(v79, v82);
LABEL_50:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v14, v154);
        sub_24EEF7780(*(void *)v81, *((void *)v81 + 1), *((void *)v81 + 2), *((void *)v81 + 3), *((void *)v81 + 4), v81[40]);
        goto LABEL_32;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_269985C68);
      sub_24EF86A90();
      LOBYTE(v161) = 2;
      sub_24EF29088(&qword_269986040, MEMORY[0x263F07A30]);
      uint64_t v111 = v146;
      uint64_t v112 = v156;
      sub_24EF87970();
      uint64_t v156 = v112;
      if (v112)
      {
        (*(void (**)(char *, uint64_t))(v140 + 8))(v111, v82);
        goto LABEL_50;
      }
      (*(void (**)(char *, uint64_t))(v140 + 8))(v111, v82);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v14, v154);
      swift_storeEnumTagMultiPayload();
      uint64_t v105 = (uint64_t)v81;
LABEL_46:
      sub_24EF27848(v105, (uint64_t)v34);
LABEL_47:
      uint64_t v110 = (uint64_t)v155;
      sub_24EF27848((uint64_t)v34, v147);
      uint64_t v89 = v110;
      break;
    case 8:
      LOBYTE(v161) = 8;
      sub_24EF25EE4();
      uint64_t v85 = v156;
      sub_24EF878E0();
      uint64_t v156 = v85;
      if (v85) {
        goto LABEL_31;
      }
      sub_24EEF82F0();
      uint64_t v86 = v138;
      uint64_t v87 = v156;
      sub_24EF87970();
      uint64_t v75 = v148;
      uint64_t v156 = v87;
      if (!v87)
      {
        (*(void (**)(char *, uint64_t))(v124 + 8))(v40, v86);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v14, v41);
        uint64_t v50 = v119;
        *uint64_t v119 = v161;
        goto LABEL_45;
      }
      (*(void (**)(char *, uint64_t))(v124 + 8))(v40, v86);
LABEL_29:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v14, v41);
      goto LABEL_32;
    case 9:
      LOBYTE(v161) = 9;
      sub_24EF25E90();
      uint64_t v88 = v156;
      sub_24EF878E0();
      uint64_t v156 = v88;
      if (v88) {
        goto LABEL_31;
      }
      (*(void (**)(char *, uint64_t))(v136 + 8))(v39, v137);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v14, v41);
LABEL_35:
      swift_storeEnumTagMultiPayload();
      goto LABEL_47;
    default:
      LOBYTE(v161) = 0;
      sub_24EF262D4();
      uint64_t v43 = v141;
      uint64_t v44 = v156;
      sub_24EF878E0();
      uint64_t v156 = v44;
      if (v44)
      {
LABEL_31:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v148 + 8))(v14, v41);
        goto LABEL_32;
      }
      sub_24EF27954();
      uint64_t v45 = v126;
      uint64_t v46 = v156;
      sub_24EF87970();
      (*(void (**)(char *, uint64_t))(v125 + 8))(v43, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v14, v41);
      uint64_t v156 = v46;
      if (v46) {
        goto LABEL_32;
      }
      char v47 = BYTE8(v161);
      uint64_t v48 = v162;
      char v49 = BYTE8(v162);
      uint64_t v50 = v116;
      *uint64_t v116 = v161;
      v50[8] = v47;
      *((void *)v50 + 2) = v48;
      v50[24] = v49;
LABEL_45:
      swift_storeEnumTagMultiPayload();
      uint64_t v105 = (uint64_t)v50;
      goto LABEL_46;
  }
  return __swift_destroy_boxed_opaque_existential_1(v89);
}

uint64_t sub_24EF27848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FilterAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EF278AC()
{
  unint64_t result = qword_269986038;
  if (!qword_269986038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986038);
  }
  return result;
}

unint64_t sub_24EF27900()
{
  unint64_t result = qword_269986048;
  if (!qword_269986048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986048);
  }
  return result;
}

unint64_t sub_24EF27954()
{
  unint64_t result = qword_269986050;
  if (!qword_269986050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986050);
  }
  return result;
}

unint64_t sub_24EF279A8()
{
  unint64_t result = qword_269986058;
  if (!qword_269986058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986058);
  }
  return result;
}

uint64_t sub_24EF279FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FilterAction.init(from:)(a1, a2);
}

uint64_t sub_24EF27A14(void *a1)
{
  return FilterAction.encode(to:)(a1);
}

uint64_t FilterAction.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24EF86A90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FilterAction();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EF25E2C(v2, (uint64_t)v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v15 = *(void *)v10;
      uint64_t v16 = *((void *)v10 + 1);
      uint64_t v17 = *((void *)v10 + 2);
      uint64_t v18 = *((void *)v10 + 3);
      uint64_t v19 = *((void *)v10 + 4);
      unsigned __int8 v20 = v10[40];
      sub_24EF87AA0();
      uint64_t v52 = v15;
      uint64_t v53 = v16;
      uint64_t v54 = v17;
      uint64_t v55 = v18;
      uint64_t v56 = v19;
      LOBYTE(v57) = v20;
      FilterItem.hash(into:)();
      return sub_24EEF7780(v15, v16, v17, v18, v19, v20);
    case 2u:
      sub_24EF87AA0();
      return sub_24EF87AB0();
    case 3u:
      uint64_t v22 = *(void *)v10;
      char v23 = v10[8];
      uint64_t v24 = *((void *)v10 + 2);
      char v25 = v10[24];
      uint64_t v26 = *((void *)v10 + 4);
      uint64_t v49 = *((void *)v10 + 5);
      uint64_t v50 = v26;
      uint64_t v27 = *((void *)v10 + 6);
      uint64_t v28 = *((void *)v10 + 8);
      uint64_t v47 = *((void *)v10 + 7);
      uint64_t v48 = v27;
      v46[1] = v28;
      uint64_t v29 = *((void *)v10 + 10);
      uint64_t v51 = *((void *)v10 + 9);
      uint64_t v30 = *((void *)v10 + 11);
      uint64_t v31 = *((void *)v10 + 12);
      sub_24EF87AA0();
      uint64_t v52 = v22;
      LOBYTE(v53) = v23;
      uint64_t v54 = v24;
      LOBYTE(v55) = v25;
      Filter.hash(into:)((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v52 = v50;
      uint64_t v53 = v49;
      uint64_t v54 = v48;
      uint64_t v55 = v47;
      uint64_t v56 = v28;
      uint64_t v57 = v51;
      uint64_t v58 = v29;
      uint64_t v59 = v30;
      uint64_t v60 = v31;
      FilterResult.hash(into:)((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 4u:
      uint64_t v32 = *(void *)v10;
      uint64_t v33 = *((void *)v10 + 1);
      uint64_t v34 = *((void *)v10 + 2);
      uint64_t v35 = *((void *)v10 + 3);
      uint64_t v36 = *((void *)v10 + 4);
      uint64_t v50 = *((void *)v10 + 5);
      uint64_t v51 = v32;
      uint64_t v37 = *((void *)v10 + 6);
      uint64_t v38 = *((void *)v10 + 7);
      uint64_t v39 = *((void *)v10 + 8);
      sub_24EF87AA0();
      uint64_t v52 = v32;
      uint64_t v53 = v33;
      uint64_t v54 = v34;
      uint64_t v55 = v35;
      uint64_t v56 = v36;
      uint64_t v57 = v50;
      uint64_t v58 = v37;
      uint64_t v59 = v38;
      uint64_t v60 = v39;
      FilterOptions.hash(into:)(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 5u:
      uint64_t v40 = *(void *)v10;
      uint64_t v41 = *((void *)v10 + 1);
      uint64_t v43 = *((void *)v10 + 3);
      uint64_t v49 = *((void *)v10 + 2);
      uint64_t v42 = v49;
      uint64_t v44 = *((void *)v10 + 4);
      uint64_t v51 = v10[41];
      LODWORD(v50) = v10[40];
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985C68);
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, &v10[*(int *)(v45 + 64)], v4);
      sub_24EF87AA0();
      uint64_t v52 = v40;
      uint64_t v53 = v41;
      uint64_t v54 = v42;
      uint64_t v55 = v43;
      uint64_t v56 = v44;
      LOBYTE(v42) = v50;
      LOBYTE(v57) = v50;
      FilterItem.hash(into:)();
      sub_24EEF7780(v40, v41, v49, v43, v44, v42);
      sub_24EF87AA0();
      sub_24EF29088(&qword_269986060, MEMORY[0x263F07A30]);
      sub_24EF875A0();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    case 6u:
      sub_24EF87AA0();
      sub_24EF87670();
      return swift_bridgeObjectRelease();
    case 7u:
    case 8u:
    case 9u:
      return sub_24EF87AA0();
    default:
      uint64_t v11 = *(void *)v10;
      char v12 = v10[8];
      uint64_t v13 = *((void *)v10 + 2);
      char v14 = v10[24];
      sub_24EF87AA0();
      uint64_t v52 = v11;
      LOBYTE(v53) = v12;
      uint64_t v54 = v13;
      LOBYTE(v55) = v14;
      Filter.hash(into:)((uint64_t)a1);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
  }
}

uint64_t FilterAction.hashValue.getter()
{
  sub_24EF87A90();
  FilterAction.hash(into:)(v1);
  return sub_24EF87AD0();
}

uint64_t sub_24EF28080()
{
  sub_24EF87A90();
  FilterAction.hash(into:)(v1);
  return sub_24EF87AD0();
}

uint64_t sub_24EF280C4()
{
  sub_24EF87A90();
  FilterAction.hash(into:)(v1);
  return sub_24EF87AD0();
}

uint64_t _s16FitnessFiltering12FilterActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v136 = (char *)a2;
  uint64_t v3 = sub_24EF86A90();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v134 = v3;
  uint64_t v135 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v132 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v133 = (char *)&v114 - v7;
  uint64_t v8 = type metadata accessor for FilterAction();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (unsigned __int8 *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  char v14 = (char *)&v114 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (uint64_t *)((char *)&v114 - v16);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  unsigned __int8 v20 = (char *)&v114 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  char v23 = (char *)&v114 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v114 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v114 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986170);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  uint64_t v32 = (char *)&v114 + *(int *)(v30 + 56) - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  uint64_t v34 = (char *)&v114 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EF25E2C(v33, (uint64_t)v34);
  sub_24EF25E2C((uint64_t)v136, (uint64_t)v32);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24EF25E2C((uint64_t)v34, (uint64_t)v26);
      uint64_t v38 = (uint64_t)v34;
      uint64_t v40 = *(void *)v26;
      uint64_t v39 = *((void *)v26 + 1);
      uint64_t v42 = *((void *)v26 + 2);
      uint64_t v41 = *((void *)v26 + 3);
      uint64_t v43 = *((void *)v26 + 4);
      unsigned __int8 v44 = v26[40];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v45 = *(void *)v32;
        uint64_t v46 = *((void *)v32 + 1);
        uint64_t v136 = (char *)v38;
        uint64_t v137 = v45;
        uint64_t v48 = *((void *)v32 + 2);
        uint64_t v47 = *((void *)v32 + 3);
        uint64_t v134 = *((void *)v32 + 4);
        uint64_t v135 = v47;
        LODWORD(v133) = v32[40];
        uint64_t v146 = v40;
        uint64_t v147 = v39;
        uint64_t v148 = v42;
        uint64_t v149 = v41;
        uint64_t v150 = v43;
        LOBYTE(v151) = v44;
        uint64_t v138 = v46;
        uint64_t v139 = (char *)v48;
        uint64_t v140 = v47;
        uint64_t v141 = v134;
        LOBYTE(v142) = (_BYTE)v133;
        char v49 = _s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)&v146, (uint64_t)&v137);
        sub_24EEF7780(v45, v46, v48, v135, v134, v133);
        sub_24EEF7780(v40, v39, v42, v41, v43, v44);
        goto LABEL_17;
      }
      sub_24EEF7780(v40, v39, v42, v41, v43, v44);
      uint64_t v34 = (char *)v38;
      goto LABEL_37;
    case 2u:
      sub_24EF25E2C((uint64_t)v34, (uint64_t)v23);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_37;
      }
      char v50 = *v23 ^ *v32;
      sub_24EF29CB8((uint64_t)v34);
      char v49 = v50 ^ 1;
      return v49 & 1;
    case 3u:
      uint64_t v136 = v34;
      sub_24EF25E2C((uint64_t)v34, (uint64_t)v20);
      uint64_t v51 = *(void *)v20;
      uint64_t v52 = *((void *)v20 + 2);
      LODWORD(v126) = v20[24];
      uint64_t v53 = *((void *)v20 + 4);
      uint64_t v134 = *((void *)v20 + 5);
      uint64_t v135 = v53;
      uint64_t v133 = (char *)*((void *)v20 + 6);
      uint64_t v54 = *((void *)v20 + 8);
      uint64_t v132 = (char *)*((void *)v20 + 7);
      uint64_t v55 = *((void *)v20 + 9);
      uint64_t v56 = *((void *)v20 + 10);
      uint64_t v57 = *((void *)v20 + 11);
      uint64_t v58 = *((void *)v20 + 12);
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_34;
      }
      uint64_t v116 = v58;
      uint64_t v128 = v52;
      uint64_t v117 = v57;
      uint64_t v118 = v56;
      uint64_t v119 = v55;
      uint64_t v59 = v132;
      uint64_t v60 = v133;
      uint64_t v61 = v134;
      uint64_t v62 = v135;
      int v63 = v20[8];
      uint64_t v64 = *(void *)v32;
      int v65 = v32[8];
      uint64_t v127 = *((void *)v32 + 2);
      int v115 = v32[24];
      uint64_t v124 = *((void *)v32 + 4);
      uint64_t v123 = *((void *)v32 + 5);
      uint64_t v122 = *((void *)v32 + 6);
      uint64_t v121 = *((void *)v32 + 7);
      uint64_t v131 = *((void *)v32 + 8);
      uint64_t v130 = *((void *)v32 + 9);
      uint64_t v129 = *((void *)v32 + 10);
      uint64_t v66 = *((void *)v32 + 12);
      uint64_t v120 = *((void *)v32 + 11);
      uint64_t v125 = v64;
      if (sub_24EF05194(v51, v64) & 1) != 0 && ((v63 ^ v65) & 1) == 0 && (sub_24EF05194(v128, v127))
      {
        char v67 = sub_24EF065E0(v126, v115);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v67)
        {
          uint64_t v146 = v62;
          uint64_t v147 = v61;
          uint64_t v148 = (uint64_t)v60;
          uint64_t v149 = (uint64_t)v59;
          uint64_t v114 = v66;
          uint64_t v150 = v54;
          uint64_t v151 = v119;
          uint64_t v152 = v118;
          uint64_t v153 = v117;
          uint64_t v154 = v116;
          uint64_t v137 = v124;
          uint64_t v138 = v123;
          uint64_t v139 = (char *)v122;
          uint64_t v140 = v121;
          uint64_t v141 = v131;
          uint64_t v142 = v130;
          uint64_t v143 = v129;
          uint64_t v144 = v120;
          uint64_t v145 = v66;
          char v49 = _s16FitnessFiltering12FilterResultV2eeoiySbAC_ACtFZ_0(&v146, &v137);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
        uint64_t v128 = v121;
        uint64_t v126 = v122;
        uint64_t v127 = v123;
        uint64_t v125 = v124;
      }
      else
      {
        uint64_t v126 = v51;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v129 = v122;
        uint64_t v130 = v123;
        uint64_t v131 = v124;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_51;
    case 4u:
      sub_24EF25E2C((uint64_t)v34, (uint64_t)v17);
      uint64_t v68 = v17[1];
      uint64_t v135 = *v17;
      uint64_t v136 = v34;
      uint64_t v70 = v17[2];
      uint64_t v69 = v17[3];
      uint64_t v71 = v17[4];
      uint64_t v72 = v17[5];
      uint64_t v73 = v17[6];
      uint64_t v74 = v17[7];
      uint64_t v75 = v17[8];
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v76 = (char *)*((void *)v32 + 1);
        uint64_t v134 = *(void *)v32;
        uint64_t v133 = v76;
        uint64_t v132 = (char *)*((void *)v32 + 2);
        uint64_t v131 = *((void *)v32 + 3);
        uint64_t v130 = *((void *)v32 + 4);
        uint64_t v129 = *((void *)v32 + 5);
        uint64_t v128 = *((void *)v32 + 6);
        uint64_t v127 = *((void *)v32 + 7);
        uint64_t v126 = *((void *)v32 + 8);
        uint64_t v146 = v135;
        uint64_t v147 = v68;
        uint64_t v148 = v70;
        uint64_t v149 = v69;
        uint64_t v150 = v71;
        uint64_t v151 = v72;
        uint64_t v152 = v73;
        uint64_t v153 = v74;
        uint64_t v154 = v75;
        uint64_t v137 = v134;
        uint64_t v138 = (uint64_t)v76;
        uint64_t v139 = v132;
        uint64_t v140 = v131;
        uint64_t v141 = v130;
        uint64_t v142 = v129;
        uint64_t v143 = v128;
        uint64_t v144 = v127;
        uint64_t v145 = v126;
        char v49 = static FilterOptions.== infix(_:_:)(&v146, &v137);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_16:
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_34:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_36;
    case 5u:
      uint64_t v136 = v34;
      sub_24EF25E2C((uint64_t)v34, (uint64_t)v14);
      uint64_t v78 = *(void *)v14;
      uint64_t v77 = *((void *)v14 + 1);
      uint64_t v79 = *((void *)v14 + 3);
      uint64_t v131 = *((void *)v14 + 2);
      uint64_t v80 = *((void *)v14 + 4);
      int v81 = v14[40];
      LODWORD(v130) = v14[41];
      uint64_t v82 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269985C68) + 64);
      uint64_t v83 = &v14[v82];
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v127 = *(void *)v32;
        uint64_t v126 = *((void *)v32 + 1);
        uint64_t v124 = *((void *)v32 + 2);
        uint64_t v84 = *((void *)v32 + 4);
        uint64_t v125 = *((void *)v32 + 3);
        uint64_t v123 = v79;
        LODWORD(v121) = v32[41];
        uint64_t v85 = &v32[v82];
        char v86 = v81;
        LODWORD(v129) = v81;
        uint64_t v87 = v80;
        uint64_t v128 = v80;
        uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v135 + 32);
        unsigned __int8 v89 = v32[40];
        uint64_t v90 = v83;
        uint64_t v91 = v134;
        v88(v133, v90, v134);
        v88(v132, v85, v91);
        uint64_t v92 = v78;
        uint64_t v146 = v78;
        uint64_t v147 = v77;
        uint64_t v93 = v131;
        uint64_t v94 = v123;
        uint64_t v148 = v131;
        uint64_t v149 = v123;
        uint64_t v150 = v87;
        LOBYTE(v151) = v86;
        uint64_t v95 = v127;
        uint64_t v96 = v126;
        uint64_t v137 = v127;
        uint64_t v138 = v126;
        uint64_t v97 = v124;
        uint64_t v98 = v125;
        uint64_t v139 = (char *)v124;
        uint64_t v140 = v125;
        uint64_t v141 = v84;
        LOBYTE(v142) = v89;
        LODWORD(v122) = _s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)&v146, (uint64_t)&v137);
        sub_24EEF7780(v95, v96, v97, v98, v84, v89);
        sub_24EEF7780(v92, v77, v93, v94, v128, v129);
        if (v122)
        {
          uint64_t v99 = v134;
          if (v130 == v121)
          {
            uint64_t v100 = v133;
            uint64_t v101 = v132;
            char v49 = sub_24EF86A70();
            uint64_t v102 = *(void (**)(char *, uint64_t))(v135 + 8);
            v102(v101, v99);
            v102(v100, v99);
LABEL_17:
            sub_24EF29CB8((uint64_t)v136);
            return v49 & 1;
          }
          uint64_t v113 = *(void (**)(char *, uint64_t))(v135 + 8);
          v113(v132, v134);
          v113(v133, v99);
        }
        else
        {
          uint64_t v111 = v134;
          uint64_t v112 = *(void (**)(char *, uint64_t))(v135 + 8);
          v112(v132, v134);
          v112(v133, v111);
        }
LABEL_51:
        sub_24EF29CB8((uint64_t)v136);
        goto LABEL_38;
      }
      (*(void (**)(char *, uint64_t))(v135 + 8))(&v14[v82], v134);
      sub_24EEF7780(v78, v77, v131, v79, v80, v81);
LABEL_36:
      uint64_t v34 = v136;
LABEL_37:
      sub_24EF2B718((uint64_t)v34);
LABEL_38:
      char v49 = 0;
      return v49 & 1;
    case 6u:
      sub_24EF25E2C((uint64_t)v34, (uint64_t)v11);
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_37;
      }
      char v49 = sub_24EF065E0(*v11, *v32);
      sub_24EF29CB8((uint64_t)v34);
      return v49 & 1;
    case 7u:
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_37;
      }
      goto LABEL_29;
    case 8u:
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_37;
      }
      goto LABEL_29;
    case 9u:
      if (swift_getEnumCaseMultiPayload() != 9) {
        goto LABEL_37;
      }
LABEL_29:
      uint64_t v103 = (uint64_t)v34;
      goto LABEL_30;
    default:
      sub_24EF25E2C((uint64_t)v34, (uint64_t)v28);
      uint64_t v35 = *(void *)v28;
      uint64_t v36 = *((void *)v28 + 2);
      unsigned __int8 v37 = v28[24];
      if (swift_getEnumCaseMultiPayload())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
      uint64_t v105 = (uint64_t)v34;
      int v106 = v28[8];
      int v107 = v32[8];
      uint64_t v108 = *((void *)v32 + 2);
      char v109 = v32[24];
      if ((sub_24EF05194(v35, *(void *)v32) & 1) != 0
        && ((v106 ^ v107) & 1) == 0
        && (sub_24EF05194(v36, v108) & 1) != 0)
      {
        char v110 = sub_24EF065E0(v37, v109);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v110)
        {
          uint64_t v103 = v105;
LABEL_30:
          sub_24EF29CB8(v103);
          char v49 = 1;
          return v49 & 1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_24EF29CB8(v105);
      goto LABEL_38;
  }
}

uint64_t sub_24EF29040()
{
  return sub_24EF29088(&qword_269986068, (void (*)(uint64_t))type metadata accessor for FilterAction);
}

uint64_t sub_24EF29088(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for FilterAction(char *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        a1[8] = *(unsigned char *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        a1[24] = *(unsigned char *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v9 = *(void *)a2;
        uint64_t v10 = *(void *)(a2 + 8);
        uint64_t v11 = *(void *)(a2 + 16);
        uint64_t v12 = *(void *)(a2 + 24);
        uint64_t v13 = *(void *)(a2 + 32);
        unsigned __int8 v14 = *(unsigned char *)(a2 + 40);
        sub_24EEF7798(v9, v10, v11, v12, v13, v14);
        *(void *)a1 = v9;
        *((void *)a1 + 1) = v10;
        *((void *)a1 + 2) = v11;
        *((void *)a1 + 3) = v12;
        *((void *)a1 + 4) = v13;
        a1[40] = v14;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        a1[8] = *(unsigned char *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        a1[24] = *(unsigned char *)(a2 + 24);
        uint64_t v15 = *(void *)(a2 + 40);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        *((void *)a1 + 5) = v15;
        uint64_t v16 = *(void *)(a2 + 56);
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        *((void *)a1 + 7) = v16;
        uint64_t v17 = *(void *)(a2 + 72);
        *((void *)a1 + 8) = *(void *)(a2 + 64);
        *((void *)a1 + 9) = v17;
        uint64_t v32 = *(void *)(a2 + 88);
        *((void *)a1 + 10) = *(void *)(a2 + 80);
        *((void *)a1 + 11) = v32;
        *((void *)a1 + 12) = *(void *)(a2 + 96);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v18 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v18;
        uint64_t v19 = *(void *)(a2 + 24);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = v19;
        uint64_t v20 = *(void *)(a2 + 40);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        *((void *)a1 + 5) = v20;
        uint64_t v21 = *(void *)(a2 + 56);
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        *((void *)a1 + 7) = v21;
        *((void *)a1 + 8) = *(void *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v22 = *(void *)a2;
        uint64_t v23 = *(void *)(a2 + 8);
        uint64_t v24 = *(void *)(a2 + 16);
        uint64_t v25 = *(void *)(a2 + 24);
        uint64_t v26 = *(void *)(a2 + 32);
        unsigned __int8 v27 = *(unsigned char *)(a2 + 40);
        sub_24EEF7798(*(void *)a2, v23, v24, v25, v26, v27);
        *(void *)a1 = v22;
        *((void *)a1 + 1) = v23;
        *((void *)a1 + 2) = v24;
        *((void *)a1 + 3) = v25;
        *((void *)a1 + 4) = v26;
        a1[40] = v27;
        a1[41] = *(unsigned char *)(a2 + 41);
        uint64_t v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269985C68) + 64);
        uint64_t v29 = &a1[v28];
        uint64_t v30 = a2 + v28;
        uint64_t v31 = sub_24EF86A90();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for FilterAction(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 1:
      uint64_t v3 = *(void *)a1;
      uint64_t v4 = *(void *)(a1 + 8);
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 32);
      unsigned __int8 v8 = *(unsigned char *)(a1 + 40);
      return sub_24EEF7780(v3, v4, v5, v6, v7, v8);
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_8:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 5:
      sub_24EEF7780(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
      uint64_t v9 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269985C68) + 64);
      uint64_t v10 = sub_24EF86A90();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      uint64_t result = v11(v9, v10);
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for FilterAction(char *a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(void *)a1 = *(void *)a2;
      a1[8] = *(unsigned char *)(a2 + 8);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      a1[24] = *(unsigned char *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 1u:
      uint64_t v6 = *(void *)a2;
      uint64_t v7 = *(void *)(a2 + 8);
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      uint64_t v10 = *(void *)(a2 + 32);
      unsigned __int8 v11 = *(unsigned char *)(a2 + 40);
      sub_24EEF7798(v6, v7, v8, v9, v10, v11);
      *(void *)a1 = v6;
      *((void *)a1 + 1) = v7;
      *((void *)a1 + 2) = v8;
      *((void *)a1 + 3) = v9;
      *((void *)a1 + 4) = v10;
      a1[40] = v11;
      goto LABEL_8;
    case 3u:
      *(void *)a1 = *(void *)a2;
      a1[8] = *(unsigned char *)(a2 + 8);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      a1[24] = *(unsigned char *)(a2 + 24);
      uint64_t v12 = *(void *)(a2 + 40);
      *((void *)a1 + 4) = *(void *)(a2 + 32);
      *((void *)a1 + 5) = v12;
      uint64_t v13 = *(void *)(a2 + 56);
      *((void *)a1 + 6) = *(void *)(a2 + 48);
      *((void *)a1 + 7) = v13;
      uint64_t v14 = *(void *)(a2 + 72);
      *((void *)a1 + 8) = *(void *)(a2 + 64);
      *((void *)a1 + 9) = v14;
      uint64_t v30 = *(void *)(a2 + 88);
      *((void *)a1 + 10) = *(void *)(a2 + 80);
      *((void *)a1 + 11) = v30;
      *((void *)a1 + 12) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 4u:
      uint64_t v15 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v15;
      uint64_t v16 = *(void *)(a2 + 24);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      *((void *)a1 + 3) = v16;
      uint64_t v17 = *(void *)(a2 + 40);
      *((void *)a1 + 4) = *(void *)(a2 + 32);
      *((void *)a1 + 5) = v17;
      uint64_t v18 = *(void *)(a2 + 56);
      *((void *)a1 + 6) = *(void *)(a2 + 48);
      *((void *)a1 + 7) = v18;
      *((void *)a1 + 8) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 5u:
      uint64_t v19 = *(void *)a2;
      uint64_t v20 = *(void *)(a2 + 8);
      uint64_t v21 = *(void *)(a2 + 16);
      uint64_t v22 = *(void *)(a2 + 24);
      uint64_t v23 = *(void *)(a2 + 32);
      unsigned __int8 v24 = *(unsigned char *)(a2 + 40);
      sub_24EEF7798(*(void *)a2, v20, v21, v22, v23, v24);
      *(void *)a1 = v19;
      *((void *)a1 + 1) = v20;
      *((void *)a1 + 2) = v21;
      *((void *)a1 + 3) = v22;
      *((void *)a1 + 4) = v23;
      a1[40] = v24;
      a1[41] = *(unsigned char *)(a2 + 41);
      uint64_t v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269985C68) + 64);
      uint64_t v26 = &a1[v25];
      uint64_t v27 = a2 + v25;
      uint64_t v28 = sub_24EF86A90();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for FilterAction(char *a1, uint64_t a2, uint64_t a3)
{
  if (a1 != (char *)a2)
  {
    sub_24EF29CB8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        a1[8] = *(unsigned char *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        a1[24] = *(unsigned char *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 1u:
        uint64_t v6 = *(void *)a2;
        uint64_t v7 = *(void *)(a2 + 8);
        uint64_t v8 = *(void *)(a2 + 16);
        uint64_t v9 = *(void *)(a2 + 24);
        uint64_t v10 = *(void *)(a2 + 32);
        unsigned __int8 v11 = *(unsigned char *)(a2 + 40);
        sub_24EEF7798(v6, v7, v8, v9, v10, v11);
        *(void *)a1 = v6;
        *((void *)a1 + 1) = v7;
        *((void *)a1 + 2) = v8;
        *((void *)a1 + 3) = v9;
        *((void *)a1 + 4) = v10;
        a1[40] = v11;
        goto LABEL_9;
      case 3u:
        *(void *)a1 = *(void *)a2;
        a1[8] = *(unsigned char *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        a1[24] = *(unsigned char *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        *((void *)a1 + 7) = *(void *)(a2 + 56);
        *((void *)a1 + 8) = *(void *)(a2 + 64);
        *((void *)a1 + 9) = *(void *)(a2 + 72);
        *((void *)a1 + 10) = *(void *)(a2 + 80);
        *((void *)a1 + 11) = *(void *)(a2 + 88);
        *((void *)a1 + 12) = *(void *)(a2 + 96);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        *((void *)a1 + 7) = *(void *)(a2 + 56);
        *((void *)a1 + 8) = *(void *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 5u:
        uint64_t v12 = *(void *)a2;
        uint64_t v13 = *(void *)(a2 + 8);
        uint64_t v14 = *(void *)(a2 + 16);
        uint64_t v15 = *(void *)(a2 + 24);
        uint64_t v16 = *(void *)(a2 + 32);
        unsigned __int8 v17 = *(unsigned char *)(a2 + 40);
        sub_24EEF7798(*(void *)a2, v13, v14, v15, v16, v17);
        *(void *)a1 = v12;
        *((void *)a1 + 1) = v13;
        *((void *)a1 + 2) = v14;
        *((void *)a1 + 3) = v15;
        *((void *)a1 + 4) = v16;
        a1[40] = v17;
        a1[41] = *(unsigned char *)(a2 + 41);
        uint64_t v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269985C68) + 64);
        uint64_t v19 = &a1[v18];
        uint64_t v20 = a2 + v18;
        uint64_t v21 = sub_24EF86A90();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_24EF29CB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FilterAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for FilterAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
    *((unsigned char *)a1 + 41) = *((unsigned char *)a2 + 41);
    uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269985C68) + 64);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24EF86A90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for FilterAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EF29CB8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
      *((unsigned char *)a1 + 41) = *((unsigned char *)a2 + 41);
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269985C68) + 64);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_24EF86A90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FilterAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for FilterAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24EF29F48()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24EF29F58()
{
  uint64_t v3 = &unk_24EF88B60;
  uint64_t v4 = &unk_24EF88B78;
  uint64_t v5 = &unk_24EF88B90;
  long long v6 = &unk_24EF88BA8;
  uint64_t v7 = &unk_24EF88BC0;
  uint64_t result = sub_24EF86A90();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    uint64_t v8 = &v2;
    uint64_t v9 = &unk_24EF88BF0;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ArtworkVariant(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FilterAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF2A194);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterAction.CodingKeys()
{
  return &type metadata for FilterAction.CodingKeys;
}

uint64_t sub_24EF2A1D8()
{
  return 0;
}

ValueMetadata *type metadata accessor for FilterAction.ApplyCodingKeys()
{
  return &type metadata for FilterAction.ApplyCodingKeys;
}

ValueMetadata *type metadata accessor for FilterAction.DeselectedFilterItemCodingKeys()
{
  return &type metadata for FilterAction.DeselectedFilterItemCodingKeys;
}

ValueMetadata *type metadata accessor for FilterAction.DismissCodingKeys()
{
  return &type metadata for FilterAction.DismissCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FilterAction.LoadedFilterResultCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF2A2DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterAction.LoadedFilterResultCodingKeys()
{
  return &type metadata for FilterAction.LoadedFilterResultCodingKeys;
}

ValueMetadata *type metadata accessor for FilterAction.LoadedOptionsCodingKeys()
{
  return &type metadata for FilterAction.LoadedOptionsCodingKeys;
}

ValueMetadata *type metadata accessor for FilterAction.ResetFilterCodingKeys()
{
  return &type metadata for FilterAction.ResetFilterCodingKeys;
}

ValueMetadata *type metadata accessor for FilterAction.RestoreInitialFilterCodingKeys()
{
  return &type metadata for FilterAction.RestoreInitialFilterCodingKeys;
}

uint64_t getEnumTagSinglePayload for FilterAction.SelectedFilterItemCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FilterAction.SelectedFilterItemCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF2A4A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterAction.SelectedFilterItemCodingKeys()
{
  return &type metadata for FilterAction.SelectedFilterItemCodingKeys;
}

uint64_t _s16FitnessFiltering12FilterActionO15ApplyCodingKeysOwet_0(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s16FitnessFiltering12FilterActionO15ApplyCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EF2A5C4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterAction.SelectedSortModeCodingKeys()
{
  return &type metadata for FilterAction.SelectedSortModeCodingKeys;
}

ValueMetadata *type metadata accessor for FilterAction.ViewAppearedCodingKeys()
{
  return &type metadata for FilterAction.ViewAppearedCodingKeys;
}

unint64_t sub_24EF2A610()
{
  unint64_t result = qword_269986080;
  if (!qword_269986080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986080);
  }
  return result;
}

unint64_t sub_24EF2A668()
{
  unint64_t result = qword_269986088;
  if (!qword_269986088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986088);
  }
  return result;
}

unint64_t sub_24EF2A6C0()
{
  unint64_t result = qword_269986090;
  if (!qword_269986090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986090);
  }
  return result;
}

unint64_t sub_24EF2A718()
{
  unint64_t result = qword_269986098;
  if (!qword_269986098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986098);
  }
  return result;
}

unint64_t sub_24EF2A770()
{
  unint64_t result = qword_2699860A0;
  if (!qword_2699860A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699860A0);
  }
  return result;
}

unint64_t sub_24EF2A7C8()
{
  unint64_t result = qword_2699860A8;
  if (!qword_2699860A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699860A8);
  }
  return result;
}

unint64_t sub_24EF2A820()
{
  unint64_t result = qword_2699860B0;
  if (!qword_2699860B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699860B0);
  }
  return result;
}

unint64_t sub_24EF2A878()
{
  unint64_t result = qword_2699860B8;
  if (!qword_2699860B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699860B8);
  }
  return result;
}

unint64_t sub_24EF2A8D0()
{
  unint64_t result = qword_2699860C0;
  if (!qword_2699860C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699860C0);
  }
  return result;
}

unint64_t sub_24EF2A928()
{
  unint64_t result = qword_2699860C8;
  if (!qword_2699860C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699860C8);
  }
  return result;
}

unint64_t sub_24EF2A980()
{
  unint64_t result = qword_2699860D0;
  if (!qword_2699860D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699860D0);
  }
  return result;
}

unint64_t sub_24EF2A9D8()
{
  unint64_t result = qword_2699860D8;
  if (!qword_2699860D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699860D8);
  }
  return result;
}

unint64_t sub_24EF2AA30()
{
  unint64_t result = qword_2699860E0;
  if (!qword_2699860E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699860E0);
  }
  return result;
}

unint64_t sub_24EF2AA88()
{
  unint64_t result = qword_2699860E8;
  if (!qword_2699860E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699860E8);
  }
  return result;
}

unint64_t sub_24EF2AAE0()
{
  unint64_t result = qword_2699860F0;
  if (!qword_2699860F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699860F0);
  }
  return result;
}

unint64_t sub_24EF2AB38()
{
  unint64_t result = qword_2699860F8;
  if (!qword_2699860F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699860F8);
  }
  return result;
}

unint64_t sub_24EF2AB90()
{
  unint64_t result = qword_269986100;
  if (!qword_269986100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986100);
  }
  return result;
}

unint64_t sub_24EF2ABE8()
{
  unint64_t result = qword_269986108;
  if (!qword_269986108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986108);
  }
  return result;
}

unint64_t sub_24EF2AC40()
{
  unint64_t result = qword_269986110;
  if (!qword_269986110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986110);
  }
  return result;
}

unint64_t sub_24EF2AC98()
{
  unint64_t result = qword_269986118;
  if (!qword_269986118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986118);
  }
  return result;
}

unint64_t sub_24EF2ACF0()
{
  unint64_t result = qword_269986120;
  if (!qword_269986120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986120);
  }
  return result;
}

unint64_t sub_24EF2AD48()
{
  unint64_t result = qword_269986128;
  if (!qword_269986128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986128);
  }
  return result;
}

unint64_t sub_24EF2ADA0()
{
  unint64_t result = qword_269986130;
  if (!qword_269986130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986130);
  }
  return result;
}

unint64_t sub_24EF2ADF8()
{
  unint64_t result = qword_269986138;
  if (!qword_269986138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986138);
  }
  return result;
}

unint64_t sub_24EF2AE50()
{
  unint64_t result = qword_269986140;
  if (!qword_269986140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986140);
  }
  return result;
}

unint64_t sub_24EF2AEA8()
{
  unint64_t result = qword_269986148;
  if (!qword_269986148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986148);
  }
  return result;
}

unint64_t sub_24EF2AF00()
{
  unint64_t result = qword_269986150;
  if (!qword_269986150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986150);
  }
  return result;
}

unint64_t sub_24EF2AF58()
{
  unint64_t result = qword_269986158;
  if (!qword_269986158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986158);
  }
  return result;
}

unint64_t sub_24EF2AFB0()
{
  unint64_t result = qword_269986160;
  if (!qword_269986160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986160);
  }
  return result;
}

unint64_t sub_24EF2B008()
{
  unint64_t result = qword_269986168;
  if (!qword_269986168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986168);
  }
  return result;
}

uint64_t sub_24EF2B05C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x796C707061 && a2 == 0xE500000000000000;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024EF90C20 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7373696D736964 && a2 == 0xE700000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EF90C40 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x704F646564616F6CLL && a2 == 0xED0000736E6F6974 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C69467465736572 && a2 == 0xEB00000000726574 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024EF90C60 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EF90C80 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EF90CA0 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_24EF2B47C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000024EF90CC0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_24EF2B504(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265746C6966 && a2 == 0xE600000000000000;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65527265746C6966 && a2 == 0xEC000000746C7573)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EF2B608(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 12895 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EF2B718(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986170);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BodyFocus.filterItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24EF2B7A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t Duration.filterItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 40) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24EF2B7E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 40) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t Equipment.filterItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF2B858(2, a1);
}

uint64_t sub_24EF2B810@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF2B87C(2, a1);
}

uint64_t Modality.filterItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 32);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 40) = 3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24EF2B834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 32);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 40) = 3;
  return swift_bridgeObjectRetain();
}

uint64_t MusicGenre.filterItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF2B858(4, a1);
}

uint64_t sub_24EF2B858@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 32);
  *(void *)a2 = *(void *)(v2 + 24);
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 40) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24EF2B874@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF2B87C(4, a1);
}

uint64_t sub_24EF2B87C@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 32);
  *(void *)a2 = *(void *)(v2 + 24);
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 40) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t SkillLevel.filterItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF2B858(5, a1);
}

uint64_t sub_24EF2B89C@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF2B87C(5, a1);
}

uint64_t Theme.filterItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 40) = 6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24EF2B8C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 40) = 6;
  return swift_bridgeObjectRetain();
}

uint64_t Trainer.filterItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF2B858(7, a1);
}

uint64_t sub_24EF2B8E4@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF2B87C(7, a1);
}

uint64_t dispatch thunk of FilterItemProviding.filterItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FilterItem.identifier.getter()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 40);
  if ((v2 - 2) < 6 || v2 == 0)
  {
    sub_24EEF7798(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v2);
    return v1;
  }
  if (v2 == 1)
  {
    swift_bridgeObjectRetain();
    return v1;
  }
  uint64_t result = 0x7053747369747261;
  switch(*(void *)v0)
  {
    case 1u:
      uint64_t result = 0x6565776F6C6C6168;
      break;
    case 2u:
      uint64_t result = 0x796164696C6F68;
      break;
    case 3u:
      uint64_t result = 0x77654E72616E756CLL;
      break;
    case 4u:
      uint64_t result = 0x7261655977656ELL;
      break;
    case 5u:
      uint64_t result = 0x6564697270;
      break;
    case 6u:
      uint64_t result = 0x576D6172676F7270;
      break;
    case 7u:
      uint64_t result = 0x6967736B6E616874;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF2BA98(char a1)
{
  uint64_t result = 0x75636F4679646F62;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 2:
      uint64_t result = 0x6E656D7069757165;
      break;
    case 3:
      uint64_t result = 0x7974696C61646F6DLL;
      break;
    case 4:
      uint64_t result = 0x6E6547636973756DLL;
      break;
    case 5:
      uint64_t result = 0x76654C6C6C696B73;
      break;
    case 6:
      uint64_t result = 0x656D656874;
      break;
    case 7:
      uint64_t result = 0x72656E69617274;
      break;
    case 8:
      uint64_t result = 0x7469617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF2BBC0()
{
  return 0x696669746E656469;
}

uint64_t sub_24EF2BBE0(uint64_t a1)
{
  unint64_t v2 = sub_24EF2EAB8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF2BC1C(uint64_t a1)
{
  unint64_t v2 = sub_24EF2EAB8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF2BC58()
{
  return sub_24EF2BA98(*v0);
}

uint64_t sub_24EF2BC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF2FDE0(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EF2BC88(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_24EF2BC94(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E71C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF2BCD0(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E71C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF2BD0C(uint64_t a1)
{
  unint64_t v2 = sub_24EF2EA10();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF2BD48(uint64_t a1)
{
  unint64_t v2 = sub_24EF2EA10();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF2BD84(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E9BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF2BDC0(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E9BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF2BDFC(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E968();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF2BE38(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E968();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF2BE74(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E914();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF2BEB0(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E914();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF2BEEC(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E8C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF2BF28(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E8C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF2BF64(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E86C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF2BFA0(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E86C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF2BFDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24EF87A60();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24EF2C080(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E818();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF2C0BC(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E818();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF2C0F8(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E770();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF2C134(uint64_t a1)
{
  unint64_t v2 = sub_24EF2E770();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FilterItem.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986178);
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v57 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986180);
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v54 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986188);
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986190);
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v48 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986198);
  uint64_t v46 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v45 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699861A0);
  uint64_t v43 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v42 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699861A8);
  uint64_t v40 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v38 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699861B0);
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699861B8);
  uint64_t v36 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unsigned __int8 v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699861C0);
  uint64_t v63 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *v1;
  uint64_t v60 = v1[1];
  uint64_t v61 = v20;
  uint64_t v21 = v1[2];
  uint64_t v22 = v1[3];
  uint64_t v23 = v1[4];
  uint64_t v24 = *((unsigned __int8 *)v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF2E71C();
  sub_24EF87AF0();
  switch(v24)
  {
    case 1:
      LOBYTE(v64) = 1;
      sub_24EF2EA10();
      uint64_t v27 = v62;
      sub_24EF879A0();
      uint64_t v64 = v61;
      uint64_t v65 = v60;
      uint64_t v66 = v21;
      uint64_t v67 = v22;
      uint64_t v68 = v23;
      sub_24EF2EA64();
      uint64_t v28 = v39;
      sub_24EF87A20();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v19, v27);
    case 2:
      LOBYTE(v64) = 2;
      sub_24EF2E9BC();
      uint64_t v29 = v38;
      uint64_t v30 = v62;
      uint64_t v31 = v19;
      sub_24EF879A0();
      uint64_t v32 = v41;
      sub_24EF879D0();
      uint64_t v33 = v40;
      goto LABEL_12;
    case 3:
      LOBYTE(v64) = 3;
      sub_24EF2E968();
      uint64_t v29 = v42;
      uint64_t v30 = v62;
      uint64_t v31 = v19;
      sub_24EF879A0();
      uint64_t v32 = v44;
      sub_24EF879D0();
      uint64_t v33 = v43;
      goto LABEL_12;
    case 4:
      LOBYTE(v64) = 4;
      sub_24EF2E914();
      uint64_t v29 = v45;
      uint64_t v30 = v62;
      uint64_t v31 = v19;
      sub_24EF879A0();
      uint64_t v32 = v47;
      sub_24EF879D0();
      uint64_t v34 = &v69;
      goto LABEL_8;
    case 5:
      LOBYTE(v64) = 5;
      sub_24EF2E8C0();
      uint64_t v29 = v48;
      uint64_t v30 = v62;
      uint64_t v31 = v19;
      sub_24EF879A0();
      uint64_t v32 = v50;
      sub_24EF879D0();
      uint64_t v34 = &v70;
LABEL_8:
      uint64_t v33 = *(v34 - 32);
      goto LABEL_12;
    case 6:
      LOBYTE(v64) = 6;
      sub_24EF2E86C();
      uint64_t v29 = v51;
      uint64_t v30 = v62;
      uint64_t v31 = v19;
      sub_24EF879A0();
      uint64_t v32 = v53;
      sub_24EF879D0();
      uint64_t v33 = v52;
      goto LABEL_12;
    case 7:
      LOBYTE(v64) = 7;
      sub_24EF2E818();
      uint64_t v29 = v54;
      uint64_t v30 = v62;
      uint64_t v31 = v19;
      sub_24EF879A0();
      uint64_t v32 = v56;
      sub_24EF879D0();
      uint64_t v33 = v55;
      goto LABEL_12;
    case 8:
      LOBYTE(v64) = 8;
      sub_24EF2E770();
      uint64_t v29 = v57;
      uint64_t v30 = v62;
      uint64_t v31 = v19;
      sub_24EF879A0();
      LOBYTE(v64) = v61;
      sub_24EF2E7C4();
      uint64_t v32 = v59;
      sub_24EF87A20();
      uint64_t v33 = v58;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v32);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v31, v30);
      break;
    default:
      LOBYTE(v64) = 0;
      sub_24EF2EAB8();
      uint64_t v25 = v62;
      sub_24EF879A0();
      sub_24EF879D0();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v15);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v19, v25);
      break;
  }
  return result;
}

uint64_t FilterItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986228);
  uint64_t v83 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v98 = (uint64_t)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986230);
  uint64_t v82 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v97 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986238);
  uint64_t v81 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v92 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986240);
  uint64_t v80 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v96 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986248);
  uint64_t v79 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v95 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986250);
  uint64_t v78 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v94 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986258);
  uint64_t v77 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v93 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986260);
  uint64_t v76 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986268);
  uint64_t v75 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986270);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  uint64_t v100 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_24EF2E71C();
  uint64_t v20 = v105;
  sub_24EF87AE0();
  if (!v20)
  {
    uint64_t v72 = v14;
    uint64_t v71 = v12;
    uint64_t v21 = v96;
    uint64_t v22 = v97;
    uint64_t v73 = 0;
    uint64_t v23 = v98;
    uint64_t v24 = v99;
    uint64_t v74 = v16;
    uint64_t v105 = v15;
    uint64_t v25 = sub_24EF87980();
    if (*(void *)(v25 + 16) == 1)
    {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 32);
      uint64_t v27 = v24;
      uint64_t v70 = v26;
      switch(v26)
      {
        case 1:
          uint64_t v98 = v25;
          LOBYTE(v101) = 1;
          sub_24EF2EA10();
          uint64_t v29 = v105;
          uint64_t v38 = v73;
          sub_24EF878E0();
          if (v38) {
            goto LABEL_22;
          }
          sub_24EF2EB60();
          uint64_t v50 = v84;
          sub_24EF87970();
          uint64_t v51 = v74;
          (*(void (**)(char *, uint64_t))(v76 + 8))(v11, v50);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v51 + 8))(v18, v29);
          uint64_t v59 = v102;
          uint64_t v98 = v101;
          long long v65 = v103;
          uint64_t v66 = v104;
          goto LABEL_32;
        case 2:
          LOBYTE(v101) = 2;
          sub_24EF2E9BC();
          uint64_t v39 = v93;
          uint64_t v40 = v105;
          uint64_t v41 = v73;
          sub_24EF878E0();
          if (v41)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v74 + 8))(v18, v40);
            return __swift_destroy_boxed_opaque_existential_1((uint64_t)v100);
          }
          uint64_t v52 = v85;
          uint64_t v98 = sub_24EF87920();
          uint64_t v59 = v67;
          (*(void (**)(char *, uint64_t))(v77 + 8))(v39, v52);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v74 + 8))(v18, v105);
          goto LABEL_30;
        case 3:
          LOBYTE(v101) = 3;
          sub_24EF2E968();
          uint64_t v22 = v94;
          uint64_t v29 = v105;
          uint64_t v42 = v73;
          sub_24EF878E0();
          if (v42) {
            goto LABEL_22;
          }
          uint64_t v43 = v86;
          uint64_t v98 = sub_24EF87920();
          uint64_t v32 = v74;
          uint64_t v59 = v60;
          uint64_t v61 = &v106;
          goto LABEL_28;
        case 4:
          LOBYTE(v101) = 4;
          sub_24EF2E914();
          uint64_t v22 = v95;
          uint64_t v29 = v105;
          uint64_t v44 = v73;
          sub_24EF878E0();
          if (v44) {
            goto LABEL_22;
          }
          uint64_t v43 = v87;
          uint64_t v98 = sub_24EF87920();
          uint64_t v32 = v74;
          uint64_t v59 = v62;
          uint64_t v61 = &v107;
          goto LABEL_28;
        case 5:
          LOBYTE(v101) = 5;
          sub_24EF2E8C0();
          uint64_t v22 = v21;
          uint64_t v29 = v105;
          uint64_t v45 = v73;
          sub_24EF878E0();
          if (v45) {
            goto LABEL_22;
          }
          uint64_t v43 = v88;
          uint64_t v98 = sub_24EF87920();
          uint64_t v32 = v74;
          uint64_t v59 = v63;
          uint64_t v61 = &v108;
          goto LABEL_28;
        case 6:
          LOBYTE(v101) = 6;
          sub_24EF2E86C();
          uint64_t v46 = v92;
          uint64_t v29 = v105;
          uint64_t v47 = v73;
          sub_24EF878E0();
          if (v47) {
            goto LABEL_22;
          }
          uint64_t v53 = v89;
          uint64_t v98 = sub_24EF87920();
          uint64_t v54 = v46;
          uint64_t v32 = v74;
          uint64_t v59 = v68;
          (*(void (**)(char *, uint64_t))(v81 + 8))(v54, v53);
          goto LABEL_29;
        case 7:
          LOBYTE(v101) = 7;
          sub_24EF2E818();
          uint64_t v29 = v105;
          uint64_t v48 = v73;
          sub_24EF878E0();
          if (v48) {
            goto LABEL_22;
          }
          uint64_t v43 = v90;
          uint64_t v98 = sub_24EF87920();
          uint64_t v32 = v74;
          uint64_t v59 = v64;
          uint64_t v61 = &v109;
LABEL_28:
          (*(void (**)(char *, uint64_t))(*(v61 - 32) + 8))(v22, v43);
          goto LABEL_29;
        case 8:
          LOBYTE(v101) = 8;
          sub_24EF2E770();
          uint64_t v29 = v105;
          uint64_t v49 = v73;
          sub_24EF878E0();
          if (v49) {
            goto LABEL_22;
          }
          sub_24EF2EB0C();
          uint64_t v55 = v91;
          sub_24EF87970();
          uint64_t v56 = v74;
          (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v23, v55);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v29);
          uint64_t v59 = 0;
          uint64_t v66 = 0;
          uint64_t v98 = v101;
          goto LABEL_31;
        default:
          LOBYTE(v101) = 0;
          sub_24EF2EAB8();
          uint64_t v28 = v72;
          uint64_t v29 = v105;
          uint64_t v30 = v73;
          sub_24EF878E0();
          if (v30)
          {
LABEL_22:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v74 + 8))(v18, v29);
          }
          else
          {
            uint64_t v31 = v71;
            uint64_t v98 = sub_24EF87920();
            uint64_t v32 = v74;
            uint64_t v59 = v58;
            (*(void (**)(char *, uint64_t))(v75 + 8))(v28, v31);
LABEL_29:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v29);
LABEL_30:
            uint64_t v66 = 0;
LABEL_31:
            long long v65 = 0uLL;
LABEL_32:
            *(void *)uint64_t v27 = v98;
            *(void *)(v27 + 8) = v59;
            *(_OWORD *)(v27 + 16) = v65;
            *(void *)(v27 + 32) = v66;
            *(unsigned char *)(v27 + 40) = v70;
          }
          break;
      }
    }
    else
    {
      uint64_t v33 = sub_24EF87880();
      swift_allocError();
      uint64_t v35 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986030);
      *uint64_t v35 = &type metadata for FilterItem;
      uint64_t v36 = v18;
      uint64_t v37 = v105;
      sub_24EF878F0();
      sub_24EF87870();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, *MEMORY[0x263F8DCB0], v33);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v36, v37);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v100);
}

uint64_t sub_24EF2DA4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FilterItem.init(from:)(a1, a2);
}

uint64_t sub_24EF2DA64(void *a1)
{
  return FilterItem.encode(to:)(a1);
}

uint64_t FilterItem.hash(into:)()
{
  switch(*(unsigned char *)(v0 + 40))
  {
    case 1:
      sub_24EF87AA0();
      uint64_t result = Duration.hash(into:)();
      break;
    case 8:
      sub_24EF87AA0();
      sub_24EF87670();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      sub_24EF87AA0();
      uint64_t result = sub_24EF87670();
      break;
  }
  return result;
}

uint64_t FilterItem.hashValue.getter()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF2DD68()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF2DDC8()
{
  return sub_24EF87AD0();
}

uint64_t _s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 40);
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(uint64_t *)(a2 + 24);
  uint64_t v11 = *(uint64_t *)(a2 + 32);
  int v12 = *(unsigned __int8 *)(a2 + 40);
  switch(v6)
  {
    case 1u:
      if (v12 != 1) {
        goto LABEL_34;
      }
      double v20 = *(double *)(a1 + 16);
      double v21 = *(double *)(a1 + 24);
      double v22 = *(double *)(a1 + 32);
      double v23 = *(double *)(a2 + 16);
      if (v3 == v7 && v2 == v8)
      {
        char v24 = 1;
        uint64_t v25 = *(void *)(a2 + 16);
        uint64_t v26 = *(void *)(a1 + 16);
        uint64_t v27 = *(void *)(a1 + 24);
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v29 = *(void *)a1;
        sub_24EEF7798(*(void *)a1, v2, v10, v9, v11, 1u);
        sub_24EEF7798(v29, v28, v26, v27, v5, 1u);
        sub_24EEF7780(v29, v28, v26, v27, v5, 1u);
        sub_24EEF7780(v29, v28, v25, v9, v11, 1u);
      }
      else
      {
        uint64_t v70 = *(void *)(a1 + 16);
        uint64_t v71 = *(void *)(a1 + 24);
        uint64_t v72 = *(void *)a2;
        uint64_t v73 = *(void *)(a1 + 32);
        uint64_t v74 = *(void *)(a1 + 8);
        uint64_t v75 = *(void *)a1;
        char v88 = sub_24EF87A60();
        sub_24EEF7798(v72, v8, v10, v9, v11, 1u);
        sub_24EEF7798(v75, v74, v70, v71, v73, 1u);
        sub_24EEF7780(v75, v74, v70, v71, v73, 1u);
        uint64_t v76 = v8;
        char v24 = 1;
        sub_24EEF7780(v72, v76, v10, v9, v11, 1u);
        if ((v88 & 1) == 0) {
          goto LABEL_36;
        }
      }
      if (v20 == v23 && v21 == *(double *)&v9 && v22 == *(double *)&v11) {
        return v24 & 1;
      }
      goto LABEL_36;
    case 2u:
      if (v12 != 2) {
        goto LABEL_34;
      }
      uint64_t v30 = *(void *)a2;
      if (v3 == v7 && v2 == v8)
      {
        uint64_t v31 = *(void *)(a1 + 16);
        uint64_t v32 = *(void *)(a1 + 24);
        uint64_t v33 = *(void *)(a1 + 32);
        char v86 = 1;
        uint64_t v34 = *(void *)(a1 + 8);
        uint64_t v35 = *(void *)a1;
      }
      else
      {
        uint64_t v31 = *(void *)(a1 + 16);
        uint64_t v32 = *(void *)(a1 + 24);
        uint64_t v33 = *(void *)(a1 + 32);
        uint64_t v34 = *(void *)(a1 + 8);
        uint64_t v35 = *(void *)a1;
        char v86 = sub_24EF87A60();
      }
      sub_24EEF7798(v30, v8, v10, v9, v11, 2u);
      sub_24EEF7798(v35, v34, v31, v32, v33, 2u);
      sub_24EEF7780(v35, v34, v31, v32, v33, 2u);
      uint64_t v79 = v30;
      uint64_t v80 = v8;
      uint64_t v81 = v10;
      uint64_t v82 = v9;
      uint64_t v83 = v11;
      unsigned __int8 v84 = 2;
      goto LABEL_62;
    case 3u:
      if (v12 != 3) {
        goto LABEL_34;
      }
      uint64_t v36 = *(void *)a2;
      if (v3 == v7 && v2 == v8)
      {
        uint64_t v37 = *(void *)(a1 + 16);
        uint64_t v38 = *(void *)(a1 + 24);
        uint64_t v39 = *(void *)(a1 + 32);
        char v86 = 1;
        uint64_t v40 = *(void *)(a1 + 8);
        uint64_t v41 = *(void *)a1;
      }
      else
      {
        uint64_t v37 = *(void *)(a1 + 16);
        uint64_t v38 = *(void *)(a1 + 24);
        uint64_t v39 = *(void *)(a1 + 32);
        uint64_t v40 = *(void *)(a1 + 8);
        uint64_t v41 = *(void *)a1;
        char v86 = sub_24EF87A60();
      }
      sub_24EEF7798(v36, v8, v10, v9, v11, 3u);
      sub_24EEF7798(v41, v40, v37, v38, v39, 3u);
      sub_24EEF7780(v41, v40, v37, v38, v39, 3u);
      uint64_t v79 = v36;
      uint64_t v80 = v8;
      uint64_t v81 = v10;
      uint64_t v82 = v9;
      uint64_t v83 = v11;
      unsigned __int8 v84 = 3;
      goto LABEL_62;
    case 4u:
      if (v12 != 4) {
        goto LABEL_34;
      }
      uint64_t v42 = *(void *)a2;
      if (v3 == v7 && v2 == v8)
      {
        uint64_t v43 = *(void *)(a1 + 16);
        uint64_t v44 = *(void *)(a1 + 24);
        uint64_t v45 = *(void *)(a1 + 32);
        char v86 = 1;
        uint64_t v46 = *(void *)(a1 + 8);
        uint64_t v47 = *(void *)a1;
      }
      else
      {
        uint64_t v43 = *(void *)(a1 + 16);
        uint64_t v44 = *(void *)(a1 + 24);
        uint64_t v45 = *(void *)(a1 + 32);
        uint64_t v46 = *(void *)(a1 + 8);
        uint64_t v47 = *(void *)a1;
        char v86 = sub_24EF87A60();
      }
      sub_24EEF7798(v42, v8, v10, v9, v11, 4u);
      sub_24EEF7798(v47, v46, v43, v44, v45, 4u);
      sub_24EEF7780(v47, v46, v43, v44, v45, 4u);
      uint64_t v79 = v42;
      uint64_t v80 = v8;
      uint64_t v81 = v10;
      uint64_t v82 = v9;
      uint64_t v83 = v11;
      unsigned __int8 v84 = 4;
      goto LABEL_62;
    case 5u:
      if (v12 != 5) {
        goto LABEL_34;
      }
      uint64_t v48 = *(void *)a2;
      if (v3 == v7 && v2 == v8)
      {
        uint64_t v49 = *(void *)(a1 + 16);
        uint64_t v50 = *(void *)(a1 + 24);
        uint64_t v51 = *(void *)(a1 + 32);
        char v86 = 1;
        uint64_t v52 = *(void *)(a1 + 8);
        uint64_t v53 = *(void *)a1;
      }
      else
      {
        uint64_t v49 = *(void *)(a1 + 16);
        uint64_t v50 = *(void *)(a1 + 24);
        uint64_t v51 = *(void *)(a1 + 32);
        uint64_t v52 = *(void *)(a1 + 8);
        uint64_t v53 = *(void *)a1;
        char v86 = sub_24EF87A60();
      }
      sub_24EEF7798(v48, v8, v10, v9, v11, 5u);
      sub_24EEF7798(v53, v52, v49, v50, v51, 5u);
      sub_24EEF7780(v53, v52, v49, v50, v51, 5u);
      uint64_t v79 = v48;
      uint64_t v80 = v8;
      uint64_t v81 = v10;
      uint64_t v82 = v9;
      uint64_t v83 = v11;
      unsigned __int8 v84 = 5;
      goto LABEL_62;
    case 6u:
      if (v12 != 6) {
        goto LABEL_34;
      }
      uint64_t v54 = *(void *)a2;
      if (v3 == v7 && v2 == v8)
      {
        uint64_t v55 = *(void *)(a1 + 16);
        uint64_t v56 = *(void *)(a1 + 24);
        uint64_t v57 = *(void *)(a1 + 32);
        char v86 = 1;
        uint64_t v58 = *(void *)(a1 + 8);
        uint64_t v59 = *(void *)a1;
      }
      else
      {
        uint64_t v55 = *(void *)(a1 + 16);
        uint64_t v56 = *(void *)(a1 + 24);
        uint64_t v57 = *(void *)(a1 + 32);
        uint64_t v58 = *(void *)(a1 + 8);
        uint64_t v59 = *(void *)a1;
        char v86 = sub_24EF87A60();
      }
      sub_24EEF7798(v54, v8, v10, v9, v11, 6u);
      sub_24EEF7798(v59, v58, v55, v56, v57, 6u);
      sub_24EEF7780(v59, v58, v55, v56, v57, 6u);
      uint64_t v79 = v54;
      uint64_t v80 = v8;
      uint64_t v81 = v10;
      uint64_t v82 = v9;
      uint64_t v83 = v11;
      unsigned __int8 v84 = 6;
      goto LABEL_62;
    case 7u:
      if (v12 != 7) {
        goto LABEL_34;
      }
      uint64_t v60 = *(void *)a2;
      if (v3 == v7 && v2 == v8)
      {
        uint64_t v61 = *(void *)(a1 + 16);
        uint64_t v62 = *(void *)(a1 + 24);
        uint64_t v63 = *(void *)(a1 + 32);
        char v86 = 1;
        uint64_t v64 = *(void *)(a1 + 8);
        uint64_t v65 = *(void *)a1;
      }
      else
      {
        uint64_t v61 = *(void *)(a1 + 16);
        uint64_t v62 = *(void *)(a1 + 24);
        uint64_t v63 = *(void *)(a1 + 32);
        uint64_t v64 = *(void *)(a1 + 8);
        uint64_t v65 = *(void *)a1;
        char v86 = sub_24EF87A60();
      }
      sub_24EEF7798(v60, v8, v10, v9, v11, 7u);
      sub_24EEF7798(v65, v64, v61, v62, v63, 7u);
      sub_24EEF7780(v65, v64, v61, v62, v63, 7u);
      uint64_t v79 = v60;
      uint64_t v80 = v8;
      uint64_t v81 = v10;
      uint64_t v82 = v9;
      uint64_t v83 = v11;
      unsigned __int8 v84 = 7;
      goto LABEL_62;
    case 8u:
      uint64_t v66 = *(void *)a1;
      uint64_t v85 = *(void *)(a1 + 24);
      uint64_t v87 = *(void *)(a1 + 32);
      uint64_t v67 = *(void *)(a1 + 8);
      if (v12 != 8) {
        goto LABEL_35;
      }
      char v68 = sub_24EF0689C(v3, v7);
      sub_24EEF7780(v66, v67, v4, v85, v87, 8u);
      sub_24EEF7780(v7, v8, v10, v9, v11, 8u);
      return v68 & 1;
    default:
      if (*(unsigned char *)(a2 + 40))
      {
LABEL_34:
        uint64_t v66 = *(void *)a1;
        uint64_t v85 = *(void *)(a1 + 24);
        uint64_t v87 = *(void *)(a1 + 32);
        uint64_t v67 = *(void *)(a1 + 8);
        swift_bridgeObjectRetain();
LABEL_35:
        sub_24EEF7798(v7, v8, v10, v9, v11, v12);
        sub_24EEF7780(v66, v67, v4, v85, v87, v6);
        sub_24EEF7780(v7, v8, v10, v9, v11, v12);
LABEL_36:
        char v24 = 0;
      }
      else
      {
        uint64_t v13 = *(void *)(a1 + 16);
        uint64_t v14 = *(void *)(a1 + 24);
        uint64_t v15 = *(void *)(a1 + 32);
        uint64_t v16 = *(void *)a2;
        uint64_t v17 = *(void *)(a2 + 8);
        if (v3 == v7 && v2 == v8)
        {
          char v86 = 1;
          uint64_t v18 = *(void *)(a1 + 8);
          uint64_t v19 = *(void *)a1;
        }
        else
        {
          uint64_t v18 = *(void *)(a1 + 8);
          uint64_t v19 = *(void *)a1;
          char v86 = sub_24EF87A60();
        }
        sub_24EEF7798(v16, v17, v10, v9, v11, 0);
        sub_24EEF7798(v19, v18, v13, v14, v15, 0);
        sub_24EEF7780(v19, v18, v13, v14, v15, 0);
        uint64_t v79 = v16;
        uint64_t v80 = v17;
        uint64_t v81 = v10;
        uint64_t v82 = v9;
        uint64_t v83 = v11;
        unsigned __int8 v84 = 0;
LABEL_62:
        sub_24EEF7780(v79, v80, v81, v82, v83, v84);
        char v24 = v86;
      }
      return v24 & 1;
  }
}

unint64_t sub_24EF2E71C()
{
  unint64_t result = qword_2699861C8;
  if (!qword_2699861C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699861C8);
  }
  return result;
}

unint64_t sub_24EF2E770()
{
  unint64_t result = qword_2699861D0;
  if (!qword_2699861D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699861D0);
  }
  return result;
}

unint64_t sub_24EF2E7C4()
{
  unint64_t result = qword_2699861D8;
  if (!qword_2699861D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699861D8);
  }
  return result;
}

unint64_t sub_24EF2E818()
{
  unint64_t result = qword_2699861E0;
  if (!qword_2699861E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699861E0);
  }
  return result;
}

unint64_t sub_24EF2E86C()
{
  unint64_t result = qword_2699861E8;
  if (!qword_2699861E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699861E8);
  }
  return result;
}

unint64_t sub_24EF2E8C0()
{
  unint64_t result = qword_2699861F0;
  if (!qword_2699861F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699861F0);
  }
  return result;
}

unint64_t sub_24EF2E914()
{
  unint64_t result = qword_2699861F8;
  if (!qword_2699861F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699861F8);
  }
  return result;
}

unint64_t sub_24EF2E968()
{
  unint64_t result = qword_269986200;
  if (!qword_269986200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986200);
  }
  return result;
}

unint64_t sub_24EF2E9BC()
{
  unint64_t result = qword_269986208;
  if (!qword_269986208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986208);
  }
  return result;
}

unint64_t sub_24EF2EA10()
{
  unint64_t result = qword_269986210;
  if (!qword_269986210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986210);
  }
  return result;
}

unint64_t sub_24EF2EA64()
{
  unint64_t result = qword_269986218;
  if (!qword_269986218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986218);
  }
  return result;
}

unint64_t sub_24EF2EAB8()
{
  unint64_t result = qword_269986220;
  if (!qword_269986220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986220);
  }
  return result;
}

unint64_t sub_24EF2EB0C()
{
  unint64_t result = qword_269986278;
  if (!qword_269986278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986278);
  }
  return result;
}

unint64_t sub_24EF2EB60()
{
  unint64_t result = qword_269986280;
  if (!qword_269986280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986280);
  }
  return result;
}

unint64_t sub_24EF2EBB8()
{
  unint64_t result = qword_269986288;
  if (!qword_269986288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986288);
  }
  return result;
}

uint64_t destroy for FilterItem(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 40);
  if (v1 >= 9) {
    unsigned int v1 = *(_DWORD *)result + 9;
  }
  if (v1 <= 7) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FilterItem(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 9) {
    unsigned int v3 = *(_DWORD *)a2 + 9;
  }
  switch(v3)
  {
    case 1u:
      uint64_t v5 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v6 = 1;
      goto LABEL_12;
    case 2u:
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      char v6 = 2;
      goto LABEL_12;
    case 3u:
      uint64_t v8 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v8;
      char v6 = 3;
      goto LABEL_12;
    case 4u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      char v6 = 4;
      goto LABEL_12;
    case 5u:
      uint64_t v10 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v10;
      char v6 = 5;
      goto LABEL_12;
    case 6u:
      uint64_t v11 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v11;
      char v6 = 6;
      goto LABEL_12;
    case 7u:
      uint64_t v12 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v12;
      char v6 = 7;
LABEL_12:
      *(unsigned char *)(a1 + 40) = v6;
      goto LABEL_13;
    case 8u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 40) = 8;
      return a1;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      *(unsigned char *)(a1 + 40) = 0;
LABEL_13:
      swift_bridgeObjectRetain();
      return a1;
  }
}

uint64_t assignWithCopy for FilterItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 9) {
      unsigned int v4 = *(_DWORD *)a1 + 9;
    }
    if (v4 <= 7) {
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 9) {
      unsigned int v5 = *(_DWORD *)a2 + 9;
    }
    switch(v5)
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v6 = 1;
        goto LABEL_17;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        char v6 = 2;
        goto LABEL_17;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        char v6 = 3;
        goto LABEL_17;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        char v6 = 4;
        goto LABEL_17;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        char v6 = 5;
        goto LABEL_17;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        char v6 = 6;
        goto LABEL_17;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        char v6 = 7;
LABEL_17:
        *(unsigned char *)(a1 + 40) = v6;
        goto LABEL_18;
      case 8u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 40) = 8;
        return a1;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 40) = 0;
LABEL_18:
        swift_bridgeObjectRetain();
        break;
    }
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FilterItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 9) {
      unsigned int v4 = *(_DWORD *)a1 + 9;
    }
    if (v4 <= 7) {
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 9) {
      unsigned int v5 = *(_DWORD *)a2 + 9;
    }
    switch(v5)
    {
      case 1u:
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v6 = 1;
        break;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 2;
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 3;
        break;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 4;
        break;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 5;
        break;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 6;
        break;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 7;
        break;
      case 8u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 8;
        break;
      default:
        char v6 = 0;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        break;
    }
    *(unsigned char *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FilterItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 248);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 9) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FilterItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 248;
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24EF2F0E0(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 9) {
    return (*(_DWORD *)a1 + 9);
  }
  return result;
}

uint64_t sub_24EF2F0FC(uint64_t result, unsigned int a2)
{
  if (a2 > 8)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 9;
    LOBYTE(a2) = 9;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FilterItem()
{
  return &type metadata for FilterItem;
}

unsigned char *storeEnumTagSinglePayload for FilterItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF2F200);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterItem.CodingKeys()
{
  return &type metadata for FilterItem.CodingKeys;
}

ValueMetadata *type metadata accessor for FilterItem.BodyFocusCodingKeys()
{
  return &type metadata for FilterItem.BodyFocusCodingKeys;
}

ValueMetadata *type metadata accessor for FilterItem.DurationCodingKeys()
{
  return &type metadata for FilterItem.DurationCodingKeys;
}

ValueMetadata *type metadata accessor for FilterItem.EquipmentCodingKeys()
{
  return &type metadata for FilterItem.EquipmentCodingKeys;
}

ValueMetadata *type metadata accessor for FilterItem.ModalityCodingKeys()
{
  return &type metadata for FilterItem.ModalityCodingKeys;
}

ValueMetadata *type metadata accessor for FilterItem.MusicGenreCodingKeys()
{
  return &type metadata for FilterItem.MusicGenreCodingKeys;
}

ValueMetadata *type metadata accessor for FilterItem.SkillLevelCodingKeys()
{
  return &type metadata for FilterItem.SkillLevelCodingKeys;
}

ValueMetadata *type metadata accessor for FilterItem.ThemeCodingKeys()
{
  return &type metadata for FilterItem.ThemeCodingKeys;
}

ValueMetadata *type metadata accessor for FilterItem.TrainerCodingKeys()
{
  return &type metadata for FilterItem.TrainerCodingKeys;
}

unsigned char *_s16FitnessFiltering10FilterItemO19BodyFocusCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EF2F358);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterItem.TraitCodingKeys()
{
  return &type metadata for FilterItem.TraitCodingKeys;
}

unint64_t sub_24EF2F394()
{
  unint64_t result = qword_269986290;
  if (!qword_269986290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986290);
  }
  return result;
}

unint64_t sub_24EF2F3EC()
{
  unint64_t result = qword_269986298;
  if (!qword_269986298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986298);
  }
  return result;
}

unint64_t sub_24EF2F444()
{
  unint64_t result = qword_2699862A0;
  if (!qword_2699862A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699862A0);
  }
  return result;
}

unint64_t sub_24EF2F49C()
{
  unint64_t result = qword_2699862A8;
  if (!qword_2699862A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699862A8);
  }
  return result;
}

unint64_t sub_24EF2F4F4()
{
  unint64_t result = qword_2699862B0;
  if (!qword_2699862B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699862B0);
  }
  return result;
}

unint64_t sub_24EF2F54C()
{
  unint64_t result = qword_2699862B8;
  if (!qword_2699862B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699862B8);
  }
  return result;
}

unint64_t sub_24EF2F5A4()
{
  unint64_t result = qword_2699862C0;
  if (!qword_2699862C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699862C0);
  }
  return result;
}

unint64_t sub_24EF2F5FC()
{
  unint64_t result = qword_2699862C8;
  if (!qword_2699862C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699862C8);
  }
  return result;
}

unint64_t sub_24EF2F654()
{
  unint64_t result = qword_2699862D0;
  if (!qword_2699862D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699862D0);
  }
  return result;
}

unint64_t sub_24EF2F6AC()
{
  unint64_t result = qword_2699862D8;
  if (!qword_2699862D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699862D8);
  }
  return result;
}

unint64_t sub_24EF2F704()
{
  unint64_t result = qword_2699862E0;
  if (!qword_2699862E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699862E0);
  }
  return result;
}

unint64_t sub_24EF2F75C()
{
  unint64_t result = qword_2699862E8;
  if (!qword_2699862E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699862E8);
  }
  return result;
}

unint64_t sub_24EF2F7B4()
{
  unint64_t result = qword_2699862F0;
  if (!qword_2699862F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699862F0);
  }
  return result;
}

unint64_t sub_24EF2F80C()
{
  unint64_t result = qword_2699862F8;
  if (!qword_2699862F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699862F8);
  }
  return result;
}

unint64_t sub_24EF2F864()
{
  unint64_t result = qword_269986300;
  if (!qword_269986300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986300);
  }
  return result;
}

unint64_t sub_24EF2F8BC()
{
  unint64_t result = qword_269986308;
  if (!qword_269986308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986308);
  }
  return result;
}

unint64_t sub_24EF2F914()
{
  unint64_t result = qword_269986310;
  if (!qword_269986310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986310);
  }
  return result;
}

unint64_t sub_24EF2F96C()
{
  unint64_t result = qword_269986318;
  if (!qword_269986318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986318);
  }
  return result;
}

unint64_t sub_24EF2F9C4()
{
  unint64_t result = qword_269986320;
  if (!qword_269986320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986320);
  }
  return result;
}

unint64_t sub_24EF2FA1C()
{
  unint64_t result = qword_269986328;
  if (!qword_269986328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986328);
  }
  return result;
}

unint64_t sub_24EF2FA74()
{
  unint64_t result = qword_269986330;
  if (!qword_269986330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986330);
  }
  return result;
}

unint64_t sub_24EF2FACC()
{
  unint64_t result = qword_269986338;
  if (!qword_269986338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986338);
  }
  return result;
}

unint64_t sub_24EF2FB24()
{
  unint64_t result = qword_269986340;
  if (!qword_269986340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986340);
  }
  return result;
}

unint64_t sub_24EF2FB7C()
{
  unint64_t result = qword_269986348;
  if (!qword_269986348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986348);
  }
  return result;
}

unint64_t sub_24EF2FBD4()
{
  unint64_t result = qword_269986350;
  if (!qword_269986350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986350);
  }
  return result;
}

unint64_t sub_24EF2FC2C()
{
  unint64_t result = qword_269986358;
  if (!qword_269986358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986358);
  }
  return result;
}

unint64_t sub_24EF2FC84()
{
  unint64_t result = qword_269986360;
  if (!qword_269986360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986360);
  }
  return result;
}

unint64_t sub_24EF2FCDC()
{
  unint64_t result = qword_269986368;
  if (!qword_269986368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986368);
  }
  return result;
}

unint64_t sub_24EF2FD34()
{
  unint64_t result = qword_269986370;
  if (!qword_269986370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986370);
  }
  return result;
}

unint64_t sub_24EF2FD8C()
{
  unint64_t result = qword_269986378;
  if (!qword_269986378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986378);
  }
  return result;
}

uint64_t sub_24EF2FDE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x75636F4679646F62 && a2 == 0xE900000000000073;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E656D7069757165 && a2 == 0xE900000000000074 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7974696C61646F6DLL && a2 == 0xE800000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6547636973756DLL && a2 == 0xEA00000000006572 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x76654C6C6C696B73 && a2 == 0xEA00000000006C65 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656D656874 && a2 == 0xE500000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x72656E69617274 && a2 == 0xE700000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7469617274 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t FilterResult.bodyFocusIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterResult.durationIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterResult.equipmentIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterResult.modalityIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterResult.musicGenreIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterResult.results.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterResult.skillLevelIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterResult.themeIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterResult.trainerIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterResult.init(bodyFocusIdentifiers:durationIdentifiers:equipmentIdentifiers:modalityIdentifiers:musicGenreIdentifiers:results:skillLevelIdentifiers:themeIdentifiers:trainerIdentifiers:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

unint64_t sub_24EF30200(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0x73746C75736572;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EF30300()
{
  return sub_24EF30200(*v0);
}

uint64_t sub_24EF30308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF338A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF30330(uint64_t a1)
{
  unint64_t v2 = sub_24EF330DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3036C(uint64_t a1)
{
  unint64_t v2 = sub_24EF330DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FilterResult.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986380);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v23 = v1[2];
  uint64_t v24 = v8;
  uint64_t v10 = v1[3];
  uint64_t v21 = v1[4];
  uint64_t v22 = v10;
  uint64_t v11 = v1[5];
  uint64_t v19 = v1[6];
  uint64_t v20 = v11;
  uint64_t v12 = v1[7];
  uint64_t v17 = v1[8];
  uint64_t v18 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF330DC();
  sub_24EF87AF0();
  uint64_t v26 = v9;
  char v25 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269986390);
  sub_24EF33184(&qword_269986398);
  sub_24EF87A20();
  if (!v2)
  {
    uint64_t v14 = v22;
    uint64_t v13 = v23;
    uint64_t v26 = v24;
    char v25 = 1;
    sub_24EF87A20();
    uint64_t v26 = v13;
    char v25 = 2;
    sub_24EF87A20();
    uint64_t v26 = v14;
    char v25 = 3;
    sub_24EF87A20();
    uint64_t v26 = v21;
    char v25 = 4;
    sub_24EF87A20();
    uint64_t v26 = v20;
    char v25 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699863A0);
    sub_24EF331E8(&qword_2699863A8, (void (*)(void))sub_24EF33130);
    sub_24EF87A20();
    uint64_t v26 = v19;
    char v25 = 6;
    sub_24EF87A20();
    uint64_t v26 = v18;
    char v25 = 7;
    sub_24EF87A20();
    uint64_t v26 = v17;
    char v25 = 8;
    sub_24EF87A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FilterResult.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699863B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF330DC();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v31 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269986390);
  char v32 = 0;
  sub_24EF33184(&qword_2699863C0);
  sub_24EF87970();
  uint64_t v10 = v33;
  char v32 = 1;
  swift_bridgeObjectRetain();
  sub_24EF87970();
  char v32 = 2;
  uint64_t v30 = v33;
  swift_bridgeObjectRetain();
  sub_24EF87970();
  char v32 = 3;
  uint64_t v29 = v33;
  swift_bridgeObjectRetain();
  sub_24EF87970();
  char v32 = 4;
  uint64_t v28 = v33;
  swift_bridgeObjectRetain();
  sub_24EF87970();
  uint64_t v11 = v33;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699863A0);
  char v32 = 5;
  sub_24EF331E8(&qword_2699863C8, (void (*)(void))sub_24EF33258);
  uint64_t v25 = v11;
  swift_bridgeObjectRetain();
  sub_24EF87970();
  uint64_t v27 = v10;
  char v32 = 6;
  uint64_t v24 = v33;
  swift_bridgeObjectRetain();
  uint64_t v22 = 0;
  sub_24EF87970();
  char v32 = 7;
  uint64_t v26 = v33;
  swift_bridgeObjectRetain();
  sub_24EF87970();
  char v32 = 8;
  uint64_t v23 = v33;
  swift_bridgeObjectRetain();
  sub_24EF87970();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v22 = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = v29;
  swift_bridgeObjectRetain();
  uint64_t v13 = v28;
  swift_bridgeObjectRetain();
  uint64_t v14 = v25;
  swift_bridgeObjectRetain();
  uint64_t v15 = v24;
  swift_bridgeObjectRetain();
  uint64_t v16 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = v31;
  *uint64_t v31 = v10;
  v18[1] = v17;
  v18[2] = v12;
  v18[3] = v13;
  v18[4] = v14;
  v18[5] = v15;
  uint64_t v20 = v22;
  uint64_t v19 = v23;
  v18[6] = v16;
  v18[7] = v19;
  v18[8] = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF30FB4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FilterResult.init(from:)(a1, a2);
}

uint64_t sub_24EF30FCC(void *a1)
{
  return FilterResult.encode(to:)(a1);
}

uint64_t FilterResult.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v10 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v11 = v1[8];
  swift_bridgeObjectRetain();
  sub_24EEF6C68(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF6C68(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF6C68(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF6C68(a1, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF6C68(a1, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF32EE8(a1, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF6C68(a1, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF6C68(a1, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF6C68(a1, v11);
  return swift_bridgeObjectRelease();
}

uint64_t FilterResult.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 8);
  long long v2 = v0[1];
  long long v6 = *v0;
  long long v7 = v2;
  long long v3 = v0[3];
  long long v8 = v0[2];
  long long v9 = v3;
  uint64_t v10 = v1;
  sub_24EF87A90();
  FilterResult.hash(into:)((uint64_t)v5);
  return sub_24EF87AD0();
}

uint64_t sub_24EF3119C()
{
  uint64_t v1 = *((void *)v0 + 8);
  long long v2 = v0[1];
  long long v6 = *v0;
  long long v7 = v2;
  long long v3 = v0[3];
  long long v8 = v0[2];
  long long v9 = v3;
  uint64_t v10 = v1;
  sub_24EF87A90();
  FilterResult.hash(into:)((uint64_t)v5);
  return sub_24EF87AD0();
}

uint64_t sub_24EF311FC()
{
  uint64_t v1 = *((void *)v0 + 8);
  long long v2 = v0[1];
  long long v6 = *v0;
  long long v7 = v2;
  long long v3 = v0[3];
  long long v8 = v0[2];
  long long v9 = v3;
  uint64_t v10 = v1;
  sub_24EF87A90();
  FilterResult.hash(into:)((uint64_t)v5);
  return sub_24EF87AD0();
}

uint64_t sub_24EF3125C(long long *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_24EF87AA0();
  if (v4)
  {
    long long v6 = (uint64_t *)(a2 + 48);
    do
    {
      uint64_t v7 = *(v6 - 2);
      uint64_t v8 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_24EEF4E6C(a1, v7);
      swift_bridgeObjectRelease();
      sub_24EF87AB0();
      if (v8)
      {
        swift_bridgeObjectRetain();
        sub_24EF87670();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      sub_24EF87AA0();
      sub_24EF87AA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      v6 += 9;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_24EF313C4(long long *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_24EF87AA0();
  if (v4)
  {
    uint64_t v6 = a2 + 56;
    do
    {
      uint64_t v7 = *(void *)(v6 - 24);
      uint64_t v8 = *(void *)(v6 - 8);
      uint64_t v9 = *(void *)(v6 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24EEF4E6C(a1, v7);
      swift_bridgeObjectRelease();
      sub_24EF87AB0();
      if (v8)
      {
        swift_bridgeObjectRetain();
        sub_24EF87670();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      sub_24EF87AB0();
      if (v9)
      {
        swift_bridgeObjectRetain();
        sub_24EF87670();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      sub_24EF87AA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      v6 += 80;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_24EF3157C(long long *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_24EF87AA0();
  uint64_t v15 = v4;
  if (v4)
  {
    uint64_t v6 = 0;
    uint64_t v14 = a2 + 32;
    do
    {
      uint64_t v7 = (uint64_t *)(v14 + 80 * v6);
      uint64_t v8 = *v7;
      uint64_t v9 = v7[1];
      uint64_t v10 = v7[3];
      uint64_t v11 = v7[8];
      sub_24EF87AA0();
      uint64_t v12 = *(void *)(v8 + 16);
      if (v12)
      {
        uint64_t v13 = v8 + 32;
        do
        {
          v13 += 8;
          sub_24EF87AA0();
          --v12;
        }
        while (v12);
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_24EEF4E6C(a1, v9);
      swift_bridgeObjectRelease();
      sub_24EF87AB0();
      if (v10)
      {
        swift_bridgeObjectRetain();
        sub_24EF87670();
        swift_bridgeObjectRelease();
      }
      ++v6;
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24EEF5654((uint64_t)a1, v11);
      swift_bridgeObjectRelease();
      sub_24EF87AA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while (v6 != v15);
  }
  return result;
}

uint64_t sub_24EF31764(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_24EF87AA0();
  if (v3)
  {
    uint64_t v5 = a2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24EF87670();
      sub_24EF87AC0();
      sub_24EF87AC0();
      sub_24EF87AC0();
      sub_24EF87AA0();
      uint64_t result = swift_bridgeObjectRelease();
      v5 += 48;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_24EF31824(long long *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_24EF87AA0();
  if (v4)
  {
    uint64_t v6 = (uint64_t *)(a2 + 48);
    do
    {
      uint64_t v7 = *(v6 - 2);
      uint64_t v8 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_24EEF4E6C(a1, v7);
      swift_bridgeObjectRelease();
      sub_24EF87AB0();
      if (v8)
      {
        swift_bridgeObjectRetain();
        sub_24EF87670();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      sub_24EF87AA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      v6 += 8;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_24EF31984(long long *a1, uint64_t a2)
{
  uint64_t v4 = sub_24EF86A30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v72 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D60);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FilterSectionDescriptor();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t result = sub_24EF87AA0();
  uint64_t v80 = v14;
  if (v14)
  {
    uint64_t v77 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v78 = v13;
    uint64_t v16 = *(void *)(v11 + 72);
    uint64_t v75 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v76 = v16;
    uint64_t v70 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v71 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v17 = 0;
    uint64_t v73 = v9;
    uint64_t v74 = v4;
    uint64_t v79 = v10;
    do
    {
      sub_24EF33BE4(v77 + v76 * v17, (uint64_t)v13);
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      sub_24EF33C48((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v9);
      if ((*v75)(v9, 1, v4) == 1)
      {
        sub_24EF87AB0();
      }
      else
      {
        uint64_t v18 = v72;
        (*v71)(v72, v9, v4);
        sub_24EF87AB0();
        sub_24EF33CB0();
        sub_24EF875A0();
        (*v70)(v18, v4);
      }
      ++v17;
      uint64_t v19 = &v13[*(int *)(v10 + 24)];
      uint64_t v20 = *(void *)v19;
      uint64_t v83 = v19[8];
      switch(v83)
      {
        case 1:
          sub_24EF87AA0();
          uint64_t v46 = *(void *)(v20 + 16);
          sub_24EF87AA0();
          if (v46)
          {
            uint64_t v82 = v17;
            swift_bridgeObjectRetain();
            uint64_t v81 = v20;
            uint64_t v47 = v20 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_24EF87670();
              sub_24EF87AC0();
              sub_24EF87AC0();
              sub_24EF87AC0();
              sub_24EF87AA0();
              swift_bridgeObjectRelease();
              v47 += 48;
              --v46;
            }
            while (v46);
            goto LABEL_3;
          }
          break;
        case 2:
          sub_24EF87AA0();
          sub_24EF87AA0();
          uint64_t v26 = *(void *)(v20 + 16);
          if (v26)
          {
            uint64_t v82 = v17;
            swift_bridgeObjectRetain();
            uint64_t v81 = v20;
            uint64_t v27 = v20 + 48;
            do
            {
              uint64_t v28 = *(void *)(v27 - 16);
              uint64_t v29 = *(void *)v27;
              uint64_t v30 = *(unsigned __int8 *)(v27 + 40);
              uint64_t v89 = *(void *)(v27 + 24);
              uint64_t v90 = v30;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain_n();
              sub_24EEF4E6C(a1, v28);
              swift_bridgeObjectRelease();
              sub_24EF87AB0();
              if (v29)
              {
                swift_bridgeObjectRetain();
                sub_24EF87670();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              sub_24EF87AA0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v27 += 64;
              --v26;
            }
            while (v26);
            goto LABEL_3;
          }
          break;
        case 3:
          sub_24EF87AA0();
          sub_24EF87AA0();
          uint64_t v85 = *(void *)(v20 + 16);
          if (v85)
          {
            uint64_t v81 = v20;
            uint64_t v82 = v17;
            uint64_t v84 = v20 + 32;
            swift_bridgeObjectRetain();
            uint64_t v31 = 0;
            do
            {
              uint64_t v32 = v84 + 80 * v31;
              uint64_t v34 = *(void *)v32;
              uint64_t v33 = *(void *)(v32 + 8);
              uint64_t v35 = *(void *)(v32 + 24);
              uint64_t v36 = *(void *)(v32 + 32);
              uint64_t v86 = *(void *)(v32 + 16);
              uint64_t v87 = v36;
              uint64_t v88 = *(void *)(v32 + 48);
              uint64_t v37 = *(void *)(v32 + 64);
              uint64_t v89 = *(unsigned __int8 *)(v32 + 72);
              uint64_t v90 = v33;
              sub_24EF87AA0();
              uint64_t v38 = *(void *)(v34 + 16);
              if (v38)
              {
                uint64_t v39 = v34 + 32;
                do
                {
                  v39 += 8;
                  sub_24EF87AA0();
                  --v38;
                }
                while (v38);
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v40 = v90;
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              sub_24EEF4E6C(a1, v40);
              swift_bridgeObjectRelease();
              sub_24EF87AB0();
              if (v35)
              {
                swift_bridgeObjectRetain();
                sub_24EF87670();
                swift_bridgeObjectRelease();
              }
              ++v31;
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_24EEF5654((uint64_t)a1, v37);
              swift_bridgeObjectRelease();
              sub_24EF87AA0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            while (v31 != v85);
            goto LABEL_3;
          }
          break;
        case 4:
          sub_24EF87AA0();
          sub_24EF87AA0();
          uint64_t v41 = *(void *)(v20 + 16);
          if (v41)
          {
            uint64_t v82 = v17;
            swift_bridgeObjectRetain();
            uint64_t v81 = v20;
            uint64_t v42 = v20 + 48;
            do
            {
              uint64_t v43 = *(void *)(v42 - 16);
              uint64_t v44 = *(void *)v42;
              uint64_t v45 = *(unsigned __int8 *)(v42 + 40);
              uint64_t v89 = *(void *)(v42 + 24);
              uint64_t v90 = v45;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain_n();
              sub_24EEF4E6C(a1, v43);
              swift_bridgeObjectRelease();
              sub_24EF87AB0();
              if (v44)
              {
                swift_bridgeObjectRetain();
                sub_24EF87670();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              sub_24EF87AA0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v42 += 64;
              --v41;
            }
            while (v41);
            goto LABEL_3;
          }
          break;
        case 5:
          sub_24EF87AA0();
          sub_24EF87AA0();
          uint64_t v48 = *(void *)(v20 + 16);
          if (v48)
          {
            uint64_t v82 = v17;
            swift_bridgeObjectRetain();
            uint64_t v81 = v20;
            uint64_t v49 = v20 + 56;
            do
            {
              uint64_t v51 = *(void *)(v49 - 24);
              uint64_t v50 = *(void *)(v49 - 16);
              uint64_t v52 = *(void *)(v49 - 8);
              uint64_t v89 = *(void *)v49;
              uint64_t v53 = *(void *)(v49 + 16);
              uint64_t v87 = v50;
              uint64_t v88 = v53;
              uint64_t v54 = *(void *)(v49 + 24);
              uint64_t v55 = *(unsigned __int8 *)(v49 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_24EEF4E6C(a1, v51);
              swift_bridgeObjectRelease();
              uint64_t v90 = v55;
              sub_24EF87AB0();
              if (v52)
              {
                swift_bridgeObjectRetain();
                sub_24EF87670();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              sub_24EF87AB0();
              if (v54)
              {
                swift_bridgeObjectRetain();
                sub_24EF87670();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              sub_24EF87AA0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v49 += 80;
              --v48;
            }
            while (v48);
            goto LABEL_3;
          }
          break;
        case 6:
          sub_24EF87AA0();
          sub_24EF87AA0();
          uint64_t v56 = *(void *)(v20 + 16);
          if (v56)
          {
            uint64_t v82 = v17;
            swift_bridgeObjectRetain();
            uint64_t v81 = v20;
            uint64_t v57 = v20 + 48;
            do
            {
              uint64_t v58 = *(void *)(v57 - 16);
              uint64_t v59 = *(void *)v57;
              uint64_t v60 = *(void *)(v57 + 24);
              uint64_t v88 = *(void *)(v57 + 8);
              uint64_t v89 = v60;
              uint64_t v61 = *(unsigned __int8 *)(v57 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain_n();
              sub_24EEF4E6C(a1, v58);
              swift_bridgeObjectRelease();
              uint64_t v90 = v61;
              sub_24EF87AB0();
              if (v59)
              {
                swift_bridgeObjectRetain();
                sub_24EF87670();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              sub_24EF87AA0();
              sub_24EF87AA0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v57 += 72;
              --v56;
            }
            while (v56);
            goto LABEL_3;
          }
          break;
        case 7:
          sub_24EF87AA0();
          sub_24EF87AA0();
          uint64_t v62 = *(void *)(v20 + 16);
          if (v62)
          {
            uint64_t v82 = v17;
            swift_bridgeObjectRetain();
            uint64_t v81 = v20;
            uint64_t v63 = v20 + 56;
            do
            {
              uint64_t v65 = *(void *)(v63 - 24);
              uint64_t v64 = *(void *)(v63 - 16);
              uint64_t v66 = *(void *)(v63 - 8);
              uint64_t v89 = *(void *)v63;
              uint64_t v67 = *(void *)(v63 + 16);
              uint64_t v87 = v64;
              uint64_t v88 = v67;
              uint64_t v68 = *(void *)(v63 + 24);
              uint64_t v69 = *(unsigned __int8 *)(v63 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_24EEF4E6C(a1, v65);
              swift_bridgeObjectRelease();
              uint64_t v90 = v69;
              sub_24EF87AB0();
              if (v66)
              {
                swift_bridgeObjectRetain();
                sub_24EF87670();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              sub_24EF87AB0();
              if (v68)
              {
                swift_bridgeObjectRetain();
                sub_24EF87670();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              sub_24EF87AA0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v63 += 80;
              --v62;
            }
            while (v62);
            goto LABEL_3;
          }
          break;
        default:
          sub_24EF87AA0();
          sub_24EF87AA0();
          uint64_t v21 = *(void *)(v20 + 16);
          if (v21)
          {
            uint64_t v82 = v17;
            swift_bridgeObjectRetain();
            uint64_t v81 = v20;
            uint64_t v22 = (uint64_t *)(v20 + 48);
            do
            {
              uint64_t v23 = *(v22 - 2);
              uint64_t v89 = *(v22 - 1);
              uint64_t v24 = *v22;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain_n();
              sub_24EEF4E6C(a1, v23);
              swift_bridgeObjectRelease();
              uint64_t v90 = v21;
              sub_24EF87AB0();
              uint64_t v25 = v90;
              if (v24)
              {
                swift_bridgeObjectRetain();
                sub_24EF87670();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_24EF87670();
              swift_bridgeObjectRelease();
              sub_24EF87AA0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v22 += 8;
              uint64_t v21 = v25 - 1;
            }
            while (v21);
LABEL_3:
            sub_24EF33D08(v81, v83);
            uint64_t v9 = v73;
            uint64_t v4 = v74;
            uint64_t v17 = v82;
          }
          break;
      }
      uint64_t v13 = v78;
      uint64_t result = sub_24EF33D1C((uint64_t)v78);
      uint64_t v10 = v79;
    }
    while (v17 != v80);
  }
  return result;
}

uint64_t sub_24EF327C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_24EF87AA0();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      ++v5;
      sub_24EF87670();
      uint64_t result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_24EF32950(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_24EF87AA0();
  if (v3)
  {
    uint64_t v5 = a2 + 48;
    while (2)
    {
      uint64_t v12 = *(void *)(v5 - 16);
      uint64_t v13 = *(void *)(v5 - 8);
      uint64_t v14 = *(void *)v5;
      uint64_t v15 = *(void *)(v5 + 8);
      uint64_t v16 = *(void *)(v5 + 16);
      uint64_t v17 = *(unsigned __int8 *)(v5 + 24);
      v5 += 64;
      switch(v17)
      {
        case 1:
          sub_24EF87AA0();
          sub_24EEF7798(v12, v13, v14, v15, v16, 1u);
          swift_bridgeObjectRetain();
          sub_24EEF7798(v12, v13, v14, v15, v16, 1u);
          sub_24EF87670();
          sub_24EEF7780(v12, v13, v14, v15, v16, 1u);
          sub_24EF87AC0();
          sub_24EF87AC0();
          sub_24EF87AC0();
          goto LABEL_5;
        case 2:
          sub_24EF87AA0();
          uint64_t v6 = v12;
          uint64_t v7 = v13;
          uint64_t v8 = v14;
          uint64_t v9 = v15;
          uint64_t v10 = v16;
          unsigned __int8 v11 = 2;
          goto LABEL_4;
        case 3:
          sub_24EF87AA0();
          uint64_t v6 = v12;
          uint64_t v7 = v13;
          uint64_t v8 = v14;
          uint64_t v9 = v15;
          uint64_t v10 = v16;
          unsigned __int8 v11 = 3;
          goto LABEL_4;
        case 4:
          sub_24EF87AA0();
          uint64_t v6 = v12;
          uint64_t v7 = v13;
          uint64_t v8 = v14;
          uint64_t v9 = v15;
          uint64_t v10 = v16;
          unsigned __int8 v11 = 4;
          goto LABEL_4;
        case 5:
          sub_24EF87AA0();
          uint64_t v6 = v12;
          uint64_t v7 = v13;
          uint64_t v8 = v14;
          uint64_t v9 = v15;
          uint64_t v10 = v16;
          unsigned __int8 v11 = 5;
          goto LABEL_4;
        case 6:
          sub_24EF87AA0();
          uint64_t v6 = v12;
          uint64_t v7 = v13;
          uint64_t v8 = v14;
          uint64_t v9 = v15;
          uint64_t v10 = v16;
          unsigned __int8 v11 = 6;
          goto LABEL_4;
        case 7:
          sub_24EF87AA0();
          uint64_t v6 = v12;
          uint64_t v7 = v13;
          uint64_t v8 = v14;
          uint64_t v9 = v15;
          uint64_t v10 = v16;
          unsigned __int8 v11 = 7;
          goto LABEL_4;
        case 8:
          sub_24EF87AA0();
          sub_24EEF7798(v12, v13, v14, v15, v16, 8u);
          swift_bridgeObjectRetain();
          sub_24EF87670();
          swift_bridgeObjectRelease();
          goto LABEL_5;
        default:
          sub_24EF87AA0();
          uint64_t v6 = v12;
          uint64_t v7 = v13;
          uint64_t v8 = v14;
          uint64_t v9 = v15;
          uint64_t v10 = v16;
          unsigned __int8 v11 = 0;
LABEL_4:
          sub_24EEF7798(v6, v7, v8, v9, v10, v11);
          swift_bridgeObjectRetain();
          sub_24EF87670();
LABEL_5:
          swift_bridgeObjectRetain();
          sub_24EF87670();
          swift_bridgeObjectRelease();
          sub_24EEF7780(v12, v13, v14, v15, v16, v17);
          uint64_t result = swift_bridgeObjectRelease();
          if (--v3) {
            continue;
          }
          return result;
      }
    }
  }
  return result;
}

uint64_t sub_24EF32D8C(long long *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_24EF87AA0();
  if (v4)
  {
    uint64_t v6 = (uint64_t *)(a2 + 48);
    do
    {
      uint64_t v7 = *(v6 - 2);
      uint64_t v8 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_24EEF4E6C(a1, v7);
      swift_bridgeObjectRelease();
      sub_24EF87AB0();
      if (v8)
      {
        swift_bridgeObjectRetain();
        sub_24EF87670();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      sub_24EF87AA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      v6 += 8;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_24EF32EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_24EF87AA0();
  if (v3)
  {
    uint64_t v5 = a2 + 56;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
      v5 += 32;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t _s16FitnessFiltering12FilterResultV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v16 = a1[7];
  uint64_t v14 = a1[8];
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v17 = a2[6];
  uint64_t v18 = a1[6];
  uint64_t v15 = a2[7];
  uint64_t v13 = a2[8];
  if ((sub_24EF06358(*a1, *a2) & 1) == 0
    || (sub_24EF06358(v2, v7) & 1) == 0
    || (sub_24EF06358(v4, v9) & 1) == 0
    || (sub_24EF06358(v3, v8) & 1) == 0
    || (sub_24EF06358(v6, v11) & 1) == 0
    || (sub_24EF5ACFC(v5, v10) & 1) == 0
    || (sub_24EF06358(v18, v17) & 1) == 0
    || (sub_24EF06358(v16, v15) & 1) == 0)
  {
    return 0;
  }
  return sub_24EF06358(v14, v13);
}

unint64_t sub_24EF330DC()
{
  unint64_t result = qword_269986388;
  if (!qword_269986388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986388);
  }
  return result;
}

unint64_t sub_24EF33130()
{
  unint64_t result = qword_2699863B0;
  if (!qword_2699863B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699863B0);
  }
  return result;
}

uint64_t sub_24EF33184(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986390);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EF331E8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699863A0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EF33258()
{
  unint64_t result = qword_2699863D0;
  if (!qword_2699863D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699863D0);
  }
  return result;
}

unint64_t sub_24EF332B0()
{
  unint64_t result = qword_2699863D8;
  if (!qword_2699863D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699863D8);
  }
  return result;
}

uint64_t destroy for FilterResult()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FilterResult(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FilterResult(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FilterResult(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FilterResult(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FilterResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterResult()
{
  return &type metadata for FilterResult;
}

unsigned char *storeEnumTagSinglePayload for FilterResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF33760);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterResult.CodingKeys()
{
  return &type metadata for FilterResult.CodingKeys;
}

unint64_t sub_24EF3379C()
{
  unint64_t result = qword_2699863E0;
  if (!qword_2699863E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699863E0);
  }
  return result;
}

unint64_t sub_24EF337F4()
{
  unint64_t result = qword_2699863E8;
  if (!qword_2699863E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699863E8);
  }
  return result;
}

unint64_t sub_24EF3384C()
{
  unint64_t result = qword_2699863F0;
  if (!qword_2699863F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699863F0);
  }
  return result;
}

uint64_t sub_24EF338A0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000024EF90CE0 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EF90D00 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024EF90D20 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EF90D40 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EF90D60 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EF90D80 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EF90DA0 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EF90DC0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_24EF33BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FilterSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EF33C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EF33CB0()
{
  unint64_t result = qword_2699863F8;
  if (!qword_2699863F8)
  {
    sub_24EF86A30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699863F8);
  }
  return result;
}

uint64_t sub_24EF33D08(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 7u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EF33D1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FilterSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EF33D78@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Option();
  uint64_t result = Option.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t FilterTrainerSectionView.init(containerWidth:artworkViewBuilder:headerViewBuilder:options:onOptionSelected:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(double *)(a8 + 16) = a9;
  *(void *)(a8 + 24) = a3;
  *(void *)(a8 + 32) = a4;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = a7;
  *(void *)(a8 + 56) = a5;
  return result;
}

uint64_t FilterTrainerSectionView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v2 = a1[3];
  uint64_t v54 = a1[4];
  uint64_t v3 = a1[6];
  uint64_t v47 = v2;
  uint64_t v48 = v3;
  uint64_t v4 = a1[8];
  uint64_t v51 = a1[9];
  uint64_t v52 = v4;
  uint64_t v5 = a1[10];
  uint64_t v49 = a1[11];
  uint64_t v50 = v5;
  uint64_t v46 = a1;
  *(void *)&long long v81 = v2;
  *((void *)&v81 + 1) = v3;
  *(void *)&long long v82 = v4;
  *((void *)&v82 + 1) = v51;
  *(void *)&long long v83 = v5;
  *((void *)&v83 + 1) = v49;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  sub_24EF87730();
  uint64_t v45 = a1[2];
  sub_24EF86C00();
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986400);
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986408);
  sub_24EF86DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269986410);
  swift_getTupleTypeMetadata2();
  sub_24EF874A0();
  uint64_t v42 = MEMORY[0x263F1BAD0];
  swift_getWitnessTable();
  sub_24EF873B0();
  sub_24EF86C00();
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985AF0);
  sub_24EF86C00();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v80 = MEMORY[0x263F18C10];
  uint64_t v7 = MEMORY[0x263F18E48];
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v78 = MEMORY[0x263F18860];
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v76 = sub_24EEFD4C4(&qword_269985AE8, &qword_269985AF0);
  swift_getWitnessTable();
  sub_24EF87390();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859F0);
  sub_24EF86C00();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v74 = sub_24EEFD4C4(&qword_2699859E8, &qword_2699859F0);
  uint64_t v43 = v7;
  swift_getWitnessTable();
  sub_24EEF97F4();
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859E0);
  sub_24EF86C00();
  uint64_t v71 = swift_getOpaqueTypeConformance2();
  uint64_t v72 = sub_24EEFD4C4(&qword_2699859D8, &qword_2699859E0);
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getWitnessTable();
  *(void *)&long long v83 = MEMORY[0x263F8D320];
  sub_24EF87420();
  uint64_t v70 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  sub_24EF87490();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  sub_24EF86B50();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24EF86F30();
  *(void *)&long long v82 = swift_getOpaqueTypeConformance2();
  *((void *)&v82 + 1) = MEMORY[0x263F1A480];
  *(void *)&long long v81 = swift_getOpaqueTypeMetadata2();
  *((void *)&v81 + 1) = swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  uint64_t v38 = sub_24EF874A0();
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v37 = sub_24EF873E0();
  uint64_t v41 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v36 = (char *)&v35 - v8;
  uint64_t v40 = sub_24EF86C00();
  uint64_t v42 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v35 = (char *)&v35 - v9;
  uint64_t v10 = sub_24EF87430();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (_OWORD *)((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_24EF87440();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v19 = v44[1];
  long long v81 = *v44;
  long long v82 = v19;
  long long v20 = v44[3];
  long long v83 = v44[2];
  long long v84 = v20;
  *uint64_t v13 = xmmword_24EF884E0;
  (*(void (**)(_OWORD *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F1B8C8], v10);
  sub_24EF87450();
  uint64_t v21 = sub_24EF87710();
  *(void *)(v21 + 16) = 5;
  unint64_t v22 = v21 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v23 = *(void (**)(unint64_t, char *, uint64_t))(v15 + 16);
  v23(v22, v18, v14);
  uint64_t v24 = *(void *)(v15 + 72);
  v23(v22 + v24, v18, v14);
  v23(v22 + 2 * v24, v18, v14);
  v23(v22 + 3 * v24, v18, v14);
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v22 + 4 * v24, v18, v14);
  sub_24EF86D90();
  uint64_t v55 = v45;
  uint64_t v56 = v47;
  uint64_t v25 = v46[5];
  uint64_t v57 = v54;
  uint64_t v58 = v25;
  uint64_t v26 = v46[7];
  uint64_t v59 = v48;
  uint64_t v60 = v26;
  uint64_t v61 = v52;
  uint64_t v62 = v51;
  uint64_t v63 = v50;
  uint64_t v64 = v49;
  uint64_t v65 = v46[12];
  uint64_t v66 = &v81;
  uint64_t v67 = v21;
  uint64_t v27 = v36;
  sub_24EF873D0();
  swift_bridgeObjectRelease();
  uint64_t v28 = v37;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v30 = v35;
  sub_24EF872B0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v28);
  uint64_t v31 = sub_24EF86F80();
  uint64_t v68 = v29;
  uint64_t v69 = MEMORY[0x263F190E0];
  uint64_t v32 = v40;
  uint64_t v33 = swift_getWitnessTable();
  sub_24EEFBE98(v31, 0x4034000000000000, 0, v32, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v30, v32);
}

uint64_t sub_24EF348FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, ValueMetadata *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v116 = a6;
  uint64_t v117 = a8;
  uint64_t v108 = a4;
  uint64_t v109 = a7;
  uint64_t v131 = a5;
  uint64_t v107 = a3;
  uint64_t v118 = a2;
  uint64_t v115 = a1;
  uint64_t v127 = a9;
  uint64_t v130 = a14;
  uint64_t v113 = a13;
  uint64_t v112 = a12;
  unint64_t v111 = a11;
  uint64_t v110 = a10;
  uint64_t v16 = sub_24EF86DF0();
  uint64_t v125 = *(void *)(v16 - 8);
  uint64_t v126 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v124 = (char *)v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24EF86F10();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v122 = (char *)v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_24EF86F30();
  uint64_t v123 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v121 = (char *)v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24EF86EF0();
  uint64_t v119 = *(void *)(v21 - 8);
  uint64_t v120 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v114 = (char *)v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = a4;
  uint64_t v149 = a7;
  uint64_t v150 = a10;
  unint64_t v151 = a11;
  uint64_t v152 = a12;
  uint64_t v153 = a13;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  uint64_t v23 = sub_24EF87730();
  sub_24EF86C00();
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986400);
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986408);
  sub_24EF86DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269986410);
  swift_getTupleTypeMetadata2();
  sub_24EF874A0();
  swift_getWitnessTable();
  sub_24EF873B0();
  sub_24EF86C00();
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985AF0);
  sub_24EF86C00();
  v147[11] = swift_getWitnessTable();
  v147[12] = MEMORY[0x263F18C10];
  v147[9] = swift_getWitnessTable();
  v147[10] = MEMORY[0x263F18860];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = sub_24EEFD4C4(&qword_269985AE8, &qword_269985AF0);
  v147[7] = WitnessTable;
  v147[8] = v25;
  swift_getWitnessTable();
  uint64_t v26 = sub_24EF87390();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v148 = v26;
  uint64_t v149 = (ValueMetadata *)v27;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859F0);
  uint64_t v28 = sub_24EF86C00();
  uint64_t v148 = v26;
  uint64_t v149 = (ValueMetadata *)v27;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = sub_24EEFD4C4(&qword_2699859E8, &qword_2699859F0);
  v147[5] = OpaqueTypeConformance2;
  v147[6] = v30;
  uint64_t v31 = swift_getWitnessTable();
  unint64_t v32 = sub_24EEF97F4();
  uint64_t v148 = v28;
  uint64_t v149 = &type metadata for FilterButtonStyle;
  uint64_t v150 = v31;
  unint64_t v151 = v32;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859E0);
  uint64_t v33 = sub_24EF86C00();
  uint64_t v148 = v28;
  uint64_t v149 = &type metadata for FilterButtonStyle;
  uint64_t v150 = v31;
  unint64_t v151 = v32;
  uint64_t v34 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = sub_24EEFD4C4(&qword_2699859D8, &qword_2699859E0);
  v147[3] = v34;
  v147[4] = v35;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v148 = v33;
  uint64_t v149 = (ValueMetadata *)v36;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v148 = v23;
  uint64_t v149 = (ValueMetadata *)MEMORY[0x263F8D310];
  uint64_t v150 = OpaqueTypeMetadata2;
  unint64_t v151 = v38;
  uint64_t v152 = MEMORY[0x263F8D320];
  sub_24EF87420();
  uint64_t v148 = v33;
  uint64_t v149 = (ValueMetadata *)v36;
  v147[2] = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v39 = sub_24EF87490();
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v148 = v39;
  uint64_t v149 = (ValueMetadata *)v40;
  v90[2] = swift_getOpaqueTypeMetadata2();
  uint64_t v148 = v39;
  uint64_t v149 = (ValueMetadata *)v40;
  v90[1] = swift_getOpaqueTypeConformance2();
  uint64_t v41 = sub_24EF86B50();
  uint64_t v99 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v43 = (char *)v90 - v42;
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v148 = v41;
  uint64_t v149 = (ValueMetadata *)v44;
  uint64_t v45 = swift_getOpaqueTypeMetadata2();
  uint64_t v96 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  v90[4] = v44;
  uint64_t v91 = (char *)v90 - v46;
  uint64_t v148 = v41;
  uint64_t v149 = (ValueMetadata *)v44;
  uint64_t v47 = swift_getOpaqueTypeConformance2();
  uint64_t v48 = (ValueMetadata *)v129;
  uint64_t v148 = v45;
  uint64_t v149 = (ValueMetadata *)v129;
  unint64_t v49 = MEMORY[0x263F1A480];
  uint64_t v150 = v47;
  unint64_t v151 = MEMORY[0x263F1A480];
  uint64_t v50 = swift_getOpaqueTypeMetadata2();
  uint64_t v103 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v94 = (char *)v90 - v51;
  uint64_t v148 = v45;
  uint64_t v149 = v48;
  v90[3] = v47;
  uint64_t v150 = v47;
  unint64_t v151 = v49;
  uint64_t v52 = swift_getOpaqueTypeConformance2();
  uint64_t v105 = v50;
  uint64_t v148 = v50;
  uint64_t v149 = (ValueMetadata *)v52;
  uint64_t v100 = v52;
  uint64_t v101 = swift_getOpaqueTypeMetadata2();
  uint64_t v104 = *(void *)(v101 - 8);
  uint64_t v53 = MEMORY[0x270FA5388](v101);
  uint64_t v106 = (char *)v90 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v93 = (char *)v90 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v102 = (char *)v90 - v58;
  uint64_t v59 = v131;
  uint64_t v60 = *(void *)(v131 - 8);
  uint64_t v61 = MEMORY[0x270FA5388](v57);
  uint64_t v63 = (char *)v90 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = MEMORY[0x270FA5388](v61);
  uint64_t v66 = (char *)v90 - v65;
  uint64_t v67 = v115;
  (*(void (**)(uint64_t))(v115 + 24))(v64);
  uint64_t v128 = v66;
  uint64_t v68 = v130;
  sub_24EF7FD6C(v63, v59, v130);
  uint64_t v92 = v60;
  uint64_t v69 = *(uint64_t (**)(char *, uint64_t))(v60 + 8);
  uint64_t v95 = v63;
  uint64_t v97 = v69;
  uint64_t v98 = v60 + 8;
  v69(v63, v59);
  sub_24EF86F50();
  uint64_t v132 = v107;
  uint64_t v133 = v108;
  uint64_t v134 = v59;
  uint64_t v135 = v116;
  uint64_t v136 = v109;
  uint64_t v137 = v117;
  uint64_t v138 = v110;
  unint64_t v139 = v111;
  uint64_t v140 = v112;
  uint64_t v141 = v113;
  uint64_t v142 = v68;
  uint64_t v143 = v118;
  uint64_t v144 = v67;
  sub_24EF73D3C();
  uint64_t v70 = v114;
  sub_24EF86ED0();
  LOBYTE(v59) = sub_24EF86F70();
  unsigned __int8 v71 = sub_24EF86F50();
  sub_24EF86F60();
  sub_24EF86F60();
  if (sub_24EF86F60() != v59) {
    sub_24EF86F60();
  }
  sub_24EF86F60();
  if (sub_24EF86F60() != v71) {
    sub_24EF86F60();
  }
  uint64_t v72 = v94;
  uint64_t v73 = v91;
  sub_24EF871B0();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v70, v120);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v43, v41);
  sub_24EF86F00();
  uint64_t v74 = v121;
  sub_24EF86F20();
  uint64_t v75 = v129;
  sub_24EF871E0();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v74, v75);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v73, v45);
  uint64_t v76 = v124;
  sub_24EF86DE0();
  LOBYTE(v75) = sub_24EF86F50();
  sub_24EF86F60();
  sub_24EF86F60();
  if (sub_24EF86F60() != v75) {
    sub_24EF86F60();
  }
  uint64_t v77 = v93;
  uint64_t v78 = v105;
  uint64_t v79 = (ValueMetadata *)v100;
  sub_24EF871D0();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v76, v126);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v72, v78);
  uint64_t v148 = v78;
  uint64_t v149 = v79;
  uint64_t v80 = swift_getOpaqueTypeConformance2();
  uint64_t v82 = v101;
  long long v81 = v102;
  sub_24EF7FD6C(v77, v101, v80);
  uint64_t v83 = v104;
  long long v84 = *(void (**)(char *, uint64_t))(v104 + 8);
  v84(v77, v82);
  uint64_t v85 = v95;
  uint64_t v86 = v131;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v95, v128, v131);
  uint64_t v148 = (uint64_t)v85;
  uint64_t v87 = (ValueMetadata *)v106;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v106, v81, v82);
  uint64_t v149 = v87;
  v147[0] = v86;
  v147[1] = v82;
  uint64_t v145 = v130;
  uint64_t v146 = v80;
  sub_24EF7FDA8((uint64_t)&v148, 2uLL, (uint64_t)v147);
  v84(v81, v82);
  uint64_t v88 = v97;
  v97(v128, v86);
  v84((char *)v87, v82);
  return v88(v85, v86);
}

uint64_t sub_24EF35788@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF348FC(*(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(ValueMetadata **)(v1 + 48), *(void *)(v1 + 56), a1, *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96));
}

uint64_t sub_24EF357C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EF35824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, ValueMetadata *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v64 = a6;
  uint64_t v65 = a8;
  uint64_t v54 = a4;
  uint64_t v55 = a7;
  uint64_t v61 = a1;
  uint64_t v62 = a5;
  uint64_t v53 = a3;
  uint64_t v66 = a2;
  uint64_t v67 = a9;
  uint64_t v63 = a14;
  uint64_t v59 = a13;
  uint64_t v58 = a12;
  unint64_t v57 = a11;
  uint64_t v56 = a10;
  uint64_t v16 = sub_24EF86E40();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v60 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = a4;
  uint64_t v92 = a7;
  uint64_t v93 = a10;
  unint64_t v94 = a11;
  uint64_t v95 = a12;
  uint64_t v96 = a13;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  uint64_t v18 = sub_24EF87730();
  sub_24EF86C00();
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986400);
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986408);
  sub_24EF86DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269986410);
  swift_getTupleTypeMetadata2();
  sub_24EF874A0();
  swift_getWitnessTable();
  sub_24EF873B0();
  sub_24EF86C00();
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985AF0);
  sub_24EF86C00();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v90 = MEMORY[0x263F18C10];
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v88 = MEMORY[0x263F18860];
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = sub_24EEFD4C4(&qword_269985AE8, &qword_269985AF0);
  uint64_t v85 = v19;
  uint64_t v86 = v20;
  swift_getWitnessTable();
  uint64_t v21 = sub_24EF87390();
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v91 = v21;
  uint64_t v92 = (ValueMetadata *)v22;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859F0);
  uint64_t v23 = sub_24EF86C00();
  uint64_t v91 = v21;
  uint64_t v92 = (ValueMetadata *)v22;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v25 = sub_24EEFD4C4(&qword_2699859E8, &qword_2699859F0);
  uint64_t v83 = OpaqueTypeConformance2;
  uint64_t v84 = v25;
  uint64_t v26 = swift_getWitnessTable();
  unint64_t v27 = sub_24EEF97F4();
  uint64_t v91 = v23;
  uint64_t v92 = &type metadata for FilterButtonStyle;
  uint64_t v93 = v26;
  unint64_t v94 = v27;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859E0);
  uint64_t v28 = sub_24EF86C00();
  uint64_t v91 = v23;
  uint64_t v92 = &type metadata for FilterButtonStyle;
  uint64_t v93 = v26;
  unint64_t v94 = v27;
  uint64_t v29 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = sub_24EEFD4C4(&qword_2699859D8, &qword_2699859E0);
  uint64_t v81 = v29;
  uint64_t v82 = v30;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v91 = v28;
  uint64_t v92 = (ValueMetadata *)v31;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v91 = v18;
  uint64_t v92 = (ValueMetadata *)MEMORY[0x263F8D310];
  uint64_t v93 = OpaqueTypeMetadata2;
  unint64_t v94 = v33;
  uint64_t v95 = MEMORY[0x263F8D320];
  sub_24EF87420();
  uint64_t v91 = v28;
  uint64_t v92 = (ValueMetadata *)v31;
  uint64_t v80 = swift_getOpaqueTypeConformance2();
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v34 = sub_24EF87490();
  uint64_t v52 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)v47 - v35;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v91 = v34;
  uint64_t v92 = (ValueMetadata *)v48;
  uint64_t v51 = MEMORY[0x263F1AD90];
  uint64_t v37 = swift_getOpaqueTypeMetadata2();
  uint64_t v50 = *(void *)(v37 - 8);
  uint64_t v38 = MEMORY[0x270FA5388](v37);
  uint64_t v40 = (char *)v47 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v42 = (char *)v47 - v41;
  swift_bridgeObjectRetain();
  v47[1] = sub_24EF86D30();
  uint64_t v68 = v53;
  uint64_t v69 = v54;
  uint64_t v70 = v62;
  uint64_t v71 = v64;
  uint64_t v72 = v55;
  uint64_t v73 = v65;
  uint64_t v74 = v56;
  unint64_t v75 = v57;
  uint64_t v76 = v58;
  uint64_t v77 = v59;
  uint64_t v78 = v63;
  uint64_t v79 = v66;
  sub_24EF4FA50();
  sub_24EF87480();
  uint64_t v43 = (ValueMetadata *)v48;
  sub_24EF871C0();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v34);
  uint64_t v91 = v34;
  uint64_t v92 = v43;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  sub_24EF7FD6C(v40, v37, v44);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v50 + 8);
  v45(v40, v37);
  sub_24EF7FD6C(v42, v37, v44);
  return ((uint64_t (*)(char *, uint64_t))v45)(v42, v37);
}

uint64_t sub_24EF36008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v67 = a8;
  uint64_t v59 = a7;
  uint64_t v63 = a6;
  uint64_t v57 = a5;
  uint64_t v56 = a4;
  uint64_t v62 = a3;
  uint64_t v54 = a2;
  uint64_t v61 = a1;
  uint64_t v60 = a9;
  uint64_t v58 = a13;
  uint64_t v65 = a12;
  uint64_t v64 = a11;
  uint64_t v66 = a10;
  uint64_t v96 = a12;
  type metadata accessor for Option();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = sub_24EF87730();
  sub_24EF86C00();
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986400);
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986408);
  sub_24EF86DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269986410);
  swift_getTupleTypeMetadata2();
  sub_24EF874A0();
  swift_getWitnessTable();
  sub_24EF873B0();
  sub_24EF86C00();
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985AF0);
  sub_24EF86C00();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v90 = MEMORY[0x263F18C10];
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v88 = MEMORY[0x263F18860];
  uint64_t v85 = swift_getWitnessTable();
  uint64_t v86 = sub_24EEFD4C4(&qword_269985AE8, &qword_269985AF0);
  swift_getWitnessTable();
  sub_24EF87390();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859F0);
  sub_24EF86C00();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v84 = sub_24EEFD4C4(&qword_2699859E8, &qword_2699859F0);
  swift_getWitnessTable();
  sub_24EEF97F4();
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859E0);
  uint64_t v14 = sub_24EF86C00();
  uint64_t v81 = swift_getOpaqueTypeConformance2();
  uint64_t v82 = sub_24EEFD4C4(&qword_2699859D8, &qword_2699859E0);
  uint64_t v50 = v14;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v46 = MEMORY[0x263F882B0];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v51 = v13;
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v91 = v13;
  uint64_t v92 = MEMORY[0x263F8D310];
  uint64_t v93 = OpaqueTypeMetadata2;
  uint64_t v94 = v47;
  uint64_t v95 = MEMORY[0x263F8D320];
  uint64_t v52 = sub_24EF87420();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v52);
  uint64_t v44 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v45 = (char *)&v44 - v17;
  uint64_t v18 = (_OWORD *)v61;
  uint64_t v80 = *(void *)(v61 + 56);
  uint64_t v19 = sub_24EF87730();
  uint64_t v20 = swift_getWitnessTable();
  MEMORY[0x2533507D0](&v91, v19, v20);
  uint64_t v80 = v91;
  sub_24EF87890();
  swift_getWitnessTable();
  uint64_t v80 = sub_24EF87740();
  uint64_t v21 = v54;
  uint64_t v68 = v54;
  uint64_t v22 = v62;
  uint64_t v69 = v62;
  uint64_t v23 = v56;
  uint64_t v70 = v56;
  uint64_t v24 = v57;
  uint64_t v71 = v57;
  uint64_t v25 = v63;
  uint64_t v72 = v63;
  uint64_t v26 = v59;
  uint64_t v73 = v59;
  uint64_t v74 = v67;
  uint64_t v75 = v66;
  uint64_t v27 = v64;
  uint64_t v76 = v64;
  uint64_t v77 = v65;
  uint64_t v28 = v58;
  uint64_t v78 = v58;
  TupleTypeMetadata2 = swift_getKeyPath();
  uint64_t v29 = swift_allocObject();
  long long v30 = v18[1];
  *(_OWORD *)(v29 + 104) = *v18;
  *(_OWORD *)(v29 + 120) = v30;
  long long v31 = v18[3];
  *(_OWORD *)(v29 + 136) = v18[2];
  *(void *)(v29 + 16) = v21;
  *(void *)(v29 + 24) = v22;
  *(void *)(v29 + 32) = v23;
  *(void *)(v29 + 40) = v24;
  *(void *)(v29 + 48) = v25;
  *(void *)(v29 + 56) = v26;
  uint64_t v32 = v67;
  uint64_t v33 = v66;
  *(void *)(v29 + 64) = v67;
  *(void *)(v29 + 72) = v33;
  *(void *)(v29 + 80) = v27;
  uint64_t v34 = v65;
  *(void *)(v29 + 88) = v65;
  *(void *)(v29 + 96) = v28;
  *(_OWORD *)(v29 + 152) = v31;
  uint64_t v35 = (void *)swift_allocObject();
  uint64_t v36 = v62;
  v35[2] = v21;
  v35[3] = v36;
  v35[4] = v23;
  v35[5] = v24;
  v35[6] = v63;
  v35[7] = v26;
  v35[8] = v32;
  v35[9] = v33;
  v35[10] = v64;
  v35[11] = v34;
  v35[12] = v28;
  v35[13] = sub_24EF3A000;
  v35[14] = v29;
  sub_24EF01714(v61);
  uint64_t v91 = v50;
  uint64_t v92 = v49;
  uint64_t v43 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = v44;
  sub_24EF87410();
  uint64_t v79 = v43;
  uint64_t v38 = v52;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = v45;
  sub_24EF7FD6C(v37, v38, v39);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v53 + 8);
  v41(v37, v38);
  sub_24EF7FD6C(v40, v38, v39);
  return ((uint64_t (*)(char *, uint64_t))v41)(v40, v38);
}

uint64_t sub_24EF36910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v157 = a5;
  uint64_t v158 = a8;
  uint64_t v167 = a7;
  uint64_t v168 = a1;
  uint64_t v165 = a6;
  uint64_t v155 = a4;
  uint64_t v156 = a2;
  long long v163 = a3;
  uint64_t v153 = a9;
  uint64_t v166 = a15;
  uint64_t v160 = a14;
  uint64_t v161 = a13;
  unint64_t v162 = a12;
  uint64_t v164 = a10;
  uint64_t v159 = a11;
  uint64_t v17 = sub_24EF87590();
  uint64_t v151 = *(void *)(v17 - 8);
  uint64_t v152 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v150 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24EF87530();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v149 = (char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24EF87550();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v147 = (char *)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985A88);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v148 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_24EF87400();
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v144 = (char *)&v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985A90);
  MEMORY[0x270FA5388](v146);
  uint64_t v145 = (uint64_t)&v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = a5;
  unint64_t v194 = (ValueMetadata *)a8;
  uint64_t v195 = a11;
  unint64_t v196 = a12;
  uint64_t v197 = a13;
  uint64_t v198 = a14;
  uint64_t v169 = type metadata accessor for Option();
  uint64_t v154 = *(void *)(v169 - 8);
  unint64_t v142 = *(void *)(v154 + 64);
  MEMORY[0x270FA5388](v169);
  uint64_t v29 = (char *)&v112 - v28;
  uint64_t v114 = (char *)&v112 - v28;
  sub_24EF86C00();
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986400);
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986408);
  sub_24EF86DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269986410);
  swift_getTupleTypeMetadata2();
  sub_24EF874A0();
  swift_getWitnessTable();
  sub_24EF873B0();
  sub_24EF86C00();
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985AF0);
  uint64_t v30 = sub_24EF86C00();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v192 = MEMORY[0x263F18C10];
  uint64_t v189 = swift_getWitnessTable();
  uint64_t v190 = MEMORY[0x263F18860];
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v32 = sub_24EEFD4C4(&qword_269985AE8, &qword_269985AF0);
  uint64_t v187 = v31;
  uint64_t v188 = v32;
  uint64_t v128 = v30;
  uint64_t v127 = swift_getWitnessTable();
  uint64_t v33 = sub_24EF87390();
  uint64_t v131 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v125 = (char *)&v112 - v34;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v193 = v33;
  unint64_t v194 = (ValueMetadata *)v35;
  uint64_t v36 = v33;
  uint64_t v119 = v35;
  uint64_t v120 = v33;
  uint64_t v37 = (ValueMetadata *)v35;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v135 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v122 = (char *)&v112 - v38;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859F0);
  uint64_t v39 = sub_24EF86C00();
  uint64_t v134 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v130 = (char *)&v112 - v40;
  uint64_t v193 = v36;
  unint64_t v194 = v37;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v126 = OpaqueTypeConformance2;
  uint64_t v42 = sub_24EEFD4C4(&qword_2699859E8, &qword_2699859F0);
  uint64_t v185 = OpaqueTypeConformance2;
  uint64_t v186 = v42;
  uint64_t v43 = swift_getWitnessTable();
  unint64_t v44 = sub_24EEF97F4();
  uint64_t v193 = v39;
  unint64_t v194 = &type metadata for FilterButtonStyle;
  uint64_t v45 = v39;
  uint64_t v115 = v39;
  uint64_t v195 = v43;
  unint64_t v196 = v44;
  unint64_t v117 = v44;
  uint64_t v118 = v43;
  unint64_t v46 = v44;
  uint64_t v124 = swift_getOpaqueTypeMetadata2();
  uint64_t v129 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  uint64_t v123 = (char *)&v112 - v47;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699859E0);
  uint64_t v48 = sub_24EF86C00();
  uint64_t v137 = v48;
  uint64_t v143 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v121 = (char *)&v112 - v49;
  uint64_t v193 = v45;
  unint64_t v194 = &type metadata for FilterButtonStyle;
  uint64_t v195 = v43;
  unint64_t v196 = v46;
  uint64_t v50 = swift_getOpaqueTypeConformance2();
  uint64_t v116 = v50;
  uint64_t v51 = sub_24EEFD4C4(&qword_2699859D8, &qword_2699859E0);
  uint64_t v183 = v50;
  uint64_t v184 = v51;
  uint64_t v136 = swift_getWitnessTable();
  uint64_t v193 = v48;
  unint64_t v194 = (ValueMetadata *)v136;
  uint64_t v139 = MEMORY[0x263F882B0];
  uint64_t v52 = swift_getOpaqueTypeMetadata2();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v140 = v52;
  uint64_t v141 = v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v133 = (char *)&v112 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v54);
  uint64_t v138 = (char *)&v112 - v56;
  uint64_t v57 = v154;
  (*(void (**)(char *, uint64_t, uint64_t))(v154 + 16))(v29, v156, v169);
  unint64_t v113 = (*(unsigned __int8 *)(v57 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  unint64_t v142 = (v142 + v113 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v58 = swift_allocObject();
  uint64_t v59 = v163;
  uint64_t v60 = v164;
  long long v61 = v163[1];
  *(_OWORD *)(v58 + 104) = *v163;
  *(_OWORD *)(v58 + 120) = v61;
  long long v62 = v59[3];
  *(_OWORD *)(v58 + 136) = v59[2];
  uint64_t v63 = v155;
  uint64_t v65 = v157;
  uint64_t v64 = v158;
  *(void *)(v58 + 16) = v155;
  *(void *)(v58 + 24) = v65;
  uint64_t v67 = v165;
  uint64_t v66 = v166;
  uint64_t v68 = v167;
  *(void *)(v58 + 32) = v165;
  *(void *)(v58 + 40) = v68;
  *(void *)(v58 + 48) = v64;
  *(void *)(v58 + 56) = v60;
  uint64_t v69 = v159;
  unint64_t v70 = v162;
  *(void *)(v58 + 64) = v159;
  *(void *)(v58 + 72) = v70;
  uint64_t v71 = v160;
  *(void *)(v58 + 80) = v161;
  *(void *)(v58 + 88) = v71;
  *(void *)(v58 + 96) = v66;
  *(_OWORD *)(v58 + 152) = v62;
  (*(void (**)(unint64_t, char *, uint64_t))(v154 + 32))(v58 + v113, v114, v169);
  *(void *)(v58 + v142) = v168;
  uint64_t v170 = v63;
  uint64_t v171 = v65;
  uint64_t v172 = v67;
  uint64_t v173 = v68;
  uint64_t v174 = v64;
  uint64_t v175 = v60;
  uint64_t v72 = v60;
  uint64_t v176 = v69;
  uint64_t v74 = v161;
  unint64_t v73 = v162;
  unint64_t v177 = v162;
  uint64_t v178 = v161;
  uint64_t v75 = v160;
  uint64_t v179 = v160;
  uint64_t v180 = v66;
  uint64_t v76 = v156;
  uint64_t v181 = v156;
  uint64_t v182 = v163;
  sub_24EF01714((uint64_t)v163);
  uint64_t v77 = v125;
  sub_24EF87380();
  sub_24EF86F50();
  sub_24EF87470();
  uint64_t v78 = v122;
  uint64_t v79 = v120;
  sub_24EF87200();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v77, v79);
  uint64_t v80 = *MEMORY[0x263F19860];
  uint64_t v81 = sub_24EF86D40();
  uint64_t v82 = (uint64_t)v144;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v81 - 8) + 104))(v144, v80, v81);
  *(void *)&long long v111 = v73;
  *((void *)&v111 + 1) = v74;
  uint64_t v83 = v157;
  uint64_t v84 = sub_24EF01A30(v76, v155, v157, v165, v167, v158, v72, v159, v111, v75);
  uint64_t v85 = (uint64_t (*)(void))MEMORY[0x263F1B7A0];
  uint64_t v86 = v145;
  sub_24EF3A850(v82, v145, MEMORY[0x263F1B7A0]);
  *(void *)(v86 + *(int *)(v146 + 36)) = v84;
  sub_24EF3A8B8(v82, v85);
  sub_24EF87460();
  sub_24EF3A6D8();
  uint64_t v87 = v130;
  uint64_t v88 = OpaqueTypeMetadata2;
  sub_24EF87110();
  sub_24EEFD568(v86, &qword_269985A90);
  (*(void (**)(char *, uint64_t))(v135 + 8))(v78, v88);
  uint64_t v89 = v123;
  uint64_t v90 = v115;
  sub_24EF87140();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v87, v90);
  uint64_t v91 = v121;
  uint64_t v92 = v124;
  sub_24EF87270();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v89, v92);
  Option.identifier.getter();
  uint64_t v93 = v168;
  sub_24EF87540();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985B10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24EF88500;
  *(void *)(inited + 32) = 1701667182;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v95 = (*(uint64_t (**)(uint64_t))(v164 + 24))(v83);
  uint64_t v96 = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v95;
  *(void *)(inited + 56) = v97;
  *(void *)(inited + 72) = v96;
  strcpy((char *)(inited + 80), "impressionType");
  *(unsigned char *)(inited + 95) = -18;
  *(void *)(inited + 96) = 0x7265746C6966;
  *(void *)(inited + 104) = 0xE600000000000000;
  *(void *)(inited + 120) = v96;
  *(void *)(inited + 128) = 0x6973736572706D69;
  uint64_t v98 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 136) = 0xEF7865646E496E6FLL;
  *(void *)(inited + 144) = v93;
  *(void *)(inited + 168) = v98;
  *(void *)(inited + 176) = 0x657079546469;
  *(void *)(inited + 216) = v96;
  *(void *)(inited + 184) = 0xE600000000000000;
  *(void *)(inited + 192) = 0x64695F737469;
  *(void *)(inited + 200) = 0xE600000000000000;
  sub_24EF72538(inited);
  sub_24EF87520();
  uint64_t v99 = MEMORY[0x263F8EE78];
  sub_24EF78EE8(MEMORY[0x263F8EE78]);
  sub_24EF78EE8(v99);
  uint64_t v100 = (uint64_t)v148;
  sub_24EF87560();
  uint64_t v101 = sub_24EF87570();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v100, 0, 1, v101);
  uint64_t v102 = v150;
  sub_24EF87580();
  uint64_t v103 = v133;
  uint64_t v105 = (ValueMetadata *)v136;
  uint64_t v104 = v137;
  sub_24EF870E0();
  (*(void (**)(char *, uint64_t))(v151 + 8))(v102, v152);
  sub_24EEFD568(v100, &qword_269985A88);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v91, v104);
  uint64_t v193 = v104;
  unint64_t v194 = v105;
  uint64_t v106 = swift_getOpaqueTypeConformance2();
  uint64_t v107 = v138;
  uint64_t v108 = v140;
  sub_24EF7FD6C(v103, v140, v106);
  uint64_t v109 = *(void (**)(char *, uint64_t))(v141 + 8);
  v109(v103, v108);
  sub_24EF7FD6C(v107, v108, v106);
  return ((uint64_t (*)(char *, uint64_t))v109)(v107, v108);
}

uint64_t sub_24EF378BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, uint64_t a12)
{
  uint64_t v54 = a8;
  uint64_t v52 = a7;
  uint64_t v50 = a6;
  uint64_t v49 = a5;
  uint64_t v47 = a4;
  uint64_t v41 = a3;
  uint64_t v53 = a2;
  uint64_t v51 = a1;
  uint64_t v57 = a9;
  uint64_t v48 = a12;
  long long v46 = a11;
  long long v44 = a10;
  uint64_t v56 = sub_24EF87400();
  MEMORY[0x270FA5388](v56);
  uint64_t v55 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EF86C00();
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986400);
  sub_24EF86C00();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986408);
  sub_24EF86DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269986410);
  swift_getTupleTypeMetadata2();
  sub_24EF874A0();
  v39[1] = swift_getWitnessTable();
  uint64_t v13 = sub_24EF873B0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v39 - v15;
  uint64_t v17 = sub_24EF86C00();
  uint64_t v40 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v39 - v18;
  uint64_t v20 = sub_24EF86C00();
  uint64_t v43 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v39 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985AF0);
  uint64_t v23 = sub_24EF86C00();
  uint64_t v45 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v42 = (char *)v39 - v27;
  sub_24EF86D30();
  uint64_t v58 = v41;
  uint64_t v59 = v47;
  uint64_t v60 = v49;
  uint64_t v61 = v50;
  uint64_t v62 = v52;
  uint64_t v63 = v54;
  long long v64 = v44;
  long long v65 = v46;
  uint64_t v66 = v48;
  uint64_t v67 = v51;
  uint64_t v68 = v53;
  sub_24EF873A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EF87250();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_24EF87460();
  uint64_t v73 = WitnessTable;
  uint64_t v74 = MEMORY[0x263F18C10];
  uint64_t v29 = swift_getWitnessTable();
  sub_24EF87230();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v17);
  uint64_t v30 = *MEMORY[0x263F19860];
  uint64_t v31 = sub_24EF86D40();
  uint64_t v32 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v55, v30, v31);
  uint64_t v71 = v29;
  uint64_t v72 = MEMORY[0x263F18860];
  uint64_t v33 = swift_getWitnessTable();
  sub_24EF3A808(&qword_2699864B8, MEMORY[0x263F1B7A0]);
  sub_24EF87160();
  sub_24EF3A8B8(v32, MEMORY[0x263F1B7A0]);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v20);
  uint64_t v34 = sub_24EEFD4C4(&qword_269985AE8, &qword_269985AF0);
  uint64_t v69 = v33;
  uint64_t v70 = v34;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = v42;
  sub_24EF7FD6C(v26, v23, v35);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v45 + 8);
  v37(v26, v23);
  sub_24EF7FD6C(v36, v23, v35);
  return ((uint64_t (*)(char *, uint64_t))v37)(v36, v23);
}

uint64_t sub_24EF38004@<X0>(uint64_t a1@<X0>, void (**a2)(uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v158 = a7;
  uint64_t v163 = a6;
  uint64_t v153 = a5;
  uint64_t v156 = a3;
  uint64_t v145 = a2;
  uint64_t v150 = a9;
  uint64_t v152 = a14;
  *(void *)&v151[16] = a13;
  *(void *)&v151[8] = a12;
  *(void *)uint64_t v151 = a11;
  uint64_t v164 = a10;
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699864C0);
  uint64_t v18 = MEMORY[0x270FA5388](v133);
  uint64_t v134 = (char *)&v131 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v136 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24EF86C00();
  uint64_t v138 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v135 = (char *)&v131 - v22;
  uint64_t v162 = v23;
  uint64_t v24 = sub_24EF86C00();
  uint64_t v140 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v137 = (char *)&v131 - v25;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986400);
  uint64_t v161 = v24;
  uint64_t v160 = sub_24EF86C00();
  uint64_t v143 = *(void *)(v160 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v160);
  unint64_t v142 = (char *)&v131 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v141 = (char *)&v131 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986408);
  MEMORY[0x270FA5388](v29);
  uint64_t v131 = (uint64_t *)((char *)&v131 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699864C8);
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v144 = (uint64_t)&v131 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for Artwork();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v131 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  uint64_t v40 = (char *)&v131 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v132 = (uint64_t)&v131 - v41;
  uint64_t v146 = v29;
  uint64_t v42 = sub_24EF86DD0();
  uint64_t v148 = *(void *)(v42 - 8);
  uint64_t v149 = v42;
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  uint64_t v147 = (char *)&v131 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v43);
  uint64_t v154 = (char *)&v131 - v45;
  uint64_t v155 = a1;
  long long v46 = *(uint64_t (**)(uint64_t, uint64_t))(a8 + 8);
  uint64_t v157 = a4;
  uint64_t v159 = a8;
  uint64_t v47 = v46(a4, a8);
  uint64_t v48 = *(void *)(v47 + 56);
  uint64_t v165 = v47 + 56;
  uint64_t v49 = 1 << *(unsigned char *)(v47 + 32);
  uint64_t v50 = -1;
  if (v49 < 64) {
    uint64_t v50 = ~(-1 << v49);
  }
  unint64_t v51 = v50 & v48;
  int64_t v166 = (unint64_t)(v49 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v52 = 0;
  if (!v51) {
    goto LABEL_5;
  }
  while (2)
  {
    unint64_t v53 = __clz(__rbit64(v51));
    v51 &= v51 - 1;
    unint64_t v54 = v53 | (v52 << 6);
LABEL_23:
    sub_24EF3A850(*(void *)(v47 + 48) + *(void *)(v34 + 72) * v54, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for Artwork);
    sub_24EEF7814((uint64_t)v40, (uint64_t)v37);
    switch(v37[*(int *)(v33 + 20)])
    {
      case 9:
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      default:
        char v59 = sub_24EF87A60();
        swift_bridgeObjectRelease();
        if ((v59 & 1) == 0)
        {
          sub_24EF3A8B8((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for Artwork);
          if (v51) {
            continue;
          }
LABEL_5:
          int64_t v55 = v52 + 1;
          uint64_t v56 = v164;
          if (__OFADD__(v52, 1))
          {
            __break(1u);
            goto LABEL_36;
          }
          if (v55 >= v166) {
            goto LABEL_29;
          }
          unint64_t v57 = *(void *)(v165 + 8 * v55);
          ++v52;
          if (!v57)
          {
            int64_t v52 = v55 + 1;
            if (v55 + 1 >= v166) {
              goto LABEL_29;
            }
            unint64_t v57 = *(void *)(v165 + 8 * v52);
            if (!v57)
            {
              int64_t v52 = v55 + 2;
              if (v55 + 2 >= v166) {
                goto LABEL_29;
              }
              unint64_t v57 = *(void *)(v165 + 8 * v52);
              if (!v57)
              {
                int64_t v52 = v55 + 3;
                if (v55 + 3 >= v166) {
                  goto LABEL_29;
                }
                unint64_t v57 = *(void *)(v165 + 8 * v52);
                if (!v57)
                {
                  int64_t v52 = v55 + 4;
                  if (v55 + 4 >= v166) {
                    goto LABEL_29;
                  }
                  unint64_t v57 = *(void *)(v165 + 8 * v52);
                  if (!v57)
                  {
                    int64_t v58 = v55 + 5;
                    if (v58 >= v166)
                    {
LABEL_29:
                      swift_release();
                      uint64_t v61 = 1;
                      uint64_t v62 = v162;
                      uint64_t v63 = v163;
                      uint64_t v60 = v144;
                      goto LABEL_30;
                    }
                    unint64_t v57 = *(void *)(v165 + 8 * v58);
                    if (!v57)
                    {
                      while (1)
                      {
                        int64_t v52 = v58 + 1;
                        if (__OFADD__(v58, 1)) {
                          break;
                        }
                        if (v52 >= v166) {
                          goto LABEL_29;
                        }
                        unint64_t v57 = *(void *)(v165 + 8 * v52);
                        ++v58;
                        if (v57) {
                          goto LABEL_22;
                        }
                      }
LABEL_36:
                      __break(1u);
                      JUMPOUT(0x24EF39138);
                    }
                    int64_t v52 = v58;
                  }
                }
              }
            }
          }
LABEL_22:
          unint64_t v51 = (v57 - 1) & v57;
          unint64_t v54 = __clz(__rbit64(v57)) + (v52 << 6);
          goto LABEL_23;
        }
        swift_release();
LABEL_28:
        uint64_t v60 = v144;
        sub_24EEF7814((uint64_t)v37, v144);
        uint64_t v61 = 0;
        uint64_t v62 = v162;
        uint64_t v63 = v163;
        uint64_t v56 = v164;
LABEL_30:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v60, v61, 1, v33);
        swift_bridgeObjectRelease();
        int v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v60, 1, v33);
        uint64_t v65 = MEMORY[0x263F19100];
        uint64_t v66 = MEMORY[0x263F198F8];
        if (v64 == 1)
        {
          sub_24EEFD568(v60, &qword_2699864C8);
          uint64_t v67 = sub_24EF87460();
          uint64_t v68 = (uint64_t)v131;
          *uint64_t v131 = v67;
          *(void *)(v68 + 8) = v69;
          uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699864D0);
          *(void *)&long long v130 = v56;
          *((void *)&v130 + 1) = *(void *)v151;
          uint64_t v71 = v157;
          uint64_t v72 = v159;
          sub_24EF39160(v157, v159, v68 + *(int *)(v70 + 44), v130, *(long long *)&v151[8]);
          uint64_t v216 = v63;
          uint64_t v217 = v65;
          uint64_t WitnessTable = swift_getWitnessTable();
          uint64_t v215 = v66;
          uint64_t v73 = swift_getWitnessTable();
          uint64_t v74 = sub_24EEFD4C4(&qword_2699864D8, &qword_269986400);
          uint64_t v212 = v73;
          uint64_t v213 = v74;
          uint64_t v75 = v160;
          swift_getWitnessTable();
          sub_24EEFD4C4(&qword_2699864E0, &qword_269986408);
          sub_24EF80064(v68, v75, v146);
          sub_24EEFD568(v68, &qword_269986408);
        }
        else
        {
          uint64_t v76 = v132;
          sub_24EEF7814(v60, v132);
          uint64_t v77 = *v145;
          uint64_t v78 = *MEMORY[0x263F3E1A0];
          uint64_t v79 = sub_24EF86AB0();
          uint64_t v80 = v65;
          uint64_t v81 = (uint64_t)v134;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v79 - 8) + 104))(v134, v78, v79);
          swift_storeEnumTagMultiPayload();
          uint64_t v82 = v136;
          v77(v76, v81, v76 + *(int *)(v33 + 24));
          sub_24EEFD568(v81, &qword_2699864C0);
          sub_24EF87460();
          uint64_t v83 = v156;
          uint64_t v84 = v135;
          sub_24EF87240();
          (*(void (**)(char *, uint64_t))(v139 + 8))(v82, v83);
          uint64_t v171 = v63;
          uint64_t v172 = v80;
          uint64_t v85 = swift_getWitnessTable();
          uint64_t v86 = v137;
          sub_24EF87150();
          (*(void (**)(char *, uint64_t))(v138 + 8))(v84, v62);
          uint64_t v169 = v85;
          uint64_t v170 = MEMORY[0x263F198F8];
          uint64_t v87 = v161;
          uint64_t v88 = swift_getWitnessTable();
          sub_24EF3AB2C();
          uint64_t v89 = (uint64_t)v142;
          sub_24EF872A0();
          (*(void (**)(char *, uint64_t))(v140 + 8))(v86, v87);
          uint64_t v90 = sub_24EEFD4C4(&qword_2699864D8, &qword_269986400);
          uint64_t v167 = v88;
          uint64_t v168 = v90;
          uint64_t v91 = v160;
          uint64_t v92 = swift_getWitnessTable();
          uint64_t v93 = v141;
          sub_24EF7FD6C(v89, v91, v92);
          uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
          v94(v89, v91);
          sub_24EF7FD6C(v93, v91, v92);
          sub_24EEFD4C4(&qword_2699864E0, &qword_269986408);
          sub_24EF7FF6C(v89, v91);
          v94(v89, v91);
          v94((uint64_t)v93, v91);
          sub_24EF3A8B8(v76, (uint64_t (*)(void))type metadata accessor for Artwork);
          uint64_t v72 = v159;
          uint64_t v71 = v157;
        }
        *(void *)&long long v203 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 24))(v71, v72);
        *((void *)&v203 + 1) = v95;
        sub_24EEFD5C4();
        uint64_t v96 = sub_24EF870C0();
        uint64_t v98 = v97;
        char v100 = v99 & 1;
        sub_24EF87050();
        uint64_t v101 = sub_24EF870A0();
        uint64_t v103 = v102;
        char v105 = v104;
        swift_release();
        sub_24EEFD518(v96, v98, v100);
        swift_bridgeObjectRelease();
        uint64_t v106 = sub_24EF87090();
        uint64_t v108 = v107;
        char v110 = v109 & 1;
        sub_24EEFD518(v101, v103, v105 & 1);
        swift_bridgeObjectRelease();
        *(void *)&long long v203 = sub_24EF01CC4(v155, v156, v157, v153, v163, v158, v159, v164, *(long long *)v151, *(uint64_t *)&v151[16]);
        uint64_t v111 = sub_24EF87070();
        uint64_t v113 = v112;
        uint64_t v115 = v114;
        char v117 = v116 & 1;
        sub_24EEFD518(v106, v108, v110);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v118 = sub_24EF87470();
        sub_24EF5FF60(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v203, 0.0, 1, INFINITY, 0, v118, v119, v111, v113, v117, v115);
        sub_24EEFD518(v111, v113, v117);
        swift_bridgeObjectRelease();
        long long v200 = v209;
        long long v201 = v210;
        long long v202 = v211;
        long long v196 = v205;
        long long v197 = v206;
        long long v198 = v207;
        long long v199 = v208;
        long long v194 = v203;
        long long v195 = v204;
        uint64_t v121 = v147;
        uint64_t v120 = v148;
        uint64_t v122 = v154;
        uint64_t v123 = v149;
        (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v147, v154, v149);
        long long v190 = v200;
        long long v191 = v201;
        long long v192 = v202;
        long long v186 = v196;
        long long v187 = v197;
        long long v188 = v198;
        long long v189 = v199;
        long long v184 = v194;
        long long v185 = v195;
        v193[0] = v121;
        v193[1] = &v184;
        sub_24EF01D58((uint64_t)&v194);
        v183[0] = v123;
        v183[1] = __swift_instantiateConcreteTypeFromMangledName(qword_269986410);
        uint64_t v179 = v163;
        uint64_t v180 = MEMORY[0x263F19100];
        uint64_t v177 = swift_getWitnessTable();
        uint64_t v178 = MEMORY[0x263F198F8];
        uint64_t v124 = swift_getWitnessTable();
        uint64_t v125 = sub_24EEFD4C4(&qword_2699864D8, &qword_269986400);
        uint64_t v175 = v124;
        uint64_t v176 = v125;
        uint64_t v126 = swift_getWitnessTable();
        uint64_t v127 = sub_24EEFD4C4(&qword_2699864E0, &qword_269986408);
        uint64_t v173 = v126;
        uint64_t v174 = v127;
        uint64_t v181 = swift_getWitnessTable();
        unint64_t v182 = sub_24EF3AAB8();
        sub_24EF7FDA8((uint64_t)v193, 2uLL, (uint64_t)v183);
        sub_24EF01D98((uint64_t)&v194);
        uint64_t v128 = *(void (**)(char *, uint64_t))(v120 + 8);
        v128(v122, v123);
        long long v209 = v190;
        long long v210 = v191;
        long long v211 = v192;
        long long v205 = v186;
        long long v206 = v187;
        long long v207 = v188;
        long long v208 = v189;
        long long v203 = v184;
        long long v204 = v185;
        sub_24EF01D98((uint64_t)&v203);
        return ((uint64_t (*)(char *, uint64_t))v128)(v121, v123);
    }
  }
}

uint64_t sub_24EF39160@<X0>(uint64_t a1@<X3>, uint64_t a2@<X7>, uint64_t a3@<X8>, long long a4, long long a5)
{
  uint64_t v68 = a3;
  v54[1] = a4;
  v54[0] = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699864F8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v67 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_24EF86BF0();
  uint64_t v56 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v10 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986500);
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  int64_t v55 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986508);
  MEMORY[0x270FA5388](v59);
  unint64_t v57 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986510);
  uint64_t v65 = *(void *)(v13 - 8);
  uint64_t v66 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v61 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986518) - 8;
  uint64_t v15 = MEMORY[0x270FA5388](v64);
  uint64_t v17 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v63 = (uint64_t)v54 - v18;
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v21 = sub_24EF3A918(v19, v20);
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v69 = v21;
  uint64_t v70 = v23;
  sub_24EEFD5C4();
  uint64_t v24 = sub_24EF870C0();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  uint64_t v29 = sub_24EF87090();
  uint64_t v31 = v30;
  LOBYTE(a1) = v32;
  uint64_t v34 = v33;
  sub_24EEFD518(v24, v26, v28);
  swift_bridgeObjectRelease();
  uint64_t v69 = v29;
  uint64_t v70 = v31;
  char v71 = a1 & 1;
  uint64_t v72 = v34;
  uint64_t v35 = v56;
  uint64_t v36 = v58;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v10, *MEMORY[0x263F18D10], v58);
  uint64_t v37 = v55;
  sub_24EF871A0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v36);
  sub_24EEFD518(v69, v70, v71);
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_24EF87050();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v40 = v60;
  uint64_t v41 = (uint64_t)v57;
  uint64_t v42 = v62;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v37, v62);
  uint64_t v43 = (uint64_t *)(v41 + *(int *)(v59 + 36));
  *uint64_t v43 = KeyPath;
  v43[1] = v38;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v37, v42);
  uint64_t v44 = *MEMORY[0x263F1A610];
  uint64_t v45 = sub_24EF87010();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 104))(v67, v44, v45);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v45);
  sub_24EF3AB88();
  uint64_t v48 = v61;
  sub_24EF87120();
  sub_24EEFD568(v47, &qword_2699864F8);
  sub_24EEFD568(v41, &qword_269986508);
  LODWORD(v44) = sub_24EF86E70();
  uint64_t v50 = v65;
  uint64_t v49 = v66;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v17, v48, v66);
  *(_DWORD *)&v17[*(int *)(v64 + 44)] = v44;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v49);
  uint64_t v51 = v63;
  sub_24EF3AC58((uint64_t)v17, v63);
  LODWORD(v44) = sub_24EF86E80();
  sub_24EF3ACC0(v51, (uint64_t)v17);
  uint64_t v52 = v68;
  sub_24EF3ACC0((uint64_t)v17, v68);
  *(_DWORD *)(v52 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269986538) + 48)) = v44;
  sub_24EEFD568(v51, &qword_269986518);
  return sub_24EEFD568((uint64_t)v17, &qword_269986518);
}

uint64_t type metadata accessor for FilterTrainerSectionView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EF397C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EF39EF8@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF35824(*(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(ValueMetadata **)(v1 + 48), *(void *)(v1 + 56), a1, *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96));
}

uint64_t sub_24EF39F38@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF36008(v1[13], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1, v1[9], v1[10], v1[11], v1[12]);
}

uint64_t sub_24EF39F80()
{
  return 88;
}

__n128 sub_24EF39F8C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 64);
  *(void *)(a2 + 80) = *(void *)(a1 + 80);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 64) = v5;
  *(__n128 *)(a2 + 32) = result;
  return result;
}

uint64_t sub_24EF39FB0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24EF3A000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24EF36910(a1, a2, (_OWORD *)(v3 + 104), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), a3, *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80), *(void *)(v3 + 88), *(void *)(v3 + 96));
}

uint64_t sub_24EF3A044()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EF3A07C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(type metadata accessor for Option() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24EF3A190()
{
  return sub_24EF3A7C0((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EF378BC);
}

char *sub_24EF3A1A8(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v46[3] = a4;
  if (a1 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v11 = a5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = MEMORY[0x263F8EE78];
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = 15;
  uint64_t v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v16 = HIBYTE(a6) & 0xF) : (uint64_t v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v15 = v11 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_24EF3A5C8(v30 | (v15 << 16), v43, a2 & 1, v14);
    swift_bridgeObjectRelease();
    uint64_t v10 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_38;
  }
  uint64_t v38 = a1;
  uint64_t v39 = v14;
  unint64_t v44 = 4 * v16;
  uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  unint64_t v9 = 15;
  unint64_t v8 = 15;
  unint64_t v17 = 15;
  while (1)
  {
    v46[0] = sub_24EF876B0();
    v46[1] = v18;
    uint64_t v19 = a3(v46);
    if (v7)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    uint64_t v6 = v19;
    swift_bridgeObjectRelease();
    if (v6) {
      break;
    }
    unint64_t v9 = sub_24EF87680();
LABEL_9:
    if (v44 == v9 >> 14) {
      goto LABEL_29;
    }
  }
  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v9 = sub_24EF87680();
    *(void *)(v43 + 16) = v9;
    unint64_t v8 = v9;
    unint64_t v17 = v9;
    goto LABEL_9;
  }
  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v20 = sub_24EF876C0();
  uint64_t v40 = v21;
  uint64_t v41 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_24EF1394C(0, *((void *)v10 + 2) + 1, 1, v10);
  }
  unint64_t v27 = *((void *)v10 + 2);
  unint64_t v26 = *((void *)v10 + 3);
  uint64_t v6 = v27 + 1;
  if (v27 >= v26 >> 1) {
    uint64_t v10 = sub_24EF1394C((char *)(v26 > 1), v27 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v6;
  char v28 = &v10[32 * v27];
  *((void *)v28 + 4) = v41;
  *((void *)v28 + 5) = v23;
  *((void *)v28 + 6) = v25;
  *((void *)v28 + 7) = v40;
  *(void *)(v39 + 16) = v10;
  uint64_t v29 = sub_24EF87680();
  unint64_t v9 = v29;
  *(void *)(v43 + 16) = v29;
  if (*((void *)v10 + 2) != v38)
  {
    unint64_t v8 = v29;
    unint64_t v17 = v29;
    goto LABEL_9;
  }
  unint64_t v17 = v29;
  unint64_t v8 = v29;
LABEL_29:
  if (v44 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  if (v44 >= v17 >> 14)
  {
    uint64_t v6 = sub_24EF876C0();
    unint64_t v8 = v31;
    unint64_t v9 = v32;
    uint64_t v11 = v33;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_43;
    }
    goto LABEL_34;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t v10 = sub_24EF1394C(0, *((void *)v10 + 2) + 1, 1, v10);
LABEL_34:
  unint64_t v35 = *((void *)v10 + 2);
  unint64_t v34 = *((void *)v10 + 3);
  if (v35 >= v34 >> 1) {
    uint64_t v10 = sub_24EF1394C((char *)(v34 > 1), v35 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v35 + 1;
  uint64_t v36 = &v10[32 * v35];
  *((void *)v36 + 4) = v6;
  *((void *)v36 + 5) = v8;
  *((void *)v36 + 6) = v9;
  *((void *)v36 + 7) = v11;
  *(void *)(v39 + 16) = v10;
LABEL_37:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_38:
  swift_release();
  return v10;
}

uint64_t sub_24EF3A5C8(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v10 = *(void *)(a2 + 16) >> 14;
  int v11 = (v10 == a1 >> 14) & a3;
  if (v11 == 1) {
    return v11 ^ 1u;
  }
  if (a1 >> 14 < v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = a4;
  uint64_t v5 = sub_24EF876C0();
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  uint64_t v8 = v14;
  unint64_t v9 = *(char **)(v4 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    unint64_t v9 = sub_24EF1394C(0, *((void *)v9 + 2) + 1, 1, v9);
    *(void *)(v4 + 16) = v9;
  }
  unint64_t v17 = *((void *)v9 + 2);
  unint64_t v16 = *((void *)v9 + 3);
  if (v17 >= v16 >> 1)
  {
    unint64_t v9 = sub_24EF1394C((char *)(v16 > 1), v17 + 1, 1, v9);
    *(void *)(v4 + 16) = v9;
  }
  *((void *)v9 + 2) = v17 + 1;
  uint64_t v18 = &v9[32 * v17];
  *((void *)v18 + 4) = v5;
  *((void *)v18 + 5) = v6;
  *((void *)v18 + 6) = v7;
  *((void *)v18 + 7) = v8;
  return v11 ^ 1u;
}

unint64_t sub_24EF3A6D8()
{
  unint64_t result = qword_269986498;
  if (!qword_269986498)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985A90);
    sub_24EF3A808(&qword_2699864A0, MEMORY[0x263F1B7A0]);
    sub_24EEFD4C4(&qword_2699864A8, &qword_2699864B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986498);
  }
  return result;
}

uint64_t sub_24EF3A7A8()
{
  return sub_24EF3A7C0((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24EF38004);
}

uint64_t sub_24EF3A7C0(uint64_t (*a1)(void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1(v1[13], v1[14], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12]);
}

uint64_t sub_24EF3A808(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EF3A850(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EF3A8B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EF3A918(uint64_t a1, unint64_t a2)
{
  uint64_t v19 = 32;
  unint64_t v20 = 0xE100000000000000;
  v18[2] = &v19;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_24EF3A1A8(1, 1, sub_24EF3AD28, (uint64_t)v18, a1, a2);
  uint64_t v5 = *((void *)v4 + 2);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v7 = v4 + 56;
    unint64_t v8 = 0xE000000000000000;
    while (1)
    {
      unint64_t v9 = *((void *)v7 - 3);
      uint64_t v10 = *((void *)v7 - 2);
      swift_bridgeObjectRetain();
      uint64_t result = sub_24EF877E0();
      unint64_t v13 = (v12 & 1) != 0 ? v10 : result;
      if (v13 >> 14 < v9 >> 14) {
        break;
      }
      uint64_t v14 = sub_24EF877F0();
      uint64_t v23 = v6;
      unint64_t v24 = v8;
      uint64_t v19 = v14;
      unint64_t v20 = v15;
      uint64_t v21 = v16;
      uint64_t v22 = v17;
      sub_24EF3AD80();
      swift_bridgeObjectRetain();
      sub_24EF87690();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v23;
      unint64_t v8 = v24;
      v7 += 32;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v6 = 0;
LABEL_10:
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

unint64_t sub_24EF3AAB8()
{
  unint64_t result = qword_2699864E8;
  if (!qword_2699864E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269986410);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699864E8);
  }
  return result;
}

unint64_t sub_24EF3AB2C()
{
  unint64_t result = qword_2699864F0;
  if (!qword_2699864F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699864F0);
  }
  return result;
}

unint64_t sub_24EF3AB88()
{
  unint64_t result = qword_269986520;
  if (!qword_269986520)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986508);
    swift_getOpaqueTypeConformance2();
    sub_24EEFD4C4(&qword_269986528, &qword_269986530);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986520);
  }
  return result;
}

uint64_t sub_24EF3AC58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EF3ACC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EF3AD28(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_24EF87A60() & 1;
  }
}

unint64_t sub_24EF3AD80()
{
  unint64_t result = qword_269986540;
  if (!qword_269986540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986540);
  }
  return result;
}

uint64_t sub_24EF3ADD4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24EF3AE0C()
{
  return swift_deallocObject();
}

uint64_t sub_24EF3AE1C()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_24EF3AE38(uint64_t a1)
{
  unint64_t v2 = sub_24EF3C4F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3AE74(uint64_t a1)
{
  unint64_t v2 = sub_24EF3C4F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3AEB0()
{
  uint64_t result = 0x75636F4679646F62;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 2:
      uint64_t result = 0x6E656D7069757165;
      break;
    case 3:
      uint64_t result = 0x7974696C61646F6DLL;
      break;
    case 4:
      uint64_t result = 0x6E6547636973756DLL;
      break;
    case 5:
      uint64_t result = 0x76654C6C6C696B73;
      break;
    case 6:
      uint64_t result = 0x656D656874;
      break;
    case 7:
      uint64_t result = 0x72656E69617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF3AFBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF3CA00(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EF3AFE4(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_24EF3AFF0(uint64_t a1)
{
  unint64_t v2 = sub_24EF3BE2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3B02C(uint64_t a1)
{
  unint64_t v2 = sub_24EF3BE2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3B068(uint64_t a1)
{
  unint64_t v2 = sub_24EF3C408();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3B0A4(uint64_t a1)
{
  unint64_t v2 = sub_24EF3C408();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3B0E0(uint64_t a1)
{
  unint64_t v2 = sub_24EF3C31C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3B11C(uint64_t a1)
{
  unint64_t v2 = sub_24EF3C31C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3B158(uint64_t a1)
{
  unint64_t v2 = sub_24EF3C230();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3B194(uint64_t a1)
{
  unint64_t v2 = sub_24EF3C230();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3B1D0(uint64_t a1)
{
  unint64_t v2 = sub_24EF3C144();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3B20C(uint64_t a1)
{
  unint64_t v2 = sub_24EF3C144();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3B248(uint64_t a1)
{
  unint64_t v2 = sub_24EF3C058();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3B284(uint64_t a1)
{
  unint64_t v2 = sub_24EF3C058();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3B2C0(uint64_t a1)
{
  unint64_t v2 = sub_24EF3BF6C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3B2FC(uint64_t a1)
{
  unint64_t v2 = sub_24EF3BF6C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3B338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24EF87A60();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24EF3B3D0(uint64_t a1)
{
  unint64_t v2 = sub_24EF3BE80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3B40C(uint64_t a1)
{
  unint64_t v2 = sub_24EF3BE80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FilterSectionContent.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = a3;
  uint64_t v57 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986548);
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v54 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986550);
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v51 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986558);
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v48 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986560);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v45 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986568);
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v44 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v42 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986570);
  uint64_t v40 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  unint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986578);
  uint64_t v39 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986580);
  uint64_t v38 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986588);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v59 = v22;
  uint64_t v60 = v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF3BE2C();
  uint64_t v58 = v25;
  sub_24EF87AF0();
  switch((char)v61)
  {
    case 1:
      LOBYTE(v62) = 1;
      sub_24EF3C408();
      uint64_t v26 = v59;
      char v28 = v58;
      sub_24EF879A0();
      uint64_t v62 = v57;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986660);
      sub_24EF3C45C();
      sub_24EF87A20();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v16);
      uint64_t v29 = *(uint64_t (**)(char *, uint64_t))(v60 + 8);
      uint64_t v30 = v28;
      return v29(v30, v26);
    case 2:
      LOBYTE(v62) = 2;
      sub_24EF3C31C();
      uint64_t v31 = v59;
      unint64_t v32 = v58;
      sub_24EF879A0();
      uint64_t v62 = v57;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986640);
      sub_24EF3C370();
      uint64_t v33 = v41;
      sub_24EF87A20();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v32, v31);
    case 3:
      LOBYTE(v62) = 3;
      sub_24EF3C230();
      unint64_t v35 = v42;
      uint64_t v26 = v59;
      unint64_t v27 = v58;
      sub_24EF879A0();
      uint64_t v62 = v57;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986620);
      sub_24EF3C284();
      uint64_t v36 = v44;
      sub_24EF87A20();
      uint64_t v37 = v43;
      goto LABEL_10;
    case 4:
      LOBYTE(v62) = 4;
      sub_24EF3C144();
      unint64_t v35 = v45;
      uint64_t v26 = v59;
      unint64_t v27 = v58;
      sub_24EF879A0();
      uint64_t v62 = v57;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986600);
      sub_24EF3C198();
      uint64_t v36 = v47;
      sub_24EF87A20();
      uint64_t v37 = v46;
      goto LABEL_10;
    case 5:
      LOBYTE(v62) = 5;
      sub_24EF3C058();
      unint64_t v35 = v48;
      uint64_t v26 = v59;
      unint64_t v27 = v58;
      sub_24EF879A0();
      uint64_t v62 = v57;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699865E0);
      sub_24EF3C0AC();
      uint64_t v36 = v50;
      sub_24EF87A20();
      uint64_t v37 = v49;
      goto LABEL_10;
    case 6:
      LOBYTE(v62) = 6;
      sub_24EF3BF6C();
      unint64_t v35 = v51;
      uint64_t v26 = v59;
      unint64_t v27 = v58;
      sub_24EF879A0();
      uint64_t v62 = v57;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699865C0);
      sub_24EF3BFC0();
      uint64_t v36 = v53;
      sub_24EF87A20();
      uint64_t v37 = v52;
      goto LABEL_10;
    case 7:
      LOBYTE(v62) = 7;
      sub_24EF3BE80();
      unint64_t v35 = v54;
      uint64_t v26 = v59;
      unint64_t v27 = v58;
      sub_24EF879A0();
      uint64_t v62 = v57;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699865A0);
      sub_24EF3BED4();
      uint64_t v36 = v56;
      sub_24EF87A20();
      uint64_t v37 = v55;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
      break;
    default:
      LOBYTE(v62) = 0;
      sub_24EF3C4F4();
      uint64_t v26 = v59;
      unint64_t v27 = v58;
      sub_24EF879A0();
      uint64_t v62 = v57;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986680);
      sub_24EF3C548();
      sub_24EF87A20();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v19);
      break;
  }
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t))(v60 + 8);
  uint64_t v30 = v27;
  return v29(v30, v26);
}

unint64_t sub_24EF3BE2C()
{
  unint64_t result = qword_269986590;
  if (!qword_269986590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986590);
  }
  return result;
}

unint64_t sub_24EF3BE80()
{
  unint64_t result = qword_269986598;
  if (!qword_269986598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986598);
  }
  return result;
}

unint64_t sub_24EF3BED4()
{
  unint64_t result = qword_2699865A8;
  if (!qword_2699865A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699865A0);
    sub_24EEFD4C4(&qword_2699865B0, &qword_269985DE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699865A8);
  }
  return result;
}

unint64_t sub_24EF3BF6C()
{
  unint64_t result = qword_2699865B8;
  if (!qword_2699865B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699865B8);
  }
  return result;
}

unint64_t sub_24EF3BFC0()
{
  unint64_t result = qword_2699865C8;
  if (!qword_2699865C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699865C0);
    sub_24EEFD4C4(&qword_2699865D0, &qword_269985DD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699865C8);
  }
  return result;
}

unint64_t sub_24EF3C058()
{
  unint64_t result = qword_2699865D8;
  if (!qword_2699865D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699865D8);
  }
  return result;
}

unint64_t sub_24EF3C0AC()
{
  unint64_t result = qword_2699865E8;
  if (!qword_2699865E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699865E0);
    sub_24EEFD4C4(&qword_2699865F0, &qword_269985DC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699865E8);
  }
  return result;
}

unint64_t sub_24EF3C144()
{
  unint64_t result = qword_2699865F8;
  if (!qword_2699865F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699865F8);
  }
  return result;
}

unint64_t sub_24EF3C198()
{
  unint64_t result = qword_269986608;
  if (!qword_269986608)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986600);
    sub_24EEFD4C4(&qword_269986610, &qword_269985DB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986608);
  }
  return result;
}

unint64_t sub_24EF3C230()
{
  unint64_t result = qword_269986618;
  if (!qword_269986618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986618);
  }
  return result;
}

unint64_t sub_24EF3C284()
{
  unint64_t result = qword_269986628;
  if (!qword_269986628)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986620);
    sub_24EEFD4C4(&qword_269986630, &qword_269985DA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986628);
  }
  return result;
}

unint64_t sub_24EF3C31C()
{
  unint64_t result = qword_269986638;
  if (!qword_269986638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986638);
  }
  return result;
}

unint64_t sub_24EF3C370()
{
  unint64_t result = qword_269986648;
  if (!qword_269986648)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986640);
    sub_24EEFD4C4(&qword_269986650, &qword_269985D98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986648);
  }
  return result;
}

unint64_t sub_24EF3C408()
{
  unint64_t result = qword_269986658;
  if (!qword_269986658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986658);
  }
  return result;
}

unint64_t sub_24EF3C45C()
{
  unint64_t result = qword_269986668;
  if (!qword_269986668)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986660);
    sub_24EEFD4C4(&qword_269986670, &qword_269985D88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986668);
  }
  return result;
}

unint64_t sub_24EF3C4F4()
{
  unint64_t result = qword_269986678;
  if (!qword_269986678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986678);
  }
  return result;
}

unint64_t sub_24EF3C548()
{
  unint64_t result = qword_269986688;
  if (!qword_269986688)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986680);
    sub_24EEFD4C4(&qword_269986690, &qword_269985D78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986688);
  }
  return result;
}

char *FilterSectionContent.init(from:)(void *a1)
{
  return sub_24EF3CD5C(a1);
}

char *sub_24EF3C5F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_24EF3CD5C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_24EF3C628(void *a1)
{
  return FilterSectionContent.encode(to:)(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t FilterSectionContent.hash(into:)(long long *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      sub_24EF87AA0();
      return sub_24EF31764((uint64_t)a1, a2);
    case 2:
      sub_24EF87AA0();
      char v5 = a1;
      uint64_t v6 = a2;
      goto LABEL_4;
    case 3:
      sub_24EF87AA0();
      return sub_24EF3157C(a1, a2);
    case 4:
      sub_24EF87AA0();
      char v5 = a1;
      uint64_t v6 = a2;
      goto LABEL_4;
    case 5:
      sub_24EF87AA0();
      uint64_t v8 = a1;
      uint64_t v9 = a2;
      goto LABEL_19;
    case 6:
      sub_24EF87AA0();
      return sub_24EF3125C(a1, a2);
    case 7:
      sub_24EF87AA0();
      uint64_t v8 = a1;
      uint64_t v9 = a2;
LABEL_19:
      uint64_t result = sub_24EF31258(v8, v9);
      break;
    default:
      sub_24EF87AA0();
      char v5 = a1;
      uint64_t v6 = a2;
LABEL_4:
      uint64_t result = sub_24EF31578(v5, v6);
      break;
  }
  return result;
}

uint64_t FilterSectionContent.hashValue.getter(uint64_t a1, char a2)
{
  sub_24EF87A90();
  FilterSectionContent.hash(into:)(v5, a1, a2);
  return sub_24EF87AD0();
}

uint64_t sub_24EF3C858()
{
  uint64_t v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_24EF87A90();
  FilterSectionContent.hash(into:)(v4, v1, v2);
  return sub_24EF87AD0();
}

uint64_t sub_24EF3C8A8(long long *a1)
{
  return FilterSectionContent.hash(into:)(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

uint64_t sub_24EF3C8B4()
{
  uint64_t v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_24EF87A90();
  FilterSectionContent.hash(into:)(v4, v1, v2);
  return sub_24EF87AD0();
}

uint64_t sub_24EF3C900(uint64_t a1, uint64_t a2)
{
  return _s16FitnessFiltering20FilterSectionContentO2eeoiySbAC_ACtFZ_0(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t _s16FitnessFiltering20FilterSectionContentO2eeoiySbAC_ACtFZ_0(uint64_t a1, char a2, uint64_t a3, char a4)
{
  switch(a2)
  {
    case 1:
      if (a4 != 1) {
        goto LABEL_20;
      }
      return sub_24EF59C1C(a1, a3);
    case 2:
      if (a4 != 2) {
        goto LABEL_20;
      }
      return sub_24EF59D18(a1, a3);
    case 3:
      if (a4 != 3) {
        goto LABEL_20;
      }
      return sub_24EF59FB4(a1, a3);
    case 4:
      if (a4 != 4) {
        goto LABEL_20;
      }
      uint64_t v4 = a3;
      goto LABEL_4;
    case 5:
      if (a4 != 5) {
        goto LABEL_20;
      }
      uint64_t v6 = a3;
      goto LABEL_15;
    case 6:
      if (a4 != 6) {
        goto LABEL_20;
      }
      return sub_24EF5A6C4(a1, a3);
    case 7:
      if (a4 != 7) {
        goto LABEL_20;
      }
      uint64_t v6 = a3;
LABEL_15:
      uint64_t result = sub_24EF5A370(a1, v6);
      break;
    default:
      if (a4)
      {
LABEL_20:
        uint64_t result = 0;
      }
      else
      {
        uint64_t v4 = a3;
LABEL_4:
        uint64_t result = sub_24EF59C18(a1, v4);
      }
      break;
  }
  return result;
}

uint64_t sub_24EF3CA00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x75636F4679646F62 && a2 == 0xE900000000000073;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E656D7069757165 && a2 == 0xE900000000000074 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7974696C61646F6DLL && a2 == 0xE800000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6547636973756DLL && a2 == 0xEA00000000006572 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x76654C6C6C696B73 && a2 == 0xEA00000000006C65 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656D656874 && a2 == 0xE500000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x72656E69617274 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

char *sub_24EF3CD5C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986778);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v71 = v2;
  uint64_t v72 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v78 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986780);
  uint64_t v70 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v73 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986788);
  uint64_t v68 = *(void *)(v6 - 8);
  uint64_t v69 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v77 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986790);
  uint64_t v66 = *(void *)(v8 - 8);
  uint64_t v67 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v75 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986798);
  uint64_t v64 = *(void *)(v10 - 8);
  uint64_t v65 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v74 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699867A0);
  uint64_t v62 = *(void *)(v12 - 8);
  uint64_t v63 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v76 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699867A8);
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  unint64_t v15 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699867B0);
  uint64_t v58 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699867B8);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1[3];
  uint64_t v79 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_24EF3BE2C();
  uint64_t v24 = v80;
  sub_24EF87AE0();
  if (v24) {
    goto LABEL_7;
  }
  uint64_t v57 = v18;
  uint64_t v56 = v16;
  uint64_t v25 = v76;
  uint64_t v26 = v77;
  uint64_t v80 = 0;
  unint64_t v27 = v78;
  char v28 = v22;
  uint64_t v29 = sub_24EF87980();
  uint64_t v22 = (char *)v29;
  uint64_t v30 = (char *)v19;
  if (*(void *)(v29 + 16) != 1)
  {
    uint64_t v22 = (char *)sub_24EF87880();
    swift_allocError();
    uint64_t v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269986030);
    *uint64_t v36 = &type metadata for FilterSectionContent;
    sub_24EF878F0();
    sub_24EF87870();
    (*(void (**)(void *, void, char *))(*((void *)v22 - 1) + 104))(v36, *MEMORY[0x263F8DCB0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v19);
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
    return v22;
  }
  uint64_t v31 = *(unsigned __int8 *)(v29 + 32);
  unint64_t v32 = v28;
  v55[1] = v31;
  switch(v31)
  {
    case 1:
      LOBYTE(v81) = 1;
      sub_24EF3C408();
      uint64_t v38 = v15;
      uint64_t v22 = v30;
      uint64_t v39 = v80;
      sub_24EF878E0();
      if (v39) {
        goto LABEL_5;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986660);
      sub_24EF3EC30();
      uint64_t v40 = v60;
      sub_24EF87970();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v20 + 8))(v28, v30);
      goto LABEL_29;
    case 2:
      LOBYTE(v81) = 2;
      sub_24EF3C31C();
      uint64_t v41 = v25;
      uint64_t v42 = v30;
      uint64_t v43 = v80;
      sub_24EF878E0();
      if (v43) {
        goto LABEL_21;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986640);
      sub_24EF3EB98();
      uint64_t v44 = v63;
      sub_24EF87970();
      uint64_t v54 = v62;
      goto LABEL_27;
    case 3:
      LOBYTE(v81) = 3;
      sub_24EF3C230();
      uint64_t v41 = v74;
      uint64_t v42 = v30;
      uint64_t v45 = v80;
      sub_24EF878E0();
      if (v45) {
        goto LABEL_21;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986620);
      sub_24EF3EB00();
      uint64_t v44 = v65;
      sub_24EF87970();
      uint64_t v54 = v64;
      goto LABEL_27;
    case 4:
      LOBYTE(v81) = 4;
      sub_24EF3C144();
      uint64_t v41 = v75;
      uint64_t v42 = v30;
      uint64_t v46 = v80;
      sub_24EF878E0();
      if (v46) {
        goto LABEL_21;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986600);
      sub_24EF3EA68();
      uint64_t v44 = v67;
      sub_24EF87970();
      uint64_t v54 = v66;
      goto LABEL_27;
    case 5:
      LOBYTE(v81) = 5;
      sub_24EF3C058();
      uint64_t v41 = v26;
      uint64_t v42 = v30;
      uint64_t v47 = v80;
      sub_24EF878E0();
      if (v47) {
        goto LABEL_21;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699865E0);
      sub_24EF3E9D0();
      uint64_t v44 = v69;
      sub_24EF87970();
      uint64_t v54 = v68;
LABEL_27:
      (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v44);
      goto LABEL_28;
    case 6:
      LOBYTE(v81) = 6;
      sub_24EF3BF6C();
      uint64_t v48 = v73;
      uint64_t v42 = v30;
      uint64_t v49 = v80;
      sub_24EF878E0();
      if (v49)
      {
LABEL_21:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v20 + 8))(v32, v42);
        goto LABEL_7;
      }
      uint64_t v80 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699865C0);
      sub_24EF3E938();
      uint64_t v52 = v61;
      sub_24EF87970();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v48, v52);
LABEL_28:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v20 + 8))(v32, v42);
      goto LABEL_29;
    case 7:
      LOBYTE(v81) = 7;
      sub_24EF3BE80();
      uint64_t v50 = v80;
      sub_24EF878E0();
      if (v50) {
        goto LABEL_5;
      }
      uint64_t v80 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699865A0);
      sub_24EF3E8A0();
      uint64_t v53 = v71;
      sub_24EF87970();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v27, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v20 + 8))(v28, v30);
      goto LABEL_29;
    default:
      LOBYTE(v81) = 0;
      sub_24EF3C4F4();
      uint64_t v33 = v57;
      unint64_t v34 = v80;
      sub_24EF878E0();
      if (v34)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v20 + 8))(v28, v30);
        goto LABEL_7;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986680);
      sub_24EF3ECC8();
      uint64_t v51 = v56;
      sub_24EF87970();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v33, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v20 + 8))(v28, v30);
LABEL_29:
      uint64_t v22 = v81;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
      break;
  }
  return v22;
}

unint64_t sub_24EF3DA68()
{
  unint64_t result = qword_269986698;
  if (!qword_269986698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986698);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FilterSectionContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_24EF3DB04(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_24EF3DB04(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 7u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for FilterSectionContent(uint64_t a1)
{
  return sub_24EF33D08(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for FilterSectionContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_24EF3DB04(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_24EF33D08(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for FilterSectionContent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_24EF33D08(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for FilterSectionContent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 7) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FilterSectionContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24EF3DC5C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_24EF3DC64(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FilterSectionContent()
{
  return &type metadata for FilterSectionContent;
}

uint64_t getEnumTagSinglePayload for EditorialTrait(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FilterSectionContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF3DDD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterSectionContent.CodingKeys()
{
  return &type metadata for FilterSectionContent.CodingKeys;
}

ValueMetadata *type metadata accessor for FilterSectionContent.BodyFocusCodingKeys()
{
  return &type metadata for FilterSectionContent.BodyFocusCodingKeys;
}

ValueMetadata *type metadata accessor for FilterSectionContent.DurationCodingKeys()
{
  return &type metadata for FilterSectionContent.DurationCodingKeys;
}

ValueMetadata *type metadata accessor for FilterSectionContent.EquipmentCodingKeys()
{
  return &type metadata for FilterSectionContent.EquipmentCodingKeys;
}

ValueMetadata *type metadata accessor for FilterSectionContent.ModalityCodingKeys()
{
  return &type metadata for FilterSectionContent.ModalityCodingKeys;
}

ValueMetadata *type metadata accessor for FilterSectionContent.MusicGenreCodingKeys()
{
  return &type metadata for FilterSectionContent.MusicGenreCodingKeys;
}

ValueMetadata *type metadata accessor for FilterSectionContent.SkillLevelCodingKeys()
{
  return &type metadata for FilterSectionContent.SkillLevelCodingKeys;
}

ValueMetadata *type metadata accessor for FilterSectionContent.ThemeCodingKeys()
{
  return &type metadata for FilterSectionContent.ThemeCodingKeys;
}

unsigned char *_s16FitnessFiltering20FilterSectionContentO19BodyFocusCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EF3DF20);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterSectionContent.TrainerCodingKeys()
{
  return &type metadata for FilterSectionContent.TrainerCodingKeys;
}

unint64_t sub_24EF3DF5C()
{
  unint64_t result = qword_2699866A0;
  if (!qword_2699866A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699866A0);
  }
  return result;
}

unint64_t sub_24EF3DFB4()
{
  unint64_t result = qword_2699866A8;
  if (!qword_2699866A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699866A8);
  }
  return result;
}

unint64_t sub_24EF3E00C()
{
  unint64_t result = qword_2699866B0;
  if (!qword_2699866B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699866B0);
  }
  return result;
}

unint64_t sub_24EF3E064()
{
  unint64_t result = qword_2699866B8;
  if (!qword_2699866B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699866B8);
  }
  return result;
}

unint64_t sub_24EF3E0BC()
{
  unint64_t result = qword_2699866C0;
  if (!qword_2699866C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699866C0);
  }
  return result;
}

unint64_t sub_24EF3E114()
{
  unint64_t result = qword_2699866C8;
  if (!qword_2699866C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699866C8);
  }
  return result;
}

unint64_t sub_24EF3E16C()
{
  unint64_t result = qword_2699866D0;
  if (!qword_2699866D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699866D0);
  }
  return result;
}

unint64_t sub_24EF3E1C4()
{
  unint64_t result = qword_2699866D8;
  if (!qword_2699866D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699866D8);
  }
  return result;
}

unint64_t sub_24EF3E21C()
{
  unint64_t result = qword_2699866E0;
  if (!qword_2699866E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699866E0);
  }
  return result;
}

unint64_t sub_24EF3E274()
{
  unint64_t result = qword_2699866E8;
  if (!qword_2699866E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699866E8);
  }
  return result;
}

unint64_t sub_24EF3E2CC()
{
  unint64_t result = qword_2699866F0;
  if (!qword_2699866F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699866F0);
  }
  return result;
}

unint64_t sub_24EF3E324()
{
  unint64_t result = qword_2699866F8;
  if (!qword_2699866F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699866F8);
  }
  return result;
}

unint64_t sub_24EF3E37C()
{
  unint64_t result = qword_269986700;
  if (!qword_269986700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986700);
  }
  return result;
}

unint64_t sub_24EF3E3D4()
{
  unint64_t result = qword_269986708;
  if (!qword_269986708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986708);
  }
  return result;
}

unint64_t sub_24EF3E42C()
{
  unint64_t result = qword_269986710;
  if (!qword_269986710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986710);
  }
  return result;
}

unint64_t sub_24EF3E484()
{
  unint64_t result = qword_269986718;
  if (!qword_269986718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986718);
  }
  return result;
}

unint64_t sub_24EF3E4DC()
{
  unint64_t result = qword_269986720;
  if (!qword_269986720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986720);
  }
  return result;
}

unint64_t sub_24EF3E534()
{
  unint64_t result = qword_269986728;
  if (!qword_269986728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986728);
  }
  return result;
}

unint64_t sub_24EF3E58C()
{
  unint64_t result = qword_269986730;
  if (!qword_269986730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986730);
  }
  return result;
}

unint64_t sub_24EF3E5E4()
{
  unint64_t result = qword_269986738;
  if (!qword_269986738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986738);
  }
  return result;
}

unint64_t sub_24EF3E63C()
{
  unint64_t result = qword_269986740;
  if (!qword_269986740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986740);
  }
  return result;
}

unint64_t sub_24EF3E694()
{
  unint64_t result = qword_269986748;
  if (!qword_269986748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986748);
  }
  return result;
}

unint64_t sub_24EF3E6EC()
{
  unint64_t result = qword_269986750;
  if (!qword_269986750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986750);
  }
  return result;
}

unint64_t sub_24EF3E744()
{
  unint64_t result = qword_269986758;
  if (!qword_269986758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986758);
  }
  return result;
}

unint64_t sub_24EF3E79C()
{
  unint64_t result = qword_269986760;
  if (!qword_269986760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986760);
  }
  return result;
}

unint64_t sub_24EF3E7F4()
{
  unint64_t result = qword_269986768;
  if (!qword_269986768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986768);
  }
  return result;
}

unint64_t sub_24EF3E84C()
{
  unint64_t result = qword_269986770;
  if (!qword_269986770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986770);
  }
  return result;
}

unint64_t sub_24EF3E8A0()
{
  unint64_t result = qword_2699867C0;
  if (!qword_2699867C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699865A0);
    sub_24EEFD4C4(&qword_2699867C8, &qword_269985DE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699867C0);
  }
  return result;
}

unint64_t sub_24EF3E938()
{
  unint64_t result = qword_2699867D0;
  if (!qword_2699867D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699865C0);
    sub_24EEFD4C4(&qword_2699867D8, &qword_269985DD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699867D0);
  }
  return result;
}

unint64_t sub_24EF3E9D0()
{
  unint64_t result = qword_2699867E0;
  if (!qword_2699867E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699865E0);
    sub_24EEFD4C4(&qword_2699867E8, &qword_269985DC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699867E0);
  }
  return result;
}

unint64_t sub_24EF3EA68()
{
  unint64_t result = qword_2699867F0;
  if (!qword_2699867F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986600);
    sub_24EEFD4C4(&qword_2699867F8, &qword_269985DB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699867F0);
  }
  return result;
}

unint64_t sub_24EF3EB00()
{
  unint64_t result = qword_269986800;
  if (!qword_269986800)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986620);
    sub_24EEFD4C4(&qword_269986808, &qword_269985DA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986800);
  }
  return result;
}

unint64_t sub_24EF3EB98()
{
  unint64_t result = qword_269986810;
  if (!qword_269986810)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986640);
    sub_24EEFD4C4(&qword_269986818, &qword_269985D98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986810);
  }
  return result;
}

unint64_t sub_24EF3EC30()
{
  unint64_t result = qword_269986820;
  if (!qword_269986820)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986660);
    sub_24EEFD4C4(&qword_269986828, &qword_269985D88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986820);
  }
  return result;
}

unint64_t sub_24EF3ECC8()
{
  unint64_t result = qword_269986830;
  if (!qword_269986830)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986680);
    sub_24EEFD4C4(&qword_269986838, &qword_269985D78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986830);
  }
  return result;
}

BOOL static FilterKind.< infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

BOOL static FilterKind.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24EF3ED84(char a1)
{
  uint64_t result = 0x75636F4679646F62;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 2:
      uint64_t result = 0x6E656D7069757165;
      break;
    case 3:
      uint64_t result = 0x7974696C61646F6DLL;
      break;
    case 4:
      uint64_t result = 0x6E6547636973756DLL;
      break;
    case 5:
      uint64_t result = 0x76654C6C6C696B73;
      break;
    case 6:
      uint64_t result = 0x656D656874;
      break;
    case 7:
      uint64_t result = 0x72656E69617274;
      break;
    case 8:
      uint64_t result = 0x7469617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF3EEAC(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FF48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3EEE8(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FF48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3EF24()
{
  return sub_24EF3ED84(*v0);
}

uint64_t sub_24EF3EF2C(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FC54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3EF68(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FC54();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3EFA4(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FEF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3EFE0(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FEF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3F01C(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FEA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3F058(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FEA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3F094(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FE4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3F0D0(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FE4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3F10C(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FDF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3F148(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FDF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3F184(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FDA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3F1C0(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FDA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3F1FC(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FD50();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3F238(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FD50();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3F274(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FCFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3F2B0(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FCFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF3F2EC(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FCA8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF3F328(uint64_t a1)
{
  unint64_t v2 = sub_24EF3FCA8();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *static FilterKind.allCases.getter()
{
  return &unk_27009B578;
}

void sub_24EF3F370(void *a1@<X8>)
{
  *a1 = &unk_27009B578;
}

BOOL sub_24EF3F380(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_24EF3F394(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_24EF3F3A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_24EF3F3BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t FilterKind.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v55 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986840);
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v52 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986848);
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986850);
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v46 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986858);
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v43 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986860);
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v40 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986868);
  uint64_t v38 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v37 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986870);
  uint64_t v35 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  unint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986878);
  uint64_t v34 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986880);
  uint64_t v33 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986888);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v56 = v22;
  uint64_t v57 = v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v33 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF3FC54();
  sub_24EF87AF0();
  switch((char)v55)
  {
    case 1:
      char v59 = 1;
      sub_24EF3FEF4();
      uint64_t v28 = v56;
      sub_24EF879A0();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v16);
      goto LABEL_12;
    case 2:
      char v60 = 2;
      sub_24EF3FEA0();
      uint64_t v28 = v56;
      sub_24EF879A0();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v36);
      goto LABEL_12;
    case 3:
      char v61 = 3;
      sub_24EF3FE4C();
      uint64_t v29 = v37;
      uint64_t v28 = v56;
      sub_24EF879A0();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v39);
      goto LABEL_12;
    case 4:
      char v62 = 4;
      sub_24EF3FDF8();
      uint64_t v30 = v40;
      uint64_t v28 = v56;
      sub_24EF879A0();
      uint64_t v32 = v41;
      uint64_t v31 = v42;
      goto LABEL_11;
    case 5:
      char v63 = 5;
      sub_24EF3FDA4();
      uint64_t v30 = v43;
      uint64_t v28 = v56;
      sub_24EF879A0();
      uint64_t v32 = v44;
      uint64_t v31 = v45;
      goto LABEL_11;
    case 6:
      char v64 = 6;
      sub_24EF3FD50();
      uint64_t v30 = v46;
      uint64_t v28 = v56;
      sub_24EF879A0();
      uint64_t v32 = v47;
      uint64_t v31 = v48;
      goto LABEL_11;
    case 7:
      char v65 = 7;
      sub_24EF3FCFC();
      uint64_t v30 = v49;
      uint64_t v28 = v56;
      sub_24EF879A0();
      uint64_t v32 = v50;
      uint64_t v31 = v51;
      goto LABEL_11;
    case 8:
      char v66 = 8;
      sub_24EF3FCA8();
      uint64_t v30 = v52;
      uint64_t v28 = v56;
      sub_24EF879A0();
      uint64_t v32 = v53;
      uint64_t v31 = v54;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
LABEL_12:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v25, v28);
      break;
    default:
      char v58 = 0;
      sub_24EF3FF48();
      uint64_t v26 = v56;
      sub_24EF879A0();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v19);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v25, v26);
      break;
  }
  return result;
}

unint64_t sub_24EF3FC54()
{
  unint64_t result = qword_269986890;
  if (!qword_269986890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986890);
  }
  return result;
}

unint64_t sub_24EF3FCA8()
{
  unint64_t result = qword_269986898;
  if (!qword_269986898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986898);
  }
  return result;
}

unint64_t sub_24EF3FCFC()
{
  unint64_t result = qword_2699868A0;
  if (!qword_2699868A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699868A0);
  }
  return result;
}

unint64_t sub_24EF3FD50()
{
  unint64_t result = qword_2699868A8;
  if (!qword_2699868A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699868A8);
  }
  return result;
}

unint64_t sub_24EF3FDA4()
{
  unint64_t result = qword_2699868B0;
  if (!qword_2699868B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699868B0);
  }
  return result;
}

unint64_t sub_24EF3FDF8()
{
  unint64_t result = qword_2699868B8;
  if (!qword_2699868B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699868B8);
  }
  return result;
}

unint64_t sub_24EF3FE4C()
{
  unint64_t result = qword_2699868C0;
  if (!qword_2699868C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699868C0);
  }
  return result;
}

unint64_t sub_24EF3FEA0()
{
  unint64_t result = qword_2699868C8;
  if (!qword_2699868C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699868C8);
  }
  return result;
}

unint64_t sub_24EF3FEF4()
{
  unint64_t result = qword_2699868D0;
  if (!qword_2699868D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699868D0);
  }
  return result;
}

unint64_t sub_24EF3FF48()
{
  unint64_t result = qword_2699868D8;
  if (!qword_2699868D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699868D8);
  }
  return result;
}

char *FilterKind.init(from:)(void *a1)
{
  return sub_24EF4006C(a1);
}

char *sub_24EF3FFB4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24EF4006C(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_24EF3FFE0(void *a1)
{
  return FilterKind.encode(to:)(a1, *v1);
}

uint64_t FilterKind.hash(into:)()
{
  return sub_24EF87AA0();
}

uint64_t FilterKind.hashValue.getter()
{
  return sub_24EF87AD0();
}

char *sub_24EF4006C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699869A0);
  uint64_t v64 = *(void *)(v2 - 8);
  uint64_t v65 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v69 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699869A8);
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v72 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699869B0);
  uint64_t v60 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v68 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699869B8);
  uint64_t v58 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v71 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699869C0);
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v70 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699869C8);
  uint64_t v55 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v67 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699869D0);
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  char v66 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699869D8);
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  unint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699869E0);
  uint64_t v49 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699869E8);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1[3];
  uint64_t v73 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_24EF3FC54();
  uint64_t v24 = v74;
  sub_24EF87AE0();
  if (!v24)
  {
    uint64_t v48 = v18;
    uint64_t v47 = v16;
    uint64_t v26 = v70;
    uint64_t v25 = v71;
    unint64_t v27 = v72;
    uint64_t v74 = v20;
    uint64_t v28 = v22;
    uint64_t v29 = sub_24EF87980();
    if (*(void *)(v29 + 16) == 1)
    {
      uint64_t v22 = (char *)*(unsigned __int8 *)(v29 + 32);
      switch(*(unsigned char *)(v29 + 32))
      {
        case 1:
          uint64_t v30 = v74;
          char v76 = 1;
          sub_24EF3FEF4();
          sub_24EF878E0();
          uint64_t v32 = *(void (**)(char *, uint64_t))(v51 + 8);
          uint64_t v33 = v15;
          uint64_t v34 = &v86;
          goto LABEL_9;
        case 2:
          uint64_t v30 = v74;
          char v77 = 2;
          sub_24EF3FEA0();
          uint64_t v39 = v66;
          sub_24EF878E0();
          uint64_t v32 = *(void (**)(char *, uint64_t))(v53 + 8);
          uint64_t v33 = v39;
          uint64_t v34 = &v87;
          goto LABEL_9;
        case 3:
          uint64_t v30 = v74;
          char v78 = 3;
          sub_24EF3FE4C();
          uint64_t v40 = v67;
          sub_24EF878E0();
          uint64_t v32 = *(void (**)(char *, uint64_t))(v55 + 8);
          uint64_t v33 = v40;
          uint64_t v34 = &v85;
          goto LABEL_9;
        case 4:
          uint64_t v30 = v74;
          char v79 = 4;
          sub_24EF3FDF8();
          uint64_t v25 = v26;
          sub_24EF878E0();
          uint64_t v42 = v56;
          uint64_t v41 = v57;
          goto LABEL_16;
        case 5:
          uint64_t v30 = v74;
          char v80 = 5;
          sub_24EF3FDA4();
          sub_24EF878E0();
          uint64_t v42 = v58;
          uint64_t v41 = v59;
          goto LABEL_16;
        case 6:
          uint64_t v30 = v74;
          char v81 = 6;
          sub_24EF3FD50();
          uint64_t v25 = v68;
          sub_24EF878E0();
          uint64_t v42 = v60;
          uint64_t v41 = v61;
LABEL_16:
          uint64_t v32 = *(void (**)(char *, uint64_t))(v42 + 8);
          uint64_t v33 = v25;
          goto LABEL_17;
        case 7:
          uint64_t v44 = v74;
          char v82 = 7;
          sub_24EF3FCFC();
          sub_24EF878E0();
          (*(void (**)(char *, uint64_t))(v62 + 8))(v27, v63);
          swift_bridgeObjectRelease();
          uint64_t v30 = v44;
          goto LABEL_18;
        case 8:
          uint64_t v45 = v74;
          char v83 = 8;
          sub_24EF3FCA8();
          uint64_t v46 = v69;
          sub_24EF878E0();
          (*(void (**)(char *, uint64_t))(v64 + 8))(v46, v65);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v19);
          break;
        default:
          uint64_t v30 = v74;
          char v75 = 0;
          sub_24EF3FF48();
          uint64_t v31 = v48;
          sub_24EF878E0();
          uint64_t v32 = *(void (**)(char *, uint64_t))(v49 + 8);
          uint64_t v33 = v31;
          uint64_t v34 = &v84;
LABEL_9:
          uint64_t v41 = *(v34 - 32);
LABEL_17:
          v32(v33, v41);
          swift_bridgeObjectRelease();
LABEL_18:
          (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v19);
          break;
      }
    }
    else
    {
      uint64_t v35 = v19;
      uint64_t v36 = sub_24EF87880();
      swift_allocError();
      uint64_t v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986030);
      *uint64_t v38 = &type metadata for FilterKind;
      sub_24EF878F0();
      sub_24EF87870();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v36 - 8) + 104))(v38, *MEMORY[0x263F8DCB0], v36);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v22, v35);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  return v22;
}

unint64_t sub_24EF40B20()
{
  unint64_t result = qword_2699868E0;
  if (!qword_2699868E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699868E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699868E0);
  }
  return result;
}

unint64_t sub_24EF40B80()
{
  unint64_t result = qword_2699868F0;
  if (!qword_2699868F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699868F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterKind()
{
  return &type metadata for FilterKind;
}

unsigned char *_s16FitnessFiltering10FilterKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF40CB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterKind.CodingKeys()
{
  return &type metadata for FilterKind.CodingKeys;
}

ValueMetadata *type metadata accessor for FilterKind.BodyFocusCodingKeys()
{
  return &type metadata for FilterKind.BodyFocusCodingKeys;
}

ValueMetadata *type metadata accessor for FilterKind.DurationCodingKeys()
{
  return &type metadata for FilterKind.DurationCodingKeys;
}

ValueMetadata *type metadata accessor for FilterKind.EquipmentCodingKeys()
{
  return &type metadata for FilterKind.EquipmentCodingKeys;
}

ValueMetadata *type metadata accessor for FilterKind.ModalityCodingKeys()
{
  return &type metadata for FilterKind.ModalityCodingKeys;
}

ValueMetadata *type metadata accessor for FilterKind.MusicGenreCodingKeys()
{
  return &type metadata for FilterKind.MusicGenreCodingKeys;
}

ValueMetadata *type metadata accessor for FilterKind.SkillLevelCodingKeys()
{
  return &type metadata for FilterKind.SkillLevelCodingKeys;
}

ValueMetadata *type metadata accessor for FilterKind.ThemeCodingKeys()
{
  return &type metadata for FilterKind.ThemeCodingKeys;
}

ValueMetadata *type metadata accessor for FilterKind.TrainerCodingKeys()
{
  return &type metadata for FilterKind.TrainerCodingKeys;
}

ValueMetadata *type metadata accessor for FilterKind.TraitCodingKeys()
{
  return &type metadata for FilterKind.TraitCodingKeys;
}

unint64_t sub_24EF40D84()
{
  unint64_t result = qword_2699868F8;
  if (!qword_2699868F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699868F8);
  }
  return result;
}

unint64_t sub_24EF40DDC()
{
  unint64_t result = qword_269986900;
  if (!qword_269986900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986900);
  }
  return result;
}

unint64_t sub_24EF40E34()
{
  unint64_t result = qword_269986908;
  if (!qword_269986908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986908);
  }
  return result;
}

unint64_t sub_24EF40E8C()
{
  unint64_t result = qword_269986910;
  if (!qword_269986910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986910);
  }
  return result;
}

unint64_t sub_24EF40EE4()
{
  unint64_t result = qword_269986918;
  if (!qword_269986918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986918);
  }
  return result;
}

unint64_t sub_24EF40F3C()
{
  unint64_t result = qword_269986920;
  if (!qword_269986920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986920);
  }
  return result;
}

unint64_t sub_24EF40F94()
{
  unint64_t result = qword_269986928;
  if (!qword_269986928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986928);
  }
  return result;
}

unint64_t sub_24EF40FEC()
{
  unint64_t result = qword_269986930;
  if (!qword_269986930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986930);
  }
  return result;
}

unint64_t sub_24EF41044()
{
  unint64_t result = qword_269986938;
  if (!qword_269986938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986938);
  }
  return result;
}

unint64_t sub_24EF4109C()
{
  unint64_t result = qword_269986940;
  if (!qword_269986940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986940);
  }
  return result;
}

unint64_t sub_24EF410F4()
{
  unint64_t result = qword_269986948;
  if (!qword_269986948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986948);
  }
  return result;
}

unint64_t sub_24EF4114C()
{
  unint64_t result = qword_269986950;
  if (!qword_269986950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986950);
  }
  return result;
}

unint64_t sub_24EF411A4()
{
  unint64_t result = qword_269986958;
  if (!qword_269986958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986958);
  }
  return result;
}

unint64_t sub_24EF411FC()
{
  unint64_t result = qword_269986960;
  if (!qword_269986960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986960);
  }
  return result;
}

unint64_t sub_24EF41254()
{
  unint64_t result = qword_269986968;
  if (!qword_269986968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986968);
  }
  return result;
}

unint64_t sub_24EF412AC()
{
  unint64_t result = qword_269986970;
  if (!qword_269986970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986970);
  }
  return result;
}

unint64_t sub_24EF41304()
{
  unint64_t result = qword_269986978;
  if (!qword_269986978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986978);
  }
  return result;
}

unint64_t sub_24EF4135C()
{
  unint64_t result = qword_269986980;
  if (!qword_269986980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986980);
  }
  return result;
}

unint64_t sub_24EF413B4()
{
  unint64_t result = qword_269986988;
  if (!qword_269986988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986988);
  }
  return result;
}

unint64_t sub_24EF4140C()
{
  unint64_t result = qword_269986990;
  if (!qword_269986990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986990);
  }
  return result;
}

unint64_t sub_24EF41464()
{
  unint64_t result = qword_269986998;
  if (!qword_269986998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986998);
  }
  return result;
}

uint64_t FilterState.loadState.getter@<X0>(uint64_t a1@<X8>)
{
  sub_24EF0C628(v1, (uint64_t)v4);
  sub_24EF0C628((uint64_t)v4, a1);
  return sub_24EF21B08((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24EF0C6D0);
}

uint64_t FilterState.loadState.setter(uint64_t a1)
{
  sub_24EF0C628(a1, (uint64_t)v3);
  sub_24EF0C628(v1, (uint64_t)v4);
  sub_24EF21B08((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24EF0CC0C);
  return sub_24EF0C628((uint64_t)v3, v1);
}

uint64_t (*FilterState.loadState.modify())()
{
  return nullsub_1;
}

__n128 FilterState.init(layout:loadState:locale:rootFilterItem:rootFilterName:shouldResetFilterOnDisposal:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  sub_24EF0C628(a2, (uint64_t)v25);
  __n128 v23 = (__n128)a4[1];
  long long v24 = *a4;
  uint64_t v15 = *((void *)a4 + 4);
  char v16 = *((unsigned char *)a4 + 40);
  uint64_t v17 = (int *)type metadata accessor for FilterState();
  sub_24EF41700(a1, a8 + v17[5]);
  sub_24EF0C628((uint64_t)v25, a8);
  uint64_t v18 = a8 + v17[6];
  uint64_t v19 = sub_24EF86A60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a3, v19);
  uint64_t v20 = a8 + v17[7];
  __n128 result = v23;
  *(_OWORD *)uint64_t v20 = v24;
  *(__n128 *)(v20 + 16) = v23;
  *(void *)(v20 + 32) = v15;
  *(unsigned char *)(v20 + 40) = v16;
  uint64_t v22 = (void *)(a8 + v17[8]);
  *uint64_t v22 = a5;
  v22[1] = a6;
  *(unsigned char *)(a8 + v17[9]) = a7;
  return result;
}

uint64_t type metadata accessor for FilterState()
{
  uint64_t result = qword_269986A48;
  if (!qword_269986A48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EF41700(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FilterLayout();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EF41764()
{
  unint64_t result = 0x7461745364616F6CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x74756F79616CLL;
      break;
    case 2:
      unint64_t result = 0x656C61636F6CLL;
      break;
    case 3:
    case 4:
      unint64_t result = 0x746C6946746F6F72;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF41830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF43DA8(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EF41858(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24EF41864(uint64_t a1)
{
  unint64_t v2 = sub_24EF41BF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF418A0(uint64_t a1)
{
  unint64_t v2 = sub_24EF41BF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FilterState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699869F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF41BF8();
  sub_24EF87AF0();
  sub_24EF0C628(v3, (uint64_t)v18);
  sub_24EF0C628((uint64_t)v18, (uint64_t)v15);
  char v19 = 0;
  sub_24EF41C4C();
  sub_24EF87A20();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for FilterState();
    LOBYTE(v15[0]) = 1;
    type metadata accessor for FilterLayout();
    sub_24EF42880(&qword_269986A08, (void (*)(uint64_t))type metadata accessor for FilterLayout);
    sub_24EF87A20();
    LOBYTE(v15[0]) = 2;
    sub_24EF86A60();
    sub_24EF42880(&qword_269986A10, MEMORY[0x263F07690]);
    sub_24EF87A20();
    uint64_t v10 = v3 + *(int *)(v9 + 28);
    uint64_t v11 = *(void *)(v10 + 32);
    char v12 = *(unsigned char *)(v10 + 40);
    long long v13 = *(_OWORD *)(v10 + 16);
    v15[0] = *(_OWORD *)v10;
    v15[1] = v13;
    uint64_t v16 = v11;
    char v17 = v12;
    char v19 = 3;
    sub_24EEF7DB0();
    sub_24EF87A20();
    LOBYTE(v15[0]) = 4;
    sub_24EF879D0();
    LOBYTE(v15[0]) = 5;
    sub_24EF879E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24EF41BF8()
{
  unint64_t result = qword_2699869F8;
  if (!qword_2699869F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699869F8);
  }
  return result;
}

unint64_t sub_24EF41C4C()
{
  unint64_t result = qword_269986A00;
  if (!qword_269986A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986A00);
  }
  return result;
}

uint64_t FilterState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_24EF86A60();
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v28 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for FilterLayout();
  MEMORY[0x270FA5388](v32);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986A18);
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for FilterState();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF41BF8();
  uint64_t v34 = v8;
  char v12 = v35;
  sub_24EF87AE0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v35 = a1;
  v41[303] = 0;
  sub_24EF42310();
  sub_24EF87970();
  sub_24EF0C628((uint64_t)v41, (uint64_t)v40);
  sub_24EF0C628((uint64_t)v40, (uint64_t)v11);
  LOBYTE(v36) = 1;
  sub_24EF42880(&qword_269986A28, (void (*)(uint64_t))type metadata accessor for FilterLayout);
  sub_24EF87970();
  sub_24EF41700((uint64_t)v6, (uint64_t)&v11[v9[5]]);
  LOBYTE(v36) = 2;
  sub_24EF42880(&qword_269986A30, MEMORY[0x263F07690]);
  long long v13 = v28;
  uint64_t v14 = v30;
  sub_24EF87970();
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v11[v9[6]], v13, v14);
  v41[302] = 3;
  sub_24EEF8248();
  sub_24EF87970();
  uint64_t v15 = v38;
  char v16 = v39;
  char v17 = &v11[v9[7]];
  long long v18 = v37;
  *(_OWORD *)char v17 = v36;
  *((_OWORD *)v17 + 1) = v18;
  *((void *)v17 + 4) = v15;
  v17[40] = v16;
  LOBYTE(v36) = 4;
  uint64_t v19 = sub_24EF87920();
  uint64_t v20 = (uint64_t *)&v11[v9[8]];
  *uint64_t v20 = v19;
  v20[1] = v21;
  LOBYTE(v36) = 5;
  char v22 = sub_24EF87930();
  uint64_t v23 = (uint64_t)v35;
  char v24 = v22;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v33);
  v11[v9[9]] = v24 & 1;
  sub_24EF42364((uint64_t)v11, v27);
  __swift_destroy_boxed_opaque_existential_1(v23);
  return sub_24EF423C8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FilterState);
}

unint64_t sub_24EF42310()
{
  unint64_t result = qword_269986A20;
  if (!qword_269986A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986A20);
  }
  return result;
}

uint64_t sub_24EF42364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FilterState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EF423C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EF42428@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FilterState.init(from:)(a1, a2);
}

uint64_t sub_24EF42440(void *a1)
{
  return FilterState.encode(to:)(a1);
}

uint64_t FilterState.hash(into:)(long long *a1)
{
  sub_24EF0C628(v1, (uint64_t)v12);
  sub_24EF0C628((uint64_t)v12, (uint64_t)v9);
  FilterLoadState.hash(into:)(a1);
  uint64_t v3 = type metadata accessor for FilterState();
  sub_24EF86B00();
  sub_24EF42880(&qword_269986A38, MEMORY[0x263F3DF60]);
  sub_24EF875A0();
  type metadata accessor for FilterLayout();
  sub_24EF87AA0();
  sub_24EF86A60();
  sub_24EF42880(&qword_269986A40, MEMORY[0x263F07690]);
  sub_24EF875A0();
  uint64_t v4 = v1 + *(int *)(v3 + 28);
  uint64_t v5 = *(void *)(v4 + 32);
  char v6 = *(unsigned char *)(v4 + 40);
  long long v7 = *(_OWORD *)(v4 + 16);
  v9[0] = *(_OWORD *)v4;
  v9[1] = v7;
  uint64_t v10 = v5;
  char v11 = v6;
  FilterItem.hash(into:)();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  return sub_24EF87AB0();
}

uint64_t FilterState.hashValue.getter()
{
  sub_24EF87A90();
  FilterState.hash(into:)(v1);
  return sub_24EF87AD0();
}

uint64_t sub_24EF42638()
{
  sub_24EF87A90();
  FilterState.hash(into:)(v1);
  return sub_24EF87AD0();
}

uint64_t sub_24EF4267C()
{
  sub_24EF87A90();
  FilterState.hash(into:)(v1);
  return sub_24EF87AD0();
}

uint64_t _s16FitnessFiltering11FilterStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_24EF0C628(a1, (uint64_t)v30);
  sub_24EF0C628((uint64_t)v30, (uint64_t)v27);
  sub_24EF0C628(a2, (uint64_t)v31);
  sub_24EF0C628((uint64_t)v31, (uint64_t)v24);
  if ((_s16FitnessFiltering15FilterLoadStateO2eeoiySbAC_ACtFZ_0((uint64_t)v27, (uint64_t)v24) & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v4 = (int *)type metadata accessor for FilterState();
  uint64_t v5 = v4[5];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  if ((MEMORY[0x25334FBC0](a1 + v5, a2 + v5) & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v8 = type metadata accessor for FilterLayout();
  if (*(unsigned __int8 *)(v6 + *(int *)(v8 + 20)) != *(unsigned __int8 *)(v7 + *(int *)(v8 + 20))) {
    goto LABEL_10;
  }
  if ((MEMORY[0x25334FB40](a1 + v4[6], a2 + v4[6]) & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *(void *)(v9 + 32);
  char v11 = *(unsigned char *)(v9 + 40);
  long long v12 = *(_OWORD *)(v9 + 16);
  v27[0] = *(_OWORD *)v9;
  v27[1] = v12;
  uint64_t v28 = v10;
  char v29 = v11;
  uint64_t v13 = a2 + v4[7];
  uint64_t v14 = *(void *)(v13 + 32);
  char v15 = *(unsigned char *)(v13 + 40);
  long long v16 = *(_OWORD *)(v13 + 16);
  v24[0] = *(_OWORD *)v13;
  v24[1] = v16;
  uint64_t v25 = v14;
  char v26 = v15;
  if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v27, (uint64_t)v24))
  {
    uint64_t v17 = v4[8];
    uint64_t v18 = *(void *)(a1 + v17);
    uint64_t v19 = *(void *)(a1 + v17 + 8);
    uint64_t v20 = (void *)(a2 + v17);
    if (v18 == *v20 && v19 == v20[1] || (char v21 = sub_24EF87A60(), v22 = 0, (v21 & 1) != 0)) {
      char v22 = *(unsigned char *)(a1 + v4[9]) ^ *(unsigned char *)(a2 + v4[9]) ^ 1;
    }
  }
  else
  {
LABEL_10:
    char v22 = 0;
  }
  return v22 & 1;
}

uint64_t sub_24EF42838()
{
  return sub_24EF42880(&qword_269985D18, (void (*)(uint64_t))type metadata accessor for FilterState);
}

uint64_t sub_24EF42880(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for FilterState(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v36 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v65 = *(void *)(a2 + 64);
    uint64_t v38 = *(void *)(a2 + 72);
    uint64_t v39 = *(void *)(a2 + 80);
    uint64_t v40 = *(void *)(a2 + 88);
    uint64_t v41 = *(void *)(a2 + 96);
    uint64_t v42 = *(void *)(a2 + 104);
    uint64_t v43 = *(void *)(a2 + 112);
    uint64_t v44 = *(void *)(a2 + 120);
    uint64_t v45 = *(void *)(a2 + 128);
    uint64_t v46 = *(void *)(a2 + 136);
    uint64_t v47 = *(void *)(a2 + 144);
    uint64_t v48 = *(void *)(a2 + 152);
    uint64_t v49 = *(void *)(a2 + 160);
    uint64_t v51 = *(void *)(a2 + 168);
    uint64_t v52 = *(void *)(a2 + 176);
    uint64_t v53 = *(void *)(a2 + 184);
    uint64_t v54 = *(void *)(a2 + 192);
    uint64_t v55 = *(void *)(a2 + 200);
    uint64_t v56 = *(void *)(a2 + 208);
    uint64_t v57 = *(void *)(a2 + 216);
    uint64_t v58 = *(void *)(a2 + 224);
    uint64_t v59 = *(void *)(a2 + 232);
    uint64_t v60 = *(void *)(a2 + 240);
    uint64_t v61 = *(void *)(a2 + 248);
    uint64_t v62 = *(void *)(a2 + 256);
    uint64_t v63 = *(void *)(a2 + 264);
    char v64 = *(unsigned char *)(a2 + 272);
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v6 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 48);
    uint64_t v12 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 56);
    sub_24EF0C6D0(*(void *)a2, v7, v8, v9, v10, v12, v11, v13, v65, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47,
      v48,
      v49,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v13;
    *(void *)(a1 + 64) = v65;
    *(void *)(a1 + 72) = v38;
    *(void *)(a1 + 80) = v39;
    *(void *)(a1 + 88) = v40;
    *(void *)(a1 + 96) = v41;
    *(void *)(a1 + 104) = v42;
    *(void *)(a1 + 112) = v43;
    *(void *)(a1 + 120) = v44;
    *(void *)(a1 + 128) = v45;
    *(void *)(a1 + 136) = v46;
    *(void *)(a1 + 144) = v47;
    *(void *)(a1 + 152) = v48;
    *(void *)(a1 + 160) = v49;
    *(void *)(a1 + 168) = v51;
    *(void *)(a1 + 176) = v52;
    *(void *)(a1 + 184) = v53;
    *(void *)(a1 + 192) = v54;
    *(void *)(a1 + 200) = v55;
    *(void *)(a1 + 208) = v56;
    *(void *)(a1 + 216) = v57;
    *(void *)(a1 + 224) = v58;
    *(void *)(a1 + 232) = v59;
    *(void *)(a1 + 240) = v60;
    *(void *)(a1 + 248) = v61;
    *(void *)(a1 + 256) = v62;
    *(void *)(a1 + 264) = v63;
    uint64_t v14 = a3[5];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = a2 + v14;
    *(unsigned char *)(a1 + 272) = v64;
    uint64_t v17 = sub_24EF86B00();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = type metadata accessor for FilterLayout();
    *(unsigned char *)(v15 + *(int *)(v18 + 20)) = *(unsigned char *)(v16 + *(int *)(v18 + 20));
    uint64_t v19 = a3[6];
    uint64_t v20 = a1 + v19;
    uint64_t v21 = a2 + v19;
    uint64_t v22 = sub_24EF86A60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    uint64_t v23 = a3[7];
    uint64_t v24 = a1 + v23;
    uint64_t v25 = a2 + v23;
    uint64_t v26 = *(void *)v25;
    uint64_t v27 = *(void *)(v25 + 8);
    uint64_t v28 = *(void *)(v25 + 16);
    uint64_t v29 = *(void *)(v25 + 24);
    uint64_t v30 = *(void *)(v25 + 32);
    LOBYTE(v10) = *(unsigned char *)(v25 + 40);
    sub_24EEF7798(*(void *)v25, v27, v28, v29, v30, v10);
    *(void *)uint64_t v24 = v26;
    *(void *)(v24 + 8) = v27;
    *(void *)(v24 + 16) = v28;
    *(void *)(v24 + 24) = v29;
    *(void *)(v24 + 32) = v30;
    *(unsigned char *)(v24 + 40) = v10;
    uint64_t v31 = a3[8];
    uint64_t v32 = a3[9];
    uint64_t v33 = (void *)(a1 + v31);
    uint64_t v34 = (void *)(a2 + v31);
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    *(unsigned char *)(a1 + v32) = *(unsigned char *)(a2 + v32);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FilterState(uint64_t a1, int *a2)
{
  long long v10 = *(_OWORD *)(a1 + 224);
  long long v11 = *(_OWORD *)(a1 + 240);
  sub_24EF0CC0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    *(void *)(a1 + 256),
    *(void *)(a1 + 264),
    *(unsigned char *)(a1 + 272));
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_24EF86B00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_24EF86A60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[7];
  sub_24EEF7780(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(unsigned char *)(v8 + 40));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FilterState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v36 = *(void *)(a2 + 64);
  uint64_t v37 = *(void *)(a2 + 72);
  uint64_t v38 = *(void *)(a2 + 80);
  uint64_t v39 = *(void *)(a2 + 88);
  uint64_t v40 = *(void *)(a2 + 96);
  uint64_t v41 = *(void *)(a2 + 104);
  uint64_t v42 = *(void *)(a2 + 112);
  uint64_t v43 = *(void *)(a2 + 120);
  uint64_t v44 = *(void *)(a2 + 128);
  uint64_t v45 = *(void *)(a2 + 136);
  uint64_t v46 = *(void *)(a2 + 144);
  uint64_t v47 = *(void *)(a2 + 152);
  uint64_t v48 = *(void *)(a2 + 160);
  uint64_t v49 = *(void *)(a2 + 168);
  uint64_t v50 = *(void *)(a2 + 176);
  uint64_t v51 = *(void *)(a2 + 184);
  uint64_t v52 = *(void *)(a2 + 192);
  uint64_t v53 = *(void *)(a2 + 200);
  uint64_t v54 = *(void *)(a2 + 208);
  uint64_t v55 = *(void *)(a2 + 216);
  uint64_t v56 = *(void *)(a2 + 224);
  uint64_t v57 = *(void *)(a2 + 232);
  uint64_t v58 = *(void *)(a2 + 240);
  uint64_t v59 = *(void *)(a2 + 248);
  uint64_t v60 = *(void *)(a2 + 256);
  uint64_t v61 = *(void *)(a2 + 264);
  char v62 = *(unsigned char *)(a2 + 272);
  uint64_t v5 = *(void *)(a2 + 56);
  uint64_t v6 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 40);
  sub_24EF0C6D0(*(void *)a2, v7, v8, v9, v10, v12, v11, v5, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v36;
  *(void *)(a1 + 72) = v37;
  *(void *)(a1 + 80) = v38;
  *(void *)(a1 + 88) = v39;
  *(void *)(a1 + 96) = v40;
  *(void *)(a1 + 104) = v41;
  *(void *)(a1 + 112) = v42;
  *(void *)(a1 + 120) = v43;
  *(void *)(a1 + 128) = v44;
  *(void *)(a1 + 136) = v45;
  *(void *)(a1 + 144) = v46;
  *(void *)(a1 + 152) = v47;
  *(void *)(a1 + 160) = v48;
  *(void *)(a1 + 168) = v49;
  *(void *)(a1 + 176) = v50;
  *(void *)(a1 + 184) = v51;
  *(void *)(a1 + 192) = v52;
  *(void *)(a1 + 200) = v53;
  *(void *)(a1 + 208) = v54;
  *(void *)(a1 + 216) = v55;
  *(void *)(a1 + 224) = v56;
  *(void *)(a1 + 232) = v57;
  *(void *)(a1 + 240) = v58;
  *(void *)(a1 + 248) = v59;
  *(void *)(a1 + 256) = v60;
  *(void *)(a1 + 264) = v61;
  uint64_t v13 = a3[5];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(unsigned char *)(a1 + 272) = v62;
  uint64_t v16 = sub_24EF86B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = type metadata accessor for FilterLayout();
  *(unsigned char *)(v14 + *(int *)(v17 + 20)) = *(unsigned char *)(v15 + *(int *)(v17 + 20));
  uint64_t v18 = a3[6];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_24EF86A60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  uint64_t v22 = a3[7];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)v24;
  uint64_t v26 = *(void *)(v24 + 8);
  uint64_t v27 = *(void *)(v24 + 16);
  uint64_t v28 = *(void *)(v24 + 24);
  uint64_t v29 = *(void *)(v24 + 32);
  LOBYTE(v9) = *(unsigned char *)(v24 + 40);
  sub_24EEF7798(*(void *)v24, v26, v27, v28, v29, v9);
  *(void *)uint64_t v23 = v25;
  *(void *)(v23 + 8) = v26;
  *(void *)(v23 + 16) = v27;
  *(void *)(v23 + 24) = v28;
  *(void *)(v23 + 32) = v29;
  *(unsigned char *)(v23 + 40) = v9;
  uint64_t v30 = a3[8];
  uint64_t v31 = a3[9];
  uint64_t v32 = (void *)(a1 + v30);
  uint64_t v33 = (void *)(a2 + v30);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  *(unsigned char *)(a1 + v31) = *(unsigned char *)(a2 + v31);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FilterState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v89 = *(void *)(a2 + 8);
  uint64_t v90 = *(void *)a2;
  uint64_t v87 = *(void *)(a2 + 24);
  uint64_t v88 = *(void *)(a2 + 16);
  uint64_t v85 = *(void *)(a2 + 40);
  uint64_t v86 = *(void *)(a2 + 32);
  uint64_t v84 = *(void *)(a2 + 48);
  uint64_t v83 = *(void *)(a2 + 56);
  uint64_t v63 = *(void *)(a2 + 64);
  uint64_t v64 = *(void *)(a2 + 72);
  uint64_t v65 = *(void *)(a2 + 80);
  uint64_t v66 = *(void *)(a2 + 88);
  uint64_t v67 = *(void *)(a2 + 96);
  uint64_t v68 = *(void *)(a2 + 104);
  uint64_t v69 = *(void *)(a2 + 112);
  uint64_t v70 = *(void *)(a2 + 120);
  uint64_t v71 = *(void *)(a2 + 128);
  uint64_t v5 = *(void *)(a2 + 144);
  uint64_t v6 = *(void *)(a2 + 152);
  uint64_t v7 = *(void *)(a2 + 160);
  uint64_t v8 = *(void *)(a2 + 168);
  uint64_t v9 = *(void *)(a2 + 176);
  uint64_t v10 = *(void *)(a2 + 184);
  uint64_t v11 = *(void *)(a2 + 192);
  uint64_t v12 = *(void *)(a2 + 200);
  uint64_t v72 = *(void *)(a2 + 136);
  uint64_t v73 = *(void *)(a2 + 208);
  uint64_t v74 = *(void *)(a2 + 216);
  uint64_t v75 = *(void *)(a2 + 224);
  uint64_t v76 = *(void *)(a2 + 232);
  uint64_t v77 = *(void *)(a2 + 240);
  uint64_t v78 = *(void *)(a2 + 248);
  uint64_t v79 = *(void *)(a2 + 256);
  uint64_t v80 = *(void *)(a2 + 264);
  char v81 = *(unsigned char *)(a2 + 272);
  sub_24EF0C6D0(*(void *)a2, v89, v88, v87, v86, v85, v84, v83, v63, v64, v65, v66, v67, v68, v69, v70, *(void *)(a2 + 128), *(void *)(a2 + 136), *(void *)(a2 + 144),
    *(void *)(a2 + 152),
    *(void *)(a2 + 160),
    *(void *)(a2 + 168),
    *(void *)(a2 + 176),
    *(void *)(a2 + 184),
    *(void *)(a2 + 192),
    *(void *)(a2 + 200),
    *(void *)(a2 + 208),
    *(void *)(a2 + 216),
    *(void *)(a2 + 224),
    *(void *)(a2 + 232),
    *(void *)(a2 + 240),
    *(void *)(a2 + 248),
    *(void *)(a2 + 256),
    *(void *)(a2 + 264),
    *(unsigned char *)(a2 + 272));
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  *(void *)a1 = v90;
  *(void *)(a1 + 8) = v89;
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v88;
  *(void *)(a1 + 24) = v87;
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v86;
  *(void *)(a1 + 40) = v85;
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v84;
  *(void *)(a1 + 56) = v83;
  long long v21 = *(_OWORD *)(a1 + 64);
  long long v22 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v63;
  *(void *)(a1 + 72) = v64;
  *(void *)(a1 + 80) = v65;
  *(void *)(a1 + 88) = v66;
  long long v23 = *(_OWORD *)(a1 + 96);
  long long v24 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v67;
  *(void *)(a1 + 104) = v68;
  *(void *)(a1 + 112) = v69;
  *(void *)(a1 + 120) = v70;
  long long v25 = *(_OWORD *)(a1 + 128);
  long long v26 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v71;
  *(void *)(a1 + 136) = v72;
  *(void *)(a1 + 144) = v5;
  long long v27 = *(_OWORD *)(a1 + 160);
  long long v28 = *(_OWORD *)(a1 + 176);
  *(void *)(a1 + 152) = v6;
  *(void *)(a1 + 160) = v7;
  *(void *)(a1 + 168) = v8;
  *(void *)(a1 + 176) = v9;
  long long v29 = *(_OWORD *)(a1 + 192);
  long long v30 = *(_OWORD *)(a1 + 208);
  *(void *)(a1 + 184) = v10;
  *(void *)(a1 + 192) = v11;
  *(void *)(a1 + 200) = v12;
  *(void *)(a1 + 208) = v73;
  *(void *)(a1 + 216) = v74;
  long long v31 = *(_OWORD *)(a1 + 224);
  long long v32 = *(_OWORD *)(a1 + 240);
  *(void *)(a1 + 224) = v75;
  *(void *)(a1 + 232) = v76;
  *(void *)(a1 + 240) = v77;
  *(void *)(a1 + 248) = v78;
  uint64_t v33 = *(void *)(a1 + 256);
  uint64_t v34 = *(void *)(a1 + 264);
  *(void *)(a1 + 256) = v79;
  *(void *)(a1 + 264) = v80;
  char v35 = *(unsigned char *)(a1 + 272);
  *(unsigned char *)(a1 + 272) = v81;
  sub_24EF0CC0C(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    v34,
    v35);
  uint64_t v36 = a3[5];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_24EF86B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  uint64_t v40 = type metadata accessor for FilterLayout();
  *(unsigned char *)(v37 + *(int *)(v40 + 20)) = *(unsigned char *)(v38 + *(int *)(v40 + 20));
  uint64_t v41 = a3[6];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = sub_24EF86A60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
  uint64_t v45 = a3[7];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = *(void *)v47;
  uint64_t v49 = *(void *)(v47 + 8);
  uint64_t v50 = *(void *)(v47 + 16);
  uint64_t v51 = *(void *)(v47 + 24);
  uint64_t v52 = *(void *)(v47 + 32);
  LOBYTE(v10) = *(unsigned char *)(v47 + 40);
  sub_24EEF7798(*(void *)v47, v49, v50, v51, v52, v10);
  uint64_t v53 = *(void *)v46;
  uint64_t v54 = *(void *)(v46 + 8);
  uint64_t v55 = *(void *)(v46 + 16);
  uint64_t v56 = *(void *)(v46 + 24);
  uint64_t v57 = *(void *)(v46 + 32);
  *(void *)uint64_t v46 = v48;
  *(void *)(v46 + 8) = v49;
  *(void *)(v46 + 16) = v50;
  *(void *)(v46 + 24) = v51;
  *(void *)(v46 + 32) = v52;
  unsigned __int8 v58 = *(unsigned char *)(v46 + 40);
  *(unsigned char *)(v46 + 40) = v10;
  sub_24EEF7780(v53, v54, v55, v56, v57, v58);
  uint64_t v59 = a3[8];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (void *)(a2 + v59);
  *uint64_t v60 = *v61;
  v60[1] = v61[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

char *initializeWithTake for FilterState(char *a1, char *a2, int *a3)
{
  memcpy(a1, a2, 0x111uLL);
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_24EF86B00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for FilterLayout();
  v7[*(int *)(v10 + 20)] = v8[*(int *)(v10 + 20)];
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_24EF86A60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v15];
  uint64_t v18 = &a2[v15];
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *(_OWORD *)(v17 + 25) = *(_OWORD *)(v18 + 25);
  *(_OWORD *)&a1[v16] = *(_OWORD *)&a2[v16];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t assignWithTake for FilterState(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 272);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  long long v15 = *(_OWORD *)(a1 + 64);
  long long v16 = *(_OWORD *)(a1 + 80);
  long long v17 = *(_OWORD *)(a1 + 96);
  long long v18 = *(_OWORD *)(a1 + 112);
  long long v19 = *(_OWORD *)(a1 + 128);
  long long v20 = *(_OWORD *)(a1 + 144);
  long long v21 = *(_OWORD *)(a1 + 160);
  long long v22 = *(_OWORD *)(a1 + 176);
  long long v23 = *(_OWORD *)(a1 + 192);
  long long v24 = *(_OWORD *)(a1 + 208);
  long long v25 = *(_OWORD *)(a1 + 224);
  long long v26 = *(_OWORD *)(a1 + 240);
  uint64_t v27 = *(void *)(a1 + 256);
  uint64_t v28 = *(void *)(a1 + 264);
  char v29 = *(unsigned char *)(a1 + 272);
  long long v30 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v30;
  long long v31 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v31;
  long long v32 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v32;
  long long v33 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v33;
  long long v34 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v34;
  long long v35 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v35;
  long long v36 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v36;
  long long v37 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v37;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 272) = v6;
  sub_24EF0CC0C(v7, v8, v9, v10, v11, v12, v13, v14, v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19, *((uint64_t *)&v19 + 1), v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    v28,
    v29);
  uint64_t v38 = a3[5];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = sub_24EF86B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 40))(v39, v40, v41);
  uint64_t v42 = type metadata accessor for FilterLayout();
  *(unsigned char *)(v39 + *(int *)(v42 + 20)) = *(unsigned char *)(v40 + *(int *)(v42 + 20));
  uint64_t v43 = a3[6];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_24EF86A60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[7];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = *(void *)(v49 + 32);
  char v51 = *(unsigned char *)(v49 + 40);
  uint64_t v52 = *(void *)v48;
  uint64_t v53 = *(void *)(v48 + 8);
  uint64_t v54 = *(void *)(v48 + 16);
  uint64_t v55 = *(void *)(v48 + 24);
  uint64_t v56 = *(void *)(v48 + 32);
  long long v57 = *(_OWORD *)(v49 + 16);
  *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  *(_OWORD *)(v48 + 16) = v57;
  *(void *)(v48 + 32) = v50;
  unsigned __int8 v58 = *(unsigned char *)(v48 + 40);
  *(unsigned char *)(v48 + 40) = v51;
  sub_24EEF7780(v52, v53, v54, v55, v56, v58);
  uint64_t v59 = a3[8];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (uint64_t *)(a2 + v59);
  uint64_t v63 = *v61;
  uint64_t v62 = v61[1];
  *uint64_t v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for FilterState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EF437E4);
}

uint64_t sub_24EF437E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FilterLayout();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_24EF86A60();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[8] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for FilterState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EF4390C);
}

uint64_t sub_24EF4390C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for FilterLayout();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_24EF86A60();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[8] + 8) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  return v13(a1 + v11, a2, a2, v9);
}

uint64_t sub_24EF43A1C()
{
  uint64_t result = type metadata accessor for FilterLayout();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24EF86A60();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FilterState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FilterState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF43C68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterState.CodingKeys()
{
  return &type metadata for FilterState.CodingKeys;
}

unint64_t sub_24EF43CA4()
{
  unint64_t result = qword_269986A58;
  if (!qword_269986A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986A58);
  }
  return result;
}

unint64_t sub_24EF43CFC()
{
  unint64_t result = qword_269986A60;
  if (!qword_269986A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986A60);
  }
  return result;
}

unint64_t sub_24EF43D54()
{
  unint64_t result = qword_269986A68;
  if (!qword_269986A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986A68);
  }
  return result;
}

uint64_t sub_24EF43DA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746C6946746F6F72 && a2 == 0xEE006D6574497265 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746C6946746F6F72 && a2 == 0xEE00656D614E7265 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000024EF90DE0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_24EF44068(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      unint64_t result = 0x704F7265746C6966;
      break;
    case 3:
      unint64_t result = 0x6F547265746C6966;
      break;
    case 4:
      unint64_t result = 0x61646F4D746F6F72;
      break;
    case 5:
      unint64_t result = 0x65646F4D74726F73;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EF44180(char a1)
{
  unint64_t result = 0x7265746C6966;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x704F7265746C6966;
      break;
    case 2:
      unint64_t result = 0x65527265746C6966;
      break;
    case 3:
      unint64_t result = 0x61646F4D746F6F72;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x65646F4D74726F73;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EF44290()
{
  return sub_24EF44068(*v0);
}

uint64_t sub_24EF44298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF48C58(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EF442C0(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_24EF442CC(uint64_t a1)
{
  unint64_t v2 = sub_24EF47C50();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF44308(uint64_t a1)
{
  unint64_t v2 = sub_24EF47C50();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24EF44344()
{
  unint64_t result = 0x676E69796C707061;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1701602409;
      break;
    case 2:
      unint64_t result = 0x646564616F6CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF443CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF48F9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF443F4(uint64_t a1)
{
  unint64_t v2 = sub_24EF4796C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF44430(uint64_t a1)
{
  unint64_t v2 = sub_24EF4796C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF4446C(uint64_t a1)
{
  unint64_t v2 = sub_24EF47BFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF444A8(uint64_t a1)
{
  unint64_t v2 = sub_24EF47BFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24EF444E4()
{
  return sub_24EF44180(*v0);
}

uint64_t sub_24EF444EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF4913C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF44514(uint64_t a1)
{
  unint64_t v2 = sub_24EF47A14();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF44550(uint64_t a1)
{
  unint64_t v2 = sub_24EF47A14();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF4458C(uint64_t a1)
{
  unint64_t v2 = sub_24EF479C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF445C8(uint64_t a1)
{
  unint64_t v2 = sub_24EF479C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FilterLoadState.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  *(void *)&long long v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986A70);
  *(void *)&long long v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986A78);
  uint64_t v53 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  *(void *)&long long v59 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986A80);
  uint64_t v54 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986A88);
  uint64_t v52 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  long long v57 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986A90);
  uint64_t v61 = *(void *)(v11 - 8);
  uint64_t v62 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EF0C628(v2, (uint64_t)v69);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF4796C();
  uint64_t v14 = v13;
  sub_24EF87AF0();
  sub_24EF0C628((uint64_t)v69, (uint64_t)v70);
  switch(sub_24EF0C6B8((uint64_t)v70))
  {
    case 1u:
      uint64_t v33 = nullsub_1(v70);
      long long v58 = *(_OWORD *)v33;
      uint64_t v34 = *(void *)(v33 + 16);
      char v35 = *(unsigned char *)(v33 + 24);
      LOBYTE(v64) = 2;
      sub_24EF47A14();
      uint64_t v36 = v59;
      uint64_t v20 = v62;
      long long v21 = v14;
      sub_24EF879A0();
      long long v64 = v58;
      *(void *)&long long v65 = v34;
      BYTE8(v65) = v35;
      char v71 = 0;
      sub_24EF26184();
      uint64_t v37 = v60;
      uint64_t v38 = v63;
      sub_24EF879C0();
      if (!v38)
      {
        uint64_t v39 = *(void *)(v33 + 96);
        long long v40 = *(_OWORD *)(v33 + 48);
        long long v64 = *(_OWORD *)(v33 + 32);
        long long v65 = v40;
        long long v41 = *(_OWORD *)(v33 + 80);
        long long v66 = *(_OWORD *)(v33 + 64);
        long long v67 = v41;
        uint64_t v68 = v39;
        char v71 = 1;
        sub_24EF260DC();
        sub_24EF87A20();
        uint64_t v42 = *(void *)(v33 + 168);
        long long v43 = *(_OWORD *)(v33 + 120);
        long long v64 = *(_OWORD *)(v33 + 104);
        long long v65 = v43;
        long long v44 = *(_OWORD *)(v33 + 152);
        long long v66 = *(_OWORD *)(v33 + 136);
        long long v67 = v44;
        uint64_t v68 = v42;
        char v71 = 2;
        sub_24EF261D8();
        sub_24EF879C0();
        uint64_t v45 = *(void *)(v33 + 240);
        long long v46 = *(_OWORD *)(v33 + 192);
        long long v64 = *(_OWORD *)(v33 + 176);
        long long v65 = v46;
        long long v47 = *(_OWORD *)(v33 + 224);
        long long v66 = *(_OWORD *)(v33 + 208);
        long long v67 = v47;
        uint64_t v68 = v45;
        char v71 = 3;
        sub_24EF47A68();
        sub_24EF879C0();
        *(void *)&long long v64 = *(void *)(v33 + 248);
        char v71 = 4;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269986AB8);
        sub_24EF47B10(&qword_269986AC0, &qword_269986AB8, (void (*)(void))sub_24EF47ABC);
        sub_24EF87A20();
        *(void *)&long long v64 = *(void *)(v33 + 256);
        char v71 = 5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269986AD0);
        sub_24EF47B10(&qword_269986AD8, &qword_269986AD0, (void (*)(void))sub_24EEF7E58);
        sub_24EF87A20();
        *(void *)&long long v64 = *(void *)(v33 + 264);
        char v71 = 6;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269986AE0);
        sub_24EF47B7C(&qword_269986AE8, &qword_269986AF0);
        sub_24EF87A20();
      }
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v36, v37);
      goto LABEL_8;
    case 2u:
      LOBYTE(v64) = 1;
      sub_24EF47BFC();
      uint64_t v49 = v62;
      sub_24EF879A0();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v7);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v13, v49);
      break;
    case 3u:
      LOBYTE(v64) = 3;
      sub_24EF479C0();
      uint64_t v50 = v62;
      sub_24EF879A0();
      (*(void (**)(char *, void))(v55 + 8))(v5, v56);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v13, v50);
      break;
    default:
      uint64_t v15 = nullsub_1(v70);
      long long v16 = *(_OWORD *)v15;
      long long v59 = *(_OWORD *)(v15 + 16);
      long long v60 = v16;
      long long v17 = *(_OWORD *)(v15 + 32);
      long long v55 = *(_OWORD *)(v15 + 48);
      long long v56 = v17;
      uint64_t v18 = *(void *)(v15 + 64);
      LOBYTE(v64) = 0;
      sub_24EF47C50();
      long long v19 = v57;
      uint64_t v20 = v62;
      long long v21 = v14;
      sub_24EF879A0();
      long long v64 = v60;
      long long v65 = v59;
      long long v66 = v56;
      long long v67 = v55;
      uint64_t v68 = v18;
      char v71 = 0;
      sub_24EF261D8();
      uint64_t v22 = v58;
      uint64_t v23 = v63;
      sub_24EF879C0();
      if (!v23)
      {
        *(void *)&long long v64 = *(void *)(v15 + 72);
        char v71 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269986AB8);
        sub_24EF47B10(&qword_269986AC0, &qword_269986AB8, (void (*)(void))sub_24EF47ABC);
        sub_24EF87A20();
        uint64_t v24 = *(void *)(v15 + 144);
        long long v25 = *(_OWORD *)(v15 + 96);
        long long v64 = *(_OWORD *)(v15 + 80);
        long long v65 = v25;
        long long v26 = *(_OWORD *)(v15 + 128);
        long long v66 = *(_OWORD *)(v15 + 112);
        long long v67 = v26;
        uint64_t v68 = v24;
        char v71 = 2;
        sub_24EF260DC();
        sub_24EF87A20();
        char v27 = *(unsigned char *)(v15 + 160);
        uint64_t v28 = *(void *)(v15 + 168);
        char v29 = *(unsigned char *)(v15 + 176);
        *(void *)&long long v64 = *(void *)(v15 + 152);
        BYTE8(v64) = v27;
        *(void *)&long long v65 = v28;
        BYTE8(v65) = v29;
        char v71 = 3;
        sub_24EF26184();
        sub_24EF87A20();
        uint64_t v30 = *(void *)(v15 + 248);
        long long v31 = *(_OWORD *)(v15 + 200);
        long long v64 = *(_OWORD *)(v15 + 184);
        long long v65 = v31;
        long long v32 = *(_OWORD *)(v15 + 232);
        long long v66 = *(_OWORD *)(v15 + 216);
        long long v67 = v32;
        uint64_t v68 = v30;
        char v71 = 4;
        sub_24EF47A68();
        sub_24EF879C0();
        *(void *)&long long v64 = *(void *)(v15 + 256);
        char v71 = 5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269986AD0);
        sub_24EF47B10(&qword_269986AD8, &qword_269986AD0, (void (*)(void))sub_24EEF7E58);
        sub_24EF87A20();
        *(void *)&long long v64 = *(void *)(v15 + 264);
        char v71 = 6;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269986AE0);
        sub_24EF47B7C(&qword_269986AE8, &qword_269986AF0);
        sub_24EF87A20();
      }
      (*(void (**)(char *, uint64_t))(v52 + 8))(v19, v22);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v21, v20);
      break;
  }
  return result;
}

uint64_t FilterLoadState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v94 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986B08);
  uint64_t v91 = *(void *)(v3 - 8);
  uint64_t v92 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v96 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986B10);
  uint64_t v88 = *(void (***)(char *, uint64_t))(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v98 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986B18);
  uint64_t v89 = *(void *)(v6 - 8);
  uint64_t v90 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986B20);
  uint64_t v93 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986B28);
  uint64_t v97 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  char v99 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_24EF4796C();
  long long v16 = v170;
  sub_24EF87AE0();
  if (v16) {
    goto LABEL_9;
  }
  long long v17 = v96;
  uint64_t v170 = v11;
  uint64_t v87 = v9;
  uint64_t v18 = v98;
  uint64_t v19 = sub_24EF87980();
  uint64_t v20 = v19;
  if (*(void *)(v19 + 16) != 1)
  {
    long long v21 = v14;
    uint64_t v22 = sub_24EF87880();
    swift_allocError();
    uint64_t v23 = v12;
    long long v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269986030);
    *long long v25 = &type metadata for FilterLoadState;
    sub_24EF878F0();
    sub_24EF87870();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v25, *MEMORY[0x263F8DCB0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v21, v23);
LABEL_9:
    uint64_t v26 = (uint64_t)v99;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  switch(*(unsigned char *)(v19 + 32))
  {
    case 1:
      LOBYTE(v122) = 1;
      sub_24EF47BFC();
      sub_24EF878E0();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v8, v90);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v12);
      sub_24EF0C684((uint64_t)&v135);
      goto LABEL_11;
    case 2:
      LOBYTE(v135) = 2;
      sub_24EF47A14();
      sub_24EF878E0();
      uint64_t v96 = (char *)v12;
      LOBYTE(v135) = 0;
      sub_24EF27954();
      sub_24EF87910();
      uint64_t v92 = v20;
      uint64_t v86 = v14;
      uint64_t v31 = v131;
      long long v32 = v132;
      uint64_t v33 = v133;
      int v34 = v134;
      LOBYTE(v135) = 1;
      sub_24EF27900();
      sub_24EF87970();
      uint64_t v83 = v31;
      uint64_t v84 = v32;
      uint64_t v85 = v33;
      LODWORD(v87) = v34;
      uint64_t v36 = v122;
      uint64_t v37 = v123;
      uint64_t v170 = v124;
      uint64_t v93 = v125;
      uint64_t v90 = (uint64_t)v127;
      uint64_t v91 = v126;
      uint64_t v38 = v129;
      uint64_t v89 = v128;
      uint64_t v39 = v130;
      LOBYTE(v135) = 2;
      sub_24EF279A8();
      sub_24EF87910();
      uint64_t v74 = (uint64_t)v38;
      uint64_t v80 = v37;
      uint64_t v81 = v36;
      uint64_t v41 = v113;
      uint64_t v75 = v114;
      uint64_t v76 = v115;
      uint64_t v77 = v116;
      uint64_t v78 = v117;
      uint64_t v42 = v119;
      uint64_t v79 = v118;
      uint64_t v43 = v120;
      long long v44 = v121;
      LOBYTE(v135) = 3;
      sub_24EF47CA4();
      sub_24EF87910();
      uint64_t v82 = 0;
      uint64_t v70 = (uint64_t)v44;
      uint64_t v71 = v41;
      uint64_t v72 = v43;
      uint64_t v73 = v42;
      uint64_t v49 = v104;
      uint64_t v48 = v105;
      uint64_t v64 = v39;
      uint64_t v65 = v106;
      uint64_t v66 = v107;
      uint64_t v67 = v108;
      uint64_t v50 = v110;
      uint64_t v51 = v112;
      uint64_t v68 = v109;
      uint64_t v69 = v111;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986AB8);
      LOBYTE(v135) = 4;
      sub_24EF47B10(&qword_269986B38, &qword_269986AB8, (void (*)(void))sub_24EF47CF8);
      uint64_t v52 = v98;
      uint64_t v53 = v82;
      sub_24EF87970();
      uint64_t v82 = v53;
      if (v53)
      {
        sub_24EF0CF9C(v83);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24EF0CE70(v71);
        sub_24EF0CF1C(v49);
        v88[1](v52, v95);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v97 + 8))(v86, v96);
        uint64_t v26 = (uint64_t)v99;
        return __swift_destroy_boxed_opaque_existential_1(v26);
      }
      uint64_t v60 = v51;
      uint64_t v61 = v49;
      uint64_t v62 = v48;
      uint64_t v63 = v50;
      uint64_t v56 = v103;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986AD0);
      LOBYTE(v135) = 5;
      sub_24EF47B10(&qword_269986B48, &qword_269986AD0, (void (*)(void))sub_24EEF82F0);
      uint64_t v57 = v82;
      sub_24EF87970();
      if (v57)
      {
        sub_24EF0CF9C(v83);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24EF0CE70(v71);
        sub_24EF0CF1C(v61);
        swift_bridgeObjectRelease();
        v88[1](v18, v95);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v97 + 8))(v86, v96);
        goto LABEL_9;
      }
      uint64_t v59 = v102;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986AE0);
      char v100 = 6;
      sub_24EF47B7C(&qword_269986B50, &qword_269986B58);
      sub_24EF87970();
      v88[1](v18, v95);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v97 + 8))(v86, v96);
      uint64_t v135 = v83;
      uint64_t v136 = (void (**)(char *, uint64_t))v84;
      uint64_t v137 = v85;
      LOBYTE(v138) = v87;
      uint64_t v139 = v81;
      uint64_t v140 = v80;
      uint64_t v141 = (uint64_t)v170;
      unint64_t v142 = (char *)v93;
      uint64_t v143 = v91;
      uint64_t v144 = v90;
      uint64_t v145 = v89;
      uint64_t v146 = (char *)v74;
      uint64_t v147 = (char *)v64;
      uint64_t v148 = v71;
      uint64_t v149 = v75;
      uint64_t v150 = v76;
      uint64_t v151 = (char *)v77;
      uint64_t v152 = v78;
      uint64_t v153 = v79;
      uint64_t v154 = v73;
      uint64_t v155 = v72;
      uint64_t v156 = v70;
      uint64_t v157 = v61;
      uint64_t v158 = v62;
      uint64_t v159 = v65;
      uint64_t v160 = v66;
      uint64_t v161 = v67;
      uint64_t v162 = v68;
      uint64_t v163 = v63;
      uint64_t v164 = v69;
      uint64_t v165 = v60;
      uint64_t v166 = v56;
      uint64_t v167 = v59;
      uint64_t v168 = v101;
      sub_24EF2177C((uint64_t)&v135);
LABEL_11:
      sub_24EF0C628((uint64_t)&v135, (uint64_t)v169);
      uint64_t v28 = (uint64_t)v99;
      sub_24EF0C628((uint64_t)v169, v94);
      uint64_t v26 = v28;
      break;
    case 3:
      LOBYTE(v122) = 3;
      sub_24EF479C0();
      sub_24EF878E0();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v17, v92);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v12);
      sub_24EF0CFDC((uint64_t)&v135);
      goto LABEL_11;
    default:
      LOBYTE(v135) = 0;
      sub_24EF47C50();
      sub_24EF878E0();
      LOBYTE(v135) = 0;
      sub_24EF279A8();
      sub_24EF87910();
      uint64_t v85 = v122;
      uint64_t v86 = v14;
      uint64_t v88 = (void (**)(char *, uint64_t))v123;
      uint64_t v89 = (uint64_t)v124;
      uint64_t v90 = v125;
      uint64_t v91 = v126;
      uint64_t v92 = v20;
      uint64_t v98 = v127;
      char v29 = v129;
      uint64_t v95 = v128;
      uint64_t v96 = (char *)v12;
      uint64_t v30 = v130;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986AB8);
      LOBYTE(v135) = 1;
      sub_24EF47B10(&qword_269986B38, &qword_269986AB8, (void (*)(void))sub_24EF47CF8);
      sub_24EF87970();
      uint64_t v83 = v30;
      uint64_t v84 = v29;
      uint64_t v35 = v103;
      LOBYTE(v135) = 2;
      sub_24EF27900();
      sub_24EF87970();
      uint64_t v81 = v113;
      uint64_t v82 = v35;
      uint64_t v79 = v115;
      uint64_t v80 = v114;
      uint64_t v77 = v117;
      uint64_t v78 = v116;
      uint64_t v75 = v118;
      uint64_t v76 = v119;
      long long v40 = v121;
      uint64_t v74 = v120;
      LOBYTE(v135) = 3;
      sub_24EF27954();
      sub_24EF87970();
      uint64_t v73 = v40;
      uint64_t v45 = v131;
      int v46 = v132;
      uint64_t v47 = v133;
      LODWORD(v72) = v134;
      LOBYTE(v135) = 4;
      sub_24EF47CA4();
      sub_24EF87910();
      LODWORD(v63) = v46;
      uint64_t v54 = v45;
      uint64_t v67 = v104;
      uint64_t v68 = v105;
      uint64_t v69 = v106;
      uint64_t v70 = v107;
      uint64_t v71 = v108;
      uint64_t v55 = v110;
      uint64_t v64 = v109;
      uint64_t v65 = v111;
      uint64_t v66 = v112;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986AD0);
      LOBYTE(v135) = 5;
      sub_24EF47B10(&qword_269986B48, &qword_269986AD0, (void (*)(void))sub_24EEF82F0);
      sub_24EF87970();
      uint64_t v58 = v102;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986AE0);
      char v100 = 6;
      sub_24EF47B7C(&qword_269986B50, &qword_269986B58);
      sub_24EF87970();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v170, v87);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v97 + 8))(v86, v96);
      uint64_t v135 = v85;
      uint64_t v136 = v88;
      uint64_t v137 = v89;
      uint64_t v138 = v90;
      uint64_t v139 = v91;
      uint64_t v140 = v98;
      uint64_t v141 = v95;
      unint64_t v142 = v84;
      uint64_t v143 = v83;
      uint64_t v144 = v82;
      uint64_t v145 = v81;
      uint64_t v146 = v80;
      uint64_t v147 = v79;
      uint64_t v148 = v78;
      uint64_t v149 = (char *)v77;
      uint64_t v150 = v75;
      uint64_t v151 = v76;
      uint64_t v152 = v74;
      uint64_t v153 = v73;
      uint64_t v154 = (char *)v54;
      LOBYTE(v155) = v63;
      uint64_t v156 = v47;
      LOBYTE(v157) = v72;
      uint64_t v158 = v67;
      uint64_t v159 = v68;
      uint64_t v160 = v69;
      uint64_t v161 = v70;
      uint64_t v162 = v71;
      uint64_t v163 = v64;
      uint64_t v164 = v55;
      uint64_t v165 = v65;
      uint64_t v166 = v66;
      uint64_t v167 = v58;
      uint64_t v168 = v101;
      sub_24EF21F10((uint64_t)&v135);
      goto LABEL_11;
  }
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_24EF46780@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FilterLoadState.init(from:)(a1, a2);
}

uint64_t sub_24EF46798(void *a1)
{
  return FilterLoadState.encode(to:)(a1);
}

uint64_t FilterLoadState.hash(into:)(long long *a1)
{
  sub_24EF0C628(v1, (uint64_t)v16);
  sub_24EF0C628((uint64_t)v16, (uint64_t)v17);
  switch(sub_24EF0C6B8((uint64_t)v17))
  {
    case 1u:
      uint64_t v5 = (uint64_t *)nullsub_1(v17);
      uint64_t v6 = *v5;
      sub_24EF87AA0();
      sub_24EF87AB0();
      if (v6) {
        Filter.hash(into:)((uint64_t)a1);
      }
      uint64_t v9 = v5[13];
      FilterOptions.hash(into:)(a1);
      if (v9)
      {
        sub_24EF87AB0();
        FilterResult.hash(into:)((uint64_t)a1);
        if (v5[22])
        {
LABEL_11:
          sub_24EF87AB0();
          Modality.hash(into:)(a1);
LABEL_15:
          uint64_t v13 = v5[31];
          uint64_t v14 = v5[32];
          uint64_t v15 = v5[33];
          sub_24EF32950((uint64_t)a1, v13);
          sub_24EF327C8((uint64_t)a1, v14);
          uint64_t v11 = a1;
          uint64_t v12 = v15;
          return sub_24EF31984(v11, v12);
        }
      }
      else
      {
        sub_24EF87AB0();
        if (v5[22]) {
          goto LABEL_11;
        }
      }
      sub_24EF87AB0();
      goto LABEL_15;
    case 2u:
    case 3u:
      return sub_24EF87AA0();
    default:
      uint64_t v3 = (uint64_t *)nullsub_1(v17);
      uint64_t v4 = *v3;
      sub_24EF87AA0();
      sub_24EF87AB0();
      if (v4) {
        FilterResult.hash(into:)((uint64_t)a1);
      }
      uint64_t v8 = v3[23];
      sub_24EF32950((uint64_t)a1, v3[9]);
      FilterOptions.hash(into:)(a1);
      Filter.hash(into:)((uint64_t)a1);
      sub_24EF87AB0();
      if (v8) {
        Modality.hash(into:)(a1);
      }
      uint64_t v10 = v3[33];
      sub_24EF327C8((uint64_t)a1, v3[32]);
      uint64_t v11 = a1;
      uint64_t v12 = v10;
      return sub_24EF31984(v11, v12);
  }
}

uint64_t FilterLoadState.hashValue.getter()
{
  sub_24EF0C628(v0, (uint64_t)v4);
  sub_24EF0C628((uint64_t)v4, (uint64_t)v3);
  sub_24EF87A90();
  FilterLoadState.hash(into:)(v2);
  return sub_24EF87AD0();
}

uint64_t sub_24EF46BB0()
{
  sub_24EF0C628(v0, (uint64_t)v4);
  sub_24EF0C628((uint64_t)v4, (uint64_t)v3);
  sub_24EF87A90();
  FilterLoadState.hash(into:)(v2);
  return sub_24EF87AD0();
}

uint64_t sub_24EF46C10()
{
  sub_24EF0C628(v0, (uint64_t)v4);
  sub_24EF0C628((uint64_t)v4, (uint64_t)v3);
  sub_24EF87A90();
  FilterLoadState.hash(into:)(v2);
  return sub_24EF87AD0();
}

uint64_t _s16FitnessFiltering15FilterLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_24EF0C628(a1, (uint64_t)v149);
  sub_24EF0C628(a2, (uint64_t)v150);
  sub_24EF0C628((uint64_t)v149, (uint64_t)v151);
  sub_24EF0C628((uint64_t)v150, (uint64_t)&v152);
  sub_24EF0C628((uint64_t)v149, (uint64_t)v153);
  switch(sub_24EF0C6B8((uint64_t)v153))
  {
    case 1u:
      uint64_t v3 = nullsub_1(v153);
      sub_24EF0C628((uint64_t)v150, (uint64_t)v148);
      if (sub_24EF0C6B8((uint64_t)v148) != 1) {
        goto LABEL_18;
      }
      uint64_t v4 = nullsub_1(v148);
      uint64_t v23 = *(void *)v3;
      uint64_t v22 = *(void *)(v3 + 8);
      uint64_t v24 = *(void *)(v3 + 16);
      unsigned __int8 v25 = *(unsigned char *)(v3 + 24);
      uint64_t v27 = *(void *)v4;
      uint64_t v26 = *(void *)(v4 + 8);
      uint64_t v28 = *(void *)(v4 + 16);
      char v29 = *(unsigned char *)(v4 + 24);
      if (*(void *)v3)
      {
        uint64_t v30 = *(void *)v3;
        if (v27)
        {
          sub_24EF06CC8(v30);
          sub_24EF49470((uint64_t)v150);
          sub_24EF49470((uint64_t)v149);
          sub_24EF06CC8(v23);
          sub_24EF06CC8(v27);
          if ((sub_24EF05194(v23, v27) & 1) == 0 || ((v26 & 1) == 0) == (v22 & 1) || (sub_24EF05194(v24, v28) & 1) == 0)
          {
            sub_24EF0CF9C(v27);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_24EF0CF9C(v23);
            goto LABEL_19;
          }
          char v126 = sub_24EF065E0(v25, v29);
          sub_24EF0CF9C(v27);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24EF0CF9C(v23);
          if ((v126 & 1) == 0) {
            goto LABEL_19;
          }
LABEL_22:
          uint64_t v33 = *(void *)(v3 + 96);
          uint64_t v34 = *(void *)(v4 + 96);
          long long v35 = *(_OWORD *)(v3 + 48);
          long long v129 = *(_OWORD *)(v3 + 32);
          long long v130 = v35;
          long long v36 = *(_OWORD *)(v3 + 80);
          long long v131 = *(_OWORD *)(v3 + 64);
          long long v132 = v36;
          uint64_t v133 = v33;
          long long v37 = *(_OWORD *)(v4 + 48);
          long long v143 = *(_OWORD *)(v4 + 32);
          long long v144 = v37;
          long long v38 = *(_OWORD *)(v4 + 80);
          long long v145 = *(_OWORD *)(v4 + 64);
          long long v146 = v38;
          uint64_t v147 = v34;
          if ((_s16FitnessFiltering13FilterOptionsV2eeoiySbAC_ACtFZ_0((uint64_t *)&v129, (uint64_t *)&v143) & 1) == 0) {
            goto LABEL_19;
          }
          uint64_t v40 = *(void *)(v3 + 104);
          uint64_t v39 = *(void *)(v3 + 112);
          uint64_t v42 = *(void *)(v3 + 120);
          uint64_t v41 = *(void *)(v3 + 128);
          uint64_t v44 = *(void *)(v3 + 136);
          uint64_t v43 = *(void *)(v3 + 144);
          uint64_t v46 = *(void *)(v3 + 152);
          uint64_t v45 = *(void *)(v3 + 160);
          uint64_t v47 = *(void *)(v3 + 168);
          uint64_t v49 = *(void *)(v4 + 104);
          uint64_t v48 = *(void *)(v4 + 112);
          uint64_t v51 = *(void *)(v4 + 120);
          uint64_t v50 = *(void *)(v4 + 128);
          uint64_t v53 = *(void *)(v4 + 136);
          uint64_t v52 = *(void *)(v4 + 144);
          uint64_t v54 = *(void *)(v4 + 152);
          uint64_t v55 = *(void *)(v4 + 160);
          uint64_t v56 = *(void *)(v4 + 168);
          if (v40)
          {
            *(void *)&long long v129 = *(void *)(v3 + 104);
            *((void *)&v129 + 1) = v39;
            *(void *)&long long v130 = v42;
            *((void *)&v130 + 1) = v41;
            *(void *)&long long v131 = v44;
            *((void *)&v131 + 1) = v43;
            *(void *)&long long v132 = v46;
            *((void *)&v132 + 1) = v45;
            uint64_t v133 = v47;
            uint64_t v121 = v46;
            uint64_t v123 = v45;
            uint64_t v116 = v44;
            uint64_t v119 = v43;
            uint64_t v113 = v41;
            uint64_t v127 = v47;
            if (v49)
            {
              *(void *)&long long v143 = v49;
              *((void *)&v143 + 1) = v48;
              *(void *)&long long v144 = v51;
              *((void *)&v144 + 1) = v50;
              *(void *)&long long v145 = v53;
              *((void *)&v145 + 1) = v52;
              *(void *)&long long v146 = v54;
              *((void *)&v146 + 1) = v55;
              uint64_t v147 = v56;
              sub_24EF0C93C(v40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v103 = _s16FitnessFiltering12FilterResultV2eeoiySbAC_ACtFZ_0((uint64_t *)&v129, (uint64_t *)&v143);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_24EF0CE70(v40);
              if ((v103 & 1) == 0) {
                goto LABEL_19;
              }
LABEL_46:
              uint64_t v72 = *(void *)(v3 + 176);
              uint64_t v71 = *(void *)(v3 + 184);
              uint64_t v74 = *(void *)(v3 + 192);
              uint64_t v73 = *(void *)(v3 + 200);
              uint64_t v76 = *(void *)(v3 + 208);
              uint64_t v75 = *(void *)(v3 + 216);
              uint64_t v78 = *(void *)(v3 + 224);
              uint64_t v77 = *(void *)(v3 + 232);
              uint64_t v79 = *(void *)(v3 + 240);
              uint64_t v81 = *(void *)(v4 + 176);
              uint64_t v80 = *(void *)(v4 + 184);
              uint64_t v83 = *(void *)(v4 + 192);
              uint64_t v82 = *(void *)(v4 + 200);
              uint64_t v85 = *(void *)(v4 + 208);
              uint64_t v84 = *(void *)(v4 + 216);
              uint64_t v86 = *(void *)(v4 + 224);
              uint64_t v87 = *(void *)(v4 + 232);
              uint64_t v88 = *(void *)(v4 + 240);
              if (v72)
              {
                *(void *)&long long v129 = *(void *)(v3 + 176);
                *((void *)&v129 + 1) = v71;
                *(void *)&long long v130 = v74;
                *((void *)&v130 + 1) = v73;
                *(void *)&long long v131 = v76;
                *((void *)&v131 + 1) = v75;
                *(void *)&long long v132 = v78;
                *((void *)&v132 + 1) = v77;
                uint64_t v133 = v79;
                uint64_t v122 = v76;
                uint64_t v124 = v78;
                uint64_t v120 = v74;
                uint64_t v128 = v79;
                if (v81)
                {
                  *(void *)&long long v143 = v81;
                  *((void *)&v143 + 1) = v80;
                  *(void *)&long long v144 = v83;
                  *((void *)&v144 + 1) = v82;
                  *(void *)&long long v145 = v85;
                  *((void *)&v145 + 1) = v84;
                  *(void *)&long long v146 = v86;
                  *((void *)&v146 + 1) = v87;
                  uint64_t v147 = v88;
                  sub_24EF0C9E8(v72);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  char v111 = _s16FitnessFiltering8ModalityV2eeoiySbAC_ACtFZ_0((uint64_t)&v129, (uint64_t)&v143);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_24EF0CF1C(v72);
                  if ((v111 & 1) == 0) {
                    goto LABEL_19;
                  }
                  goto LABEL_53;
                }
LABEL_56:
                uint64_t v108 = v75;
                uint64_t v112 = v77;
                uint64_t v95 = v73;
                uint64_t v96 = v71;
                uint64_t v102 = v86;
                uint64_t v106 = v87;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v86 = v102;
                uint64_t v87 = v106;
                uint64_t v78 = v124;
                uint64_t v79 = v128;
                uint64_t v71 = v96;
                uint64_t v74 = v120;
                uint64_t v76 = v122;
                uint64_t v73 = v95;
                uint64_t v75 = v108;
                uint64_t v77 = v112;
              }
              else if (!v81)
              {
LABEL_53:
                if ((sub_24EF5ADC4(*(void *)(v3 + 248), *(void *)(v4 + 248)) & 1) == 0) {
                  goto LABEL_19;
                }
                goto LABEL_54;
              }
              goto LABEL_57;
            }
            uint64_t v93 = v42;
            uint64_t v94 = v39;
            uint64_t v101 = v54;
            uint64_t v105 = v55;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v54 = v101;
            uint64_t v55 = v105;
            uint64_t v45 = v123;
            uint64_t v47 = v127;
            uint64_t v39 = v94;
            uint64_t v42 = v93;
            uint64_t v41 = v113;
            uint64_t v44 = v116;
            uint64_t v43 = v119;
            uint64_t v46 = v121;
          }
          else if (!v49)
          {
            goto LABEL_46;
          }
          *(void *)&long long v129 = v40;
          *((void *)&v129 + 1) = v39;
          *(void *)&long long v130 = v42;
          *((void *)&v130 + 1) = v41;
          *(void *)&long long v131 = v44;
          *((void *)&v131 + 1) = v43;
          *(void *)&long long v132 = v46;
          *((void *)&v132 + 1) = v45;
          uint64_t v133 = v47;
          uint64_t v134 = v49;
          uint64_t v135 = v48;
          uint64_t v136 = v51;
          uint64_t v137 = v50;
          uint64_t v138 = v53;
          uint64_t v139 = v52;
          uint64_t v140 = v54;
          uint64_t v141 = v55;
          uint64_t v142 = v56;
          uint64_t v91 = v49;
LABEL_43:
          sub_24EF0C93C(v91);
          uint64_t v92 = sub_24EF0CE70;
          goto LABEL_44;
        }
        sub_24EF06CC8(v30);
        sub_24EF49470((uint64_t)v150);
        sub_24EF49470((uint64_t)v149);
        sub_24EF06CC8(v23);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_24EF49470((uint64_t)v150);
        sub_24EF49470((uint64_t)v149);
        if (!v27) {
          goto LABEL_22;
        }
      }
      sub_24EF06CC8(v27);
      sub_24EF0CF9C(v23);
      sub_24EF0CF9C(v27);
      goto LABEL_19;
    case 2u:
      sub_24EF0C628((uint64_t)v150, (uint64_t)v148);
      if (sub_24EF0C6B8((uint64_t)v148) == 2) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 3u:
      sub_24EF0C628((uint64_t)v150, (uint64_t)v148);
      if (sub_24EF0C6B8((uint64_t)v148) != 3) {
        goto LABEL_18;
      }
LABEL_16:
      sub_24EF0CA6C((uint64_t)v151);
      char v31 = 1;
      return v31 & 1;
    default:
      uint64_t v3 = nullsub_1(v153);
      sub_24EF0C628((uint64_t)v150, (uint64_t)v148);
      if (sub_24EF0C6B8((uint64_t)v148))
      {
LABEL_18:
        sub_24EF49470((uint64_t)v150);
        sub_24EF49470((uint64_t)v149);
        goto LABEL_19;
      }
      uint64_t v4 = nullsub_1(v148);
      uint64_t v5 = *(void *)v3;
      uint64_t v6 = *(void *)(v3 + 8);
      uint64_t v8 = *(void *)(v3 + 16);
      uint64_t v7 = *(void *)(v3 + 24);
      uint64_t v10 = *(void *)(v3 + 32);
      uint64_t v9 = *(void *)(v3 + 40);
      uint64_t v11 = *(void *)(v3 + 48);
      uint64_t v12 = *(void *)(v3 + 64);
      uint64_t v14 = *(void *)v4;
      uint64_t v13 = *(void *)(v4 + 8);
      uint64_t v16 = *(void *)(v4 + 16);
      uint64_t v15 = *(void *)(v4 + 24);
      uint64_t v18 = *(void *)(v4 + 32);
      uint64_t v17 = *(void *)(v4 + 40);
      uint64_t v20 = *(void *)(v4 + 48);
      uint64_t v19 = *(void *)(v4 + 56);
      uint64_t v21 = *(void *)(v4 + 64);
      uint64_t v125 = *(void *)(v3 + 56);
      if (!*(void *)v3)
      {
        uint64_t v97 = *(void *)(v4 + 64);
        uint64_t v98 = *(void *)(v4 + 8);
        uint64_t v99 = *(void *)(v4 + 16);
        uint64_t v100 = *(void *)(v4 + 24);
        uint64_t v104 = *(void *)(v4 + 32);
        uint64_t v107 = *(void *)(v4 + 40);
        uint64_t v109 = *(void *)(v4 + 48);
        uint64_t v114 = *(void *)(v4 + 56);
        uint64_t v57 = *(void *)(v3 + 24);
        uint64_t v58 = *(void *)(v3 + 32);
        uint64_t v117 = *(void *)(v3 + 40);
        sub_24EF49470((uint64_t)v150);
        sub_24EF49470((uint64_t)v149);
        if (!v14) {
          goto LABEL_29;
        }
LABEL_42:
        *(void *)&long long v129 = v5;
        *((void *)&v129 + 1) = v6;
        *(void *)&long long v130 = v8;
        *((void *)&v130 + 1) = v57;
        *(void *)&long long v131 = v58;
        *((void *)&v131 + 1) = v117;
        *(void *)&long long v132 = v11;
        *((void *)&v132 + 1) = v125;
        uint64_t v133 = v12;
        uint64_t v134 = v14;
        uint64_t v135 = v98;
        uint64_t v136 = v99;
        uint64_t v137 = v100;
        uint64_t v138 = v104;
        uint64_t v139 = v107;
        uint64_t v140 = v109;
        uint64_t v141 = v114;
        uint64_t v142 = v97;
        uint64_t v91 = v14;
        goto LABEL_43;
      }
      *(void *)&long long v129 = *(void *)v3;
      *((void *)&v129 + 1) = v6;
      *(void *)&long long v130 = v8;
      *((void *)&v130 + 1) = v7;
      *(void *)&long long v131 = v10;
      *((void *)&v131 + 1) = v9;
      *(void *)&long long v132 = v11;
      *((void *)&v132 + 1) = v125;
      uint64_t v133 = v12;
      uint64_t v118 = v7;
      if (!v14)
      {
        uint64_t v97 = v21;
        uint64_t v98 = v13;
        uint64_t v99 = v16;
        uint64_t v100 = v15;
        uint64_t v104 = v18;
        uint64_t v107 = v17;
        uint64_t v109 = v20;
        uint64_t v114 = v19;
        uint64_t v89 = v10;
        uint64_t v90 = v9;
        sub_24EF0C93C(v5);
        sub_24EF0C93C(v5);
        sub_24EF49470((uint64_t)v150);
        sub_24EF49470((uint64_t)v149);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v117 = v90;
        swift_bridgeObjectRelease();
        uint64_t v58 = v89;
        swift_bridgeObjectRelease();
        uint64_t v57 = v118;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
      *(void *)&long long v143 = v14;
      *((void *)&v143 + 1) = v13;
      *(void *)&long long v144 = v16;
      *((void *)&v144 + 1) = v15;
      *(void *)&long long v145 = v18;
      *((void *)&v145 + 1) = v17;
      *(void *)&long long v146 = v20;
      *((void *)&v146 + 1) = v19;
      uint64_t v147 = v21;
      sub_24EF0C93C(v5);
      sub_24EF0C93C(v5);
      sub_24EF49470((uint64_t)v150);
      sub_24EF49470((uint64_t)v149);
      char v115 = _s16FitnessFiltering12FilterResultV2eeoiySbAC_ACtFZ_0((uint64_t *)&v129, (uint64_t *)&v143);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EF0CE70(v5);
      if ((v115 & 1) == 0) {
        goto LABEL_19;
      }
LABEL_29:
      if ((sub_24EF5ADC4(*(void *)(v3 + 72), *(void *)(v4 + 72)) & 1) == 0) {
        goto LABEL_19;
      }
      uint64_t v59 = *(void *)(v3 + 144);
      uint64_t v60 = *(void *)(v4 + 144);
      long long v61 = *(_OWORD *)(v3 + 96);
      long long v129 = *(_OWORD *)(v3 + 80);
      long long v130 = v61;
      long long v62 = *(_OWORD *)(v3 + 128);
      long long v131 = *(_OWORD *)(v3 + 112);
      long long v132 = v62;
      uint64_t v133 = v59;
      long long v63 = *(_OWORD *)(v4 + 96);
      long long v143 = *(_OWORD *)(v4 + 80);
      long long v144 = v63;
      long long v64 = *(_OWORD *)(v4 + 128);
      long long v145 = *(_OWORD *)(v4 + 112);
      long long v146 = v64;
      uint64_t v147 = v60;
      if ((_s16FitnessFiltering13FilterOptionsV2eeoiySbAC_ACtFZ_0((uint64_t *)&v129, (uint64_t *)&v143) & 1) == 0) {
        goto LABEL_19;
      }
      int v65 = *(unsigned __int8 *)(v3 + 160);
      uint64_t v66 = *(void *)(v3 + 168);
      unsigned __int8 v67 = *(unsigned char *)(v3 + 176);
      int v68 = *(unsigned __int8 *)(v4 + 160);
      uint64_t v69 = *(void *)(v4 + 168);
      char v70 = *(unsigned char *)(v4 + 176);
      if ((sub_24EF05194(*(void *)(v3 + 152), *(void *)(v4 + 152)) & 1) == 0
        || ((v65 ^ v68) & 1) != 0
        || (sub_24EF05194(v66, v69) & 1) == 0
        || (sub_24EF065E0(v67, v70) & 1) == 0)
      {
        goto LABEL_19;
      }
      uint64_t v72 = *(void *)(v3 + 184);
      uint64_t v71 = *(void *)(v3 + 192);
      uint64_t v74 = *(void *)(v3 + 200);
      uint64_t v73 = *(void *)(v3 + 208);
      uint64_t v76 = *(void *)(v3 + 216);
      uint64_t v75 = *(void *)(v3 + 224);
      uint64_t v78 = *(void *)(v3 + 232);
      uint64_t v77 = *(void *)(v3 + 240);
      uint64_t v79 = *(void *)(v3 + 248);
      uint64_t v81 = *(void *)(v4 + 184);
      uint64_t v80 = *(void *)(v4 + 192);
      uint64_t v83 = *(void *)(v4 + 200);
      uint64_t v82 = *(void *)(v4 + 208);
      uint64_t v85 = *(void *)(v4 + 216);
      uint64_t v84 = *(void *)(v4 + 224);
      uint64_t v86 = *(void *)(v4 + 232);
      uint64_t v87 = *(void *)(v4 + 240);
      uint64_t v88 = *(void *)(v4 + 248);
      if (v72)
      {
        *(void *)&long long v129 = *(void *)(v3 + 184);
        *((void *)&v129 + 1) = v71;
        *(void *)&long long v130 = v74;
        *((void *)&v130 + 1) = v73;
        *(void *)&long long v131 = v76;
        *((void *)&v131 + 1) = v75;
        *(void *)&long long v132 = v78;
        *((void *)&v132 + 1) = v77;
        uint64_t v133 = v79;
        uint64_t v122 = v76;
        uint64_t v124 = v78;
        uint64_t v120 = v74;
        uint64_t v128 = v79;
        if (!v81) {
          goto LABEL_56;
        }
        *(void *)&long long v143 = v81;
        *((void *)&v143 + 1) = v80;
        *(void *)&long long v144 = v83;
        *((void *)&v144 + 1) = v82;
        *(void *)&long long v145 = v85;
        *((void *)&v145 + 1) = v84;
        *(void *)&long long v146 = v86;
        *((void *)&v146 + 1) = v87;
        uint64_t v147 = v88;
        sub_24EF0C9E8(v72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v110 = _s16FitnessFiltering8ModalityV2eeoiySbAC_ACtFZ_0((uint64_t)&v129, (uint64_t)&v143);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24EF0CF1C(v72);
        if ((v110 & 1) == 0) {
          goto LABEL_19;
        }
      }
      else if (v81)
      {
LABEL_57:
        *(void *)&long long v129 = v72;
        *((void *)&v129 + 1) = v71;
        *(void *)&long long v130 = v74;
        *((void *)&v130 + 1) = v73;
        *(void *)&long long v131 = v76;
        *((void *)&v131 + 1) = v75;
        *(void *)&long long v132 = v78;
        *((void *)&v132 + 1) = v77;
        uint64_t v133 = v79;
        uint64_t v134 = v81;
        uint64_t v135 = v80;
        uint64_t v136 = v83;
        uint64_t v137 = v82;
        uint64_t v138 = v85;
        uint64_t v139 = v84;
        uint64_t v140 = v86;
        uint64_t v141 = v87;
        uint64_t v142 = v88;
        sub_24EF0C9E8(v81);
        uint64_t v92 = sub_24EF0CF1C;
LABEL_44:
        sub_24EF494F4((uint64_t *)&v129, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v92);
        goto LABEL_19;
      }
LABEL_54:
      if (sub_24EF5AFDC(*(void *)(v3 + 256), *(void *)(v4 + 256)))
      {
        char v31 = sub_24EF5B2F8(*(void *)(v3 + 264), *(void *)(v4 + 264));
        sub_24EF0CA6C((uint64_t)v151);
        return v31 & 1;
      }
LABEL_19:
      sub_24EF0CA6C((uint64_t)v151);
      char v31 = 0;
      return v31 & 1;
  }
}

unint64_t sub_24EF4796C()
{
  unint64_t result = qword_269986A98;
  if (!qword_269986A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986A98);
  }
  return result;
}

unint64_t sub_24EF479C0()
{
  unint64_t result = qword_269986AA0;
  if (!qword_269986AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986AA0);
  }
  return result;
}

unint64_t sub_24EF47A14()
{
  unint64_t result = qword_269986AA8;
  if (!qword_269986AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986AA8);
  }
  return result;
}

unint64_t sub_24EF47A68()
{
  unint64_t result = qword_269986AB0;
  if (!qword_269986AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986AB0);
  }
  return result;
}

unint64_t sub_24EF47ABC()
{
  unint64_t result = qword_269986AC8;
  if (!qword_269986AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986AC8);
  }
  return result;
}

uint64_t sub_24EF47B10(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EF47B7C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986AE0);
    sub_24EF47D4C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EF47BFC()
{
  unint64_t result = qword_269986AF8;
  if (!qword_269986AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986AF8);
  }
  return result;
}

unint64_t sub_24EF47C50()
{
  unint64_t result = qword_269986B00;
  if (!qword_269986B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986B00);
  }
  return result;
}

unint64_t sub_24EF47CA4()
{
  unint64_t result = qword_269986B30;
  if (!qword_269986B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986B30);
  }
  return result;
}

unint64_t sub_24EF47CF8()
{
  unint64_t result = qword_269986B40;
  if (!qword_269986B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986B40);
  }
  return result;
}

uint64_t sub_24EF47D4C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FilterSectionDescriptor();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EF47D94()
{
  unint64_t result = qword_269986B60;
  if (!qword_269986B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986B60);
  }
  return result;
}

uint64_t destroy for FilterLoadState(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 224);
  long long v3 = *(_OWORD *)(a1 + 240);
  return sub_24EF0CC0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
           *(void *)(a1 + 152),
           *(void *)(a1 + 160),
           *(void *)(a1 + 168),
           *(void *)(a1 + 176),
           *(void *)(a1 + 184),
           *(void *)(a1 + 192),
           *(void *)(a1 + 200),
           *(void *)(a1 + 208),
           *(void *)(a1 + 216),
           v2,
           *((uint64_t *)&v2 + 1),
           v3,
           *((uint64_t *)&v3 + 1),
           *(void *)(a1 + 256),
           *(void *)(a1 + 264),
           *(unsigned char *)(a1 + 272));
}

uint64_t initializeWithCopy for FilterLoadState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  uint64_t v24 = *(void *)(a2 + 160);
  uint64_t v25 = *(void *)(a2 + 168);
  uint64_t v26 = *(void *)(a2 + 176);
  uint64_t v27 = *(void *)(a2 + 184);
  uint64_t v28 = *(void *)(a2 + 192);
  uint64_t v29 = *(void *)(a2 + 200);
  uint64_t v30 = *(void *)(a2 + 208);
  uint64_t v31 = *(void *)(a2 + 216);
  uint64_t v32 = *(void *)(a2 + 224);
  uint64_t v33 = *(void *)(a2 + 232);
  uint64_t v34 = *(void *)(a2 + 240);
  uint64_t v35 = *(void *)(a2 + 248);
  uint64_t v36 = *(void *)(a2 + 256);
  uint64_t v37 = *(void *)(a2 + 264);
  char v38 = *(unsigned char *)(a2 + 272);
  uint64_t v4 = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 48);
  sub_24EF0C6D0(*(void *)a2, v6, v7, v8, v9, v10, v11, v3, v4, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v3;
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(void *)(a1 + 160) = v24;
  *(void *)(a1 + 168) = v25;
  *(void *)(a1 + 176) = v26;
  *(void *)(a1 + 184) = v27;
  *(void *)(a1 + 192) = v28;
  *(void *)(a1 + 200) = v29;
  *(void *)(a1 + 208) = v30;
  *(void *)(a1 + 216) = v31;
  *(void *)(a1 + 224) = v32;
  *(void *)(a1 + 232) = v33;
  *(void *)(a1 + 240) = v34;
  *(void *)(a1 + 248) = v35;
  *(void *)(a1 + 256) = v36;
  *(void *)(a1 + 264) = v37;
  *(unsigned char *)(a1 + 272) = v38;
  return a1;
}

uint64_t assignWithCopy for FilterLoadState(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = *(void *)a2;
  uint64_t v61 = *(void *)(a2 + 8);
  uint64_t v58 = *(void *)(a2 + 24);
  uint64_t v59 = *(void *)(a2 + 16);
  uint64_t v56 = *(void *)(a2 + 40);
  uint64_t v57 = *(void *)(a2 + 32);
  uint64_t v55 = *(void *)(a2 + 48);
  uint64_t v36 = *(void *)(a2 + 72);
  uint64_t v37 = *(void *)(a2 + 80);
  uint64_t v38 = *(void *)(a2 + 88);
  uint64_t v39 = *(void *)(a2 + 96);
  uint64_t v40 = *(void *)(a2 + 104);
  uint64_t v41 = *(void *)(a2 + 112);
  uint64_t v42 = *(void *)(a2 + 120);
  uint64_t v43 = *(void *)(a2 + 128);
  uint64_t v3 = *(void *)(a2 + 144);
  uint64_t v4 = *(void *)(a2 + 152);
  uint64_t v5 = *(void *)(a2 + 160);
  uint64_t v6 = *(void *)(a2 + 168);
  uint64_t v7 = *(void *)(a2 + 176);
  uint64_t v8 = *(void *)(a2 + 184);
  uint64_t v9 = *(void *)(a2 + 192);
  uint64_t v44 = *(void *)(a2 + 136);
  uint64_t v45 = *(void *)(a2 + 200);
  uint64_t v46 = *(void *)(a2 + 208);
  uint64_t v47 = *(void *)(a2 + 216);
  uint64_t v48 = *(void *)(a2 + 224);
  uint64_t v49 = *(void *)(a2 + 232);
  uint64_t v50 = *(void *)(a2 + 240);
  uint64_t v51 = *(void *)(a2 + 248);
  uint64_t v52 = *(void *)(a2 + 256);
  uint64_t v53 = *(void *)(a2 + 264);
  char v54 = *(unsigned char *)(a2 + 272);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 56);
  sub_24EF0C6D0(*(void *)a2, v61, v59, v58, v57, v56, v55, v11, v10, v36, v37, v38, v39, v40, v41, v42, v43, v44, v3,
    v4,
    v5,
    v6,
    v7,
    v8,
    v9,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v60;
  *(void *)(a1 + 8) = v61;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v59;
  *(void *)(a1 + 24) = v58;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v57;
  *(void *)(a1 + 40) = v56;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v55;
  *(void *)(a1 + 56) = v11;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v36;
  *(void *)(a1 + 80) = v37;
  *(void *)(a1 + 88) = v38;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v39;
  *(void *)(a1 + 104) = v40;
  *(void *)(a1 + 112) = v41;
  *(void *)(a1 + 120) = v42;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v43;
  *(void *)(a1 + 136) = v44;
  *(void *)(a1 + 144) = v3;
  long long v26 = *(_OWORD *)(a1 + 160);
  long long v27 = *(_OWORD *)(a1 + 176);
  *(void *)(a1 + 152) = v4;
  *(void *)(a1 + 160) = v5;
  *(void *)(a1 + 168) = v6;
  *(void *)(a1 + 176) = v7;
  long long v28 = *(_OWORD *)(a1 + 192);
  long long v29 = *(_OWORD *)(a1 + 208);
  *(void *)(a1 + 184) = v8;
  *(void *)(a1 + 192) = v9;
  *(void *)(a1 + 200) = v45;
  *(void *)(a1 + 208) = v46;
  *(void *)(a1 + 216) = v47;
  long long v30 = *(_OWORD *)(a1 + 224);
  long long v31 = *(_OWORD *)(a1 + 240);
  *(void *)(a1 + 224) = v48;
  *(void *)(a1 + 232) = v49;
  *(void *)(a1 + 240) = v50;
  *(void *)(a1 + 248) = v51;
  uint64_t v32 = *(void *)(a1 + 256);
  uint64_t v33 = *(void *)(a1 + 264);
  *(void *)(a1 + 256) = v52;
  *(void *)(a1 + 264) = v53;
  char v34 = *(unsigned char *)(a1 + 272);
  *(unsigned char *)(a1 + 272) = v54;
  sub_24EF0CC0C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    v33,
    v34);
  return a1;
}

void *__swift_memcpy273_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x111uLL);
}

uint64_t assignWithTake for FilterLoadState(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 272);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v14 = *(_OWORD *)(a1 + 80);
  long long v15 = *(_OWORD *)(a1 + 96);
  long long v16 = *(_OWORD *)(a1 + 112);
  long long v17 = *(_OWORD *)(a1 + 128);
  long long v18 = *(_OWORD *)(a1 + 144);
  long long v19 = *(_OWORD *)(a1 + 160);
  long long v20 = *(_OWORD *)(a1 + 176);
  long long v21 = *(_OWORD *)(a1 + 192);
  long long v22 = *(_OWORD *)(a1 + 208);
  long long v23 = *(_OWORD *)(a1 + 224);
  long long v24 = *(_OWORD *)(a1 + 240);
  uint64_t v25 = *(void *)(a1 + 256);
  uint64_t v26 = *(void *)(a1 + 264);
  char v27 = *(unsigned char *)(a1 + 272);
  long long v28 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v28;
  long long v29 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v29;
  long long v30 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v30;
  long long v31 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v31;
  long long v32 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v32;
  long long v33 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v33;
  long long v34 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v34;
  long long v35 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v35;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 272) = v4;
  sub_24EF0CC0C(v5, v6, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    v26,
    v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for FilterLoadState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 273)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 272);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FilterLoadState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 272) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 273) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 273) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 272) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24EF484A0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 248) = 0u;
    LOBYTE(a2) = 2;
    *(void *)(result + 264) = 0;
  }
  *(unsigned char *)(result + 272) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FilterLoadState()
{
  return &type metadata for FilterLoadState;
}

unsigned char *storeEnumTagSinglePayload for FilterLoadState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF485DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterLoadState.CodingKeys()
{
  return &type metadata for FilterLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for FilterLoadState.ApplyingCodingKeys()
{
  return &type metadata for FilterLoadState.ApplyingCodingKeys;
}

ValueMetadata *type metadata accessor for FilterLoadState.IdleCodingKeys()
{
  return &type metadata for FilterLoadState.IdleCodingKeys;
}

uint64_t _s16FitnessFiltering15FilterLoadStateO18ApplyingCodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16FitnessFiltering15FilterLoadStateO18ApplyingCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF48798);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterLoadState.LoadedCodingKeys()
{
  return &type metadata for FilterLoadState.LoadedCodingKeys;
}

ValueMetadata *type metadata accessor for FilterLoadState.QueryingFilterOptionsCodingKeys()
{
  return &type metadata for FilterLoadState.QueryingFilterOptionsCodingKeys;
}

unint64_t sub_24EF487E4()
{
  unint64_t result = qword_269986B68;
  if (!qword_269986B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986B68);
  }
  return result;
}

unint64_t sub_24EF4883C()
{
  unint64_t result = qword_269986B70;
  if (!qword_269986B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986B70);
  }
  return result;
}

unint64_t sub_24EF48894()
{
  unint64_t result = qword_269986B78;
  if (!qword_269986B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986B78);
  }
  return result;
}

unint64_t sub_24EF488EC()
{
  unint64_t result = qword_269986B80;
  if (!qword_269986B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986B80);
  }
  return result;
}

unint64_t sub_24EF48944()
{
  unint64_t result = qword_269986B88;
  if (!qword_269986B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986B88);
  }
  return result;
}

unint64_t sub_24EF4899C()
{
  unint64_t result = qword_269986B90;
  if (!qword_269986B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986B90);
  }
  return result;
}

unint64_t sub_24EF489F4()
{
  unint64_t result = qword_269986B98;
  if (!qword_269986B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986B98);
  }
  return result;
}

unint64_t sub_24EF48A4C()
{
  unint64_t result = qword_269986BA0;
  if (!qword_269986BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986BA0);
  }
  return result;
}

unint64_t sub_24EF48AA4()
{
  unint64_t result = qword_269986BA8;
  if (!qword_269986BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986BA8);
  }
  return result;
}

unint64_t sub_24EF48AFC()
{
  unint64_t result = qword_269986BB0;
  if (!qword_269986BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986BB0);
  }
  return result;
}

unint64_t sub_24EF48B54()
{
  unint64_t result = qword_269986BB8;
  if (!qword_269986BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986BB8);
  }
  return result;
}

unint64_t sub_24EF48BAC()
{
  unint64_t result = qword_269986BC0;
  if (!qword_269986BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986BC0);
  }
  return result;
}

unint64_t sub_24EF48C04()
{
  unint64_t result = qword_269986BC8;
  if (!qword_269986BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986BC8);
  }
  return result;
}

uint64_t sub_24EF48C58(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000024EF90E60 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000024EF90E80 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x704F7265746C6966 && a2 == 0xED0000736E6F6974 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F547265746C6966 && a2 == 0xED0000796C707041 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61646F4D746F6F72 && a2 == 0xEC0000007974696CLL || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65646F4D74726F73 && a2 == 0xE900000000000073 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EF90E40)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_24EF48F9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E69796C707061 && a2 == 0xE800000000000000;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701602409 && a2 == 0xE400000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646564616F6CLL && a2 == 0xE600000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EF90E00)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24EF4913C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265746C6966 && a2 == 0xE600000000000000;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x704F7265746C6966 && a2 == 0xED0000736E6F6974 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65527265746C6966 && a2 == 0xEC000000746C7573 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61646F4D746F6F72 && a2 == 0xEC0000007974696CLL || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EF90E20 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65646F4D74726F73 && a2 == 0xE900000000000073 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EF90E40)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_24EF49470(uint64_t a1)
{
  long long v3 = *(_OWORD *)(a1 + 224);
  long long v4 = *(_OWORD *)(a1 + 240);
  sub_24EF0C6D0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    *(void *)(a1 + 256),
    *(void *)(a1 + 264),
    *(unsigned char *)(a1 + 272));
  return a1;
}

uint64_t *sub_24EF494F4(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[11];
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v8 = a1[14];
  uint64_t v9 = a1[15];
  uint64_t v10 = a1[16];
  uint64_t v11 = a1[17];
  uint64_t v13 = a1[9];
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  a2(v13, v4, v5, v6, v7, v8, v9, v10, v11);
  return a1;
}

ValueMetadata *type metadata accessor for FilterButtonStyle()
{
  return &type metadata for FilterButtonStyle;
}

uint64_t sub_24EF495B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EF495D0()
{
  return sub_24EF86EC0();
}

unint64_t sub_24EF495F8()
{
  unint64_t result = qword_269986BD0;
  if (!qword_269986BD0)
  {
    sub_24EF86EB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986BD0);
  }
  return result;
}

BOOL static OptionState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24EF49664()
{
  uint64_t v1 = 0x62617463656C6573;
  if (*v0 != 1) {
    uint64_t v1 = 0x64657463656C6573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x64656C6261736964;
  }
}

uint64_t sub_24EF496C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF4A898(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF496EC(uint64_t a1)
{
  unint64_t v2 = sub_24EF49C30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF49728(uint64_t a1)
{
  unint64_t v2 = sub_24EF49C30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF49764(uint64_t a1)
{
  unint64_t v2 = sub_24EF49D2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF497A0(uint64_t a1)
{
  unint64_t v2 = sub_24EF49D2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF497DC(uint64_t a1)
{
  unint64_t v2 = sub_24EF49CD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF49818(uint64_t a1)
{
  unint64_t v2 = sub_24EF49CD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF49854(uint64_t a1)
{
  unint64_t v2 = sub_24EF49C84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF49890(uint64_t a1)
{
  unint64_t v2 = sub_24EF49C84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OptionState.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986BD8);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  long long v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986BE0);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986BE8);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986BF0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  long long v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF49C30();
  sub_24EF87AF0();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_24EF49CD8();
      sub_24EF879A0();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_24EF49C84();
      long long v17 = v23;
      sub_24EF879A0();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_24EF49D2C();
    sub_24EF879A0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_24EF49C30()
{
  unint64_t result = qword_269986BF8;
  if (!qword_269986BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986BF8);
  }
  return result;
}

unint64_t sub_24EF49C84()
{
  unint64_t result = qword_269986C00;
  if (!qword_269986C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C00);
  }
  return result;
}

unint64_t sub_24EF49CD8()
{
  unint64_t result = qword_269986C08;
  if (!qword_269986C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C08);
  }
  return result;
}

unint64_t sub_24EF49D2C()
{
  unint64_t result = qword_269986C10;
  if (!qword_269986C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C10);
  }
  return result;
}

uint64_t OptionState.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986C18);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986C20);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986C28);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986C30);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF49C30();
  uint64_t v12 = (uint64_t)v39;
  sub_24EF87AE0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  long long v15 = v11;
  uint64_t v16 = sub_24EF87980();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_24EF87880();
    swift_allocError();
    long long v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269986030);
    *long long v23 = &type metadata for OptionState;
    sub_24EF878F0();
    sub_24EF87870();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_24EF49CD8();
      uint64_t v18 = v30;
      sub_24EF878E0();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_24EF49C84();
      uint64_t v25 = v30;
      sub_24EF878E0();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_24EF49D2C();
    uint64_t v24 = v30;
    sub_24EF878E0();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_24EF4A338@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return OptionState.init(from:)(a1, a2);
}

uint64_t sub_24EF4A350(void *a1)
{
  return OptionState.encode(to:)(a1);
}

uint64_t OptionState.hash(into:)()
{
  return sub_24EF87AA0();
}

uint64_t OptionState.hashValue.getter()
{
  return sub_24EF87AD0();
}

unint64_t sub_24EF4A3E0()
{
  unint64_t result = qword_269986C38;
  if (!qword_269986C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C38);
  }
  return result;
}

ValueMetadata *type metadata accessor for OptionState()
{
  return &type metadata for OptionState;
}

unsigned char *_s16FitnessFiltering11OptionStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF4A518);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OptionState.CodingKeys()
{
  return &type metadata for OptionState.CodingKeys;
}

ValueMetadata *type metadata accessor for OptionState.DisabledCodingKeys()
{
  return &type metadata for OptionState.DisabledCodingKeys;
}

ValueMetadata *type metadata accessor for OptionState.SelectableCodingKeys()
{
  return &type metadata for OptionState.SelectableCodingKeys;
}

ValueMetadata *type metadata accessor for OptionState.SelectedCodingKeys()
{
  return &type metadata for OptionState.SelectedCodingKeys;
}

unint64_t sub_24EF4A584()
{
  unint64_t result = qword_269986C40;
  if (!qword_269986C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C40);
  }
  return result;
}

unint64_t sub_24EF4A5DC()
{
  unint64_t result = qword_269986C48;
  if (!qword_269986C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C48);
  }
  return result;
}

unint64_t sub_24EF4A634()
{
  unint64_t result = qword_269986C50;
  if (!qword_269986C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C50);
  }
  return result;
}

unint64_t sub_24EF4A68C()
{
  unint64_t result = qword_269986C58;
  if (!qword_269986C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C58);
  }
  return result;
}

unint64_t sub_24EF4A6E4()
{
  unint64_t result = qword_269986C60;
  if (!qword_269986C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C60);
  }
  return result;
}

unint64_t sub_24EF4A73C()
{
  unint64_t result = qword_269986C68;
  if (!qword_269986C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C68);
  }
  return result;
}

unint64_t sub_24EF4A794()
{
  unint64_t result = qword_269986C70;
  if (!qword_269986C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C70);
  }
  return result;
}

unint64_t sub_24EF4A7EC()
{
  unint64_t result = qword_269986C78;
  if (!qword_269986C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C78);
  }
  return result;
}

unint64_t sub_24EF4A844()
{
  unint64_t result = qword_269986C80;
  if (!qword_269986C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C80);
  }
  return result;
}

uint64_t sub_24EF4A898(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656C6261736964 && a2 == 0xE800000000000000;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x62617463656C6573 && a2 == 0xEA0000000000656CLL || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64657463656C6573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t Duration.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double Duration.lowerBuffer.getter()
{
  return *(double *)(v0 + 16);
}

double Duration.seconds.getter()
{
  return *(double *)(v0 + 24);
}

double Duration.upperBuffer.getter()
{
  return *(double *)(v0 + 32);
}

void __swiftcall Duration.init(identifier:seconds:lowerBuffer:upperBuffer:)(FitnessFiltering::Duration *__return_ptr retstr, Swift::String identifier, Swift::Double seconds, Swift::Double lowerBuffer, Swift::Double upperBuffer)
{
  retstr->identifier = identifier;
  retstr->lowerBuffer = lowerBuffer;
  retstr->seconds = seconds;
  retstr->upperBuffer = upperBuffer;
}

uint64_t sub_24EF4AA58()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1702326124;
      goto LABEL_5;
    case 2:
      uint64_t result = 0x73646E6F636573;
      break;
    case 3:
      unsigned int v2 = 1701867637;
LABEL_5:
      uint64_t result = v2 | 0x6675427200000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF4AAE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF4B6E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF4AB10(uint64_t a1)
{
  unint64_t v2 = sub_24EF4B27C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF4AB4C(uint64_t a1)
{
  unint64_t v2 = sub_24EF4B27C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF4AB88@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Duration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986C88);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  uint64_t v8 = a1;
  uint64_t v10 = v9;
  __swift_project_boxed_opaque_existential_1(v8, v7);
  sub_24EF4B27C();
  sub_24EF87AF0();
  v12[15] = 0;
  sub_24EF879D0();
  if (!v1)
  {
    v12[14] = 1;
    sub_24EF879F0();
    v12[13] = 2;
    sub_24EF879F0();
    v12[12] = 3;
    sub_24EF879F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v10);
}

uint64_t Duration.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986C98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF4B27C();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v19[15] = 0;
  uint64_t v9 = sub_24EF87920();
  uint64_t v11 = v10;
  v19[14] = 1;
  swift_bridgeObjectRetain();
  sub_24EF87940();
  uint64_t v13 = v12;
  v19[13] = 2;
  sub_24EF87940();
  uint64_t v15 = v14;
  v19[12] = 3;
  sub_24EF87940();
  uint64_t v18 = v17;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v13;
  a2[3] = v15;
  a2[4] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF4AFB4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Duration.init(from:)(a1, a2);
}

uint64_t sub_24EF4AFCC(void *a1)
{
  return Duration.encode(to:)(a1);
}

BOOL sub_24EF4AFE4(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 24) < *(double *)(a2 + 24);
}

BOOL sub_24EF4AFF8(uint64_t a1, uint64_t a2)
{
  return *(double *)(a2 + 24) >= *(double *)(a1 + 24);
}

BOOL sub_24EF4B00C(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 24) >= *(double *)(a2 + 24);
}

BOOL sub_24EF4B020(uint64_t a1, uint64_t a2)
{
  return *(double *)(a2 + 24) < *(double *)(a1 + 24);
}

uint64_t Duration.hash(into:)()
{
  return sub_24EF87AC0();
}

uint64_t Duration.hashValue.getter()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF4B120()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF4B180()
{
  return sub_24EF87AD0();
}

double sub_24EF4B1D8()
{
  return *(double *)(v0 + 24);
}

BOOL _s16FitnessFiltering8DurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a1 + 16);
  double v2 = *(double *)(a1 + 24);
  double v4 = *(double *)(a1 + 32);
  double v6 = *(double *)(a2 + 16);
  double v5 = *(double *)(a2 + 24);
  double v7 = *(double *)(a2 + 32);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v3 != v6 || v2 != v5) {
      return 0;
    }
    return v4 == v7;
  }
  char v9 = sub_24EF87A60();
  BOOL result = 0;
  if ((v9 & 1) != 0 && v3 == v6 && v2 == v5) {
    return v4 == v7;
  }
  return result;
}

unint64_t sub_24EF4B27C()
{
  unint64_t result = qword_269986C90;
  if (!qword_269986C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986C90);
  }
  return result;
}

unint64_t sub_24EF4B2D4()
{
  unint64_t result = qword_269986CA0;
  if (!qword_269986CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986CA0);
  }
  return result;
}

uint64_t destroy for Duration()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Duration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Duration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Duration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Duration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Duration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Duration()
{
  return &type metadata for Duration;
}

unsigned char *storeEnumTagSinglePayload for Duration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF4B5A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Duration.CodingKeys()
{
  return &type metadata for Duration.CodingKeys;
}

unint64_t sub_24EF4B5DC()
{
  unint64_t result = qword_269986CA8;
  if (!qword_269986CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986CA8);
  }
  return result;
}

unint64_t sub_24EF4B634()
{
  unint64_t result = qword_269986CB0;
  if (!qword_269986CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986CB0);
  }
  return result;
}

unint64_t sub_24EF4B68C()
{
  unint64_t result = qword_269986CB8;
  if (!qword_269986CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986CB8);
  }
  return result;
}

uint64_t sub_24EF4B6E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6675427265776F6CLL && a2 == 0xEB00000000726566 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73646E6F636573 && a2 == 0xE700000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6675427265707075 && a2 == 0xEB00000000726566)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t Theme.artworks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Theme.iconName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Theme.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Theme.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Theme.sortOrder.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t Theme.init(artworks:iconName:identifier:name:sortOrder:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t sub_24EF4B98C()
{
  uint64_t result = 0x736B726F77747261;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D614E6E6F6369;
      break;
    case 2:
      uint64_t result = 0x696669746E656469;
      break;
    case 3:
      uint64_t result = 1701667182;
      break;
    case 4:
      uint64_t result = 0x6564724F74726F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF4BA34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF4CBAC(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EF4BA5C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24EF4BA68(uint64_t a1)
{
  unint64_t v2 = sub_24EF4BD50();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF4BAA4(uint64_t a1)
{
  unint64_t v2 = sub_24EF4BD50();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Theme.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986CC0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  v13[5] = v1[2];
  v13[6] = v8;
  uint64_t v10 = v1[3];
  v13[3] = v1[4];
  v13[4] = v10;
  uint64_t v11 = v1[5];
  v13[1] = v1[6];
  _OWORD v13[2] = v11;
  v13[0] = v1[7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF4BD50();
  sub_24EF87AF0();
  uint64_t v19 = v9;
  char v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  sub_24EF4C1CC(&qword_269985890, &qword_269985898);
  sub_24EF87A20();
  if (!v2)
  {
    char v17 = 1;
    sub_24EF879B0();
    char v16 = 2;
    sub_24EF879D0();
    char v15 = 3;
    sub_24EF879D0();
    char v14 = 4;
    sub_24EF87A00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EF4BD50()
{
  unint64_t result = qword_269986CC8;
  if (!qword_269986CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986CC8);
  }
  return result;
}

uint64_t Theme.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986CD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF4BD50();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  char v36 = 0;
  sub_24EF4C1CC(&qword_2699858A8, &qword_2699858B0);
  sub_24EF87970();
  uint64_t v9 = v37;
  char v35 = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24EF87900();
  uint64_t v31 = v11;
  uint64_t v28 = v10;
  uint64_t v30 = v9;
  char v34 = 2;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_24EF87920();
  char v33 = 3;
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_24EF87920();
  uint64_t v29 = v13;
  uint64_t v25 = v14;
  uint64_t v26 = v15;
  char v32 = 4;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_24EF87950();
  uint64_t v17 = v30;
  uint64_t v19 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v20 = v28;
  uint64_t v21 = v29;
  *a2 = v17;
  a2[1] = v20;
  uint64_t v23 = v26;
  uint64_t v22 = v27;
  a2[2] = v31;
  a2[3] = v22;
  uint64_t v24 = v25;
  a2[4] = v21;
  a2[5] = v24;
  a2[6] = v23;
  a2[7] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF4C1CC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985888);
    sub_24EF4C24C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EF4C24C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Artwork();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EF4C290@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Theme.init(from:)(a1, a2);
}

uint64_t sub_24EF4C2A8(void *a1)
{
  return Theme.encode(to:)(a1);
}

uint64_t Theme.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(a1, v3);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  return sub_24EF87AA0();
}

uint64_t Theme.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  sub_24EF87A90();
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(v4, v1);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  sub_24EF87AA0();
  return sub_24EF87AD0();
}

uint64_t sub_24EF4C4D4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  sub_24EF87A90();
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(v4, v1);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  sub_24EF87AA0();
  return sub_24EF87AD0();
}

BOOL _s16FitnessFiltering5ThemeV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v18 = a1[6];
  uint64_t v19 = a1[5];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v16 = a2[7];
  uint64_t v17 = a1[7];
  if ((sub_24EF01DD8(*a1, *a2) & 1) == 0) {
    return 0;
  }
  if (v4)
  {
    if (v7)
    {
      if (v2 != v6 || v4 != v7)
      {
        char v12 = sub_24EF87A60();
        BOOL result = 0;
        if ((v12 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v7) {
    return 0;
  }
LABEL_11:
  if (v3 == v8 && v5 == v10 || (v14 = sub_24EF87A60(), BOOL result = 0, (v14 & 1) != 0))
  {
    if (v19 == v9 && v18 == v11) {
      return v17 == v16;
    }
    char v15 = sub_24EF87A60();
    BOOL result = 0;
    if (v15) {
      return v17 == v16;
    }
  }
  return result;
}

unint64_t sub_24EF4C724()
{
  unint64_t result = qword_269986CD8;
  if (!qword_269986CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986CD8);
  }
  return result;
}

void *initializeWithCopy for Theme(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Theme(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  return a1;
}

void *assignWithTake for Theme(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  return a1;
}

ValueMetadata *type metadata accessor for Theme()
{
  return &type metadata for Theme;
}

uint64_t getEnumTagSinglePayload for Theme.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Theme.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF4CA6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme.CodingKeys()
{
  return &type metadata for Theme.CodingKeys;
}

unint64_t sub_24EF4CAA8()
{
  unint64_t result = qword_269986CE0;
  if (!qword_269986CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986CE0);
  }
  return result;
}

unint64_t sub_24EF4CB00()
{
  unint64_t result = qword_269986CE8;
  if (!qword_269986CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986CE8);
  }
  return result;
}

unint64_t sub_24EF4CB58()
{
  unint64_t result = qword_269986CF0;
  if (!qword_269986CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986CF0);
  }
  return result;
}

uint64_t sub_24EF4CBAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736B726F77747261 && a2 == 0xE800000000000000;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E6E6F6369 && a2 == 0xE800000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6564724F74726F73 && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t dispatch thunk of SortOrdering.sortOrder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SortOrdering.fallbackSortValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_24EF4CE00()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LocalizationBundle()
{
  return self;
}

id sub_24EF4CE34()
{
  type metadata accessor for LocalizationBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_269997D90 = (uint64_t)result;
  return result;
}

uint64_t FilterConfiguration.activityType.getter()
{
  return *(void *)v0;
}

uint64_t FilterConfiguration.orderedSkillLevels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterConfiguration.skillLevelTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FilterConfiguration.skillLevelTranslations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterConfiguration.skillLevelWildcardTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall FilterConfiguration.init(activityType:orderedSkillLevels:skillLevelTitle:skillLevelTranslations:skillLevelWildcardTitle:)(FitnessFiltering::FilterConfiguration *__return_ptr retstr, Swift::UInt activityType, Swift::OpaquePointer orderedSkillLevels, Swift::String_optional skillLevelTitle, Swift::OpaquePointer skillLevelTranslations, Swift::String_optional skillLevelWildcardTitle)
{
  retstr->activityType = activityType;
  retstr->orderedSkillLevels = orderedSkillLevels;
  retstr->skillLevelTitle = skillLevelTitle;
  retstr->skillLevelTranslations = skillLevelTranslations;
  retstr->skillLevelWildcardTitle = skillLevelWildcardTitle;
}

unint64_t sub_24EF4CF18(char a1)
{
  unint64_t result = 0x7974697669746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x76654C6C6C696B73;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EF4CFEC()
{
  return sub_24EF4CF18(*v0);
}

uint64_t sub_24EF4CFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF4E4E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF4D01C(uint64_t a1)
{
  unint64_t v2 = sub_24EF4D334();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF4D058(uint64_t a1)
{
  unint64_t v2 = sub_24EF4D334();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FilterConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986CF8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  uint64_t v16 = v1[2];
  uint64_t v17 = v8;
  uint64_t v9 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v15 = v9;
  uint64_t v10 = v1[5];
  v13[1] = v1[6];
  _OWORD v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF4D334();
  sub_24EF87AF0();
  LOBYTE(v19) = 0;
  sub_24EF87A10();
  if (!v2)
  {
    uint64_t v11 = v14;
    uint64_t v19 = v17;
    char v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269986D08);
    sub_24EF4D774(&qword_269986D10);
    sub_24EF87A20();
    LOBYTE(v19) = 2;
    sub_24EF879B0();
    uint64_t v19 = v11;
    char v18 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269986D18);
    sub_24EF4D7D8(&qword_269986D20);
    sub_24EF87A20();
    LOBYTE(v19) = 4;
    sub_24EF879B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EF4D334()
{
  unint64_t result = qword_269986D00;
  if (!qword_269986D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986D00);
  }
  return result;
}

uint64_t FilterConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986D28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF4D334();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v28) = 0;
  uint64_t v9 = sub_24EF87960();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269986D08);
  char v27 = 1;
  sub_24EF4D774(&qword_269986D30);
  sub_24EF87970();
  uint64_t v10 = v28;
  LOBYTE(v28) = 2;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_24EF87900();
  uint64_t v13 = v12;
  uint64_t v23 = v11;
  uint64_t v25 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269986D18);
  char v27 = 3;
  sub_24EF4D7D8(&qword_269986D38);
  uint64_t v26 = v13;
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  sub_24EF87970();
  uint64_t v14 = v28;
  LOBYTE(v28) = 4;
  uint64_t v24 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_24EF87900();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v19 = v25;
  uint64_t v20 = v26;
  *a2 = v9;
  a2[1] = v19;
  uint64_t v21 = v24;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v21;
  a2[5] = v16;
  a2[6] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF4D774(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986D08);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EF4D7D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986D18);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EF4D83C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FilterConfiguration.init(from:)(a1, a2);
}

uint64_t sub_24EF4D854(void *a1)
{
  return FilterConfiguration.encode(to:)(a1);
}

uint64_t FilterConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[6];
  sub_24EF87AA0();
  sub_24EF87AA0();
  uint64_t v7 = *(void *)(v3 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24EF87670();
      swift_bridgeObjectRelease();
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  sub_24EF87AB0();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF4DD48(a1, v5);
  swift_bridgeObjectRelease();
  if (!v6) {
    return sub_24EF87AB0();
  }
  sub_24EF87AB0();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF4D9F8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 3;
          if (v11 + 3 >= v27) {
            return 1;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
    uint64_t v14 = 16 * v10;
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_24EF7281C(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_24EF87A60();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t FilterConfiguration.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 32);
  v4[9] = *(void *)v0;
  v4[10] = v1;
  long long v5 = *(_OWORD *)(v0 + 16);
  uint64_t v6 = v2;
  long long v7 = *(_OWORD *)(v0 + 40);
  sub_24EF87A90();
  FilterConfiguration.hash(into:)((uint64_t)v4);
  return sub_24EF87AD0();
}

uint64_t sub_24EF4DC7C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 32);
  v4[9] = *(void *)v0;
  v4[10] = v1;
  long long v5 = *(_OWORD *)(v0 + 16);
  uint64_t v6 = v2;
  long long v7 = *(_OWORD *)(v0 + 40);
  sub_24EF87A90();
  FilterConfiguration.hash(into:)((uint64_t)v4);
  return sub_24EF87AD0();
}

uint64_t sub_24EF4DCE4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 32);
  v4[9] = *(void *)v0;
  v4[10] = v1;
  long long v5 = *(_OWORD *)(v0 + 16);
  uint64_t v6 = v2;
  long long v7 = *(_OWORD *)(v0 + 40);
  sub_24EF87A90();
  FilterConfiguration.hash(into:)((uint64_t)v4);
  return sub_24EF87AD0();
}

uint64_t sub_24EF4DD48(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v9 >= v5) {
      goto LABEL_19;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      int64_t v8 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_19;
      }
      uint64_t v10 = *(void *)(v12 + 8 * v8);
      if (!v10) {
        break;
      }
    }
LABEL_18:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
    sub_24EF87670();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24EF87AD0();
    v7 ^= result;
  }
  int64_t v11 = v9 + 2;
  if (v11 >= v5)
  {
LABEL_19:
    swift_release();
    return sub_24EF87AA0();
  }
  uint64_t v10 = *(void *)(v12 + 8 * v11);
  if (v10)
  {
    int64_t v8 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v8 >= v5) {
      goto LABEL_19;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v8);
    ++v11;
    if (v10) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t _s16FitnessFiltering19FilterConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a1 + 16);
  if ((sub_24EF5A96C(*(void **)(a1 + 8), *(void **)(a2 + 8)) & 1) == 0) {
    return 0;
  }
  if (!v3)
  {
    if (v7) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v7) {
    return 0;
  }
  if (v11 == v10 && v3 == v7 || (v12 = sub_24EF87A60(), uint64_t result = 0, (v12 & 1) != 0))
  {
LABEL_10:
    if (sub_24EF4D9F8(v2, v6))
    {
      if (v5)
      {
        if (v8 && (v4 == v9 && v5 == v8 || (sub_24EF87A60() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v8)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_24EF4E018()
{
  unint64_t result = qword_269986D40;
  if (!qword_269986D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986D40);
  }
  return result;
}

uint64_t destroy for FilterConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FilterConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FilterConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FilterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FilterConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FilterConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterConfiguration()
{
  return &type metadata for FilterConfiguration;
}

unsigned char *storeEnumTagSinglePayload for FilterConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF4E3A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterConfiguration.CodingKeys()
{
  return &type metadata for FilterConfiguration.CodingKeys;
}

unint64_t sub_24EF4E3DC()
{
  unint64_t result = qword_269986D48;
  if (!qword_269986D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986D48);
  }
  return result;
}

unint64_t sub_24EF4E434()
{
  unint64_t result = qword_269986D50;
  if (!qword_269986D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986D50);
  }
  return result;
}

unint64_t sub_24EF4E48C()
{
  unint64_t result = qword_269986D58;
  if (!qword_269986D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986D58);
  }
  return result;
}

uint64_t sub_24EF4E4E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974697669746361 && a2 == 0xEC00000065707954;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EF90EF0 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x76654C6C6C696B73 && a2 == 0xEF656C7469546C65 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EF90F10 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024EF90F30)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void *static ArtworkVariant.allCases.getter()
{
  return &unk_27009B6B8;
}

uint64_t ArtworkVariant.rawValue.getter(char a1)
{
  uint64_t result = 0x72656E6E6162;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7265746E6563;
      break;
    case 2:
      uint64_t result = 2019912806;
      break;
    case 3:
      uint64_t result = 0x657263536C6C7566;
      break;
    case 4:
      uint64_t result = 0x72616C75676572;
      break;
    case 5:
      uint64_t result = 0x74726F6873;
      break;
    case 6:
      uint64_t result = 1819042164;
      break;
    case 7:
      uint64_t result = 1954047348;
      break;
    case 8:
      uint64_t result = 0x6469576172746C75;
      break;
    case 9:
      uint64_t result = 1701079415;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF4E848(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = ArtworkVariant.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == ArtworkVariant.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24EF87A60();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24EF4E8D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s16FitnessFiltering14ArtworkVariantO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_24EF4E904@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ArtworkVariant.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_24EF4E930(void *a1@<X8>)
{
  *a1 = &unk_27009B6B8;
}

uint64_t sub_24EF4E940()
{
  return sub_24EF87700();
}

uint64_t sub_24EF4E9A0()
{
  return sub_24EF876F0();
}

uint64_t sub_24EF4E9F0()
{
  char v1 = *v0;
  sub_24EF87A90();
  ArtworkVariant.rawValue.getter(v1);
  sub_24EF87670();
  swift_bridgeObjectRelease();
  return sub_24EF87AD0();
}

uint64_t sub_24EF4EA54()
{
  ArtworkVariant.rawValue.getter(*v0);
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF4EAA8()
{
  char v1 = *v0;
  sub_24EF87A90();
  ArtworkVariant.rawValue.getter(v1);
  sub_24EF87670();
  swift_bridgeObjectRelease();
  return sub_24EF87AD0();
}

uint64_t _s16FitnessFiltering14ArtworkVariantO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24EF878D0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

unint64_t sub_24EF4EB58()
{
  unint64_t result = qword_269986D60;
  if (!qword_269986D60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986D68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986D60);
  }
  return result;
}

unint64_t sub_24EF4EBB8()
{
  unint64_t result = qword_269986D70;
  if (!qword_269986D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986D70);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ArtworkVariant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF4ECD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkVariant()
{
  return &type metadata for ArtworkVariant;
}

unint64_t sub_24EF4ED10()
{
  unint64_t result = qword_269986D78;
  if (!qword_269986D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986D78);
  }
  return result;
}

uint64_t MusicGenre.artworks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MusicGenre.iconName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MusicGenre.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MusicGenre.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MusicGenre.init(artworks:iconName:identifier:name:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t sub_24EF4EE10()
{
  uint64_t result = 0x736B726F77747261;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D614E6E6F6369;
      break;
    case 2:
      uint64_t result = 0x696669746E656469;
      break;
    case 3:
      uint64_t result = 1701667182;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF4EE98(uint64_t a1)
{
  unint64_t v2 = sub_24EF4F150();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF4EED4(uint64_t a1)
{
  unint64_t v2 = sub_24EF4F150();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MusicGenre.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986D80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  v13[5] = v1[2];
  v13[6] = v8;
  uint64_t v10 = v1[3];
  void v13[3] = v1[4];
  v13[4] = v10;
  uint64_t v11 = v1[5];
  v13[1] = v1[6];
  _OWORD v13[2] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF4F150();
  sub_24EF87AF0();
  uint64_t v18 = v9;
  char v17 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  sub_24EF4C1CC(&qword_269985890, &qword_269985898);
  sub_24EF87A20();
  if (!v2)
  {
    char v16 = 1;
    sub_24EF879B0();
    char v15 = 2;
    sub_24EF879D0();
    char v14 = 3;
    sub_24EF879D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EF4F150()
{
  unint64_t result = qword_269986D88;
  if (!qword_269986D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986D88);
  }
  return result;
}

uint64_t MusicGenre.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986D90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF4F150();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  char v34 = 0;
  sub_24EF4C1CC(&qword_2699858A8, &qword_2699858B0);
  sub_24EF87970();
  uint64_t v9 = v35;
  char v33 = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24EF87900();
  uint64_t v30 = v11;
  uint64_t v28 = v10;
  uint64_t v29 = v9;
  char v32 = 2;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_24EF87920();
  uint64_t v27 = v12;
  char v31 = 3;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24EF87920();
  uint64_t v16 = v15;
  char v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v25 = v13;
  v17(v8, v5);
  uint64_t v18 = v29;
  swift_bridgeObjectRetain();
  uint64_t v19 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v27;
  uint64_t v20 = v28;
  *a2 = v18;
  a2[1] = v20;
  uint64_t v22 = v26;
  a2[2] = v19;
  a2[3] = v22;
  uint64_t v23 = v25;
  a2[4] = v21;
  a2[5] = v23;
  a2[6] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF4F54C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return MusicGenre.init(from:)(a1, a2);
}

uint64_t sub_24EF4F564(void *a1)
{
  return MusicGenre.encode(to:)(a1);
}

uint64_t MusicGenre.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(a1, v3);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t MusicGenre.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  sub_24EF87A90();
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(v4, v1);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  return sub_24EF87AD0();
}

unint64_t sub_24EF4F780()
{
  unint64_t result = qword_269986D98;
  if (!qword_269986D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986D98);
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicGenre()
{
  return &type metadata for MusicGenre;
}

unsigned char *storeEnumTagSinglePayload for MusicGenre.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF4F8B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicGenre.CodingKeys()
{
  return &type metadata for MusicGenre.CodingKeys;
}

unint64_t sub_24EF4F8EC()
{
  unint64_t result = qword_269986DA0;
  if (!qword_269986DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986DA0);
  }
  return result;
}

unint64_t sub_24EF4F944()
{
  unint64_t result = qword_269986DA8;
  if (!qword_269986DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986DA8);
  }
  return result;
}

unint64_t sub_24EF4F99C()
{
  unint64_t result = qword_269986DB0;
  if (!qword_269986DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986DB0);
  }
  return result;
}

uint64_t sub_24EF4F9F4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Option();
  uint64_t result = Option.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24EF4FA50()
{
  return sub_24EF87B20();
}

uint64_t FilterStandardSectionView.init(containerWidth:headerViewBuilder:options:onOptionSelected:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  *(double *)a6 = a7;
  *(void *)(a6 + 8) = result;
  *(void *)(a6 + 16) = a2;
  *(void *)(a6 + 24) = a4;
  *(void *)(a6 + 32) = a5;
  *(void *)(a6 + 40) = a3;
  return result;
}

uint64_t FilterStandardSectionView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[6];
  uint64_t v7 = a1[7];
  uint64_t v8 = a1[8];
  uint64_t v9 = a1[9];
  uint64_t v39 = a1[2];
  uint64_t v41 = v5;
  uint64_t v42 = v9;
  uint64_t v44 = v7;
  uint64_t v45 = v6;
  uint64_t v43 = v8;
  *((void *)&v53 + 1) = v9;
  uint64_t v47 = type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  sub_24EF87730();
  *(void *)&long long v52 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986DB8);
  *((void *)&v52 + 1) = swift_getWitnessTable();
  *(void *)&long long v53 = MEMORY[0x263F8D320];
  sub_24EF87420();
  *(void *)&long long v51 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986DC0);
  *((void *)&v51 + 1) = sub_24EF500C4();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  sub_24EF87490();
  sub_24EF86C00();
  uint64_t v40 = v4;
  swift_getTupleTypeMetadata2();
  v36[1] = sub_24EF874A0();
  v36[0] = swift_getWitnessTable();
  uint64_t v10 = sub_24EF873E0();
  uint64_t v37 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v36 - v11;
  uint64_t v13 = sub_24EF86C00();
  uint64_t v38 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v36 - v14;
  uint64_t v16 = sub_24EF87430();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (_OWORD *)((char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_24EF87440();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v23 = v2[2];
  long long v52 = v2[1];
  long long v53 = v23;
  long long v51 = *v2;
  uint64_t result = MEMORY[0x253350810](*((void *)&v23 + 1), v47);
  double v25 = ceil((double)result * 0.5);
  if ((~*(void *)&v25 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v25 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v25 < 9.22337204e18)
  {
    uint64_t v26 = (uint64_t)v25;
    *uint64_t v19 = xmmword_24EF8D320;
    (*(void (**)(_OWORD *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F1B8C8], v16);
    sub_24EF87450();
    uint64_t v27 = sub_24EEF9848((uint64_t)v22, v26);
    uint64_t v28 = sub_24EF86D90();
    MEMORY[0x270FA5388](v28);
    uint64_t v29 = v40;
    v36[-12] = v39;
    v36[-11] = v29;
    uint64_t v30 = a1[5];
    v36[-10] = v41;
    v36[-9] = v30;
    uint64_t v31 = v44;
    v36[-8] = v45;
    v36[-7] = v31;
    uint64_t v32 = v42;
    v36[-6] = v43;
    v36[-5] = v32;
    v36[-4] = a1[10];
    v36[-3] = &v51;
    v36[-2] = v27;
    sub_24EF873D0();
    swift_bridgeObjectRelease();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_24EF872B0();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v10);
    uint64_t v34 = sub_24EF86F80();
    uint64_t v48 = WitnessTable;
    uint64_t v49 = MEMORY[0x263F190E0];
    uint64_t v35 = swift_getWitnessTable();
    sub_24EEFBE98(v34, 0x4034000000000000, 0, v13, v35);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v15, v13);
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_24EF500C4()
{
  unint64_t result = qword_269986DC8;
  if (!qword_269986DC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986DC0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986DD0);
    sub_24EEFD4C4(qword_269986DD8, &qword_269986DD0);
    sub_24EEF97F4();
    swift_getOpaqueTypeConformance2();
    sub_24EEFD4C4(&qword_2699859D8, &qword_2699859E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986DC8);
  }
  return result;
}

uint64_t sub_24EF501D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v66 = a8;
  uint64_t v65 = a7;
  uint64_t v69 = a6;
  long long v62 = a5;
  uint64_t v61 = a3;
  uint64_t v68 = a2;
  uint64_t v70 = a9;
  uint64_t v71 = a12;
  uint64_t v64 = a11;
  uint64_t v63 = a10;
  uint64_t v18 = sub_24EF86E40();
  MEMORY[0x270FA5388](v18 - 8);
  unsigned __int8 v67 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = a3;
  uint64_t v86 = a5;
  uint64_t v87 = a7;
  uint64_t v88 = a8;
  uint64_t v89 = a10;
  uint64_t v90 = a11;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  uint64_t v20 = sub_24EF87730();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986DB8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v85 = (char *)v20;
  uint64_t v86 = (char *)MEMORY[0x263F8D310];
  uint64_t v87 = v21;
  uint64_t v88 = WitnessTable;
  uint64_t v89 = MEMORY[0x263F8D320];
  uint64_t v23 = sub_24EF87420();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986DC0);
  unint64_t v25 = sub_24EF500C4();
  uint64_t v85 = (char *)v24;
  uint64_t v86 = (char *)v25;
  v84[4] = swift_getOpaqueTypeConformance2();
  uint64_t v54 = v23;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v26 = sub_24EF87490();
  uint64_t v59 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v55 = (char *)&v50 - v27;
  uint64_t v28 = sub_24EF86C00();
  uint64_t v60 = *(void *)(v28 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v50 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v56 = (char *)&v50 - v33;
  uint64_t v51 = *(void *)(a4 - 8);
  uint64_t v34 = v51;
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v37 = (char *)&v50 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  long long v52 = (char *)&v50 - v39;
  (*(void (**)(uint64_t))(a1 + 8))(v38);
  uint64_t v40 = v71;
  sub_24EF7FD6C(v37, a4, v71);
  uint64_t v57 = *(void (**)(char *, uint64_t))(v34 + 8);
  uint64_t v58 = v34 + 8;
  v57(v37, a4);
  swift_bridgeObjectRetain();
  sub_24EF86D30();
  uint64_t v72 = v61;
  uint64_t v73 = a4;
  uint64_t v74 = v62;
  uint64_t v75 = v69;
  uint64_t v76 = v65;
  uint64_t v77 = v66;
  uint64_t v78 = v63;
  uint64_t v79 = v64;
  uint64_t v80 = v40;
  uint64_t v81 = a1;
  sub_24EF4FA50();
  uint64_t v41 = v55;
  sub_24EF87480();
  uint64_t v42 = swift_getWitnessTable();
  sub_24EF872B0();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v26);
  v84[2] = v42;
  v84[3] = MEMORY[0x263F190E0];
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = v56;
  sub_24EF7FD6C(v31, v28, v43);
  uint64_t v45 = v60;
  uint64_t v46 = *(void (**)(char *, uint64_t))(v60 + 8);
  v46(v31, v28);
  uint64_t v47 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v37, v52, a4);
  uint64_t v85 = v37;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v31, v44, v28);
  uint64_t v86 = v31;
  v84[0] = a4;
  v84[1] = v28;
  uint64_t v82 = v71;
  uint64_t v83 = v43;
  sub_24EF7FDA8((uint64_t)&v85, 2uLL, (uint64_t)v84);
  v46(v44, v28);
  uint64_t v48 = (uint64_t (*)(char *, uint64_t))v57;
  v57(v47, a4);
  v46(v31, v28);
  return v48(v37, a4);
}

uint64_t sub_24EF5089C@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF501D8(*(void *)(v1 + 88), *(void *)(v1 + 96), *(char **)(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1, *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_24EF508DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EF50930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v47 = a8;
  uint64_t v57 = a5;
  uint64_t v58 = a3;
  uint64_t v56 = a9;
  uint64_t v48 = a11;
  uint64_t v46 = a10;
  uint64_t v75 = a10;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  uint64_t v54 = sub_24EF87730();
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986DB8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v70 = v54;
  unint64_t v71 = MEMORY[0x263F8D310];
  uint64_t v72 = v53;
  uint64_t v73 = WitnessTable;
  uint64_t v74 = MEMORY[0x263F8D320];
  uint64_t v51 = sub_24EF87420();
  uint64_t v55 = *(void *)(v51 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v51);
  uint64_t v49 = (char *)&KeyPath - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v50 = (char *)&KeyPath - v18;
  uint64_t v19 = (_OWORD *)a1;
  uint64_t v69 = *(void *)(a1 + 40);
  uint64_t v20 = sub_24EF87730();
  uint64_t v21 = swift_getWitnessTable();
  MEMORY[0x2533507D0](&v70, v20, v21);
  uint64_t v69 = v70;
  sub_24EF87890();
  swift_getWitnessTable();
  uint64_t v69 = sub_24EF87740();
  uint64_t v22 = a2;
  uint64_t v23 = v57;
  uint64_t v59 = a2;
  uint64_t v60 = v58;
  uint64_t v24 = a4;
  uint64_t v61 = a4;
  uint64_t v62 = v57;
  uint64_t v25 = a6;
  uint64_t v63 = a6;
  uint64_t v64 = a7;
  uint64_t v26 = a7;
  uint64_t v27 = v47;
  uint64_t v28 = v46;
  uint64_t v65 = v47;
  uint64_t v66 = v46;
  uint64_t v29 = v48;
  uint64_t v67 = v48;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = swift_allocObject();
  long long v31 = v19[1];
  *(_OWORD *)(v30 + 88) = *v19;
  uint64_t v32 = v58;
  *(void *)(v30 + 16) = v22;
  *(void *)(v30 + 24) = v32;
  *(void *)(v30 + 32) = v24;
  *(void *)(v30 + 40) = v23;
  *(void *)(v30 + 48) = v25;
  *(void *)(v30 + 56) = v26;
  *(void *)(v30 + 64) = v27;
  *(void *)(v30 + 72) = v28;
  *(void *)(v30 + 80) = v29;
  *(_OWORD *)(v30 + 104) = v31;
  *(_OWORD *)(v30 + 120) = v19[2];
  uint64_t v33 = (void *)swift_allocObject();
  uint64_t v34 = v58;
  v33[2] = v22;
  v33[3] = v34;
  uint64_t v35 = v57;
  v33[4] = v24;
  v33[5] = v35;
  v33[6] = v25;
  v33[7] = v26;
  v33[8] = v27;
  v33[9] = v28;
  v33[10] = v29;
  v33[11] = sub_24EF52110;
  v33[12] = v30;
  sub_24EEFCECC((uint64_t)v19);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986DC0);
  unint64_t v37 = sub_24EF500C4();
  uint64_t v70 = v36;
  unint64_t v71 = v37;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v38 = v49;
  sub_24EF87410();
  uint64_t v68 = OpaqueTypeConformance2;
  uint64_t v39 = v51;
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v41 = v50;
  sub_24EF7FD6C(v38, v39, v40);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v55 + 8);
  v42(v38, v39);
  sub_24EF7FD6C(v41, v39, v40);
  return ((uint64_t (*)(char *, uint64_t))v42)(v41, v39);
}

uint64_t sub_24EF50DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v78 = a8;
  uint64_t v96 = a7;
  uint64_t v97 = a1;
  uint64_t v73 = a2;
  uint64_t v74 = a5;
  uint64_t v92 = a9;
  uint64_t v86 = a13;
  uint64_t v76 = a11;
  uint64_t v95 = a10;
  uint64_t v93 = sub_24EF87590();
  uint64_t v91 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v90 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24EF87530();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v89 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24EF87550();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v87 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985A88);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v88 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = a4;
  uint64_t v110 = a6;
  uint64_t v111 = a8;
  uint64_t v112 = a10;
  uint64_t v113 = a11;
  uint64_t v114 = a12;
  uint64_t v68 = a12;
  uint64_t v25 = type metadata accessor for Option();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void *)(v26 + 64);
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v68 - v28;
  uint64_t v72 = (char *)&v68 - v28;
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986DD0);
  uint64_t v83 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v77 = (char *)&v68 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986E68);
  uint64_t v84 = *(void *)(v31 - 8);
  uint64_t v85 = v31;
  MEMORY[0x270FA5388](v31);
  uint64_t v75 = (char *)&v68 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986DC0);
  MEMORY[0x270FA5388](v82);
  uint64_t v79 = (char *)&v68 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = v26;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  uint64_t v94 = v25;
  v34(v29, a2, v25);
  unint64_t v69 = (*(unsigned __int8 *)(v26 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v70 = (v27 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = (uint64_t)a3;
  long long v37 = a3[1];
  *(_OWORD *)(v35 + 88) = *a3;
  uint64_t v38 = a4;
  uint64_t v80 = a4;
  uint64_t v39 = v74;
  *(void *)(v35 + 16) = a4;
  *(void *)(v35 + 24) = v39;
  uint64_t v40 = a6;
  *(void *)(v35 + 32) = a6;
  uint64_t v41 = v95;
  uint64_t v42 = v96;
  uint64_t v43 = v78;
  *(void *)(v35 + 40) = v96;
  *(void *)(v35 + 48) = v43;
  uint64_t v44 = v76;
  *(void *)(v35 + 56) = v41;
  *(void *)(v35 + 64) = v44;
  *(void *)(v35 + 72) = a12;
  uint64_t v45 = v86;
  *(void *)(v35 + 80) = v86;
  *(_OWORD *)(v35 + 104) = v37;
  *(_OWORD *)(v35 + 120) = *(_OWORD *)(v36 + 32);
  (*(void (**)(unint64_t, char *, uint64_t))(v71 + 32))(v35 + v69, v72, v94);
  *(void *)(v35 + v70) = v97;
  uint64_t v98 = v38;
  uint64_t v99 = v39;
  uint64_t v100 = v40;
  uint64_t v101 = v42;
  uint64_t v102 = v43;
  uint64_t v103 = v95;
  uint64_t v104 = v44;
  uint64_t v105 = v68;
  uint64_t v46 = v73;
  uint64_t v106 = v45;
  uint64_t v107 = v73;
  uint64_t v108 = v36;
  sub_24EEFCECC(v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269986E70);
  sub_24EF522D4();
  uint64_t v47 = v77;
  sub_24EF87380();
  sub_24EEFD4C4(qword_269986DD8, &qword_269986DD0);
  sub_24EEF97F4();
  uint64_t v48 = v75;
  uint64_t v49 = v81;
  sub_24EF87140();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v47, v49);
  LOBYTE(v46) = *(unsigned char *)(v46 + *(int *)(v94 + 68)) == 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v51 = swift_allocObject();
  *(unsigned char *)(v51 + 16) = v46;
  uint64_t v53 = v84;
  uint64_t v52 = v85;
  uint64_t v54 = (uint64_t)v79;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v79, v48, v85);
  uint64_t v55 = (uint64_t *)(v54 + *(int *)(v82 + 36));
  *uint64_t v55 = KeyPath;
  v55[1] = (uint64_t)sub_24EEFD2E4;
  void v55[2] = v51;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v48, v52);
  Option.identifier.getter();
  uint64_t v56 = v97;
  sub_24EF87540();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985B10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24EF88500;
  *(void *)(inited + 32) = 1701667182;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v58 = (*(uint64_t (**)(uint64_t))(v96 + 24))(v80);
  uint64_t v59 = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v58;
  *(void *)(inited + 56) = v60;
  *(void *)(inited + 72) = v59;
  strcpy((char *)(inited + 80), "impressionType");
  *(unsigned char *)(inited + 95) = -18;
  *(void *)(inited + 96) = 0x7265746C6966;
  *(void *)(inited + 104) = 0xE600000000000000;
  *(void *)(inited + 120) = v59;
  *(void *)(inited + 128) = 0x6973736572706D69;
  uint64_t v61 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 136) = 0xEF7865646E496E6FLL;
  *(void *)(inited + 144) = v56;
  *(void *)(inited + 168) = v61;
  *(void *)(inited + 176) = 0x657079546469;
  *(void *)(inited + 216) = v59;
  *(void *)(inited + 184) = 0xE600000000000000;
  *(void *)(inited + 192) = 0x64695F737469;
  *(void *)(inited + 200) = 0xE600000000000000;
  sub_24EF72538(inited);
  sub_24EF87520();
  uint64_t v62 = MEMORY[0x263F8EE78];
  sub_24EF78EE8(MEMORY[0x263F8EE78]);
  sub_24EF78EE8(v62);
  uint64_t v63 = v88;
  sub_24EF87560();
  uint64_t v64 = sub_24EF87570();
  uint64_t v65 = (uint64_t)v63;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 0, 1, v64);
  uint64_t v66 = v90;
  sub_24EF87580();
  sub_24EF500C4();
  sub_24EF870E0();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v66, v93);
  sub_24EEFD568(v65, &qword_269985A88);
  return sub_24EEFD568(v54, &qword_269986DC0);
}

uint64_t sub_24EF51614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v85 = a7;
  uint64_t v86 = a8;
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  uint64_t v77 = a1;
  uint64_t v78 = a3;
  uint64_t v69 = a2;
  uint64_t v76 = a9;
  uint64_t v82 = a10;
  uint64_t v81 = a11;
  uint64_t v80 = a12;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985A90) - 8;
  MEMORY[0x270FA5388](v75);
  uint64_t v74 = (uint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985AF0) - 8;
  MEMORY[0x270FA5388](v73);
  uint64_t v72 = (uint64_t)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24EF87400();
  MEMORY[0x270FA5388](v16 - 8);
  unint64_t v70 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986E88) - 8;
  MEMORY[0x270FA5388](v71);
  uint64_t v68 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = a6;
  *(void *)&long long v101 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 24))(a3, a6);
  *((void *)&v101 + 1) = v19;
  sub_24EEFD5C4();
  uint64_t v20 = sub_24EF870C0();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_24EF87050();
  uint64_t v25 = sub_24EF870A0();
  uint64_t v27 = v26;
  char v29 = v28;
  swift_release();
  char v30 = v29 & 1;
  sub_24EEFD518(v20, v22, v24);
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_24EF87090();
  uint64_t v33 = v32;
  char v35 = v34 & 1;
  sub_24EEFD518(v25, v27, v30);
  swift_bridgeObjectRelease();
  *(void *)&long long v101 = sub_24EEFD618(v77, v78, v83, v84, v79, v85, v86, v82, v81);
  uint64_t v36 = sub_24EF87070();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  char v42 = v41 & 1;
  sub_24EEFD518(v31, v33, v35);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = sub_24EF87460();
  sub_24EF5FF60(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)&v101, 0.0, 1, INFINITY, 0, v43, v44, v36, v38, v42, v40);
  sub_24EEFD518(v36, v38, v42);
  swift_bridgeObjectRelease();
  long long v98 = v107;
  long long v99 = v108;
  long long v100 = v109;
  long long v94 = v103;
  long long v95 = v104;
  long long v96 = v105;
  long long v97 = v106;
  long long v92 = v101;
  long long v93 = v102;
  sub_24EF87460();
  sub_24EF86B90();
  long long v107 = v98;
  long long v108 = v99;
  long long v109 = v100;
  long long v103 = v94;
  long long v104 = v95;
  long long v105 = v96;
  long long v106 = v97;
  long long v101 = v92;
  long long v102 = v93;
  *(void *)&long long v110 = v87;
  BYTE8(v110) = v88;
  *(void *)&long long v111 = v89;
  BYTE8(v111) = v90;
  long long v112 = v91;
  uint64_t v45 = *MEMORY[0x263F19860];
  uint64_t v46 = sub_24EF86D40();
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 104);
  uint64_t v48 = (uint64_t)v70;
  v47(v70, v45, v46);
  uint64_t v49 = v72;
  sub_24EEFD3BC(v48, v72);
  *(unsigned char *)(v49 + *(int *)(v73 + 44)) = 0;
  uint64_t v50 = v68;
  sub_24EEF7878(v49, (uint64_t)&v68[*(int *)(v71 + 44)], &qword_269985AF0);
  long long v51 = v110;
  v50[8] = v109;
  v50[9] = v51;
  long long v52 = v112;
  v50[10] = v111;
  v50[11] = v52;
  long long v53 = v106;
  v50[4] = v105;
  void v50[5] = v53;
  long long v54 = v108;
  v50[6] = v107;
  v50[7] = v54;
  long long v55 = v102;
  *uint64_t v50 = v101;
  v50[1] = v55;
  long long v56 = v104;
  _OWORD v50[2] = v103;
  uint64_t v50[3] = v56;
  sub_24EF01D58((uint64_t)&v101);
  sub_24EEFD568(v49, &qword_269985AF0);
  sub_24EEFD420(v48);
  sub_24EF01D98((uint64_t)&v92);
  v47((char *)v48, v45, v46);
  uint64_t v57 = sub_24EEFD2EC(v77, v78, v83, v84, v79, v85, v86, v82, v81);
  uint64_t v58 = v74;
  sub_24EEFD3BC(v48, v74);
  *(void *)(v58 + *(int *)(v75 + 44)) = v57;
  sub_24EEFD420(v48);
  uint64_t v59 = sub_24EF87460();
  uint64_t v61 = v60;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986E70);
  uint64_t v63 = v76;
  uint64_t v64 = v76 + *(int *)(v62 + 36);
  sub_24EEF7878(v58, v64, &qword_269985A90);
  uint64_t v65 = (uint64_t *)(v64 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699859F0) + 36));
  *uint64_t v65 = v59;
  v65[1] = v61;
  sub_24EEF7878((uint64_t)v50, v63, &qword_269986E88);
  sub_24EEFD568(v58, &qword_269985A90);
  return sub_24EEFD568((uint64_t)v50, &qword_269986E88);
}

uint64_t sub_24EF51C48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_24EF51CA4(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24EF51D24(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for FilterStandardSectionView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EF51D9C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EF52014@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF50930(v1[11], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1, v1[9], v1[10]);
}

uint64_t sub_24EF5204C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EF52098()
{
  return 72;
}

__n128 sub_24EF520A4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  __n128 result = *(__n128 *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  *(void *)(a2 + 64) = *(void *)(a1 + 64);
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_24EF520C8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24EF52110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24EF50DC4(a1, a2, (_OWORD *)(v3 + 88), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), a3, *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80));
}

uint64_t sub_24EF52150()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EF52188()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for Option() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24EF52294@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF51614(v1[11], v1[12], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1, v1[8], v1[9], v1[10]);
}

unint64_t sub_24EF522D4()
{
  unint64_t result = qword_269986E78;
  if (!qword_269986E78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986E70);
    sub_24EF52374();
    sub_24EEFD4C4(&qword_2699859E8, &qword_2699859F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986E78);
  }
  return result;
}

unint64_t sub_24EF52374()
{
  unint64_t result = qword_269986E80;
  if (!qword_269986E80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986E88);
    sub_24EF52414();
    sub_24EEFD4C4(&qword_269985AE8, &qword_269985AF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986E80);
  }
  return result;
}

unint64_t sub_24EF52414()
{
  unint64_t result = qword_269986E90;
  if (!qword_269986E90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986E98);
    sub_24EF3AAB8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986E90);
  }
  return result;
}

uint64_t sub_24EF52498()
{
  return swift_deallocObject();
}

uint64_t Artwork.backgroundColor.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EEF7878(v1, a1, &qword_2699858F0);
}

uint64_t Artwork.variant.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Artwork() + 20));
}

uint64_t type metadata accessor for Artwork()
{
  uint64_t result = qword_269986EF8;
  if (!qword_269986EF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Artwork.templateURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Artwork();
  return sub_24EEF7878(v1 + *(int *)(v3 + 24), a1, &qword_2699858E8);
}

uint64_t Artwork.init(backgroundColor:templateURL:variant:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  sub_24EF22C1C(a1, a4, &qword_2699858F0);
  uint64_t v7 = type metadata accessor for Artwork();
  uint64_t result = sub_24EF22C1C(a2, a4 + *(int *)(v7 + 24), &qword_2699858E8);
  *(unsigned char *)(a4 + *(int *)(v7 + 20)) = a3;
  return result;
}

uint64_t sub_24EF525EC()
{
  uint64_t v1 = 0x746E6169726176;
  if (*v0 != 1) {
    uint64_t v1 = 0x6574616C706D6574;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x756F72676B636162;
  }
}

uint64_t sub_24EF5265C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF559E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF52684(uint64_t a1)
{
  unint64_t v2 = sub_24EF52998();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF526C0(uint64_t a1)
{
  unint64_t v2 = sub_24EF52998();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF526FC@<X0>(uint64_t a1@<X8>)
{
  return sub_24EEF7878(v1, a1, &qword_2699858F0);
}

uint64_t sub_24EF52724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24EEF7878(v2 + *(int *)(a1 + 24), a2, &qword_2699858E8);
}

uint64_t Artwork.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986EA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF52998();
  sub_24EF87AF0();
  v10[15] = 0;
  sub_24EF86AA0();
  sub_24EF55B7C(&qword_269986EB0, MEMORY[0x263F3E0F0]);
  sub_24EF879C0();
  if (!v2)
  {
    v10[14] = *(unsigned char *)(v3 + *(int *)(type metadata accessor for Artwork() + 20));
    v10[13] = 1;
    sub_24EF529EC();
    sub_24EF87A20();
    v10[12] = 2;
    sub_24EF86A40();
    sub_24EF55B7C(&qword_269986EC0, MEMORY[0x263F06EA8]);
    sub_24EF879C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24EF52998()
{
  unint64_t result = qword_269986EA8;
  if (!qword_269986EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986EA8);
  }
  return result;
}

unint64_t sub_24EF529EC()
{
  unint64_t result = qword_269986EB8;
  if (!qword_269986EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986EB8);
  }
  return result;
}

uint64_t Artwork.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v26 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986EC8);
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Artwork();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF52998();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v25;
  uint64_t v15 = (uint64_t)v13;
  char v23 = v6;
  sub_24EF86AA0();
  char v31 = 0;
  sub_24EF55B7C(&qword_269986ED0, MEMORY[0x263F3E0F0]);
  uint64_t v17 = v26;
  uint64_t v16 = v27;
  sub_24EF87910();
  uint64_t v18 = (uint64_t)v17;
  uint64_t v19 = v15;
  sub_24EF22C1C(v18, v15, &qword_2699858F0);
  char v29 = 1;
  sub_24EF52E34();
  sub_24EF87970();
  *(unsigned char *)(v15 + *(int *)(v11 + 20)) = v30;
  sub_24EF86A40();
  char v28 = 2;
  sub_24EF55B7C(&qword_269986EE0, MEMORY[0x263F06EA8]);
  uint64_t v20 = (uint64_t)v23;
  sub_24EF87910();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v16);
  sub_24EF22C1C(v20, v19 + *(int *)(v11 + 24), &qword_2699858E8);
  sub_24EEF77B0(v19, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24EEF7924(v19);
}

unint64_t sub_24EF52E34()
{
  unint64_t result = qword_269986ED8;
  if (!qword_269986ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986ED8);
  }
  return result;
}

uint64_t sub_24EF52E88@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Artwork.init(from:)(a1, a2);
}

uint64_t sub_24EF52EA0(void *a1)
{
  return Artwork.encode(to:)(a1);
}

uint64_t Artwork.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24EF86A40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24EF86AA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EEF7878(v1, (uint64_t)v14, &qword_2699858F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_24EF87AB0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_24EF87AB0();
    sub_24EF55B7C(&qword_2699858F8, MEMORY[0x263F3E0F0]);
    sub_24EF875A0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v15 = type metadata accessor for Artwork();
  ArtworkVariant.rawValue.getter(*(unsigned char *)(v1 + *(int *)(v15 + 20)));
  sub_24EF87670();
  swift_bridgeObjectRelease();
  sub_24EEF7878(v1 + *(int *)(v15 + 24), (uint64_t)v7, &qword_2699858E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1) {
    return sub_24EF87AB0();
  }
  uint64_t v17 = v19;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v19, v7, v2);
  sub_24EF87AB0();
  sub_24EF55B7C(&qword_269985900, MEMORY[0x263F06EA8]);
  sub_24EF875A0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v17, v2);
}

uint64_t Artwork.hashValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24EF86A40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24EF86AA0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EF87A90();
  sub_24EEF7878(v1, (uint64_t)v15, &qword_2699858F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    sub_24EF87AB0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    sub_24EF87AB0();
    sub_24EF55B7C(&qword_2699858F8, MEMORY[0x263F3E0F0]);
    sub_24EF875A0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v16 = type metadata accessor for Artwork();
  ArtworkVariant.rawValue.getter(*(unsigned char *)(v1 + *(int *)(v16 + 20)));
  sub_24EF87670();
  swift_bridgeObjectRelease();
  sub_24EEF7878(v1 + *(int *)(v16 + 24), (uint64_t)v8, &qword_2699858E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_24EF87AB0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_24EF87AB0();
    sub_24EF55B7C(&qword_269985900, MEMORY[0x263F06EA8]);
    sub_24EF875A0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_24EF87AD0();
}

uint64_t sub_24EF53648(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a2;
  uint64_t v3 = v2;
  uint64_t v4 = sub_24EF86A40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24EF86AA0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EEF7878(v3, (uint64_t)v16, &qword_2699858F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) == 1)
  {
    sub_24EF87AB0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v16, v10);
    sub_24EF87AB0();
    sub_24EF55B7C(&qword_2699858F8, MEMORY[0x263F3E0F0]);
    sub_24EF875A0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v17 = v21;
  ArtworkVariant.rawValue.getter(*(unsigned char *)(v3 + *(int *)(v21 + 20)));
  sub_24EF87670();
  swift_bridgeObjectRelease();
  sub_24EEF7878(v3 + *(int *)(v17 + 24), (uint64_t)v9, &qword_2699858E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1) {
    return sub_24EF87AB0();
  }
  uint64_t v19 = v20;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v20, v9, v4);
  sub_24EF87AB0();
  sub_24EF55B7C(&qword_269985900, MEMORY[0x263F06EA8]);
  sub_24EF875A0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v19, v4);
}

uint64_t sub_24EF53A04(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_24EF86A40();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v20 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24EF86AA0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EF87A90();
  sub_24EEF7878(v2, (uint64_t)v15, &qword_2699858F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    sub_24EF87AB0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    sub_24EF87AB0();
    sub_24EF55B7C(&qword_2699858F8, MEMORY[0x263F3E0F0]);
    sub_24EF875A0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v16 = v21;
  ArtworkVariant.rawValue.getter(*(unsigned char *)(v2 + *(int *)(v21 + 20)));
  sub_24EF87670();
  swift_bridgeObjectRelease();
  sub_24EEF7878(v2 + *(int *)(v16 + 24), (uint64_t)v8, &qword_2699858E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
  {
    sub_24EF87AB0();
  }
  else
  {
    uint64_t v17 = v20;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v20, v8, v3);
    sub_24EF87AB0();
    sub_24EF55B7C(&qword_269985900, MEMORY[0x263F06EA8]);
    sub_24EF875A0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v3);
  }
  return sub_24EF87AD0();
}

BOOL _s16FitnessFiltering7ArtworkV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = a2;
  uint64_t v63 = sub_24EF86A40();
  uint64_t v61 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  long long v56 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D28);
  MEMORY[0x270FA5388](v58);
  uint64_t v62 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v59 = (uint64_t)&v56 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v60 = (uint64_t)&v56 - v10;
  uint64_t v11 = sub_24EF86AA0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D30);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v56 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v56 - v26;
  uint64_t v64 = a1;
  sub_24EEF7878(a1, (uint64_t)&v56 - v26, &qword_2699858F0);
  sub_24EEF7878(v65, (uint64_t)v25, &qword_2699858F0);
  uint64_t v28 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_24EEF7878((uint64_t)v27, (uint64_t)v18, &qword_2699858F0);
  sub_24EEF7878((uint64_t)v25, v28, &qword_2699858F0);
  char v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v29((uint64_t)v18, 1, v11) == 1)
  {
    sub_24EEFD568((uint64_t)v25, &qword_2699858F0);
    sub_24EEFD568((uint64_t)v27, &qword_2699858F0);
    if (v29(v28, 1, v11) == 1)
    {
      sub_24EEFD568((uint64_t)v18, &qword_2699858F0);
      goto LABEL_8;
    }
LABEL_6:
    char v30 = &qword_269985D30;
    uint64_t v31 = (uint64_t)v18;
LABEL_18:
    sub_24EEFD568(v31, v30);
    return 0;
  }
  sub_24EEF7878((uint64_t)v18, (uint64_t)v22, &qword_2699858F0);
  if (v29(v28, 1, v11) == 1)
  {
    sub_24EEFD568((uint64_t)v25, &qword_2699858F0);
    sub_24EEFD568((uint64_t)v27, &qword_2699858F0);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v11);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, v28, v11);
  sub_24EF55B7C(&qword_269985D40, MEMORY[0x263F3E0F0]);
  char v32 = sub_24EF875B0();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v12 + 8);
  v33(v14, v11);
  sub_24EEFD568((uint64_t)v25, &qword_2699858F0);
  sub_24EEFD568((uint64_t)v27, &qword_2699858F0);
  v33(v22, v11);
  sub_24EEFD568((uint64_t)v18, &qword_2699858F0);
  if (v32)
  {
LABEL_8:
    uint64_t v34 = type metadata accessor for Artwork();
    uint64_t v35 = *(int *)(v34 + 20);
    uint64_t v37 = v64;
    uint64_t v36 = v65;
    char v38 = *(unsigned char *)(v65 + v35);
    uint64_t v39 = ArtworkVariant.rawValue.getter(*(unsigned char *)(v64 + v35));
    uint64_t v41 = v40;
    if (v39 == ArtworkVariant.rawValue.getter(v38) && v41 == v42)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v43 = sub_24EF87A60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if ((v43 & 1) == 0) {
        return result;
      }
    }
    uint64_t v45 = v60;
    sub_24EEF7878(v37 + *(int *)(v34 + 24), v60, &qword_2699858E8);
    uint64_t v46 = v59;
    sub_24EEF7878(v36 + *(int *)(v34 + 24), v59, &qword_2699858E8);
    uint64_t v47 = v62;
    uint64_t v48 = v62 + *(int *)(v58 + 48);
    sub_24EEF7878(v45, v62, &qword_2699858E8);
    sub_24EEF7878(v46, v48, &qword_2699858E8);
    uint64_t v49 = v61;
    uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
    uint64_t v51 = v63;
    if (v50(v47, 1, v63) == 1)
    {
      sub_24EEFD568(v46, &qword_2699858E8);
      sub_24EEFD568(v45, &qword_2699858E8);
      if (v50(v48, 1, v51) == 1)
      {
        sub_24EEFD568(v47, &qword_2699858E8);
        return 1;
      }
    }
    else
    {
      uint64_t v52 = v57;
      sub_24EEF7878(v47, v57, &qword_2699858E8);
      if (v50(v48, 1, v51) != 1)
      {
        long long v53 = v56;
        (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v56, v48, v51);
        sub_24EF55B7C(&qword_269985D38, MEMORY[0x263F06EA8]);
        char v54 = sub_24EF875B0();
        long long v55 = *(void (**)(char *, uint64_t))(v49 + 8);
        v55(v53, v51);
        sub_24EEFD568(v46, &qword_2699858E8);
        sub_24EEFD568(v45, &qword_2699858E8);
        v55((char *)v52, v51);
        sub_24EEFD568(v47, &qword_2699858E8);
        return (v54 & 1) != 0;
      }
      sub_24EEFD568(v46, &qword_2699858E8);
      sub_24EEFD568(v45, &qword_2699858E8);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v52, v51);
    }
    char v30 = &qword_269985D28;
    uint64_t v31 = v47;
    goto LABEL_18;
  }
  return 0;
}

uint64_t sub_24EF545AC()
{
  return sub_24EF55B7C(&qword_2699858B0, (void (*)(uint64_t))type metadata accessor for Artwork);
}

uint64_t sub_24EF545F4()
{
  return sub_24EF55B7C(&qword_269985898, (void (*)(uint64_t))type metadata accessor for Artwork);
}

uint64_t sub_24EF5463C()
{
  return sub_24EF55B7C(&qword_269986EE8, (void (*)(uint64_t))type metadata accessor for Artwork);
}

uint64_t sub_24EF54684()
{
  return sub_24EF55B7C(&qword_269986EF0, (void (*)(uint64_t))type metadata accessor for Artwork);
}

uint64_t *initializeBufferWithCopyOfBuffer for Artwork(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24EF86AA0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_24EF86A40();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t destroy for Artwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EF86AA0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_24EF86A40();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

char *initializeWithCopy for Artwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EF86AA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_24EF86A40();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *assignWithCopy for Artwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EF86AA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_24EF86A40();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

char *initializeWithTake for Artwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EF86AA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_24EF86A40();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *assignWithTake for Artwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EF86AA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_24EF86A40();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for Artwork(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EF55410);
}

uint64_t sub_24EF55410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 246)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xA) {
      return v10 - 9;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for Artwork(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EF55550);
}

uint64_t sub_24EF55550(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858F0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 246)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 9;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699858E8);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_24EF55680()
{
  sub_24EF55788(319, &qword_269986F08, MEMORY[0x263F3E0F0]);
  if (v0 <= 0x3F)
  {
    sub_24EF55788(319, &qword_269986F10, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24EF55788(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24EF877D0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for Artwork.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF558A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Artwork.CodingKeys()
{
  return &type metadata for Artwork.CodingKeys;
}

unint64_t sub_24EF558E4()
{
  unint64_t result = qword_269986F18;
  if (!qword_269986F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986F18);
  }
  return result;
}

unint64_t sub_24EF5593C()
{
  unint64_t result = qword_269986F20;
  if (!qword_269986F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986F20);
  }
  return result;
}

unint64_t sub_24EF55994()
{
  unint64_t result = qword_269986F28;
  if (!qword_269986F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986F28);
  }
  return result;
}

uint64_t sub_24EF559E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E6169726176 && a2 == 0xE700000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EF55B7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FilterEnvironment.attributedTitleProvider.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t FilterEnvironment.dismiss.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t FilterEnvironment.existingFilter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(v1 + 56);
  return sub_24EF06CC8(v2);
}

uint64_t FilterEnvironment.filterCatalog.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  return v1;
}

uint64_t FilterEnvironment.filterConfigurationProvider.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_retain();
  return v1;
}

uint64_t FilterEnvironment.makeArchivedSessionsUpdatedStream.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_retain();
  return v1;
}

uint64_t FilterEnvironment.queryInitialFilter.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_retain();
  return v1;
}

uint64_t FilterEnvironment.queryFilterOptions.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_retain();
  return v1;
}

uint64_t FilterEnvironment.refreshCanvas.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_retain();
  return v1;
}

uint64_t FilterEnvironment.reloadWorkouts.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_retain();
  return v1;
}

__n128 FilterEnvironment.init(attributedTitleProvider:existingFilter:dismiss:filterCatalog:filterConfigurationProvider:makeArchivedSessionsUpdatedStream:queryInitialFilter:queryFilterOptions:refreshCanvas:reloadWorkouts:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, long long a13, __n128 a14, uint64_t a15)
{
  __n128 result = a14;
  uint64_t v16 = *(void *)(a3 + 16);
  char v17 = *(unsigned char *)(a3 + 24);
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a4;
  *(void *)(a9 + 24) = a5;
  *(_OWORD *)(a9 + 32) = *(_OWORD *)a3;
  *(void *)(a9 + 48) = v16;
  *(unsigned char *)(a9 + 56) = v17;
  *(void *)(a9 + 64) = a6;
  *(void *)(a9 + 72) = a7;
  *(void *)(a9 + 80) = a8;
  *(_OWORD *)(a9 + 88) = a10;
  *(_OWORD *)(a9 + 104) = a11;
  *(_OWORD *)(a9 + 120) = a12;
  *(_OWORD *)(a9 + 136) = a13;
  *(__n128 *)(a9 + 152) = a14;
  *(void *)(a9 + 168) = a15;
  return result;
}

uint64_t destroy for FilterEnvironment(uint64_t a1)
{
  swift_release();
  swift_release();
  if (*(void *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for FilterEnvironment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  char v6 = (_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  if (v5)
  {
    *(void *)(a1 + 32) = v5;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v6;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)v6 + 9);
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v7 = *(void *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FilterEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  char v6 = (_OWORD *)(a1 + 32);
  uint64_t v8 = (_OWORD *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v7)
    {
      *(void *)(a1 + 32) = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    }
    else
    {
      sub_24EF22580(a1 + 32);
      long long v9 = *(_OWORD *)(a2 + 41);
      *char v6 = *v8;
      *(_OWORD *)(a1 + 41) = v9;
    }
  }
  else if (v7)
  {
    *(void *)(a1 + 32) = v7;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v8;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    *char v6 = v10;
  }
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  swift_retain();
  swift_release();
  uint64_t v13 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v13;
  swift_retain();
  swift_release();
  uint64_t v14 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v15;
  swift_retain();
  swift_release();
  uint64_t v16 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v16;
  swift_retain();
  swift_release();
  uint64_t v17 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v17;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for FilterEnvironment(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32)) {
    goto LABEL_5;
  }
  if (!v4)
  {
    sub_24EF22580(a1 + 32);
LABEL_5:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_6;
  }
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
LABEL_6:
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_release();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FilterEnvironment(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FilterEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterEnvironment()
{
  return &type metadata for FilterEnvironment;
}

BOOL static FilterSizeClass.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24EF563A8()
{
  uint64_t result = 0x616D536172747865;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6C616D73;
      break;
    case 2:
      uint64_t result = 0x72616C75676572;
      break;
    case 3:
      uint64_t result = 0x6D756964656DLL;
      break;
    case 4:
      uint64_t result = 0x656772616CLL;
      break;
    case 5:
      uint64_t result = 0x72614C6172747865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF56470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF570C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF56498(uint64_t a1)
{
  unint64_t v2 = sub_24EF56D98();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF564D4(uint64_t a1)
{
  unint64_t v2 = sub_24EF56D98();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF56510(uint64_t a1)
{
  unint64_t v2 = sub_24EF56DEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF5654C(uint64_t a1)
{
  unint64_t v2 = sub_24EF56DEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF56588(uint64_t a1)
{
  unint64_t v2 = sub_24EF56F90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF565C4(uint64_t a1)
{
  unint64_t v2 = sub_24EF56F90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF56600(uint64_t a1)
{
  unint64_t v2 = sub_24EF56E40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF5663C(uint64_t a1)
{
  unint64_t v2 = sub_24EF56E40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF56678(uint64_t a1)
{
  unint64_t v2 = sub_24EF56E94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF566B4(uint64_t a1)
{
  unint64_t v2 = sub_24EF56E94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF566F0(uint64_t a1)
{
  unint64_t v2 = sub_24EF56EE8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF5672C(uint64_t a1)
{
  unint64_t v2 = sub_24EF56EE8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF56768(uint64_t a1)
{
  unint64_t v2 = sub_24EF56F3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF567A4(uint64_t a1)
{
  unint64_t v2 = sub_24EF56F3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FilterSizeClass.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v40 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986F30);
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986F38);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v34 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986F40);
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v31 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986F48);
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v28 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986F50);
  uint64_t v26 = *(void *)(v11 - 8);
  uint64_t v27 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986F58);
  uint64_t v25 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269986F60);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF56D98();
  sub_24EF87AF0();
  switch((char)v40)
  {
    case 1:
      char v42 = 1;
      sub_24EF56F3C();
      sub_24EF879A0();
      uint64_t v22 = v26;
      uint64_t v21 = v27;
      goto LABEL_8;
    case 2:
      char v43 = 2;
      sub_24EF56EE8();
      uint64_t v13 = v28;
      sub_24EF879A0();
      uint64_t v22 = v29;
      uint64_t v21 = v30;
      goto LABEL_8;
    case 3:
      char v44 = 3;
      sub_24EF56E94();
      uint64_t v13 = v31;
      sub_24EF879A0();
      uint64_t v22 = v32;
      uint64_t v21 = v33;
      goto LABEL_8;
    case 4:
      char v45 = 4;
      sub_24EF56E40();
      uint64_t v13 = v34;
      sub_24EF879A0();
      uint64_t v22 = v35;
      uint64_t v21 = v36;
      goto LABEL_8;
    case 5:
      char v46 = 5;
      sub_24EF56DEC();
      uint64_t v13 = v37;
      sub_24EF879A0();
      uint64_t v22 = v38;
      uint64_t v21 = v39;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v21);
      break;
    default:
      char v41 = 0;
      sub_24EF56F90();
      sub_24EF879A0();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v14);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

unint64_t sub_24EF56D98()
{
  unint64_t result = qword_269986F68;
  if (!qword_269986F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986F68);
  }
  return result;
}

unint64_t sub_24EF56DEC()
{
  unint64_t result = qword_269986F70;
  if (!qword_269986F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986F70);
  }
  return result;
}

unint64_t sub_24EF56E40()
{
  unint64_t result = qword_269986F78;
  if (!qword_269986F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986F78);
  }
  return result;
}

unint64_t sub_24EF56E94()
{
  unint64_t result = qword_269986F80;
  if (!qword_269986F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986F80);
  }
  return result;
}

unint64_t sub_24EF56EE8()
{
  unint64_t result = qword_269986F88;
  if (!qword_269986F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986F88);
  }
  return result;
}

unint64_t sub_24EF56F3C()
{
  unint64_t result = qword_269986F90;
  if (!qword_269986F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986F90);
  }
  return result;
}

unint64_t sub_24EF56F90()
{
  unint64_t result = qword_269986F98;
  if (!qword_269986F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986F98);
  }
  return result;
}

char *FilterSizeClass.init(from:)(void *a1)
{
  return sub_24EF57344(a1);
}

char *sub_24EF56FFC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24EF57344(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_24EF57028(void *a1)
{
  return FilterSizeClass.encode(to:)(a1, *v1);
}

BOOL static FilterSizeClass.< infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

uint64_t FilterSizeClass.hash(into:)()
{
  return sub_24EF87AA0();
}

uint64_t FilterSizeClass.hashValue.getter()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF570C4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x616D536172747865 && a2 == 0xEA00000000006C6CLL || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6C616D73 && a2 == 0xE500000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72616C75676572 && a2 == 0xE700000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D756964656DLL && a2 == 0xE600000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656772616CLL && a2 == 0xE500000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x72614C6172747865 && a2 == 0xEA00000000006567)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

char *sub_24EF57344(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987020);
  uint64_t v41 = *(void *)(v2 - 8);
  uint64_t v42 = v2;
  MEMORY[0x270FA5388](v2);
  long long v55 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987028);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  uint64_t v51 = v5;
  MEMORY[0x270FA5388](v4);
  char v54 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987030);
  uint64_t v46 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  long long v53 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987038);
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v52 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987040);
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987048);
  uint64_t v43 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987050);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  long long v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_24EF56D98();
  uint64_t v21 = v57;
  sub_24EF87AE0();
  if (!v21)
  {
    uint64_t v38 = v13;
    uint64_t v39 = v15;
    uint64_t v40 = v12;
    uint64_t v22 = v52;
    uint64_t v23 = v53;
    uint64_t v24 = v54;
    uint64_t v25 = v55;
    uint64_t v57 = (char *)v16;
    uint64_t v26 = v19;
    uint64_t v27 = sub_24EF87980();
    if (*(void *)(v27 + 16) == 1)
    {
      uint64_t v19 = (char *)*(unsigned __int8 *)(v27 + 32);
      switch(*(unsigned char *)(v27 + 32))
      {
        case 1:
          char v59 = 1;
          sub_24EF56F3C();
          uint64_t v24 = v40;
          uint64_t v29 = v57;
          sub_24EF878E0();
          uint64_t v35 = v44;
          uint64_t v34 = v45;
          goto LABEL_12;
        case 2:
          char v60 = 2;
          sub_24EF56EE8();
          uint64_t v24 = v22;
          uint64_t v29 = v57;
          sub_24EF878E0();
          uint64_t v35 = v47;
          uint64_t v34 = v48;
          goto LABEL_12;
        case 3:
          char v61 = 3;
          sub_24EF56E94();
          uint64_t v36 = v57;
          sub_24EF878E0();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v49);
          goto LABEL_14;
        case 4:
          char v62 = 4;
          sub_24EF56E40();
          uint64_t v29 = v57;
          sub_24EF878E0();
          uint64_t v34 = v50;
          uint64_t v35 = v51;
LABEL_12:
          (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v34);
          goto LABEL_13;
        case 5:
          char v63 = 5;
          sub_24EF56DEC();
          uint64_t v36 = v57;
          sub_24EF878E0();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v42);
LABEL_14:
          swift_bridgeObjectRelease();
          (*(void (**)(char *, char *))(v17 + 8))(v26, v36);
          break;
        default:
          char v58 = 0;
          sub_24EF56F90();
          uint64_t v28 = v39;
          uint64_t v29 = v57;
          sub_24EF878E0();
          (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v38);
LABEL_13:
          swift_bridgeObjectRelease();
          (*(void (**)(char *, char *))(v17 + 8))(v26, v29);
          break;
      }
    }
    else
    {
      uint64_t v30 = sub_24EF87880();
      swift_allocError();
      uint64_t v32 = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269986030);
      *uint64_t v32 = &type metadata for FilterSizeClass;
      uint64_t v19 = v57;
      sub_24EF878F0();
      sub_24EF87870();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x263F8DCB0], v30);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v17 + 8))(v26, v19);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  return v19;
}

unint64_t sub_24EF57AF0()
{
  unint64_t result = qword_269986FA0;
  if (!qword_269986FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986FA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterSizeClass()
{
  return &type metadata for FilterSizeClass;
}

unsigned char *_s16FitnessFiltering15FilterSizeClassOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF57C28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterSizeClass.CodingKeys()
{
  return &type metadata for FilterSizeClass.CodingKeys;
}

ValueMetadata *type metadata accessor for FilterSizeClass.ExtraSmallCodingKeys()
{
  return &type metadata for FilterSizeClass.ExtraSmallCodingKeys;
}

ValueMetadata *type metadata accessor for FilterSizeClass.SmallCodingKeys()
{
  return &type metadata for FilterSizeClass.SmallCodingKeys;
}

ValueMetadata *type metadata accessor for FilterSizeClass.RegularCodingKeys()
{
  return &type metadata for FilterSizeClass.RegularCodingKeys;
}

ValueMetadata *type metadata accessor for FilterSizeClass.MediumCodingKeys()
{
  return &type metadata for FilterSizeClass.MediumCodingKeys;
}

ValueMetadata *type metadata accessor for FilterSizeClass.LargeCodingKeys()
{
  return &type metadata for FilterSizeClass.LargeCodingKeys;
}

ValueMetadata *type metadata accessor for FilterSizeClass.ExtraLargeCodingKeys()
{
  return &type metadata for FilterSizeClass.ExtraLargeCodingKeys;
}

unint64_t sub_24EF57CC4()
{
  unint64_t result = qword_269986FA8;
  if (!qword_269986FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986FA8);
  }
  return result;
}

unint64_t sub_24EF57D1C()
{
  unint64_t result = qword_269986FB0;
  if (!qword_269986FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986FB0);
  }
  return result;
}

unint64_t sub_24EF57D74()
{
  unint64_t result = qword_269986FB8;
  if (!qword_269986FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986FB8);
  }
  return result;
}

unint64_t sub_24EF57DCC()
{
  unint64_t result = qword_269986FC0;
  if (!qword_269986FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986FC0);
  }
  return result;
}

unint64_t sub_24EF57E24()
{
  unint64_t result = qword_269986FC8;
  if (!qword_269986FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986FC8);
  }
  return result;
}

unint64_t sub_24EF57E7C()
{
  unint64_t result = qword_269986FD0;
  if (!qword_269986FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986FD0);
  }
  return result;
}

unint64_t sub_24EF57ED4()
{
  unint64_t result = qword_269986FD8;
  if (!qword_269986FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986FD8);
  }
  return result;
}

unint64_t sub_24EF57F2C()
{
  unint64_t result = qword_269986FE0;
  if (!qword_269986FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986FE0);
  }
  return result;
}

unint64_t sub_24EF57F84()
{
  unint64_t result = qword_269986FE8;
  if (!qword_269986FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986FE8);
  }
  return result;
}

unint64_t sub_24EF57FDC()
{
  unint64_t result = qword_269986FF0;
  if (!qword_269986FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986FF0);
  }
  return result;
}

unint64_t sub_24EF58034()
{
  unint64_t result = qword_269986FF8;
  if (!qword_269986FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269986FF8);
  }
  return result;
}

unint64_t sub_24EF5808C()
{
  unint64_t result = qword_269987000;
  if (!qword_269987000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987000);
  }
  return result;
}

unint64_t sub_24EF580E4()
{
  unint64_t result = qword_269987008;
  if (!qword_269987008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987008);
  }
  return result;
}

unint64_t sub_24EF5813C()
{
  unint64_t result = qword_269987010;
  if (!qword_269987010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987010);
  }
  return result;
}

unint64_t sub_24EF58194()
{
  unint64_t result = qword_269987018;
  if (!qword_269987018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987018);
  }
  return result;
}

uint64_t Modality.activityTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Modality.artworks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Modality.iconName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Modality.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Modality.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Modality.supportedFilterKinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Modality.init(activityTypes:artworks:iconName:identifier:name:supportedFilterKinds:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

unint64_t sub_24EF582AC()
{
  unint64_t result = 0x7974697669746361;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x736B726F77747261;
      break;
    case 2:
      unint64_t result = 0x656D614E6E6F6369;
      break;
    case 3:
      unint64_t result = 0x696669746E656469;
      break;
    case 4:
      unint64_t result = 1701667182;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF58380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF59908(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF583A8(uint64_t a1)
{
  unint64_t v2 = sub_24EF58768();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF583E4(uint64_t a1)
{
  unint64_t v2 = sub_24EF58768();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EF58420@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *a1 = *(void *)(v1 + 32);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Modality.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987058);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v21 = v1[2];
  uint64_t v22 = v8;
  uint64_t v10 = v1[3];
  uint64_t v19 = v1[4];
  uint64_t v20 = v10;
  uint64_t v11 = v1[5];
  uint64_t v12 = v1[6];
  uint64_t v17 = v1[7];
  uint64_t v18 = v11;
  uint64_t v15 = v1[8];
  uint64_t v16 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF58768();
  sub_24EF87AF0();
  uint64_t v24 = v9;
  char v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987068);
  sub_24EF58E3C(&qword_269987070);
  sub_24EF87A20();
  if (!v2)
  {
    uint64_t v24 = v22;
    char v23 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
    sub_24EF4C1CC(&qword_269985890, &qword_269985898);
    sub_24EF87A20();
    LOBYTE(v24) = 2;
    sub_24EF879B0();
    LOBYTE(v24) = 3;
    sub_24EF879D0();
    LOBYTE(v24) = 4;
    sub_24EF879D0();
    uint64_t v24 = v15;
    char v23 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269987078);
    sub_24EF587BC(&qword_269987080, (void (*)(void))sub_24EF5882C);
    sub_24EF87A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EF58768()
{
  unint64_t result = qword_269987060;
  if (!qword_269987060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987060);
  }
  return result;
}

uint64_t sub_24EF587BC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987078);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EF5882C()
{
  unint64_t result = qword_269987088;
  if (!qword_269987088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987088);
  }
  return result;
}

uint64_t Modality.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987090);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF58768();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987068);
  char v30 = 0;
  sub_24EF58E3C(&qword_269987098);
  sub_24EF87970();
  uint64_t v9 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  char v30 = 1;
  sub_24EF4C1CC(&qword_2699858A8, &qword_2699858B0);
  swift_bridgeObjectRetain();
  sub_24EF87970();
  uint64_t v10 = v31;
  LOBYTE(v31) = 2;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_24EF87900();
  uint64_t v29 = v12;
  uint64_t v25 = v11;
  uint64_t v28 = v10;
  LOBYTE(v31) = 3;
  swift_bridgeObjectRetain();
  uint64_t v27 = 0;
  uint64_t v24 = sub_24EF87920();
  LOBYTE(v31) = 4;
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_24EF87920();
  uint64_t v26 = v14;
  uint64_t v23 = v15;
  uint64_t v18 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987078);
  char v30 = 5;
  sub_24EF587BC(&qword_2699870A0, (void (*)(void))sub_24EF58EA0);
  swift_bridgeObjectRetain();
  sub_24EF87970();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v19 = v31;
  swift_bridgeObjectRetain();
  uint64_t v20 = v28;
  swift_bridgeObjectRetain();
  uint64_t v21 = v29;
  swift_bridgeObjectRetain();
  uint64_t v22 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v20;
  a2[2] = v25;
  a2[3] = v21;
  a2[4] = v24;
  a2[5] = v22;
  a2[6] = v23;
  a2[7] = v18;
  a2[8] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF58E3C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987068);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EF58EA0()
{
  unint64_t result = qword_2699870A8;
  if (!qword_2699870A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699870A8);
  }
  return result;
}

uint64_t sub_24EF58EF4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Modality.init(from:)(a1, a2);
}

uint64_t sub_24EF58F0C(void *a1)
{
  return Modality.encode(to:)(a1);
}

uint64_t sub_24EF58F28(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)) {
    return 0;
  }
  else {
    return sub_24EF87A60();
  }
}

uint64_t sub_24EF58F58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_24EF87A60() ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_24EF58F98(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)) {
    char v3 = 1;
  }
  else {
    char v3 = sub_24EF87A60() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_24EF58FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  if (v4 == v2 && v5 == v3) {
    return 0;
  }
  else {
    return sub_24EF87A60();
  }
}

uint64_t Modality.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[8];
  sub_24EF87AA0();
  uint64_t v8 = *(void *)(v4 + 16);
  if (v8)
  {
    uint64_t v9 = v4 + 32;
    do
    {
      v9 += 8;
      sub_24EF87AA0();
      --v8;
    }
    while (v8);
  }
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(a1, v5);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF5654((uint64_t)a1, v7);
  return swift_bridgeObjectRelease();
}

uint64_t Modality.hashValue.getter()
{
  long long v2 = *(_OWORD *)(v0 + 16);
  long long v1 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 48);
  *(_OWORD *)&v5[9] = *(_OWORD *)v0;
  *(_OWORD *)&v5[11] = v2;
  *(_OWORD *)&v5[13] = v1;
  v5[15] = v3;
  long long v6 = *(_OWORD *)(v0 + 56);
  sub_24EF87A90();
  Modality.hash(into:)((long long *)v5);
  return sub_24EF87AD0();
}

uint64_t sub_24EF591B4()
{
  long long v2 = *(_OWORD *)(v0 + 16);
  long long v1 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 48);
  *(_OWORD *)&v5[9] = *(_OWORD *)v0;
  *(_OWORD *)&v5[11] = v2;
  *(_OWORD *)&v5[13] = v1;
  v5[15] = v3;
  long long v6 = *(_OWORD *)(v0 + 56);
  sub_24EF87A90();
  Modality.hash(into:)((long long *)v5);
  return sub_24EF87AD0();
}

uint64_t sub_24EF5921C()
{
  long long v2 = *(_OWORD *)(v0 + 16);
  long long v1 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 48);
  *(_OWORD *)&v5[9] = *(_OWORD *)v0;
  *(_OWORD *)&v5[11] = v2;
  *(_OWORD *)&v5[13] = v1;
  v5[15] = v3;
  long long v6 = *(_OWORD *)(v0 + 56);
  sub_24EF87A90();
  Modality.hash(into:)((long long *)v5);
  return sub_24EF87AD0();
}

uint64_t sub_24EF5927C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24EF59284()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24EF592B4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s16FitnessFiltering8ModalityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v17 = *(void *)(a2 + 48);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  if (!sub_24EF59BAC(*(void **)a1, *(void **)a2) || (sub_24EF01DD8(v2, v7) & 1) == 0) {
    return 0;
  }
  if (!v3)
  {
    if (!v9) {
      goto LABEL_10;
    }
    return 0;
  }
  if (!v9 || (v4 != v8 || v3 != v9) && (sub_24EF87A60() & 1) == 0) {
    return 0;
  }
LABEL_10:
  if ((v5 != v10 || v6 != v11) && (sub_24EF87A60() & 1) == 0
    || (v18 != v17 || v16 != v15) && (sub_24EF87A60() & 1) == 0)
  {
    return 0;
  }
  return sub_24EF02D98(v14, v13);
}

unint64_t sub_24EF5945C()
{
  unint64_t result = qword_2699870B0;
  if (!qword_2699870B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699870B0);
  }
  return result;
}

uint64_t destroy for Modality()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Modality(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Modality(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Modality(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Modality()
{
  return &type metadata for Modality;
}

unsigned char *storeEnumTagSinglePayload for Modality.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF597C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Modality.CodingKeys()
{
  return &type metadata for Modality.CodingKeys;
}

unint64_t sub_24EF59804()
{
  unint64_t result = qword_2699870B8;
  if (!qword_2699870B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699870B8);
  }
  return result;
}

unint64_t sub_24EF5985C()
{
  unint64_t result = qword_2699870C0;
  if (!qword_2699870C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699870C0);
  }
  return result;
}

unint64_t sub_24EF598B4()
{
  unint64_t result = qword_2699870C8;
  if (!qword_2699870C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699870C8);
  }
  return result;
}

uint64_t sub_24EF59908(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974697669746361 && a2 == 0xED00007365707954;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736B726F77747261 && a2 == 0xE800000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E6E6F6369 && a2 == 0xE800000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024EF90F50)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

BOOL sub_24EF59BAC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  int v3 = a1 + 5;
  unsigned int v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_24EF59C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v5 = 0;
    do
    {
      double v10 = *(double *)(a1 + v5 + 48);
      double v9 = *(double *)(a1 + v5 + 56);
      double v11 = *(double *)(a1 + v5 + 64);
      int v12 = *(unsigned __int8 *)(a1 + v5 + 72);
      double v14 = *(double *)(a2 + v5 + 48);
      double v13 = *(double *)(a2 + v5 + 56);
      double v15 = *(double *)(a2 + v5 + 64);
      int v16 = *(unsigned __int8 *)(a2 + v5 + 72);
      if (*(void *)(a1 + v5 + 32) == *(void *)(a2 + v5 + 32)
        && *(void *)(a1 + v5 + 40) == *(void *)(a2 + v5 + 40))
      {
        if (v10 != v14 || v9 != v13 || v11 != v15 || v12 != v16) {
          return 0;
        }
      }
      else
      {
        char v18 = sub_24EF87A60();
        uint64_t result = 0;
        if ((v18 & 1) == 0) {
          return result;
        }
        BOOL v20 = v10 == v14 && v9 == v13;
        BOOL v21 = v20 && v11 == v15;
        if (!v21 || v12 != v16) {
          return result;
        }
      }
      v5 += 48;
      --v2;
    }
    while (v2);
  }
  return 1;
}

BOOL sub_24EF59D18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = 0;
    uint64_t v4 = v2 - 1;
    while (1)
    {
      uint64_t v21 = v4;
      uint64_t v5 = *(void *)(a1 + v3 + 40);
      uint64_t v25 = *(void *)(a1 + v3 + 32);
      uint64_t v6 = *(void *)(a1 + v3 + 48);
      uint64_t v7 = *(void *)(a1 + v3 + 64);
      uint64_t v23 = *(void *)(a1 + v3 + 72);
      uint64_t v24 = *(void *)(a1 + v3 + 56);
      uint64_t v8 = *(void *)(a1 + v3 + 80);
      uint64_t v18 = v3;
      uint64_t v10 = *(void *)(a2 + v3 + 32);
      uint64_t v9 = *(void *)(a2 + v3 + 40);
      uint64_t v11 = *(void *)(a2 + v3 + 56);
      uint64_t v12 = *(void *)(a2 + v3 + 64);
      uint64_t v22 = *(void *)(a2 + v3 + 72);
      uint64_t v13 = *(void *)(a2 + v3 + 80);
      int v19 = *(unsigned __int8 *)(a2 + v3 + 88);
      int v20 = *(unsigned __int8 *)(a1 + v3 + 88);
      uint64_t v14 = *(void *)(a2 + v3 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_24EF01DD8(v25, v10) & 1) == 0) {
        break;
      }
      if (v6)
      {
        if (!v14 || (v5 != v9 || v6 != v14) && (sub_24EF87A60() & 1) == 0) {
          break;
        }
      }
      else if (v14)
      {
        break;
      }
      if ((v24 != v11 || v7 != v12) && (sub_24EF87A60() & 1) == 0
        || (v23 != v22 || v8 != v13) && (sub_24EF87A60() & 1) == 0)
      {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v21 - 1;
      BOOL result = v20 == v19;
      if (v20 == v19)
      {
        uint64_t v3 = v18 + 64;
        if (v21) {
          continue;
        }
      }
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_24EF59FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = 0;
    uint64_t v28 = a2 + 32;
    uint64_t v29 = a1 + 32;
    while (1)
    {
      uint64_t v4 = v29 + 80 * v3;
      uint64_t v5 = v28 + 80 * v3;
      uint64_t v41 = *(void **)v4;
      uint64_t v42 = *(void **)v5;
      uint64_t v6 = *(void *)(*(void *)v4 + 16);
      if (v6 != *(void *)(*(void *)v5 + 16)) {
        break;
      }
      uint64_t v7 = *(void *)(v4 + 16);
      uint64_t v35 = *(void *)(v4 + 8);
      uint64_t v8 = *(void *)(v4 + 32);
      uint64_t v40 = *(void *)(v4 + 24);
      uint64_t v9 = *(void *)(v4 + 48);
      uint64_t v38 = *(void *)(v4 + 40);
      uint64_t v10 = *(void *)(v4 + 56);
      uint64_t v34 = *(void *)(v4 + 64);
      int v11 = *(unsigned __int8 *)(v4 + 72);
      uint64_t v12 = *(void *)(v5 + 16);
      uint64_t v13 = *(void *)(v5 + 24);
      uint64_t v14 = *(void *)(v5 + 32);
      uint64_t v15 = *(void *)(v5 + 48);
      uint64_t v39 = *(void *)(v5 + 40);
      uint64_t v16 = *(void *)(v5 + 56);
      uint64_t v36 = *(void *)(v5 + 64);
      uint64_t v37 = *(void *)(v5 + 8);
      if (v6) {
        BOOL v17 = v41 == v42;
      }
      else {
        BOOL v17 = 1;
      }
      int v18 = *(unsigned __int8 *)(v5 + 72);
      if (!v17)
      {
        if (v41[4] != v42[4]) {
          return 0;
        }
        if (v6 != 1)
        {
          if (v41[5] != v42[5]) {
            return 0;
          }
          uint64_t v22 = v41 + 6;
          uint64_t v23 = v42 + 6;
          for (uint64_t i = v6 - 2; i; --i)
          {
            uint64_t v26 = *v22++;
            uint64_t v25 = v26;
            uint64_t v27 = *v23++;
            if (v25 != v27) {
              return 0;
            }
          }
        }
      }
      uint64_t v32 = v15;
      uint64_t v33 = v9;
      int v30 = v18;
      int v31 = v11;
      uint64_t v19 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_24EF01DD8(v35, v37) & 1) == 0) {
        goto LABEL_36;
      }
      if (v40)
      {
        if (!v19 || (v7 != v12 || v40 != v19) && (sub_24EF87A60() & 1) == 0) {
          goto LABEL_36;
        }
      }
      else if (v19)
      {
        goto LABEL_36;
      }
      if ((v8 != v14 || v38 != v39) && (sub_24EF87A60() & 1) == 0
        || (v33 != v32 || v10 != v16) && (sub_24EF87A60() & 1) == 0)
      {
LABEL_36:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
      char v20 = sub_24EF02D98(v34, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0) {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v31 != v30) {
        return 0;
      }
      ++v3;
      uint64_t result = 1;
      if (v3 == v2) {
        return result;
      }
    }
  }
  return 0;
}

BOOL sub_24EF5A370(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2) {
      return 1;
    }
    uint64_t v3 = a1;
    if (a1 == a2) {
      return 1;
    }
    uint64_t v4 = 0;
    uint64_t v5 = v2 - 1;
    uint64_t v19 = a2;
    while (1)
    {
      uint64_t v25 = v5;
      uint64_t v7 = *(void *)(v3 + v4 + 32);
      uint64_t v6 = *(void *)(v3 + v4 + 40);
      uint64_t v8 = *(void *)(v3 + v4 + 48);
      uint64_t v28 = *(void *)(v3 + v4 + 56);
      uint64_t v9 = *(void *)(v3 + v4 + 64);
      uint64_t v21 = *(void *)(v3 + v4 + 72);
      uint64_t v31 = *(void *)(v3 + v4 + 80);
      uint64_t v10 = *(void *)(v3 + v4 + 96);
      uint64_t v27 = *(void *)(v3 + v4 + 88);
      int v24 = *(unsigned __int8 *)(v3 + v4 + 104);
      uint64_t v22 = v4;
      uint64_t v11 = *(void *)(a2 + v4 + 32);
      uint64_t v12 = *(void *)(a2 + v4 + 40);
      uint64_t v13 = *(void *)(a2 + v4 + 48);
      uint64_t v14 = *(void *)(a2 + v4 + 56);
      uint64_t v30 = *(void *)(a2 + v4 + 64);
      uint64_t v20 = *(void *)(a2 + v4 + 72);
      uint64_t v15 = *(void *)(a2 + v4 + 96);
      uint64_t v26 = *(void *)(a2 + v4 + 88);
      int v23 = *(unsigned __int8 *)(a2 + v4 + 104);
      uint64_t v29 = *(void *)(a2 + v4 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_24EF01DD8(v7, v11) & 1) == 0) {
        break;
      }
      if (v8)
      {
        if (!v13 || (v6 != v12 || v8 != v13) && (sub_24EF87A60() & 1) == 0) {
          break;
        }
      }
      else if (v13)
      {
        break;
      }
      if ((v28 != v14 || v9 != v30) && (sub_24EF87A60() & 1) == 0) {
        break;
      }
      if (v31)
      {
        uint64_t v16 = v15;
        if (!v29 || (v21 != v20 || v31 != v29) && (sub_24EF87A60() & 1) == 0) {
          break;
        }
      }
      else
      {
        uint64_t v16 = v15;
        if (v29) {
          break;
        }
      }
      if ((v27 != v26 || v10 != v16) && (sub_24EF87A60() & 1) == 0) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v25 - 1;
      BOOL result = v24 == v23;
      if (v24 == v23)
      {
        uint64_t v4 = v22 + 80;
        uint64_t v3 = a1;
        a2 = v19;
        if (v25) {
          continue;
        }
      }
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

BOOL sub_24EF5A6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2) {
      return 1;
    }
    uint64_t v3 = a1;
    if (a1 == a2) {
      return 1;
    }
    uint64_t v4 = 0;
    uint64_t v5 = v2 - 1;
    uint64_t v18 = a2;
    while (1)
    {
      uint64_t v22 = v5;
      uint64_t v6 = *(void *)(v3 + v4 + 40);
      uint64_t v28 = *(void *)(v3 + v4 + 32);
      uint64_t v7 = *(void *)(v3 + v4 + 48);
      uint64_t v8 = *(void *)(v3 + v4 + 64);
      uint64_t v26 = *(void *)(v3 + v4 + 72);
      uint64_t v27 = *(void *)(v3 + v4 + 56);
      uint64_t v9 = *(void *)(v3 + v4 + 80);
      uint64_t v19 = v4;
      uint64_t v11 = *(void *)(a2 + v4 + 32);
      uint64_t v10 = *(void *)(a2 + v4 + 40);
      uint64_t v12 = *(void *)(a2 + v4 + 56);
      uint64_t v13 = *(void *)(a2 + v4 + 64);
      uint64_t v24 = *(void *)(v3 + v4 + 88);
      uint64_t v25 = *(void *)(a2 + v4 + 72);
      uint64_t v14 = *(void *)(a2 + v4 + 80);
      uint64_t v23 = *(void *)(a2 + v4 + 88);
      int v20 = *(unsigned __int8 *)(a2 + v4 + 96);
      int v21 = *(unsigned __int8 *)(v3 + v4 + 96);
      uint64_t v15 = *(void *)(a2 + v4 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_24EF01DD8(v28, v11) & 1) == 0) {
        break;
      }
      if (v7)
      {
        if (!v15 || (v6 != v10 || v7 != v15) && (sub_24EF87A60() & 1) == 0) {
          break;
        }
      }
      else if (v15)
      {
        break;
      }
      if ((v27 != v12 || v8 != v13) && (sub_24EF87A60() & 1) == 0
        || (v26 != v25 || v9 != v14) && (sub_24EF87A60() & 1) == 0)
      {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v24 != v23) {
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      uint64_t v5 = v22 - 1;
      BOOL result = v21 == v20;
      if (v21 == v20)
      {
        a2 = v18;
        uint64_t v4 = v19 + 72;
        uint64_t v3 = a1;
        if (v22) {
          continue;
        }
      }
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_25:
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_24EF5A96C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_24EF87A60(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_24EF87A60() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_24EF5AA34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = 0;
    uint64_t v16 = a1;
    uint64_t v17 = a2;
    while (1)
    {
      uint64_t v18 = v3;
      uint64_t v19 = v2;
      uint64_t v4 = *(void *)(a1 + v3 + 40);
      uint64_t v25 = *(void *)(a1 + v3 + 32);
      uint64_t v5 = *(void *)(a1 + v3 + 48);
      uint64_t v6 = *(void *)(a1 + v3 + 64);
      uint64_t v23 = *(void *)(a1 + v3 + 72);
      uint64_t v24 = *(void *)(a1 + v3 + 56);
      uint64_t v7 = *(void *)(a1 + v3 + 80);
      uint64_t v8 = *(void *)(a2 + v3 + 32);
      uint64_t v9 = *(void *)(a2 + v3 + 40);
      uint64_t v10 = *(void *)(a2 + v3 + 56);
      uint64_t v11 = *(void *)(a2 + v3 + 64);
      uint64_t v21 = *(void *)(a1 + v3 + 88);
      uint64_t v22 = *(void *)(a2 + v3 + 72);
      uint64_t v12 = *(void *)(a2 + v3 + 80);
      uint64_t v20 = *(void *)(a2 + v3 + 88);
      uint64_t v13 = *(void *)(a2 + v3 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_24EF01DD8(v25, v8) & 1) == 0) {
        break;
      }
      if (v5)
      {
        if (!v13 || (v4 != v9 || v5 != v13) && (sub_24EF87A60() & 1) == 0) {
          break;
        }
      }
      else if (v13)
      {
        break;
      }
      if ((v24 != v10 || v6 != v11) && (sub_24EF87A60() & 1) == 0) {
        break;
      }
      if (v23 == v22 && v7 == v12)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v21 != v20) {
          return 0;
        }
      }
      else
      {
        char v14 = sub_24EF87A60();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v14 & 1) == 0 || v21 != v20) {
          return result;
        }
      }
      uint64_t v3 = v18 + 64;
      uint64_t v2 = v19 - 1;
      a1 = v16;
      a2 = v17;
      if (v19 == 1) {
        return 1;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_24EF5ACFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_24EF87A60() & 1) == 0) {
        break;
      }
      BOOL v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_24EF87A60() & 1) == 0) {
        break;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_24EF5ADC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = a2 + 48;
    for (uint64_t i = a1 + 48; ; i += 64)
    {
      uint64_t v6 = *(void *)(i - 16);
      uint64_t v7 = *(void *)(i - 8);
      uint64_t v8 = *(void *)i;
      uint64_t v9 = *(void *)(i + 8);
      uint64_t v10 = *(void *)(i + 16);
      unsigned __int8 v11 = *(unsigned char *)(i + 24);
      uint64_t v12 = *(void *)(i + 40);
      uint64_t v21 = v2;
      uint64_t v22 = *(void *)(i + 32);
      uint64_t v13 = *(void *)(v3 - 8);
      uint64_t v16 = *(void *)v3;
      uint64_t v15 = *(void *)(v3 + 8);
      uint64_t v17 = *(void *)(v3 + 16);
      unsigned __int8 v18 = *(unsigned char *)(v3 + 24);
      uint64_t v19 = *(void *)(v3 + 32);
      uint64_t v30 = *(void *)(v3 + 40);
      v31[0] = *(void *)(v3 - 16);
      uint64_t v14 = v31[0];
      v33[0] = v6;
      v33[1] = v7;
      v33[2] = v8;
      v33[3] = v9;
      v33[4] = v10;
      unsigned __int8 v34 = v11;
      v31[1] = v13;
      v31[2] = v16;
      v31[3] = v15;
      v31[4] = v17;
      unsigned __int8 v32 = v18;
      uint64_t v24 = v6;
      uint64_t v25 = v7;
      uint64_t v26 = v8;
      uint64_t v27 = v9;
      uint64_t v28 = v10;
      unsigned __int8 v29 = v11;
      sub_24EEF7798(v6, v7, v8, v9, v10, v11);
      swift_bridgeObjectRetain();
      uint64_t v23 = v15;
      sub_24EEF7798(v14, v13, v16, v15, v17, v18);
      swift_bridgeObjectRetain();
      if ((_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v33, (uint64_t)v31) & 1) == 0) {
        break;
      }
      if (v22 == v19 && v12 == v30)
      {
        sub_24EEF7780(v14, v13, v16, v15, v17, v18);
        swift_bridgeObjectRelease();
        sub_24EEF7780(v24, v25, v26, v27, v28, v29);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v5 = sub_24EF87A60();
        sub_24EEF7780(v14, v13, v16, v23, v17, v18);
        swift_bridgeObjectRelease();
        sub_24EEF7780(v24, v25, v26, v27, v28, v29);
        swift_bridgeObjectRelease();
        if ((v5 & 1) == 0) {
          return 0;
        }
      }
      v3 += 64;
      uint64_t v2 = v21 - 1;
      if (v21 == 1) {
        return 1;
      }
    }
    sub_24EEF7780(v14, v13, v16, v15, v17, v18);
    swift_bridgeObjectRelease();
    sub_24EEF7780(v24, v25, v26, v27, v28, v29);
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_24EF5AFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    uint64_t v4 = (unsigned __int8 *)(a2 + 32);
    while (1)
    {
      unsigned int v7 = *v3++;
      uint64_t v6 = v7;
      unsigned int v9 = *v4++;
      uint64_t v8 = v9;
      unint64_t v10 = 0x800000024EF901A0;
      unint64_t v11 = 0xD000000000000013;
      switch(v6)
      {
        case 1:
          unint64_t v11 = 0x656C655265746164;
          unint64_t v10 = 0xEC00000064657361;
          break;
        case 2:
          unint64_t v10 = 0xE800000000000000;
          unint64_t v11 = 0x6E6F697461727564;
          break;
        case 3:
          unint64_t v11 = 0x7974696C61646F6DLL;
          unint64_t v10 = 0xEC000000656D614ELL;
          break;
        case 4:
          unint64_t v11 = 0x6E6547636973756DLL;
          unint64_t v10 = 0xEE00656D614E6572;
          break;
        case 5:
          unint64_t v10 = 0xE400000000000000;
          unint64_t v11 = 1701736302;
          break;
        case 6:
          unint64_t v11 = 0x4E72656E69617274;
          unint64_t v10 = 0xEB00000000656D61;
          break;
        case 7:
          unint64_t v11 = 0x6D614E656D656874;
          unint64_t v10 = 0xE900000000000065;
          break;
        default:
          break;
      }
      unint64_t v12 = 0x800000024EF901A0;
      unint64_t v13 = 0xD000000000000013;
      switch(v8)
      {
        case 1:
          uint64_t v14 = 0x656C655265746164;
          uint64_t v15 = 1684370273;
          goto LABEL_20;
        case 2:
          unint64_t v12 = 0xE800000000000000;
          if (v11 != 0x6E6F697461727564) {
            goto LABEL_5;
          }
          goto LABEL_28;
        case 3:
          uint64_t v14 = 0x7974696C61646F6DLL;
          uint64_t v15 = 1701667150;
LABEL_20:
          unint64_t v12 = v15 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          if (v11 != v14) {
            goto LABEL_5;
          }
          goto LABEL_28;
        case 4:
          unint64_t v12 = 0xEE00656D614E6572;
          if (v11 != 0x6E6547636973756DLL) {
            goto LABEL_5;
          }
          goto LABEL_28;
        case 5:
          unint64_t v12 = 0xE400000000000000;
          if (v11 != 1701736302) {
            goto LABEL_5;
          }
          goto LABEL_28;
        case 6:
          unint64_t v13 = 0x4E72656E69617274;
          unint64_t v12 = 0xEB00000000656D61;
          goto LABEL_27;
        case 7:
          unint64_t v12 = 0xE900000000000065;
          if (v11 != 0x6D614E656D656874) {
            goto LABEL_5;
          }
          goto LABEL_28;
        default:
LABEL_27:
          if (v11 != v13) {
            goto LABEL_5;
          }
LABEL_28:
          if (v10 == v12)
          {
            swift_bridgeObjectRelease_n();
            if (!--v2) {
              return 1;
            }
          }
          else
          {
LABEL_5:
            char v5 = sub_24EF87A60();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v5 & 1) == 0) {
              return 0;
            }
            if (!--v2) {
              return 1;
            }
          }
          break;
      }
    }
  }
  return 1;
}

uint64_t sub_24EF5B2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EF86A30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned int v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D60);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987128);
  MEMORY[0x270FA5388](v67);
  unint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for FilterSectionDescriptor();
  uint64_t v13 = MEMORY[0x270FA5388](v68);
  uint64_t v15 = (void (***)(char *, uint64_t, uint64_t))((char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  unsigned __int8 v18 = (void (***)(char *, uint64_t, uint64_t))((char *)&v57 - v17);
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v19 || a1 == a2) {
    return 1;
  }
  uint64_t v20 = 0;
  unint64_t v21 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v64 = a2 + v21;
  uint64_t v65 = a1 + v21;
  uint64_t v22 = *(void *)(v16 + 72);
  char v62 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v63 = v22;
  uint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  char v58 = v7;
  char v59 = (void (**)(char *, uint64_t))(v5 + 8);
  char v60 = v10;
  uint64_t v61 = v19;
  while (2)
  {
    uint64_t v23 = v20;
    uint64_t v24 = v63 * v20;
    sub_24EF33BE4(v65 + v63 * v20, (uint64_t)v18);
    sub_24EF33BE4(v64 + v24, (uint64_t)v15);
    BOOL v25 = *v18 == *v15 && v18[1] == v15[1];
    if (v25 || (sub_24EF87A60() & 1) != 0)
    {
      uint64_t v26 = *(int *)(v68 + 20);
      uint64_t v27 = (uint64_t)v15 + v26;
      uint64_t v28 = (uint64_t)&v12[*(int *)(v67 + 48)];
      sub_24EF33C48((uint64_t)v18 + v26, (uint64_t)v12);
      sub_24EF33C48(v27, v28);
      unsigned __int8 v29 = *v62;
      if ((*v62)(v12, 1, v4) == 1)
      {
        if (v29((char *)v28, 1, v4) == 1)
        {
          sub_24EEFD568((uint64_t)v12, &qword_269985D60);
LABEL_18:
          uint64_t v34 = v23 + 1;
          uint64_t v35 = *(int *)(v68 + 24);
          uint64_t v36 = *(void *)((char *)v18 + v35);
          uint64_t v37 = *((unsigned __int8 *)v18 + v35 + 8);
          uint64_t v38 = (char *)v15 + v35;
          uint64_t v39 = *(void *)v38;
          int v40 = v38[8];
          uint64_t v66 = v34;
          switch(v37)
          {
            case 1:
              if (v40 != 1) {
                goto LABEL_63;
              }
              uint64_t v41 = *(void *)(v36 + 16);
              if (v41 != *(void *)(v39 + 16)) {
                goto LABEL_63;
              }
              if (v41) {
                BOOL v42 = v36 == v39;
              }
              else {
                BOOL v42 = 1;
              }
              if (v42) {
                goto LABEL_7;
              }
              uint64_t v43 = 0;
              while (1)
              {
                double v45 = *(double *)(v36 + v43 + 48);
                double v44 = *(double *)(v36 + v43 + 56);
                double v46 = *(double *)(v36 + v43 + 64);
                int v47 = *(unsigned __int8 *)(v36 + v43 + 72);
                double v49 = *(double *)(v39 + v43 + 48);
                double v48 = *(double *)(v39 + v43 + 56);
                double v50 = *(double *)(v39 + v43 + 64);
                int v51 = *(unsigned __int8 *)(v39 + v43 + 72);
                BOOL v52 = *(void *)(v36 + v43 + 32) == *(void *)(v39 + v43 + 32)
                   && *(void *)(v36 + v43 + 40) == *(void *)(v39 + v43 + 40);
                if (!v52 && (sub_24EF87A60() & 1) == 0) {
                  goto LABEL_63;
                }
                BOOL v53 = v45 == v49 && v44 == v48;
                BOOL v54 = v53 && v46 == v50;
                if (!v54 || v47 != v51) {
                  goto LABEL_63;
                }
                v43 += 48;
                if (!--v41) {
                  goto LABEL_7;
                }
              }
            case 2:
              if (v40 != 2) {
                goto LABEL_63;
              }
              goto LABEL_6;
            case 3:
              if (v40 != 3 || (sub_24EF59FB4(v36, v39) & 1) == 0) {
                goto LABEL_63;
              }
              goto LABEL_7;
            case 4:
              if (v40 != 4) {
                goto LABEL_63;
              }
              goto LABEL_6;
            case 5:
              if (v40 != 5 || !sub_24EF5A370(v36, v39)) {
                goto LABEL_63;
              }
              goto LABEL_7;
            case 6:
              if (v40 != 6 || !sub_24EF5A6C4(v36, v39)) {
                goto LABEL_63;
              }
              goto LABEL_7;
            case 7:
              if (v40 != 7 || !sub_24EF5A370(v36, v39)) {
                goto LABEL_63;
              }
              goto LABEL_7;
            default:
              if (v40) {
                goto LABEL_63;
              }
LABEL_6:
              if (!sub_24EF59D18(v36, v39)) {
                goto LABEL_63;
              }
LABEL_7:
              sub_24EF33D1C((uint64_t)v15);
              sub_24EF33D1C((uint64_t)v18);
              uint64_t v20 = v66;
              if (v66 != v61) {
                continue;
              }
              return 1;
          }
        }
      }
      else
      {
        uint64_t v30 = (uint64_t)v60;
        sub_24EF33C48((uint64_t)v12, (uint64_t)v60);
        if (v29((char *)v28, 1, v4) != 1)
        {
          uint64_t v31 = v58;
          (*v57)(v58, v28, v4);
          sub_24EF5D054(&qword_269987130, MEMORY[0x263F06828]);
          char v32 = sub_24EF875B0();
          uint64_t v33 = *v59;
          (*v59)(v31, v4);
          v33((char *)v30, v4);
          sub_24EEFD568((uint64_t)v12, &qword_269985D60);
          if (v32) {
            goto LABEL_18;
          }
          break;
        }
        (*v59)((char *)v30, v4);
      }
      sub_24EEFD568((uint64_t)v12, &qword_269987128);
    }
    break;
  }
LABEL_63:
  sub_24EF33D1C((uint64_t)v15);
  sub_24EF33D1C((uint64_t)v18);
  return 0;
}

uint64_t ThemeCategory.artworks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ThemeCategory.iconName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ThemeCategory.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ThemeCategory.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ThemeCategory.sortOrder.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t ThemeCategory.themes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ThemeCategory.init(artworks:iconName:identifier:name:sortOrder:themes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

uint64_t sub_24EF5B9D8()
{
  uint64_t result = 0x736B726F77747261;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D614E6E6F6369;
      break;
    case 2:
      uint64_t result = 0x696669746E656469;
      break;
    case 3:
      uint64_t result = 1701667182;
      break;
    case 4:
      uint64_t result = 0x6564724F74726F73;
      break;
    case 5:
      uint64_t result = 0x73656D656874;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF5BA98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF5CDD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF5BAC0(uint64_t a1)
{
  unint64_t v2 = sub_24EF5BE28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF5BAFC(uint64_t a1)
{
  unint64_t v2 = sub_24EF5BE28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ThemeCategory.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699870D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned int v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v21 = v1[2];
  uint64_t v22 = v8;
  uint64_t v10 = v1[3];
  uint64_t v19 = v1[4];
  uint64_t v20 = v10;
  uint64_t v11 = v1[5];
  uint64_t v17 = v1[6];
  uint64_t v18 = v11;
  uint64_t v12 = v1[7];
  uint64_t v15 = v1[8];
  uint64_t v16 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF5BE28();
  sub_24EF87AF0();
  uint64_t v24 = v9;
  char v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  sub_24EF5C45C(&qword_269985890, &qword_269985898);
  sub_24EF87A20();
  if (!v2)
  {
    LOBYTE(v24) = 1;
    sub_24EF879B0();
    LOBYTE(v24) = 2;
    sub_24EF879D0();
    LOBYTE(v24) = 3;
    sub_24EF879D0();
    LOBYTE(v24) = 4;
    sub_24EF87A00();
    uint64_t v24 = v15;
    char v23 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985E18);
    sub_24EF5BE7C(&qword_2699870E0, (void (*)(void))sub_24EF5BEEC);
    sub_24EF87A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EF5BE28()
{
  unint64_t result = qword_2699870D8;
  if (!qword_2699870D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699870D8);
  }
  return result;
}

uint64_t sub_24EF5BE7C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985E18);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EF5BEEC()
{
  unint64_t result = qword_2699870E8;
  if (!qword_2699870E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699870E8);
  }
  return result;
}

uint64_t ThemeCategory.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699870F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF5BE28();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  char v37 = 0;
  sub_24EF5C45C(&qword_2699858A8, &qword_2699858B0);
  sub_24EF87970();
  uint64_t v9 = v38;
  LOBYTE(v38) = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24EF87900();
  uint64_t v12 = v11;
  uint64_t v35 = v10;
  LOBYTE(v38) = 2;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24EF87920();
  uint64_t v36 = v14;
  uint64_t v31 = v13;
  uint64_t v34 = v12;
  LOBYTE(v38) = 3;
  swift_bridgeObjectRetain();
  uint64_t v33 = 0;
  uint64_t v30 = sub_24EF87920();
  LOBYTE(v38) = 4;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_24EF87950();
  uint64_t v32 = v16;
  uint64_t v29 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985E18);
  char v37 = 5;
  sub_24EF5BE7C(&qword_2699870F8, (void (*)(void))sub_24EF5C4F0);
  sub_24EF87970();
  uint64_t v18 = v34;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v20 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = v18;
  uint64_t v22 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v35;
  *a2 = v9;
  a2[1] = v23;
  uint64_t v24 = v31;
  uint64_t v25 = v32;
  a2[2] = v21;
  a2[3] = v24;
  uint64_t v26 = v30;
  a2[4] = v22;
  a2[5] = v26;
  uint64_t v27 = v29;
  a2[6] = v25;
  a2[7] = v27;
  a2[8] = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF5C45C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269985888);
    sub_24EF5D054(a2, (void (*)(uint64_t))type metadata accessor for Artwork);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EF5C4F0()
{
  unint64_t result = qword_269987100;
  if (!qword_269987100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987100);
  }
  return result;
}

uint64_t sub_24EF5C544@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ThemeCategory.init(from:)(a1, a2);
}

uint64_t sub_24EF5C55C(void *a1)
{
  return ThemeCategory.encode(to:)(a1);
}

uint64_t ThemeCategory.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[8];
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(a1, v3);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  sub_24EF87AA0();
  swift_bridgeObjectRetain();
  sub_24EF32D8C(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t ThemeCategory.hashValue.getter()
{
  long long v1 = *(_OWORD *)(v0 + 3);
  long long v2 = *(_OWORD *)(v0 + 5);
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v7 = *v0;
  long long v8 = *(_OWORD *)(v0 + 1);
  long long v9 = v1;
  long long v10 = v2;
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  sub_24EF87A90();
  ThemeCategory.hash(into:)(v6);
  return sub_24EF87AD0();
}

uint64_t sub_24EF5C714()
{
  long long v1 = *(_OWORD *)(v0 + 3);
  long long v2 = *(_OWORD *)(v0 + 5);
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v7 = *v0;
  long long v8 = *(_OWORD *)(v0 + 1);
  long long v9 = v1;
  long long v10 = v2;
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  sub_24EF87A90();
  ThemeCategory.hash(into:)(v6);
  return sub_24EF87AD0();
}

uint64_t sub_24EF5C780()
{
  long long v1 = *(_OWORD *)(v0 + 3);
  long long v2 = *(_OWORD *)(v0 + 5);
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v7 = *v0;
  long long v8 = *(_OWORD *)(v0 + 1);
  long long v9 = v1;
  long long v10 = v2;
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  sub_24EF87A90();
  ThemeCategory.hash(into:)(v6);
  return sub_24EF87AD0();
}

uint64_t _s16FitnessFiltering13ThemeCategoryV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v17 = a1[5];
  uint64_t v18 = a1[6];
  uint64_t v14 = a1[8];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v15 = a2[7];
  uint64_t v16 = a1[7];
  uint64_t v13 = a2[8];
  if ((sub_24EF01DD8(*a1, *a2) & 1) == 0) {
    return 0;
  }
  if (!v3)
  {
    if (!v7) {
      goto LABEL_9;
    }
    return 0;
  }
  if (!v7 || (v2 != v6 || v3 != v7) && (sub_24EF87A60() & 1) == 0) {
    return 0;
  }
LABEL_9:
  if ((v4 != v8 || v5 != v10) && (sub_24EF87A60() & 1) == 0
    || (v17 != v9 || v18 != v11) && (sub_24EF87A60() & 1) == 0
    || v16 != v15)
  {
    return 0;
  }
  return sub_24EF5AA34(v14, v13);
}

unint64_t sub_24EF5C94C()
{
  unint64_t result = qword_269987108;
  if (!qword_269987108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987108);
  }
  return result;
}

uint64_t destroy for ThemeCategory()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ThemeCategory(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ThemeCategory(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ThemeCategory(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[8];
  a1[7] = a2[7];
  a1[8] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ThemeCategory()
{
  return &type metadata for ThemeCategory;
}

unsigned char *storeEnumTagSinglePayload for ThemeCategory.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF5CC90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThemeCategory.CodingKeys()
{
  return &type metadata for ThemeCategory.CodingKeys;
}

unint64_t sub_24EF5CCCC()
{
  unint64_t result = qword_269987110;
  if (!qword_269987110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987110);
  }
  return result;
}

unint64_t sub_24EF5CD24()
{
  unint64_t result = qword_269987118;
  if (!qword_269987118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987118);
  }
  return result;
}

unint64_t sub_24EF5CD7C()
{
  unint64_t result = qword_269987120;
  if (!qword_269987120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987120);
  }
  return result;
}

uint64_t sub_24EF5CDD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736B726F77747261 && a2 == 0xE800000000000000;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E6E6F6369 && a2 == 0xE800000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6564724F74726F73 && a2 == 0xE900000000000072 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73656D656874 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_24EF5D054(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ResultPlaceholder.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResultPlaceholder.referenceType.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

FitnessFiltering::ResultPlaceholder __swiftcall ResultPlaceholder.init(identifier:referenceType:)(Swift::String identifier, Swift::String referenceType)
{
  *BOOL v2 = identifier;
  v2[1] = referenceType;
  result.referenceType = referenceType;
  result.identifier = identifier;
  return result;
}

uint64_t sub_24EF5D10C()
{
  if (*v0) {
    return 0x636E657265666572;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_24EF5D158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF5DD7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF5D180(uint64_t a1)
{
  unint64_t v2 = sub_24EF5D370();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF5D1BC(uint64_t a1)
{
  unint64_t v2 = sub_24EF5D370();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ResultPlaceholder.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987138);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF5D370();
  sub_24EF87AF0();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_24EF879D0();
  if (!v8)
  {
    char v11 = 1;
    sub_24EF879D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EF5D370()
{
  unint64_t result = qword_269987140;
  if (!qword_269987140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987140);
  }
  return result;
}

uint64_t ResultPlaceholder.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987148);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF5D370();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_24EF87920();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24EF87920();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF5D5C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ResultPlaceholder.init(from:)(a1, a2);
}

uint64_t sub_24EF5D5E0(void *a1)
{
  return ResultPlaceholder.encode(to:)(a1);
}

uint64_t ResultPlaceholder.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t ResultPlaceholder.hashValue.getter()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF5D708()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF5D790()
{
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF5D814()
{
  return sub_24EF87AD0();
}

uint64_t _s16FitnessFiltering17ResultPlaceholderV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_24EF87A60(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_24EF87A60();
    }
  }
  return result;
}

unint64_t sub_24EF5D944()
{
  unint64_t result = qword_269987150;
  if (!qword_269987150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987150);
  }
  return result;
}

uint64_t destroy for ResultPlaceholder()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ResultPlaceholder(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ResultPlaceholder(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for ResultPlaceholder(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResultPlaceholder(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResultPlaceholder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultPlaceholder()
{
  return &type metadata for ResultPlaceholder;
}

unsigned char *storeEnumTagSinglePayload for ResultPlaceholder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF5DC3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultPlaceholder.CodingKeys()
{
  return &type metadata for ResultPlaceholder.CodingKeys;
}

unint64_t sub_24EF5DC78()
{
  unint64_t result = qword_269987158;
  if (!qword_269987158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987158);
  }
  return result;
}

unint64_t sub_24EF5DCD0()
{
  unint64_t result = qword_269987160;
  if (!qword_269987160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987160);
  }
  return result;
}

unint64_t sub_24EF5DD28()
{
  unint64_t result = qword_269987168;
  if (!qword_269987168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987168);
  }
  return result;
}

uint64_t sub_24EF5DD7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xED00006570795465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t EditorialTrait.rawValue.getter(char a1)
{
  uint64_t result = 0x7053747369747261;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6565776F6C6C6168;
      break;
    case 2:
      uint64_t result = 0x796164696C6F68;
      break;
    case 3:
      uint64_t result = 0x77654E72616E756CLL;
      break;
    case 4:
      uint64_t result = 0x7261655977656ELL;
      break;
    case 5:
      uint64_t result = 0x6564697270;
      break;
    case 6:
      uint64_t result = 0x576D6172676F7270;
      break;
    case 7:
      uint64_t result = 0x6967736B6E616874;
      break;
    default:
      return result;
  }
  return result;
}

void *static EditorialTrait.allCases.getter()
{
  return &unk_27009B7C8;
}

uint64_t sub_24EF5DFE0(unsigned __int8 *a1, unsigned char *a2)
{
  unint64_t v2 = 0xEF746867696C746FLL;
  uint64_t v3 = 0x7053747369747261;
  uint64_t v4 = *a1;
  uint64_t v5 = 0x7053747369747261;
  unint64_t v6 = 0xEF746867696C746FLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6565776F6C6C6168;
      unint64_t v6 = 0xE90000000000006ELL;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x796164696C6F68;
      break;
    case 3:
      uint64_t v5 = 0x77654E72616E756CLL;
      uint64_t v7 = 1918985561;
      goto LABEL_9;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x7261655977656ELL;
      break;
    case 5:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6564697270;
      break;
    case 6:
      uint64_t v5 = 0x576D6172676F7270;
      unint64_t v6 = 0xEE0074756F6B726FLL;
      break;
    case 7:
      uint64_t v5 = 0x6967736B6E616874;
      uint64_t v7 = 1735289206;
LABEL_9:
      unint64_t v6 = v7 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  switch(*a2)
  {
    case 1:
      unint64_t v2 = 0xE90000000000006ELL;
      if (v5 == 0x6565776F6C6C6168) {
        goto LABEL_25;
      }
      goto LABEL_27;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x796164696C6F68) {
        goto LABEL_27;
      }
      goto LABEL_25;
    case 3:
      uint64_t v8 = 0x77654E72616E756CLL;
      uint64_t v9 = 1918985561;
      goto LABEL_24;
    case 4:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x7261655977656ELL) {
        goto LABEL_27;
      }
      goto LABEL_25;
    case 5:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x6564697270) {
        goto LABEL_27;
      }
      goto LABEL_25;
    case 6:
      uint64_t v3 = 0x576D6172676F7270;
      unint64_t v2 = 0xEE0074756F6B726FLL;
      goto LABEL_21;
    case 7:
      uint64_t v8 = 0x6967736B6E616874;
      uint64_t v9 = 1735289206;
LABEL_24:
      unint64_t v2 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      if (v5 == v8) {
        goto LABEL_25;
      }
      goto LABEL_27;
    default:
LABEL_21:
      if (v5 != v3) {
        goto LABEL_27;
      }
LABEL_25:
      if (v6 == v2) {
        char v10 = 1;
      }
      else {
LABEL_27:
      }
        char v10 = sub_24EF87A60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_24EF5E2B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s16FitnessFiltering14EditorialTraitO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_24EF5E2E4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEF746867696C746FLL;
  uint64_t v3 = 0x7053747369747261;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE90000000000006ELL;
      uint64_t v3 = 0x6565776F6C6C6168;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x796164696C6F68;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 3:
      strcpy((char *)a1, "lunarNewYear");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 4:
      *(void *)a1 = 0x7261655977656ELL;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 5:
      *(void *)a1 = 0x6564697270;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 6:
      strcpy((char *)a1, "programWorkout");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 7:
      strcpy((char *)a1, "thanksgiving");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

void sub_24EF5E428(void *a1@<X8>)
{
  *a1 = &unk_27009B7C8;
}

uint64_t sub_24EF5E438()
{
  return sub_24EF87700();
}

uint64_t sub_24EF5E498()
{
  return sub_24EF876F0();
}

uint64_t sub_24EF5E4E8()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF5E65C()
{
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF5E7B8()
{
  return sub_24EF87AD0();
}

uint64_t _s16FitnessFiltering14EditorialTraitO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24EF878D0();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

unint64_t sub_24EF5E978()
{
  unint64_t result = qword_269987170;
  if (!qword_269987170)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987178);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987170);
  }
  return result;
}

unint64_t sub_24EF5E9D8()
{
  unint64_t result = qword_269987180;
  if (!qword_269987180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987180);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EditorialTrait(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF5EAF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditorialTrait()
{
  return &type metadata for EditorialTrait;
}

unint64_t sub_24EF5EB30()
{
  unint64_t result = qword_269987188;
  if (!qword_269987188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987188);
  }
  return result;
}

uint64_t Trainer.artworks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Trainer.iconName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Trainer.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Trainer.informalName.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Trainer.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Trainer.init(artworks:iconName:identifier:informalName:name:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

uint64_t sub_24EF5EC68()
{
  uint64_t result = 0x736B726F77747261;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D614E6E6F6369;
      break;
    case 2:
      uint64_t result = 0x696669746E656469;
      break;
    case 3:
      uint64_t result = 0x6C616D726F666E69;
      break;
    case 4:
      uint64_t result = 1701667182;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF5ED14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF5FD14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF5ED3C(uint64_t a1)
{
  unint64_t v2 = sub_24EF5F028();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF5ED78(uint64_t a1)
{
  unint64_t v2 = sub_24EF5F028();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Trainer.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987190);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  v14[7] = v1[2];
  v14[8] = v8;
  uint64_t v10 = v1[3];
  v14[5] = v1[4];
  void v14[6] = v10;
  uint64_t v11 = v1[5];
  v14[3] = v1[6];
  v14[4] = v11;
  uint64_t v12 = v1[8];
  v14[1] = v1[7];
  v14[2] = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF5F028();
  sub_24EF87AF0();
  uint64_t v20 = v9;
  char v19 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  sub_24EF4C1CC(&qword_269985890, &qword_269985898);
  sub_24EF87A20();
  if (!v2)
  {
    char v18 = 1;
    sub_24EF879B0();
    char v17 = 2;
    sub_24EF879D0();
    char v16 = 3;
    sub_24EF879B0();
    char v15 = 4;
    sub_24EF879D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EF5F028()
{
  unint64_t result = qword_269987198;
  if (!qword_269987198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987198);
  }
  return result;
}

uint64_t Trainer.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699871A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF5F028();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  char v43 = 0;
  sub_24EF4C1CC(&qword_2699858A8, &qword_2699858B0);
  sub_24EF87970();
  uint64_t v9 = v44;
  char v42 = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24EF87900();
  uint64_t v38 = v11;
  uint64_t v35 = v10;
  uint64_t v37 = v9;
  char v41 = 2;
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_24EF87920();
  char v40 = 3;
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_24EF87900();
  uint64_t v36 = v13;
  uint64_t v32 = v14;
  uint64_t v33 = v15;
  char v39 = 4;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_24EF87920();
  uint64_t v17 = v37;
  uint64_t v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v31 = v16;
  v21(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v22 = v17;
  uint64_t v23 = v38;
  swift_bridgeObjectRetain();
  uint64_t v24 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v35;
  *a2 = v22;
  a2[1] = v25;
  uint64_t v27 = v33;
  uint64_t v26 = v34;
  a2[2] = v23;
  a2[3] = v26;
  uint64_t v28 = v32;
  a2[4] = v24;
  a2[5] = v28;
  uint64_t v29 = v31;
  a2[6] = v27;
  a2[7] = v29;
  a2[8] = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF5F4F4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Trainer.init(from:)(a1, a2);
}

uint64_t sub_24EF5F50C(void *a1)
{
  return Trainer.encode(to:)(a1);
}

uint64_t sub_24EF5F528(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 56) == *(void *)(a2 + 56) && *(void *)(a1 + 64) == *(void *)(a2 + 64)) {
    return 0;
  }
  else {
    return sub_24EF87A60();
  }
}

uint64_t sub_24EF5F558(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 64);
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_24EF87A60() ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_24EF5F598(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 56) == *(void *)(a2 + 56) && *(void *)(a1 + 64) == *(void *)(a2 + 64)) {
    char v3 = 1;
  }
  else {
    char v3 = sub_24EF87A60() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_24EF5F5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 64);
  if (v4 == v2 && v5 == v3) {
    return 0;
  }
  else {
    return sub_24EF87A60();
  }
}

uint64_t Trainer.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[6];
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(a1, v3);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t Trainer.hashValue.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v7 = *v0;
  long long v8 = *(_OWORD *)(v0 + 1);
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  long long v11 = *(_OWORD *)(v0 + 5);
  uint64_t v12 = v3;
  uint64_t v13 = v4;
  sub_24EF87A90();
  Trainer.hash(into:)(v6);
  return sub_24EF87AD0();
}

uint64_t sub_24EF5F7C0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v7 = *v0;
  long long v8 = *(_OWORD *)(v0 + 1);
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  long long v11 = *(_OWORD *)(v0 + 5);
  uint64_t v12 = v3;
  uint64_t v13 = v4;
  sub_24EF87A90();
  Trainer.hash(into:)(v6);
  return sub_24EF87AD0();
}

uint64_t sub_24EF5F830()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v7 = *v0;
  long long v8 = *(_OWORD *)(v0 + 1);
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  long long v11 = *(_OWORD *)(v0 + 5);
  uint64_t v12 = v3;
  uint64_t v13 = v4;
  sub_24EF87A90();
  Trainer.hash(into:)(v6);
  return sub_24EF87AD0();
}

uint64_t sub_24EF5F898()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s16FitnessFiltering7TrainerV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[1];
  uint64_t v24 = a1[5];
  uint64_t v25 = a1[2];
  uint64_t v2 = a1[7];
  uint64_t v20 = a1[6];
  uint64_t v21 = a1[4];
  uint64_t v3 = a1[8];
  uint64_t v4 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v5 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  if ((sub_24EF01DD8(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v18 = v2;
  uint64_t v19 = v9;
  if (!v25)
  {
    uint64_t v12 = v24;
    uint64_t v13 = v21;
    if (v6) {
      return 0;
    }
    goto LABEL_9;
  }
  if (!v6) {
    return 0;
  }
  uint64_t v12 = v24;
  uint64_t v13 = v21;
  if (v23 == v4 && v25 == v6 || (v14 = sub_24EF87A60(), uint64_t result = 0, (v14 & 1) != 0))
  {
LABEL_9:
    if (v22 != v5 || v13 != v7)
    {
      char v16 = sub_24EF87A60();
      uint64_t result = 0;
      if ((v16 & 1) == 0) {
        return result;
      }
    }
    if (v20)
    {
      if (v19)
      {
        if (v12 != v8 || v20 != v19)
        {
          char v17 = sub_24EF87A60();
          uint64_t result = 0;
          if ((v17 & 1) == 0) {
            return result;
          }
        }
LABEL_21:
        if (v18 == v10 && v3 == v11) {
          return 1;
        }
        return sub_24EF87A60();
      }
    }
    else if (!v19)
    {
      goto LABEL_21;
    }
    return 0;
  }
  return result;
}

unint64_t sub_24EF5FAA4()
{
  unint64_t result = qword_2699871A8;
  if (!qword_2699871A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699871A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Trainer()
{
  return &type metadata for Trainer;
}

unsigned char *storeEnumTagSinglePayload for Trainer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF5FBD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Trainer.CodingKeys()
{
  return &type metadata for Trainer.CodingKeys;
}

unint64_t sub_24EF5FC10()
{
  unint64_t result = qword_2699871B0;
  if (!qword_2699871B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699871B0);
  }
  return result;
}

unint64_t sub_24EF5FC68()
{
  unint64_t result = qword_2699871B8;
  if (!qword_2699871B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699871B8);
  }
  return result;
}

unint64_t sub_24EF5FCC0()
{
  unint64_t result = qword_2699871C0;
  if (!qword_2699871C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699871C0);
  }
  return result;
}

uint64_t sub_24EF5FD14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736B726F77747261 && a2 == 0xE800000000000000;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E6E6F6369 && a2 == 0xE800000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C616D726F666E69 && a2 == 0xEC000000656D614ELL || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t SortOrdering<>.fallbackSortValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_24EF5FF60@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24EF877C0();
    uint64_t v31 = (void *)sub_24EF86F40();
    sub_24EF86B10();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  sub_24EF86C50();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_24EEFD508(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

__n128 sub_24EF60154@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24EF877C0();
    uint64_t v23 = (void *)sub_24EF86F40();
    sub_24EF86B10();
  }
  sub_24EF86C50();
  sub_24EEF7878(v13, a9, &qword_269987220);
  uint64_t v24 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269987210) + 36));
  v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  *uint64_t v24 = v26;
  v24[1] = v27;
  __n128 result = v29;
  _OWORD v24[2] = v28;
  v24[3] = v29;
  return result;
}

uint64_t sub_24EF60314()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = *((unsigned __int8 *)v0 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987380);
  uint64_t v5 = sub_24EEFD4C4(&qword_269987388, &qword_269987380);
  return MEMORY[0x270EFF108](v1, v2, v3, v4, v5);
}

uint64_t FilterView.init(store:artworkViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a5 = sub_24EF60450;
  *(void *)(a5 + 8) = result;
  *(unsigned char *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = a3;
  *(void *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_24EF60418()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EF60450()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t FilterView.body.getter()
{
  return sub_24EF86C10();
}

uint64_t sub_24EF60B0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v82 = a4;
  uint64_t v6 = sub_24EF86D20();
  uint64_t v80 = *(void *)(v6 - 8);
  uint64_t v81 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v79 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871C8);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871E0);
  uint64_t v71 = (char *)v8;
  unint64_t v9 = sub_24EF47CA4();
  unint64_t v10 = sub_24EF47A68();
  unint64_t v11 = sub_24EF61520();
  unint64_t v12 = sub_24EF61574();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871F8);
  unint64_t v14 = sub_24EF615C8();
  *(void *)&long long v107 = v13;
  *((void *)&v107 + 1) = v14;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v76 = a3;
  uint64_t v77 = a2;
  *(void *)&long long v107 = a2;
  *((void *)&v107 + 1) = &type metadata for Modality;
  *(void *)long long v108 = v8;
  *(void *)&v108[8] = a3;
  uint64_t v16 = a3;
  *(void *)&v108[16] = &protocol witness table for Modality;
  *(void *)&long long v109 = &protocol witness table for Modality;
  *((void *)&v109 + 1) = v9;
  unint64_t v110 = v10;
  unint64_t v111 = v11;
  unint64_t v112 = v12;
  uint64_t v113 = OpaqueTypeConformance2;
  uint64_t v73 = type metadata accessor for FilterModalitySectionView();
  uint64_t v74 = sub_24EF86DD0();
  sub_24EF86DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987228);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987230);
  unint64_t v17 = sub_24EF22E44();
  unint64_t v18 = sub_24EF22E98();
  unint64_t v19 = sub_24EF22EEC();
  unint64_t v20 = sub_24EF22F40();
  *(void *)&long long v107 = a2;
  *((void *)&v107 + 1) = &type metadata for Trainer;
  *(void *)long long v108 = v71;
  *(void *)&v108[8] = v16;
  *(void *)&v108[16] = &protocol witness table for Trainer;
  *(void *)&long long v109 = &protocol witness table for Trainer;
  *((void *)&v109 + 1) = v17;
  unint64_t v110 = v18;
  unint64_t v111 = v19;
  unint64_t v112 = v20;
  uint64_t v113 = OpaqueTypeConformance2;
  type metadata accessor for FilterTrainerSectionView();
  sub_24EF86DD0();
  sub_24EF86DD0();
  uint64_t v21 = sub_24EF86DD0();
  uint64_t v22 = sub_24EEFD4C4(&qword_269987238, &qword_2699871C8);
  *(void *)&long long v107 = v75;
  *((void *)&v107 + 1) = MEMORY[0x263F8D310];
  *(void *)long long v108 = v21;
  *(void *)&v108[8] = v22;
  *(void *)&v108[16] = MEMORY[0x263F8D320];
  sub_24EF87420();
  unint64_t v23 = sub_24EF616E4();
  uint64_t v24 = sub_24EEFD4C4(&qword_269987268, &qword_2699871D8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v105 = v24;
  uint64_t v106 = WitnessTable;
  uint64_t v26 = swift_getWitnessTable();
  unint64_t v103 = v23;
  uint64_t v104 = v26;
  uint64_t v27 = swift_getWitnessTable();
  unint64_t v28 = sub_24EF617A8();
  uint64_t v29 = sub_24EEFD4C4(&qword_269987298, &qword_269987230);
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v101 = v29;
  uint64_t v102 = v30;
  uint64_t v31 = swift_getWitnessTable();
  unint64_t v99 = v28;
  uint64_t v100 = v31;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v97 = v27;
  uint64_t v98 = v32;
  uint64_t v96 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EF873E0();
  swift_getWitnessTable();
  uint64_t v33 = sub_24EF86B50();
  uint64_t v34 = swift_getWitnessTable();
  *(void *)&long long v107 = v33;
  *((void *)&v107 + 1) = v34;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  *(void *)&long long v107 = v33;
  *((void *)&v107 + 1) = v34;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v107 = OpaqueTypeMetadata2;
  *((void *)&v107 + 1) = v36;
  swift_getOpaqueTypeMetadata2();
  *(void *)&long long v107 = OpaqueTypeMetadata2;
  *((void *)&v107 + 1) = v36;
  swift_getOpaqueTypeConformance2();
  sub_24EF86BD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699872A0);
  v68[2] = sub_24EF86DD0();
  uint64_t v37 = sub_24EF86C00();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699872A8);
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = sub_24EEFD4C4(&qword_2699872B0, &qword_2699872A0);
  uint64_t v94 = v39;
  uint64_t v95 = v40;
  uint64_t v70 = swift_getWitnessTable();
  uint64_t v92 = v70;
  uint64_t v93 = MEMORY[0x263F1A240];
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = sub_24EEFD4C4(qword_2699872B8, &qword_2699872A8);
  *(void *)&long long v107 = v37;
  *((void *)&v107 + 1) = v38;
  v68[1] = v37;
  v68[4] = v41;
  v68[5] = v38;
  *(void *)long long v108 = v41;
  *(void *)&v108[8] = v42;
  uint64_t v43 = v42;
  v68[3] = v42;
  uint64_t v44 = swift_getOpaqueTypeMetadata2();
  uint64_t v75 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v69 = (char *)v68 - v45;
  *(void *)&long long v107 = v37;
  *((void *)&v107 + 1) = v38;
  *(void *)long long v108 = v41;
  *(void *)&v108[8] = v43;
  uint64_t v46 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v107 = v44;
  *((void *)&v107 + 1) = v46;
  uint64_t v72 = v46;
  uint64_t v73 = MEMORY[0x263F1B070];
  uint64_t v47 = swift_getOpaqueTypeMetadata2();
  uint64_t v74 = *(void *)(v47 - 8);
  uint64_t v48 = MEMORY[0x270FA5388](v47);
  double v50 = (char *)v68 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  uint64_t v71 = (char *)v68 - v51;
  uint64_t v52 = v77;
  uint64_t v53 = v78;
  long long v54 = *(_OWORD *)(v78 + 16);
  long long v107 = *(_OWORD *)v78;
  *(_OWORD *)long long v108 = v54;
  *(void *)&v108[16] = *(void *)(v78 + 32);
  uint64_t v55 = v76;
  uint64_t v56 = type metadata accessor for FilterView();
  sub_24EF6216C(v56);
  long long v90 = v86;
  char v91 = v87;
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = v52;
  *(void *)(v57 + 24) = v55;
  long long v58 = *(_OWORD *)(v53 + 16);
  *(_OWORD *)(v57 + 32) = *(_OWORD *)v53;
  *(_OWORD *)(v57 + 48) = v58;
  *(void *)(v57 + 64) = *(void *)(v53 + 32);
  sub_24EF6C170(v53);
  swift_checkMetadataState();
  sub_24EF87290();
  swift_release();
  sub_24EF634E0();
  long long v86 = v107;
  char v87 = v108[0];
  long long v88 = *(_OWORD *)&v108[8];
  long long v89 = v109;
  uint64_t v83 = v52;
  uint64_t v84 = v55;
  uint64_t v85 = v53;
  swift_checkMetadataState();
  char v59 = v69;
  sub_24EF87260();
  sub_24EF634E0();
  sub_24EF63934(v88);
  sub_24EF63934(v89);
  uint64_t v61 = v79;
  uint64_t v60 = v80;
  uint64_t v62 = v81;
  (*(void (**)(char *, void, uint64_t))(v80 + 104))(v79, *MEMORY[0x263F19698], v81);
  uint64_t v63 = v72;
  sub_24EF86A2C();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v59, v44);
  *(void *)&long long v107 = v44;
  *((void *)&v107 + 1) = v63;
  uint64_t v64 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = v71;
  sub_24EF7FD6C(v50, v47, v64);
  uint64_t v66 = *(void (**)(char *, uint64_t))(v74 + 8);
  v66(v50, v47);
  sub_24EF7FD6C(v65, v47, v64);
  return ((uint64_t (*)(char *, uint64_t))v66)(v65, v47);
}

uint64_t sub_24EF61514@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF60B0C(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_24EF61520()
{
  unint64_t result = qword_2699871E8;
  if (!qword_2699871E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699871E8);
  }
  return result;
}

unint64_t sub_24EF61574()
{
  unint64_t result = qword_2699871F0;
  if (!qword_2699871F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699871F0);
  }
  return result;
}

unint64_t sub_24EF615C8()
{
  unint64_t result = qword_269987200;
  if (!qword_269987200)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871F8);
    sub_24EF61644();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987200);
  }
  return result;
}

unint64_t sub_24EF61644()
{
  unint64_t result = qword_269987208;
  if (!qword_269987208)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987210);
    sub_24EEFD4C4(&qword_269987218, &qword_269987220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987208);
  }
  return result;
}

unint64_t sub_24EF616E4()
{
  unint64_t result = qword_269987240;
  if (!qword_269987240)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D0);
    sub_24EEFD4C4(&qword_269987248, &qword_269987250);
    sub_24EEFD4C4(&qword_269987258, &qword_269987260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987240);
  }
  return result;
}

unint64_t sub_24EF617A8()
{
  unint64_t result = qword_269987270;
  if (!qword_269987270)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987228);
    sub_24EEFD4C4(&qword_269987278, &qword_269987280);
    sub_24EEFD4C4(&qword_269987288, &qword_269987290);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987270);
  }
  return result;
}

uint64_t sub_24EF61868()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EF618AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_24EF618B4()
{
  return swift_retain();
}

uint64_t sub_24EF618BC()
{
  sub_24EF61900();
  return swift_release();
}

uint64_t sub_24EF61900()
{
  return swift_release();
}

uint64_t sub_24EF61908(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EF618B4();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  return a1;
}

uint64_t sub_24EF6196C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EF618B4();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24EF61900();
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24EF619E8(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24EF61900();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_24EF61A40(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24EF61A88(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for FilterView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24EF61AE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EF6216C(uint64_t a1)
{
  long long v3 = v1[1];
  long long v131 = *v1;
  long long v132 = v3;
  uint64_t v133 = *((void *)v1 + 4);
  long long v4 = v1[1];
  v135[0] = *v1;
  v135[1] = v4;
  uint64_t v136 = *((void *)v1 + 4);
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  sub_24EF0C628((uint64_t)&v120, (uint64_t)v134);
  sub_24EF0C628((uint64_t)v134, (uint64_t)v135);
  int v5 = sub_24EF0C6B8((uint64_t)v135);
  uint64_t v103 = a1;
  if ((v5 - 2) >= 2)
  {
    if (v5)
    {
      uint64_t v31 = (uint64_t *)nullsub_1(v135);
      uint64_t v101 = *v31;
      uint64_t v32 = v31[13];
      sub_24EF0CF1C(v31[22]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EF0CE70(v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EF0CF9C(v101);
    }
    else
    {
      uint64_t v31 = (uint64_t *)nullsub_1(v135);
      uint64_t v100 = *v31;
      sub_24EF0CF1C(v31[23]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EF0CE70(v100);
    }
    uint64_t v33 = v31[33];
    uint64_t v102 = swift_allocObject();
    uint64_t v35 = *(void *)(a1 + 16);
    uint64_t v34 = *(void *)(a1 + 24);
    *(void *)(v102 + 16) = v35;
    *(void *)(v102 + 24) = v34;
    uint64_t v36 = v34;
    uint64_t v97 = v34;
    *(void *)(v102 + 32) = v33;
    long long v37 = v132;
    *(_OWORD *)(v102 + 40) = v131;
    *(_OWORD *)(v102 + 56) = v37;
    *(void *)(v102 + 72) = v133;
    sub_24EF6C170((uint64_t)&v131);
    uint64_t v99 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871C8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D8);
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871E0);
    unint64_t v38 = sub_24EF47CA4();
    unint64_t v39 = sub_24EF47A68();
    unint64_t v40 = sub_24EF61520();
    unint64_t v41 = sub_24EF61574();
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871F8);
    unint64_t v43 = sub_24EF615C8();
    uint64_t v120 = v42;
    uint64_t v121 = (ValueMetadata *)v43;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v120 = v35;
    uint64_t v121 = &type metadata for Modality;
    uint64_t v122 = v95;
    uint64_t v123 = v36;
    uint64_t v124 = &protocol witness table for Modality;
    uint64_t v125 = &protocol witness table for Modality;
    unint64_t v126 = v38;
    unint64_t v127 = v39;
    unint64_t v128 = v40;
    unint64_t v129 = v41;
    uint64_t v130 = OpaqueTypeConformance2;
    type metadata accessor for FilterModalitySectionView();
    sub_24EF86DD0();
    sub_24EF86DD0();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987228);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987230);
    unint64_t v45 = sub_24EF22E44();
    unint64_t v46 = sub_24EF22E98();
    unint64_t v47 = sub_24EF22EEC();
    unint64_t v48 = sub_24EF22F40();
    uint64_t v120 = v35;
    uint64_t v121 = &type metadata for Trainer;
    uint64_t v122 = v95;
    uint64_t v123 = v97;
    uint64_t v124 = &protocol witness table for Trainer;
    uint64_t v125 = &protocol witness table for Trainer;
    unint64_t v126 = v45;
    unint64_t v127 = v46;
    unint64_t v128 = v47;
    unint64_t v129 = v48;
    uint64_t v130 = OpaqueTypeConformance2;
    type metadata accessor for FilterTrainerSectionView();
    sub_24EF86DD0();
    sub_24EF86DD0();
    uint64_t v49 = sub_24EF86DD0();
    uint64_t v50 = sub_24EEFD4C4(&qword_269987238, &qword_2699871C8);
    uint64_t v120 = v99;
    uint64_t v121 = (ValueMetadata *)MEMORY[0x263F8D310];
    uint64_t v122 = v49;
    uint64_t v123 = v50;
    uint64_t v124 = (_UNKNOWN **)MEMORY[0x263F8D320];
    sub_24EF87420();
    unint64_t v51 = sub_24EF616E4();
    v105[13] = sub_24EEFD4C4(&qword_269987268, &qword_2699871D8);
    v105[14] = swift_getWitnessTable();
    v105[11] = v51;
    v105[12] = swift_getWitnessTable();
    uint64_t WitnessTable = swift_getWitnessTable();
    unint64_t v53 = sub_24EF617A8();
    v105[9] = sub_24EEFD4C4(&qword_269987298, &qword_269987230);
    v105[10] = swift_getWitnessTable();
    v105[7] = v53;
    v105[8] = swift_getWitnessTable();
    v105[5] = WitnessTable;
    v105[6] = swift_getWitnessTable();
    v105[4] = swift_getWitnessTable();
    swift_getWitnessTable();
    sub_24EF873E0();
    swift_getWitnessTable();
    uint64_t v54 = sub_24EF86B50();
    uint64_t v55 = swift_getWitnessTable();
    uint64_t v120 = v54;
    uint64_t v121 = (ValueMetadata *)v55;
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    uint64_t v120 = v54;
    uint64_t v121 = (ValueMetadata *)v55;
    uint64_t v57 = swift_getOpaqueTypeConformance2();
    uint64_t v120 = OpaqueTypeMetadata2;
    uint64_t v121 = (ValueMetadata *)v57;
    swift_getOpaqueTypeMetadata2();
    uint64_t v120 = OpaqueTypeMetadata2;
    uint64_t v121 = (ValueMetadata *)v57;
    swift_getOpaqueTypeConformance2();
    uint64_t v120 = sub_24EF86BC0();
    uint64_t v121 = v58;
    uint64_t v59 = sub_24EF86BD0();
    uint64_t v60 = swift_getWitnessTable();
    sub_24EF7FD6C(&v120, v59, v60);
    swift_release();
    uint64_t v120 = v106;
    uint64_t v121 = v107;
    sub_24EF7FD6C(&v120, v59, v60);
    v105[0] = v105[2];
    v105[1] = v105[3];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699872A0);
    sub_24EEFD4C4(&qword_2699872B0, &qword_2699872A0);
    sub_24EF7FF6C((uint64_t)v105, v59);
    swift_release();
  }
  else
  {
    uint64_t v106 = sub_24EF872E0();
    LOWORD(v107) = 256;
    uint64_t v98 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871C8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D8);
    uint64_t v6 = *(void *)(a1 + 16);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871E0);
    uint64_t v8 = *(void *)(a1 + 24);
    unint64_t v9 = sub_24EF47CA4();
    unint64_t v10 = sub_24EF47A68();
    unint64_t v11 = sub_24EF61520();
    unint64_t v12 = sub_24EF61574();
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871F8);
    unint64_t v14 = sub_24EF615C8();
    uint64_t v120 = v13;
    uint64_t v121 = (ValueMetadata *)v14;
    uint64_t v15 = swift_getOpaqueTypeConformance2();
    uint64_t v120 = v6;
    uint64_t v121 = &type metadata for Modality;
    uint64_t v122 = v7;
    uint64_t v123 = v8;
    uint64_t v124 = &protocol witness table for Modality;
    uint64_t v125 = &protocol witness table for Modality;
    unint64_t v126 = v9;
    unint64_t v127 = v10;
    unint64_t v128 = v11;
    unint64_t v129 = v12;
    uint64_t v130 = v15;
    type metadata accessor for FilterModalitySectionView();
    sub_24EF86DD0();
    sub_24EF86DD0();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987228);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987230);
    unint64_t v16 = sub_24EF22E44();
    unint64_t v17 = sub_24EF22E98();
    unint64_t v18 = sub_24EF22EEC();
    unint64_t v19 = sub_24EF22F40();
    uint64_t v120 = v6;
    uint64_t v121 = &type metadata for Trainer;
    uint64_t v122 = v7;
    uint64_t v123 = v8;
    uint64_t v124 = &protocol witness table for Trainer;
    uint64_t v125 = &protocol witness table for Trainer;
    unint64_t v126 = v16;
    unint64_t v127 = v17;
    unint64_t v128 = v18;
    unint64_t v129 = v19;
    uint64_t v130 = v15;
    type metadata accessor for FilterTrainerSectionView();
    sub_24EF86DD0();
    sub_24EF86DD0();
    uint64_t v20 = sub_24EF86DD0();
    uint64_t v21 = sub_24EEFD4C4(&qword_269987238, &qword_2699871C8);
    uint64_t v120 = v98;
    uint64_t v121 = (ValueMetadata *)MEMORY[0x263F8D310];
    uint64_t v122 = v20;
    uint64_t v123 = v21;
    uint64_t v124 = (_UNKNOWN **)MEMORY[0x263F8D320];
    sub_24EF87420();
    unint64_t v22 = sub_24EF616E4();
    uint64_t v118 = sub_24EEFD4C4(&qword_269987268, &qword_2699871D8);
    uint64_t v119 = swift_getWitnessTable();
    unint64_t v116 = v22;
    uint64_t v117 = swift_getWitnessTable();
    uint64_t v23 = swift_getWitnessTable();
    unint64_t v24 = sub_24EF617A8();
    uint64_t v114 = sub_24EEFD4C4(&qword_269987298, &qword_269987230);
    uint64_t v115 = swift_getWitnessTable();
    unint64_t v112 = v24;
    uint64_t v113 = swift_getWitnessTable();
    uint64_t v110 = v23;
    uint64_t v111 = swift_getWitnessTable();
    uint64_t v109 = swift_getWitnessTable();
    swift_getWitnessTable();
    sub_24EF873E0();
    swift_getWitnessTable();
    uint64_t v25 = sub_24EF86B50();
    uint64_t v26 = swift_getWitnessTable();
    uint64_t v120 = v25;
    uint64_t v121 = (ValueMetadata *)v26;
    uint64_t v27 = swift_getOpaqueTypeMetadata2();
    uint64_t v120 = v25;
    uint64_t v121 = (ValueMetadata *)v26;
    uint64_t v28 = swift_getOpaqueTypeConformance2();
    uint64_t v120 = v27;
    uint64_t v121 = (ValueMetadata *)v28;
    swift_getOpaqueTypeMetadata2();
    uint64_t v120 = v27;
    uint64_t v121 = (ValueMetadata *)v28;
    swift_getOpaqueTypeConformance2();
    uint64_t v29 = sub_24EF86BD0();
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699872A0);
    swift_getWitnessTable();
    sub_24EEFD4C4(&qword_2699872B0, &qword_2699872A0);
    sub_24EF80064((uint64_t)&v106, v29, v30);
  }
  swift_release();
  uint64_t v106 = v120;
  long long v107 = v121;
  char v108 = v122;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871C8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D8);
  uint64_t v61 = *(void *)(v103 + 16);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871E0);
  uint64_t v104 = *(void *)(v103 + 24);
  unint64_t v63 = sub_24EF47CA4();
  unint64_t v64 = sub_24EF47A68();
  unint64_t v65 = sub_24EF61520();
  unint64_t v66 = sub_24EF61574();
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871F8);
  unint64_t v68 = sub_24EF615C8();
  uint64_t v120 = v67;
  uint64_t v121 = (ValueMetadata *)v68;
  uint64_t v69 = swift_getOpaqueTypeConformance2();
  uint64_t v120 = v61;
  uint64_t v121 = &type metadata for Modality;
  uint64_t v122 = v62;
  uint64_t v123 = v104;
  uint64_t v124 = &protocol witness table for Modality;
  uint64_t v125 = &protocol witness table for Modality;
  unint64_t v126 = v63;
  unint64_t v127 = v64;
  unint64_t v128 = v65;
  unint64_t v129 = v66;
  uint64_t v130 = v69;
  type metadata accessor for FilterModalitySectionView();
  sub_24EF86DD0();
  sub_24EF86DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987228);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987230);
  unint64_t v70 = sub_24EF22E44();
  unint64_t v71 = sub_24EF22E98();
  unint64_t v72 = sub_24EF22EEC();
  unint64_t v73 = sub_24EF22F40();
  uint64_t v120 = v61;
  uint64_t v121 = &type metadata for Trainer;
  uint64_t v122 = v62;
  uint64_t v123 = v104;
  uint64_t v124 = &protocol witness table for Trainer;
  uint64_t v125 = &protocol witness table for Trainer;
  unint64_t v126 = v70;
  unint64_t v127 = v71;
  unint64_t v128 = v72;
  unint64_t v129 = v73;
  uint64_t v130 = v69;
  type metadata accessor for FilterTrainerSectionView();
  sub_24EF86DD0();
  sub_24EF86DD0();
  uint64_t v74 = sub_24EF86DD0();
  uint64_t v75 = sub_24EEFD4C4(&qword_269987238, &qword_2699871C8);
  uint64_t v120 = v96;
  uint64_t v121 = (ValueMetadata *)MEMORY[0x263F8D310];
  uint64_t v122 = v74;
  uint64_t v123 = v75;
  uint64_t v124 = (_UNKNOWN **)MEMORY[0x263F8D320];
  sub_24EF87420();
  unint64_t v76 = sub_24EF616E4();
  uint64_t v77 = sub_24EEFD4C4(&qword_269987268, &qword_2699871D8);
  uint64_t v78 = swift_getWitnessTable();
  v105[26] = v77;
  v105[27] = v78;
  uint64_t v79 = swift_getWitnessTable();
  v105[24] = v76;
  v105[25] = v79;
  uint64_t v80 = swift_getWitnessTable();
  unint64_t v81 = sub_24EF617A8();
  uint64_t v82 = sub_24EEFD4C4(&qword_269987298, &qword_269987230);
  uint64_t v83 = swift_getWitnessTable();
  v105[22] = v82;
  v105[23] = v83;
  uint64_t v84 = swift_getWitnessTable();
  v105[20] = v81;
  v105[21] = v84;
  uint64_t v85 = swift_getWitnessTable();
  v105[18] = v80;
  v105[19] = v85;
  v105[17] = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EF873E0();
  swift_getWitnessTable();
  uint64_t v86 = sub_24EF86B50();
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v120 = v86;
  uint64_t v121 = (ValueMetadata *)v87;
  uint64_t v88 = swift_getOpaqueTypeMetadata2();
  uint64_t v120 = v86;
  uint64_t v121 = (ValueMetadata *)v87;
  uint64_t v89 = swift_getOpaqueTypeConformance2();
  uint64_t v120 = v88;
  uint64_t v121 = (ValueMetadata *)v89;
  swift_getOpaqueTypeMetadata2();
  uint64_t v120 = v88;
  uint64_t v121 = (ValueMetadata *)v89;
  swift_getOpaqueTypeConformance2();
  sub_24EF86BD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699872A0);
  uint64_t v90 = sub_24EF86DD0();
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v92 = sub_24EEFD4C4(&qword_2699872B0, &qword_2699872A0);
  v105[15] = v91;
  v105[16] = v92;
  uint64_t v93 = swift_getWitnessTable();
  sub_24EF7FD6C(&v106, v90, v93);
  return sub_24EF634E0();
}

uint64_t sub_24EF634B4()
{
  return objectdestroy_8Tm();
}

uint64_t sub_24EF634BC()
{
  return sub_24EF6B09C(v0 + 32);
}

uint64_t sub_24EF634E0()
{
  return swift_release();
}

uint64_t sub_24EF634EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v34 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987340);
  MEMORY[0x270FA5388](v7);
  uint64_t v31 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987348);
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v29 = (char *)&v26 - v12;
  uint64_t v13 = sub_24EF86E30();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987350);
  uint64_t v28 = *(void *)(v35 - 8);
  uint64_t v14 = v28;
  MEMORY[0x270FA5388](v35);
  unint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EF86E20();
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v44 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987358);
  sub_24EEFD4C4(&qword_269987360, &qword_269987358);
  uint64_t v27 = v16;
  sub_24EF86B80();
  sub_24EF86E00();
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v41 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987368);
  sub_24EEFD4C4(&qword_269987370, &qword_269987368);
  unint64_t v17 = v29;
  sub_24EF86B80();
  sub_24EF86E10();
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v38 = a1;
  unint64_t v18 = v30;
  sub_24EF86B80();
  unint64_t v19 = &v31[*(int *)(v7 + 48)];
  uint64_t v20 = &v31[*(int *)(v7 + 64)];
  (*(void (**)(void))(v14 + 16))();
  uint64_t v22 = v32;
  uint64_t v21 = v33;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  v23(v19, v17, v33);
  v23(v20, v18, v21);
  sub_24EF86DA0();
  unint64_t v24 = *(void (**)(char *, uint64_t))(v22 + 8);
  v24(v18, v21);
  v24(v17, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v27, v35);
}

uint64_t sub_24EF63928@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF634EC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24EF63934(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

__n128 sub_24EF63944@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  v27[0] = *(_OWORD *)a1;
  v27[1] = v3;
  uint64_t v28 = *(void *)(a1 + 32);
  type metadata accessor for FilterView();
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  sub_24EF0C628((uint64_t)&v20, (uint64_t)v26);
  sub_24EF0C628((uint64_t)v26, (uint64_t)v27);
  int v4 = sub_24EF0C6B8((uint64_t)v27);
  if ((v4 - 2) >= 2)
  {
    if (!v4)
    {
      int v5 = (uint64_t *)nullsub_1(v27);
      uint64_t v18 = *v5;
      uint64_t v6 = v5[23];
      swift_bridgeObjectRelease();
      uint64_t v7 = v18;
      swift_bridgeObjectRelease();
      sub_24EF0CF1C(v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v18) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    uint64_t v8 = (uint64_t *)nullsub_1(v27);
    uint64_t v17 = *v8;
    uint64_t v19 = v8[13];
    uint64_t v16 = v8[22];
    swift_bridgeObjectRelease();
    uint64_t v7 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24EF0CF1C(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24EF0CF9C(v17);
    if (v19)
    {
LABEL_6:
      swift_bridgeObjectRetain();
      sub_24EF0CE70(v7);
      swift_bridgeObjectRelease();
    }
  }
LABEL_7:
  uint64_t v9 = sub_24EF86D80();
  sub_24EF63D64((uint64_t)&v20);
  char v10 = v21;
  uint64_t v11 = v22;
  char v12 = v24;
  uint64_t v13 = v25;
  __n128 result = v20;
  long long v15 = v23;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(__n128 *)(a2 + 24) = result;
  *(unsigned char *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v11;
  *(_OWORD *)(a2 + 56) = v15;
  *(unsigned char *)(a2 + 72) = v12;
  *(void *)(a2 + 80) = v13;
  return result;
}

uint64_t sub_24EF63D64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = sub_24EF86A60();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_24EF87630();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24EF87610();
  MEMORY[0x270FA5388](v3 - 8);
  sub_24EF87600();
  sub_24EF875F0();
  type metadata accessor for FilterView();
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  sub_24EF875E0();
  swift_bridgeObjectRelease();
  sub_24EF875F0();
  sub_24EF87620();
  if (qword_269985870 != -1) {
    swift_once();
  }
  id v4 = (id)qword_269997D90;
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  sub_24EF87650();
  sub_24EEFD5C4();
  uint64_t v5 = sub_24EF870C0();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  sub_24EF86FF0();
  sub_24EF87000();
  swift_release();
  uint64_t v10 = sub_24EF870A0();
  uint64_t v30 = v11;
  uint64_t v31 = v10;
  uint64_t v29 = v12;
  char v14 = v13;
  swift_release();
  sub_24EEFD518(v5, v7, v9);
  swift_bridgeObjectRelease();
  sub_24EF87600();
  sub_24EF875F0();
  sub_24EF875D0();
  sub_24EF875F0();
  sub_24EF87620();
  id v15 = (id)qword_269997D90;
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  sub_24EF87650();
  uint64_t v16 = sub_24EF870C0();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  sub_24EF87050();
  uint64_t v21 = sub_24EF870A0();
  uint64_t v23 = v22;
  char v25 = v24;
  uint64_t v27 = v26;
  swift_release();
  sub_24EEFD518(v16, v18, v20);
  swift_bridgeObjectRelease();
  *(void *)a1 = v31;
  *(void *)(a1 + 8) = v29;
  *(unsigned char *)(a1 + 16) = v14 & 1;
  *(void *)(a1 + 24) = v30;
  *(void *)(a1 + 32) = v21;
  *(void *)(a1 + 40) = v23;
  *(unsigned char *)(a1 + 48) = v25 & 1;
  *(void *)(a1 + 56) = v27;
  sub_24EEFD508(v31, v29, v14 & 1);
  swift_bridgeObjectRetain();
  sub_24EEFD508(v21, v23, v25 & 1);
  swift_bridgeObjectRetain();
  sub_24EEFD518(v21, v23, v25 & 1);
  swift_bridgeObjectRelease();
  sub_24EEFD518(v31, v29, v14 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF6426C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24EF86A60();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24EF87630();
  MEMORY[0x270FA5388](v3 - 8);
  sub_24EF875C0();
  if (qword_269985870 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_269997D90;
  type metadata accessor for FilterView();
  id v5 = v4;
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  sub_24EF87650();
  sub_24EEFD5C4();
  uint64_t result = sub_24EF870C0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8 & 1;
  *(void *)(a1 + 24) = v9;
  return result;
}

uint64_t sub_24EF64444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987378);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24EF86B20();
  uint64_t v9 = sub_24EF86B30();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 48) = v11;
  *(void *)(v10 + 64) = *(void *)(a1 + 32);
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = a1;
  sub_24EF6C170(a1);
  return sub_24EF87370();
}

uint64_t sub_24EF64590(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = type metadata accessor for FilterAction();
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v9;
  uint64_t v12 = *(void *)(a1 + 32);
  type metadata accessor for FilterView();
  sub_24EF60314();
  *char v8 = a4;
  swift_storeEnumTagMultiPayload();
  sub_24EF87510();
  swift_release();
  return sub_24EF6C24C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FilterAction);
}

uint64_t sub_24EF6468C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24EF86A60();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24EF87630();
  MEMORY[0x270FA5388](v3 - 8);
  sub_24EF875C0();
  if (qword_269985870 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_269997D90;
  type metadata accessor for FilterView();
  id v5 = v4;
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  sub_24EF87650();
  sub_24EEFD5C4();
  uint64_t v6 = sub_24EF870C0();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  uint64_t v11 = sub_24EF87090();
  uint64_t v13 = v12;
  char v15 = v14;
  uint64_t v17 = v16;
  sub_24EEFD518(v6, v8, v10);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v11;
  *(void *)(a1 + 8) = v13;
  *(unsigned char *)(a1 + 16) = v15 & 1;
  *(void *)(a1 + 24) = v17;
  return result;
}

double sub_24EF648A8@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_24EF63944(*(void *)(v1 + 32), a1).n128_u64[0];
  return result;
}

uint64_t sub_24EF648B4()
{
  return sub_24EF64444(v0[4], v0[2], v0[3]);
}

uint64_t sub_24EF64904()
{
  return sub_24EF64444(v0[4], v0[2], v0[3]);
}

uint64_t sub_24EF64954()
{
  return objectdestroy_8Tm();
}

uint64_t sub_24EF6495C()
{
  return sub_24EF64590(v0 + 32, *(void *)(v0 + 16), *(void *)(v0 + 24), 0);
}

uint64_t sub_24EF64980@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF6468C(a1);
}

uint64_t sub_24EF6498C()
{
  return objectdestroy_8Tm();
}

uint64_t sub_24EF64994()
{
  return sub_24EF64590(v0 + 32, *(void *)(v0 + 16), *(void *)(v0 + 24), 1);
}

uint64_t sub_24EF649B8@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF6426C(a1);
}

uint64_t sub_24EF649C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v72 = a5;
  uint64_t v65 = a3;
  uint64_t v63 = a2;
  uint64_t v64 = a1;
  uint64_t v71 = a6;
  uint64_t v70 = sub_24EF86DF0();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  unint64_t v68 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_24EF86E60();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v62 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871C8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871E0);
  uint64_t v58 = v9;
  unint64_t v10 = sub_24EF47CA4();
  unint64_t v11 = sub_24EF47A68();
  unint64_t v12 = sub_24EF61520();
  unint64_t v13 = sub_24EF61574();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871F8);
  unint64_t v15 = sub_24EF615C8();
  uint64_t v89 = v14;
  uint64_t v90 = (ValueMetadata *)v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v61 = a4;
  uint64_t v89 = a4;
  uint64_t v90 = &type metadata for Modality;
  uint64_t v91 = v9;
  uint64_t v17 = v72;
  uint64_t v92 = v72;
  uint64_t v93 = &protocol witness table for Modality;
  uint64_t v94 = &protocol witness table for Modality;
  unint64_t v95 = v10;
  unint64_t v96 = v11;
  unint64_t v97 = v12;
  unint64_t v98 = v13;
  uint64_t v99 = OpaqueTypeConformance2;
  type metadata accessor for FilterModalitySectionView();
  uint64_t v59 = sub_24EF86DD0();
  sub_24EF86DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987228);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987230);
  unint64_t v18 = sub_24EF22E44();
  unint64_t v19 = sub_24EF22E98();
  unint64_t v20 = sub_24EF22EEC();
  unint64_t v21 = sub_24EF22F40();
  uint64_t v89 = a4;
  uint64_t v90 = &type metadata for Trainer;
  uint64_t v91 = v58;
  uint64_t v92 = v17;
  uint64_t v93 = &protocol witness table for Trainer;
  uint64_t v94 = &protocol witness table for Trainer;
  unint64_t v95 = v18;
  unint64_t v96 = v19;
  unint64_t v97 = v20;
  unint64_t v98 = v21;
  uint64_t v99 = OpaqueTypeConformance2;
  type metadata accessor for FilterTrainerSectionView();
  sub_24EF86DD0();
  sub_24EF86DD0();
  uint64_t v22 = sub_24EF86DD0();
  uint64_t v23 = sub_24EEFD4C4(&qword_269987238, &qword_2699871C8);
  uint64_t v89 = v60;
  uint64_t v90 = (ValueMetadata *)MEMORY[0x263F8D310];
  uint64_t v91 = v22;
  uint64_t v92 = v23;
  uint64_t v93 = (_UNKNOWN **)MEMORY[0x263F8D320];
  sub_24EF87420();
  unint64_t v24 = sub_24EF616E4();
  uint64_t v25 = sub_24EEFD4C4(&qword_269987268, &qword_2699871D8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v87 = v25;
  uint64_t v88 = WitnessTable;
  uint64_t v27 = swift_getWitnessTable();
  unint64_t v85 = v24;
  uint64_t v86 = v27;
  uint64_t v28 = swift_getWitnessTable();
  unint64_t v29 = sub_24EF617A8();
  uint64_t v30 = sub_24EEFD4C4(&qword_269987298, &qword_269987230);
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v83 = v30;
  uint64_t v84 = v31;
  uint64_t v32 = swift_getWitnessTable();
  unint64_t v81 = v29;
  uint64_t v82 = v32;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v79 = v28;
  uint64_t v80 = v33;
  uint64_t v78 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EF873E0();
  v56[1] = swift_getWitnessTable();
  uint64_t v34 = sub_24EF86B50();
  uint64_t v57 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)v56 - v35;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v89 = v34;
  uint64_t v90 = (ValueMetadata *)v37;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v60 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v40 = (char *)v56 - v39;
  uint64_t v89 = v34;
  uint64_t v90 = (ValueMetadata *)v37;
  uint64_t v41 = swift_getOpaqueTypeConformance2();
  uint64_t v89 = OpaqueTypeMetadata2;
  uint64_t v90 = (ValueMetadata *)v41;
  uint64_t v58 = v41;
  uint64_t v42 = swift_getOpaqueTypeMetadata2();
  uint64_t v59 = *(void *)(v42 - 8);
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  unint64_t v45 = (char *)v56 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v43);
  unint64_t v47 = (char *)v56 - v46;
  uint64_t v73 = v61;
  uint64_t v74 = v72;
  uint64_t v75 = v63;
  uint64_t v76 = v65;
  uint64_t v77 = v64;
  sub_24EF86F70();
  sub_24EF73D3C();
  uint64_t v48 = sub_24EF86FB0();
  uint64_t v49 = v62;
  sub_24EF86E50();
  MEMORY[0x253350270](v48, 0x4034000000000000, 0, v49, v34, v37);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v49, v67);
  uint64_t v50 = v34;
  unint64_t v51 = v68;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v50);
  sub_24EF86DE0();
  LOBYTE(v48) = sub_24EF86F70();
  sub_24EF86F60();
  sub_24EF86F60();
  if (sub_24EF86F60() != v48) {
    sub_24EF86F60();
  }
  uint64_t v52 = (ValueMetadata *)v58;
  sub_24EF871D0();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v51, v70);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v40, OpaqueTypeMetadata2);
  uint64_t v89 = OpaqueTypeMetadata2;
  uint64_t v90 = v52;
  uint64_t v53 = swift_getOpaqueTypeConformance2();
  sub_24EF7FD6C(v45, v42, v53);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v59 + 8);
  v54(v45, v42);
  sub_24EF7FD6C(v47, v42, v53);
  return ((uint64_t (*)(char *, uint64_t))v54)(v47, v42);
}

uint64_t sub_24EF65350()
{
  swift_bridgeObjectRelease();
  sub_24EF61900();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EF6539C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24EF649C4(a1, v2[4], (uint64_t)(v2 + 5), v2[2], v2[3], a2);
}

uint64_t sub_24EF653AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v29 = a2;
  uint64_t v28 = a1;
  uint64_t v31 = a6;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871C8);
  v24[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871E0);
  sub_24EF47CA4();
  sub_24EF47A68();
  sub_24EF61520();
  sub_24EF61574();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871F8);
  sub_24EF615C8();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v27 = a4;
  uint64_t v26 = a5;
  v24[1] = type metadata accessor for FilterModalitySectionView();
  _OWORD v24[2] = sub_24EF86DD0();
  sub_24EF86DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987228);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987230);
  uint64_t v53 = &protocol witness table for Trainer;
  unint64_t v54 = sub_24EF22E44();
  unint64_t v55 = sub_24EF22E98();
  unint64_t v56 = sub_24EF22EEC();
  unint64_t v57 = sub_24EF22F40();
  uint64_t v58 = OpaqueTypeConformance2;
  type metadata accessor for FilterTrainerSectionView();
  sub_24EF86DD0();
  sub_24EF86DD0();
  uint64_t v9 = sub_24EF86DD0();
  uint64_t v10 = sub_24EEFD4C4(&qword_269987238, &qword_2699871C8);
  uint64_t v48 = v25;
  uint64_t v49 = MEMORY[0x263F8D310];
  uint64_t v50 = v9;
  uint64_t v51 = v10;
  uint64_t v52 = MEMORY[0x263F8D320];
  sub_24EF87420();
  unint64_t v11 = sub_24EF616E4();
  uint64_t v46 = sub_24EEFD4C4(&qword_269987268, &qword_2699871D8);
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v44 = v11;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v12 = swift_getWitnessTable();
  unint64_t v13 = sub_24EF617A8();
  uint64_t v42 = sub_24EEFD4C4(&qword_269987298, &qword_269987230);
  uint64_t v43 = swift_getWitnessTable();
  unint64_t v40 = v13;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v38 = v12;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v37 = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v14 = sub_24EF873E0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  unint64_t v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)v24 - v19;
  sub_24EF86D90();
  uint64_t v32 = v27;
  uint64_t v33 = v26;
  uint64_t v34 = v28;
  uint64_t v35 = v29;
  uint64_t v36 = v30;
  sub_24EF873D0();
  uint64_t v21 = swift_getWitnessTable();
  sub_24EF7FD6C(v18, v14, v21);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22(v18, v14);
  sub_24EF7FD6C(v20, v14, v21);
  return ((uint64_t (*)(char *, uint64_t))v22)(v20, v14);
}

uint64_t sub_24EF6594C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, size_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v72 = a3;
  uint64_t v73 = a2;
  uint64_t KeyPath = a1;
  uint64_t v74 = a6;
  uint64_t v71 = sub_24EF86BB0();
  uint64_t v69 = *(void *)(v71 - 8);
  uint64_t v70 = *(void *)(v69 + 64);
  MEMORY[0x270FA5388](v71);
  unint64_t v68 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871C8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871E0);
  unint64_t v10 = sub_24EF47CA4();
  unint64_t v11 = sub_24EF47A68();
  unint64_t v12 = sub_24EF61520();
  unint64_t v13 = sub_24EF61574();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871F8);
  unint64_t v15 = sub_24EF615C8();
  size_t v87 = v14;
  uint64_t v88 = (ValueMetadata *)v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  size_t v56 = a4;
  size_t v87 = a4;
  uint64_t v88 = &type metadata for Modality;
  uint64_t v89 = v9;
  uint64_t v90 = a5;
  uint64_t v91 = &protocol witness table for Modality;
  uint64_t v92 = &protocol witness table for Modality;
  unint64_t v93 = v10;
  unint64_t v94 = v11;
  unint64_t v95 = v12;
  unint64_t v96 = v13;
  uint64_t v97 = OpaqueTypeConformance2;
  uint64_t v65 = type metadata accessor for FilterModalitySectionView();
  uint64_t v67 = sub_24EF86DD0();
  uint64_t v57 = sub_24EF86DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987228);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987230);
  unint64_t v17 = sub_24EF22E44();
  unint64_t v18 = sub_24EF22E98();
  unint64_t v19 = sub_24EF22EEC();
  unint64_t v20 = sub_24EF22F40();
  size_t v87 = a4;
  uint64_t v88 = &type metadata for Trainer;
  uint64_t v89 = v9;
  uint64_t v90 = a5;
  uint64_t v21 = a5;
  uint64_t v91 = &protocol witness table for Trainer;
  uint64_t v92 = &protocol witness table for Trainer;
  unint64_t v93 = v17;
  unint64_t v94 = v18;
  unint64_t v95 = v19;
  unint64_t v96 = v20;
  uint64_t v97 = OpaqueTypeConformance2;
  uint64_t v61 = type metadata accessor for FilterTrainerSectionView();
  uint64_t v62 = sub_24EF86DD0();
  uint64_t v63 = sub_24EF86DD0();
  uint64_t v22 = sub_24EF86DD0();
  uint64_t v60 = v22;
  uint64_t v64 = sub_24EEFD4C4(&qword_269987238, &qword_2699871C8);
  size_t v87 = v75;
  uint64_t v88 = (ValueMetadata *)MEMORY[0x263F8D310];
  uint64_t v89 = v22;
  uint64_t v90 = v64;
  uint64_t v91 = (_UNKNOWN **)MEMORY[0x263F8D320];
  uint64_t v23 = sub_24EF87420();
  uint64_t v66 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v59 = (char *)&v55 - v27;
  uint64_t v28 = swift_bridgeObjectRetain();
  size_t v29 = sub_24EF6B258(v28);
  swift_bridgeObjectRelease();
  size_t v87 = v29;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = v69;
  uint64_t v31 = v68;
  uint64_t v32 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v72, v71);
  unint64_t v33 = (*(unsigned __int8 *)(v30 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v34 = swift_allocObject();
  size_t v35 = v56;
  *(void *)(v34 + 16) = v56;
  *(void *)(v34 + 24) = v21;
  uint64_t v36 = v21;
  uint64_t v37 = (uint64_t)v73;
  long long v38 = v73[1];
  *(_OWORD *)(v34 + 32) = *v73;
  *(_OWORD *)(v34 + 48) = v38;
  *(void *)(v34 + 64) = *(void *)(v37 + 32);
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v34 + v33, v31, v32);
  uint64_t v39 = (void *)swift_allocObject();
  void v39[2] = v35;
  v39[3] = v36;
  v39[4] = sub_24EF6B6C0;
  v39[5] = v34;
  sub_24EF6C170(v37);
  unint64_t v40 = sub_24EF616E4();
  uint64_t v41 = sub_24EEFD4C4(&qword_269987268, &qword_2699871D8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v85 = v41;
  uint64_t v86 = WitnessTable;
  uint64_t v43 = swift_getWitnessTable();
  unint64_t v83 = v40;
  uint64_t v84 = v43;
  uint64_t v44 = swift_getWitnessTable();
  unint64_t v45 = sub_24EF617A8();
  uint64_t v46 = sub_24EEFD4C4(&qword_269987298, &qword_269987230);
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v81 = v46;
  uint64_t v82 = v47;
  uint64_t v48 = swift_getWitnessTable();
  unint64_t v79 = v45;
  uint64_t v80 = v48;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v77 = v44;
  uint64_t v78 = v49;
  uint64_t v54 = swift_getWitnessTable();
  sub_24EF87410();
  uint64_t v76 = v54;
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v51 = v59;
  sub_24EF7FD6C(v26, v23, v50);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v66 + 8);
  v52(v26, v23);
  sub_24EF7FD6C(v51, v23, v50);
  return ((uint64_t (*)(char *, uint64_t))v52)(v51, v23);
}

uint64_t sub_24EF66074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v68 = a6;
  uint64_t v69 = a5;
  uint64_t v78 = a4;
  uint64_t v87 = a2;
  uint64_t v88 = a1;
  uint64_t v89 = a7;
  uint64_t v10 = type metadata accessor for FilterSectionDescriptor();
  uint64_t v75 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v76 = v11;
  uint64_t v81 = (uint64_t)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871D8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871E0);
  unint64_t v13 = sub_24EF47CA4();
  unint64_t v14 = sub_24EF47A68();
  unint64_t v15 = sub_24EF61520();
  unint64_t v16 = sub_24EF61574();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699871F8);
  unint64_t v18 = sub_24EF615C8();
  *(void *)&long long v100 = v17;
  *((void *)&v100 + 1) = v18;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v100 = a5;
  *((void *)&v100 + 1) = &type metadata for Modality;
  *(void *)&long long v101 = v12;
  *((void *)&v101 + 1) = a6;
  uint64_t v102 = &protocol witness table for Modality;
  uint64_t v103 = &protocol witness table for Modality;
  unint64_t v104 = v13;
  unint64_t v105 = v14;
  unint64_t v106 = v15;
  unint64_t v107 = v16;
  uint64_t v108 = OpaqueTypeConformance2;
  uint64_t v80 = type metadata accessor for FilterModalitySectionView();
  uint64_t v82 = sub_24EF86DD0();
  uint64_t v20 = sub_24EF86DD0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987228);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987230);
  unint64_t v21 = sub_24EF22E44();
  unint64_t v22 = sub_24EF22E98();
  unint64_t v23 = sub_24EF22EEC();
  unint64_t v24 = sub_24EF22F40();
  uint64_t v25 = v69;
  *(void *)&long long v100 = v69;
  *((void *)&v100 + 1) = &type metadata for Trainer;
  uint64_t v86 = v12;
  *(void *)&long long v101 = v12;
  uint64_t v26 = v68;
  *((void *)&v101 + 1) = v68;
  uint64_t v102 = &protocol witness table for Trainer;
  uint64_t v103 = &protocol witness table for Trainer;
  unint64_t v104 = v21;
  unint64_t v105 = v22;
  unint64_t v106 = v23;
  unint64_t v107 = v24;
  unint64_t v79 = OpaqueTypeConformance2;
  uint64_t v108 = OpaqueTypeConformance2;
  uint64_t v71 = type metadata accessor for FilterTrainerSectionView();
  uint64_t v72 = sub_24EF86DD0();
  uint64_t v27 = sub_24EF86DD0();
  uint64_t v83 = v20;
  uint64_t v74 = v27;
  uint64_t v85 = sub_24EF86DD0();
  uint64_t v84 = *(void *)(v85 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v85);
  uint64_t v73 = (uint64_t)&v67 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v77 = (char *)&v67 - v30;
  uint64_t v31 = sub_24EF86A60();
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v32 = sub_24EF87630();
  MEMORY[0x270FA5388](v32 - 8);
  sub_24EF875C0();
  if (qword_269985870 != -1) {
    swift_once();
  }
  unint64_t v33 = (void *)qword_269997D90;
  long long v34 = *(_OWORD *)(a3 + 16);
  long long v100 = *(_OWORD *)a3;
  long long v101 = v34;
  uint64_t v102 = *(_UNKNOWN ***)(a3 + 32);
  uint64_t v70 = type metadata accessor for FilterView();
  id v35 = v33;
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  uint64_t v67 = sub_24EF87650();
  uint64_t v37 = v36;
  long long v38 = *(_OWORD *)(a3 + 16);
  long long v100 = *(_OWORD *)a3;
  long long v101 = v38;
  uint64_t v102 = *(_UNKNOWN ***)(a3 + 32);
  sub_24EF86BA0();
  double v40 = v39;
  uint64_t v41 = v87;
  uint64_t v42 = v81;
  sub_24EF33BE4(v87, v81);
  unint64_t v43 = (*(unsigned __int8 *)(v75 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
  unint64_t v44 = (v76 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v25;
  *(void *)(v45 + 24) = v26;
  long long v46 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v45 + 32) = *(_OWORD *)a3;
  *(_OWORD *)(v45 + 48) = v46;
  *(void *)(v45 + 64) = *(void *)(a3 + 32);
  sub_24EF6B984(v42, v45 + v43);
  uint64_t v47 = v88;
  *(void *)(v45 + v44) = v88;
  uint64_t v48 = (uint64_t *)(v45 + ((v44 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v48 = v67;
  v48[1] = v37;
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v25;
  *(void *)(v49 + 24) = v26;
  long long v50 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v49 + 32) = *(_OWORD *)a3;
  *(_OWORD *)(v49 + 48) = v50;
  *(void *)(v49 + 64) = *(void *)(a3 + 32);
  *(void *)(v49 + 72) = v47;
  sub_24EF6C170(a3);
  sub_24EF6C170(a3);
  uint64_t v51 = v73;
  sub_24EF6734C(v41, (uint64_t)sub_24EF6B9E8, v45, (uint64_t)sub_24EF6BAB4, v49, v70, v86, v79, v73, v40);
  swift_release();
  swift_release();
  unint64_t v52 = sub_24EF616E4();
  uint64_t v53 = sub_24EEFD4C4(&qword_269987268, &qword_2699871D8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v98 = v53;
  uint64_t v99 = WitnessTable;
  uint64_t v55 = swift_getWitnessTable();
  unint64_t v96 = v52;
  uint64_t v97 = v55;
  uint64_t v56 = swift_getWitnessTable();
  unint64_t v57 = sub_24EF617A8();
  uint64_t v58 = sub_24EEFD4C4(&qword_269987298, &qword_269987230);
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v94 = v58;
  uint64_t v95 = v59;
  uint64_t v60 = swift_getWitnessTable();
  unint64_t v92 = v57;
  uint64_t v93 = v60;
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v90 = v56;
  uint64_t v91 = v61;
  uint64_t v62 = v85;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v64 = v77;
  sub_24EF7FD6C(v51, v62, v63);
  uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  v65(v51, v62);
  sub_24EF7FD6C(v64, v62, v63);
  return ((uint64_t (*)(char *, uint64_t))v65)(v64, v62);
}

uint64_t sub_24EF668D0@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v68 = a7;
  uint64_t v66 = a6;
  uint64_t v61 = a5;
  uint64_t v63 = a4;
  uint64_t v71 = a8;
  uint64_t v11 = sub_24EF87590();
  uint64_t v72 = *(void *)(v11 - 8);
  uint64_t v73 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v70 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24EF87530();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v69 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_24EF86A30();
  uint64_t v64 = *(void *)(v62 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v62);
  uint64_t v58 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v59 = (char *)&v58 - v17;
  uint64_t v18 = sub_24EF87550();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985A88);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v65 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D60);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v60 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v58 - v26;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699871F8);
  MEMORY[0x270FA5388](v67);
  uint64_t v29 = (char *)&v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v30 = a1[1];
  long long v74 = *a1;
  long long v75 = v30;
  uint64_t v76 = *((void *)a1 + 4);
  uint64_t v31 = a2 + *(int *)(type metadata accessor for FilterSectionDescriptor() + 20);
  sub_24EEF7878(v31, (uint64_t)v27, &qword_269985D60);
  uint64_t v32 = a3;
  BOOL v33 = a3 == 0;
  if (a3) {
    uint64_t v34 = 0;
  }
  else {
    uint64_t v34 = v63;
  }
  if (v33) {
    uint64_t v35 = v61;
  }
  else {
    uint64_t v35 = 0;
  }
  uint64_t v36 = type metadata accessor for FilterView();
  uint64_t v68 = v29;
  uint64_t v37 = v34;
  long long v38 = v20;
  uint64_t v39 = v62;
  sub_24EF66F40((uint64_t)v27, v37, v35, v36, (uint64_t)v29);
  sub_24EEFD568((uint64_t)v27, &qword_269985D60);
  swift_bridgeObjectRetain();
  uint64_t v66 = v38;
  uint64_t v40 = (uint64_t)v60;
  sub_24EF87540();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985B10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24EF88500;
  *(void *)(inited + 32) = 1701667182;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v42 = v31;
  uint64_t v43 = v64;
  sub_24EEF7878(v42, v40, &qword_269985D60);
  int v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v40, 1, v39);
  uint64_t v45 = MEMORY[0x263F8D310];
  if (v44 == 1)
  {
    long long v46 = (uint64_t *)(inited + 48);
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
LABEL_11:
    *long long v46 = 0;
    unint64_t v50 = 0xE000000000000000;
    goto LABEL_12;
  }
  uint64_t v47 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v59, v40, v39);
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v58, v47, v39);
  uint64_t v48 = sub_24EF87660();
  unint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v47, v39);
  long long v46 = (uint64_t *)(inited + 48);
  *(void *)(inited + 72) = v45;
  if (!v50) {
    goto LABEL_11;
  }
  *long long v46 = v48;
LABEL_12:
  *(void *)(inited + 56) = v50;
  strcpy((char *)(inited + 80), "impressionType");
  *(unsigned char *)(inited + 95) = -18;
  *(void *)(inited + 96) = 0x666C656873;
  *(void *)(inited + 104) = 0xE500000000000000;
  *(void *)(inited + 120) = v45;
  *(void *)(inited + 128) = 0x6973736572706D69;
  uint64_t v51 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 136) = 0xEF7865646E496E6FLL;
  *(void *)(inited + 144) = v32;
  *(void *)(inited + 168) = v51;
  *(void *)(inited + 176) = 0x657079546469;
  *(void *)(inited + 216) = v45;
  *(void *)(inited + 184) = 0xE600000000000000;
  *(void *)(inited + 192) = 0x64695F737469;
  *(void *)(inited + 200) = 0xE600000000000000;
  sub_24EF72538(inited);
  sub_24EF87520();
  uint64_t v52 = MEMORY[0x263F8EE78];
  sub_24EF78EE8(MEMORY[0x263F8EE78]);
  sub_24EF78EE8(v52);
  uint64_t v53 = (uint64_t)v65;
  sub_24EF87560();
  uint64_t v54 = sub_24EF87570();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
  uint64_t v55 = v70;
  sub_24EF87580();
  sub_24EF615C8();
  uint64_t v56 = (uint64_t)v68;
  sub_24EF870E0();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v55, v73);
  sub_24EEFD568(v53, &qword_269985A88);
  return sub_24EEFD568(v56, &qword_2699871F8);
}

uint64_t sub_24EF66F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v34 = a5;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987220);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987210);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699871F8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = *(_OWORD *)(v6 + 16);
  v35[0] = *(_OWORD *)v6;
  v35[1] = v20;
  uint64_t v36 = *(void *)(v6 + 32);
  *(void *)uint64_t v13 = sub_24EF86D30();
  *((void *)v13 + 1) = 0;
  unsigned char v13[16] = 1;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987438);
  sub_24EF6A87C(a1, a2, a3, (uint64_t)v35, *(void *)(a4 + 16), *(void *)(a4 + 24), (uint64_t)&v13[*(int *)(v21 + 44)]);
  sub_24EF87460();
  sub_24EF60154(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1);
  sub_24EEFD568((uint64_t)v13, &qword_269987220);
  LOBYTE(v13) = sub_24EF86FB0();
  char v22 = sub_24EF86FD0();
  sub_24EF86FD0();
  if (sub_24EF86FD0() != v13) {
    char v22 = sub_24EF86FD0();
  }
  sub_24EF86B40();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_24EEF7878((uint64_t)v16, (uint64_t)v19, &qword_269987210);
  uint64_t v31 = &v19[*(int *)(v17 + 36)];
  *uint64_t v31 = v22;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_24EEFD568((uint64_t)v16, &qword_269987210);
  return sub_24EF22C1C((uint64_t)v19, v34, &qword_2699871F8);
}

uint64_t sub_24EF671D0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v21 = a7;
  uint64_t v23 = a3;
  uint64_t v24 = a5;
  uint64_t v22 = type metadata accessor for FilterAction();
  MEMORY[0x270FA5388](v22);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  int v20 = *a2;
  LOBYTE(a2) = *(unsigned char *)(a1 + 40);
  long long v17 = a4[1];
  long long v25 = *a4;
  long long v26 = v17;
  uint64_t v27 = *((void *)a4 + 4);
  type metadata accessor for FilterView();
  sub_24EF60314();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985C68);
  *(void *)uint64_t v11 = v13;
  *((void *)v11 + 1) = v12;
  *((void *)v11 + 2) = v14;
  *((void *)v11 + 3) = v15;
  *((void *)v11 + 4) = v16;
  v11[40] = (char)a2;
  v11[41] = v20;
  sub_24EEF7798(v13, v12, v14, v15, v16, a2);
  MEMORY[0x25334FB70](v23, v24);
  swift_storeEnumTagMultiPayload();
  sub_24EF87510();
  swift_release();
  return sub_24EF6C24C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FilterAction);
}

uint64_t sub_24EF6734C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>)
{
  *(void *)&long long v316 = a5;
  *(void *)&long long v312 = a4;
  *(void *)&long long v315 = a3;
  *(void *)&long long v313 = a2;
  uint64_t v318 = a1;
  uint64_t v324 = a9;
  uint64_t v299 = type metadata accessor for FilterLayout();
  MEMORY[0x270FA5388](v299);
  v297 = (char *)v296 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24EF86A60();
  MEMORY[0x270FA5388](v15 - 8);
  v300 = (char *)v296 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = sub_24EF2EB60();
  unint64_t v18 = sub_24EF2EA64();
  unint64_t v19 = sub_24EF6BAC4();
  unint64_t v20 = sub_24EF6BB18();
  *(void *)v461 = &type metadata for Duration;
  *(void *)&v461[8] = a7;
  *(void *)&v461[16] = &protocol witness table for Duration;
  *(void *)&v461[24] = &protocol witness table for Duration;
  unint64_t v298 = v17;
  *(void *)&v461[32] = v17;
  *(void *)&v461[40] = v18;
  v296[26] = v19;
  v296[27] = v18;
  *(void *)&v461[48] = v19;
  uint64_t v462 = v20;
  v296[25] = v20;
  unint64_t v463 = a8;
  uint64_t v21 = type metadata accessor for FilterDurationSectionView();
  uint64_t v306 = *(void *)(v21 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  v301 = (void *)((char *)v296 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v22);
  v303 = (char *)v296 - v24;
  unint64_t v25 = sub_24EF6BB6C();
  unint64_t v26 = sub_24EF6BBC0();
  unint64_t v27 = sub_24EF6BC14();
  unint64_t v28 = sub_24EF6BC68();
  *(void *)v461 = &type metadata for BodyFocus;
  *(void *)&v461[8] = a7;
  *(void *)&v461[16] = &protocol witness table for BodyFocus;
  *(void *)&v461[24] = &protocol witness table for BodyFocus;
  v296[23] = v26;
  v296[24] = v25;
  *(void *)&v461[32] = v25;
  *(void *)&v461[40] = v26;
  v296[21] = v28;
  v296[22] = v27;
  *(void *)&v461[48] = v27;
  uint64_t v462 = v28;
  unint64_t v463 = a8;
  uint64_t v322 = type metadata accessor for FilterStandardSectionView();
  uint64_t v325 = v21;
  uint64_t v29 = sub_24EF86DD0();
  uint64_t v305 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v304 = (uint64_t)v296 - v30;
  unint64_t v31 = sub_24EF6BCBC();
  unint64_t v32 = sub_24EF6BD10();
  unint64_t v33 = sub_24EF6BD64();
  unint64_t v34 = sub_24EF6BDB8();
  *(void *)v461 = &type metadata for Equipment;
  *(void *)&v461[8] = a7;
  *(void *)&v461[16] = &protocol witness table for Equipment;
  *(void *)&v461[24] = &protocol witness table for Equipment;
  v296[19] = v32;
  v296[20] = v31;
  *(void *)&v461[32] = v31;
  *(void *)&v461[40] = v32;
  v296[17] = v34;
  v296[18] = v33;
  *(void *)&v461[48] = v33;
  uint64_t v462 = v34;
  unint64_t v463 = a8;
  uint64_t v35 = type metadata accessor for FilterStandardSectionView();
  uint64_t v36 = *(void *)(a6 + 16);
  uint64_t v37 = *(void *)(a6 + 24);
  uint64_t v302 = a6;
  uint64_t v309 = v37;
  unint64_t v38 = sub_24EF47CA4();
  unint64_t v39 = sub_24EF47A68();
  unint64_t v40 = sub_24EF61520();
  unint64_t v41 = sub_24EF61574();
  *(void *)v461 = v36;
  *(void *)&v461[8] = &type metadata for Modality;
  *(void *)&v461[16] = a7;
  *(void *)&v461[24] = v37;
  *(void *)&v461[32] = &protocol witness table for Modality;
  *(void *)&v461[40] = &protocol witness table for Modality;
  v296[15] = v39;
  v296[16] = v38;
  *(void *)&v461[48] = v38;
  uint64_t v462 = v39;
  v296[13] = v41;
  v296[14] = v40;
  unint64_t v463 = v40;
  unint64_t v464 = v41;
  unint64_t v465 = a8;
  uint64_t v42 = type metadata accessor for FilterModalitySectionView();
  uint64_t v334 = v35;
  uint64_t v332 = v42;
  uint64_t v43 = sub_24EF86DD0();
  uint64_t v323 = v29;
  uint64_t v333 = v43;
  uint64_t v44 = sub_24EF86DD0();
  uint64_t v307 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v308 = (uint64_t)v296 - v45;
  unint64_t v46 = sub_24EF6BE0C();
  unint64_t v47 = sub_24EF6BE60();
  unint64_t v48 = sub_24EF6BEB4();
  unint64_t v49 = sub_24EF6BF08();
  *(void *)v461 = &type metadata for MusicGenre;
  *(void *)&v461[8] = a7;
  *(void *)&v461[16] = &protocol witness table for MusicGenre;
  *(void *)&v461[24] = &protocol witness table for MusicGenre;
  v296[11] = v47;
  v296[12] = v46;
  *(void *)&v461[32] = v46;
  *(void *)&v461[40] = v47;
  v296[9] = v49;
  v296[10] = v48;
  *(void *)&v461[48] = v48;
  uint64_t v462 = v49;
  unint64_t v463 = a8;
  uint64_t v50 = type metadata accessor for FilterStandardSectionView();
  unint64_t v51 = sub_24EF6BF5C();
  unint64_t v52 = sub_24EF6BFB0();
  unint64_t v53 = sub_24EF6C004();
  unint64_t v54 = sub_24EF6C058();
  *(void *)v461 = &type metadata for SkillLevel;
  *(void *)&v461[8] = a7;
  *(void *)&v461[16] = &protocol witness table for SkillLevel;
  *(void *)&v461[24] = &protocol witness table for SkillLevel;
  v296[8] = v51;
  *(void *)&v461[32] = v51;
  *(void *)&v461[40] = v52;
  v296[6] = v52;
  v296[4] = v53;
  *(void *)&v461[48] = v53;
  uint64_t v462 = v54;
  v296[2] = v54;
  unint64_t v463 = a8;
  uint64_t v55 = type metadata accessor for FilterStandardSectionView();
  uint64_t v331 = v50;
  uint64_t v329 = v55;
  uint64_t v56 = sub_24EF86DD0();
  unint64_t v57 = sub_24EF5C4F0();
  unint64_t v58 = sub_24EF5BEEC();
  unint64_t v59 = sub_24EF6C0AC();
  unint64_t v60 = sub_24EF6C100();
  *(void *)v461 = &type metadata for Theme;
  *(void *)&v461[8] = a7;
  *(void *)&v461[16] = &protocol witness table for Theme;
  *(void *)&v461[24] = &protocol witness table for Theme;
  v296[7] = v57;
  *(void *)&v461[32] = v57;
  *(void *)&v461[40] = v58;
  v296[5] = v58;
  v296[3] = v59;
  *(void *)&v461[48] = v59;
  uint64_t v462 = v60;
  v296[1] = v60;
  unint64_t v463 = a8;
  uint64_t v61 = type metadata accessor for FilterThemeSectionView();
  unint64_t v62 = sub_24EF22E44();
  unint64_t v63 = sub_24EF22E98();
  unint64_t v64 = sub_24EF22EEC();
  unint64_t v65 = sub_24EF22F40();
  *(void *)&long long v311 = v36;
  *(void *)v461 = v36;
  *(void *)&v461[8] = &type metadata for Trainer;
  *(void *)&long long v314 = a7;
  *(void *)&v461[16] = a7;
  unint64_t v66 = a8;
  uint64_t v67 = v309;
  uint64_t v68 = v310;
  *(void *)&v461[24] = v309;
  *(void *)&v461[32] = &protocol witness table for Trainer;
  *(void *)&v461[40] = &protocol witness table for Trainer;
  v296[0] = v62;
  *(void *)&v461[48] = v62;
  uint64_t v462 = v63;
  unint64_t v463 = v64;
  unint64_t v464 = v65;
  unint64_t v465 = v66;
  uint64_t v69 = type metadata accessor for FilterTrainerSectionView();
  uint64_t v328 = v61;
  uint64_t v327 = v69;
  uint64_t v70 = sub_24EF86DD0();
  uint64_t v330 = v56;
  uint64_t v326 = v70;
  uint64_t v71 = sub_24EF86DD0();
  uint64_t v321 = v44;
  uint64_t v72 = sub_24EF86DD0();
  uint64_t v319 = *(void *)(v72 - 8);
  uint64_t v320 = v72;
  MEMORY[0x270FA5388](v72);
  long long v74 = (char *)v296 - v73;
  long long v75 = *(_OWORD *)(v68 + 16);
  long long v466 = *(_OWORD *)v68;
  long long v467 = v75;
  uint64_t v468 = *(void *)(v68 + 32);
  uint64_t v76 = v318 + *(int *)(type metadata accessor for FilterSectionDescriptor() + 24);
  uint64_t v77 = *(void *)v76;
  uint64_t v78 = *(unsigned __int8 *)(v76 + 8);
  v317 = v74;
  uint64_t v318 = v71;
  switch(v78)
  {
    case 1:
      long long v102 = *(_OWORD *)(v68 + 16);
      *(_OWORD *)v461 = *(_OWORD *)v68;
      *(_OWORD *)&v461[16] = v102;
      *(void *)&v461[32] = *(void *)(v68 + 32);
      uint64_t v103 = v77;
      sub_24EF3DB04(v77, 1u);
      uint64_t v104 = v315;
      swift_retain();
      sub_24EF60314();
      swift_getKeyPath();
      uint64_t v105 = (uint64_t)v300;
      sub_24EF87500();
      swift_release();
      swift_release();
      uint64_t v106 = swift_allocObject();
      uint64_t v107 = v314;
      *(void *)(v106 + 16) = v311;
      *(void *)(v106 + 24) = v107;
      *(void *)(v106 + 32) = v67;
      *(void *)(v106 + 40) = v66;
      long long v108 = v467;
      *(_OWORD *)(v106 + 48) = v466;
      *(_OWORD *)(v106 + 64) = v108;
      uint64_t v109 = v312;
      *(void *)(v106 + 80) = v468;
      *(void *)(v106 + 88) = v109;
      *(void *)(v106 + 96) = v316;
      uint64_t v110 = v301;
      FilterDurationSectionView.init(headerViewBuilder:locale:options:onOptionSelected:)(v313, v104, v105, v103, (uint64_t)sub_24EF6C44C, v106, v301);
      uint64_t v111 = v325;
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v113 = v303;
      sub_24EF7FD6C(v110, v111, WitnessTable);
      sub_24EF6C170((uint64_t)&v466);
      uint64_t v114 = v306 + 8;
      uint64_t v115 = *(void (**)(void *, uint64_t))(v306 + 8);
      swift_retain();
      v115(v110, v111);
      unint64_t v116 = v115;
      *(void *)&long long v315 = v115;
      uint64_t v306 = v114;
      sub_24EF7FD6C(v113, v111, WitnessTable);
      uint64_t v117 = v322;
      uint64_t v118 = swift_getWitnessTable();
      uint64_t v119 = v304;
      sub_24EF80064((uint64_t)v110, v117, v111);
      v116(v110, v111);
      uint64_t v357 = v118;
      uint64_t v358 = WitnessTable;
      uint64_t v120 = v323;
      uint64_t v121 = swift_getWitnessTable();
      uint64_t v122 = swift_getWitnessTable();
      uint64_t v123 = swift_getWitnessTable();
      uint64_t v355 = v122;
      uint64_t v356 = v123;
      uint64_t v124 = swift_getWitnessTable();
      sub_24EF7FF6C(v119, v120);
      (*(void (**)(uint64_t, uint64_t))(v305 + 8))(v119, v120);
      uint64_t v353 = v121;
      uint64_t v354 = v124;
      uint64_t v125 = v321;
      swift_getWitnessTable();
      uint64_t v126 = swift_getWitnessTable();
      uint64_t v127 = swift_getWitnessTable();
      uint64_t v351 = v126;
      uint64_t v352 = v127;
      uint64_t v128 = swift_getWitnessTable();
      uint64_t v129 = swift_getWitnessTable();
      uint64_t v130 = swift_getWitnessTable();
      uint64_t v349 = v129;
      uint64_t v350 = v130;
      uint64_t v131 = swift_getWitnessTable();
      uint64_t v347 = v128;
      uint64_t v348 = v131;
      swift_getWitnessTable();
      long long v101 = v317;
      uint64_t v132 = v308;
      sub_24EF7FF6C(v308, v125);
      (*(void (**)(uint64_t, uint64_t))(v307 + 8))(v132, v125);
      ((void (*)(char *, uint64_t))v315)(v303, v111);
      goto LABEL_15;
    case 2:
      uint64_t v133 = v77;
      uint64_t v134 = swift_allocObject();
      uint64_t v135 = v314;
      *(void *)(v134 + 16) = v311;
      *(void *)(v134 + 24) = v135;
      *(void *)(v134 + 32) = v67;
      *(void *)(v134 + 40) = v66;
      long long v136 = *(_OWORD *)(v68 + 16);
      *(_OWORD *)(v134 + 48) = *(_OWORD *)v68;
      *(_OWORD *)(v134 + 64) = v136;
      uint64_t v137 = v312;
      *(void *)(v134 + 80) = *(void *)(v68 + 32);
      *(void *)(v134 + 88) = v137;
      *(void *)(v134 + 96) = v316;
      FilterStandardSectionView.init(containerWidth:headerViewBuilder:options:onOptionSelected:)(v313, v315, v133, (uint64_t)sub_24EF6C3F4, v134, (uint64_t)v461, a10);
      uint64_t v441 = *(void *)v461;
      uint64_t v442 = *(void *)&v461[8];
      long long v313 = *(_OWORD *)&v461[16];
      long long v443 = *(_OWORD *)&v461[16];
      long long v444 = *(_OWORD *)&v461[32];
      *(void *)&long long v314 = &protocol conformance descriptor for FilterStandardSectionView<A, B>;
      uint64_t v138 = v334;
      uint64_t v139 = swift_getWitnessTable();
      sub_24EF7FD6C(&v441, v138, v139);
      sub_24EF3DB04(v133, 2u);
      swift_retain();
      sub_24EF6C170((uint64_t)&v466);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      *(void *)v461 = *(void *)v452;
      *(_OWORD *)&v461[8] = *(_OWORD *)&v452[8];
      *(_OWORD *)&v461[24] = *(_OWORD *)&v452[24];
      *(void *)&v461[40] = *(void *)&v452[40];
      sub_24EF7FD6C(v461, v138, v139);
      uint64_t v455 = v441;
      long long v315 = v443;
      long long v457 = v443;
      uint64_t v456 = v442;
      long long v458 = v444;
      *(void *)&long long v316 = swift_getWitnessTable();
      uint64_t v140 = v139;
      sub_24EF7FF6C((uint64_t)&v455, v138);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      *(void *)&long long v315 = *(void *)v461;
      *(void *)&long long v313 = *(void *)&v461[8];
      *(void *)&long long v312 = *(void *)&v461[16];
      uint64_t v141 = *(void *)&v461[32];
      uint64_t v310 = *(void *)&v461[40];
      *(void *)&long long v311 = *(void *)&v461[24];
      uint64_t v309 = *(void *)&v461[48];
      uint64_t v306 = v462;
      char v142 = v463;
      uint64_t v441 = *(void *)v461;
      uint64_t v442 = *(void *)&v461[8];
      long long v443 = *(_OWORD *)&v461[16];
      long long v444 = *(_OWORD *)&v461[32];
      uint64_t v445 = *(void *)&v461[48];
      uint64_t v446 = v462;
      LOBYTE(v447) = v463;
      uint64_t v143 = swift_getWitnessTable();
      uint64_t v144 = swift_getWitnessTable();
      uint64_t v369 = v143;
      uint64_t v370 = v144;
      uint64_t v145 = v323;
      uint64_t v146 = swift_getWitnessTable();
      uint64_t v367 = v140;
      uint64_t v368 = v316;
      uint64_t v147 = v333;
      uint64_t v148 = swift_getWitnessTable();
      sub_24EF80064((uint64_t)&v441, v145, v147);
      sub_24EF6C374(v315, v313, v312, v311, v141, v310, v309, v306, v142);
      uint64_t v365 = v146;
      uint64_t v366 = v148;
      uint64_t v149 = v321;
      swift_getWitnessTable();
      uint64_t v150 = swift_getWitnessTable();
      uint64_t v151 = swift_getWitnessTable();
      uint64_t v363 = v150;
      uint64_t v364 = v151;
      uint64_t v152 = swift_getWitnessTable();
      uint64_t v153 = swift_getWitnessTable();
      uint64_t v154 = swift_getWitnessTable();
      uint64_t v361 = v153;
      uint64_t v362 = v154;
      uint64_t v155 = swift_getWitnessTable();
      uint64_t v359 = v152;
      uint64_t v360 = v155;
      swift_getWitnessTable();
      long long v101 = v317;
      uint64_t v156 = v308;
      sub_24EF7FF6C(v308, v149);
      (*(void (**)(uint64_t, uint64_t))(v307 + 8))(v156, v149);
      goto LABEL_5;
    case 3:
      uint64_t v158 = *((void *)&v467 + 1);
      uint64_t v157 = v468;
      uint64_t v306 = v468;
      uint64_t v159 = v77;
      uint64_t v160 = swift_allocObject();
      uint64_t v161 = v314;
      *(void *)(v160 + 16) = v311;
      *(void *)(v160 + 24) = v161;
      *(void *)(v160 + 32) = v67;
      *(void *)(v160 + 40) = v66;
      long long v162 = *(_OWORD *)(v68 + 16);
      *(_OWORD *)(v160 + 48) = *(_OWORD *)v68;
      *(_OWORD *)(v160 + 64) = v162;
      uint64_t v163 = v312;
      *(void *)(v160 + 80) = *(void *)(v68 + 32);
      *(void *)(v160 + 88) = v163;
      *(void *)(v160 + 96) = v316;
      FilterModalitySectionView.init(containerWidth:artworkViewBuilder:headerViewBuilder:options:onOptionSelected:)(v158, v157, v313, v315, v159, (uint64_t)sub_24EF6C35C, v160, (uint64_t)v461, a10);
      uint64_t v441 = *(void *)v461;
      uint64_t v442 = *(void *)&v461[8];
      long long v443 = *(_OWORD *)&v461[16];
      long long v314 = *(_OWORD *)&v461[32];
      long long v444 = *(_OWORD *)&v461[32];
      uint64_t v445 = *(void *)&v461[48];
      uint64_t v446 = v462;
      uint64_t v164 = v332;
      uint64_t v165 = swift_getWitnessTable();
      sub_24EF7FD6C(&v441, v164, v165);
      sub_24EF3DB04(v159, 3u);
      swift_retain();
      sub_24EF6C170((uint64_t)&v466);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      *(_OWORD *)v461 = *(_OWORD *)v452;
      *(void *)&v461[16] = *(void *)&v452[16];
      *(_OWORD *)&v461[24] = *(_OWORD *)&v452[24];
      *(_OWORD *)&v461[40] = *(_OWORD *)&v452[40];
      uint64_t v462 = v453;
      sub_24EF7FD6C(v461, v164, v165);
      uint64_t v455 = v441;
      uint64_t v456 = v442;
      long long v457 = v443;
      long long v315 = v444;
      long long v458 = v444;
      uint64_t v459 = v445;
      uint64_t v460 = v446;
      uint64_t v166 = v334;
      *(void *)&long long v316 = swift_getWitnessTable();
      uint64_t v167 = v166;
      uint64_t v168 = v165;
      sub_24EF80064((uint64_t)&v455, v167, v164);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      *(void *)&long long v315 = *(void *)v461;
      *(void *)&long long v314 = *(void *)&v461[8];
      *(void *)&long long v313 = *(void *)&v461[16];
      *(void *)&long long v312 = *(void *)&v461[24];
      uint64_t v169 = *(void *)&v461[32];
      uint64_t v310 = *(void *)&v461[48];
      *(void *)&long long v311 = *(void *)&v461[40];
      uint64_t v309 = v462;
      char v170 = v463;
      uint64_t v441 = *(void *)v461;
      uint64_t v442 = *(void *)&v461[8];
      long long v443 = *(_OWORD *)&v461[16];
      long long v444 = *(_OWORD *)&v461[32];
      uint64_t v445 = *(void *)&v461[48];
      uint64_t v446 = v462;
      LOBYTE(v447) = v463;
      uint64_t v171 = swift_getWitnessTable();
      uint64_t v172 = swift_getWitnessTable();
      uint64_t v381 = v171;
      uint64_t v382 = v172;
      uint64_t v173 = v323;
      uint64_t v174 = swift_getWitnessTable();
      uint64_t v379 = v316;
      uint64_t v380 = v168;
      uint64_t v175 = v333;
      uint64_t v176 = swift_getWitnessTable();
      sub_24EF80064((uint64_t)&v441, v173, v175);
      sub_24EF6C374(v315, v314, v313, v312, v169, v311, v310, v309, v170);
      uint64_t v377 = v174;
      uint64_t v378 = v176;
      uint64_t v177 = v321;
      swift_getWitnessTable();
      uint64_t v178 = swift_getWitnessTable();
      uint64_t v179 = swift_getWitnessTable();
      uint64_t v375 = v178;
      uint64_t v376 = v179;
      uint64_t v180 = swift_getWitnessTable();
      uint64_t v181 = swift_getWitnessTable();
      uint64_t v182 = swift_getWitnessTable();
      uint64_t v373 = v181;
      uint64_t v374 = v182;
      uint64_t v183 = swift_getWitnessTable();
      uint64_t v371 = v180;
      uint64_t v372 = v183;
      swift_getWitnessTable();
      long long v101 = v317;
      uint64_t v184 = v308;
      sub_24EF7FF6C(v308, v177);
      (*(void (**)(uint64_t, uint64_t))(v307 + 8))(v184, v177);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_7;
    case 4:
      uint64_t v185 = v77;
      uint64_t v186 = swift_allocObject();
      uint64_t v187 = v314;
      *(void *)(v186 + 16) = v311;
      *(void *)(v186 + 24) = v187;
      *(void *)(v186 + 32) = v67;
      *(void *)(v186 + 40) = v66;
      long long v188 = *(_OWORD *)(v68 + 16);
      *(_OWORD *)(v186 + 48) = *(_OWORD *)v68;
      *(_OWORD *)(v186 + 64) = v188;
      uint64_t v189 = v312;
      *(void *)(v186 + 80) = *(void *)(v68 + 32);
      *(void *)(v186 + 88) = v189;
      *(void *)(v186 + 96) = v316;
      FilterStandardSectionView.init(containerWidth:headerViewBuilder:options:onOptionSelected:)(v313, v315, v185, (uint64_t)sub_24EF6C340, v186, (uint64_t)v461, a10);
      uint64_t v441 = *(void *)v461;
      uint64_t v442 = *(void *)&v461[8];
      long long v314 = *(_OWORD *)&v461[16];
      long long v443 = *(_OWORD *)&v461[16];
      long long v444 = *(_OWORD *)&v461[32];
      *(void *)&long long v313 = &protocol conformance descriptor for FilterStandardSectionView<A, B>;
      uint64_t v190 = v331;
      uint64_t v191 = swift_getWitnessTable();
      sub_24EF7FD6C(&v441, v190, v191);
      sub_24EF3DB04(v185, 4u);
      swift_retain();
      sub_24EF6C170((uint64_t)&v466);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      *(void *)&long long v314 = *((void *)&v458 + 1);
      *(void *)&long long v315 = v458;
      uint64_t v441 = v455;
      uint64_t v442 = v456;
      long long v316 = v457;
      long long v443 = v457;
      long long v444 = v458;
      sub_24EF7FD6C(&v441, v190, v191);
      *(void *)v452 = *(void *)v461;
      long long v312 = *(_OWORD *)&v461[16];
      *(_OWORD *)&v452[16] = *(_OWORD *)&v461[16];
      *(void *)&v452[8] = *(void *)&v461[8];
      *(void *)&v452[32] = *(void *)&v461[32];
      *(void *)&v452[40] = *(void *)&v461[40];
      uint64_t v192 = swift_getWitnessTable();
      sub_24EF7FF6C((uint64_t)v452, v190);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      *(void *)&long long v312 = v441;
      *(void *)&long long v311 = v442;
      *(void *)v452 = v441;
      *(void *)&v452[8] = v442;
      *(_OWORD *)&v452[16] = v443;
      *(_OWORD *)&v452[32] = v444;
      v452[48] = v445;
      uint64_t v393 = v191;
      uint64_t v394 = v192;
      uint64_t v193 = v330;
      uint64_t v309 = swift_getWitnessTable();
      uint64_t v194 = swift_getWitnessTable();
      uint64_t v195 = swift_getWitnessTable();
      uint64_t v391 = v194;
      uint64_t v392 = v195;
      v303 = (char *)swift_getWitnessTable();
      sub_24EF7FF6C((uint64_t)v452, v193);
      sub_24EF6C204();
      *(void *)&long long v312 = *(void *)v461;
      uint64_t v310 = *(void *)&v461[16];
      *(void *)&long long v311 = *(void *)&v461[8];
      uint64_t v307 = *(void *)&v461[32];
      uint64_t v308 = *(void *)&v461[24];
      uint64_t v305 = *(void *)&v461[48];
      uint64_t v306 = *(void *)&v461[40];
      uint64_t v304 = v462;
      LODWORD(v302) = v463;
      char v196 = BYTE1(v463);
      uint64_t v441 = *(void *)v461;
      uint64_t v442 = *(void *)&v461[8];
      long long v443 = *(_OWORD *)&v461[16];
      long long v444 = *(_OWORD *)&v461[32];
      uint64_t v445 = *(void *)&v461[48];
      uint64_t v446 = v462;
      __int16 v447 = v463;
      uint64_t v197 = swift_getWitnessTable();
      uint64_t v198 = swift_getWitnessTable();
      uint64_t v389 = v197;
      uint64_t v390 = v198;
      uint64_t v199 = swift_getWitnessTable();
      uint64_t v200 = swift_getWitnessTable();
      uint64_t v201 = swift_getWitnessTable();
      uint64_t v387 = v200;
      uint64_t v388 = v201;
      uint64_t v202 = swift_getWitnessTable();
      uint64_t v385 = v199;
      uint64_t v386 = v202;
      uint64_t v203 = v321;
      swift_getWitnessTable();
      uint64_t v383 = v309;
      v384 = v303;
      goto LABEL_10;
    case 5:
      uint64_t v204 = v77;
      uint64_t v205 = swift_allocObject();
      uint64_t v206 = v314;
      *(void *)(v205 + 16) = v311;
      *(void *)(v205 + 24) = v206;
      *(void *)(v205 + 32) = v67;
      *(void *)(v205 + 40) = v66;
      long long v207 = *(_OWORD *)(v68 + 16);
      *(_OWORD *)(v205 + 48) = *(_OWORD *)v68;
      *(_OWORD *)(v205 + 64) = v207;
      uint64_t v208 = v312;
      *(void *)(v205 + 80) = *(void *)(v68 + 32);
      *(void *)(v205 + 88) = v208;
      *(void *)(v205 + 96) = v316;
      FilterStandardSectionView.init(containerWidth:headerViewBuilder:options:onOptionSelected:)(v313, v315, v204, (uint64_t)sub_24EF6C2E8, v205, (uint64_t)v461, a10);
      uint64_t v441 = *(void *)v461;
      uint64_t v442 = *(void *)&v461[8];
      long long v314 = *(_OWORD *)&v461[16];
      long long v443 = *(_OWORD *)&v461[16];
      long long v444 = *(_OWORD *)&v461[32];
      *(void *)&long long v313 = &protocol conformance descriptor for FilterStandardSectionView<A, B>;
      uint64_t v209 = v329;
      uint64_t v210 = swift_getWitnessTable();
      sub_24EF7FD6C(&v441, v209, v210);
      sub_24EF3DB04(v204, 5u);
      swift_retain();
      sub_24EF6C170((uint64_t)&v466);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      *(void *)&long long v314 = *((void *)&v458 + 1);
      *(void *)&long long v315 = v458;
      uint64_t v441 = v455;
      uint64_t v442 = v456;
      long long v316 = v457;
      long long v443 = v457;
      long long v444 = v458;
      sub_24EF7FD6C(&v441, v209, v210);
      *(void *)v452 = *(void *)v461;
      long long v312 = *(_OWORD *)&v461[16];
      *(_OWORD *)&v452[16] = *(_OWORD *)&v461[16];
      *(void *)&v452[8] = *(void *)&v461[8];
      *(void *)&v452[32] = *(void *)&v461[32];
      *(void *)&v452[40] = *(void *)&v461[40];
      uint64_t v211 = v331;
      uint64_t v212 = swift_getWitnessTable();
      sub_24EF80064((uint64_t)v452, v211, v209);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      *(void *)&long long v312 = v441;
      *(void *)&long long v311 = v442;
      *(void *)v452 = v441;
      *(void *)&v452[8] = v442;
      *(_OWORD *)&v452[16] = v443;
      *(_OWORD *)&v452[32] = v444;
      v452[48] = v445;
      uint64_t v405 = v212;
      uint64_t v406 = v210;
      uint64_t v213 = v330;
      uint64_t v309 = swift_getWitnessTable();
      uint64_t v214 = swift_getWitnessTable();
      uint64_t v215 = swift_getWitnessTable();
      uint64_t v403 = v214;
      uint64_t v404 = v215;
      v303 = (char *)swift_getWitnessTable();
      sub_24EF7FF6C((uint64_t)v452, v213);
      sub_24EF6C204();
      *(void *)&long long v312 = *(void *)v461;
      uint64_t v310 = *(void *)&v461[16];
      *(void *)&long long v311 = *(void *)&v461[8];
      uint64_t v307 = *(void *)&v461[32];
      uint64_t v308 = *(void *)&v461[24];
      uint64_t v305 = *(void *)&v461[48];
      uint64_t v306 = *(void *)&v461[40];
      uint64_t v304 = v462;
      LODWORD(v302) = v463;
      char v196 = BYTE1(v463);
      uint64_t v441 = *(void *)v461;
      uint64_t v442 = *(void *)&v461[8];
      long long v443 = *(_OWORD *)&v461[16];
      long long v444 = *(_OWORD *)&v461[32];
      uint64_t v445 = *(void *)&v461[48];
      uint64_t v446 = v462;
      __int16 v447 = v463;
      uint64_t v216 = swift_getWitnessTable();
      uint64_t v217 = swift_getWitnessTable();
      uint64_t v401 = v216;
      uint64_t v402 = v217;
      uint64_t v218 = swift_getWitnessTable();
      uint64_t v219 = swift_getWitnessTable();
      uint64_t v220 = swift_getWitnessTable();
      uint64_t v399 = v219;
      uint64_t v400 = v220;
      uint64_t v221 = swift_getWitnessTable();
      uint64_t v397 = v218;
      uint64_t v398 = v221;
      uint64_t v203 = v321;
      swift_getWitnessTable();
      uint64_t v395 = v309;
      v396 = v303;
LABEL_10:
      uint64_t v222 = v318;
      swift_getWitnessTable();
      long long v101 = v317;
      sub_24EF80064((uint64_t)&v441, v203, v222);
      sub_24EF6C1B0(v312, v311, v310, v308, v307, v306, v305, v304, v302, v196);
      goto LABEL_12;
    case 6:
      long long v223 = *(_OWORD *)(v68 + 16);
      *(_OWORD *)v461 = *(_OWORD *)v68;
      *(_OWORD *)&v461[16] = v223;
      *(void *)&v461[32] = *(void *)(v68 + 32);
      uint64_t v224 = v77;
      swift_bridgeObjectRetain();
      uint64_t v225 = v67;
      sub_24EF60314();
      swift_getKeyPath();
      uint64_t v226 = (uint64_t)v297;
      sub_24EF87500();
      swift_release();
      swift_release();
      uint64_t v227 = *(unsigned __int8 *)(v226 + *(int *)(v299 + 20));
      sub_24EF6C24C(v226, (uint64_t (*)(void))type metadata accessor for FilterLayout);
      uint64_t v228 = swift_allocObject();
      uint64_t v229 = v314;
      *(void *)(v228 + 16) = v311;
      *(void *)(v228 + 24) = v229;
      *(void *)(v228 + 32) = v225;
      *(void *)(v228 + 40) = v66;
      long long v230 = v467;
      *(_OWORD *)(v228 + 48) = v466;
      *(_OWORD *)(v228 + 64) = v230;
      uint64_t v231 = v312;
      *(void *)(v228 + 80) = v468;
      *(void *)(v228 + 88) = v231;
      *(void *)(v228 + 96) = v316;
      FilterThemeSectionView.init(sizeClass:headerViewBuilder:options:onOptionSelected:)(v227, v313, v315, v224, (uint64_t)sub_24EF6C2B0, v228, (uint64_t)v461);
      LOBYTE(v441) = v461[0];
      uint64_t v442 = *(void *)&v461[8];
      long long v314 = *(_OWORD *)&v461[16];
      long long v443 = *(_OWORD *)&v461[16];
      long long v444 = *(_OWORD *)&v461[32];
      uint64_t v232 = v328;
      uint64_t v233 = swift_getWitnessTable();
      sub_24EF7FD6C(&v441, v232, v233);
      swift_retain();
      sub_24EF6C170((uint64_t)&v466);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      *(void *)&long long v314 = *((void *)&v458 + 1);
      *(void *)&long long v315 = v458;
      LOBYTE(v441) = v455;
      uint64_t v442 = v456;
      long long v316 = v457;
      long long v443 = v457;
      long long v444 = v458;
      *(void *)&long long v312 = v233;
      sub_24EF7FD6C(&v441, v232, v233);
      v452[0] = v461[0];
      long long v313 = *(_OWORD *)&v461[16];
      *(_OWORD *)&v452[16] = *(_OWORD *)&v461[16];
      *(void *)&v452[8] = *(void *)&v461[8];
      *(void *)&v452[32] = *(void *)&v461[32];
      *(void *)&v452[40] = *(void *)&v461[40];
      *(void *)&long long v311 = swift_getWitnessTable();
      sub_24EF7FF6C((uint64_t)v452, v232);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v309 = v442;
      uint64_t v310 = v441;
      long long v234 = v443;
      uint64_t v235 = v444;
      uint64_t v307 = v445;
      uint64_t v308 = *((void *)&v444 + 1);
      uint64_t v306 = v446;
      LOBYTE(v227) = v447;
      *(void *)v452 = v441;
      *(void *)&v452[8] = v442;
      *(_OWORD *)&v452[16] = v443;
      *(_OWORD *)&v452[32] = v444;
      *(void *)&v452[48] = v445;
      uint64_t v453 = v446;
      char v454 = v447;
      uint64_t v236 = v326;
      uint64_t v237 = swift_getWitnessTable();
      uint64_t v238 = swift_getWitnessTable();
      uint64_t v417 = v237;
      uint64_t v418 = v238;
      uint64_t v239 = v330;
      *(void *)&long long v313 = swift_getWitnessTable();
      uint64_t v415 = v312;
      uint64_t v416 = v311;
      *(void *)&long long v312 = swift_getWitnessTable();
      sub_24EF80064((uint64_t)v452, v239, v236);
      sub_24EF6C374(v310, v309, v234, *((uint64_t *)&v234 + 1), v235, v308, v307, v306, v227);
      uint64_t v240 = *(void *)v461;
      uint64_t v310 = *(void *)&v461[16];
      *(void *)&long long v311 = *(void *)&v461[8];
      uint64_t v308 = *(void *)&v461[32];
      uint64_t v309 = *(void *)&v461[24];
      uint64_t v306 = *(void *)&v461[48];
      uint64_t v307 = *(void *)&v461[40];
      uint64_t v305 = v462;
      LODWORD(v304) = v463;
      LODWORD(v303) = BYTE1(v463);
      uint64_t v441 = *(void *)v461;
      uint64_t v442 = *(void *)&v461[8];
      long long v443 = *(_OWORD *)&v461[16];
      long long v444 = *(_OWORD *)&v461[32];
      uint64_t v445 = *(void *)&v461[48];
      uint64_t v446 = v462;
      __int16 v447 = v463;
      uint64_t v241 = swift_getWitnessTable();
      uint64_t v242 = swift_getWitnessTable();
      uint64_t v413 = v241;
      uint64_t v414 = v242;
      uint64_t v243 = swift_getWitnessTable();
      uint64_t v244 = swift_getWitnessTable();
      uint64_t v245 = swift_getWitnessTable();
      uint64_t v411 = v244;
      uint64_t v412 = v245;
      uint64_t v246 = swift_getWitnessTable();
      uint64_t v409 = v243;
      uint64_t v410 = v246;
      uint64_t v247 = v321;
      swift_getWitnessTable();
      uint64_t v407 = v313;
      uint64_t v408 = v312;
      uint64_t v248 = v318;
      swift_getWitnessTable();
      long long v101 = v317;
      sub_24EF80064((uint64_t)&v441, v247, v248);
      sub_24EF6C1B0(v240, v311, v310, v309, v308, v307, v306, v305, v304, (char)v303);
LABEL_12:
      swift_bridgeObjectRelease();
      swift_release();
      break;
    case 7:
      uint64_t v250 = *((void *)&v467 + 1);
      uint64_t v249 = v468;
      uint64_t v308 = v77;
      uint64_t v251 = swift_allocObject();
      uint64_t v252 = v314;
      *(void *)(v251 + 16) = v311;
      *(void *)(v251 + 24) = v252;
      *(void *)(v251 + 32) = v67;
      *(void *)(v251 + 40) = v66;
      long long v253 = *(_OWORD *)(v68 + 16);
      *(_OWORD *)(v251 + 48) = *(_OWORD *)v68;
      *(_OWORD *)(v251 + 64) = v253;
      uint64_t v254 = v312;
      *(void *)(v251 + 80) = *(void *)(v68 + 32);
      *(void *)(v251 + 88) = v254;
      *(void *)(v251 + 96) = v316;
      uint64_t v255 = v308;
      FilterTrainerSectionView.init(containerWidth:artworkViewBuilder:headerViewBuilder:options:onOptionSelected:)(v250, v249, v313, v315, v308, (uint64_t)sub_24EF6C158, v251, (uint64_t)v461, a10);
      uint64_t v441 = *(void *)v461;
      uint64_t v442 = *(void *)&v461[8];
      long long v443 = *(_OWORD *)&v461[16];
      long long v314 = *(_OWORD *)&v461[32];
      long long v444 = *(_OWORD *)&v461[32];
      uint64_t v445 = *(void *)&v461[48];
      uint64_t v446 = v462;
      uint64_t v256 = v327;
      uint64_t v257 = swift_getWitnessTable();
      sub_24EF7FD6C(&v441, v256, v257);
      sub_24EF3DB04(v255, 7u);
      swift_retain();
      sub_24EF6C170((uint64_t)&v466);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      *(void *)&long long v316 = v456;
      *(void *)&long long v314 = v459;
      *(void *)&long long v313 = v460;
      uint64_t v441 = v455;
      uint64_t v442 = v456;
      long long v443 = v457;
      long long v315 = v458;
      long long v444 = v458;
      uint64_t v445 = v459;
      uint64_t v446 = v460;
      sub_24EF7FD6C(&v441, v256, v257);
      *(void *)v452 = *(void *)v461;
      *(void *)&v452[8] = *(void *)&v461[8];
      *(void *)&v452[16] = *(void *)&v461[16];
      long long v311 = *(_OWORD *)&v461[32];
      *(_OWORD *)&v452[32] = *(_OWORD *)&v461[32];
      *(void *)&v452[24] = *(void *)&v461[24];
      *(void *)&v452[48] = *(void *)&v461[48];
      uint64_t v453 = v462;
      uint64_t v258 = v328;
      *(void *)&long long v312 = swift_getWitnessTable();
      uint64_t v259 = v258;
      uint64_t v260 = v257;
      sub_24EF80064((uint64_t)v452, v259, v256);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v261 = v441;
      uint64_t v310 = v443;
      *(void *)&long long v311 = v442;
      uint64_t v262 = *((void *)&v443 + 1);
      uint64_t v263 = v444;
      uint64_t v308 = v445;
      uint64_t v309 = *((void *)&v444 + 1);
      uint64_t v307 = v446;
      char v264 = v447;
      *(void *)v452 = v441;
      *(void *)&v452[8] = v442;
      *(_OWORD *)&v452[16] = v443;
      *(_OWORD *)&v452[32] = v444;
      *(void *)&v452[48] = v445;
      uint64_t v453 = v446;
      char v454 = v447;
      uint64_t v265 = swift_getWitnessTable();
      uint64_t v266 = swift_getWitnessTable();
      uint64_t v450 = v265;
      uint64_t v451 = v266;
      uint64_t v267 = v330;
      uint64_t v268 = swift_getWitnessTable();
      uint64_t v448 = v312;
      uint64_t v449 = v260;
      uint64_t v269 = v326;
      *(void *)&long long v312 = swift_getWitnessTable();
      sub_24EF80064((uint64_t)v452, v267, v269);
      sub_24EF6C374(v261, v311, v310, v262, v263, v309, v308, v307, v264);
      uint64_t v270 = *(void *)v461;
      uint64_t v310 = *(void *)&v461[16];
      *(void *)&long long v311 = *(void *)&v461[8];
      uint64_t v308 = *(void *)&v461[32];
      uint64_t v309 = *(void *)&v461[24];
      uint64_t v306 = *(void *)&v461[48];
      uint64_t v307 = *(void *)&v461[40];
      uint64_t v305 = v462;
      LODWORD(v304) = v463;
      LODWORD(v303) = BYTE1(v463);
      uint64_t v441 = *(void *)v461;
      uint64_t v442 = *(void *)&v461[8];
      long long v443 = *(_OWORD *)&v461[16];
      long long v444 = *(_OWORD *)&v461[32];
      uint64_t v445 = *(void *)&v461[48];
      uint64_t v446 = v462;
      __int16 v447 = v463;
      uint64_t v271 = swift_getWitnessTable();
      uint64_t v272 = swift_getWitnessTable();
      uint64_t v439 = v271;
      uint64_t v440 = v272;
      uint64_t v273 = swift_getWitnessTable();
      uint64_t v274 = swift_getWitnessTable();
      uint64_t v275 = swift_getWitnessTable();
      uint64_t v437 = v274;
      uint64_t v438 = v275;
      uint64_t v276 = swift_getWitnessTable();
      uint64_t v435 = v273;
      uint64_t v436 = v276;
      uint64_t v277 = v321;
      swift_getWitnessTable();
      uint64_t v433 = v268;
      uint64_t v434 = v312;
      uint64_t v278 = v318;
      swift_getWitnessTable();
      long long v101 = v317;
      sub_24EF80064((uint64_t)&v441, v277, v278);
      sub_24EF6C1B0(v270, v311, v310, v309, v308, v307, v306, v305, v304, (char)v303);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      break;
    default:
      uint64_t v79 = v77;
      uint64_t v80 = swift_allocObject();
      uint64_t v81 = v314;
      *(void *)(v80 + 16) = v311;
      *(void *)(v80 + 24) = v81;
      *(void *)(v80 + 32) = v67;
      *(void *)(v80 + 40) = v66;
      long long v82 = *(_OWORD *)(v68 + 16);
      *(_OWORD *)(v80 + 48) = *(_OWORD *)v68;
      *(_OWORD *)(v80 + 64) = v82;
      uint64_t v83 = v312;
      *(void *)(v80 + 80) = *(void *)(v68 + 32);
      *(void *)(v80 + 88) = v83;
      *(void *)(v80 + 96) = v316;
      FilterStandardSectionView.init(containerWidth:headerViewBuilder:options:onOptionSelected:)(v313, v315, v79, (uint64_t)sub_24EF6C4D0, v80, (uint64_t)&v441, a10);
      *(void *)v452 = v441;
      long long v314 = v443;
      *(_OWORD *)&v452[16] = v443;
      *(void *)&v452[8] = v442;
      *(_OWORD *)&v452[32] = v444;
      uint64_t v84 = v322;
      uint64_t v85 = swift_getWitnessTable();
      sub_24EF7FD6C(v452, v84, v85);
      sub_24EF3DB04(v79, 0);
      swift_retain();
      sub_24EF6C170((uint64_t)&v466);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      *(void *)v452 = *(void *)v461;
      *(_OWORD *)&v452[8] = *(_OWORD *)&v461[8];
      *(_OWORD *)&v452[24] = *(_OWORD *)&v461[24];
      *(void *)&v452[40] = *(void *)&v461[40];
      sub_24EF7FD6C(v452, v84, v85);
      *(void *)v452 = v441;
      long long v316 = v443;
      *(_OWORD *)&v452[16] = v443;
      *(void *)&v452[8] = v442;
      *(_OWORD *)&v452[32] = v444;
      uint64_t v86 = swift_getWitnessTable();
      uint64_t v87 = v304;
      sub_24EF7FF6C((uint64_t)v452, v84);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v345 = v85;
      uint64_t v346 = v86;
      uint64_t v88 = v323;
      uint64_t v89 = swift_getWitnessTable();
      uint64_t v90 = swift_getWitnessTable();
      uint64_t v91 = swift_getWitnessTable();
      uint64_t v343 = v90;
      uint64_t v344 = v91;
      uint64_t v92 = swift_getWitnessTable();
      uint64_t v93 = v308;
      sub_24EF7FF6C(v87, v88);
      (*(void (**)(uint64_t, uint64_t))(v305 + 8))(v87, v88);
      uint64_t v341 = v89;
      uint64_t v342 = v92;
      uint64_t v94 = v321;
      swift_getWitnessTable();
      uint64_t v95 = swift_getWitnessTable();
      uint64_t v96 = swift_getWitnessTable();
      uint64_t v339 = v95;
      uint64_t v340 = v96;
      uint64_t v97 = swift_getWitnessTable();
      uint64_t v98 = swift_getWitnessTable();
      uint64_t v99 = swift_getWitnessTable();
      uint64_t v337 = v98;
      uint64_t v338 = v99;
      uint64_t v100 = swift_getWitnessTable();
      uint64_t v335 = v97;
      uint64_t v336 = v100;
      swift_getWitnessTable();
      long long v101 = v317;
      sub_24EF7FF6C(v93, v94);
      (*(void (**)(uint64_t, uint64_t))(v307 + 8))(v93, v94);
LABEL_5:
      swift_bridgeObjectRelease();
LABEL_7:
      swift_release();
      break;
  }
  swift_release();
LABEL_15:
  uint64_t v279 = swift_getWitnessTable();
  uint64_t v280 = swift_getWitnessTable();
  uint64_t v431 = v279;
  uint64_t v432 = v280;
  uint64_t v281 = swift_getWitnessTable();
  uint64_t v282 = swift_getWitnessTable();
  uint64_t v283 = swift_getWitnessTable();
  uint64_t v429 = v282;
  uint64_t v430 = v283;
  uint64_t v284 = swift_getWitnessTable();
  uint64_t v427 = v281;
  uint64_t v428 = v284;
  uint64_t v285 = swift_getWitnessTable();
  uint64_t v286 = swift_getWitnessTable();
  uint64_t v287 = swift_getWitnessTable();
  uint64_t v425 = v286;
  uint64_t v426 = v287;
  uint64_t v288 = swift_getWitnessTable();
  uint64_t v289 = swift_getWitnessTable();
  uint64_t v290 = swift_getWitnessTable();
  uint64_t v423 = v289;
  uint64_t v424 = v290;
  uint64_t v291 = swift_getWitnessTable();
  uint64_t v421 = v288;
  uint64_t v422 = v291;
  uint64_t v292 = swift_getWitnessTable();
  uint64_t v419 = v285;
  uint64_t v420 = v292;
  uint64_t v293 = v320;
  uint64_t v294 = swift_getWitnessTable();
  sub_24EF7FD6C(v101, v293, v294);
  return (*(uint64_t (**)(char *, uint64_t))(v319 + 8))(v101, v293);
}

uint64_t sub_24EF6A1E8()
{
  return sub_24EF6A218((uint64_t (*)(void, void, void, void, void))sub_24EF653AC);
}

uint64_t sub_24EF6A200()
{
  return sub_24EF6A218((uint64_t (*)(void, void, void, void, void))sub_24EF6594C);
}

uint64_t sub_24EF6A218(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_24EF6A230(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  long long v13 = *(_OWORD *)(a1 + 3);
  uint64_t v14 = a1[5];
  uint64_t v15 = a1[6];
  char v16 = *((unsigned char *)a1 + 56);
  uint64_t v23 = *a1;
  long long v24 = *(_OWORD *)(a1 + 1);
  long long v25 = v13;
  uint64_t v26 = v14;
  uint64_t v27 = v15;
  char v28 = v16;
  unint64_t v17 = sub_24EF6BB6C();
  unint64_t v18 = sub_24EF6BBC0();
  unint64_t v19 = sub_24EF6BC14();
  unint64_t v20 = sub_24EF6BC68();
  *(void *)&long long v22 = v17;
  *((void *)&v22 + 1) = v18;
  return sub_24EF6C4E8((uint64_t)&v23, a2, a4, a5, a6, (uint64_t)&type metadata for BodyFocus, a8, (uint64_t)&protocol witness table for BodyFocus, v22, v19, v20);
}

uint64_t sub_24EF6A2F8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 32);
  char v15 = *(unsigned char *)(a1 + 40);
  v22[0] = *(void *)a1;
  v22[1] = v13;
  long long v23 = *(_OWORD *)(a1 + 16);
  uint64_t v24 = v14;
  char v25 = v15;
  unint64_t v16 = sub_24EF2EB60();
  unint64_t v17 = sub_24EF2EA64();
  unint64_t v18 = sub_24EF6BAC4();
  unint64_t v19 = sub_24EF6BB18();
  *(void *)&long long v21 = v16;
  *((void *)&v21 + 1) = v17;
  return sub_24EF6C4E8((uint64_t)v22, a2, a4, a5, a6, (uint64_t)&type metadata for Duration, a8, (uint64_t)&protocol witness table for Duration, v21, v18, v19);
}

uint64_t sub_24EF6A3B8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  long long v13 = *(_OWORD *)(a1 + 3);
  uint64_t v14 = a1[5];
  uint64_t v15 = a1[6];
  char v16 = *((unsigned char *)a1 + 56);
  uint64_t v23 = *a1;
  long long v24 = *(_OWORD *)(a1 + 1);
  long long v25 = v13;
  uint64_t v26 = v14;
  uint64_t v27 = v15;
  char v28 = v16;
  unint64_t v17 = sub_24EF6BCBC();
  unint64_t v18 = sub_24EF6BD10();
  unint64_t v19 = sub_24EF6BD64();
  unint64_t v20 = sub_24EF6BDB8();
  *(void *)&long long v22 = v17;
  *((void *)&v22 + 1) = v18;
  return sub_24EF6C4E8((uint64_t)&v23, a2, a4, a5, a6, (uint64_t)&type metadata for Equipment, a8, (uint64_t)&protocol witness table for Equipment, v22, v19, v20);
}

uint64_t sub_24EF6A480(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  long long v14 = *(_OWORD *)(a1 + 16);
  long long v13 = *(_OWORD *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 48);
  char v16 = *(unsigned char *)(a1 + 72);
  v23[0] = *(_OWORD *)a1;
  v23[1] = v14;
  v23[2] = v13;
  uint64_t v24 = v15;
  long long v25 = *(_OWORD *)(a1 + 56);
  char v26 = v16;
  unint64_t v17 = sub_24EF47CA4();
  unint64_t v18 = sub_24EF47A68();
  unint64_t v19 = sub_24EF61520();
  unint64_t v20 = sub_24EF61574();
  *(void *)&long long v22 = v17;
  *((void *)&v22 + 1) = v18;
  return sub_24EF6C4E8((uint64_t)v23, a2, a4, a5, a6, (uint64_t)&type metadata for Modality, a8, (uint64_t)&protocol witness table for Modality, v22, v19, v20);
}

uint64_t sub_24EF6A548(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  long long v13 = *(_OWORD *)(a1 + 3);
  uint64_t v14 = a1[5];
  uint64_t v15 = a1[6];
  char v16 = *((unsigned char *)a1 + 56);
  uint64_t v23 = *a1;
  long long v24 = *(_OWORD *)(a1 + 1);
  long long v25 = v13;
  uint64_t v26 = v14;
  uint64_t v27 = v15;
  char v28 = v16;
  unint64_t v17 = sub_24EF6BE0C();
  unint64_t v18 = sub_24EF6BE60();
  unint64_t v19 = sub_24EF6BEB4();
  unint64_t v20 = sub_24EF6BF08();
  *(void *)&long long v22 = v17;
  *((void *)&v22 + 1) = v18;
  return sub_24EF6C4E8((uint64_t)&v23, a2, a4, a5, a6, (uint64_t)&type metadata for MusicGenre, a8, (uint64_t)&protocol witness table for MusicGenre, v22, v19, v20);
}

uint64_t sub_24EF6A610(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  uint64_t v15 = a1[7];
  uint64_t v16 = a1[8];
  char v17 = *((unsigned char *)a1 + 72);
  uint64_t v24 = *a1;
  long long v25 = *(_OWORD *)(a1 + 1);
  uint64_t v26 = v13;
  uint64_t v27 = v14;
  long long v28 = *(_OWORD *)(a1 + 5);
  uint64_t v29 = v15;
  uint64_t v30 = v16;
  char v31 = v17;
  unint64_t v18 = sub_24EF6BF5C();
  unint64_t v19 = sub_24EF6BFB0();
  unint64_t v20 = sub_24EF6C004();
  unint64_t v21 = sub_24EF6C058();
  *(void *)&long long v23 = v18;
  *((void *)&v23 + 1) = v19;
  return sub_24EF6C4E8((uint64_t)&v24, a2, a4, a5, a6, (uint64_t)&type metadata for SkillLevel, a8, (uint64_t)&protocol witness table for SkillLevel, v23, v20, v21);
}

uint64_t sub_24EF6A6E0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  long long v13 = *(_OWORD *)(a1 + 3);
  long long v14 = *(_OWORD *)(a1 + 5);
  uint64_t v15 = a1[7];
  char v16 = *((unsigned char *)a1 + 64);
  uint64_t v23 = *a1;
  long long v24 = *(_OWORD *)(a1 + 1);
  long long v25 = v13;
  long long v26 = v14;
  uint64_t v27 = v15;
  char v28 = v16;
  unint64_t v17 = sub_24EF5C4F0();
  unint64_t v18 = sub_24EF5BEEC();
  unint64_t v19 = sub_24EF6C0AC();
  unint64_t v20 = sub_24EF6C100();
  *(void *)&long long v22 = v17;
  *((void *)&v22 + 1) = v18;
  return sub_24EF6C4E8((uint64_t)&v23, a2, a4, a5, a6, (uint64_t)&type metadata for Theme, a8, (uint64_t)&protocol witness table for Theme, v22, v19, v20);
}

uint64_t sub_24EF6A7AC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  uint64_t v15 = a1[7];
  uint64_t v16 = a1[8];
  char v17 = *((unsigned char *)a1 + 72);
  uint64_t v24 = *a1;
  long long v25 = *(_OWORD *)(a1 + 1);
  uint64_t v26 = v13;
  uint64_t v27 = v14;
  long long v28 = *(_OWORD *)(a1 + 5);
  uint64_t v29 = v15;
  uint64_t v30 = v16;
  char v31 = v17;
  unint64_t v18 = sub_24EF22E44();
  unint64_t v19 = sub_24EF22E98();
  unint64_t v20 = sub_24EF22EEC();
  unint64_t v21 = sub_24EF22F40();
  *(void *)&long long v23 = v18;
  *((void *)&v23 + 1) = v19;
  return sub_24EF6C4E8((uint64_t)&v24, a2, a4, a5, a6, (uint64_t)&type metadata for Trainer, a8, (uint64_t)&protocol witness table for Trainer, v23, v20, v21);
}

uint64_t sub_24EF6A87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v79 = a5;
  uint64_t v80 = a6;
  uint64_t v86 = a3;
  uint64_t v87 = (char *)a1;
  uint64_t v81 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987440);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v66 - v13;
  uint64_t v15 = sub_24EF86D70();
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v78 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v76 = (char *)v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987448);
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v72 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987450);
  uint64_t v83 = *(void *)(v18 - 8);
  uint64_t v84 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v73 = (char *)v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985D60);
  MEMORY[0x270FA5388](v20 - 8);
  long long v22 = (char *)v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_24EF86A30();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)v66 - v28;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987458);
  uint64_t v31 = MEMORY[0x270FA5388](v30 - 8);
  uint64_t v85 = (char *)v66 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v82 = (uint64_t)v66 - v33;
  sub_24EEF7878((uint64_t)v87, (uint64_t)v22, &qword_269985D60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_24EEFD568((uint64_t)v22, &qword_269985D60);
    uint64_t v34 = 1;
    uint64_t v36 = (uint64_t)v85;
    uint64_t v35 = v86;
    uint64_t v37 = v82;
  }
  else
  {
    unint64_t v38 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    uint64_t v67 = v29;
    uint64_t v68 = v23;
    v38(v29, v22, v23);
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v29, v23);
    uint64_t v39 = sub_24EF870B0();
    uint64_t v87 = v12;
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    v66[2] = v42;
    uint64_t v71 = a7;
    char v45 = v44 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    v66[1] = KeyPath;
    uint64_t v47 = sub_24EF87040();
    uint64_t v69 = a4;
    uint64_t v48 = v47;
    uint64_t v49 = swift_getKeyPath();
    uint64_t v70 = v14;
    uint64_t v88 = v39;
    unint64_t v89 = v41;
    char v90 = v45;
    uint64_t v91 = v43;
    uint64_t v92 = KeyPath;
    uint64_t v93 = 1;
    char v94 = 0;
    uint64_t v95 = v49;
    uint64_t v96 = v48;
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987468);
    unint64_t v51 = sub_24EF6C7A8();
    unint64_t v52 = v72;
    sub_24EF87220();
    uint64_t v53 = v41;
    uint64_t v12 = v87;
    char v54 = v45;
    a7 = v71;
    sub_24EEFD518(v39, v53, v54);
    a4 = v69;
    swift_release();
    uint64_t v14 = v70;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v55 = v76;
    sub_24EF86D60();
    uint64_t v88 = v50;
    unint64_t v89 = v51;
    swift_getOpaqueTypeConformance2();
    uint64_t v56 = (uint64_t)v73;
    uint64_t v57 = v75;
    sub_24EF871F0();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v55, v78);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v52, v57);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v67, v68);
    uint64_t v37 = v82;
    sub_24EF22C1C(v56, v82, &qword_269987450);
    uint64_t v34 = 0;
    uint64_t v36 = (uint64_t)v85;
    uint64_t v35 = v86;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v37, v34, 1, v84);
  if (v35)
  {
    uint64_t v58 = swift_allocObject();
    uint64_t v59 = v80;
    *(void *)(v58 + 16) = v79;
    *(void *)(v58 + 24) = v59;
    long long v60 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)(v58 + 32) = *(_OWORD *)a4;
    *(_OWORD *)(v58 + 48) = v60;
    *(void *)(v58 + 64) = *(void *)(a4 + 32);
    MEMORY[0x270FA5388](v58);
    v66[-2] = v81;
    v66[-1] = v35;
    sub_24EF6C170(a4);
    sub_24EF87380();
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987368);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v14, 0, 1, v61);
  }
  else
  {
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987368);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v14, 1, 1, v62);
  }
  sub_24EEF7878(v37, v36, &qword_269987458);
  sub_24EEF7878((uint64_t)v14, (uint64_t)v12, &qword_269987440);
  sub_24EEF7878(v36, a7, &qword_269987458);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987460);
  uint64_t v64 = a7 + *(int *)(v63 + 48);
  *(void *)uint64_t v64 = 0x4014000000000000;
  *(unsigned char *)(v64 + 8) = 0;
  sub_24EEF7878((uint64_t)v12, a7 + *(int *)(v63 + 64), &qword_269987440);
  sub_24EEFD568((uint64_t)v14, &qword_269987440);
  sub_24EEFD568(v37, &qword_269987458);
  sub_24EEFD568((uint64_t)v12, &qword_269987440);
  return sub_24EEFD568(v36, &qword_269987458);
}

uint64_t sub_24EF6B09C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FilterAction();
  MEMORY[0x270FA5388](v2);
  id v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  uint64_t v8 = *(void *)(a1 + 32);
  type metadata accessor for FilterView();
  sub_24EF60314();
  swift_storeEnumTagMultiPayload();
  sub_24EF87510();
  swift_release();
  return sub_24EF6C24C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FilterAction);
}

uint64_t sub_24EF6B194@<X0>(uint64_t a1@<X8>)
{
  sub_24EEFD5C4();
  swift_bridgeObjectRetain();
  uint64_t result = sub_24EF870C0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_24EF6B200@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24EF86CC0();
  *a1 = result;
  return result;
}

uint64_t sub_24EF6B22C()
{
  return sub_24EF86CD0();
}

size_t sub_24EF6B258(uint64_t a1)
{
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987390);
  uint64_t v2 = MEMORY[0x270FA5388](v48);
  uint64_t v42 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v46 = (void *)((char *)v41 - v5);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v41 - v6;
  uint64_t v47 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  uint64_t v45 = v10;
  v41[1] = a1;
  if (v10)
  {
    uint64_t v43 = (v9 + 32) & ~v9;
    uint64_t v12 = MEMORY[0x263F8EE78] + v43;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = *(void *)(type metadata accessor for FilterSectionDescriptor() - 8);
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v44 = *(void *)(v15 + 72);
    _OWORD v41[2] = v9 | 7;
    uint64_t v17 = v11;
    uint64_t v18 = v42;
    while (1)
    {
      uint64_t v20 = v48;
      uint64_t v21 = (uint64_t)&v18[*(int *)(v48 + 48)];
      sub_24EF33BE4(v16, v21);
      uint64_t v22 = (uint64_t)v46;
      uint64_t v23 = (uint64_t)v46 + *(int *)(v20 + 48);
      *unint64_t v46 = v13;
      sub_24EF6B984(v21, v23);
      size_t result = sub_24EF22C1C(v22, (uint64_t)v7, &qword_269987390);
      if (v14)
      {
        uint64_t v11 = v17;
        BOOL v19 = __OFSUB__(v14--, 1);
        if (v19) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v25 = v17[3];
        if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v26 = v25 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1) {
          uint64_t v27 = 1;
        }
        else {
          uint64_t v27 = v26;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_269987498);
        uint64_t v28 = *(void *)(v47 + 72);
        uint64_t v29 = v43;
        uint64_t v11 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v11);
        if (!v28) {
          goto LABEL_34;
        }
        int64_t v30 = result - v29;
        if (result - v29 == 0x8000000000000000 && v28 == -1) {
          goto LABEL_35;
        }
        uint64_t v32 = v30 / v28;
        _OWORD v11[2] = v27;
        v11[3] = 2 * (v30 / v28);
        uint64_t v33 = (char *)v11 + v29;
        uint64_t v34 = v17[3] >> 1;
        uint64_t v35 = v34 * v28;
        if (v17[2])
        {
          if (v11 < v17 || v33 >= (char *)v17 + v43 + v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v11 != v17)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          _OWORD v17[2] = 0;
        }
        uint64_t v12 = (uint64_t)&v33[v35];
        uint64_t v37 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
        swift_release();
        uint64_t v18 = v42;
        BOOL v19 = __OFSUB__(v37, 1);
        uint64_t v14 = v37 - 1;
        if (v19)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v13;
      sub_24EF22C1C((uint64_t)v7, v12, &qword_269987390);
      v12 += *(void *)(v47 + 72);
      v16 += v44;
      uint64_t v17 = v11;
      if (v45 == v13) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v14 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v38 = v11[3];
  if (v38 >= 2)
  {
    unint64_t v39 = v38 >> 1;
    BOOL v19 = __OFSUB__(v39, v14);
    uint64_t v40 = v39 - v14;
    if (v19) {
      goto LABEL_36;
    }
    _OWORD v11[2] = v40;
  }
  return (size_t)v11;
}

uint64_t sub_24EF6B5DC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24EF6B5E8()
{
  uint64_t v1 = sub_24EF86BB0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_24EF61900();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24EF6B6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(sub_24EF86BB0() - 8);
  uint64_t v10 = v3 + ((*(unsigned __int8 *)(v9 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return sub_24EF66074(a1, a2, v3 + 32, v10, v7, v8, a3);
}

uint64_t sub_24EF6B760()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EF6B798(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987390);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_24EF6B7F8()
{
  uint64_t v1 = type metadata accessor for FilterSectionDescriptor();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  sub_24EF61900();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 20);
  uint64_t v4 = sub_24EF86A30();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  sub_24EF33D08(*(void *)(v0 + v2 + *(int *)(v1 + 24)), *(unsigned char *)(v0 + v2 + *(int *)(v1 + 24) + 8));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24EF6B984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FilterSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EF6B9E8@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = *(char **)(v1 + 16);
  uint64_t v4 = *(char **)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for FilterSectionDescriptor() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v1 + v7);
  uint64_t v10 = *(void *)(v1 + v8);
  uint64_t v11 = *(void *)(v1 + v8 + 8);
  return sub_24EF668D0((long long *)(v1 + 32), v1 + v6, v9, v10, v11, v3, v4, a1);
}

uint64_t sub_24EF6BAAC()
{
  return objectdestroy_8Tm();
}

uint64_t sub_24EF6BAB4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  return sub_24EF671D0(a1, a2, a3, (long long *)(v3 + 32), *(void *)(v3 + 72), *(void *)(v3 + 16), *(void *)(v3 + 24));
}

unint64_t sub_24EF6BAC4()
{
  unint64_t result = qword_269987398;
  if (!qword_269987398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987398);
  }
  return result;
}

unint64_t sub_24EF6BB18()
{
  unint64_t result = qword_2699873A0;
  if (!qword_2699873A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699873A0);
  }
  return result;
}

unint64_t sub_24EF6BB6C()
{
  unint64_t result = qword_2699873A8;
  if (!qword_2699873A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699873A8);
  }
  return result;
}

unint64_t sub_24EF6BBC0()
{
  unint64_t result = qword_2699873B0;
  if (!qword_2699873B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699873B0);
  }
  return result;
}

unint64_t sub_24EF6BC14()
{
  unint64_t result = qword_2699873B8;
  if (!qword_2699873B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699873B8);
  }
  return result;
}

unint64_t sub_24EF6BC68()
{
  unint64_t result = qword_2699873C0;
  if (!qword_2699873C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699873C0);
  }
  return result;
}

unint64_t sub_24EF6BCBC()
{
  unint64_t result = qword_2699873C8;
  if (!qword_2699873C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699873C8);
  }
  return result;
}

unint64_t sub_24EF6BD10()
{
  unint64_t result = qword_2699873D0;
  if (!qword_2699873D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699873D0);
  }
  return result;
}

unint64_t sub_24EF6BD64()
{
  unint64_t result = qword_2699873D8;
  if (!qword_2699873D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699873D8);
  }
  return result;
}

unint64_t sub_24EF6BDB8()
{
  unint64_t result = qword_2699873E0;
  if (!qword_2699873E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699873E0);
  }
  return result;
}

unint64_t sub_24EF6BE0C()
{
  unint64_t result = qword_2699873E8;
  if (!qword_2699873E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699873E8);
  }
  return result;
}

unint64_t sub_24EF6BE60()
{
  unint64_t result = qword_2699873F0;
  if (!qword_2699873F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699873F0);
  }
  return result;
}

unint64_t sub_24EF6BEB4()
{
  unint64_t result = qword_2699873F8;
  if (!qword_2699873F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699873F8);
  }
  return result;
}

unint64_t sub_24EF6BF08()
{
  unint64_t result = qword_269987400;
  if (!qword_269987400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987400);
  }
  return result;
}

unint64_t sub_24EF6BF5C()
{
  unint64_t result = qword_269987408;
  if (!qword_269987408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987408);
  }
  return result;
}

unint64_t sub_24EF6BFB0()
{
  unint64_t result = qword_269987410;
  if (!qword_269987410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987410);
  }
  return result;
}

unint64_t sub_24EF6C004()
{
  unint64_t result = qword_269987418;
  if (!qword_269987418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987418);
  }
  return result;
}

unint64_t sub_24EF6C058()
{
  unint64_t result = qword_269987420;
  if (!qword_269987420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987420);
  }
  return result;
}

unint64_t sub_24EF6C0AC()
{
  unint64_t result = qword_269987428;
  if (!qword_269987428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987428);
  }
  return result;
}

unint64_t sub_24EF6C100()
{
  unint64_t result = qword_269987430;
  if (!qword_269987430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987430);
  }
  return result;
}

uint64_t sub_24EF6C158(uint64_t a1, uint64_t a2)
{
  return sub_24EF6C300(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void *, void, void, void, void, void, void))sub_24EF6A7AC);
}

uint64_t sub_24EF6C170(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EF6C1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  if (a10) {
    return sub_24EF6C374(a1, a2, a3, a4, a5, a6, a7, a8, a9 & 1);
  }
  return sub_24EF6C204();
}

uint64_t sub_24EF6C204()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF6C24C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EF6C2B0(uint64_t *a1, uint64_t a2)
{
  return sub_24EF6A6E0(a1, a2, v2 + 48, *(void (**)(void *, char *, uint64_t))(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_24EF6C2E8(uint64_t a1, uint64_t a2)
{
  return sub_24EF6C300(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void *, void, void, void, void, void, void))sub_24EF6A610);
}

uint64_t sub_24EF6C300(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void *, void, void, void, void, void, void))
{
  return a3(a1, a2, v3 + 6, v3[11], v3[12], v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_24EF6C340(uint64_t a1, uint64_t a2)
{
  return sub_24EF6C40C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void *, void, void, void, void, void, void))sub_24EF6A548);
}

uint64_t sub_24EF6C35C(uint64_t a1, uint64_t a2)
{
  return sub_24EF6C300(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void *, void, void, void, void, void, void))sub_24EF6A480);
}

uint64_t sub_24EF6C374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9) {
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF6C3F4(uint64_t a1, uint64_t a2)
{
  return sub_24EF6C40C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void *, void, void, void, void, void, void))sub_24EF6A3B8);
}

uint64_t sub_24EF6C40C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void *, void, void, void, void, void, void))
{
  return a3(a1, a2, v3 + 6, v3[11], v3[12], v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_24EF6C44C(uint64_t a1, uint64_t a2)
{
  return sub_24EF6A2F8(a1, a2, v2 + 48, *(void (**)(void *, char *, uint64_t))(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t objectdestroy_38Tm()
{
  sub_24EF61900();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EF6C4D0(uint64_t a1, uint64_t a2)
{
  return sub_24EF6C40C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void *, void, void, void, void, void, void))sub_24EF6A230);
}

uint64_t sub_24EF6C4E8(uint64_t a1, uint64_t a2, void (*a3)(void *, char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11)
{
  uint64_t v29 = a3;
  uint64_t v35 = a6;
  uint64_t v36 = a8;
  long long v37 = a9;
  uint64_t v38 = a10;
  uint64_t v39 = a11;
  uint64_t v15 = type metadata accessor for Option();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  BOOL v19 = (char *)&v29 - v18;
  uint64_t v20 = *(int *)(v17 + 68);
  int v21 = *(unsigned __int8 *)(a1 + v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v29 - v18, a1, v15);
  if (v21 == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  else
  {
    int v22 = v19[*(int *)(v15 + 68)];
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    if (v22 != 2) {
      return result;
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 8))(&v35, a6, a8);
  uint64_t v24 = v35;
  uint64_t v25 = v36;
  long long v26 = v37;
  uint64_t v27 = v38;
  unsigned __int8 v28 = v39;
  v31[0] = v35;
  v31[1] = v36;
  long long v32 = v37;
  uint64_t v33 = v38;
  char v34 = v39;
  char v30 = *(unsigned char *)(a1 + v20);
  v29(v31, &v30, a2);
  return sub_24EEF7780(v24, v25, v26, *((uint64_t *)&v26 + 1), v27, v28);
}

uint64_t sub_24EF6C6C4()
{
  return objectdestroy_8Tm();
}

uint64_t objectdestroy_8Tm()
{
  sub_24EF61900();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EF6C71C()
{
  return sub_24EF6B09C(v0 + 32);
}

uint64_t sub_24EF6C740@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF6B194(a1);
}

uint64_t sub_24EF6C750@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24EF86CC0();
  *a1 = result;
  return result;
}

uint64_t sub_24EF6C77C()
{
  return sub_24EF86CD0();
}

unint64_t sub_24EF6C7A8()
{
  unint64_t result = qword_269987470;
  if (!qword_269987470)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987468);
    sub_24EF6C848();
    sub_24EEFD4C4(&qword_269986528, &qword_269986530);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987470);
  }
  return result;
}

unint64_t sub_24EF6C848()
{
  unint64_t result = qword_269987478;
  if (!qword_269987478)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987480);
    sub_24EEFD4C4(&qword_269987488, &qword_269987490);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987478);
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t destroy for SelectedFilterItemButton()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for SelectedFilterItemButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SelectedFilterItemButton(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SelectedFilterItemButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SelectedFilterItemButton()
{
  return &type metadata for SelectedFilterItemButton;
}

uint64_t sub_24EF6CA68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EF6CA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v72 = a3;
  uint64_t v4 = sub_24EF87400();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v71 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987518) - 8;
  MEMORY[0x270FA5388](v70);
  uint64_t v69 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699874E8) - 8;
  MEMORY[0x270FA5388](v66);
  unint64_t v65 = (uint64_t *)((char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = sub_24EF87340();
  uint64_t v73 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v62 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699874D8) - 8;
  MEMORY[0x270FA5388](v63);
  uint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699874C8) - 8;
  MEMORY[0x270FA5388](v68);
  uint64_t v67 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EF87310();
  uint64_t v12 = sub_24EF870D0();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  uint64_t v17 = sub_24EF87080();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_24EEFD518(v12, v14, v16);
  swift_bridgeObjectRelease();
  uint64_t v74 = v61;
  uint64_t v75 = a2;
  sub_24EEFD5C4();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_24EF870C0();
  uint64_t v24 = v23;
  LOBYTE(a2) = v25 & 1;
  uint64_t v59 = sub_24EF87080();
  uint64_t v58 = v26;
  uint64_t v60 = v27;
  LOBYTE(v12) = v28 & 1;
  sub_24EEFD518(v22, v24, a2);
  swift_bridgeObjectRelease();
  sub_24EEFD518(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_24EF87050();
  sub_24EF87000();
  swift_release();
  uint64_t v29 = v59;
  uint64_t v30 = v58;
  uint64_t v31 = sub_24EF870A0();
  uint64_t v33 = v32;
  LOBYTE(v24) = v34;
  uint64_t v61 = v35;
  swift_release();
  char v36 = v24 & 1;
  sub_24EEFD518(v29, v30, v12);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v38 = v73;
  uint64_t v39 = v62;
  uint64_t v40 = v64;
  (*(void (**)(char *, void, uint64_t))(v73 + 104))(v62, *MEMORY[0x263F1B530], v64);
  uint64_t v41 = swift_getKeyPath();
  uint64_t v42 = v65;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)v65 + *(int *)(v66 + 36), v39, v40);
  *uint64_t v42 = v41;
  sub_24EEF7878((uint64_t)v42, (uint64_t)&v10[*(int *)(v63 + 44)], &qword_2699874E8);
  *(void *)uint64_t v10 = v31;
  *((void *)v10 + 1) = v33;
  unsigned char v10[16] = v36;
  *((void *)v10 + 3) = v61;
  *((void *)v10 + 4) = KeyPath;
  *((void *)v10 + 5) = 1;
  v10[48] = 0;
  sub_24EEFD508(v31, v33, v36);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24EEFD568((uint64_t)v42, &qword_2699874E8);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v39, v40);
  sub_24EEFD518(v31, v33, v36);
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v31) = sub_24EF86F90();
  uint64_t v43 = v67;
  sub_24EEF7878((uint64_t)v10, v67, &qword_2699874D8);
  uint64_t v44 = v43 + *(int *)(v68 + 44);
  *(unsigned char *)uint64_t v44 = v31;
  *(_OWORD *)(v44 + 8) = xmmword_24EF8EA00;
  *(_OWORD *)(v44 + 24) = xmmword_24EF8EA10;
  *(unsigned char *)(v44 + 40) = 0;
  sub_24EEFD568((uint64_t)v10, &qword_2699874D8);
  uint64_t v45 = sub_24EF87460();
  uint64_t v47 = v46;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699874B0);
  uint64_t v49 = v72;
  uint64_t v50 = v72 + *(int *)(v48 + 36);
  uint64_t v51 = *MEMORY[0x263F19860];
  uint64_t v52 = sub_24EF86D40();
  uint64_t v53 = (uint64_t)v71;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 104))(v71, v51, v52);
  uint64_t v54 = v69;
  sub_24EEFD3BC(v53, v69);
  uint64_t v55 = v70;
  *(void *)(v54 + *(int *)(v70 + 60)) = 2;
  *(_WORD *)(v54 + *(int *)(v55 + 64)) = 256;
  sub_24EEFD420(v53);
  sub_24EF22C1C(v54, v50, &qword_269987518);
  uint64_t v56 = (uint64_t *)(v50 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699874F8) + 36));
  *uint64_t v56 = v45;
  v56[1] = v47;
  return sub_24EF22C1C(v43, v49, &qword_2699874C8);
}

uint64_t sub_24EF6D0D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v2 = sub_24EF86C40();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699874A0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699874A8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  uint64_t v15 = v1[1];
  uint64_t v17 = v1[2];
  uint64_t v16 = v1[3];
  uint64_t v25 = v14;
  uint64_t v26 = v15;
  uint64_t v27 = v17;
  uint64_t v28 = v16;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699874B0);
  sub_24EF6D3D8();
  sub_24EF87380();
  sub_24EF86C30();
  sub_24EEFD4C4(&qword_269987500, &qword_2699874A0);
  sub_24EF6D594();
  uint64_t v18 = v22;
  sub_24EF87130();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LODWORD(v16) = sub_24EF86E70();
  uint64_t v19 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v24, v13, v10);
  *(_DWORD *)(v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269987510) + 36)) = v16;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_24EF6D3CC@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF6CA84(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_24EF6D3D8()
{
  unint64_t result = qword_2699874B8;
  if (!qword_2699874B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699874B0);
    sub_24EF6D478();
    sub_24EEFD4C4(&qword_2699874F0, &qword_2699874F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699874B8);
  }
  return result;
}

unint64_t sub_24EF6D478()
{
  unint64_t result = qword_2699874C0;
  if (!qword_2699874C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699874C8);
    sub_24EF6D4F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699874C0);
  }
  return result;
}

unint64_t sub_24EF6D4F4()
{
  unint64_t result = qword_2699874D0;
  if (!qword_2699874D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699874D8);
    sub_24EF6C848();
    sub_24EEFD4C4(&qword_2699874E0, &qword_2699874E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699874D0);
  }
  return result;
}

unint64_t sub_24EF6D594()
{
  unint64_t result = qword_269987508;
  if (!qword_269987508)
  {
    sub_24EF86C40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987508);
  }
  return result;
}

uint64_t sub_24EF6D5EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_24EF86D00();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_24EF6D620@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_24EF86D00();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_24EF6D654()
{
  return sub_24EF86D10();
}

uint64_t sub_24EF6D684()
{
  return sub_24EF86D10();
}

uint64_t sub_24EF6D6B4()
{
  return sub_24EF86C60();
}

uint64_t sub_24EF6D6D8(uint64_t a1)
{
  uint64_t v2 = sub_24EF87340();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_24EF86C70();
}

unint64_t sub_24EF6D7A8()
{
  unint64_t result = qword_269987520;
  if (!qword_269987520)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987510);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699874A0);
    sub_24EF86C40();
    sub_24EEFD4C4(&qword_269987500, &qword_2699874A0);
    sub_24EF6D594();
    swift_getOpaqueTypeConformance2();
    sub_24EEFD4C4(&qword_269987528, &qword_269987530);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987520);
  }
  return result;
}

FitnessFiltering::FilterKind __swiftcall FilterItem.filterKind()()
{
  return *(unsigned char *)(v0 + 40);
}

uint64_t FilterOptions.bodyFocuses.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterOptions.categories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterOptions.durations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterOptions.equipment.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterOptions.filterConfigurations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterOptions.modalities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterOptions.musicGenres.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterOptions.skillLevels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterOptions.trainers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FilterOptions.init(bodyFocuses:categories:durations:equipment:filterConfigurations:modalities:musicGenres:skillLevels:trainers:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

unint64_t sub_24EF6D930(char a1)
{
  unint64_t result = 0x75636F4679646F62;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x69726F6765746163;
      break;
    case 2:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 3:
      unint64_t result = 0x6E656D7069757165;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0x6974696C61646F6DLL;
      break;
    case 6:
      unint64_t result = 0x6E6547636973756DLL;
      break;
    case 7:
      unint64_t result = 0x76654C6C6C696B73;
      break;
    case 8:
      unint64_t result = 0x7372656E69617274;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EF6DA74()
{
  return sub_24EF6D930(*v0);
}

uint64_t sub_24EF6DA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF6F3F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF6DAA4(uint64_t a1)
{
  unint64_t v2 = sub_24EF6EF6C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF6DAE0(uint64_t a1)
{
  unint64_t v2 = sub_24EF6EF6C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FilterOptions.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987538);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v25 = v1[2];
  uint64_t v26 = v8;
  uint64_t v10 = v1[3];
  uint64_t v23 = v1[4];
  uint64_t v24 = v10;
  uint64_t v11 = v1[5];
  uint64_t v21 = v1[6];
  uint64_t v22 = v11;
  uint64_t v12 = v1[7];
  uint64_t v19 = v1[8];
  uint64_t v20 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF6EF6C();
  uint64_t v13 = v4;
  sub_24EF87AF0();
  uint64_t v28 = v9;
  char v27 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987548);
  sub_24EF6F110(&qword_269987550, &qword_269987548, (void (*)(void))sub_24EF6BBC0);
  sub_24EF87A20();
  if (!v2)
  {
    uint64_t v14 = v24;
    uint64_t v15 = v25;
    uint64_t v16 = v23;
    uint64_t v28 = v26;
    char v27 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269987558);
    sub_24EF6F110(&qword_269987560, &qword_269987558, (void (*)(void))sub_24EF6EFC0);
    sub_24EF87A20();
    uint64_t v28 = v15;
    char v27 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269987570);
    sub_24EF6F110(&qword_269987578, &qword_269987570, (void (*)(void))sub_24EF2EA64);
    sub_24EF87A20();
    uint64_t v28 = v14;
    char v27 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269987580);
    sub_24EF6F110(&qword_269987588, &qword_269987580, (void (*)(void))sub_24EF6BD10);
    sub_24EF87A20();
    uint64_t v28 = v16;
    char v27 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269987590);
    sub_24EF6F110(&qword_269987598, &qword_269987590, (void (*)(void))sub_24EF6F014);
    sub_24EF87A20();
    uint64_t v28 = v22;
    char v27 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699875A8);
    sub_24EF6F110(&qword_2699875B0, &qword_2699875A8, (void (*)(void))sub_24EF47A68);
    sub_24EF87A20();
    uint64_t v28 = v21;
    char v27 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699875B8);
    sub_24EF6F110(&qword_2699875C0, &qword_2699875B8, (void (*)(void))sub_24EF6BE60);
    sub_24EF87A20();
    uint64_t v28 = v20;
    char v27 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699875C8);
    sub_24EF6F110(&qword_2699875D0, &qword_2699875C8, (void (*)(void))sub_24EF6BFB0);
    sub_24EF87A20();
    uint64_t v28 = v19;
    char v27 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699875D8);
    sub_24EF6F110(&qword_2699875E0, &qword_2699875D8, (void (*)(void))sub_24EF22E98);
    sub_24EF87A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t FilterOptions.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699875E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF6EF6C();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987548);
  char v30 = 0;
  sub_24EF6F110(&qword_2699875F0, &qword_269987548, (void (*)(void))sub_24EF6BB6C);
  sub_24EF87970();
  uint64_t v10 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987558);
  char v30 = 1;
  sub_24EF6F110(&qword_2699875F8, &qword_269987558, (void (*)(void))sub_24EF6F068);
  swift_bridgeObjectRetain();
  sub_24EF87970();
  uint64_t v29 = a2;
  uint64_t v11 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987570);
  char v30 = 2;
  sub_24EF6F110(&qword_269987608, &qword_269987570, (void (*)(void))sub_24EF2EB60);
  swift_bridgeObjectRetain();
  sub_24EF87970();
  uint64_t v12 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987580);
  char v30 = 3;
  sub_24EF6F110(&qword_269987610, &qword_269987580, (void (*)(void))sub_24EF6BCBC);
  uint64_t v28 = v12;
  swift_bridgeObjectRetain();
  sub_24EF87970();
  uint64_t v13 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987590);
  char v30 = 4;
  sub_24EF6F110(&qword_269987618, &qword_269987590, (void (*)(void))sub_24EF6F0BC);
  uint64_t v27 = v13;
  swift_bridgeObjectRetain();
  sub_24EF87970();
  uint64_t v14 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699875A8);
  char v30 = 5;
  sub_24EF6F110(&qword_269987628, &qword_2699875A8, (void (*)(void))sub_24EF47CA4);
  uint64_t v26 = v14;
  swift_bridgeObjectRetain();
  sub_24EF87970();
  uint64_t v15 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699875B8);
  char v30 = 6;
  sub_24EF6F110(&qword_269987630, &qword_2699875B8, (void (*)(void))sub_24EF6BE0C);
  uint64_t v24 = v15;
  swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  sub_24EF87970();
  uint64_t v16 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699875C8);
  char v30 = 7;
  sub_24EF6F110(&qword_269987638, &qword_2699875C8, (void (*)(void))sub_24EF6BF5C);
  uint64_t v25 = v16;
  swift_bridgeObjectRetain();
  sub_24EF87970();
  uint64_t v17 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699875D8);
  char v30 = 8;
  sub_24EF6F110(&qword_269987640, &qword_2699875D8, (void (*)(void))sub_24EF22E44);
  swift_bridgeObjectRetain();
  sub_24EF87970();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v23 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v28;
  swift_bridgeObjectRetain();
  uint64_t v19 = v27;
  swift_bridgeObjectRetain();
  uint64_t v20 = v26;
  swift_bridgeObjectRetain();
  uint64_t v21 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v29;
  *uint64_t v29 = v10;
  v22[1] = v11;
  void v22[2] = v18;
  v22[3] = v19;
  v22[4] = v20;
  v22[5] = v21;
  v22[6] = v25;
  v22[7] = v17;
  v22[8] = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF6EB90@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FilterOptions.init(from:)(a1, a2);
}

uint64_t sub_24EF6EBA8(void *a1)
{
  return FilterOptions.encode(to:)(a1);
}

uint64_t FilterOptions.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v10 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v11 = v1[8];
  swift_bridgeObjectRetain();
  sub_24EEF5F64((uint64_t)a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF6740((uint64_t)a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF656C((uint64_t)a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF5F64((uint64_t)a1, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF6260(a1, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF5F68((uint64_t)a1, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF5F64((uint64_t)a1, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF5C94(a1, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EEF5C94(a1, v11);
  return swift_bridgeObjectRelease();
}

uint64_t FilterOptions.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v5[9] = *(_OWORD *)v0;
  *(_OWORD *)&v5[11] = v2;
  long long v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)&v5[13] = *(_OWORD *)(v0 + 32);
  *(_OWORD *)&v5[15] = v3;
  v5[17] = v1;
  sub_24EF87A90();
  FilterOptions.hash(into:)((long long *)v5);
  return sub_24EF87AD0();
}

uint64_t sub_24EF6ED78()
{
  uint64_t v1 = *(void *)(v0 + 64);
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v5[9] = *(_OWORD *)v0;
  *(_OWORD *)&v5[11] = v2;
  long long v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)&v5[13] = *(_OWORD *)(v0 + 32);
  *(_OWORD *)&v5[15] = v3;
  v5[17] = v1;
  sub_24EF87A90();
  FilterOptions.hash(into:)((long long *)v5);
  return sub_24EF87AD0();
}

uint64_t sub_24EF6EDD8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v5[9] = *(_OWORD *)v0;
  *(_OWORD *)&v5[11] = v2;
  long long v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)&v5[13] = *(_OWORD *)(v0 + 32);
  *(_OWORD *)&v5[15] = v3;
  v5[17] = v1;
  sub_24EF87A90();
  FilterOptions.hash(into:)((long long *)v5);
  return sub_24EF87AD0();
}

uint64_t _s16FitnessFiltering13FilterOptionsV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v16 = a1[7];
  uint64_t v14 = a1[8];
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v17 = a2[6];
  uint64_t v18 = a1[6];
  uint64_t v15 = a2[7];
  uint64_t v13 = a2[8];
  if ((sub_24EF02F7C(*a1, *a2) & 1) == 0
    || (sub_24EF02F80(v2, v7) & 1) == 0
    || (sub_24EF03700(v4, v9) & 1) == 0
    || (sub_24EF03998(v3, v8) & 1) == 0
    || (sub_24EF03E0C(v6, v11) & 1) == 0
    || (sub_24EF042F8(v5, v10) & 1) == 0
    || (sub_24EF02F7C(v18, v17) & 1) == 0
    || (sub_24EF0481C(v16, v15) & 1) == 0)
  {
    return 0;
  }
  return sub_24EF04CD8(v14, v13);
}

unint64_t sub_24EF6EF6C()
{
  unint64_t result = qword_269987540;
  if (!qword_269987540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987540);
  }
  return result;
}

unint64_t sub_24EF6EFC0()
{
  unint64_t result = qword_269987568;
  if (!qword_269987568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987568);
  }
  return result;
}

unint64_t sub_24EF6F014()
{
  unint64_t result = qword_2699875A0;
  if (!qword_2699875A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699875A0);
  }
  return result;
}

unint64_t sub_24EF6F068()
{
  unint64_t result = qword_269987600;
  if (!qword_269987600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987600);
  }
  return result;
}

unint64_t sub_24EF6F0BC()
{
  unint64_t result = qword_269987620;
  if (!qword_269987620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987620);
  }
  return result;
}

uint64_t sub_24EF6F110(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EF6F180()
{
  unint64_t result = qword_269987648;
  if (!qword_269987648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987648);
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterOptions()
{
  return &type metadata for FilterOptions;
}

unsigned char *storeEnumTagSinglePayload for FilterOptions.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF6F2B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterOptions.CodingKeys()
{
  return &type metadata for FilterOptions.CodingKeys;
}

unint64_t sub_24EF6F2EC()
{
  unint64_t result = qword_269987650;
  if (!qword_269987650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987650);
  }
  return result;
}

unint64_t sub_24EF6F344()
{
  unint64_t result = qword_269987658;
  if (!qword_269987658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987658);
  }
  return result;
}

unint64_t sub_24EF6F39C()
{
  unint64_t result = qword_269987660[0];
  if (!qword_269987660[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269987660);
  }
  return result;
}

uint64_t sub_24EF6F3F0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x75636F4679646F62 && a2 == 0xEB00000000736573 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69726F6765746163 && a2 == 0xEA00000000007365 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE900000000000073 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E656D7069757165 && a2 == 0xE900000000000074 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024EF91060 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6974696C61646F6DLL && a2 == 0xEA00000000007365 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E6547636973756DLL && a2 == 0xEB00000000736572 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x76654C6C6C696B73 && a2 == 0xEB00000000736C65 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7372656E69617274 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_24EF6F7D8(uint64_t a1, char a2)
{
  uint64_t v4 = sub_24EF86A60();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24EF87630();
  MEMORY[0x270FA5388](v8 - 8);
  switch(a2)
  {
    case 1:
      sub_24EF875C0();
      if (qword_269985870 != -1) {
        goto LABEL_18;
      }
      break;
    case 2:
      sub_24EF875C0();
      if (qword_269985870 != -1) {
        goto LABEL_18;
      }
      break;
    case 3:
      sub_24EF875C0();
      if (qword_269985870 != -1) {
        goto LABEL_18;
      }
      break;
    case 4:
      sub_24EF875C0();
      if (qword_269985870 != -1) {
        goto LABEL_18;
      }
      break;
    case 5:
      sub_24EF875C0();
      if (qword_269985870 != -1) {
        goto LABEL_18;
      }
      break;
    case 6:
      sub_24EF875C0();
      if (qword_269985870 != -1) {
        goto LABEL_18;
      }
      break;
    case 7:
      sub_24EF875C0();
      if (qword_269985870 != -1) {
        goto LABEL_18;
      }
      break;
    default:
      sub_24EF875C0();
      if (qword_269985870 != -1) {
LABEL_18:
      }
        swift_once();
      break;
  }
  uint64_t v9 = (void *)qword_269997D90;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  id v10 = v9;
  return sub_24EF87640();
}

uint64_t Option.id.getter()
{
  sub_24EF87860();
  return v1;
}

uint64_t Option.identifier.getter()
{
  sub_24EF87860();
  return v1;
}

uint64_t Option.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Option.state.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 68));
  return result;
}

BOOL sub_24EF6FE6C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24EF6FE7C()
{
  return sub_24EF87AA0();
}

uint64_t sub_24EF6FEA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EF6FF90()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF6FFD8(char a1)
{
  if (a1) {
    return 0x6574617473;
  }
  else {
    return 0x746E65746E6F63;
  }
}

BOOL sub_24EF7000C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24EF6FE6C(*a1, *a2);
}

uint64_t sub_24EF70028()
{
  return sub_24EF6FF90();
}

uint64_t sub_24EF70040()
{
  return sub_24EF6FE7C();
}

uint64_t sub_24EF70058()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF700A8()
{
  return sub_24EF6FFD8(*v0);
}

uint64_t sub_24EF700C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF6FEA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF700F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24EF71250();
  *a1 = result;
  return result;
}

uint64_t sub_24EF70130(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EF70184(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24EF701D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Option.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t Option.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  long long v15 = *(_OWORD *)(a2 + 16);
  long long v17 = v15;
  uint64_t v18 = v4;
  long long v13 = *(_OWORD *)(a2 + 40);
  long long v19 = v13;
  uint64_t v20 = v5;
  type metadata accessor for Option.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_24EF87A30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = v14;
  sub_24EF87AF0();
  LOBYTE(v17) = 0;
  uint64_t v11 = v16;
  sub_24EF87A20();
  if (!v11)
  {
    LOBYTE(v17) = *(unsigned char *)(v10 + *(int *)(a2 + 68));
    char v21 = 1;
    sub_24EF25F8C();
    sub_24EF87A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t type metadata accessor for Option.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t Option.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v43 = a7;
  uint64_t v36 = a8;
  uint64_t v38 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v39 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v15;
  uint64_t v46 = v16;
  uint64_t v47 = v17;
  uint64_t v48 = v18;
  uint64_t v49 = v19;
  uint64_t v50 = v20;
  type metadata accessor for Option.CodingKeys();
  swift_getWitnessTable();
  uint64_t v42 = sub_24EF87990();
  uint64_t v37 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v22 = (char *)&v35 - v21;
  uint64_t v40 = a2;
  uint64_t v41 = a4;
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v49 = a6;
  uint64_t v50 = v43;
  uint64_t v23 = type metadata accessor for Option();
  uint64_t v35 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v35 - v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v43 = v22;
  uint64_t v26 = (uint64_t)v44;
  sub_24EF87AE0();
  if (v26) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v27 = v25;
  uint64_t v28 = v37;
  uint64_t v29 = v38;
  uint64_t v44 = a1;
  LOBYTE(v45) = 0;
  uint64_t v31 = v39;
  uint64_t v30 = v40;
  uint64_t v32 = v42;
  sub_24EF87970();
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v27, v31, v30);
  char v51 = 1;
  sub_24EF278AC();
  sub_24EF87970();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v43, v32);
  v27[*(int *)(v23 + 68)] = v45;
  uint64_t v33 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v36, v27, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v27, v23);
}

uint64_t type metadata accessor for Option()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EF707DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return Option.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), *(void *)(a2 + 32), *(void *)(a2 + 40), *(void *)(a2 + 48), *(char **)(a2 + 56), a3);
}

uint64_t sub_24EF70804(void *a1, uint64_t a2)
{
  return Option.encode(to:)(a1, a2);
}

uint64_t Option.hash(into:)()
{
  return sub_24EF87AA0();
}

BOOL static Option.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_24EF875B0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for Option();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 68)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 68));
}

uint64_t Option.hashValue.getter()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF70964()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF709A8()
{
  return swift_getWitnessTable();
}

BOOL sub_24EF709C4(uint64_t a1, uint64_t a2)
{
  return static Option.== infix(_:_:)(a1, a2);
}

uint64_t sub_24EF709D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_24EF709E0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_24EF70A78(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
  }
  else
  {
    uint64_t v10 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_24EF70B4C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_24EF70B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 48) + a1) = *(unsigned char *)(*(void *)(v5 + 48) + a2);
  return a1;
}

uint64_t sub_24EF70BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 40) + a1) = *(unsigned char *)(*(void *)(v5 + 40) + a2);
  return a1;
}

uint64_t sub_24EF70C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 32) + a1) = *(unsigned char *)(*(void *)(v5 + 32) + a2);
  return a1;
}

uint64_t sub_24EF70CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 24) + a1) = *(unsigned char *)(*(void *)(v5 + 24) + a2);
  return a1;
}

uint64_t sub_24EF70D18(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFD) {
    unsigned int v7 = 253;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = v6 + 1;
  char v10 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 >= 0xFD) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      unsigned int v15 = *((unsigned __int8 *)a1 + v6);
      if (v15 >= 3) {
        return v15 - 2;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_24EF70E9C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFD) {
    unsigned int v8 = 253;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = v9 + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x24EF710D8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0xFD)
        {
          a1[v9] = a2 + 2;
        }
        else
        {
          uint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return;
  }
}

uint64_t sub_24EF71100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

unsigned char *sub_24EF71108(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF711D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24EF711FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EF71218()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EF71234()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EF71250()
{
  return 2;
}

void *static FilterSortMode.allCases.getter()
{
  return &unk_27009B8D0;
}

unint64_t FilterSortMode.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C655265746164;
      break;
    case 2:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 3:
      unint64_t result = 0x7974696C61646F6DLL;
      break;
    case 4:
      unint64_t result = 0x6E6547636973756DLL;
      break;
    case 5:
      unint64_t result = 1701736302;
      break;
    case 6:
      unint64_t result = 0x4E72656E69617274;
      break;
    case 7:
      unint64_t result = 0x6D614E656D656874;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF71390(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = FilterSortMode.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == FilterSortMode.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24EF87A60();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24EF7141C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s16FitnessFiltering14FilterSortModeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_24EF7144C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FilterSortMode.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_24EF71478(void *a1@<X8>)
{
  *a1 = &unk_27009B8D0;
}

uint64_t sub_24EF71488()
{
  return sub_24EF87700();
}

uint64_t sub_24EF714E8()
{
  return sub_24EF876F0();
}

uint64_t sub_24EF71538()
{
  char v1 = *v0;
  sub_24EF87A90();
  FilterSortMode.rawValue.getter(v1);
  sub_24EF87670();
  swift_bridgeObjectRelease();
  return sub_24EF87AD0();
}

uint64_t sub_24EF7159C()
{
  FilterSortMode.rawValue.getter(*v0);
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF715F0()
{
  char v1 = *v0;
  sub_24EF87A90();
  FilterSortMode.rawValue.getter(v1);
  sub_24EF87670();
  swift_bridgeObjectRelease();
  return sub_24EF87AD0();
}

uint64_t _s16FitnessFiltering14FilterSortModeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24EF878D0();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

unint64_t sub_24EF716A0()
{
  unint64_t result = qword_269987768;
  if (!qword_269987768)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269986AD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987768);
  }
  return result;
}

unint64_t sub_24EF71700()
{
  unint64_t result = qword_269987770;
  if (!qword_269987770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987770);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FilterSortMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF71820);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterSortMode()
{
  return &type metadata for FilterSortMode;
}

unint64_t sub_24EF71858()
{
  unint64_t result = qword_269987778;
  if (!qword_269987778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987778);
  }
  return result;
}

uint64_t Equipment.artworks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Equipment.iconName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Equipment.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Equipment.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Equipment.init(artworks:iconName:identifier:name:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t sub_24EF71958()
{
  uint64_t result = 0x736B726F77747261;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D614E6E6F6369;
      break;
    case 2:
      uint64_t result = 0x696669746E656469;
      break;
    case 3:
      uint64_t result = 1701667182;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF719E0(uint64_t a1)
{
  unint64_t v2 = sub_24EF71C98();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF71A1C(uint64_t a1)
{
  unint64_t v2 = sub_24EF71C98();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Equipment.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987780);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned int v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  v13[5] = v1[2];
  v13[6] = v8;
  uint64_t v10 = v1[3];
  void v13[3] = v1[4];
  v13[4] = v10;
  uint64_t v11 = v1[5];
  v13[1] = v1[6];
  _OWORD v13[2] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF71C98();
  sub_24EF87AF0();
  uint64_t v18 = v9;
  char v17 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  sub_24EF4C1CC(&qword_269985890, &qword_269985898);
  sub_24EF87A20();
  if (!v2)
  {
    char v16 = 1;
    sub_24EF879B0();
    char v15 = 2;
    sub_24EF879D0();
    char v14 = 3;
    sub_24EF879D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EF71C98()
{
  unint64_t result = qword_269987788;
  if (!qword_269987788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987788);
  }
  return result;
}

uint64_t Equipment.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987790);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF71C98();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  char v34 = 0;
  sub_24EF4C1CC(&qword_2699858A8, &qword_2699858B0);
  sub_24EF87970();
  uint64_t v9 = v35;
  char v33 = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24EF87900();
  uint64_t v30 = v11;
  uint64_t v28 = v10;
  uint64_t v29 = v9;
  char v32 = 2;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_24EF87920();
  uint64_t v27 = v12;
  char v31 = 3;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24EF87920();
  uint64_t v16 = v15;
  char v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v25 = v13;
  v17(v8, v5);
  uint64_t v18 = v29;
  swift_bridgeObjectRetain();
  uint64_t v19 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v27;
  uint64_t v20 = v28;
  *a2 = v18;
  a2[1] = v20;
  uint64_t v22 = v26;
  a2[2] = v19;
  a2[3] = v22;
  uint64_t v23 = v25;
  a2[4] = v21;
  a2[5] = v23;
  a2[6] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF72094@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Equipment.init(from:)(a1, a2);
}

uint64_t sub_24EF720AC(void *a1)
{
  return Equipment.encode(to:)(a1);
}

uint64_t Equipment.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(a1, v3);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t Equipment.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  sub_24EF87A90();
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(v4, v1);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  return sub_24EF87AD0();
}

unint64_t sub_24EF722C4()
{
  unint64_t result = qword_269987798;
  if (!qword_269987798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987798);
  }
  return result;
}

ValueMetadata *type metadata accessor for Equipment()
{
  return &type metadata for Equipment;
}

unsigned char *storeEnumTagSinglePayload for Equipment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF723F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Equipment.CodingKeys()
{
  return &type metadata for Equipment.CodingKeys;
}

unint64_t sub_24EF72430()
{
  unint64_t result = qword_2699877A0;
  if (!qword_2699877A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699877A0);
  }
  return result;
}

unint64_t sub_24EF72488()
{
  unint64_t result = qword_2699877A8;
  if (!qword_2699877A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699877A8);
  }
  return result;
}

unint64_t sub_24EF724E0()
{
  unint64_t result = qword_2699877B0;
  if (!qword_2699877B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699877B0);
  }
  return result;
}

unint64_t sub_24EF72538(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699877C0);
  uint64_t v2 = sub_24EF878C0();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24EF72B90(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_24EF7281C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_24EF72BF8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24EF72664(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985E50);
  uint64_t v2 = (void *)sub_24EF878C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_24EF7281C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t HKWorkoutActivityType.activityTypeSystemName.getter(uint64_t a1)
{
  uint64_t v2 = 0x726568746FLL;
  unint64_t v3 = sub_24EF72A80(qword_27009B8F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699877B8);
  swift_arrayDestroy();
  if (*(void *)(v3 + 16))
  {
    unint64_t v4 = sub_24EF72894(a1);
    if (v5)
    {
      uint64_t v2 = *(void *)(*(void *)(v3 + 56) + 16 * v4);
      swift_bridgeObjectRetain();
    }
  }
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_24EF7281C(uint64_t a1, uint64_t a2)
{
  sub_24EF87A90();
  sub_24EF87670();
  uint64_t v4 = sub_24EF87AD0();
  return sub_24EF72900(a1, a2, v4);
}

unint64_t sub_24EF72894(uint64_t a1)
{
  sub_24EF87A90();
  sub_24EF87AA0();
  uint64_t v2 = sub_24EF87AD0();
  return sub_24EF729E4(a1, v2);
}

unint64_t sub_24EF72900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24EF87A60() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24EF87A60() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24EF729E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_24EF72A80(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699877D0);
  uint64_t v3 = (void *)sub_24EF878C0();
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_24EF72894(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    char v10 = (void *)(v3[7] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v14 = v9 + 3;
    uint64_t v4 = *(v9 - 2);
    uint64_t v5 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_24EF72894(v4);
    uint64_t v9 = v14;
    uint64_t v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24EF72B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699877C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_24EF72BF8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void TimedFilterContent.minutes.getter(uint64_t a1, uint64_t a2)
{
  double v2 = round((*(double (**)(void))(a2 + 8))() / 60.0);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 >= 9.22337204e18) {
LABEL_7:
  }
    __break(1u);
}

uint64_t dispatch thunk of TimedFilterContent.seconds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t SkillLevel.artworks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SkillLevel.iconName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SkillLevel.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SkillLevel.kind.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SkillLevel.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SkillLevel.init(artworks:iconName:identifier:kind:name:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

uint64_t sub_24EF72D7C()
{
  uint64_t result = 0x736B726F77747261;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D614E6E6F6369;
      break;
    case 2:
      uint64_t result = 0x696669746E656469;
      break;
    case 3:
      uint64_t result = 1684957547;
      break;
    case 4:
      uint64_t result = 1701667182;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EF72E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF73B2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF72E40(uint64_t a1)
{
  unint64_t v2 = sub_24EF7312C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF72E7C(uint64_t a1)
{
  unint64_t v2 = sub_24EF7312C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SkillLevel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699877D8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  v14[7] = v1[2];
  v14[8] = v8;
  uint64_t v10 = v1[3];
  v14[5] = v1[4];
  void v14[6] = v10;
  uint64_t v11 = v1[5];
  v14[3] = v1[6];
  v14[4] = v11;
  uint64_t v12 = v1[8];
  v14[1] = v1[7];
  v14[2] = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF7312C();
  sub_24EF87AF0();
  uint64_t v20 = v9;
  char v19 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  sub_24EF4C1CC(&qword_269985890, &qword_269985898);
  sub_24EF87A20();
  if (!v2)
  {
    char v18 = 1;
    sub_24EF879B0();
    char v17 = 2;
    sub_24EF879D0();
    char v16 = 3;
    sub_24EF879B0();
    char v15 = 4;
    sub_24EF879D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EF7312C()
{
  unint64_t result = qword_2699877E0;
  if (!qword_2699877E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699877E0);
  }
  return result;
}

uint64_t SkillLevel.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699877E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF7312C();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985888);
  char v43 = 0;
  sub_24EF4C1CC(&qword_2699858A8, &qword_2699858B0);
  sub_24EF87970();
  uint64_t v9 = v44;
  char v42 = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24EF87900();
  uint64_t v38 = v11;
  uint64_t v35 = v10;
  uint64_t v37 = v9;
  char v41 = 2;
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_24EF87920();
  char v40 = 3;
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_24EF87900();
  uint64_t v36 = v13;
  uint64_t v32 = v14;
  uint64_t v33 = v15;
  char v39 = 4;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_24EF87920();
  uint64_t v17 = v37;
  uint64_t v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v31 = v16;
  v21(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v22 = v17;
  uint64_t v23 = v38;
  swift_bridgeObjectRetain();
  uint64_t v24 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v35;
  *a2 = v22;
  a2[1] = v25;
  uint64_t v27 = v33;
  uint64_t v26 = v34;
  a2[2] = v23;
  a2[3] = v26;
  uint64_t v28 = v32;
  a2[4] = v24;
  a2[5] = v28;
  uint64_t v29 = v31;
  a2[6] = v27;
  a2[7] = v29;
  a2[8] = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF735F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SkillLevel.init(from:)(a1, a2);
}

uint64_t sub_24EF73610(void *a1)
{
  return SkillLevel.encode(to:)(a1);
}

uint64_t SkillLevel.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[6];
  swift_bridgeObjectRetain();
  sub_24EEF4E6C(a1, v3);
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  swift_bridgeObjectRelease();
  sub_24EF87AB0();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_24EF87670();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EF87670();
  return swift_bridgeObjectRelease();
}

uint64_t SkillLevel.hashValue.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v7 = *v0;
  long long v8 = *(_OWORD *)(v0 + 1);
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  long long v11 = *(_OWORD *)(v0 + 5);
  uint64_t v12 = v3;
  uint64_t v13 = v4;
  sub_24EF87A90();
  SkillLevel.hash(into:)(v6);
  return sub_24EF87AD0();
}

uint64_t sub_24EF737E0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v7 = *v0;
  long long v8 = *(_OWORD *)(v0 + 1);
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  long long v11 = *(_OWORD *)(v0 + 5);
  uint64_t v12 = v3;
  uint64_t v13 = v4;
  sub_24EF87A90();
  SkillLevel.hash(into:)(v6);
  return sub_24EF87AD0();
}

uint64_t sub_24EF73850()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v7 = *v0;
  long long v8 = *(_OWORD *)(v0 + 1);
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  long long v11 = *(_OWORD *)(v0 + 5);
  uint64_t v12 = v3;
  uint64_t v13 = v4;
  sub_24EF87A90();
  SkillLevel.hash(into:)(v6);
  return sub_24EF87AD0();
}

unint64_t sub_24EF738BC()
{
  unint64_t result = qword_2699877F0;
  if (!qword_2699877F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699877F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SkillLevel()
{
  return &type metadata for SkillLevel;
}

unsigned char *storeEnumTagSinglePayload for SkillLevel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF739ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SkillLevel.CodingKeys()
{
  return &type metadata for SkillLevel.CodingKeys;
}

unint64_t sub_24EF73A28()
{
  unint64_t result = qword_2699877F8;
  if (!qword_2699877F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699877F8);
  }
  return result;
}

unint64_t sub_24EF73A80()
{
  unint64_t result = qword_269987800;
  if (!qword_269987800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987800);
  }
  return result;
}

unint64_t sub_24EF73AD8()
{
  unint64_t result = qword_269987808;
  if (!qword_269987808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987808);
  }
  return result;
}

uint64_t sub_24EF73B2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736B726F77747261 && a2 == 0xE800000000000000;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E6E6F6369 && a2 == 0xE800000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24EF73D3C()
{
  return sub_24EF86B60();
}

uint64_t FilterDurationSectionView.init(headerViewBuilder:locale:options:onOptionSelected:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = a1;
  a7[1] = a2;
  uint64_t v12 = (int *)type metadata accessor for FilterDurationSectionView();
  uint64_t v13 = (char *)a7 + v12[23];
  uint64_t v14 = sub_24EF86A60();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a3, v14);
  *(void *)((char *)a7 + v12[25]) = a4;
  uint64_t v16 = (void *)((char *)a7 + v12[24]);
  *uint64_t v16 = a5;
  v16[1] = a6;
  return result;
}

uint64_t type metadata accessor for FilterDurationSectionView()
{
  return swift_getGenericMetadata();
}

uint64_t FilterDurationSectionView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v3 = a1[3];
  uint64_t v17 = a1[2];
  uint64_t v18 = a1[4];
  uint64_t v22 = a1[6];
  uint64_t v21 = a1[7];
  uint64_t v20 = a1[8];
  uint64_t v19 = a1[9];
  uint64_t v43 = v19;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  sub_24EF87730();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987810);
  swift_getWitnessTable();
  uint64_t v42 = MEMORY[0x263F8D320];
  sub_24EF87420();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987818);
  sub_24EF74420();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  sub_24EF873B0();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  sub_24EF86B50();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v39 = sub_24EF86F30();
  uint64_t v40 = swift_getOpaqueTypeConformance2();
  uint64_t v41 = MEMORY[0x263F1A480];
  swift_getOpaqueTypeMetadata2();
  sub_24EF86C00();
  sub_24EF86C00();
  swift_getTupleTypeMetadata2();
  sub_24EF874A0();
  swift_getWitnessTable();
  uint64_t v4 = sub_24EF873E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = sub_24EF86C00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v17 - v10;
  sub_24EF86D90();
  uint64_t v25 = v17;
  uint64_t v26 = v3;
  uint64_t v12 = a1[5];
  uint64_t v27 = v18;
  uint64_t v28 = v12;
  uint64_t v29 = v22;
  uint64_t v30 = v21;
  uint64_t v31 = v20;
  uint64_t v32 = v19;
  uint64_t v33 = a1[10];
  uint64_t v34 = v23;
  sub_24EF873D0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EF872B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v14 = sub_24EF86F80();
  uint64_t v35 = WitnessTable;
  uint64_t v36 = MEMORY[0x263F190E0];
  uint64_t v15 = swift_getWitnessTable();
  sub_24EEFBE98(v14, 0x4034000000000000, 0, v8, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_24EF74420()
{
  unint64_t result = qword_269987820;
  if (!qword_269987820)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987818);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987828);
    sub_24EEFD4C4(qword_269987830, &qword_269987828);
    sub_24EEF97F4();
    swift_getOpaqueTypeConformance2();
    sub_24EEFD4C4(&qword_2699859D8, &qword_2699859E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987820);
  }
  return result;
}

uint64_t sub_24EF74534@<X0>(void (**a1)(uint64_t)@<X0>, char *a2@<X1>, char *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v98 = a8;
  uint64_t v97 = a7;
  uint64_t v96 = a6;
  uint64_t v121 = a5;
  unint64_t v94 = a4;
  uint64_t v131 = a2;
  uint64_t v130 = a9;
  uint64_t v132 = a11;
  uint64_t v95 = a10;
  uint64_t v18 = sub_24EF86F10();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v127 = (char *)v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24EF86F30();
  uint64_t v128 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v126 = (char *)v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_24EF86EF0();
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v123 = (char *)v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_24EF86DF0();
  uint64_t v120 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  long long v102 = (char *)v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = a2;
  unint64_t v147 = a4;
  uint64_t v148 = a6;
  uint64_t v149 = a7;
  uint64_t v150 = a8;
  uint64_t v151 = a10;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  uint64_t v24 = sub_24EF87730();
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987810);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v146 = (char *)v24;
  unint64_t v147 = MEMORY[0x263F8D310];
  uint64_t v148 = v25;
  uint64_t v149 = WitnessTable;
  uint64_t v150 = MEMORY[0x263F8D320];
  sub_24EF87420();
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987818);
  unint64_t v28 = sub_24EF74420();
  uint64_t v146 = (char *)v27;
  unint64_t v147 = v28;
  v145[6] = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v29 = sub_24EF873B0();
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v146 = (char *)v29;
  unint64_t v147 = v30;
  v91[1] = swift_getOpaqueTypeMetadata2();
  uint64_t v146 = (char *)v29;
  unint64_t v147 = v30;
  v91[0] = swift_getOpaqueTypeConformance2();
  uint64_t v31 = sub_24EF86B50();
  uint64_t v92 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)v91 - v32;
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v146 = (char *)v31;
  unint64_t v147 = v34;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v111 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v107 = (char *)v91 - v36;
  uint64_t v146 = (char *)v31;
  unint64_t v147 = v34;
  v91[2] = v34;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v146 = (char *)OpaqueTypeMetadata2;
  unint64_t v147 = OpaqueTypeConformance2;
  uint64_t v38 = swift_getOpaqueTypeMetadata2();
  uint64_t v109 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  long long v101 = (char *)v91 - v39;
  uint64_t v105 = OpaqueTypeMetadata2;
  uint64_t v146 = (char *)OpaqueTypeMetadata2;
  unint64_t v147 = OpaqueTypeConformance2;
  uint64_t v93 = OpaqueTypeConformance2;
  uint64_t v40 = swift_getOpaqueTypeConformance2();
  uint64_t v146 = (char *)v38;
  unint64_t v147 = v20;
  uint64_t v129 = v20;
  uint64_t v100 = v40;
  uint64_t v148 = v40;
  uint64_t v149 = MEMORY[0x263F1A480];
  uint64_t v41 = swift_getOpaqueTypeMetadata2();
  uint64_t v103 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v99 = (char *)v91 - v42;
  uint64_t v104 = v43;
  uint64_t v44 = sub_24EF86C00();
  uint64_t v115 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v110 = (char *)v91 - v45;
  uint64_t v116 = v46;
  uint64_t v47 = sub_24EF86C00();
  uint64_t v118 = *(void *)(v47 - 8);
  uint64_t v48 = MEMORY[0x270FA5388](v47);
  uint64_t v119 = (char *)v91 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  long long v108 = (char *)v91 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v117 = (char *)v91 - v53;
  uint64_t v54 = a3;
  uint64_t v55 = *((void *)a3 - 1);
  uint64_t v56 = MEMORY[0x270FA5388](v52);
  uint64_t v58 = (char *)v91 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = MEMORY[0x270FA5388](v56);
  uint64_t v61 = (char *)v91 - v60;
  (*a1)(v59);
  uint64_t v114 = v61;
  uint64_t v62 = v132;
  sub_24EF7FD6C(v58, v54, v132);
  uint64_t v106 = v55;
  uint64_t v63 = *(uint64_t (**)(char *, char *))(v55 + 8);
  uint64_t v113 = v55 + 8;
  unint64_t v112 = v63;
  v63(v58, v54);
  sub_24EF86F50();
  uint64_t v133 = v131;
  uint64_t v131 = v54;
  uint64_t v134 = v54;
  unint64_t v135 = v94;
  uint64_t v136 = v121;
  uint64_t v137 = v96;
  uint64_t v138 = v97;
  uint64_t v139 = v98;
  uint64_t v140 = v95;
  uint64_t v141 = v62;
  char v142 = a1;
  uint64_t v64 = v102;
  sub_24EF86B60();
  sub_24EF86DE0();
  LOBYTE(v55) = sub_24EF86F50();
  sub_24EF86F60();
  sub_24EF86F60();
  if (sub_24EF86F60() != v55) {
    sub_24EF86F60();
  }
  unint64_t v65 = v107;
  sub_24EF871D0();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v64, v122);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v33, v31);
  uint64_t v66 = v123;
  sub_24EF86ED0();
  unsigned __int8 v67 = sub_24EF86F70();
  unsigned __int8 v68 = sub_24EF86F50();
  sub_24EF86F60();
  sub_24EF86F60();
  if (sub_24EF86F60() != v67) {
    sub_24EF86F60();
  }
  sub_24EF86F60();
  if (sub_24EF86F60() != v68) {
    sub_24EF86F60();
  }
  uint64_t v69 = v101;
  uint64_t v70 = v105;
  sub_24EF871B0();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v66, v125);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v65, v70);
  sub_24EF86F00();
  uint64_t v71 = v126;
  sub_24EF86F20();
  uint64_t v72 = v99;
  unint64_t v73 = v129;
  uint64_t v74 = v100;
  uint64_t v75 = MEMORY[0x263F1A480];
  sub_24EF871E0();
  (*(void (**)(char *, unint64_t))(v128 + 8))(v71, v73);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v69, v38);
  uint64_t v146 = (char *)v38;
  unint64_t v147 = v73;
  uint64_t v148 = v74;
  uint64_t v149 = v75;
  uint64_t v76 = swift_getOpaqueTypeConformance2();
  uint64_t v77 = v110;
  uint64_t v78 = v104;
  sub_24EF872B0();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v72, v78);
  sub_24EF87460();
  v145[4] = v76;
  v145[5] = MEMORY[0x263F190E0];
  uint64_t v89 = v116;
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v79 = v108;
  sub_24EF87240();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v77, v89);
  v145[2] = v90;
  v145[3] = MEMORY[0x263F19100];
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v81 = v117;
  sub_24EF7FD6C(v79, v47, v80);
  uint64_t v82 = v118;
  uint64_t v83 = *(void (**)(char *, uint64_t))(v118 + 8);
  v83(v79, v47);
  uint64_t v84 = v114;
  uint64_t v85 = v131;
  (*(void (**)(char *, char *, char *))(v106 + 16))(v58, v114, v131);
  uint64_t v146 = v58;
  uint64_t v86 = v119;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v119, v81, v47);
  unint64_t v147 = (unint64_t)v86;
  v145[0] = v85;
  v145[1] = v47;
  uint64_t v143 = v132;
  uint64_t v144 = v80;
  sub_24EF7FDA8((uint64_t)&v146, 2uLL, (uint64_t)v145);
  v83(v81, v47);
  uint64_t v87 = v112;
  v112(v84, v85);
  v83(v86, v47);
  return v87(v58, v85);
}

uint64_t sub_24EF75404()
{
  return sub_24EF787D4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void))sub_24EF74534);
}

uint64_t sub_24EF7541C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EF75470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v32 = a8;
  uint64_t v31 = a7;
  uint64_t v30 = a6;
  uint64_t v35 = a5;
  uint64_t v28 = a4;
  uint64_t v33 = a3;
  uint64_t v27 = a2;
  uint64_t v36 = a1;
  uint64_t v37 = a9;
  uint64_t v34 = a11;
  uint64_t v29 = a10;
  uint64_t v54 = a10;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  sub_24EF87730();
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987810);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v53 = MEMORY[0x263F8D320];
  sub_24EF87420();
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987818);
  unint64_t v50 = sub_24EF74420();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v11 = sub_24EF873B0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v49 = v11;
  unint64_t v50 = v15;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v17 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v26 - v21;
  uint64_t v38 = v27;
  uint64_t v39 = v33;
  uint64_t v40 = v28;
  uint64_t v41 = v35;
  uint64_t v42 = v30;
  uint64_t v43 = v31;
  uint64_t v44 = v32;
  uint64_t v45 = v29;
  uint64_t v46 = v34;
  uint64_t v47 = v36;
  sub_24EF86D30();
  sub_24EF873A0();
  sub_24EF871C0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v49 = v11;
  unint64_t v50 = v15;
  uint64_t v23 = swift_getOpaqueTypeConformance2();
  sub_24EF7FD6C(v20, OpaqueTypeMetadata2, v23);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v17 + 8);
  v24(v20, OpaqueTypeMetadata2);
  sub_24EF7FD6C(v22, OpaqueTypeMetadata2, v23);
  return ((uint64_t (*)(char *, uint64_t))v24)(v22, OpaqueTypeMetadata2);
}

uint64_t sub_24EF75894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v74 = a5;
  unint64_t v61 = a3;
  uint64_t v55 = a1;
  uint64_t v71 = a9;
  uint64_t v62 = a11;
  uint64_t v86 = a2;
  unint64_t v87 = a3;
  uint64_t v88 = a4;
  uint64_t v89 = a5;
  uint64_t v90 = a6;
  uint64_t v91 = a7;
  uint64_t v59 = a6;
  uint64_t v92 = a8;
  uint64_t v93 = a10;
  uint64_t v57 = a8;
  uint64_t v58 = a10;
  uint64_t v94 = a11;
  uint64_t v17 = type metadata accessor for FilterDurationSectionView();
  uint64_t v60 = *(void *)(v17 - 8);
  uint64_t v63 = *(void *)(v60 + 64);
  MEMORY[0x270FA5388](v17);
  unint64_t v73 = (char *)&v53 - v18;
  uint64_t v86 = a2;
  unint64_t v87 = a4;
  uint64_t v19 = a2;
  uint64_t v72 = a2;
  unint64_t v20 = a4;
  uint64_t v88 = a6;
  uint64_t v89 = a7;
  uint64_t v21 = a7;
  uint64_t v90 = a8;
  uint64_t v91 = a10;
  type metadata accessor for Option();
  swift_getTupleTypeMetadata2();
  uint64_t v22 = sub_24EF87730();
  uint64_t v69 = v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987810);
  uint64_t v67 = v23;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v86 = v22;
  unint64_t v87 = MEMORY[0x263F8D310];
  uint64_t v88 = v23;
  uint64_t v89 = WitnessTable;
  uint64_t v90 = MEMORY[0x263F8D320];
  uint64_t v68 = sub_24EF87420();
  uint64_t v70 = *(void *)(v68 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v68);
  uint64_t v64 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  unint64_t v65 = (char *)&v53 - v26;
  uint64_t v27 = *(int *)(v17 + 100);
  uint64_t v28 = v17;
  uint64_t v54 = v17;
  uint64_t v85 = *(void *)(a1 + v27);
  uint64_t v29 = sub_24EF87730();
  uint64_t v30 = swift_getWitnessTable();
  MEMORY[0x2533507D0](&v86, v29, v30);
  uint64_t v85 = v86;
  sub_24EF87890();
  swift_getWitnessTable();
  uint64_t v85 = sub_24EF87740();
  unint64_t v31 = v61;
  uint64_t v75 = v19;
  unint64_t v76 = v61;
  unint64_t v32 = v20;
  unint64_t v77 = v20;
  uint64_t v78 = v74;
  uint64_t v33 = v59;
  uint64_t v79 = v59;
  uint64_t v80 = v21;
  uint64_t v34 = v21;
  uint64_t v35 = v57;
  uint64_t v36 = v58;
  uint64_t v81 = v57;
  uint64_t v82 = v58;
  uint64_t v37 = v62;
  uint64_t v83 = v62;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v38 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v73, v55, v28);
  unint64_t v39 = (*(unsigned __int8 *)(v38 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v40 = (char *)swift_allocObject();
  *((void *)v40 + 2) = v72;
  *((void *)v40 + 3) = v31;
  uint64_t v41 = v74;
  *((void *)v40 + 4) = v32;
  *((void *)v40 + 5) = v41;
  *((void *)v40 + 6) = v33;
  *((void *)v40 + 7) = v34;
  *((void *)v40 + 8) = v35;
  *((void *)v40 + 9) = v36;
  *((void *)v40 + 10) = v37;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v40[v39], v73, v54);
  uint64_t v42 = (void *)swift_allocObject();
  _OWORD v42[2] = v72;
  v42[3] = v31;
  uint64_t v43 = v74;
  v42[4] = v32;
  v42[5] = v43;
  v42[6] = v33;
  v42[7] = v34;
  v42[8] = v35;
  v42[9] = v36;
  v42[10] = v37;
  v42[11] = sub_24EF78970;
  v42[12] = v40;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987818);
  unint64_t v45 = sub_24EF74420();
  uint64_t v86 = v44;
  unint64_t v87 = v45;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v46 = v64;
  sub_24EF87410();
  uint64_t v84 = OpaqueTypeConformance2;
  uint64_t v47 = v68;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = v65;
  sub_24EF7FD6C(v46, v47, v48);
  unint64_t v50 = *(void (**)(char *, uint64_t))(v70 + 8);
  v50(v46, v47);
  sub_24EF7FD6C(v49, v47, v48);
  return ((uint64_t (*)(char *, uint64_t))v50)(v49, v47);
}

uint64_t sub_24EF75E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v107 = a1;
  uint64_t v108 = a7;
  uint64_t v84 = a5;
  uint64_t v105 = a3;
  uint64_t v106 = a2;
  uint64_t v97 = a9;
  uint64_t v81 = a13;
  uint64_t v102 = a12;
  uint64_t v98 = sub_24EF87590();
  uint64_t v96 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v95 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24EF87530();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v94 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24EF87550();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v92 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985A88);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v93 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = a4;
  uint64_t v100 = a10;
  uint64_t v121 = a4;
  uint64_t v122 = a6;
  uint64_t v82 = a6;
  uint64_t v83 = a8;
  uint64_t v123 = a8;
  uint64_t v124 = a10;
  uint64_t v101 = a11;
  uint64_t v125 = a11;
  uint64_t v126 = a12;
  uint64_t v103 = type metadata accessor for Option();
  uint64_t v80 = *(void *)(v103 - 8);
  uint64_t v24 = *(void *)(v80 + 64);
  MEMORY[0x270FA5388](v103);
  uint64_t v26 = (char *)&v73 - v25;
  uint64_t v79 = (char *)&v73 - v25;
  uint64_t v121 = a4;
  uint64_t v122 = a5;
  uint64_t v123 = a6;
  uint64_t v124 = v108;
  uint64_t v125 = a8;
  uint64_t v126 = a10;
  uint64_t v127 = a11;
  uint64_t v128 = a12;
  uint64_t v27 = v81;
  uint64_t v129 = v81;
  uint64_t v28 = type metadata accessor for FilterDurationSectionView();
  uint64_t v77 = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  MEMORY[0x270FA5388](v28);
  unint64_t v32 = (char *)&v73 - v31;
  uint64_t v78 = (char *)&v73 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987828);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v88 = v33;
  uint64_t v89 = v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v86 = (char *)&v73 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699878B8);
  uint64_t v90 = *(void *)(v36 - 8);
  uint64_t v91 = v36;
  MEMORY[0x270FA5388](v36);
  uint64_t v85 = (char *)&v73 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987818);
  MEMORY[0x270FA5388](v104);
  unint64_t v87 = (char *)&v73 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v32, v105, v28);
  uint64_t v39 = v80;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v26, v106, v103);
  unint64_t v40 = (*(unsigned __int8 *)(v29 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v74 = (v30 + *(unsigned __int8 *)(v39 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v76 = (v24 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = (char *)swift_allocObject();
  uint64_t v43 = v99;
  uint64_t v42 = v100;
  uint64_t v44 = v83;
  uint64_t v45 = v84;
  *((void *)v41 + 2) = v99;
  *((void *)v41 + 3) = v45;
  uint64_t v46 = v82;
  uint64_t v47 = v108;
  *((void *)v41 + 4) = v82;
  *((void *)v41 + 5) = v47;
  *((void *)v41 + 6) = v44;
  *((void *)v41 + 7) = v42;
  uint64_t v48 = v102;
  *((void *)v41 + 8) = v101;
  *((void *)v41 + 9) = v48;
  *((void *)v41 + 10) = v27;
  (*(void (**)(char *, char *, uint64_t))(v75 + 32))(&v41[v40], v78, v77);
  uint64_t v49 = v103;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v41[v74], v79, v103);
  *(void *)&v41[v76] = v107;
  uint64_t v109 = v43;
  uint64_t v110 = v45;
  uint64_t v111 = v46;
  uint64_t v112 = v47;
  uint64_t v113 = v44;
  uint64_t v114 = v100;
  uint64_t v115 = v101;
  uint64_t v116 = v102;
  uint64_t v50 = v106;
  uint64_t v117 = v27;
  uint64_t v118 = v105;
  uint64_t v119 = v106;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699878C0);
  sub_24EF78E48();
  uint64_t v51 = v86;
  sub_24EF87380();
  sub_24EEFD4C4(qword_269987830, &qword_269987828);
  sub_24EEF97F4();
  uint64_t v52 = v85;
  uint64_t v53 = v88;
  sub_24EF87140();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v51, v53);
  LOBYTE(v49) = *(unsigned char *)(v50 + *(int *)(v49 + 68)) == 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v55 = swift_allocObject();
  *(unsigned char *)(v55 + 16) = v49;
  uint64_t v57 = v90;
  uint64_t v56 = v91;
  uint64_t v58 = (uint64_t)v87;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v52, v91);
  uint64_t v59 = (uint64_t *)(v58 + *(int *)(v104 + 36));
  *uint64_t v59 = KeyPath;
  v59[1] = (uint64_t)sub_24EF792B4;
  v59[2] = v55;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v56);
  Option.identifier.getter();
  uint64_t v60 = v107;
  sub_24EF87540();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985B10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24EF88500;
  *(void *)(inited + 32) = 1701667182;
  *(void *)(inited + 40) = 0xE400000000000000;
  TimedFilterContent.minutes.getter(v99, v108);
  uint64_t v120 = v62;
  uint64_t v63 = MEMORY[0x263F8D6C8];
  uint64_t v121 = sub_24EF87A50();
  uint64_t v122 = v64;
  sub_24EF876A0();
  uint64_t v65 = v122;
  uint64_t v66 = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v121;
  *(void *)(inited + 56) = v65;
  *(void *)(inited + 72) = v66;
  strcpy((char *)(inited + 80), "impressionType");
  *(unsigned char *)(inited + 95) = -18;
  *(void *)(inited + 96) = 0x7265746C6966;
  *(void *)(inited + 104) = 0xE600000000000000;
  *(void *)(inited + 120) = v66;
  *(void *)(inited + 128) = 0x6973736572706D69;
  *(void *)(inited + 136) = 0xEF7865646E496E6FLL;
  *(void *)(inited + 144) = v60;
  *(void *)(inited + 168) = v63;
  *(void *)(inited + 176) = 0x657079546469;
  *(void *)(inited + 216) = v66;
  *(void *)(inited + 184) = 0xE600000000000000;
  *(void *)(inited + 192) = 0x64695F737469;
  *(void *)(inited + 200) = 0xE600000000000000;
  sub_24EF72538(inited);
  sub_24EF87520();
  uint64_t v67 = MEMORY[0x263F8EE78];
  sub_24EF78EE8(MEMORY[0x263F8EE78]);
  sub_24EF78EE8(v67);
  uint64_t v68 = v93;
  sub_24EF87560();
  uint64_t v69 = sub_24EF87570();
  uint64_t v70 = (uint64_t)v68;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 0, 1, v69);
  uint64_t v71 = v95;
  sub_24EF87580();
  sub_24EF74420();
  sub_24EF870E0();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v71, v98);
  sub_24EEFD568(v70, &qword_269985A88);
  return sub_24EEFD568(v58, &qword_269987818);
}

uint64_t sub_24EF767C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11)
{
  uint64_t v28 = a8;
  long long v27 = a10;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699878D8);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (uint64_t *)((char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v21 = sub_24EF87460();
  v21[1] = v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699878E0);
  sub_24EF7693C(a1, a2, a3, a4, a5, a6, a7, v28, (uint64_t *)((char *)v21 + *(int *)(v23 + 44)), v27, *((uint64_t *)&v27 + 1), a11);
  sub_24EF87460();
  sub_24EF86B90();
  sub_24EEF7878((uint64_t)v21, a9, &qword_2699878D8);
  uint64_t v24 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699878C0) + 36));
  long long v25 = v30;
  *uint64_t v24 = v29;
  v24[1] = v25;
  _OWORD v24[2] = v31;
  return sub_24EEFD568((uint64_t)v21, &qword_2699878D8);
}

uint64_t sub_24EF7693C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12 = a8;
  uint64_t v90 = a6;
  uint64_t v92 = a2;
  uint64_t v93 = a4;
  uint64_t v85 = a1;
  uint64_t v80 = a9;
  *(void *)&long long v95 = a3;
  *((void *)&v95 + 1) = a4;
  uint64_t v96 = a5;
  uint64_t v97 = a6;
  uint64_t v98 = a7;
  uint64_t v99 = a8;
  uint64_t v100 = a10;
  uint64_t v101 = a11;
  uint64_t v102 = a12;
  uint64_t v83 = type metadata accessor for FilterDurationSectionView();
  uint64_t v76 = *(void *)(v83 - 8);
  uint64_t v75 = *(void *)(v76 + 64);
  MEMORY[0x270FA5388](v83);
  uint64_t v82 = (char *)&v71 - v16;
  *(void *)&long long v95 = a3;
  *((void *)&v95 + 1) = a5;
  uint64_t v96 = a7;
  uint64_t v97 = v12;
  uint64_t v98 = a10;
  uint64_t v99 = a11;
  uint64_t v17 = type metadata accessor for Option();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v81 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699878E8);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v91 = (uint64_t)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v88 = (uint64_t)&v71 - v26;
  uint64_t v84 = a12;
  uint64_t v77 = a11;
  uint64_t v27 = v92;
  uint64_t v86 = a3;
  uint64_t v78 = a5;
  uint64_t v87 = a7;
  uint64_t v79 = v12;
  uint64_t v89 = sub_24EEFD2EC(v92, a3, v93, a5, v90, a7, v12, a10, a11);
  uint64_t KeyPath = swift_getKeyPath();
  LODWORD(v12) = *(unsigned __int8 *)(v27 + *(int *)(v17 + 68));
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v28(v22, v27, v17);
  if (v12 == 2)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
  }
  else
  {
    int v29 = v22[*(int *)(v17 + 68)];
    (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
    if (v29 != 1)
    {
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699878F0);
      uint64_t v55 = v88;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v88, 1, 1, v57);
      uint64_t v39 = v79;
      uint64_t v56 = v87;
      uint64_t v38 = v90;
      uint64_t v37 = v78;
      uint64_t v45 = v93;
      uint64_t v42 = a10;
      uint64_t v44 = v86;
      uint64_t v51 = v85;
      uint64_t v40 = v77;
      goto LABEL_6;
    }
  }
  long long v95 = xmmword_24EF8F5E0;
  uint64_t v73 = swift_getKeyPath();
  uint64_t v30 = v76;
  long long v31 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 16);
  uint64_t v72 = a10;
  v31(v82, v85, v83);
  v28(v81, v92, v17);
  unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = v18;
  unint64_t v34 = (v75 + *(unsigned __int8 *)(v18 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v35 = (char *)swift_allocObject();
  uint64_t v36 = v93;
  *((void *)v35 + 2) = v86;
  *((void *)v35 + 3) = v36;
  uint64_t v37 = v78;
  uint64_t v38 = v90;
  *((void *)v35 + 4) = v78;
  *((void *)v35 + 5) = v38;
  uint64_t v39 = v79;
  *((void *)v35 + 6) = v87;
  *((void *)v35 + 7) = v39;
  *((void *)v35 + 8) = a10;
  uint64_t v40 = v77;
  uint64_t v41 = v84;
  *((void *)v35 + 9) = v77;
  *((void *)v35 + 10) = v41;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v35[v32], v82, v83);
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v35[v34], v81, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987900);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987908);
  sub_24EF79650();
  uint64_t v42 = v72;
  sub_24EF79720();
  uint64_t v43 = v88;
  uint64_t v44 = v86;
  uint64_t v45 = v93;
  sub_24EF87410();
  sub_24EF86F90();
  sub_24EF86B40();
  uint64_t v103 = v46;
  uint64_t v104 = v47;
  uint64_t v105 = v48;
  uint64_t v106 = v49;
  char v107 = 0;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699878F0);
  uint64_t v51 = v85;
  sub_24EF86E90();
  uint64_t v52 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56);
  uint64_t v53 = v43;
  uint64_t v54 = v50;
  uint64_t v55 = v43;
  uint64_t v56 = v87;
  v52(v53, 0, 1, v54);
LABEL_6:
  uint64_t v87 = sub_24EF86D80();
  sub_24EF776EC(v92, v51, v44, v45, v37, v38, v56, v39, (uint64_t)&v95, v42, v40, v84);
  long long v58 = v95;
  char v59 = v96;
  uint64_t v60 = v97;
  uint64_t v90 = v98;
  uint64_t v61 = v99;
  char v62 = v100;
  uint64_t v92 = v102;
  uint64_t v93 = v101;
  uint64_t v63 = v91;
  sub_24EEF7878(v55, v91, &qword_2699878E8);
  uint64_t v64 = v80;
  uint64_t v65 = v89;
  uint64_t *v80 = KeyPath;
  v64[1] = v65;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699878F8);
  sub_24EEF7878(v63, (uint64_t)v64 + *(int *)(v66 + 48), &qword_2699878E8);
  uint64_t v67 = (char *)v64 + *(int *)(v66 + 64);
  *(void *)uint64_t v67 = v87;
  *((void *)v67 + 1) = 0;
  v67[16] = 1;
  *(_OWORD *)(v67 + 24) = v58;
  v67[40] = v59;
  uint64_t v68 = v90;
  *((void *)v67 + 6) = v60;
  *((void *)v67 + 7) = v68;
  *((void *)v67 + 8) = v61;
  v67[72] = v62;
  uint64_t v69 = v92;
  *((void *)v67 + 10) = v93;
  *((void *)v67 + 11) = v69;
  swift_retain();
  swift_retain();
  sub_24EEFD508(v58, *((uint64_t *)&v58 + 1), v59);
  swift_bridgeObjectRetain();
  sub_24EEFD508(v68, v61, v62);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24EEFD568(v88, &qword_2699878E8);
  sub_24EEFD518(v58, *((uint64_t *)&v58 + 1), v59);
  swift_bridgeObjectRelease();
  sub_24EEFD518(v68, v61, v62);
  swift_release();
  swift_bridgeObjectRelease();
  sub_24EEFD568(v91, &qword_2699878E8);
  swift_release();
  return swift_release();
}

uint64_t sub_24EF77134@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, long long a9, uint64_t a10, uint64_t a11)
{
  uint64_t v29 = a6;
  uint64_t v30 = a7;
  long long v28 = a9;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987930);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  *(void *)uint64_t v19 = sub_24EF86D80();
  *((void *)v19 + 1) = 0;
  unsigned char v19[16] = 1;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987938);
  sub_24EF772C4(a2, v20, a3, a4, a5, v29, v30, (uint64_t)&v19[*(int *)(v21 + 44)], v28, *((uint64_t *)&v28 + 1), a10, a11);
  sub_24EF874C0();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_24EEF7878((uint64_t)v19, a8, &qword_269987930);
  uint64_t v26 = a8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269987908) + 36);
  *(double *)uint64_t v26 = (double)v20 * 22.5 * 0.0174532925;
  *(void *)(v26 + 8) = v23;
  *(void *)(v26 + 16) = v25;
  return sub_24EEFD568((uint64_t)v19, &qword_269987930);
}

uint64_t sub_24EF772C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v52 = a6;
  uint64_t v53 = a7;
  uint64_t v45 = a5;
  uint64_t v51 = a4;
  uint64_t v49 = a3;
  uint64_t v56 = a2;
  uint64_t v57 = a8;
  uint64_t v58 = a1;
  uint64_t v46 = a11;
  uint64_t v47 = a12;
  uint64_t v13 = sub_24EF87400();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269985A90);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987940);
  uint64_t v21 = v20 - 8;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987948) - 8;
  uint64_t v24 = MEMORY[0x270FA5388](v54);
  uint64_t v55 = (uint64_t)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v48 = (uint64_t)&v44 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v50 = (uint64_t)&v44 - v28;
  uint64_t v29 = *MEMORY[0x263F19860];
  uint64_t v30 = sub_24EF86D40();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v15, v29, v30);
  uint64_t v31 = v49;
  uint64_t v32 = a5;
  uint64_t v33 = v53;
  uint64_t v34 = sub_24EEFD618(v58, v49, v51, v32, v52, v53, a9, a10, a11);
  sub_24EEFD3BC((uint64_t)v15, (uint64_t)v19);
  *(void *)&v19[*(int *)(v17 + 44)] = v34;
  sub_24EEFD420((uint64_t)v15);
  sub_24EF87460();
  sub_24EF86B90();
  sub_24EEF7878((uint64_t)v19, (uint64_t)v23, &qword_269985A90);
  uint64_t v35 = &v23[*(int *)(v21 + 44)];
  long long v36 = v66;
  *(_OWORD *)uint64_t v35 = v65;
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v67;
  sub_24EEFD568((uint64_t)v19, &qword_269985A90);
  uint64_t v59 = v31;
  uint64_t v60 = v45;
  uint64_t v61 = v33;
  uint64_t v62 = a9;
  uint64_t v63 = a10;
  uint64_t v64 = v46;
  if (*(unsigned char *)(v58 + *(int *)(type metadata accessor for Option() + 68)) == 2) {
    double v37 = 1.0;
  }
  else {
    double v37 = 0.4;
  }
  uint64_t v38 = v48;
  sub_24EEF7878((uint64_t)v23, v48, &qword_269987940);
  *(double *)(v38 + *(int *)(v54 + 44)) = v37;
  sub_24EEFD568((uint64_t)v23, &qword_269987940);
  uint64_t v39 = v50;
  sub_24EF797C0(v38, v50);
  uint64_t v40 = v55;
  sub_24EEF7878(v39, v55, &qword_269987948);
  uint64_t v41 = v57;
  sub_24EEF7878(v40, v57, &qword_269987948);
  uint64_t v42 = v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269987950) + 48);
  *(void *)uint64_t v42 = 0;
  *(unsigned char *)(v42 + 8) = 1;
  sub_24EEFD568(v39, &qword_269987948);
  return sub_24EEFD568(v40, &qword_269987948);
}

__n128 sub_24EF776EC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_24EF777F8(a2, a3, a4, a5, a6, a7, a8, (uint64_t)v29, a10, a11, a12);
  uint64_t v27 = v29[1];
  uint64_t v28 = v29[0];
  char v26 = v30;
  __n128 v25 = v31;
  uint64_t v24 = v32;
  char v23 = v33;
  uint64_t v22 = v34;
  uint64_t v19 = sub_24EEFD618(a1, a3, a4, a5, a6, a7, a8, a10, a11);
  *(void *)a9 = v28;
  *(void *)(a9 + 8) = v27;
  *(unsigned char *)(a9 + 16) = v26;
  __n128 result = v25;
  *(__n128 *)(a9 + 24) = v25;
  *(void *)(a9 + 40) = v24;
  *(unsigned char *)(a9 + 48) = v23;
  *(void *)(a9 + 56) = v22;
  *(void *)(a9 + 64) = v19;
  return result;
}

uint64_t sub_24EF777F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v59 = a6;
  uint64_t v60 = a7;
  uint64_t v57 = a4;
  uint64_t v55 = a3;
  uint64_t v63 = a1;
  uint64_t v56 = a11;
  uint64_t v54 = a10;
  uint64_t v52 = a9;
  uint64_t v61 = sub_24EF86A60();
  uint64_t v14 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v62 = &v48[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_24EF87630();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699864F8);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = &v48[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v53 = a2;
  uint64_t v58 = a5;
  TimedFilterContent.minutes.getter(a2, a5);
  uint64_t v67 = v20;
  sub_24EF87A50();
  sub_24EF87020();
  uint64_t v21 = sub_24EF87010();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v51 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v50 = v22 + 56;
  v51(v19, 1, 1, v21);
  sub_24EF87030();
  sub_24EEFD568((uint64_t)v19, &qword_2699864F8);
  uint64_t v23 = sub_24EF870A0();
  uint64_t v64 = v24;
  uint64_t v65 = v23;
  char v26 = v25;
  uint64_t v66 = v27;
  swift_bridgeObjectRelease();
  swift_release();
  sub_24EF875C0();
  if (qword_269985870 != -1) {
    swift_once();
  }
  uint64_t v28 = (void *)qword_269997D90;
  int v49 = v26 & 1;
  uint64_t v67 = v53;
  uint64_t v68 = v55;
  uint64_t v69 = v57;
  uint64_t v70 = v58;
  uint64_t v71 = v59;
  uint64_t v72 = v60;
  uint64_t v73 = v52;
  uint64_t v74 = v54;
  uint64_t v75 = v56;
  uint64_t v29 = type metadata accessor for FilterDurationSectionView();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v62, v63 + *(int *)(v29 + 92), v61);
  id v30 = v28;
  uint64_t v67 = sub_24EF87650();
  uint64_t v68 = v31;
  sub_24EEFD5C4();
  uint64_t v32 = sub_24EF870C0();
  uint64_t v34 = v33;
  char v36 = v35 & 1;
  sub_24EF87020();
  v51(v19, 1, 1, v21);
  sub_24EF87030();
  sub_24EEFD568((uint64_t)v19, &qword_2699864F8);
  uint64_t v37 = sub_24EF870A0();
  uint64_t v39 = v38;
  char v41 = v40;
  uint64_t v43 = v42;
  swift_release();
  LOBYTE(v28) = v41 & 1;
  sub_24EEFD518(v32, v34, v36);
  swift_bridgeObjectRelease();
  char v44 = v49;
  LOBYTE(v67) = v49;
  uint64_t v46 = v64;
  uint64_t v45 = v65;
  *(void *)a8 = v65;
  *(void *)(a8 + 8) = v46;
  *(unsigned char *)(a8 + 16) = v44;
  *(void *)(a8 + 24) = v66;
  *(void *)(a8 + 32) = v37;
  *(void *)(a8 + 40) = v39;
  *(unsigned char *)(a8 + 48) = (_BYTE)v28;
  *(void *)(a8 + 56) = v43;
  sub_24EEFD508(v45, v46, v44);
  swift_bridgeObjectRetain();
  sub_24EEFD508(v37, v39, (char)v28);
  swift_bridgeObjectRetain();
  sub_24EEFD518(v37, v39, (char)v28);
  swift_bridgeObjectRelease();
  sub_24EEFD518(v45, v46, v67);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF77CE4()
{
  uint64_t result = sub_24EF86A60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_24EF77D90(void *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = v5;
    a1[1] = v8;
    uint64_t v9 = a3[23];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_24EF86A60();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[24];
    uint64_t v15 = a3[25];
    uint64_t v16 = (void *)((char *)a1 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    *(void *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24EF77EB0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 92);
  uint64_t v5 = sub_24EF86A60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_bridgeObjectRelease();
}

void *sub_24EF77F4C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[23];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24EF86A60();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[24];
  uint64_t v13 = a3[25];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_24EF7801C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a3[23];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24EF86A60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[24];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[25]) = *(void *)((char *)a2 + a3[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_24EF780F8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[23];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EF86A60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[25];
  *(_OWORD *)((char *)a1 + a3[24]) = *(_OWORD *)((char *)a2 + a3[24]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

_OWORD *sub_24EF78198(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a3[23];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EF86A60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + a3[24]) = *(_OWORD *)((char *)a2 + a3[24]);
  swift_release();
  *(void *)((char *)a1 + a3[25]) = *(void *)((char *)a2 + a3[25]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24EF78258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EF7826C);
}

uint64_t sub_24EF7826C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EF86A60();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 92);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24EF7831C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EF78330);
}

void *sub_24EF78330(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24EF86A60();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 92);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24EF783D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EF787A4()
{
  return sub_24EF787D4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void))sub_24EF75470);
}

uint64_t sub_24EF787BC()
{
  return sub_24EF787D4((uint64_t (*)(void, void, void, void, void, void, void, void, void, void))sub_24EF75894);
}

uint64_t sub_24EF787D4(uint64_t (*a1)(void, void, void, void, void, void, void, void, void, void))
{
  return a1(v1[11], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10]);
}

uint64_t sub_24EF78818()
{
  return 72;
}

__n128 sub_24EF78824(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  __n128 result = *(__n128 *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  *(void *)(a2 + 64) = *(void *)(a1 + 64);
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_24EF78848()
{
  unint64_t v1 = (int *)(type metadata accessor for FilterDurationSectionView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  uint64_t v3 = v2 + v1[25];
  uint64_t v4 = sub_24EF86A60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24EF78970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3[2];
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  uint64_t v7 = v3[5];
  uint64_t v8 = v3[6];
  uint64_t v9 = v3[7];
  uint64_t v10 = v3[8];
  uint64_t v11 = v3[9];
  uint64_t v12 = v3[10];
  uint64_t v13 = *(void *)(type metadata accessor for FilterDurationSectionView() - 8);
  return sub_24EF75E88(a1, a2, (uint64_t)v3 + ((*(unsigned __int8 *)(v13 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v4, v5, v6, v7, v8, a3, v9, v10, v11, v12);
}

uint64_t sub_24EF78A4C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EF78A84()
{
  long long v9 = *(_OWORD *)(v0 + 16);
  unint64_t v1 = (int *)(type metadata accessor for FilterDurationSectionView() - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(type metadata accessor for Option() - 8);
  unint64_t v5 = (v3 + v2 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  swift_release();
  unint64_t v6 = v0 + v3 + v1[25];
  uint64_t v7 = sub_24EF86A60();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, void))(*(void *)(v9 - 8) + 8))(v0 + v5, v9);
  return swift_deallocObject();
}

uint64_t sub_24EF78C7C()
{
  uint64_t v1 = *(void *)(type metadata accessor for FilterDurationSectionView() - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = *(void *)(type metadata accessor for Option() - 8);
  unint64_t v5 = (v3 + v2 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = v0 + v5;
  uint64_t v8 = type metadata accessor for FilterDurationSectionView();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + *(int *)(v8 + 96) + v3))(v7, v6);
}

uint64_t sub_24EF78E08@<X0>(uint64_t a1@<X8>)
{
  return sub_24EF767C0(*(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1, *(_OWORD *)(v1 + 64), *(void *)(v1 + 80));
}

unint64_t sub_24EF78E48()
{
  unint64_t result = qword_2699878C8;
  if (!qword_2699878C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699878C0);
    sub_24EEFD4C4(&qword_2699878D0, &qword_2699878D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699878C8);
  }
  return result;
}

unint64_t sub_24EF78EE8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699877C0);
  uint64_t v2 = sub_24EF878C0();
  unint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24EEF7878(v6, (uint64_t)&v15, &qword_2699877C8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_24EF79020(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_24EF72BF8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24EF79020(uint64_t a1, uint64_t a2)
{
  sub_24EF87A90();
  sub_24EF87670();
  uint64_t v4 = sub_24EF87AD0();
  return sub_24EF79098(a1, a2, v4);
}

unint64_t sub_24EF79098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_24EF87A60() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_24EF87A60() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_24EF87A60()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_24EF791E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24EF86CE0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24EF79210@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24EF86CE0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24EF79240()
{
  return sub_24EF86CF0();
}

uint64_t sub_24EF79268()
{
  return sub_24EF86CF0();
}

unsigned char *sub_24EF79290(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_24EF792A4()
{
  return swift_deallocObject();
}

unsigned char *sub_24EF792B4(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_24EF792CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24EF86C80();
  *a1 = result;
  return result;
}

uint64_t sub_24EF792F8()
{
  return sub_24EF86C90();
}

uint64_t sub_24EF79324()
{
  long long v9 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = (int *)(type metadata accessor for FilterDurationSectionView() - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(type metadata accessor for Option() - 8);
  unint64_t v5 = (v3 + v2 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  swift_release();
  unint64_t v6 = v0 + v3 + v1[25];
  uint64_t v7 = sub_24EF86A60();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, void))(*(void *)(v9 - 8) + 8))(v0 + v5, v9);
  return swift_deallocObject();
}

uint64_t sub_24EF79510@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2[2];
  uint64_t v4 = v2[4];
  uint64_t v16 = v2[5];
  uint64_t v17 = v2[3];
  uint64_t v5 = v2[6];
  uint64_t v6 = v2[7];
  uint64_t v8 = v2[8];
  uint64_t v7 = v2[9];
  uint64_t v9 = v2[10];
  uint64_t v10 = *(void *)(type metadata accessor for FilterDurationSectionView() - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = *(void *)(type metadata accessor for Option() - 8);
  *(void *)&long long v15 = v6;
  *((void *)&v15 + 1) = v8;
  return sub_24EF77134(a1, (uint64_t)v2+ ((v12 + v11 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v3, v17, v4, v16, v5, a2, v15, v7, v9);
}

unint64_t sub_24EF79650()
{
  unint64_t result = qword_269987910;
  if (!qword_269987910)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987900);
    sub_24EF796CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987910);
  }
  return result;
}

unint64_t sub_24EF796CC()
{
  unint64_t result = qword_269987918;
  if (!qword_269987918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987918);
  }
  return result;
}

unint64_t sub_24EF79720()
{
  unint64_t result = qword_269987920;
  if (!qword_269987920)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269987908);
    sub_24EEFD4C4(&qword_269987928, &qword_269987930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987920);
  }
  return result;
}

uint64_t sub_24EF797C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static NamedFilterContent<>.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 24);
  uint64_t v7 = v6(a3, a4);
  uint64_t v9 = v8;
  if (v7 == v6(a3, a4) && v9 == v10) {
    char v12 = 0;
  }
  else {
    char v12 = sub_24EF87A60();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t dispatch thunk of NamedFilterContent.artworks.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NamedFilterContent.iconName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NamedFilterContent.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_24EF79930@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  char v6 = *((unsigned char *)v2 + 8);
  uint64_t v7 = v2[2];
  char v8 = *((unsigned char *)v2 + 24);
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_24EF7AC30(v9);
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRelease();
  if (v10)
  {
    if (*(void *)(a1 + 16) <= *(void *)(v7 + 16) >> 3)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24EF7AE30(a1);
      uint64_t v11 = v7;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_24EF7AFF4(a1, v7);
    }
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t result = sub_24EF79A74(v13, v11);
    *(void *)a2 = v5;
    *(unsigned char *)(a2 + 8) = v6;
    *(void *)(a2 + 16) = result;
    *(unsigned char *)(a2 + 24) = v8;
  }
  else
  {
    *(void *)a2 = v5;
    *(unsigned char *)(a2 + 8) = v6;
    *(void *)(a2 + 16) = v7;
    *(unsigned char *)(a2 + 24) = v8;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24EF79A74(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v5 = result + 56;
  uint64_t v4 = *(void *)(result + 56);
  uint64_t v17 = a2;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v4;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v9) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 3;
          if (v12 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v3);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    sub_24EF0D038(*(void *)(v2 + 48) + 48 * v11, (uint64_t)v18);
    sub_24EF13808((uint64_t)v18, (void (*)(void, void, void, void, void, void))sub_24EEF7798);
    sub_24EF79C18((uint64_t)v15, (uint64_t)v18);
    uint64_t result = sub_24EEF7780(v15[0], v15[1], v15[2], v15[3], v15[4], v16);
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9)
  {
LABEL_23:
    swift_release();
    return v17;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v9) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24EF79C18(uint64_t a1, uint64_t a2)
{
  sub_24EF0D038(a2, (uint64_t)v26);
  uint64_t v5 = *v2;
  sub_24EF87A90();
  swift_bridgeObjectRetain();
  FilterItem.hash(into:)();
  uint64_t v6 = sub_24EF87AD0();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    while (1)
    {
      uint64_t v10 = *(void *)(v5 + 48) + 48 * v8;
      uint64_t v11 = *(void *)(v10 + 32);
      char v12 = *(unsigned char *)(v10 + 40);
      v23[0] = *(_OWORD *)v10;
      v23[1] = *(_OWORD *)(v10 + 16);
      uint64_t v24 = v11;
      char v25 = v12;
      if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v23, (uint64_t)v26)) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_24EF13808(a2, (void (*)(void, void, void, void, void, void))sub_24EEF7780);
    uint64_t v15 = *(void *)(*v2 + 48) + 48 * v8;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    uint64_t v18 = *(void *)(v15 + 16);
    uint64_t v19 = *(void *)(v15 + 24);
    uint64_t v20 = *(void *)(v15 + 32);
    unsigned __int8 v21 = *(unsigned char *)(v15 + 40);
    *(void *)a1 = *(void *)v15;
    *(void *)(a1 + 8) = v17;
    *(void *)(a1 + 16) = v18;
    *(void *)(a1 + 24) = v19;
    *(void *)(a1 + 32) = v20;
    *(unsigned char *)(a1 + 40) = v21;
    sub_24EEF7798(v16, v17, v18, v19, v20, v21);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_24EF0D038((uint64_t)v26, (uint64_t)v23);
    uint64_t v22 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_24EF13808((uint64_t)v23, (void (*)(void, void, void, void, void, void))sub_24EEF7798);
    sub_24EF7A37C((uint64_t)v23, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v22;
    swift_bridgeObjectRelease();
    sub_24EF0D038((uint64_t)v23, a1);
    return 1;
  }
}

uint64_t sub_24EF79DFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985EA0);
  uint64_t v3 = sub_24EF87840();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_41;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v34 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v33 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  swift_retain();
  int64_t v9 = 0;
  uint64_t v35 = v2;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_42;
    }
    if (v14 >= v33) {
      break;
    }
    unint64_t v15 = v34[v14];
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v33) {
        break;
      }
      unint64_t v15 = v34[v9];
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v33) {
          break;
        }
        unint64_t v15 = v34[v9];
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v33) {
            break;
          }
          unint64_t v15 = v34[v16];
          if (!v15)
          {
            while (1)
            {
              int64_t v9 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_43;
              }
              if (v9 >= v33) {
                goto LABEL_37;
              }
              unint64_t v15 = v34[v9];
              ++v16;
              if (v15) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v16;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v2 + 48) + 48 * v13;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 24);
    uint64_t v36 = *(void *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 32);
    uint64_t v22 = *(unsigned __int8 *)(v17 + 40);
    sub_24EF87A90();
    switch(v22)
    {
      case 1:
        sub_24EF87AA0();
        swift_bridgeObjectRetain();
        sub_24EF87670();
        sub_24EEF7780(v18, v19, v36, v20, v21, 1u);
        sub_24EF87AC0();
        sub_24EF87AC0();
        sub_24EF87AC0();
        break;
      case 8:
        sub_24EF87AA0();
        sub_24EF87670();
        swift_bridgeObjectRelease();
        break;
      default:
        sub_24EF87AA0();
        sub_24EF87670();
        break;
    }
    uint64_t v23 = sub_24EF87AD0();
    uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v25 = v23 & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v27 = 0;
    unint64_t v28 = (unint64_t)(63 - v24) >> 6;
    do
    {
      if (++v26 == v28 && (v27 & 1) != 0)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        JUMPOUT(0x24EF7A338);
      }
      BOOL v29 = v26 == v28;
      if (v26 == v28) {
        unint64_t v26 = 0;
      }
      v27 |= v29;
      uint64_t v30 = *(void *)(v8 + 8 * v26);
    }
    while (v30 == -1);
    unint64_t v10 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v4 + 48) + 48 * v10;
    *(void *)uint64_t v11 = v18;
    *(void *)(v11 + 8) = v19;
    uint64_t v2 = v35;
    *(void *)(v11 + 16) = v36;
    *(void *)(v11 + 24) = v20;
    *(void *)(v11 + 32) = v21;
    *(unsigned char *)(v11 + 40) = v22;
    ++*(void *)(v4 + 16);
  }
LABEL_37:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
  if (v31 > 63) {
    bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v34 = -1 << v31;
  }
  *(void *)(v2 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24EF7A37C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  sub_24EF0D038(a1, (uint64_t)v26);
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_24EF79DFC();
  }
  else
  {
    if (v9 > v8)
    {
      sub_24EF7A508();
      goto LABEL_12;
    }
    sub_24EF7A6D8();
  }
  uint64_t v10 = *v4;
  sub_24EF87A90();
  FilterItem.hash(into:)();
  uint64_t v11 = sub_24EF87AD0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  a2 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v13 = ~v12;
    do
    {
      uint64_t v14 = *(void *)(v10 + 48) + 48 * a2;
      uint64_t v15 = *(void *)(v14 + 32);
      char v16 = *(unsigned char *)(v14 + 40);
      long long v17 = *(_OWORD *)(v14 + 16);
      v23[0] = *(_OWORD *)v14;
      v23[1] = v17;
      uint64_t v24 = v15;
      char v25 = v16;
      if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v23, (uint64_t)v26)) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v13;
    }
    while (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v18 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_24EF0D038(a1, *(void *)(v18 + 48) + 48 * a2);
  uint64_t v20 = *(void *)(v18 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (!v21)
  {
    *(void *)(v18 + 16) = v22;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_24EF87A70();
  __break(1u);
  return result;
}

void *sub_24EF7A508()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985EA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24EF87830();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13) {
      goto LABEL_28;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26)
      {
        int64_t v9 = v25 + 2;
        if (v25 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v26 = *(void *)(v6 + 8 * v9);
        if (!v26) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 48 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 24);
    uint64_t v22 = *(void *)(v17 + 32);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    unsigned __int8 v24 = *(unsigned char *)(v17 + 40);
    *(void *)uint64_t v23 = *(void *)v17;
    *(void *)(v23 + 8) = v19;
    *(void *)(v23 + 16) = v20;
    *(void *)(v23 + 24) = v21;
    *(void *)(v23 + 32) = v22;
    *(unsigned char *)(v23 + 40) = v24;
    uint64_t result = (void *)sub_24EEF7798(v18, v19, v20, v21, v22, v24);
  }
  int64_t v27 = v25 + 3;
  if (v27 >= v13) {
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24EF7A6D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269985EA0);
  uint64_t v3 = sub_24EF87840();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_39;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v32 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v33 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  swift_retain();
  int64_t v9 = 0;
  uint64_t v34 = v2;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_40;
    }
    if (v14 >= v33) {
      break;
    }
    unint64_t v15 = *(void *)(v32 + 8 * v14);
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v33) {
        break;
      }
      unint64_t v15 = *(void *)(v32 + 8 * v9);
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v33) {
          break;
        }
        unint64_t v15 = *(void *)(v32 + 8 * v9);
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v33) {
            break;
          }
          unint64_t v15 = *(void *)(v32 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v9 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_41;
              }
              if (v9 >= v33) {
                goto LABEL_37;
              }
              unint64_t v15 = *(void *)(v32 + 8 * v9);
              ++v16;
              if (v15) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v16;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v2 + 48) + 48 * v13;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 24);
    uint64_t v35 = *(void *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 32);
    uint64_t v22 = *(unsigned __int8 *)(v17 + 40);
    sub_24EF87A90();
    switch(v22)
    {
      case 1:
        sub_24EF87AA0();
        swift_bridgeObjectRetain_n();
        sub_24EF87670();
        sub_24EEF7780(v18, v19, v35, v20, v21, 1u);
        sub_24EF87AC0();
        sub_24EF87AC0();
        sub_24EF87AC0();
        break;
      case 8:
        sub_24EF87AA0();
        sub_24EF87670();
        swift_bridgeObjectRelease();
        break;
      default:
        sub_24EF87AA0();
        swift_bridgeObjectRetain();
        sub_24EF87670();
        break;
    }
    uint64_t v23 = sub_24EF87AD0();
    uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v25 = v23 & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v27 = 0;
    unint64_t v28 = (unint64_t)(63 - v24) >> 6;
    do
    {
      if (++v26 == v28 && (v27 & 1) != 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        JUMPOUT(0x24EF7ABECLL);
      }
      BOOL v29 = v26 == v28;
      if (v26 == v28) {
        unint64_t v26 = 0;
      }
      v27 |= v29;
      uint64_t v30 = *(void *)(v8 + 8 * v26);
    }
    while (v30 == -1);
    unint64_t v10 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v4 + 48) + 48 * v10;
    *(void *)uint64_t v11 = v18;
    *(void *)(v11 + 8) = v19;
    uint64_t v2 = v34;
    *(void *)(v11 + 16) = v35;
    *(void *)(v11 + 24) = v20;
    *(void *)(v11 + 32) = v21;
    *(unsigned char *)(v11 + 40) = v22;
    ++*(void *)(v4 + 16);
  }
LABEL_37:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_39:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24EF7AC30(uint64_t result)
{
  uint64_t v2 = result;
  int64_t i = 0;
  uint64_t v4 = result + 56;
  uint64_t v5 = -1 << *(unsigned char *)(result + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(63 - v5) >> 6;
  if (v7) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v11 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v11 < v8)
    {
      unint64_t v12 = *(void *)(v4 + 8 * v11);
      int64_t v13 = i + 1;
      if (v12) {
        goto LABEL_21;
      }
      int64_t v13 = i + 2;
      if (i + 2 >= v8) {
        return sub_24EF22D4C();
      }
      unint64_t v12 = *(void *)(v4 + 8 * v13);
      if (v12) {
        goto LABEL_21;
      }
      int64_t v13 = i + 3;
      if (i + 3 >= v8) {
        return sub_24EF22D4C();
      }
      unint64_t v12 = *(void *)(v4 + 8 * v13);
      if (v12)
      {
LABEL_21:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
        for (i = v13; ; unint64_t v10 = v9 | (i << 6))
        {
          sub_24EF0D038(*(void *)(v2 + 48) + 48 * v10, (uint64_t)v22);
          uint64_t v15 = *v1;
          sub_24EF13808((uint64_t)v22, (void (*)(void, void, void, void, void, void))sub_24EEF7798);
          if (sub_24EF0A49C((uint64_t)v22, v15))
          {
            sub_24EF7C8E8((uint64_t)v22, (uint64_t)&v16);
            sub_24EF7E7D8(v16, v17, v18, v19, v20, v21);
            uint64_t result = sub_24EF13808((uint64_t)v22, (void (*)(void, void, void, void, void, void))sub_24EEF7780);
            if (!v7) {
              goto LABEL_8;
            }
          }
          else
          {
            sub_24EF79C18((uint64_t)&v16, (uint64_t)v22);
            uint64_t result = sub_24EEF7780(v16, v17, v18, v19, v20, v21);
            if (!v7) {
              goto LABEL_8;
            }
          }
LABEL_7:
          unint64_t v9 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      int64_t v14 = i + 4;
      if (i + 4 < v8)
      {
        unint64_t v12 = *(void *)(v4 + 8 * v14);
        if (v12)
        {
          int64_t v13 = i + 4;
          goto LABEL_21;
        }
        while (1)
        {
          int64_t v13 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_27;
          }
          if (v13 >= v8) {
            return sub_24EF22D4C();
          }
          unint64_t v12 = *(void *)(v4 + 8 * v13);
          ++v14;
          if (v12) {
            goto LABEL_21;
          }
        }
      }
    }
    return sub_24EF22D4C();
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24EF7AE30(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    sub_24EF0D038(*(void *)(v2 + 48) + 48 * v10, (uint64_t)v16);
    sub_24EF13808((uint64_t)v16, (void (*)(void, void, void, void, void, void))sub_24EEF7798);
    sub_24EF7C8E8((uint64_t)v16, (uint64_t)v14);
    sub_24EF7E7D8(v14[0], v14[1], v14[2], v14[3], v14[4], v15);
    uint64_t result = sub_24EF13808((uint64_t)v16, (void (*)(void, void, void, void, void, void))sub_24EEF7780);
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v7) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v7) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v3 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24EF7AFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  v86[5] = *MEMORY[0x263EF8340];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v73 = a1 + 56;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v69 = ~v4;
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & v3;
  int64_t v70 = (unint64_t)(63 - v4) >> 6;
  uint64_t v79 = (char *)(a2 + 56);
  uint64_t v7 = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v77 = v2;
  uint64_t v74 = v7;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      uint64_t v10 = (v6 - 1) & v6;
      unint64_t v11 = v9 | (v8 << 6);
    }
    else
    {
      int64_t v12 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_149;
      }
      if (v12 >= v70) {
        goto LABEL_131;
      }
      unint64_t v13 = *(void *)(v73 + 8 * v12);
      int64_t v14 = v8 + 1;
      if (!v13)
      {
        int64_t v14 = v8 + 2;
        if (v8 + 2 >= v70) {
          goto LABEL_131;
        }
        unint64_t v13 = *(void *)(v73 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v8 + 3;
          if (v8 + 3 >= v70) {
            goto LABEL_131;
          }
          unint64_t v13 = *(void *)(v73 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v8 + 4;
            if (v8 + 4 >= v70) {
              goto LABEL_131;
            }
            unint64_t v13 = *(void *)(v73 + 8 * v14);
            if (!v13)
            {
              int64_t v15 = v8 + 5;
              if (v8 + 5 >= v70)
              {
LABEL_131:
                sub_24EF22D4C();
                return v2;
              }
              unint64_t v13 = *(void *)(v73 + 8 * v15);
              if (!v13)
              {
                while (1)
                {
                  int64_t v14 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    break;
                  }
                  if (v14 >= v70) {
                    goto LABEL_131;
                  }
                  unint64_t v13 = *(void *)(v73 + 8 * v14);
                  ++v15;
                  if (v13) {
                    goto LABEL_24;
                  }
                }
LABEL_149:
                __break(1u);
              }
              int64_t v14 = v8 + 5;
            }
          }
        }
      }
LABEL_24:
      uint64_t v10 = (v13 - 1) & v13;
      unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
      int64_t v8 = v14;
    }
    uint64_t v16 = *(void *)(v7 + 48) + 48 * v11;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v82 = *(uint64_t *)(v16 + 16);
    uint64_t v81 = *(uint64_t *)(v16 + 24);
    uint64_t v80 = *(uint64_t *)(v16 + 32);
    uint64_t v19 = *(unsigned __int8 *)(v16 + 40);
    sub_24EF87A90();
    uint64_t v83 = v19;
    uint64_t v85 = v18;
    int64_t v76 = v8;
    unint64_t v75 = v10;
    switch(v19)
    {
      case 1:
        sub_24EF87AA0();
        swift_bridgeObjectRetain_n();
        sub_24EF87670();
        sub_24EEF7780(v17, v18, v82, v81, v80, 1u);
        sub_24EF87AC0();
        sub_24EF87AC0();
        uint64_t v18 = v85;
        sub_24EF87AC0();
        break;
      case 8:
        sub_24EF87AA0();
        sub_24EF87670();
        swift_bridgeObjectRelease();
        break;
      default:
        sub_24EF87AA0();
        swift_bridgeObjectRetain();
        sub_24EF87670();
        break;
    }
    uint64_t v20 = sub_24EF87AD0();
    uint64_t v21 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v22 = v20 & ~v21;
    int v23 = v83;
    if ((*(void *)&v79[(v22 >> 3) & 0xFFFFFFFFFFFFFF8] >> v22)) {
      break;
    }
LABEL_6:
    sub_24EEF7780(v17, v18, v82, v81, v80, v23);
    uint64_t v7 = v74;
    int64_t v8 = v76;
    unint64_t v6 = v75;
  }
  uint64_t v78 = ~v21;
  uint64_t v72 = v17;
  uint64_t v84 = v17;
  while (2)
  {
    uint64_t v31 = *(void *)(v2 + 48) + 48 * v22;
    uint64_t v33 = *(void *)v31;
    uint64_t v32 = *(void *)(v31 + 8);
    uint64_t v35 = *(uint64_t *)(v31 + 16);
    uint64_t v34 = *(uint64_t *)(v31 + 24);
    uint64_t v36 = *(uint64_t *)(v31 + 32);
    unsigned __int8 v37 = *(unsigned char *)(v31 + 40);
    switch(v37)
    {
      case 1u:
        if (v23 != 1) {
          goto LABEL_91;
        }
        if (v33 == v17 && v32 == v18)
        {
          sub_24EEF7798(v17, v18, v82, v81, v80, 1u);
          sub_24EEF7798(v84, v85, v35, v34, v36, 1u);
          sub_24EEF7780(v84, v85, v35, v34, v36, 1u);
          uint64_t v18 = v85;
          uint64_t v17 = v84;
          sub_24EEF7780(v84, v85, v82, v81, v80, 1u);
          BOOL v50 = *(double *)&v35 == *(double *)&v82
             && *(double *)&v34 == *(double *)&v81
             && *(double *)&v36 == *(double *)&v80;
          int v23 = v83;
          if (v50) {
            goto LABEL_141;
          }
        }
        else
        {
          int v71 = sub_24EF87A60();
          sub_24EEF7798(v17, v18, v82, v81, v80, 1u);
          sub_24EEF7798(v33, v32, v35, v34, v36, 1u);
          sub_24EEF7780(v33, v32, v35, v34, v36, 1u);
          uint64_t v18 = v85;
          uint64_t v17 = v84;
          sub_24EEF7780(v84, v85, v82, v81, v80, 1u);
          int v23 = v83;
          if (v71)
          {
            BOOL v43 = *(double *)&v35 == *(double *)&v82 && *(double *)&v34 == *(double *)&v81;
            if (v43 && *(double *)&v36 == *(double *)&v80) {
              goto LABEL_141;
            }
          }
        }
        goto LABEL_36;
      case 2u:
        if (v23 != 2) {
          goto LABEL_91;
        }
        if (v33 == v17 && v32 == v18)
        {
          sub_24EEF7798(v17, v18, v82, v81, v80, 2u);
          sub_24EEF7798(v84, v85, v35, v34, v36, 2u);
          sub_24EEF7780(v84, v85, v35, v34, v36, 2u);
          uint64_t v56 = v84;
          uint64_t v57 = v85;
          uint64_t v58 = v82;
          uint64_t v59 = v81;
          uint64_t v18 = v85;
          uint64_t v60 = v80;
          uint64_t v17 = v84;
          unsigned __int8 v61 = 2;
          goto LABEL_140;
        }
        int v71 = sub_24EF87A60();
        sub_24EEF7798(v17, v18, v82, v81, v80, 2u);
        sub_24EEF7798(v33, v32, v35, v34, v36, 2u);
        sub_24EEF7780(v33, v32, v35, v34, v36, 2u);
        uint64_t v25 = v84;
        uint64_t v26 = v85;
        uint64_t v27 = v82;
        int v23 = v83;
        uint64_t v28 = v81;
        uint64_t v18 = v85;
        uint64_t v29 = v80;
        uint64_t v17 = v84;
        unsigned __int8 v30 = 2;
        goto LABEL_35;
      case 3u:
        if (v23 != 3) {
          goto LABEL_91;
        }
        if (v33 == v17 && v32 == v18)
        {
          sub_24EEF7798(v17, v18, v82, v81, v80, 3u);
          sub_24EEF7798(v84, v85, v35, v34, v36, 3u);
          sub_24EEF7780(v84, v85, v35, v34, v36, 3u);
          uint64_t v56 = v84;
          uint64_t v57 = v85;
          uint64_t v58 = v82;
          uint64_t v59 = v81;
          uint64_t v18 = v85;
          uint64_t v60 = v80;
          uint64_t v17 = v84;
          unsigned __int8 v61 = 3;
          goto LABEL_140;
        }
        int v71 = sub_24EF87A60();
        sub_24EEF7798(v17, v18, v82, v81, v80, 3u);
        sub_24EEF7798(v33, v32, v35, v34, v36, 3u);
        sub_24EEF7780(v33, v32, v35, v34, v36, 3u);
        uint64_t v25 = v84;
        uint64_t v26 = v85;
        uint64_t v27 = v82;
        int v23 = v83;
        uint64_t v28 = v81;
        uint64_t v18 = v85;
        uint64_t v29 = v80;
        uint64_t v17 = v84;
        unsigned __int8 v30 = 3;
        goto LABEL_35;
      case 4u:
        if (v23 != 4) {
          goto LABEL_91;
        }
        if (v33 != v17 || v32 != v18)
        {
          int v71 = sub_24EF87A60();
          sub_24EEF7798(v17, v18, v82, v81, v80, 4u);
          sub_24EEF7798(v33, v32, v35, v34, v36, 4u);
          sub_24EEF7780(v33, v32, v35, v34, v36, 4u);
          uint64_t v25 = v84;
          uint64_t v26 = v85;
          uint64_t v27 = v82;
          int v23 = v83;
          uint64_t v28 = v81;
          uint64_t v18 = v85;
          uint64_t v29 = v80;
          uint64_t v17 = v84;
          unsigned __int8 v30 = 4;
LABEL_35:
          sub_24EEF7780(v25, v26, v27, v28, v29, v30);
          if (v71) {
            goto LABEL_141;
          }
LABEL_36:
          unint64_t v22 = (v22 + 1) & v78;
          uint64_t v2 = v77;
          if (((*(void *)&v79[(v22 >> 3) & 0xFFFFFFFFFFFFFF8] >> v22) & 1) == 0) {
            goto LABEL_6;
          }
          continue;
        }
        sub_24EEF7798(v17, v18, v82, v81, v80, 4u);
        sub_24EEF7798(v84, v85, v35, v34, v36, 4u);
        sub_24EEF7780(v84, v85, v35, v34, v36, 4u);
        uint64_t v56 = v84;
        uint64_t v57 = v85;
        uint64_t v58 = v82;
        uint64_t v59 = v81;
        uint64_t v18 = v85;
        uint64_t v60 = v80;
        uint64_t v17 = v84;
        unsigned __int8 v61 = 4;
LABEL_140:
        sub_24EEF7780(v56, v57, v58, v59, v60, v61);
LABEL_141:
        uint64_t isStackAllocationSafe = sub_24EEF7780(v17, v18, v82, v81, v80, v37);
LABEL_142:
        v86[0] = v74;
        v86[1] = v73;
        v86[2] = v69;
        v86[3] = v76;
        v86[4] = v75;
        uint64_t v62 = v77;
        char v63 = *(unsigned char *)(v77 + 32);
        unint64_t v64 = (unint64_t)((1 << v63) + 63) >> 6;
        size_t v65 = 8 * v64;
        if ((v63 & 0x3Fu) <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
        {
          MEMORY[0x270FA5388](isStackAllocationSafe);
          memcpy((char *)&v69 - ((v65 + 15) & 0x3FFFFFFFFFFFFFF0), v79, v65);
          uint64_t v66 = sub_24EF7CA70((unint64_t *)((char *)&v69 - ((v65 + 15) & 0x3FFFFFFFFFFFFFF0)), v64, v62, v22, v86);
          swift_release();
          sub_24EF22D4C();
        }
        else
        {
          uint64_t v67 = (void *)swift_slowAlloc();
          memcpy(v67, v79, v65);
          uint64_t v66 = sub_24EF7CA70((unint64_t *)v67, v64, v77, v22, v86);
          swift_release();
          sub_24EF22D4C();
          MEMORY[0x253350FB0](v67, -1, -1);
        }
        return v66;
      case 5u:
        if (v23 != 5) {
          goto LABEL_91;
        }
        if (v33 == v17 && v32 == v18)
        {
          sub_24EEF7798(v17, v18, v82, v81, v80, 5u);
          sub_24EEF7798(v84, v85, v35, v34, v36, 5u);
          sub_24EEF7780(v84, v85, v35, v34, v36, 5u);
          uint64_t v56 = v84;
          uint64_t v57 = v85;
          uint64_t v58 = v82;
          uint64_t v59 = v81;
          uint64_t v18 = v85;
          uint64_t v60 = v80;
          uint64_t v17 = v84;
          unsigned __int8 v61 = 5;
          goto LABEL_140;
        }
        int v71 = sub_24EF87A60();
        sub_24EEF7798(v17, v18, v82, v81, v80, 5u);
        sub_24EEF7798(v33, v32, v35, v34, v36, 5u);
        sub_24EEF7780(v33, v32, v35, v34, v36, 5u);
        uint64_t v25 = v84;
        uint64_t v26 = v85;
        uint64_t v27 = v82;
        int v23 = v83;
        uint64_t v28 = v81;
        uint64_t v18 = v85;
        uint64_t v29 = v80;
        uint64_t v17 = v84;
        unsigned __int8 v30 = 5;
        goto LABEL_35;
      case 6u:
        if (v23 != 6) {
          goto LABEL_91;
        }
        if (v33 == v17 && v32 == v18)
        {
          sub_24EEF7798(v17, v18, v82, v81, v80, 6u);
          sub_24EEF7798(v84, v85, v35, v34, v36, 6u);
          sub_24EEF7780(v84, v85, v35, v34, v36, 6u);
          uint64_t v56 = v84;
          uint64_t v57 = v85;
          uint64_t v58 = v82;
          uint64_t v59 = v81;
          uint64_t v18 = v85;
          uint64_t v60 = v80;
          uint64_t v17 = v84;
          unsigned __int8 v61 = 6;
          goto LABEL_140;
        }
        int v71 = sub_24EF87A60();
        sub_24EEF7798(v17, v18, v82, v81, v80, 6u);
        sub_24EEF7798(v33, v32, v35, v34, v36, 6u);
        sub_24EEF7780(v33, v32, v35, v34, v36, 6u);
        uint64_t v25 = v84;
        uint64_t v26 = v85;
        uint64_t v27 = v82;
        int v23 = v83;
        uint64_t v28 = v81;
        uint64_t v18 = v85;
        uint64_t v29 = v80;
        uint64_t v17 = v84;
        unsigned __int8 v30 = 6;
        goto LABEL_35;
      case 7u:
        if (v23 != 7) {
          goto LABEL_91;
        }
        if (v33 == v17 && v32 == v18)
        {
          sub_24EEF7798(v17, v18, v82, v81, v80, 7u);
          sub_24EEF7798(v84, v85, v35, v34, v36, 7u);
          sub_24EEF7780(v84, v85, v35, v34, v36, 7u);
          uint64_t v56 = v84;
          uint64_t v57 = v85;
          uint64_t v58 = v82;
          uint64_t v59 = v81;
          uint64_t v18 = v85;
          uint64_t v60 = v80;
          uint64_t v17 = v84;
          unsigned __int8 v61 = 7;
          goto LABEL_140;
        }
        int v71 = sub_24EF87A60();
        sub_24EEF7798(v17, v18, v82, v81, v80, 7u);
        sub_24EEF7798(v33, v32, v35, v34, v36, 7u);
        sub_24EEF7780(v33, v32, v35, v34, v36, 7u);
        uint64_t v25 = v84;
        uint64_t v26 = v85;
        uint64_t v27 = v82;
        int v23 = v83;
        uint64_t v28 = v81;
        uint64_t v18 = v85;
        uint64_t v29 = v80;
        uint64_t v17 = v84;
        unsigned __int8 v30 = 7;
        goto LABEL_35;
      case 8u:
        if (v23 != 8) {
          goto LABEL_92;
        }
        unint64_t v47 = 0xEF746867696C746FLL;
        uint64_t v48 = 0x7053747369747261;
        switch(*(void *)v31)
        {
          case 1u:
            uint64_t v48 = 0x6565776F6C6C6168;
            unint64_t v47 = 0xE90000000000006ELL;
            break;
          case 2u:
            unint64_t v47 = 0xE700000000000000;
            uint64_t v48 = 0x796164696C6F68;
            break;
          case 3u:
            uint64_t v48 = 0x77654E72616E756CLL;
            unint64_t v47 = 0xEC00000072616559;
            break;
          case 4u:
            unint64_t v47 = 0xE700000000000000;
            uint64_t v48 = 0x7261655977656ELL;
            break;
          case 5u:
            unint64_t v47 = 0xE500000000000000;
            uint64_t v48 = 0x6564697270;
            break;
          case 6u:
            uint64_t v48 = 0x576D6172676F7270;
            unint64_t v47 = 0xEE0074756F6B726FLL;
            break;
          case 7u:
            uint64_t v48 = 0x6967736B6E616874;
            unint64_t v47 = 0xEC000000676E6976;
            break;
          default:
            break;
        }
        uint64_t v51 = 0x7053747369747261;
        unint64_t v52 = 0xEF746867696C746FLL;
        switch((char)v72)
        {
          case 1:
            unint64_t v52 = 0xE90000000000006ELL;
            if (v48 != 0x6565776F6C6C6168) {
              goto LABEL_125;
            }
            goto LABEL_124;
          case 2:
            unint64_t v52 = 0xE700000000000000;
            if (v48 != 0x796164696C6F68) {
              goto LABEL_125;
            }
            goto LABEL_124;
          case 3:
            uint64_t v53 = 0x77654E72616E756CLL;
            uint64_t v54 = 1918985561;
            goto LABEL_120;
          case 4:
            unint64_t v52 = 0xE700000000000000;
            if (v48 != 0x7261655977656ELL) {
              goto LABEL_125;
            }
            goto LABEL_124;
          case 5:
            unint64_t v52 = 0xE500000000000000;
            uint64_t v51 = 0x6564697270;
            goto LABEL_123;
          case 6:
            unint64_t v52 = 0xEE0074756F6B726FLL;
            if (v48 != 0x576D6172676F7270) {
              goto LABEL_125;
            }
            goto LABEL_124;
          case 7:
            uint64_t v53 = 0x6967736B6E616874;
            uint64_t v54 = 1735289206;
LABEL_120:
            unint64_t v52 = v54 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            if (v48 != v53) {
              goto LABEL_125;
            }
            goto LABEL_124;
          default:
LABEL_123:
            if (v48 != v51) {
              goto LABEL_125;
            }
LABEL_124:
            if (v47 == v52)
            {
              swift_bridgeObjectRelease_n();
              uint64_t v56 = v33;
              uint64_t v57 = v32;
              uint64_t v58 = v35;
              uint64_t v59 = v34;
              uint64_t v60 = v36;
              unsigned __int8 v61 = 8;
              goto LABEL_140;
            }
LABEL_125:
            int v71 = sub_24EF87A60();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_24EEF7780(v33, v32, v35, v34, v36, 8u);
            uint64_t isStackAllocationSafe = sub_24EEF7780(v17, v18, v82, v81, v80, 8u);
            int v23 = v83;
            if (v71) {
              goto LABEL_142;
            }
            break;
        }
        goto LABEL_36;
      default:
        if (v23)
        {
LABEL_91:
          swift_bridgeObjectRetain_n();
LABEL_92:
          sub_24EEF7798(v17, v18, v82, v81, v80, v83);
          sub_24EEF7780(v33, v32, v35, v34, v36, v37);
          int v23 = v83;
          uint64_t v18 = v85;
          uint64_t v17 = v84;
          sub_24EEF7780(v84, v85, v82, v81, v80, v83);
          sub_24EEF7780(v33, v32, v35, v34, v36, v37);
          goto LABEL_36;
        }
        if (v33 == v17 && v32 == v18)
        {
          sub_24EEF7798(v17, v18, v82, v81, v80, 0);
          sub_24EEF7798(v84, v85, v35, v34, v36, 0);
          sub_24EEF7780(v84, v85, v35, v34, v36, 0);
          uint64_t v56 = v84;
          uint64_t v57 = v85;
          uint64_t v58 = v82;
          uint64_t v59 = v81;
          uint64_t v18 = v85;
          uint64_t v60 = v80;
          uint64_t v17 = v84;
          unsigned __int8 v61 = 0;
          goto LABEL_140;
        }
        int v71 = sub_24EF87A60();
        sub_24EEF7798(v17, v18, v82, v81, v80, 0);
        sub_24EEF7798(v33, v32, v35, v34, v36, 0);
        sub_24EEF7780(v33, v32, v35, v34, v36, 0);
        uint64_t v25 = v84;
        uint64_t v26 = v85;
        uint64_t v27 = v82;
        int v23 = v83;
        uint64_t v28 = v81;
        uint64_t v18 = v85;
        uint64_t v29 = v80;
        uint64_t v17 = v84;
        unsigned __int8 v30 = 0;
        goto LABEL_35;
    }
  }
}

uint64_t sub_24EF7C8E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24EF0D038(a1, (uint64_t)v23);
  uint64_t v4 = *v2;
  sub_24EF87A90();
  swift_bridgeObjectRetain();
  FilterItem.hash(into:)();
  uint64_t v5 = sub_24EF87AD0();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    while (1)
    {
      uint64_t v9 = *(void *)(v4 + 48) + 48 * v7;
      uint64_t v10 = *(void *)(v9 + 32);
      char v11 = *(unsigned char *)(v9 + 40);
      long long v12 = *(_OWORD *)(v9 + 16);
      v20[0] = *(_OWORD *)v9;
      v20[1] = v12;
      uint64_t v21 = v10;
      char v22 = v11;
      if (_s16FitnessFiltering10FilterItemO2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v23)) {
        break;
      }
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v2;
    *(void *)&v20[0] = *v2;
    *uint64_t v2 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_24EF7A508();
      uint64_t v15 = *(void *)&v20[0];
    }
    uint64_t v16 = *(void *)(v15 + 48) + 48 * v7;
    uint64_t v17 = *(void *)(v16 + 32);
    char v18 = *(unsigned char *)(v16 + 40);
    long long v19 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v16;
    *(_OWORD *)(a2 + 16) = v19;
    *(void *)(a2 + 32) = v17;
    *(unsigned char *)(a2 + 40) = v18;
    sub_24EF7E378(v7);
    *uint64_t v2 = *(void *)&v20[0];
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_5:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(unsigned char *)(a2 + 40) = -1;
  }
  return result;
}

uint64_t sub_24EF7CA70(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v64 = a5;
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v6 = v5 - 1;
  uint64_t v69 = a3 + 56;
LABEL_2:
  uint64_t v62 = v6;
  while (1)
  {
LABEL_4:
    int64_t v8 = a5[3];
    unint64_t v7 = a5[4];
    if (v7)
    {
      uint64_t v9 = (v7 - 1) & v7;
      unint64_t v10 = __clz(__rbit64(v7)) | (v8 << 6);
      goto LABEL_16;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_142:
      __break(1u);
      JUMPOUT(0x24EF7DDA8);
    }
    int64_t v12 = (unint64_t)(a5[2] + 64) >> 6;
    if (v11 >= v12) {
      break;
    }
    uint64_t v13 = a5[1];
    unint64_t v14 = *(void *)(v13 + 8 * v11);
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v12) {
        goto LABEL_138;
      }
      unint64_t v14 = *(void *)(v13 + 8 * v15);
      if (!v14)
      {
        if (v8 + 3 >= v12) {
          goto LABEL_139;
        }
        unint64_t v14 = *(void *)(v13 + 8 * (v8 + 3));
        if (v14)
        {
          int64_t v11 = v8 + 3;
          goto LABEL_15;
        }
        int64_t v15 = v8 + 4;
        if (v8 + 4 >= v12)
        {
          int64_t v11 = v8 + 3;
          goto LABEL_138;
        }
        unint64_t v14 = *(void *)(v13 + 8 * v15);
        if (!v14)
        {
          int64_t v11 = v8 + 5;
          if (v8 + 5 >= v12)
          {
LABEL_139:
            int64_t v11 = v15;
            goto LABEL_138;
          }
          unint64_t v14 = *(void *)(v13 + 8 * v11);
          if (!v14)
          {
            int64_t v11 = v12 - 1;
            int64_t v57 = v8 + 6;
            do
            {
              if (v12 == v57) {
                goto LABEL_138;
              }
              unint64_t v14 = *(void *)(v13 + 8 * v57++);
            }
            while (!v14);
            int64_t v11 = v57 - 1;
          }
          goto LABEL_15;
        }
      }
      int64_t v11 = v15;
    }
LABEL_15:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
    int64_t v8 = v11;
LABEL_16:
    uint64_t v16 = *(void *)(*a5 + 48) + 48 * v10;
    uint64_t v18 = *(void *)v16;
    uint64_t v17 = *(void *)(v16 + 8);
    uint64_t v74 = *(uint64_t *)(v16 + 16);
    uint64_t v72 = *(uint64_t *)(v16 + 24);
    uint64_t v71 = *(uint64_t *)(v16 + 32);
    uint64_t v19 = *(unsigned __int8 *)(v16 + 40);
    a5[3] = v8;
    a5[4] = v9;
    sub_24EF87A90();
    int v73 = v19;
    switch(v19)
    {
      case 1:
        sub_24EF87AA0();
        swift_bridgeObjectRetain_n();
        sub_24EF87670();
        sub_24EEF7780(v18, v17, v74, v72, v71, 1u);
        sub_24EF87AC0();
        sub_24EF87AC0();
        sub_24EF87AC0();
        break;
      case 8:
        sub_24EF87AA0();
        sub_24EF87670();
        swift_bridgeObjectRelease();
        break;
      default:
        sub_24EF87AA0();
        swift_bridgeObjectRetain();
        sub_24EF87670();
        break;
    }
    uint64_t v20 = sub_24EF87AD0();
    uint64_t v21 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v22 = v20 & ~v21;
    if ((*(void *)(v69 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
    {
      uint64_t v68 = ~v21;
      char v65 = v18;
      uint64_t v75 = v18;
      uint64_t v77 = v17;
      while (2)
      {
        uint64_t v30 = *(void *)(a3 + 48) + 48 * v22;
        uint64_t v32 = *(void *)v30;
        uint64_t v31 = *(void *)(v30 + 8);
        uint64_t v33 = *(uint64_t *)(v30 + 16);
        uint64_t v76 = *(uint64_t *)(v30 + 24);
        uint64_t v34 = *(uint64_t *)(v30 + 32);
        unsigned __int8 v78 = *(unsigned char *)(v30 + 40);
        switch(v78)
        {
          case 1u:
            if (v73 != 1) {
              goto LABEL_74;
            }
            if (v32 == v18 && v31 == v17)
            {
              sub_24EEF7798(v18, v17, v74, v72, v71, 1u);
              sub_24EEF7798(v75, v77, v33, v76, v34, 1u);
              sub_24EEF7780(v75, v77, v33, v76, v34, 1u);
              uint64_t v17 = v77;
              uint64_t v18 = v75;
              sub_24EEF7780(v75, v77, v74, v72, v71, 1u);
            }
            else
            {
              char v67 = sub_24EF87A60();
              sub_24EEF7798(v18, v17, v74, v72, v71, 1u);
              sub_24EEF7798(v32, v31, v33, v76, v34, 1u);
              sub_24EEF7780(v32, v31, v33, v76, v34, 1u);
              uint64_t v17 = v77;
              uint64_t v18 = v75;
              sub_24EEF7780(v75, v77, v74, v72, v71, 1u);
              if ((v67 & 1) == 0) {
                goto LABEL_27;
              }
            }
            if (*(double *)&v33 == *(double *)&v74
              && *(double *)&v76 == *(double *)&v72
              && *(double *)&v34 == *(double *)&v71)
            {
              goto LABEL_132;
            }
            goto LABEL_27;
          case 2u:
            if (v73 != 2) {
              goto LABEL_74;
            }
            if (v32 == v18 && v31 == v17)
            {
              sub_24EEF7798(v18, v17, v74, v72, v71, 2u);
              sub_24EEF7798(v75, v77, v33, v76, v34, 2u);
              sub_24EEF7780(v75, v77, v33, v76, v34, 2u);
              uint64_t v51 = v75;
              uint64_t v52 = v77;
              uint64_t v53 = v74;
              uint64_t v17 = v77;
              uint64_t v54 = v72;
              uint64_t v18 = v75;
              uint64_t v55 = v71;
              unsigned __int8 v56 = 2;
              goto LABEL_131;
            }
            char v66 = sub_24EF87A60();
            sub_24EEF7798(v18, v17, v74, v72, v71, 2u);
            sub_24EEF7798(v32, v31, v33, v76, v34, 2u);
            sub_24EEF7780(v32, v31, v33, v76, v34, 2u);
            uint64_t v24 = v75;
            uint64_t v25 = v77;
            uint64_t v26 = v74;
            uint64_t v17 = v77;
            uint64_t v27 = v72;
            uint64_t v18 = v75;
            uint64_t v28 = v71;
            unsigned __int8 v29 = 2;
            goto LABEL_26;
          case 3u:
            if (v73 != 3) {
              goto LABEL_74;
            }
            if (v32 == v18 && v31 == v17)
            {
              sub_24EEF7798(v18, v17, v74, v72, v71, 3u);
              sub_24EEF7798(v75, v77, v33, v76, v34, 3u);
              sub_24EEF7780(v75, v77, v33, v76, v34, 3u);
              uint64_t v51 = v75;
              uint64_t v52 = v77;
              uint64_t v53 = v74;
              uint64_t v17 = v77;
              uint64_t v54 = v72;
              uint64_t v18 = v75;
              uint64_t v55 = v71;
              unsigned __int8 v56 = 3;
              goto LABEL_131;
            }
            char v66 = sub_24EF87A60();
            sub_24EEF7798(v18, v17, v74, v72, v71, 3u);
            sub_24EEF7798(v32, v31, v33, v76, v34, 3u);
            sub_24EEF7780(v32, v31, v33, v76, v34, 3u);
            uint64_t v24 = v75;
            uint64_t v25 = v77;
            uint64_t v26 = v74;
            uint64_t v17 = v77;
            uint64_t v27 = v72;
            uint64_t v18 = v75;
            uint64_t v28 = v71;
            unsigned __int8 v29 = 3;
            goto LABEL_26;
          case 4u:
            if (v73 != 4) {
              goto LABEL_74;
            }
            if (v32 == v18 && v31 == v17)
            {
              sub_24EEF7798(v18, v17, v74, v72, v71, 4u);
              sub_24EEF7798(v75, v77, v33, v76, v34, 4u);
              sub_24EEF7780(v75, v77, v33, v76, v34, 4u);
              uint64_t v51 = v75;
              uint64_t v52 = v77;
              uint64_t v53 = v74;
              uint64_t v17 = v77;
              uint64_t v54 = v72;
              uint64_t v18 = v75;
              uint64_t v55 = v71;
              unsigned __int8 v56 = 4;
              goto LABEL_131;
            }
            char v66 = sub_24EF87A60();
            sub_24EEF7798(v18, v17, v74, v72, v71, 4u);
            sub_24EEF7798(v32, v31, v33, v76, v34, 4u);
            sub_24EEF7780(v32, v31, v33, v76, v34, 4u);
            uint64_t v24 = v75;
            uint64_t v25 = v77;
            uint64_t v26 = v74;
            uint64_t v17 = v77;
            uint64_t v27 = v72;
            uint64_t v18 = v75;
            uint64_t v28 = v71;
            unsigned __int8 v29 = 4;
            goto LABEL_26;
          case 5u:
            if (v73 != 5) {
              goto LABEL_74;
            }
            if (v32 == v18 && v31 == v17)
            {
              sub_24EEF7798(v18, v17, v74, v72, v71, 5u);
              sub_24EEF7798(v75, v77, v33, v76, v34, 5u);
              sub_24EEF7780(v75, v77, v33, v76, v34, 5u);
              uint64_t v51 = v75;
              uint64_t v52 = v77;
              uint64_t v53 = v74;
              uint64_t v17 = v77;
              uint64_t v54 = v72;
              uint64_t v18 = v75;
              uint64_t v55 = v71;
              unsigned __int8 v56 = 5;
              goto LABEL_131;
            }
            char v66 = sub_24EF87A60();
            sub_24EEF7798(v18, v17, v74, v72, v71, 5u);
            sub_24EEF7798(v32, v31, v33, v76, v34, 5u);
            sub_24EEF7780(v32, v31, v33, v76, v34, 5u);
            uint64_t v24 = v75;
            uint64_t v25 = v77;
            uint64_t v26 = v74;
            uint64_t v17 = v77;
            uint64_t v27 = v72;
            uint64_t v18 = v75;
            uint64_t v28 = v71;
            unsigned __int8 v29 = 5;
            goto LABEL_26;
          case 6u:
            if (v73 != 6) {
              goto LABEL_74;
            }
            if (v32 == v18 && v31 == v17)
            {
              sub_24EEF7798(v18, v17, v74, v72, v71, 6u);
              sub_24EEF7798(v75, v77, v33, v76, v34, 6u);
              sub_24EEF7780(v75, v77, v33, v76, v34, 6u);
              uint64_t v51 = v75;
              uint64_t v52 = v77;
              uint64_t v53 = v74;
              uint64_t v17 = v77;
              uint64_t v54 = v72;
              uint64_t v18 = v75;
              uint64_t v55 = v71;
              unsigned __int8 v56 = 6;
              goto LABEL_131;
            }
            char v66 = sub_24EF87A60();
            sub_24EEF7798(v18, v17, v74, v72, v71, 6u);
            sub_24EEF7798(v32, v31, v33, v76, v34, 6u);
            sub_24EEF7780(v32, v31, v33, v76, v34, 6u);
            uint64_t v24 = v75;
            uint64_t v25 = v77;
            uint64_t v26 = v74;
            uint64_t v17 = v77;
            uint64_t v27 = v72;
            uint64_t v18 = v75;
            uint64_t v28 = v71;
            unsigned __int8 v29 = 6;
            goto LABEL_26;
          case 7u:
            if (v73 != 7) {
              goto LABEL_74;
            }
            if (v32 == v18 && v31 == v17)
            {
              sub_24EEF7798(v18, v17, v74, v72, v71, 7u);
              sub_24EEF7798(v75, v77, v33, v76, v34, 7u);
              sub_24EEF7780(v75, v77, v33, v76, v34, 7u);
              uint64_t v51 = v75;
              uint64_t v52 = v77;
              uint64_t v53 = v74;
              uint64_t v17 = v77;
              uint64_t v54 = v72;
              uint64_t v18 = v75;
              uint64_t v55 = v71;
              unsigned __int8 v56 = 7;
              goto LABEL_131;
            }
            char v66 = sub_24EF87A60();
            sub_24EEF7798(v18, v17, v74, v72, v71, 7u);
            sub_24EEF7798(v32, v31, v33, v76, v34, 7u);
            sub_24EEF7780(v32, v31, v33, v76, v34, 7u);
            uint64_t v24 = v75;
            uint64_t v25 = v77;
            uint64_t v26 = v74;
            uint64_t v17 = v77;
            uint64_t v27 = v72;
            uint64_t v18 = v75;
            uint64_t v28 = v71;
            unsigned __int8 v29 = 7;
            goto LABEL_26;
          case 8u:
            if (v73 != 8) {
              goto LABEL_75;
            }
            unint64_t v42 = 0xEF746867696C746FLL;
            uint64_t v43 = 0x7053747369747261;
            switch(*(void *)v30)
            {
              case 1u:
                uint64_t v43 = 0x6565776F6C6C6168;
                unint64_t v42 = 0xE90000000000006ELL;
                break;
              case 2u:
                unint64_t v42 = 0xE700000000000000;
                uint64_t v43 = 0x796164696C6F68;
                break;
              case 3u:
                uint64_t v43 = 0x77654E72616E756CLL;
                uint64_t v46 = 1918985561;
                goto LABEL_95;
              case 4u:
                unint64_t v42 = 0xE700000000000000;
                uint64_t v43 = 0x7261655977656ELL;
                break;
              case 5u:
                unint64_t v42 = 0xE500000000000000;
                uint64_t v43 = 0x6564697270;
                break;
              case 6u:
                uint64_t v43 = 0x576D6172676F7270;
                unint64_t v42 = 0xEE0074756F6B726FLL;
                break;
              case 7u:
                uint64_t v43 = 0x6967736B6E616874;
                uint64_t v46 = 1735289206;
LABEL_95:
                unint64_t v42 = v46 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
                break;
              default:
                break;
            }
            uint64_t v47 = 0x7053747369747261;
            unint64_t v48 = 0xEF746867696C746FLL;
            switch(v65)
            {
              case 1:
                unint64_t v48 = 0xE90000000000006ELL;
                if (v43 != 0x6565776F6C6C6168) {
                  goto LABEL_112;
                }
                goto LABEL_111;
              case 2:
                unint64_t v48 = 0xE700000000000000;
                if (v43 != 0x796164696C6F68) {
                  goto LABEL_112;
                }
                goto LABEL_111;
              case 3:
                uint64_t v49 = 0x77654E72616E756CLL;
                uint64_t v50 = 1918985561;
                goto LABEL_110;
              case 4:
                unint64_t v48 = 0xE700000000000000;
                if (v43 != 0x7261655977656ELL) {
                  goto LABEL_112;
                }
                goto LABEL_111;
              case 5:
                unint64_t v48 = 0xE500000000000000;
                if (v43 != 0x6564697270) {
                  goto LABEL_112;
                }
                goto LABEL_111;
              case 6:
                uint64_t v47 = 0x576D6172676F7270;
                unint64_t v48 = 0xEE0074756F6B726FLL;
                goto LABEL_107;
              case 7:
                uint64_t v49 = 0x6967736B6E616874;
                uint64_t v50 = 1735289206;
LABEL_110:
                unint64_t v48 = v50 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
                if (v43 == v49) {
                  goto LABEL_111;
                }
                goto LABEL_112;
              default:
LABEL_107:
                if (v43 != v47) {
                  goto LABEL_112;
                }
LABEL_111:
                if (v42 == v48)
                {
                  swift_bridgeObjectRelease_n();
                  sub_24EEF7780(v32, v31, v33, v76, v34, 8u);
                  uint64_t v17 = v77;
                  goto LABEL_132;
                }
LABEL_112:
                char v79 = sub_24EF87A60();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_24EEF7780(v32, v31, v33, v76, v34, 8u);
                uint64_t v17 = v77;
                sub_24EEF7780(v18, v77, v74, v72, v71, 8u);
                if (v79) {
                  goto LABEL_133;
                }
                break;
            }
            goto LABEL_27;
          default:
            if (v73)
            {
LABEL_74:
              swift_bridgeObjectRetain_n();
LABEL_75:
              sub_24EEF7798(v18, v17, v74, v72, v71, v73);
              sub_24EEF7780(v32, v31, v33, v76, v34, v78);
              uint64_t v17 = v77;
              uint64_t v18 = v75;
              sub_24EEF7780(v75, v77, v74, v72, v71, v73);
              sub_24EEF7780(v32, v31, v33, v76, v34, v78);
              goto LABEL_27;
            }
            if (v32 != v18 || v31 != v17)
            {
              char v66 = sub_24EF87A60();
              sub_24EEF7798(v18, v17, v74, v72, v71, 0);
              sub_24EEF7798(v32, v31, v33, v76, v34, 0);
              sub_24EEF7780(v32, v31, v33, v76, v34, 0);
              uint64_t v24 = v75;
              uint64_t v25 = v77;
              uint64_t v26 = v74;
              uint64_t v17 = v77;
              uint64_t v27 = v72;
              uint64_t v28 = v71;
              uint64_t v18 = v75;
              unsigned __int8 v29 = 0;
LABEL_26:
              sub_24EEF7780(v24, v25, v26, v27, v28, v29);
              if (v66) {
                goto LABEL_132;
              }
LABEL_27:
              unint64_t v22 = (v22 + 1) & v68;
              if (((*(void *)(v69 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
                goto LABEL_3;
              }
              continue;
            }
            sub_24EEF7798(v18, v17, v74, v72, v71, 0);
            sub_24EEF7798(v75, v77, v33, v76, v34, 0);
            sub_24EEF7780(v75, v77, v33, v76, v34, 0);
            uint64_t v51 = v75;
            uint64_t v52 = v77;
            uint64_t v53 = v74;
            uint64_t v17 = v77;
            uint64_t v54 = v72;
            uint64_t v55 = v71;
            uint64_t v18 = v75;
            unsigned __int8 v56 = 0;
LABEL_131:
            sub_24EEF7780(v51, v52, v53, v54, v55, v56);
LABEL_132:
            sub_24EEF7780(v18, v17, v74, v72, v71, v78);
LABEL_133:
            uint64_t v58 = (v22 >> 3) & 0x1FFFFFFFFFFFFFF8;
            a5 = v64;
            uint64_t v59 = *(unint64_t *)((char *)a1 + v58);
            *(unint64_t *)((char *)a1 + v58) = v59 & ~(1 << v22);
            if ((v59 & (1 << v22)) == 0) {
              goto LABEL_4;
            }
            uint64_t v6 = v62 - 1;
            if (__OFSUB__(v62, 1)) {
              goto LABEL_142;
            }
            if (v62 == 1) {
              return MEMORY[0x263F8EE88];
            }
            break;
        }
        goto LABEL_2;
      }
    }
LABEL_3:
    sub_24EEF7780(v18, v17, v74, v72, v71, v73);
    a5 = v64;
  }
  int64_t v11 = a5[3];
LABEL_138:
  a5[3] = v11;
  a5[4] = 0;
  swift_retain();
  return sub_24EF7DE50(a1, a2, v62, a3);
}

uint64_t sub_24EF7DE50(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269985EA0);
    uint64_t v8 = sub_24EF87850();
    uint64_t v9 = v8;
    uint64_t v35 = a1;
    uint64_t v36 = a2;
    if (a2 < 1) {
      unint64_t v10 = 0;
    }
    else {
      unint64_t v10 = *a1;
    }
    uint64_t v12 = 0;
    uint64_t v13 = v8 + 56;
    uint64_t v37 = v4;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        uint64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_44;
        }
        if (v16 >= v36) {
          goto LABEL_6;
        }
        unint64_t v17 = v35[v16];
        ++v12;
        if (!v17)
        {
          uint64_t v12 = v16 + 1;
          if (v16 + 1 >= v36) {
            goto LABEL_6;
          }
          unint64_t v17 = v35[v12];
          if (!v17)
          {
            uint64_t v12 = v16 + 2;
            if (v16 + 2 >= v36) {
              goto LABEL_6;
            }
            unint64_t v17 = v35[v12];
            if (!v17)
            {
              uint64_t v18 = v16 + 3;
              if (v18 >= v36) {
                goto LABEL_6;
              }
              unint64_t v17 = v35[v18];
              if (!v17)
              {
                while (1)
                {
                  uint64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_45;
                  }
                  if (v12 >= v36) {
                    goto LABEL_6;
                  }
                  unint64_t v17 = v35[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_25;
                  }
                }
              }
              uint64_t v12 = v18;
            }
          }
        }
LABEL_25:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(v4 + 48) + 48 * v15;
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      uint64_t v22 = *(void *)(v19 + 32);
      uint64_t v38 = *(void *)(v19 + 24);
      uint64_t v39 = *(void *)(v19 + 16);
      uint64_t v23 = *(unsigned __int8 *)(v19 + 40);
      sub_24EF87A90();
      switch(v23)
      {
        case 1:
          sub_24EF87AA0();
          swift_bridgeObjectRetain_n();
          sub_24EF87670();
          sub_24EEF7780(v20, v21, v39, v38, v22, 1u);
          sub_24EF87AC0();
          sub_24EF87AC0();
          sub_24EF87AC0();
          break;
        case 8:
          sub_24EF87AA0();
          sub_24EF87670();
          swift_bridgeObjectRelease();
          break;
        default:
          sub_24EF87AA0();
          swift_bridgeObjectRetain();
          sub_24EF87670();
          break;
      }
      uint64_t v24 = sub_24EF87AD0();
      uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v26 = v24 & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_39;
      }
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          JUMPOUT(0x24EF7E334);
        }
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
      }
      while (v32 == -1);
      unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
LABEL_39:
      *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      uint64_t v33 = *(void *)(v9 + 48) + 48 * v28;
      *(void *)uint64_t v33 = v20;
      *(void *)(v33 + 8) = v21;
      *(void *)(v33 + 16) = v39;
      *(void *)(v33 + 24) = v38;
      *(void *)(v33 + 32) = v22;
      *(unsigned char *)(v33 + 40) = v23;
      ++*(void *)(v9 + 16);
      if (__OFSUB__(v5--, 1)) {
        goto LABEL_43;
      }
      uint64_t v4 = v37;
      if (!v5)
      {
LABEL_6:
        swift_release();
        return v9;
      }
    }
  }
  return v4;
}

unint64_t sub_24EF7E378(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_24EF87810();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v28 = (v8 + 1) & v7;
      uint64_t v29 = v7;
      uint64_t v30 = v4;
      uint64_t v31 = v3;
      do
      {
        uint64_t v11 = 48 * v6;
        uint64_t v12 = *(void *)(v3 + 48) + 48 * v6;
        uint64_t v13 = *(void *)v12;
        uint64_t v14 = *(void *)(v12 + 8);
        uint64_t v16 = *(void *)(v12 + 16);
        uint64_t v15 = *(void *)(v12 + 24);
        uint64_t v17 = *(void *)(v12 + 32);
        uint64_t v18 = *(unsigned __int8 *)(v12 + 40);
        sub_24EF87A90();
        switch(v18)
        {
          case 1:
            sub_24EF87AA0();
            swift_bridgeObjectRetain();
            sub_24EF87670();
            sub_24EF87AC0();
            sub_24EF87AC0();
            sub_24EF87AC0();
            break;
          case 8:
            sub_24EF87AA0();
            sub_24EF87670();
            swift_bridgeObjectRelease();
            break;
          default:
            sub_24EF87AA0();
            swift_bridgeObjectRetain();
            sub_24EF87670();
            break;
        }
        uint64_t v19 = sub_24EF87AD0();
        sub_24EEF7780(v13, v14, v16, v15, v17, v18);
        unint64_t v20 = v19 & v29;
        if (v2 >= (uint64_t)v28)
        {
          uint64_t v4 = v30;
          uint64_t v3 = v31;
          if (v20 < v28) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v4 = v30;
          uint64_t v3 = v31;
          if (v20 >= v28) {
            goto LABEL_14;
          }
        }
        if (v2 >= (uint64_t)v20)
        {
LABEL_14:
          uint64_t v21 = *(void *)(v3 + 48);
          uint64_t v22 = (long long *)(v21 + 48 * v2);
          uint64_t v23 = (long long *)(v21 + v11);
          if (48 * v2 < v11 || v22 >= v23 + 3 || (v24 = v2 == v6, int64_t v2 = v6, !v24))
          {
            long long v9 = *v23;
            long long v10 = v23[2];
            v22[1] = v23[1];
            void v22[2] = v10;
            *uint64_t v22 = v9;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v29;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v25 = *(void *)(v3 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
    JUMPOUT(0x24EF7E794);
  }
  *(void *)(v3 + 16) = v27;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t sub_24EF7E7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 0xFF) {
    return sub_24EEF7780(a1, a2, a3, a4, a5, a6);
  }
  return a1;
}

BOOL static FilterLayout.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x25334FBC0]() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for FilterLayout();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t type metadata accessor for FilterLayout()
{
  uint64_t result = qword_269987998;
  if (!qword_269987998) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FilterLayout.init(contentMargins:sizeClass:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24EF86B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for FilterLayout();
  *(unsigned char *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_24EF7E904()
{
  if (*v0) {
    return 0x73616C43657A6973;
  }
  else {
    return 0x4D746E65746E6F63;
  }
}

uint64_t sub_24EF7E950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EF7FC48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EF7E978(uint64_t a1)
{
  unint64_t v2 = sub_24EF7EBBC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EF7E9B4(uint64_t a1)
{
  unint64_t v2 = sub_24EF7EBBC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FilterLayout.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987958);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF7EBBC();
  sub_24EF87AF0();
  v10[15] = 0;
  sub_24EF86B00();
  sub_24EF7F44C(&qword_269987968, MEMORY[0x263F3DF60]);
  sub_24EF87A20();
  if (!v2)
  {
    v10[14] = *(unsigned char *)(v3 + *(int *)(type metadata accessor for FilterLayout() + 20));
    v10[13] = 1;
    sub_24EF7EC10();
    sub_24EF87A20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24EF7EBBC()
{
  unint64_t result = qword_269987960;
  if (!qword_269987960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987960);
  }
  return result;
}

unint64_t sub_24EF7EC10()
{
  unint64_t result = qword_269987970;
  if (!qword_269987970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987970);
  }
  return result;
}

uint64_t FilterLayout.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v27 = sub_24EF86B00();
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269987978);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  uint64_t v26 = v7;
  MEMORY[0x270FA5388](v6);
  long long v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FilterLayout();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EF7EBBC();
  sub_24EF87AE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v22 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = v24;
  char v30 = 0;
  sub_24EF7F44C(&qword_269987980, MEMORY[0x263F3DF60]);
  uint64_t v15 = v27;
  uint64_t v16 = v25;
  sub_24EF87970();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v21 = (uint64_t)v13;
  v17(v13, v5, v15);
  char v28 = 1;
  sub_24EF7EFC0();
  sub_24EF87970();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v16);
  uint64_t v18 = v21;
  *(unsigned char *)(v21 + *(int *)(v22 + 20)) = v29;
  sub_24EF7F014(v18, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24EF7F078(v18);
}

unint64_t sub_24EF7EFC0()
{
  unint64_t result = qword_269987988;
  if (!qword_269987988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269987988);
  }
  return result;
}

uint64_t sub_24EF7F014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FilterLayout();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EF7F078(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FilterLayout();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EF7F0D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FilterLayout.init(from:)(a1, a2);
}

uint64_t sub_24EF7F0EC(void *a1)
{
  return FilterLayout.encode(to:)(a1);
}

uint64_t FilterLayout.hash(into:)()
{
  return sub_24EF87AA0();
}

uint64_t FilterLayout.hashValue.getter()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF7F234()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF7F2D8()
{
  return sub_24EF87AA0();
}

uint64_t sub_24EF7F364()
{
  return sub_24EF87AD0();
}

uint64_t sub_24EF7F404()
{
  return sub_24EF7F44C(&qword_269987990, (void (*)(uint64_t))type metadata accessor for FilterLayout);
}

uint64_t sub_24EF7F44C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_24EF7F494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (MEMORY[0x25334FBC0]() & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20));
}

void *initializeBufferWithCopyOfBuffer for FilterLayout(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24EF86B00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for FilterLayout(uint64_t a1)
{
  uint64_t v2 = sub_24EF86B00();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for FilterLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EF86B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for FilterLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EF86B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for FilterLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EF86B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for FilterLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EF86B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for FilterLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EF7F81C);
}

uint64_t sub_24EF7F81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EF86B00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 6) {
      return v10 - 5;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for FilterLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EF7F8EC);
}

uint64_t sub_24EF7F8EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24EF86B00();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 5;
  }
  return result;
}

uint64_t sub_24EF7F9A8()
{
  uint64_t result = sub_24EF86B00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FilterLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EF7FB08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterLayout.CodingKeys()
{
  return &type metadata for FilterLayout.CodingKeys;
}

unint64_t sub_24EF7FB44()
{
  unint64_t result = qword_2699879A8;
  if (!qword_2699879A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699879A8);
  }
  return result;
}

unint64_t sub_24EF7FB9C()
{
  unint64_t result = qword_2699879B0;
  if (!qword_2699879B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699879B0);
  }
  return result;
}

unint64_t sub_24EF7FBF4()
{
  unint64_t result = qword_2699879B8;
  if (!qword_2699879B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699879B8);
  }
  return result;
}

uint64_t sub_24EF7FC48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4D746E65746E6F63 && a2 == 0xEE00736E69677261;
  if (v2 || (sub_24EF87A60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73616C43657A6973 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EF87A60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EF7FD70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_24EF7FDA8(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  unsigned int v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x270FA5388](TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      unsigned int v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x270FA5388](TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_24EF874B0();
}

uint64_t sub_24EF7FF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EF86DB0();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_24EF86DC0();
}

uint64_t sub_24EF80064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24EF86DB0();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_24EF86DC0();
}

uint64_t FilterResultsView.init(store:canvasViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a5 = sub_24EF60450;
  *(void *)(a5 + 8) = result;
  *(unsigned char *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = a3;
  *(void *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_24EF801D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24EF80208(void *a1)
{
  uint64_t v2 = sub_24EF86A60();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24EF87630();
  MEMORY[0x270FA5388](v3 - 8);
  if (*a1 && sub_24EF0A58C(6u, a1[8]))
  {
    sub_24EF875C0();
    if (qword_269985870 == -1) {
      goto LABEL_6;
    }
    goto LABEL_7;
  }
  sub_24EF875C0();
  if (qword_269985870 != -1) {
LABEL_7:
  }
    swift_once();
LABEL_6:
  (id)qword_269997D90;
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  return sub_24EF87650();
}

uint64_t FilterResultsView.body.getter(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699879C0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699879C8);
  uint64_t v3 = *(void *)(a1 + 16);
  swift_getTupleTypeMetadata3();
  sub_24EF874A0();
  sub_24EF877D0();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EF873E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699872A0);
  uint64_t v4 = sub_24EF86DD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v16 - v6;
  long long v8 = v1[1];
  long long v21 = *v1;
  long long v22 = v8;
  uint64_t v23 = *((void *)v1 + 4);
  long long v9 = v1[1];
  long long v17 = *v1;
  long long v18 = v9;
  uint64_t v19 = *((void *)v1 + 4);
  sub_24EF80734(a1, (uint64_t)v16 - v6);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)(v10 + 16) = v3;
  *(void *)(v10 + 24) = v11;
  long long v12 = v22;
  *(_OWORD *)(v10 + 32) = v21;
  *(_OWORD *)(v10 + 48) = v12;
  *(void *)(v10 + 64) = v23;
  sub_24EF6C170((uint64_t)&v21);
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = sub_24EEFD4C4(&qword_2699872B0, &qword_2699872A0);
  v16[0] = v13;
  v16[1] = v14;
  swift_getWitnessTable();
  sub_24EF87290();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24EF80734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699879C0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699879C8);
  uint64_t v98 = *(void *)(a1 + 16);
  swift_getTupleTypeMetadata3();
  sub_24EF874A0();
  uint64_t v5 = sub_24EF877D0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v96 = swift_getWitnessTable();
  uint64_t v97 = v5;
  uint64_t v6 = sub_24EF873E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v99 = (char *)v66 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699872A0);
  uint64_t v13 = sub_24EF86DD0();
  uint64_t v100 = *(void *)(v13 - 8);
  uint64_t v101 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v66 - v14;
  long long v16 = *(_OWORD *)(v2 + 16);
  v107[0] = *(_OWORD *)v2;
  v107[1] = v16;
  uint64_t v108 = *(void *)(v2 + 32);
  long long v17 = *(_OWORD *)(v2 + 16);
  v111[0] = *(_OWORD *)v2;
  v111[1] = v17;
  uint64_t v112 = *(void *)(v2 + 32);
  uint64_t v95 = a1;
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  sub_24EF0C628((uint64_t)&v104, (uint64_t)v110);
  sub_24EF0C628((uint64_t)v110, (uint64_t)v111);
  int v18 = sub_24EF0C6B8((uint64_t)v111);
  if ((v18 - 2) >= 2)
  {
    uint64_t v84 = v10;
    uint64_t v85 = v6;
    uint64_t v86 = v15;
    uint64_t v89 = v7;
    uint64_t v90 = v12;
    uint64_t v91 = a2;
    if (v18)
    {
      uint64_t v36 = nullsub_1(v111);
      uint64_t v37 = *(void *)v36;
      uint64_t v81 = *(void *)(v36 + 8);
      uint64_t v82 = (void *)v37;
      uint64_t v38 = *(void *)(v36 + 16);
      uint64_t v79 = *(void *)(v36 + 32);
      uint64_t v80 = v38;
      uint64_t v39 = *(void *)(v36 + 40);
      uint64_t v77 = *(void *)(v36 + 48);
      uint64_t v78 = v39;
      uint64_t v40 = *(void *)(v36 + 56);
      uint64_t v75 = *(void *)(v36 + 64);
      uint64_t v76 = v40;
      uint64_t v41 = *(void *)(v36 + 72);
      uint64_t v73 = *(void *)(v36 + 80);
      uint64_t v74 = v41;
      uint64_t v42 = *(void *)(v36 + 88);
      uint64_t v43 = *(void *)(v36 + 104);
      uint64_t v70 = *(void *)(v36 + 96);
      uint64_t v71 = v42;
      uint64_t v44 = *(void *)(v36 + 112);
      uint64_t v68 = *(void *)(v36 + 128);
      uint64_t v69 = v44;
      uint64_t v45 = *(void *)(v36 + 144);
      v66[2] = *(void *)(v36 + 152);
      uint64_t v67 = v45;
      uint64_t v46 = *(void *)(v36 + 168);
      v66[1] = *(void *)(v36 + 160);
      uint64_t v47 = *(void *)(v36 + 176);
      uint64_t v29 = *(void *)(v36 + 184);
      uint64_t v31 = *(void *)(v36 + 192);
      uint64_t v30 = *(void *)(v36 + 200);
      uint64_t v48 = *(void *)(v36 + 208);
      uint64_t v33 = *(void *)(v36 + 216);
      uint64_t v93 = *(void *)(v36 + 224);
      uint64_t v94 = v48;
      uint64_t v34 = *(void *)(v36 + 240);
      uint64_t v92 = *(void *)(v36 + 232);
      uint64_t v49 = *(void *)(v36 + 248);
      uint64_t v87 = v47;
      uint64_t v88 = v49;
      uint64_t v83 = *(void *)(v36 + 256);
      LODWORD(v72) = *(unsigned __int8 *)(v36 + 24);
      swift_bridgeObjectRelease();
      uint64_t v64 = v46;
      sub_24EF0CE70(v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = sub_24EF0CF9C((uint64_t)v82);
    }
    else
    {
      uint64_t v19 = (uint64_t *)nullsub_1(v111);
      uint64_t v20 = *v19;
      uint64_t v81 = v19[1];
      uint64_t v82 = (void *)v20;
      uint64_t v21 = v19[2];
      uint64_t v79 = v19[3];
      uint64_t v80 = v21;
      uint64_t v22 = v19[4];
      uint64_t v77 = v19[5];
      uint64_t v78 = v22;
      uint64_t v23 = v19[6];
      uint64_t v75 = v19[7];
      uint64_t v76 = v23;
      uint64_t v24 = v19[8];
      uint64_t v25 = v19[9];
      uint64_t v73 = v19[10];
      uint64_t v74 = v24;
      uint64_t v26 = v19[11];
      uint64_t v27 = v19[12];
      uint64_t v68 = v19[13];
      uint64_t v69 = v27;
      uint64_t v28 = v19[19];
      uint64_t v71 = v26;
      uint64_t v72 = v28;
      uint64_t v70 = v19[21];
      uint64_t v29 = v19[24];
      uint64_t v87 = v19[23];
      uint64_t v88 = v25;
      uint64_t v31 = v19[25];
      uint64_t v30 = v19[26];
      uint64_t v32 = v19[27];
      uint64_t v33 = v19[28];
      uint64_t v93 = v19[29];
      uint64_t v94 = v32;
      uint64_t v34 = v19[31];
      uint64_t v92 = v19[30];
      uint64_t v83 = v19[32];
      uint64_t v67 = v19[33];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v64 = v74;
      uint64_t v35 = sub_24EF0CE70((uint64_t)v82);
    }
    uint64_t v81 = v29;
    uint64_t v82 = v66;
    uint64_t v50 = v87;
    v109[0] = v87;
    v109[1] = v29;
    v109[2] = v31;
    v109[3] = v30;
    v109[4] = v94;
    v109[5] = v33;
    v109[6] = v93;
    v109[7] = v92;
    uint64_t v51 = v34;
    v109[8] = v34;
    MEMORY[0x270FA5388](v35);
    uint64_t v52 = *(void *)(v95 + 24);
    v66[-6] = v98;
    v66[-5] = v52;
    v66[-4] = v107;
    v66[-3] = v109;
    uint64_t v65 = v88;
    sub_24EF86D80();
    uint64_t v53 = (uint64_t)v84;
    sub_24EF873D0();
    uint64_t v64 = v51;
    sub_24EF0CF1C(v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = v85;
    swift_getWitnessTable();
    uint64_t v55 = v89;
    unsigned __int8 v56 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
    int64_t v57 = v99;
    v56(v99, v53, v54);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    v58(v53, v54);
    v56((char *)v53, (uint64_t)v57, v54);
    sub_24EEFD4C4(&qword_2699872B0, &qword_2699872A0);
    uint64_t v15 = v86;
    sub_24EF7FF6C(v53, v54);
    v58(v53, v54);
    v58((uint64_t)v57, v54);
    a2 = v91;
  }
  else
  {
    uint64_t v104 = sub_24EF872E0();
    __int16 v105 = 256;
    swift_getWitnessTable();
    sub_24EEFD4C4(&qword_2699872B0, &qword_2699872A0);
    sub_24EF80064((uint64_t)&v104, v6, v12);
    swift_release();
  }
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v60 = sub_24EEFD4C4(&qword_2699872B0, &qword_2699872A0);
  uint64_t v102 = v59;
  uint64_t v103 = v60;
  uint64_t v61 = v101;
  swift_getWitnessTable();
  uint64_t v62 = v100;
  (*(void (**)(uint64_t, char *, uint64_t))(v100 + 16))(a2, v15, v61);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v15, v61);
}

uint64_t sub_24EF80F5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FilterAction();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  uint64_t v8 = *(void *)(a1 + 32);
  type metadata accessor for FilterResultsView();
  sub_24EF60314();
  swift_storeEnumTagMultiPayload();
  sub_24EF87510();
  swift_release();
  return sub_24EF29CB8((uint64_t)v4);
}

uint64_t sub_24EF81040()
{
  return sub_24EF80F5C(v0 + 32);
}

uint64_t sub_24EF8104C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for FilterResultsView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24EF810A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EF81254@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v150 = a4;
  unint64_t v147 = a2;
  uint64_t v148 = a3;
  uint64_t v162 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v161 = (char *)v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v170 = (char *)v139 - v13;
  uint64_t v14 = sub_24EF86EF0();
  uint64_t v158 = *(void *)(v14 - 8);
  uint64_t v159 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v157 = (char *)v139 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24EF86E60();
  uint64_t v153 = *(void *)(v16 - 8);
  uint64_t v154 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v152 = (char *)v139 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t OpaqueTypeConformance2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699879D0);
  uint64_t v151 = *(void *)(OpaqueTypeConformance2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeConformance2);
  uint64_t v149 = (char *)v139 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699879D8);
  uint64_t v156 = *(void *)(v167 - 8);
  MEMORY[0x270FA5388](v167);
  uint64_t v164 = (char *)v139 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699879C8);
  uint64_t v160 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v168 = (char *)v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v155 = (char *)v139 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v166 = (char *)v139 - v25;
  uint64_t v26 = type metadata accessor for FilterLayout();
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v146 = (char *)v139 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699879E0);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)v139 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699879E8);
  MEMORY[0x270FA5388](v142);
  uint64_t v144 = (uint64_t)v139 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699879F0);
  MEMORY[0x270FA5388](v143);
  uint64_t v145 = (void *)((char *)v139 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699879C0);
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  uint64_t v172 = (uint64_t)v139 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v171 = (uint64_t)v139 - v36;
  uint64_t v163 = v37;
  uint64_t v169 = v20;
  swift_getTupleTypeMetadata3();
  uint64_t v38 = sub_24EF874A0();
  uint64_t v39 = sub_24EF877D0();
  uint64_t v176 = *(void *)(v39 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v39);
  uint64_t v175 = (char *)v139 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v177 = (char *)v139 - v42;
  long long v43 = *(_OWORD *)(a1 + 16);
  v192[0] = *(_OWORD *)a1;
  v192[1] = v43;
  uint64_t v193 = *(void *)(a1 + 32);
  uint64_t v173 = a6;
  uint64_t v174 = a5;
  uint64_t v44 = type metadata accessor for FilterResultsView();
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  sub_24EF0C628((uint64_t)&v190, (uint64_t)v191);
  sub_24EF0C628((uint64_t)v191, (uint64_t)v192);
  int v45 = sub_24EF0C6B8((uint64_t)v192);
  uint64_t v178 = a7;
  if ((v45 - 2) < 2) {
    goto LABEL_8;
  }
  if (v45)
  {
    uint64_t v50 = nullsub_1(v192);
    uint64_t v51 = *(void *)(v50 + 8);
    uint64_t v48 = *(void *)(v50 + 16);
    uint64_t v47 = *(void *)v50;
    int v141 = *(unsigned __int8 *)(v50 + 24);
    sub_24EF06CC8(v47);
    sub_24EF82330((uint64_t)v191);
    if (!v47)
    {
LABEL_8:
      uint64_t v55 = v176;
      uint64_t v54 = v177;
      unsigned __int8 v56 = v175;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v175, 1, 1, v38);
      swift_getWitnessTable();
      goto LABEL_9;
    }
    int v140 = v51 & 1;
  }
  else
  {
    uint64_t v46 = nullsub_1(v192);
    uint64_t v47 = *(void *)(v46 + 152);
    uint64_t v48 = *(void *)(v46 + 168);
    int v49 = *(unsigned __int8 *)(v46 + 176);
    int v140 = *(unsigned __int8 *)(v46 + 160);
    int v141 = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24EF82330((uint64_t)v191);
  }
  long long v52 = *(_OWORD *)(a1 + 16);
  long long v185 = *(_OWORD *)a1;
  long long v186 = v52;
  uint64_t v187 = *(void *)(a1 + 32);
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  sub_24EF0C628((uint64_t)&v185, (uint64_t)v188);
  sub_24EF0C628((uint64_t)v188, (uint64_t)v189);
  int v53 = sub_24EF0C6B8((uint64_t)v189);
  if ((v53 - 2) < 2)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  if (v53)
  {
    uint64_t v61 = nullsub_1(v189);
    sub_24EF82330((uint64_t)v188);
    if (!*(void *)(v61 + 104)) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v60 = (void *)nullsub_1(v189);
    sub_24EF82330((uint64_t)v188);
    if (!*v60) {
      goto LABEL_7;
    }
  }
  *(void *)uint64_t v30 = sub_24EF86D30();
  *((void *)v30 + 1) = 0;
  v30[16] = 1;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699879F8);
  sub_24EF823B4((long long *)a1, (uint64_t)v147, v148, v47, v140, v48, v141, v174, (uint64_t)&v30[*(int *)(v62 + 44)], v173);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v63 = sub_24EF86FA0();
  sub_24EF86B40();
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v72 = v144;
  sub_24EEF7878((uint64_t)v30, v144, &qword_2699879E0);
  uint64_t v73 = v72 + *(int *)(v142 + 36);
  *(unsigned char *)uint64_t v73 = v63;
  *(void *)(v73 + 8) = v65;
  *(void *)(v73 + 16) = v67;
  *(void *)(v73 + 24) = v69;
  *(void *)(v73 + 32) = v71;
  *(unsigned char *)(v73 + 40) = 0;
  sub_24EEFD568((uint64_t)v30, &qword_2699879E0);
  int v141 = sub_24EF86FC0();
  long long v74 = *(_OWORD *)(a1 + 16);
  long long v185 = *(_OWORD *)a1;
  long long v186 = v74;
  uint64_t v187 = *(void *)(a1 + 32);
  v139[1] = v44;
  sub_24EF60314();
  swift_getKeyPath();
  uint64_t v75 = v146;
  sub_24EF87500();
  swift_release();
  swift_release();
  sub_24EF86AE0();
  uint64_t v148 = sub_24EF86B00();
  uint64_t v76 = *(void *)(v148 - 8);
  unint64_t v147 = *(void (**)(char *, uint64_t))(v76 + 8);
  uint64_t v77 = v76 + 8;
  v147(v75, v148);
  uint64_t v142 = v77;
  sub_24EF86B40();
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v86 = (uint64_t)v145;
  sub_24EEF7878(v72, (uint64_t)v145, &qword_2699879E8);
  uint64_t v87 = v86 + *(int *)(v143 + 36);
  *(unsigned char *)uint64_t v87 = v141;
  *(void *)(v87 + 8) = v79;
  *(void *)(v87 + 16) = v81;
  *(void *)(v87 + 24) = v83;
  *(void *)(v87 + 32) = v85;
  *(unsigned char *)(v87 + 40) = 0;
  sub_24EEFD568(v72, &qword_2699879E8);
  LOBYTE(v72) = sub_24EF86FE0();
  long long v88 = *(_OWORD *)(a1 + 16);
  long long v185 = *(_OWORD *)a1;
  long long v186 = v88;
  uint64_t v187 = *(void *)(a1 + 32);
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  sub_24EF86AF0();
  v147(v75, v148);
  sub_24EF86B40();
  uint64_t v90 = v89;
  uint64_t v92 = v91;
  uint64_t v94 = v93;
  uint64_t v96 = v95;
  uint64_t v97 = v172;
  sub_24EEF7878(v86, v172, &qword_2699879F0);
  uint64_t v98 = v97 + *(int *)(v163 + 36);
  *(unsigned char *)uint64_t v98 = v72;
  *(void *)(v98 + 8) = v90;
  *(void *)(v98 + 16) = v92;
  *(void *)(v98 + 24) = v94;
  *(void *)(v98 + 32) = v96;
  *(unsigned char *)(v98 + 40) = 0;
  sub_24EEFD568(v86, &qword_2699879F0);
  sub_24EF22C1C(v97, v171, &qword_2699879C0);
  uint64_t v99 = sub_24EF86F50();
  uint64_t v145 = v139;
  MEMORY[0x270FA5388](v99);
  uint64_t v100 = v173;
  v139[-4] = v174;
  v139[-3] = v100;
  uint64_t v137 = v150;
  uint64_t v138 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269987A00);
  sub_24EEFD4C4(&qword_269987A08, &qword_269987A00);
  uint64_t v101 = v149;
  sub_24EF86B60();
  uint64_t v102 = sub_24EF86F80();
  long long v103 = *(_OWORD *)(a1 + 16);
  long long v185 = *(_OWORD *)a1;
  long long v186 = v103;
  uint64_t v187 = *(void *)(a1 + 32);
  sub_24EF60314();
  swift_getKeyPath();
  sub_24EF87500();
  swift_release();
  swift_release();
  sub_24EF86AC0();
  double v105 = v104;
  double v107 = v106;
  double v109 = v108;
  double v111 = v110;
  v147(v75, v148);
  uint64_t v112 = v152;
  sub_24EF86E50();
  uint64_t v113 = sub_24EEFD4C4(&qword_269987A10, &qword_2699879D0);
  uint64_t v114 = OpaqueTypeConformance2;
  MEMORY[0x253350280](v102, v112, OpaqueTypeConformance2, v113, v105, v107, v109, v111);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v112, v154);
  (*(void (**)(char *, uint64_t))(v151 + 8))(v101, v114);
  uint64_t v115 = v157;
  sub_24EF86DE0();
  LOBYTE(v102) = sub_24EF86F70();
  char v116 = sub_24EF86F50();
  sub_24EF86F60();
  sub_24EF86F60();
  if (sub_24EF86F60() != v102) {
    sub_24EF86F60();
  }
  sub_24EF86F60();
  char v117 = sub_24EF86F60();
  v139[0] = v38;
  if (v117 != v116) {
    sub_24EF86F60();
  }
  *(void *)&long long v185 = OpaqueTypeConformance2;
  *((void *)&v185 + 1) = v113;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v118 = v155;
  uint64_t v119 = v167;
  uint64_t v120 = v164;
  sub_24EF871B0();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v115, v159);
  (*(void (**)(char *, uint64_t))(v156 + 8))(v120, v119);
  uint64_t v121 = v160;
  uint64_t v122 = v166;
  uint64_t v123 = (*(uint64_t (**)(char *, char *, uint64_t))(v160 + 32))(v166, v118, v169);
  uint64_t v124 = v161;
  (*(void (**)(uint64_t))(a1 + 24))(v123);
  uint64_t v125 = v162;
  uint64_t v126 = *(void (**)(char *, char *, uint64_t))(v162 + 16);
  uint64_t v127 = v174;
  v126(v170, v124, v174);
  uint64_t v164 = *(char **)(v125 + 8);
  ((void (*)(char *, uint64_t))v164)(v124, v127);
  uint64_t v128 = v172;
  sub_24EEF7878(v171, v172, &qword_2699879C0);
  *(void *)&long long v185 = v128;
  uint64_t v129 = v168;
  uint64_t v130 = v122;
  uint64_t v131 = v169;
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v168, v130, v169);
  *((void *)&v185 + 1) = v129;
  uint64_t v132 = v170;
  v126(v124, v170, v127);
  *(void *)&long long v186 = v124;
  v184[0] = v163;
  v184[1] = v131;
  uint64_t v133 = v131;
  v184[2] = v127;
  uint64_t v134 = sub_24EF832B4(&qword_269987A18, &qword_2699879C0, (void (*)(void))sub_24EF8328C);
  uint64_t v179 = v167;
  uint64_t v180 = OpaqueTypeConformance2;
  uint64_t v181 = v134;
  uint64_t v182 = swift_getOpaqueTypeConformance2();
  uint64_t v183 = v173;
  unsigned __int8 v56 = v175;
  sub_24EF7FDA8((uint64_t)&v185, 3uLL, (uint64_t)v184);
  unint64_t v135 = (void (*)(char *, uint64_t))v164;
  ((void (*)(char *, uint64_t))v164)(v132, v127);
  uint64_t v136 = *(void (**)(char *, uint64_t))(v121 + 8);
  v136(v166, v133);
  sub_24EEFD568(v171, &qword_2699879C0);
  v135(v124, v127);
  v136(v168, v133);
  sub_24EEFD568(v172, &qword_2699879C0);
  (*(void (**)(char *, void, uint64_t, void))(*(void *)(v139[0] - 8) + 56))(v56, 0, 1, v139[0]);
  swift_getWitnessTable();
  uint64_t v55 = v176;
  uint64_t v54 = v177;
LABEL_9:
  int64_t v57 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  v57(v54, v56, v39);
  uint64_t v58 = *(void (**)(char *, uint64_t))(v55 + 8);
  v58(v56, v39);
  v189[35] = swift_getWitnessTable();
  swift_getWitnessTable();
  v57(v178, v54, v39);
  return ((uint64_t (*)(char *, uint64_t))v58)(v54, v39);
}